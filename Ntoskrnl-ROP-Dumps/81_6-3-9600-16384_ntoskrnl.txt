Gadgets information
============================================================
0x0000020000270418 : adc ah, al ; adc byte ptr [rax + 0x22], dh ; add byte ptr [rax], al ; add al, cl ; ret 0x11
0x000002000000afcc : adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000000a308 : adc ah, byte ptr [rax] ; pop rax ; call qword ptr [rdx]
0x000002000000b0b0 : adc ah, byte ptr [rax] ; ret 0xff
0x000002000000a2b4 : adc ah, byte ptr [rax] ; salc ; jmp qword ptr [rcx]
0x000002000000a30c : adc ah, byte ptr [rax] ; stosb byte ptr [rdi], al ; call qword ptr [rdx]
0x000002000000afd0 : adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000024d070 : adc ah, byte ptr [rcx] ; or al, byte ptr [rax] ; or al, 6 ; ret
0x00000200001e68ea : adc ah, byte ptr [rdi - 0x74bb001f] ; ret 0x8b4e
0x00000200005665bd : adc ah, ch ; dec dword ptr [rax - 0x7d] ; ret 0x6608
0x000002000028a9b2 : adc al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000026e086 : adc al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x4c9c
0x00000200006d527b : adc al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200004314bb : adc al, 0 ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200004c70a4 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001f0926 : adc al, 0 ; add byte ptr [rax], al ; call 0x2000008cc1a
0x00000200001f0925 : adc al, 0 ; add byte ptr [rax], al ; call 0x2000008cc1b
0x000002000051ec30 : adc al, 0 ; add byte ptr [rax], al ; call 0x2000014dd07
0x00000200000e1e94 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000200001c12dc : adc al, 0 ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x000002000041571d : adc al, 0 ; add rsp, 0x38 ; ret
0x000002000013d2c8 : adc al, 0 ; call 0x2000015dbc8
0x0000020000094c38 : adc al, 0 ; jmp 0x20000094c02
0x0000020000094c37 : adc al, 0 ; jmp 0x20000094c03
0x00000200000e43b0 : adc al, 0 ; jmp 0x200000e4379
0x00000200004c356e : adc al, 0 ; jmp 0x200004c3538
0x000002000015e0b1 : adc al, 0 ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x000002000015e0e4 : adc al, 0 ; ret
0x000002000041f589 : adc al, 0 ; xor al, al ; ret
0x000002000040ec77 : adc al, 0 ; xor eax, eax ; jmp 0x2000040ec44
0x00000200000555e8 : adc al, 0x11 ; add byte ptr es:[rdi], cl ; test al, al ; ret 0x11
0x00000200001c0c29 : adc al, 0x12 ; add byte ptr [rbp + 0x63], cl ; ret 0x8d49
0x000002000019107a : adc al, 0x12 ; add dh, dh ; ret
0x00000200006d7b13 : adc al, 0x16 ; xor ecx, ecx ; call rbx
0x00000200006d6115 : adc al, 0x17 ; xor ecx, ecx ; call rbx
0x000002000007d803 : adc al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003afdcb : adc al, 0x19 ; add dh, dh ; ret
0x00000200006ca30f : adc al, 0x1b ; xor ecx, ecx ; call r9
0x00000200006cbce6 : adc al, 0x1e ; xor ecx, ecx ; call r9
0x00000200006c7deb : adc al, 0x1f ; xor ecx, ecx ; call r9
0x00000200003866ad : adc al, 0x23 ; ret
0x000002000048a031 : adc al, 0x23 ; ret 0xc084
0x00000200004234c3 : adc al, 0x25 ; add byte ptr [rbx + r8 - 0x37], cl ; jmp r9
0x00000200006df9ae : adc al, 0x26 ; xor ecx, ecx ; call rbx
0x00000200006d64ad : adc al, 0x27 ; xor ecx, ecx ; call rbx
0x00000200003b3e2c : adc al, 0x2b ; ret 0x341
0x000002000014d7f5 : adc al, 0x2b ; ret 0xccc3
0x00000200006c702f : adc al, 0x2b ; xor ecx, ecx ; call r9
0x0000020000567846 : adc al, 0x2c ; in al, dx ; inc dword ptr [rax + rdi + 0x2d] ; sti ; call rdx
0x00000200001ee694 : adc al, 0x2d ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006d9363 : adc al, 0x2e ; xor ecx, ecx ; call rbx
0x00000200006e4904 : adc al, 0x2f ; xor ecx, ecx ; call rbx
0x00000200006e2a4b : adc al, 0x32 ; xor ecx, ecx ; call rbx
0x000002000036d896 : adc al, 0x33 ; leave ; test r9, r9 ; jne 0x2000036d8a7 ; ret
0x000002000036d895 : adc al, 0x33 ; leave ; test r9, r9 ; jne 0x2000036d8a8 ; ret
0x0000020000233e98 : adc al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004fc562 : adc al, 0x33 ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200006e79f3 : adc al, 0x36 ; xor ecx, ecx ; call rbx
0x00000200006df052 : adc al, 0x37 ; xor ecx, ecx ; call rbx
0x00000200006cd683 : adc al, 0x3b ; xor ecx, ecx ; call r9
0x00000200006dc260 : adc al, 0x3f ; xor ecx, ecx ; call rbx
0x00000200001c57a2 : adc al, 0x41 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200004462f8 : adc al, 0x43 ; ret 0x65ff
0x000002000023332c : adc al, 0x44 ; cmp eax, ecx ; jb 0x20000233313 ; ret
0x000002000023332b : adc al, 0x44 ; cmp eax, ecx ; jb 0x20000233314 ; ret
0x00000200000ea2f9 : adc al, 0x44 ; cmp ecx, ecx ; jb 0x200000ea2e3 ; ret
0x00000200000ea2f8 : adc al, 0x44 ; cmp ecx, ecx ; jb 0x200000ea2e4 ; ret
0x000002000038c984 : adc al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000010b4aa : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000200003708e9 : adc al, 0x48 ; mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x000002000044ca4b : adc al, 0x48 ; mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200005f3fcf : adc al, 0x48 ; mov ebp, edi ; mov rcx, rbp ; call 0x20000440215
0x000002000012f997 : adc al, 0x48 ; mov edi, dword ptr [rsp + 8] ; ret
0x00000200001fef0c : adc al, 0x48 ; mov edx, edi ; call rax
0x000002000020c8ec : adc al, 0x49 ; add eax, 0x14 ; jmp 0x2000020c922
0x000002000020d0a8 : adc al, 0x49 ; add eax, 0x14 ; jmp 0x2000020d0de
0x000002000022a8b8 : adc al, 0x49 ; and esp, 0xfffffffe ; jmp 0x2000022a8cc
0x00000200001cdea5 : adc al, 0x49 ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000043ae98 : adc al, 0x54 ; ret
0x00000200001647c1 : adc al, 0x59 ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000011ec7f : adc al, 0x64 ; jb 0x2000011ec92 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200002557f6 : adc al, 0x70 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xb
0x00000200001bebde : adc al, 0x72 ; xor al, 0xf7 ; ret 0x820
0x000002000047e30b : adc al, 0x75 ; or bh, bh ; ret
0x0000020000675ad8 : adc al, 0x7c ; ret
0x000002000001e368 : adc al, 0x7f ; ret
0x0000020000645455 : adc al, 0x85 ; sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200006733fb : adc al, 0x88 ; ret
0x0000020000718a7b : adc al, 0x89 ; add eax, 0xffb8a40e ; ret
0x0000020000431269 : adc al, 0x89 ; jo 0x200004312bf ; add esp, 0x20 ; pop rbx ; ret
0x00000200001a87d2 : adc al, 0x89 ; ret
0x000002000014d7f2 : adc al, 0x8b ; adc al, 0x2b ; ret 0xccc3
0x000002000003a1ef : adc al, 0x8b ; ret
0x0000020000509053 : adc al, 0x8b ; ret 0x348
0x00000200007222e7 : adc al, 0x8b ; ret 0xc2ff
0x0000020000167965 : adc al, 0x8e ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000000e6de : adc al, 0xa3 ; ret
0x0000020000287afd : adc al, 0xb ; add byte ptr [rip + 0x14060016], cl ; ret 0xf00d
0x000002000024a971 : adc al, 0xb ; add byte ptr [rip + 0x14069b06], cl ; ret 0xf00d
0x0000020000215d40 : adc al, 0xb ; ret 0x8941
0x000002000056bc7e : adc al, 0xb5 ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x20000437ee6
0x000002000043e8f8 : adc al, 0xbd ; ret 0x65ff
0x000002000025baf9 : adc al, 0xc ; add byte ptr [rsi + rax], cl ; ret
0x000002000019d24d : adc al, 0xc2 ; jmp 0x2000019d260
0x0000020000230057 : adc al, 0xc2 ; jmp 0x2000023005f
0x000002000019eb46 : adc al, 0xc2 ; movzx r8d, r14w ; call r10
0x00000200001c4dcc : adc al, 0xc2 ; test rdx, rdx ; je 0x200001c4ddc ; call rdx
0x00000200005203e6 : adc al, 0xc3 ; mov eax, 2 ; ret
0x00000200005118e8 : adc al, 0xc3 ; ret
0x000002000022ce14 : adc al, 0xc8 ; add rsp, 0x28 ; ret
0x00000200001d8a50 : adc al, 0xca ; or al, 0 ; ret
0x000002000066fc63 : adc al, 0xce ; jmp qword ptr [rcx]
0x00000200004dfff1 : adc al, 0xd1 ; jmp 0x2000002aca9
0x00000200005524a3 : adc al, 0xd5 ; push rsi ; ret
0x000002000027d41c : adc al, 0xe2 ; jo 0x2000027d425 ; clc ; ret
0x000002000049ed6b : adc al, 0xeb ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200005fd298 : adc al, 0xeb ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; ret
0x000002000004c3c8 : adc al, 0xf ; and dword ptr [rbx + 0x38], 0x12 ; add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x000002000049f336 : adc al, 0xf ; mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200003865f7 : adc al, 0xf ; test byte ptr [rbx - 0x74ffffed], bl ; ret 0x8b48
0x0000020000463789 : adc al, 0xf ; test ebp, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000151e9e : adc al, 0xf ; xchg eax, esp ; ret 0x8b48
0x000002000018bf18 : adc al, 0xf2 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000193c45 : adc al, 0xf3 ; push rsi ; ret 0xf10
0x0000020000237959 : adc al, 0xf6 ; ret
0x00000200004c0c1a : adc al, 0xff ; ret
0x0000020000381df7 : adc al, 0xff ; ret 0x8349
0x00000200001e6cbf : adc al, 0xff ; ret 0xc748
0x0000020000717c1b : adc al, 1 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004d9fe6 : adc al, 1 ; inc dword ptr [rcx + 4] ; xor eax, eax ; ret
0x000002000028ead2 : adc al, 6 ; ret 0xf01f
0x0000020000135ef2 : adc al, 8 ; add byte ptr [rbp - 0x74bbcfa9], cl ; ret
0x000002000037ec02 : adc al, 8 ; cmp rdx, r9 ; jae 0x2000037ec15 ; mov eax, ecx ; ret
0x000002000037eea6 : adc al, 8 ; cmp rdx, r9 ; jae 0x2000037eeb9 ; mov eax, ecx ; ret
0x0000020000187025 : adc al, 8 ; lea rcx, qword ptr [rbp + 0x27] ; call 0x20000033288
0x0000020000710899 : adc al, ah ; dec dword ptr [rax - 0x7d] ; ret
0x000002000038a7e4 : adc al, bh ; xchg eax, esp ; push 0 ; ret
0x000002000055c700 : adc al, bpl ; stc ; ret
0x000002000000e710 : adc al, byte ptr [rax + rsi - 0x1fe20463] ; stc ; pop rdx ; ret
0x00000200006e765f : adc al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000005609f : adc al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200003fdaf5 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000219858 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000002c3ea : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000200000c47a6 : adc al, byte ptr [rax] ; add byte ptr [rbx + 0x7500047b], al ; ret
0x0000020000219d74 : adc al, byte ptr [rax] ; add dh, dh ; ret
0x00000200004523c5 : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000531a14 : adc al, byte ptr [rax] ; call rax
0x0000020000455ee2 : adc al, byte ptr [rax] ; mov eax, r10d ; add rsp, 0x28 ; ret
0x0000020000230053 : adc al, byte ptr [rax] ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x20000230063
0x0000020000443d06 : adc al, byte ptr [rax] ; mov rcx, r12 ; call 0x2000006a618
0x00000200004404c2 : adc al, byte ptr [rax] ; mov rcx, r13 ; call 0x2000006a618
0x000002000043e8f2 : adc al, byte ptr [rax] ; mov rcx, r14 ; call 0x2000006a618
0x0000020000448e84 : adc al, byte ptr [rax] ; mov rcx, r15 ; call 0x2000006a618
0x00000200004466c3 : adc al, byte ptr [rax] ; mov rcx, rbp ; call 0x2000006a618
0x0000020000449936 : adc al, byte ptr [rax] ; mov rcx, rbx ; call 0x2000006a618
0x00000200004441ee : adc al, byte ptr [rax] ; mov rcx, rdi ; call 0x2000006a618
0x0000020000448a54 : adc al, byte ptr [rax] ; mov rcx, rsi ; call 0x2000006a618
0x000002000003d3c6 : adc al, byte ptr [rax] ; mov rcx, rsi ; call rbx
0x000002000058673b : adc al, byte ptr [rax] ; movzx ecx, r9w ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000192f84 : adc al, byte ptr [rax] ; ret
0x0000020000273e82 : adc al, byte ptr [rax] ; ret 0x127c
0x0000020000261df6 : adc al, byte ptr [rax] ; sysenter
0x0000020000454aed : adc al, byte ptr [rax] ; xor al, al ; ret
0x000002000040edfe : adc al, byte ptr [rbp + 0x3b] ; ret 0x9175
0x00000200000b41f6 : adc al, byte ptr [rbx] ; add byte ptr [rax], al ; jne 0x200000b4218 ; xor eax, eax ; ret
0x000002000036b808 : adc al, byte ptr [rcx + 0x3b] ; ret
0x00000200005a606d : adc al, byte ptr [rcx + 0x43f9] ; adc dword ptr [rdi], ecx ; ret 0x4789
0x00000200006d964f : adc al, byte ptr [rcx + 3] ; fisttp dword ptr [rcx - 0x7d] ; ret 0x4808
0x000002000044169d : adc al, byte ptr [rcx - 0x78] ; jl 0x200004416cd ; add esi, esi ; ret
0x0000020000152075 : adc al, byte ptr [rcx - 0x7d] ; ret
0x0000020000647d7b : adc al, byte ptr [rcx - 0xa] ; ret
0x00000200003ac86a : adc al, byte ptr [rcx - 0xa] ; ret 0x7507
0x00000200004a654b : adc al, byte ptr [rcx - 1] ; ret
0x0000020000382450 : adc al, byte ptr [rcx - 1] ; ret 0x8348
0x000002000040a565 : adc al, byte ptr [rcx - 1] ; ret 0x8349
0x00000200001442c6 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000588c25 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call qword ptr [rip + 0xcc201]
0x000002000000a398 : adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x000002000024ca29 : adc al, byte ptr [rdi] ; add byte ptr [rip + 0x12162f06], al ; ret 0x700e
0x0000020000516d52 : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; mov eax, 0xc00000f1 ; ret
0x0000020000261df5 : adc al, byte ptr fs:[rax] ; sysenter
0x0000020000192f83 : adc al, byte ptr ss:[rax] ; ret
0x00000200001e6c7c : adc al, ch ; and ch, ch ; jmp 0x1ffc3a1b58c
0x000002000041ac05 : adc al, ch ; jne 0x2000041abd7 ; leave ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001ba500 : adc al, ch ; push rsi ; adc byte ptr [rcx], al ; add bl, ch ; or bh, bh ; ret 0x153b
0x00000200004d1607 : adc al, ch ; ret
0x0000020000376c58 : adc al, ch ; ret 0xd31a
0x000002000055c701 : adc al, ch ; stc ; ret
0x00000200001a1169 : adc al, dh ; cmpxchg qword ptr [r9 + 0x10], rcx ; jne 0x200001a1151 ; ret
0x00000200004d1606 : adc al, r13b ; ret
0x00000200000529d7 : adc bh, bh ; ret
0x0000020000033c9f : adc bh, bh ; ret 0x8348
0x000002000059c071 : adc bh, bh ; ret 0x8349
0x0000020000509041 : adc bh, bh ; ret 0x8966
0x0000020000181e5f : adc bh, bh ; ret 0xd03b
0x000002000057a2d8 : adc bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200003ec0d3 : adc bh, bh ; shr bl, 0xf2 ; mov al, r9b ; ret
0x000002000061663a : adc bh, byte ptr [rbx] ; or dword ptr [rax], eax ; jne 0x2000061664b ; xor al, al ; ret
0x0000020000053509 : adc bh, byte ptr [rbx] ; ret 0x1374
0x000002000065e45e : adc bh, byte ptr [rcx] ; ret
0x00000200006732c9 : adc bh, byte ptr [rdx + 0x62535442] ; call 0x20000294e29
0x000002000012ee43 : adc bh, ch ; ret
0x00000200005ef19c : adc bh, dh ; inc dword ptr [rbp - 0xe58740] ; ret
0x00000200003b58c0 : adc bh, dh ; ret
0x000002000067fa9a : adc bl, ah ; ret 0x48ff
0x00000200001bbaa4 : adc bl, al ; and qword ptr [r8], 0 ; ret
0x00000200003787fe : adc bl, al ; mov al, 8 ; ret
0x00000200000f8614 : adc bl, al ; mov eax, 0xc000000d ; ret
0x00000200003eed3d : adc bl, al ; xor eax, eax ; ret
0x00000200006f3d1a : adc bl, bpl ; add eax, 0xff098b48 ; ret
0x000002000071866a : adc bl, byte ptr [rcx] ; ret
0x00000200006f3d1b : adc bl, ch ; add eax, 0xff098b48 ; ret
0x00000200004b005b : adc bl, ch ; cmovs ecx, dword ptr [rbp - 0x74b3e7b0] ; ret
0x00000200004c0198 : adc bl, ch ; out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x0000020000095e5e : adc bl, ch ; ret 0x894c
0x000002000022ab64 : adc bl, ch ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x000002000002753a : adc bpl, cl ; ret
0x00000200004d216b : adc byte ptr [eax - 0x75], cl ; ret
0x00000200000dc0b9 : adc byte ptr [r10 + rax*8 + 0x1b01175], al ; ret
0x00000200000ca126 : adc byte ptr [r10], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007121b : adc byte ptr [r11 + 0xb4803e0], al ; ret 0x8948
0x000002000006f54c : adc byte ptr [r11 + 0xb4803e0], r8b ; ret 0x8948
0x00000200005cea34 : adc byte ptr [r11], al ; ret
0x00000200005d718d : adc byte ptr [r11], bpl ; ret 0x348
0x000002000049a955 : adc byte ptr [r11], r14b ; shr al, cl ; ret 0xbd54
0x00000200003ec37f : adc byte ptr [r11], r15b ; ret
0x0000020000107cb5 : adc byte ptr [r11], sil ; ror byte ptr [rcx + rcx*4 + 0x49], 0x18 ; ret
0x000002000043ac0a : adc byte ptr [r13 + rcx*4 + 0x75], r9b ; and byte ptr [rax - 0x75], cl ; ret
0x000002000002ba14 : adc byte ptr [r13 - 0x27], sil ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200001a116e : adc byte ptr [r13 - 0x2a], sil ; ret
0x0000020000132790 : adc byte ptr [r13 - 0x75], al ; ret 0x4366
0x00000200000e3da2 : adc byte ptr [r13 - 0x75], cl ; ret
0x00000200004f8eec : adc byte ptr [r14 + rax + 0x48], sil ; add esp, 0x40 ; pop rbx ; ret
0x00000200005a68f6 : adc byte ptr [r14], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000065cddc : adc byte ptr [r15 + rcx - 0x49], r8b ; ret
0x00000200004874c3 : adc byte ptr [r15], cl ; mov dh, 0x43 ; call 0x1ffc2cd001f
0x00000200005201d2 : adc byte ptr [r8 + 0x2b], cl ; ret
0x00000200003f480d : adc byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200000c6d6b : adc byte ptr [r8 + 0x2b], r9b ; ret 0x3b48
0x00000200001039cf : adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x00000200001039dc : adc byte ptr [r8 + 0x3b], cl ; ret 0x9274
0x00000200004466ea : adc byte ptr [r8 + 0x3b], cl ; ret 0x9c77
0x000002000048e2ee : adc byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000159edc : adc byte ptr [r8 + 0xf], cl ; ret
0x00000200001117ec : adc byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200006433f8 : adc byte ptr [r8 + 1], r15b ; pop rbp ; ret
0x00000200000c81ff : adc byte ptr [r8 - 0x3f], cl ; call 0x1ffc22fca19
0x00000200003f4b53 : adc byte ptr [r8 - 0x75], cl ; adc byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200000e2bc9 : adc byte ptr [r8 - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200004d8817 : adc byte ptr [r8 - 0x75], cl ; je 0x200004d884a ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000011b5d5 : adc byte ptr [r8 - 0x75], cl ; or edi, edi ; ret 0xe8eb
0x0000020000722693 : adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000045e0c0 : adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200000b05f7 : adc byte ptr [r8 - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200001db118 : adc byte ptr [r8 - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x0000020000238b65 : adc byte ptr [r8 - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000051ed12 : adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200005c2aa0 : adc byte ptr [r8 - 0x75], r9b ; ret 0x8948
0x000002000022645a : adc byte ptr [r8 - 0x75], r9b ; ret 0xb941
0x00000200005201dc : adc byte ptr [r8 - 0x75], r9b ; xor byte ptr [r8 + 0x2b], cl ; ret
0x0000020000231c33 : adc byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200000dc0c3 : adc byte ptr [r8 - 0x7b108afc], bpl ; ret 0x975
0x00000200000e2c34 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x200000e2c36 ; ret
0x000002000047c58d : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200001220a2 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; cli ; ret 8
0x00000200001e6cb9 : adc byte ptr [r8 - 0x7b], r9b ; div byte ptr [rsp + rdx - 1] ; ret 0xc748
0x0000020000060095 : adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200000dd65c : adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x000002000020e9f6 : adc byte ptr [r8 - 0x7d], cl ; ret 0xeb10
0x00000200004d1f05 : adc byte ptr [r8 - 0x7f], cl ; ret 0xb8
0x00000200005c35de : adc byte ptr [r8 - 1], r9b ; ret 0x3966
0x00000200005c3620 : adc byte ptr [r8 - 1], r9b ; ret 0x8b48
0x00000200003b3204 : adc byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000f7bca : adc byte ptr [r9 + 0x2b], al ; ret 0x2b41
0x000002000014ca9d : adc byte ptr [r9 + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200004f8a5f : adc byte ptr [r9 - 0x4817efb9], cl ; ret
0x000002000060cf11 : adc byte ptr [r9 - 0x4f], al ; add dword ptr [rsi - 1], esp ; ret 0x4166
0x00000200004f51ea : adc byte ptr [r9 - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000200001897c8 : adc byte ptr [r9 - 0x7c], al ; ret 0xd075
0x0000020000191ff1 : adc byte ptr [r9 - 0x7c], al ; vpsubusb ymm13, ymm1, ymm1 ; ret 0xfff2
0x00000200001711ab : adc byte ptr [r9 - 0x7c], r8b ; ret
0x00000200001a9e47 : adc byte ptr [r9 - 0x7c], r8b ; ret 0xd075
0x00000200001895ca : adc byte ptr [r9 - 0x7c], r8b ; ret 0xd275
0x0000020000121e2e : adc byte ptr [r9 - 0xa], r8b ; rol byte ptr [rcx], 0xf ; test dword ptr [rcx], eax ; ret
0x0000020000397984 : adc byte ptr [r9 - 1], r8b ; ret 0x8349
0x000002000019d1f9 : adc byte ptr [rax + 0x10], al ; xor eax, eax ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000027041a : adc byte ptr [rax + 0x22], dh ; add byte ptr [rax], al ; add al, cl ; ret 0x11
0x00000200000f9191 : adc byte ptr [rax + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200004ac5cb : adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000713d2b : adc byte ptr [rax + 0x2b], cl ; enter 0x148, 0xd ; sub bl, al ; ret
0x00000200003f438c : adc byte ptr [rax + 0x2b], cl ; fimul dword ptr [rax - 0x75] ; ret
0x00000200005201d3 : adc byte ptr [rax + 0x2b], cl ; ret
0x00000200006fb071 : adc byte ptr [rax + 0x2b], cl ; ret 0x349
0x00000200000c6d6c : adc byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200003f480e : adc byte ptr [rax + 0x2b], cl ; ret 0x8348
0x00000200003f43be : adc byte ptr [rax + 0x2b], cl ; ret 0xa348
0x000002000007ae81 : adc byte ptr [rax + 0x33], cl ; add cl, byte ptr [rcx + 0x23] ; ret 0x3148
0x000002000009c0c7 : adc byte ptr [rax + 0x39], cl ; add dword ptr [rsp - 1], esi ; ret 0x8348
0x00000200003a4e17 : adc byte ptr [rax + 0x3b660000], al ; ret 0x850f
0x00000200000becb9 : adc byte ptr [rax + 0x3b], cl ; ret
0x00000200000ab6ed : adc byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000c0769 : adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200001039dd : adc byte ptr [rax + 0x3b], cl ; ret 0x9274
0x00000200004466eb : adc byte ptr [rax + 0x3b], cl ; ret 0x9c77
0x000002000020f0aa : adc byte ptr [rax + 0x3b], cl ; ret 0xb75
0x000002000036687d : adc byte ptr [rax + 0x3b], cl ; ret 0xe875
0x00000200004e6fc6 : adc byte ptr [rax + 0x3b], cl ; ret 0xf072
0x000002000045e604 : adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x00000200000ab6ec : adc byte ptr [rax + 0x3b], r9b ; ret 0x840f
0x00000200002127bb : adc byte ptr [rax + 0x63], cl ; ret
0x000002000001f9a0 : adc byte ptr [rax + 0x7e], bh ; ret
0x000002000043cd45 : adc byte ptr [rax + 0xb], cl ; ret 0x3348
0x000002000065ac52 : adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000674b76 : adc byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000159edd : adc byte ptr [rax + 0xf], cl ; ret
0x00000200001117ed : adc byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200006433f9 : adc byte ptr [rax + 1], bh ; pop rbp ; ret
0x00000200001bcf09 : adc byte ptr [rax + 3], cl ; ret
0x000002000044201e : adc byte ptr [rax + 3], cl ; ret 0x348
0x000002000005771c : adc byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200001e1c1d : adc byte ptr [rax + 3], cl ; ret 0x3b4c
0x00000200001f5941 : adc byte ptr [rax + 3], cl ; ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x00000200000e1f06 : adc byte ptr [rax + 3], cl ; ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x000002000044201d : adc byte ptr [rax + 3], r9b ; ret 0x348
0x000002000066f845 : adc byte ptr [rax + r9*4 + 0x74], r8b ; and al, 0x20 ; call r15
0x0000020000205a2e : adc byte ptr [rax + rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000060d6e7 : adc byte ptr [rax + rax], al ; add byte ptr [rax], al ; setne al ; ret
0x000002000067ab10 : adc byte ptr [rax + rax], ch ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004ad4cc : adc byte ptr [rax + rcx*4 + 0x6a], al ; adc byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000002000066f846 : adc byte ptr [rax + rcx*4 + 0x74], al ; and al, 0x20 ; call r15
0x0000020000090566 : adc byte ptr [rax + rdi - 0x41], al ; ret
0x00000200000c8200 : adc byte ptr [rax - 0x3f], cl ; call 0x1ffc22fca18
0x00000200000a01d8 : adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004c8faf : adc byte ptr [rax - 0x3fffff45], bh ; ret
0x0000020000486506 : adc byte ptr [rax - 0x3fffffe9], bh ; ret
0x00000200001d787c : adc byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200001039cc : adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x00000200000ab6e9 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x3b], r9b ; ret 0x840f
0x00000200004d7fdb : adc byte ptr [rax - 0x73], cl ; add eax, 0x5089d ; ret
0x00000200000b62cc : adc byte ptr [rax - 0x73], cl ; add eax, 0xaaf0c ; ret
0x00000200006f59a5 : adc byte ptr [rax - 0x73], cl ; add eax, 0xff9d96af ; ret
0x00000200004d8c66 : adc byte ptr [rax - 0x7400000b], al ; ret
0x000002000061156d : adc byte ptr [rax - 0x74fff881], al ; ret
0x00000200003f4b54 : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200004466e7 : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9c77
0x0000020000472868 : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x000002000020e985 : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x000002000002aaea : adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200004c0cb5 : adc byte ptr [rax - 0x75], cl ; fdivr st(7) ; ret 0xe2c1
0x000002000043a57b : adc byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000043b24b : adc byte ptr [rax - 0x75], cl ; iretd ; call 0x20000063d9b
0x00000200006729c1 : adc byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200004d8818 : adc byte ptr [rax - 0x75], cl ; je 0x200004d8849 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000de0e2 : adc byte ptr [rax - 0x75], cl ; jl 0x200000de113 ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000010ca11 : adc byte ptr [rax - 0x75], cl ; jl 0x2000010ca42 ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200001370a2 : adc byte ptr [rax - 0x75], cl ; jl 0x200001370d3 ; sbb byte ptr [rcx - 0x75], al ; ret 0x44c3
0x000002000020005f : adc byte ptr [rax - 0x75], cl ; jl 0x20000200090 ; sbb byte ptr [rcx - 0x76], al ; ret 0xccc3
0x000002000046bdaf : adc byte ptr [rax - 0x75], cl ; jl 0x2000046bde0 ; sbb byte ptr [rcx - 0x75], al ; ret 0x66c3
0x000002000064ca84 : adc byte ptr [rax - 0x75], cl ; jl 0x2000064cab5 ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000064d0d7 : adc byte ptr [rax - 0x75], cl ; jl 0x2000064d108 ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000048ebb5 : adc byte ptr [rax - 0x75], cl ; jmp 0x200490b7704
0x00000200001ddc30 : adc byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005dde58 : adc byte ptr [rax - 0x75], cl ; or eax, 0xffd018d0 ; call rax
0x00000200003fff10 : adc byte ptr [rax - 0x75], cl ; or eax, 0xffedf818 ; call rax
0x000002000011b5d6 : adc byte ptr [rax - 0x75], cl ; or edi, edi ; ret 0xe8eb
0x00000200000ec29c : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000115ea7 : adc byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4518
0x00000200000b4b74 : adc byte ptr [rax - 0x75], cl ; ret
0x0000020000722694 : adc byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200006d5ab8 : adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c72fe : adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x000002000017804e : adc byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000021654f : adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200005c2aa1 : adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000133f78 : adc byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000355da : adc byte ptr [rax - 0x75], cl ; ret 0xb8c3
0x000002000022645b : adc byte ptr [rax - 0x75], cl ; ret 0xb941
0x00000200000a0864 : adc byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200004c0f97 : adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x000002000036613e : adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000020e80b : adc byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200002274c7 : adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200000a0f19 : adc byte ptr [rax - 0x75], cl ; ret 0xff48
0x000002000045e0c1 : adc byte ptr [rax - 0x75], cl ; ret 0xffba
0x000002000043a07e : adc byte ptr [rax - 0x75], cl ; retf ; call 0x20000063d9b
0x00000200006728ad : adc byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200000b05f8 : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x000002000044447f : adc byte ptr [rax - 0x75], cl ; shr eax, cl ; push rax ; ret 9
0x00000200001db119 : adc byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x00000200005201dd : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x2b], cl ; ret
0x0000020000238b66 : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200006dad9b : adc byte ptr [rax - 0x75], dh ; ret
0x00000200001ddc2f : adc byte ptr [rax - 0x75], r9b ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200003d1fea : adc byte ptr [rax - 0x75], r9b ; ret
0x0000020000622da8 : adc byte ptr [rax - 0x77], cl ; and byte ptr [r9 - 0xa], r8b ; ret 0x7401
0x0000020000041765 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x1175
0x00000200001156ea : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x2874
0x0000020000028e02 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x3a75
0x000002000011ffcb : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x3f75
0x000002000008458f : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x4475
0x000002000009645f : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x4b75
0x00000200000e1638 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x5074
0x00000200002071a8 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x675
0x000002000003bab6 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000415aa : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x875
0x0000020000066a7f : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x0000020000231c34 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000048b490 : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200003d1a36 : adc byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret
0x00000200000dc0c4 : adc byte ptr [rax - 0x7b108afc], ch ; ret 0x975
0x00000200001e6cba : adc byte ptr [rax - 0x7b], cl ; div byte ptr [rsp + rdx - 1] ; ret 0xc748
0x00000200000e2c35 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000e2c35 ; ret
0x000002000047c58e : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200001220a3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; cli ; ret 8
0x00000200000361c5 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000060096 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200001a9d66 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200004ad36d : adc byte ptr [rax - 0x7cb7efbe], cl ; ret 0x4520
0x000002000043154b : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc37e5d7a
0x0000020000443d80 : adc byte ptr [rax - 0x7d], cl ; loope 0x20000443d85 ; call 0x20000068fd8
0x00000200004f406a : adc byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0xf6 ; ret 0x483f
0x00000200000b0585 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000200000a6e8c : adc byte ptr [rax - 0x7d], cl ; ret 0x41f0
0x00000200002147cb : adc byte ptr [rax - 0x7d], cl ; ret 0x4408
0x00000200004ad370 : adc byte ptr [rax - 0x7d], cl ; ret 0x4520
0x000002000039b1bb : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000020000426734 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004f63e5 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000200000dd65d : adc byte ptr [rax - 0x7d], cl ; ret 0x4918
0x000002000022aef2 : adc byte ptr [rax - 0x7d], cl ; ret 0x4930
0x0000020000492d7e : adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000200005f82aa : adc byte ptr [rax - 0x7d], cl ; ret 0x4c20
0x000002000012ec50 : adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200004ad4d0 : adc byte ptr [rax - 0x7d], cl ; ret 0xe920
0x000002000020d69b : adc byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000200002147ca : adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000006a771 : adc byte ptr [rax - 0x7f], cl ; ret
0x0000020000060876 : adc byte ptr [rax - 0x7f], cl ; ret 0x4e8
0x00000200004d1f06 : adc byte ptr [rax - 0x7f], cl ; ret 0xb8
0x00000200005c35df : adc byte ptr [rax - 1], cl ; ret 0x3966
0x000002000022a3eb : adc byte ptr [rax - 1], cl ; ret 0x8948
0x0000020000229bb5 : adc byte ptr [rax - 1], cl ; ret 0x8949
0x00000200005c3621 : adc byte ptr [rax - 1], cl ; ret 0x8b48
0x00000200004babf6 : adc byte ptr [rax - 1], cl ; ret 0xc2eb
0x0000020000134887 : adc byte ptr [rax - 1], cl ; ret 0xf48
0x0000020000141c6f : adc byte ptr [rax - 1], cl ; ret 0xff49
0x00000200003f9d51 : adc byte ptr [rax - 9], cl ; ret
0x0000020000205a2d : adc byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x000002000028d772 : adc byte ptr [rax], al ; adc esp, dword ptr [rdi + rcx] ; sysenter
0x000002000013e8d7 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fdb3b : adc byte ptr [rax], al ; add al, al ; add rsp, 0x28 ; ret
0x0000020000515479 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000121e90 : adc byte ptr [rax], al ; add al, al ; jmp 0x200001ae141
0x00000200004321d5 : adc byte ptr [rax], al ; add al, ch ; ret
0x00000200003951e0 : adc byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200006fb4b9 : adc byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xc148
0x0000020000088b76 : adc byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8be9
0x000002000017488d : adc byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8d48
0x000002000020f8f7 : adc byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb841
0x0000020000722d58 : adc byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200006d5079 : adc byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200004bd26d : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x930f
0x000002000039432f : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x00000200006dd59d : adc byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000050bb96 : adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000520191 : adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x48c3
0x00000200006fb261 : adc byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc392fb7d
0x000002000020be65 : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8348
0x00000200001cae0e : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000c3d96 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000159f44 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200003d7530 : adc byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xe181
0x00000200003b3205 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000716750 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001bc156 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000158376
0x00000200000e1e6c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000c28c3 : adc byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret
0x0000020000630a7e : adc byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200001d29e5 : adc byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x000002000046f28a : adc byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200000fe549 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000053e28c : adc byte ptr [rax], al ; add byte ptr [rbx + 0x234104e2], al ; ret 0x345
0x000002000056b075 : adc byte ptr [rax], al ; add byte ptr [rbx], al ; sal dword ptr [rbx], 1 ; sal bh, 1 ; ret 0xc000
0x000002000045c075 : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000066c72c : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2173
0x00000200006513a6 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000006cc15 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000085ad4 : adc byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 0x2b], 1 ; ret 0x8d4a
0x00000200002953d3 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000022961d : adc byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r9 - 0x7c], al ; ret
0x0000020000090697 : adc byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000090085 : adc byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; scasb al, byte ptr [rdi] ; ret
0x00000200000c5edd : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x0000020000029c61 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; test ecx, esp ; ret 0x13
0x0000020000682212 : adc byte ptr [rax], al ; add dh, dh ; ret
0x000002000067ea9a : adc byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x0000020000107e22 : adc byte ptr [rax], al ; add rcx, rdx ; jmp rcx
0x00000200001cc77a : adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004751ed : adc byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000235f41 : adc byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000157f60 : adc byte ptr [rax], al ; add rsp, 8 ; ret
0x000002000019a050 : adc byte ptr [rax], al ; call 0x200000962c4
0x00000200001ccf78 : adc byte ptr [rax], al ; call 0x200001d9190
0x000002000026dd56 : adc byte ptr [rax], al ; call qword ptr fs:[rax]
0x000002000026d42a : adc byte ptr [rax], al ; clc ; ret
0x00000200001e80b7 : adc byte ptr [rax], al ; jb 0x200001e8096 ; mov rcx, rbx ; call 0x200000a4309
0x00000200001d2191 : adc byte ptr [rax], al ; jmp 0x200001d21a2
0x00000200004db71c : adc byte ptr [rax], al ; jmp 0x200004db6e6
0x000002000003da53 : adc byte ptr [rax], al ; jne 0x2000003da5f ; mov eax, edx ; ret
0x000002000003da53 : adc byte ptr [rax], al ; jne 0x2000003da60 ; mov eax, edx ; ret
0x000002000009db48 : adc byte ptr [rax], al ; jne 0x2000009db77 ; xor al, al ; ret
0x00000200001cc8b4 : adc byte ptr [rax], al ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000780c6 : adc byte ptr [rax], al ; mov rcx, rdi ; call 0x2000011439b
0x000002000019d249 : adc byte ptr [rax], al ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000019d264
0x000002000026d3ca : adc byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; xlatb ; adc byte ptr [rax], al ; pushfq ; ret
0x000002000026d426 : adc byte ptr [rax], al ; push rbp ; ficom dword ptr [rax] ; add al, bh ; ret
0x000002000026d3ce : adc byte ptr [rax], al ; pushfq ; ret
0x0000020000068fb3 : adc byte ptr [rax], al ; ret
0x000002000026d256 : adc byte ptr [rax], al ; ret 0x26
0x000002000024162e : adc byte ptr [rax], al ; sysenter
0x00000200001d29f1 : adc byte ptr [rax], al ; test eax, eax ; setne al ; ret
0x00000200004fd021 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047c5f5 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000687b2 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000074d46 : adc byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000135856 : adc byte ptr [rax], bh ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x00000200001363fc : adc byte ptr [rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xe907
0x00000200004f49f0 : adc byte ptr [rax], dh ; or eax, dword ptr [rax] ; ret
0x0000020000135855 : adc byte ptr [rax], dil ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x00000200004805d4 : adc byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051e134 : adc byte ptr [rax], dl ; ret 0xb8ff
0x00000200006e7cb2 : adc byte ptr [rbp + 0x11096], cl ; add byte ptr [rbx], dh ; leave ; call rbx
0x00000200000e7713 : adc byte ptr [rbp + 0x1b], dh ; add rsp, 0x28 ; ret
0x00000200000e7712 : adc byte ptr [rbp + 0x1b], sil ; add rsp, 0x28 ; ret
0x0000020000095e3c : adc byte ptr [rbp + 0x22], dh ; mov qword ptr [rax], r8 ; ret
0x000002000040e50a : adc byte ptr [rbp + 0x2b], al ; ret
0x0000020000673fa3 : adc byte ptr [rbp + 0x3b], al ; ret 0xef72
0x00000200001c0b69 : adc byte ptr [rbp + 0x3b], cl ; ret
0x00000200003e668d : adc byte ptr [rbp + 0x40840fd2], al ; ret
0x00000200003ac8fb : adc byte ptr [rbp + 0x491d74c0], al ; add eax, edx ; jmp 0x200003ac946
0x00000200003ac8fa : adc byte ptr [rbp + 0x491d74c0], al ; add eax, edx ; jmp 0x200003ac947
0x00000200006e8255 : adc byte ptr [rbp + 0x60096], cl ; add byte ptr [rbx], dh ; leave ; call rbx
0x000002000012d0fd : adc byte ptr [rbp + 0xb0875c2], al ; ret 0x3345
0x000002000002a7dc : adc byte ptr [rbp + 0xf], al ; mov dh, 0xc0 ; cmovl r8d, r10d ; jmp 0x2000002a7ab
0x00000200006c711d : adc byte ptr [rbp + 3], cl ; ret
0x00000200003b3d8c : adc byte ptr [rbp + 3], cl ; ret 0x48d
0x0000020000602eda : adc byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200003ac187 : adc byte ptr [rbp + 3], dh ; mov eax, edx ; ret
0x00000200000ff7e4 : adc byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200000f27d7 : adc byte ptr [rbp + 5], dh ; mov qword ptr [rdx + 8], r8 ; ret
0x00000200000f27d6 : adc byte ptr [rbp + 5], sil ; mov qword ptr [rdx + 8], r8 ; ret
0x000002000043ac0b : adc byte ptr [rbp + rcx*4 + 0x75], cl ; and byte ptr [rax - 0x75], cl ; ret
0x000002000002ba15 : adc byte ptr [rbp - 0x27], dh ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200004b2098 : adc byte ptr [rbp - 0x28], al ; movdqu xmmword ptr [rbp - 0x18], xmm0 ; call r14
0x00000200001a116f : adc byte ptr [rbp - 0x2a], dh ; ret
0x00000200007131a8 : adc byte ptr [rbp - 0x47], al ; call qword ptr [rbx]
0x0000020000132791 : adc byte ptr [rbp - 0x75], al ; ret 0x4366
0x00000200006ccda4 : adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000022633d : adc byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx + 0x3b] ; ret
0x00000200002274c1 : adc byte ptr [rbp - 0x75], cl ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200000e3da3 : adc byte ptr [rbp - 0x75], cl ; ret
0x00000200006e3174 : adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000014c510 : adc byte ptr [rbp - 0x77], al ; sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x00000200004674a4 : adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x000002000040de07 : adc byte ptr [rbp - 1], dh ; ret 0xd33b
0x00000200003ab30e : adc byte ptr [rbx + 0x19], dl ; add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x348
0x00000200006c5913 : adc byte ptr [rbx + 0x47409f9], al ; mov eax, edx ; jmp 0x200006c5973
0x00000200004ff29f : adc byte ptr [rbx + 0x69de8df], cl ; ret
0x00000200000711b6 : adc byte ptr [rbx + 0xb4803e0], al ; ret
0x000002000006f54d : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8948
0x000002000006f6b2 : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8949
0x00000200000f7f1c : adc byte ptr [rbx + 0xb4903e0], al ; ret 0x8949
0x00000200000ced08 : adc byte ptr [rbx + 3], dh ; mov al, 1 ; ret
0x00000200003f86f0 : adc byte ptr [rbx + 5], dh ; mov eax, r8d ; jmp 0x200003f86c2
0x0000020000494109 : adc byte ptr [rbx + rbp - 1], dh ; ret 0x8349
0x000002000050fff4 : adc byte ptr [rbx - 0x3274b72a], cl ; call 0x20000139865
0x00000200000f7f74 : adc byte ptr [rbx - 0x74b6fc1f], al ; ret 0xb49
0x000002000067e8ca : adc byte ptr [rbx - 0x7bbeb7bf], cl ; ret 0x674
0x000002000067e8c9 : adc byte ptr [rbx - 0x7bbeb7bf], r9b ; ret 0x674
0x000002000050bb88 : adc byte ptr [rbx - 0x7eb6f7bd], cl ; ret 0x1000
0x00000200006dfe3a : adc byte ptr [rbx], 0 ; add byte ptr [rbx + 0x2341ffca], al ; ret
0x000002000020aa69 : adc byte ptr [rbx], ah ; ret
0x000002000046f016 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000adbb6 : adc byte ptr [rbx], al ; ret
0x00000200004a8fd5 : adc byte ptr [rbx], al ; ret 0x5f41
0x0000020000157af1 : adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200003ec380 : adc byte ptr [rbx], bh ; ret
0x00000200003d7e7f : adc byte ptr [rbx], bh ; ret 0x820f
0x0000020000598b93 : adc byte ptr [rbx], bh ; ret 0xee72
0x000002000045dfd3 : adc byte ptr [rbx], bpl ; ret
0x000002000045dfd4 : adc byte ptr [rbx], ch ; ret
0x00000200005d718e : adc byte ptr [rbx], ch ; ret 0x348
0x0000020000598d8c : adc byte ptr [rbx], cl ; add byte ptr [rax], al ; inc edx ; jmp 0x20000598d64
0x00000200006232af : adc byte ptr [rbx], dh ; ret
0x000002000039a45b : adc byte ptr [rbx], dh ; ret 0x789
0x0000020000107cb6 : adc byte ptr [rbx], dh ; ror byte ptr [rcx + rcx*4 + 0x49], 0x18 ; ret
0x000002000019d1fb : adc byte ptr [rbx], dh ; sal bl, 0xf ; jg 0x2000019d20b ; ret
0x000002000049a956 : adc byte ptr [rbx], dh ; shr al, cl ; ret 0xbd54
0x00000200004fd576 : adc byte ptr [rbx], dh ; shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x200004fd590 ; ret
0x00000200006fa2a4 : adc byte ptr [rbx], dl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200000adbb5 : adc byte ptr [rbx], r8b ; ret
0x000002000019d1fa : adc byte ptr [rbx], sil ; sal bl, 0xf ; jg 0x2000019d20c ; ret
0x00000200004d5261 : adc byte ptr [rcx + 0x18], al ; movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x00000200000f7bcb : adc byte ptr [rcx + 0x2b], al ; ret 0x2b41
0x000002000007aacc : adc byte ptr [rcx + 0x33], cl ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200000880b2 : adc byte ptr [rcx + 0x33], cl ; add ecx, dword ptr [rax + 0x23] ; ret
0x000002000014a955 : adc byte ptr [rcx + 0x39], al ; or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200000b4513 : adc byte ptr [rcx + 0x3b], al ; ret
0x00000200000eb163 : adc byte ptr [rcx + 0x3b], al ; ret 0x6873
0x000002000057a2de : adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200001ed69e : adc byte ptr [rcx + 0x3b], cl ; enter 0x575, 0x41 ; mov eax, edx ; jmp 0x200001ed6b3
0x0000020000229d5c : adc byte ptr [rcx + 0x3b], cl ; ret 0x4875
0x00000200000fc7ea : adc byte ptr [rcx + 0x3b], cl ; ret 0x774
0x00000200000780b3 : adc byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x00000200004d3121 : adc byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x0000020000663f33 : adc byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200001a87cc : adc byte ptr [rcx + 0x418bc745], cl ; adc al, 0x89 ; ret
0x00000200006c8dc2 : adc byte ptr [rcx + 0x45886], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000026d234 : adc byte ptr [rcx + 0x4c], ch ; add byte ptr [rdx + 0x4004c69], al ; ret 0x26
0x000002000039b1b5 : adc byte ptr [rcx + 0x568b4801], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000002000000d33e : adc byte ptr [rcx + 0x79682177], bh ; ret
0x00000200000b450e : adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x00000200000a29b4 : adc byte ptr [rcx + 0xf], al ; ret
0x0000020000105e70 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xff41
0x00000200000f62fc : adc byte ptr [rcx + 3], al ; ret 0xb70f
0x000002000050cfe6 : adc byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200004ba642 : adc byte ptr [rcx + 3], cl ; ret 0x69e9
0x0000020000110b8c : adc byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x7b], 0xc0 ; jle 0x20000110b9f ; ret
0x000002000050cfe5 : adc byte ptr [rcx + 3], r9b ; ret 0x3b49
0x0000020000383ec9 : adc byte ptr [rcx + rcx - 0xa], dh ; ret
0x00000200005dd470 : adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x000002000059d4c0 : adc byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x20 ; call 0x200004997cc
0x000002000014ca9e : adc byte ptr [rcx + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000008cca3 : adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200005202ad : adc byte ptr [rcx - 0x3fccefbf], cl ; ret
0x00000200004f8a60 : adc byte ptr [rcx - 0x4817efb9], cl ; ret
0x000002000060cf12 : adc byte ptr [rcx - 0x4f], al ; add dword ptr [rsi - 1], esp ; ret 0x4166
0x00000200001f05ca : adc byte ptr [rcx - 0x73], al ; inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x00000200001b7466 : adc byte ptr [rcx - 0x73], cl ; add ecx, dword ptr [rcx + 0x3b] ; ret 0xb673
0x0000020000110f78 : adc byte ptr [rcx - 0x74b7e7bf], cl ; ret 0xc148
0x000002000045dfd0 : adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x000002000008c2c7 : adc byte ptr [rcx - 0x75], al ; ret
0x00000200001e6d92 : adc byte ptr [rcx - 0x75], al ; ret 0x3b48
0x00000200006195d7 : adc byte ptr [rcx - 0x75], al ; ret 0x48c3
0x000002000023004a : adc byte ptr [rcx - 0x75], al ; ret 0x8d4c
0x000002000020aac2 : adc byte ptr [rcx - 0x75], al ; ret 0xccc3
0x00000200004b8be8 : adc byte ptr [rcx - 0x75], al ; rol ebx, -1 ; ret 0x8349
0x00000200005cc4a1 : adc byte ptr [rcx - 0x75], cl ; imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x0000020000372f05 : adc byte ptr [rcx - 0x75], cl ; iretd ; call rax
0x000002000004a634 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000004a65a ; mov rsp, r11 ; pop rdi ; ret
0x00000200000cf7ae : adc byte ptr [rcx - 0x75], cl ; jae 0x200000cf7d4 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000106f67 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000106f8d ; mov rsp, r11 ; pop rdi ; ret
0x000002000011fd75 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000011fd9b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000122809 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000122837 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c78be : adc byte ptr [rcx - 0x75], cl ; jae 0x200001c78e4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fbbb4 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001fbbda ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f257 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000020f27d ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f384 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000020f3aa ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f430 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000020f456 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000236a2f : adc byte ptr [rcx - 0x75], cl ; jae 0x20000236a65 ; mov rsp, r11 ; pop rdi ; ret
0x000002000037583c : adc byte ptr [rcx - 0x75], cl ; jae 0x20000375862 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003a582e : adc byte ptr [rcx - 0x75], cl ; jae 0x200003a5854 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003d8e71 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003d8e97 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f729b : adc byte ptr [rcx - 0x75], cl ; jae 0x200003f72c9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004431b5 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004431db ; mov rsp, r11 ; pop rdi ; ret
0x00000200004592df : adc byte ptr [rcx - 0x75], cl ; jae 0x20000459305 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046341b : adc byte ptr [rcx - 0x75], cl ; jae 0x20000463441 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004684c0 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004684e6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047c9ed : adc byte ptr [rcx - 0x75], cl ; jae 0x2000047ca13 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004823d5 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000048240b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000488c6a : adc byte ptr [rcx - 0x75], cl ; jae 0x20000488c98 ; mov rsp, r11 ; pop rdi ; ret
0x000002000049afeb : adc byte ptr [rcx - 0x75], cl ; jae 0x2000049b011 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049e64e : adc byte ptr [rcx - 0x75], cl ; jae 0x2000049e674 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a4729 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004a474f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a8d36 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004a8d64 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004abb1a : adc byte ptr [rcx - 0x75], cl ; jae 0x200004abb40 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004abe4c : adc byte ptr [rcx - 0x75], cl ; jae 0x200004abe72 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004bdf8f : adc byte ptr [rcx - 0x75], cl ; jae 0x200004bdfc5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004be220 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004be246 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c7951 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004c797f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004cdf63 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004cdf89 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d5212 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004d5238 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004df46d : adc byte ptr [rcx - 0x75], cl ; jae 0x200004df493 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ee1a0 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004ee1c6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fc44e : adc byte ptr [rcx - 0x75], cl ; jae 0x200004fc474 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051a6c5 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000051a6f3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051de79 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000051de9f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005c6324 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005c635a ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d2d91 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005d2db7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d21c : adc byte ptr [rcx - 0x75], cl ; jae 0x2000060d242 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d424 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000060d44a ; mov rsp, r11 ; pop rdi ; ret
0x000002000062dad8 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000062dafe ; mov rsp, r11 ; pop rbp ; ret
0x000002000070dcdb : adc byte ptr [rcx - 0x75], cl ; jae 0x2000070dd01 ; mov rsp, r11 ; pop rbp ; ret
0x000002000008a2a9 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000008a2cf ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f622f : adc byte ptr [rcx - 0x75], cl ; jnp 0x200000f625d ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f65b7 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200000f65e5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000fd68a : adc byte ptr [rcx - 0x75], cl ; jnp 0x200000fd6b0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000100577 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001005a5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010f32e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000010f354 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001169b6 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001169dc ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ab48 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011ab76 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000122ea5 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000122ecb ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ebde : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000013ec04 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d5754 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001d577a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000202f04 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000202f3a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204482 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200002044b0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e7da8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200003e7dce ; mov rsp, r11 ; pop rbp ; ret
0x0000020000495c25 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000495c4b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000499794 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004997c2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004a2482 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004a24b0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c5c0a : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004c5c30 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cba00 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004cba26 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cfb12 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004cfb48 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d68dc : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004d690a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f203d : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004f2063 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f22d4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004f230a ; mov rsp, r11 ; pop rbp ; ret
0x000002000050329f : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005032c5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005051c4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005051ea ; mov rsp, r11 ; pop rbp ; ret
0x0000020000510f6d : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000510fa3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051c45f : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000051c485 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051fbbd : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000051fbf3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005cd37c : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005cd3a2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ea9b9 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005ea9df ; mov rsp, r11 ; pop rbp ; ret
0x0000020000609a73 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000609a99 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000609c4a : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000609c70 ; mov rsp, r11 ; pop rbp ; ret
0x000002000060be3a : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000060be60 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061bd4e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000061bd74 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000621393 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006213b9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000649362 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000649388 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ef086 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006ef0ac ; mov rsp, r11 ; pop rbp ; ret
0x00000200006fc3fd : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006fc423 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007016fd : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000701723 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007050a5 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200007050cb ; mov rsp, r11 ; pop rbp ; ret
0x000002000070ce6c : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000070ce92 ; mov rsp, r11 ; pop rbp ; ret
0x000002000070d6e0 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000070d706 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717f19 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000717f3f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f51eb : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000200000ad502 : adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006e5044 : adc byte ptr [rcx - 0x75], cl ; ret 0x180f
0x00000200006d961b : adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x000002000005e183 : adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000722707 : adc byte ptr [rcx - 0x75], cl ; ret 0x86e9
0x00000200004b2d41 : adc byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200006d0a88 : adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000653875 : adc byte ptr [rcx - 0x75], cl ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200000f9f7d : adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x0000020000215153 : adc byte ptr [rcx - 0x77], cl ; push rcx ; ret
0x00000200000a40cb : adc byte ptr [rcx - 0x7c], al ; ret
0x00000200001897c9 : adc byte ptr [rcx - 0x7c], al ; ret 0xd075
0x00000200001895cb : adc byte ptr [rcx - 0x7c], al ; ret 0xd275
0x0000020000191ff2 : adc byte ptr [rcx - 0x7c], al ; vpsubusb ymm13, ymm1, ymm1 ; ret 0xfff2
0x00000200000a40ca : adc byte ptr [rcx - 0x7c], r8b ; ret
0x00000200003c12ed : adc byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200006cba44 : adc byte ptr [rcx - 0x7d], al ; ret
0x00000200006c51e5 : adc byte ptr [rcx - 0x7d], al ; ret 0x49f8
0x00000200000a0f30 : adc byte ptr [rcx - 0x7d], al ; stc ; add al, 0x72 ; ret
0x0000020000600ed8 : adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x00000200003f6ca2 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200004419f6 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200006e98e6 : adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x0000020000436e32 : adc byte ptr [rcx - 0x7f], al ; ret
0x0000020000157af6 : adc byte ptr [rcx - 0xa], al ; ret
0x0000020000121e2f : adc byte ptr [rcx - 0xa], al ; rol byte ptr [rcx], 0xf ; test dword ptr [rcx], eax ; ret
0x000002000064d9e6 : adc byte ptr [rcx - 1], al ; ret
0x000002000045f583 : adc byte ptr [rcx - 1], al ; ret 0x3b44
0x000002000014a95b : adc byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000397985 : adc byte ptr [rcx - 1], al ; ret 0x8349
0x00000200003daa2a : adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200001ba503 : adc byte ptr [rcx], al ; add bl, ch ; or bh, bh ; ret 0x153b
0x00000200005915da : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x000002000059155d : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x00000200003de5a6 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000047a829
0x000002000062cca1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000100eab : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200003e3de4 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051cc09 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000049e077 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200006e7cb5 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rbx
0x000002000015e012 : adc byte ptr [rcx], al ; mov qword ptr [r8 + 8], rax ; mov al, 1 ; ret
0x00000200006756ff : adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x00000200001df79f : adc byte ptr [rcx], al ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006795fc : adc byte ptr [rcx], ch ; mov ebx, 0x158b48ff ; pop rcx ; ret
0x0000020000135858 : adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x0000020000633f0f : adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x0000020000135859 : adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x000002000040c400 : adc byte ptr [rdi + rbp - 1], dh ; ret 0x3b41
0x00000200000d09f7 : adc byte ptr [rdi + rcx + 0x20], al ; ret 0xf41
0x000002000065cddd : adc byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000633f10 : adc byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x0000020000544f35 : adc byte ptr [rdi - 0x74b30019], ah ; ret
0x00000200004b9e80 : adc byte ptr [rdi - 1], dh ; ret
0x0000020000011e1b : adc byte ptr [rdi], 1 ; ret
0x00000200003787cb : adc byte ptr [rdi], cl ; and ah, al ; add rsp, 0x28 ; ret
0x00000200000eb15f : adc byte ptr [rdi], cl ; mov bh, 0x42 ; adc byte ptr [rcx + 0x3b], al ; ret 0x6873
0x00000200005ad6c0 : adc byte ptr [rdi], cl ; mov bh, 4 ; cmp dword ptr [rsi - 0x7b], esp ; ret 0x375
0x00000200004874c4 : adc byte ptr [rdi], cl ; mov dh, 0x43 ; call 0x1ffc2cd001e
0x000002000011ef84 : adc byte ptr [rdi], cl ; mov dh, 0x83 ; ret 1
0x000002000010cb41 : adc byte ptr [rdi], cl ; ret 0x8b49
0x000002000050849c : adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200004480bc : adc byte ptr [rdi], cl ; ret 0xebff
0x00000200005c989f : adc byte ptr [rdi], cl ; sub dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x000002000015df00 : adc byte ptr [rdi], cl ; sub dword ptr [rcx + 0x10], ecx ; ret
0x0000020000466447 : adc byte ptr [rdi], cl ; test bh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000575d20 : adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x16001213], bh ; ret
0x0000020000025c71 : adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x9fffffe], bl ; ret
0x00000200003bee61 : adc byte ptr [rdi], cl ; test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000045676f : adc byte ptr [rdi], cl ; test esp, esi ; call qword ptr [rcx]
0x0000020000577088 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000048905c : adc byte ptr [rdi], dh ; ret
0x00000200007155b0 : adc byte ptr [rdi], dl ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004a98a7 : adc byte ptr [rdx + 0x10], dh ; ret
0x000002000014025f : adc byte ptr [rdx + 0x39], al ; ret
0x00000200000dc0ba : adc byte ptr [rdx + rax*8 + 0x1b01175], al ; ret
0x00000200005efbac : adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x00000200005ce855 : adc byte ptr [rdx - 0x77], cl ; ret 0x4810
0x0000020000602f08 : adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x00000200003ee02d : adc byte ptr [rdx], al ; add al, al ; ret
0x000002000070392f : adc byte ptr [rdx], al ; add bh, bh ; ret
0x00000200001d7674 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200004e4101 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200000ca127 : adc byte ptr [rdx], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012b95 : adc byte ptr [rdx], bl ; and byte ptr [rbx], bl ; and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200001029d5 : adc byte ptr [rdx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000054edea : adc byte ptr [rdx], dl ; add byte ptr [rax], al ; call 0x2000047b082
0x0000020000141607 : adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000072723f : adc byte ptr [rsi + 0x3b], ah ; ret 0x1a7f
0x000002000012ae7f : adc byte ptr [rsi + 0x3b], ah ; ret 0x2173
0x00000200001ff977 : adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200005efbb9 : adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x00000200004f8eed : adc byte ptr [rsi + rax + 0x48], dh ; add esp, 0x40 ; pop rbx ; ret
0x0000020000728dea : adc byte ptr [rsi - 0x76b7ff68], 0xd ; ret
0x000002000013f770 : adc byte ptr [rsi - 0x76b7ff68], 2 ; ret
0x00000200006175d3 : adc byte ptr [rsi - 0x7d], ah ; ret
0x0000020000148e1c : adc byte ptr [rsi - 9], ah ; sar edi, -1 ; jne 0x20000148e2d ; ret
0x00000200005a68f7 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000028677a : adc byte ptr [rsi], al ; sysenter
0x000002000071f678 : adc byte ptr [rsi], bl ; ret
0x00000200001d9531 : adc byte ptr [rsp + rax + 0x41], dh ; mov eax, ecx ; ret
0x00000200000aa33e : adc byte ptr [rsp + rax], al ; add byte ptr [rax], al ; ret
0x000002000000d6a1 : adc byte ptr [rsp + rdi*4 + 0x2bee8961], dh ; ret 0x8199
0x00000200004c2d4c : adc byte ptr [rsp + rdx - 1], dh ; ret 0x8349
0x000002000024162d : adc byte ptr fs:[rax], al ; sysenter
0x00000200004eb20e : adc ch, al ; in al, 0x53 ; jmp 0x200004eb21a
0x000002000002753b : adc ch, cl ; ret
0x0000020000627e1f : adc cl, al ; jmp 0x1ffd06dc23e
0x00000200004874dc : adc cl, byte ptr [r15] ; mov dh, 0x43 ; call 0x1ffc2cd0038
0x00000200001a857a : adc cl, byte ptr [rax + 0x23] ; ret
0x00000200000f668f : adc cl, byte ptr [rax + 0x23] ; ret 0x8b48
0x000002000009a1ce : adc cl, byte ptr [rax + 0x23] ; ret 0x8b4a
0x0000020000171357 : adc cl, byte ptr [rax + 0x3b] ; ret
0x0000020000640ad8 : adc cl, byte ptr [rax + 0x3b] ; ret 0x572
0x00000200004b697b : adc cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x0000020000404cee : adc cl, byte ptr [rax + 0x63] ; ret 0x8b48
0x00000200000f41dd : adc cl, byte ptr [rax + 3] ; ret
0x0000020000206db2 : adc cl, byte ptr [rax + 3] ; ret 0x3b48
0x0000020000082344 : adc cl, byte ptr [rax - 0x73] ; dec qword ptr [r8 - 0x75] ; ret
0x00000200000e0fe4 : adc cl, byte ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x00000200003d9483 : adc cl, byte ptr [rax - 0x73] ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004f7d17 : adc cl, byte ptr [rax - 0x73] ; sub r15b, r15b ; ret
0x0000020000366879 : adc cl, byte ptr [rax - 0x75] ; adc byte ptr [rax + 0x3b], cl ; ret 0xe875
0x000002000054a469 : adc cl, byte ptr [rax - 0x75] ; add eax, 0xffd572f7 ; call rax
0x00000200001f2849 : adc cl, byte ptr [rax - 0x75] ; ret
0x000002000013bc54 : adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200001dd6ca : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000020000238c68 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4504
0x00000200000e6dcf : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200006f72f6 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200001ce4dd : adc cl, byte ptr [rax - 0x7d] ; ret 0xb910
0x00000200006efd0a : adc cl, byte ptr [rax - 1] ; ret
0x0000020000516368 : adc cl, byte ptr [rax - 1] ; ret 0x2b49
0x00000200004b5635 : adc cl, byte ptr [rax - 1] ; ret 0x4466
0x0000020000141800 : adc cl, byte ptr [rax - 1] ; ret 0xe484
0x000002000051639b : adc cl, byte ptr [rax - 1] ; ret 0xe6eb
0x000002000000afc8 : adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x000002000000b054 : adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x000002000000afb4 : adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x0000020000720caa : adc cl, byte ptr [rax] ; ret
0x00000200000c0f26 : adc cl, byte ptr [rbp + 0x23] ; ret
0x0000020000061b9d : adc cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x00000200000aa35b : adc cl, byte ptr [rbx + rcx*4 + 0x59] ; and byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x7f] ; ret 0
0x00000200000facfb : adc cl, byte ptr [rbx + rdi - 0x40] ; jne 0x200000face2 ; mov eax, r9d ; ret
0x000002000072f007 : adc cl, byte ptr [rbx - 0x48c2adfb] ; dec dword ptr [rax + 3] ; ret
0x00000200003ecd15 : adc cl, byte ptr [rbx - 0x76b3f7be] ; ret 0xff10
0x00000200000c0f99 : adc cl, byte ptr [rcx + 0x23] ; ret
0x00000200001f7031 : adc cl, byte ptr [rcx + 0x23] ; ret 0x2b49
0x000002000016ba99 : adc cl, byte ptr [rcx + 0x3b] ; ret
0x00000200006f9aeb : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x0000020000465354 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x0000020000116f0e : adc cl, byte ptr [rcx + 0xf] ; mov esp, 0x440f41c1 ; ret 0x3b48
0x000002000013414e : adc cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000022ab54 : adc cl, byte ptr [rcx - 0x73] ; add byte ptr [rax], 0x46 ; ret
0x000002000049f89b : adc cl, byte ptr [rcx - 0x73] ; je 0x2000049f8cc ; and byte ptr [rax - 0x75], cl ; ret
0x000002000011e3a2 : adc cl, byte ptr [rcx - 0x75] ; ret 0x2b48
0x00000200000d5c79 : adc cl, byte ptr [rcx - 0x75] ; ret 0x4b8d
0x00000200006190c8 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x0000020000619346 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x00000200001403d6 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x8502
0x0000020000619103 : adc cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x0000020000590a22 : adc cl, byte ptr [rcx - 1] ; ret 0x344
0x000002000014032c : adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200004874dd : adc cl, byte ptr [rdi] ; mov dh, 0x43 ; call 0x1ffc2cd0037
0x0000020000409236 : adc cl, byte ptr [rdi] ; test byte ptr [rbx - 0x75000000], dh ; ret
0x000002000055c60e : adc cl, byte ptr [rdi] ; test dword ptr [rax], ebx ; ret
0x000002000002c6b6 : adc cl, byte ptr [rdi] ; test esi, edx ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000002698b : adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xa8e8
0x00000200003ba5d4 : adc cl, ch ; cmp esi, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000002000018bf15 : adc cl, ch ; jle 0x2000018bf36 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000508a34 : adc cl, cl ; ret
0x0000020000441ad9 : adc cl, dl ; call 0x1ffc345fb69
0x0000020000192027 : adc dh, bh ; jmp 0x200000be29d
0x0000020000192026 : adc dh, bh ; jmp 0x200000be29e
0x00000200000b2877 : adc dh, bh ; movzx eax, dl ; mov cr8, rax ; ret
0x00000200000e1ea4 : adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x0000020000141a85 : adc dh, byte ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200005a9d3e : adc dh, ch ; dec dword ptr [rax - 0x75] ; ret
0x0000020000206a6f : adc dh, ch ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x000002000019e353 : adc dh, dh ; inc dword ptr [rax + rdi + 0x2d] ; ret
0x00000200004b9b9a : adc dh, dh ; mov edx, 0x1d8b48ff ; ret
0x0000020000025c6e : adc dh, dh ; ret
0x00000200003d782a : adc dh, dh ; ret 0x413f
0x0000020000705152 : adc dh, dh ; ret 0x481f
0x00000200004f406e : adc dh, dh ; ret 0x483f
0x00000200000fd3d8 : adc dh, dh ; ret 0x7401
0x00000200001ab988 : adc dh, dh ; ret 0x7402
0x00000200001f6985 : adc dh, dh ; ret 0x7440
0x00000200000f7c7c : adc dh, dh ; ret 0x7501
0x00000200003fb4dd : adc dh, dh ; ret 0x7504
0x000002000000763d : adc dh, dh ; ret 0xd791
0x00000200000ad510 : adc dh, dh ; ret 0xf01
0x0000020000043df5 : adc dh, dh ; ret 0xf08
0x000002000013bd34 : adc dil, dil ; ret
0x0000020000592516 : adc dl, byte ptr [rsi - 0x74bbfff6] ; ret 0x34c
0x00000200003f4808 : adc dl, byte ptr [rsi] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200004a17e6 : adc dl, dh ; ret 0x49ff
0x000002000039e893 : adc dword ptr [r8 - 0x7b], ecx ; fnstenv dword ptr [rdx + rax - 1] ; ret 0xd148
0x00000200005fa868 : adc dword ptr [rax + 0x2b], ecx ; ret 0xc148
0x000002000008efb8 : adc dword ptr [rax + 0x48000000], 0x3b ; ret 0x1573
0x00000200001584f3 : adc dword ptr [rax + 0xf], ecx ; ret
0x00000200000b41ed : adc dword ptr [rax + 1], edi ; ret
0x0000020000141a72 : adc dword ptr [rax + rax*8 - 0xb7eb8c], eax ; ret 0xff49
0x000002000014176f : adc dword ptr [rax + rax*8 - 0xb7f58c], eax ; ret 0xc2f6
0x00000200000f1839 : adc dword ptr [rax + rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000002000022f79b : adc dword ptr [rax + rcx*2], ebx ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000022f79a : adc dword ptr [rax + rcx*2], r11d ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000016d167 : adc dword ptr [rax + rcx*4 - 0x55], eax ; ret 0
0x0000020000428243 : adc dword ptr [rax - 0x3fcd3cff], esi ; ret
0x00000200000dd6eb : adc dword ptr [rax - 0x73], ecx ; dec dword ptr [r8 + 3] ; ret 0x3b48
0x000002000011baf3 : adc dword ptr [rax - 0x73], ecx ; or eax, 0x11f3d ; call rax
0x0000020000630051 : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r11], sil ; shr al, cl ; ret
0x000002000038fda4 : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r9 + 0x23], cl ; ret
0x000002000051f5ec : adc dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x00000200004a39a2 : adc dword ptr [rax - 0x75], ecx ; ret
0x00000200006c8e18 : adc dword ptr [rax - 0x75], ecx ; ret 0x3944
0x00000200000ea3f4 : adc dword ptr [rax - 0x75], ecx ; ret 0x4df0
0x00000200006e9f50 : adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200001d84e6 : adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x00000200001a516a : adc dword ptr [rax - 0x75], ecx ; ret 0xc148
0x000002000036e197 : adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x000002000039e894 : adc dword ptr [rax - 0x7b], ecx ; fnstenv dword ptr [rdx + rax - 1] ; ret 0xd148
0x00000200000645b1 : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x00000200000f453f : adc dword ptr [rax - 0x7d], ecx ; clc ; add dh, byte ptr [rbx + 1] ; ret
0x000002000070514e : adc dword ptr [rax - 0x7d], ecx ; rcl byte ptr [rax], 0xf6 ; ret 0x481f
0x00000200004437d0 : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000020000141fa4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4402
0x00000200000eaaf0 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000200000d5428 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000020000502154 : adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x00000200002151b0 : adc dword ptr [rax - 1], ecx ; ret 0x8948
0x000002000065d514 : adc dword ptr [rax - 1], ecx ; ret 0xff41
0x0000020000141b4f : adc dword ptr [rax - 1], ecx ; ret 0xff49
0x000002000014068e : adc dword ptr [rax - 1], ecx ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000014068e ; ret
0x0000020000141cd8 : adc dword ptr [rax - 1], ecx ; shr ebx, -0xd ; mov rax, r11 ; ret
0x00000200001d6388 : adc dword ptr [rax], 0x8b00002a ; ret
0x0000020000598d8b : adc dword ptr [rax], 0xff00000b ; ret 0xcbeb
0x000002000073002a : adc dword ptr [rax], eax ; add al, al ; ret
0x00000200003e0e5e : adc dword ptr [rax], eax ; add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x000002000021a67c : adc dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0xc76
0x0000020000294408 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003a68a7 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000033675 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x11], dh ; mov al, 1 ; ret
0x000002000005056d : adc dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000003b3fd : adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000465306 : adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004629a3 : adc dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000002e4c8 : adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000a39c : adc dword ptr [rax], eax ; call qword ptr [rcx]
0x00000200001cd777 : adc dword ptr [rax], eax ; cmp r8b, dl ; jne 0x200001cd7dd ; mov r8b, dl ; jmp 0x200001cd7d3
0x00000200003ba5a6 : adc dword ptr [rax], eax ; jmp 0x200003ba51b
0x0000020000063aea : adc dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000063dc5 : adc dword ptr [rax], eax ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000231f28 : adc dword ptr [rax], eax ; mov dword ptr [r8], eax ; ret
0x00000200001cab64 : adc dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000270f3a : adc dword ptr [rax], eax ; out 0x11, al ; add byte ptr [rax], bl ; jmp qword ptr [rsi]
0x000002000026e60e : adc dword ptr [rax], eax ; ret 0x1115
0x000002000026fa42 : adc dword ptr [rax], eax ; ret 0x1190
0x00000200002706d2 : adc dword ptr [rax], eax ; ret 0x11d4
0x0000020000270826 : adc dword ptr [rax], eax ; ret 0x11d8
0x00000200001ca3bb : adc dword ptr [rax], eax ; shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x0000020000248126 : adc dword ptr [rax], eax ; sysenter
0x00000200001362de : adc dword ptr [rax], ecx ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [r8 + 3] ; ret 0x3b48
0x0000020000036607 : adc dword ptr [rax], edi ; sete al ; ret
0x0000020000090e8c : adc dword ptr [rbp + 0x2b], ecx ; ret
0x00000200000bf8ae : adc dword ptr [rbp + 0x33], eax ; push qword ptr [rbx] ; test byte ptr [rbp + 0xf], 0x20 ; ret 0x894c
0x00000200000aa832 : adc dword ptr [rbp + 0x33], eax ; rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x0000020000208a8e : adc dword ptr [rbp + 0x33], eax ; ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x20000208a5d ; ret
0x0000020000191f0b : adc dword ptr [rbp + 0x33], eax ; shr cl, 0x70 ; ret
0x00000200004cbac0 : adc dword ptr [rbp + 0x3b], eax ; ret 0x673
0x0000020000014e0f : adc dword ptr [rbp + 0x4fc000cb], ecx ; ret
0x00000200001ffc63 : adc dword ptr [rbp + 0xffffffe], -0x49 ; ret 0x394d
0x00000200000b977d : adc dword ptr [rbp + 1], esi ; ret
0x00000200003b3de5 : adc dword ptr [rbp + 3], ecx ; ret 0xc8d
0x00000200002332ce : adc dword ptr [rbp + 3], esi ; mov al, 1 ; ret
0x000002000062acd2 : adc dword ptr [rbp + rax - 0x18], esi ; ret 0xffaa
0x0000020000428999 : adc dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200003ecd04 : adc dword ptr [rbp - 0x75], ecx ; ret 0xc1f6
0x000002000049f2ac : adc dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200000b6503 : adc dword ptr [rbp - 0x7b], ecx ; ror byte ptr [rax - 0x73], 5 ; ret 0xa7e
0x00000200000b8355 : adc dword ptr [rbp - 0xb], esi ; ret
0x00000200000d7dbe : adc dword ptr [rbp - 0xf], esi ; mov al, 1 ; ret
0x00000200004c9f7f : adc dword ptr [rbx + 0x48282444], ecx ; add esp, 0x48 ; ret
0x000002000051680d : adc dword ptr [rbx + 0x4c8b48c2], ecx ; ret
0x0000020000629b87 : adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x20000629b89
0x000002000036683a : adc dword ptr [rbx + rcx*4 + 0x42], ecx ; or byte ptr [rax - 0x75], cl ; ret 0x854d
0x0000020000063e02 : adc dword ptr [rbx + rcx*4 - 0x40], ecx ; jne 0x20000063e49 ; ret
0x0000020000193c44 : adc dword ptr [rbx + rsi*8], edx ; push rsi ; ret 0xf10
0x00000200000f7f71 : adc dword ptr [rbx - 0x1e7cefb6], ecx ; add ecx, dword ptr [rcx - 0x75] ; ret 0xb49
0x00000200000711b3 : adc dword ptr [rbx - 0x1f7cefbe], ecx ; add ecx, dword ptr [rax + 0xb] ; ret
0x00000200006d715e : adc dword ptr [rbx - 0x3174b72d], ecx ; call r12
0x000002000062a2e4 : adc dword ptr [rbx], ebp ; ret 0x875
0x0000020000254879 : adc dword ptr [rbx], ecx ; add byte ptr [rip + 0x11467406], cl ; ret 0xf00d
0x00000200005049a3 : adc dword ptr [rbx], edi ; ret 0x377
0x000002000023920d : adc dword ptr [rbx], edi ; ret 0x5a72
0x0000020000446f13 : adc dword ptr [rbx], esi ; add al, ch ; push rax ; xchg eax, edi ; ret 0x84ff
0x000002000001e849 : adc dword ptr [rcx + 0x36], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x00000200000852f3 : adc dword ptr [rcx + 0x3b], eax ; ret
0x000002000022d4c7 : adc dword ptr [rcx + 0x5f9], eax ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000095410 : adc dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x000002000049d59a : adc dword ptr [rcx - 0x46], eax ; pop rdi ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000020000162b9c : adc dword ptr [rcx - 0x75], eax ; ret
0x00000200005d5d30 : adc dword ptr [rcx - 0x75], eax ; ret 0x8348
0x000002000061415f : adc dword ptr [rcx - 0x75], eax ; ror byte ptr [rax + 0x39], 0x1c ; ret 0x9d74
0x0000020000141a8a : adc dword ptr [rcx - 0x75], ecx ; ret
0x00000200006331cf : adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x000002000016b457 : adc dword ptr [rcx - 0x75], ecx ; ret 0x8b4c
0x00000200006c960e : adc dword ptr [rcx - 0x7d], eax ; ret
0x00000200000f7ded : adc dword ptr [rcx - 0x7d], eax ; ret 0x4110
0x00000200006c7c1f : adc dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x00000200004d7304 : adc dword ptr [rcx - 0x7d], eax ; ret 0x4d07
0x00000200004942a1 : adc dword ptr [rcx - 1], eax ; ret
0x00000200005edd9b : adc dword ptr [rcx - 1], eax ; ret 0x8348
0x00000200001d03e1 : adc dword ptr [rcx - 1], eax ; ret 0x8349
0x0000020000494433 : adc dword ptr [rcx - 1], eax ; ret 0xf633
0x00000200006e083f : adc dword ptr [rcx - 1], eax ; shr bl, 1 ; or cl, byte ptr [rax - 0x75] ; retf ; call rdx
0x00000200003b0125 : adc dword ptr [rcx], ebx ; add dh, dh ; ret
0x0000020000011716 : adc dword ptr [rdi + 0x16], esi ; ret
0x00000200001f3918 : adc dword ptr [rdi + rcx + 0x20], eax ; rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8b4c
0x0000020000141d18 : adc dword ptr [rdi + rcx + 0x44], ecx ; ror dword ptr [rcx - 0x75], -0x40 ; ret
0x0000020000246505 : adc dword ptr [rdi], eax ; add byte ptr [rcx], dl ; ret 0xf00d
0x000002000005fed6 : adc dword ptr [rdi], ebp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005a6073 : adc dword ptr [rdi], ecx ; ret 0x4789
0x0000020000141b96 : adc dword ptr [rdi], ecx ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000141bf5 : adc dword ptr [rdi], ecx ; test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x00000200001374f6 : adc dword ptr [rdi], ecx ; test dword ptr [rcx - 0x74fff7fc], edi ; ret
0x000002000066562a : adc dword ptr [rdx + 3], esi ; mov al, 1 ; ret
0x00000200006655fe : adc dword ptr [rdx + 6], esi ; shr eax, 0xf ; and al, 1 ; ret
0x000002000012335f : adc dword ptr [rdx + rdi*8 - 1], esp ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003a8b3b : adc dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000000dadd : adc dword ptr [rdx], ebp ; lahf ; ret
0x000002000051164b : adc dword ptr [rdx], ebx ; fcos ; call 0x20000139aa3
0x000002000037d6ab : adc dword ptr [rip - 0x74b70022], eax ; ret
0x00000200001b43f1 : adc dword ptr [rsi + 0xf000000], -0x49 ; ret 0x8b4d
0x00000200004ae542 : adc dword ptr [rsi*2 - 0x3d00be37], ecx ; jmp 0x200004ae51f
0x00000200004ae541 : adc dword ptr [rsi*2 - 0x3d00be37], r9d ; jmp 0x200004ae520
0x00000200002486ca : adc dword ptr [rsi], eax ; sysenter
0x00000200000aa1f6 : adc dword ptr [rsi], ecx ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000555e9 : adc dword ptr [rsi], esp ; add byte ptr [rdi], cl ; test al, al ; ret 0x11
0x000002000003a1ed : adc dword ptr [rsp + rdx - 0x75], esi ; ret
0x0000020000248125 : adc dword ptr fs:[rax], eax ; sysenter
0x000002000001e848 : adc dword ptr gs:[rcx + 0x36], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x0000020000157b04 : adc eax, 0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000019d246 : adc eax, 0x10ad35 ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000019d267
0x0000020000230050 : adc eax, 0x121d2b ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x20000230066
0x0000020000408b10 : adc eax, 0x1518d00 ; mov eax, edx ; ret
0x000002000013f9b9 : adc eax, 0x1667ef ; ret
0x000002000012e251 : adc eax, 0x174d12 ; call 0x2000068a46b
0x000002000015e2b5 : adc eax, 0x17737e ; ret
0x00000200004dd6ea : adc eax, 0x177751 ; add rsp, 0x28 ; ret
0x00000200001c4cd2 : adc eax, 0x18c4f9 ; add rsp, 0x28 ; ret
0x0000020000134ab2 : adc eax, 0x19b401 ; ret
0x0000020000106418 : adc eax, 0x1d16a7 ; ret
0x0000020000106411 : adc eax, 0x1d16b0 ; ret
0x0000020000106405 : adc eax, 0x1d16bb ; ret
0x00000200001063fe : adc eax, 0x1d16bf ; ret
0x00000200001063f2 : adc eax, 0x1d16cc ; ret
0x00000200000d832b : adc eax, 0x1ddd38 ; ret
0x00000200000d8323 : adc eax, 0x1ddd50 ; ret
0x0000020000159df6 : adc eax, 0x1f73d5 ; add rsp, 8 ; ret
0x00000200002485ee : adc eax, 0x22c0 ; add byte ptr [rax], al ; ret 8
0x0000020000258000 : adc eax, 0x22e01152 ; add byte ptr [rax], al ; add al, dl ; ret
0x00000200003911b1 : adc eax, 0x2315e9c1 ; ret 0xca23
0x000002000061496e : adc eax, 0x24448948 ; and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000004bfc5 : adc eax, 0x2fa10e ; jmp 0x2000004bf94
0x000002000003c5c8 : adc eax, 0x309b0b ; jmp 0x2000003c598
0x000002000003a003 : adc eax, 0x30f138 ; ret
0x00000200006d2b90 : adc eax, 0x33480000 ; ret 0xd233
0x00000200006805ff : adc eax, 0x38a1c ; add rsp, 0x38 ; ret
0x00000200005d10f0 : adc eax, 0x3b24478b ; ret
0x00000200002176d2 : adc eax, 0x3ba ; add bl, dl ; loop 0x2000021766f ; ret 0xd0f7
0x00000200004f4aee : adc eax, 0x4801ffdb ; add esp, 0x20 ; pop rbx ; ret
0x0000020000671182 : adc eax, 0x48f41 ; add rsp, 0x58 ; ret
0x00000200006711b9 : adc eax, 0x48f5a ; add rsp, 0x28 ; ret
0x0000020000671089 : adc eax, 0x48faa ; add rsp, 0x38 ; ret
0x0000020000670f0d : adc eax, 0x48fc6 ; add rsp, 0x28 ; ret
0x0000020000670efd : adc eax, 0x48fce ; add rsp, 0x28 ; ret
0x000002000047071f : adc eax, 0x48ffe3f6 ; add esp, 0x20 ; pop rdi ; ret
0x00000200006455e3 : adc eax, 0x48ffeaba ; add esp, 0x38 ; ret
0x0000020000670a58 : adc eax, 0x490db ; add rsp, 0x68 ; ret
0x00000200006709da : adc eax, 0x49141 ; add rsp, 0x58 ; ret
0x0000020000670981 : adc eax, 0x49192 ; add rsp, 0x68 ; ret
0x00000200006708a3 : adc eax, 0x491f0 ; add rsp, 0x38 ; ret
0x0000020000670715 : adc eax, 0x491fe ; add rsp, 0x28 ; ret
0x0000020000670775 : adc eax, 0x49216 ; add rsp, 0x28 ; ret
0x0000020000140fdb : adc eax, 0x4b70f00 ; and rax, 1 ; ret
0x0000020000140f7b : adc eax, 0x4b70f00 ; and rax, 2 ; ret
0x0000020000140f5b : adc eax, 0x4b70f00 ; and rax, 4 ; ret
0x0000020000140fbb : adc eax, 0x4b70f00 ; and rax, 8 ; ret
0x00000200005064be : adc eax, 0x4d8d4800 ; loopne 0x20000506459 ; clc ; call r15
0x0000020000668ead : adc eax, 0x502ee ; add rsp, 0x48 ; ret
0x0000020000668a29 : adc eax, 0x50772 ; add rsp, 0x48 ; ret
0x00000200003fc853 : adc eax, 0x508b4800 ; or dh, dh ; ret 0xf02
0x00000200006660b7 : adc eax, 0x52f64 ; add rsp, 0x38 ; ret
0x000002000066608d : adc eax, 0x52f8e ; add rsp, 0x38 ; ret
0x000002000015e0fc : adc eax, 0x54 ; xor eax, eax ; ret
0x0000020000662213 : adc eax, 0x56fa8 ; add rsp, 0x58 ; ret
0x0000020000517c84 : adc eax, 0x6348ffb5 ; ret
0x00000200001c0afd : adc eax, 0x634c0012 ; ret 0x4865
0x0000020000157e14 : adc eax, 0x71 ; jmp rdx
0x00000200001ff578 : adc eax, 0x73d03b00 ; or al, 0x8b ; ret 0x8b4d
0x000002000012ec4b : adc eax, 0x74d28548 ; adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200005498b4 : adc eax, 0x83483b89 ; ret
0x00000200000b3b1f : adc eax, 0x85000000 ; rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000002000043f593 : adc eax, 0x85000000 ; ror byte ptr [rdi], 0xb7 ; ret
0x00000200005b22bb : adc eax, 0x89ffb419 ; pop rdi ; adc byte ptr [rbx], bh ; ret
0x000002000049d940 : adc eax, 0x8b000ee5 ; ret 0x6b48
0x00000200001378b1 : adc eax, 0x8b378966 ; ret
0x00000200006d2cd2 : adc eax, 0x8b410000 ; ret 0x3344
0x00000200001ad028 : adc eax, 0x8b41fff7 ; ret 0x8e9
0x00000200003a91db : adc eax, 0x8b480000 ; ret
0x0000020000193d47 : adc eax, 0x8b48fff3 ; ret 0xb948
0x0000020000404001 : adc eax, 0x8bd92b49 ; ret
0x0000020000647807 : adc eax, 0x8bffc4d6 ; ret
0x00000200005fbc07 : adc eax, 0x8bffc992 ; ret
0x0000020000417e07 : adc eax, 0x8bffe7d0 ; ret
0x00000200000f20eb : adc eax, 0x8bfffb24 ; ret
0x00000200005801fb : adc eax, 0x90ffe799 ; jmp 0x2000047c45a
0x00000200006741eb : adc eax, 0x9a1e158b ; ret
0x0000020000296693 : adc eax, 0xb60fffd9 ; ret
0x000002000039597d : adc eax, 0xb70f9066 ; ret
0x00000200004c717d : adc eax, 0xc033000d ; ret
0x000002000014415e : adc eax, 0xc0940f00 ; ret
0x000002000013fac2 : adc eax, 0xc28b4100 ; ret
0x0000020000434b5d : adc eax, 0xc3000006 ; xor eax, eax ; ret
0x0000020000551621 : adc eax, 0xc68b4500 ; call 0x2000015d887
0x000002000016fc36 : adc eax, 0xc79d830f ; in eax, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8a40
0x0000020000191f9b : adc eax, 0xc933000a ; jmp 0x200000be1e3
0x00000200006dd127 : adc eax, 0xca830000 ; jmp qword ptr [rbx]
0x000002000040cb10 : adc eax, 0xcf8b4900 ; call 0x20000031498
0x000002000000e3d9 : adc eax, 0xd9818709 ; ret
0x00000200001a6600 : adc eax, 0xe8c98b49 ; xlatb ; ret
0x00000200001a856e : adc eax, 0xebfff667 ; sub cl, byte ptr [rax - 0x75] ; ret 0xc148
0x0000020000146837 : adc eax, 0xf10d8d48 ; ret 0xffeb
0x00000200005137a8 : adc eax, 0xf673 ; jmp 0x20000513778
0x0000020000192c26 : adc eax, 0xf6fff2ee ; ret
0x00000200003a6a6a : adc eax, 0xf6ffffff ; ret
0x00000200005adeed : adc eax, 0xffa6ed76 ; call 0x2000008a167
0x00000200005adf2a : adc eax, 0xffa6ed79 ; call 0x2000008a167
0x00000200004dde75 : adc eax, 0xffb2585e ; call 0x2000008a167
0x0000020000717534 : adc eax, 0xffb980ef ; ret
0x00000200006fea0c : adc eax, 0xffbd30a7 ; ret
0x000002000061742e : adc eax, 0xffc5ff41 ; ret 0x9489
0x000002000060b604 : adc eax, 0xffc970e7 ; ret
0x000002000060b5fd : adc eax, 0xffc970ea ; ret
0x00000200005efbfa : adc eax, 0xffd00b01 ; xor eax, eax ; ret
0x000002000059280b : adc eax, 0xffd104f8 ; cmovne rax, rdx ; jmp 0x20000592833
0x000002000051164a : adc eax, 0xffd91a11 ; call 0x20000139aa4
0x000002000050efc5 : adc eax, 0xffd96c2a ; call 0x20000139714
0x00000200004cb5a9 : adc eax, 0xffdda9a2 ; ret
0x00000200004b13d8 : adc eax, 0xffe207e3 ; mov rax, rdx ; ret
0x00000200001ddf2c : adc eax, 0xffe3edb7 ; call 0x2000008a167
0x00000200004040f8 : adc eax, 0xffece043 ; mov rax, rdx ; ret
0x0000020000110d44 : adc eax, 0xffef23c7 ; jmp 0x20000110d14
0x0000020000378218 : adc eax, 0xfff29343 ; add rsp, 0x28 ; ret
0x000002000057a320 : adc eax, 0xffffeea7 ; ret 0xfa83
0x00000200000ce325 : adc eax, 0xfffffffe ; ret 0x8348
0x0000020000107a77 : adc eax, dword ptr [rax + rax] ; add rsp, 0x58 ; ret
0x000002000026ce56 : adc eax, dword ptr [rax] ; add al, 0 ; add byte ptr [rax], al ; clc ; ret
0x000002000024a44a : adc eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006dfe3b : adc eax, dword ptr [rax] ; add byte ptr [rbx + 0x2341ffca], al ; ret
0x00000200003a9375 : adc eax, dword ptr [rax] ; add byte ptr [rbx - 0x7abe992a], cl ; ret 0x850f
0x00000200005a10b6 : adc eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000023b96a : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; in eax, dx ; ret
0x000002000024b516 : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rsp ; ret
0x0000020000268c46 : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1036
0x0000020000257fba : adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0xc
0x000002000023be0a : adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000261d02 : adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4872
0x000002000043c932 : adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cc56b : adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000033350 : adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000019757b : adc eax, dword ptr [rax] ; mov al, 1 ; ret
0x00000200001c5802 : adc eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000280fee : adc eax, dword ptr [rax] ; mov ecx, 0xcc0013cd ; jmp qword ptr [rdi]
0x0000020000038c65 : adc eax, dword ptr [rax] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000043b84f : adc eax, dword ptr [rax] ; mov rcx, r12 ; call 0x2000006a618
0x000002000043b69e : adc eax, dword ptr [rax] ; mov rcx, r13 ; call 0x200000690a8
0x000002000043a808 : adc eax, dword ptr [rax] ; mov rcx, r14 ; call 0x2000006a618
0x000002000043afb0 : adc eax, dword ptr [rax] ; mov rcx, rbp ; call 0x2000006a618
0x000002000043b982 : adc eax, dword ptr [rax] ; mov rcx, rdi ; call 0x20000068fd8
0x000002000043a676 : adc eax, dword ptr [rax] ; mov rcx, rdi ; call 0x2000006a618
0x000002000052e31f : adc eax, dword ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000052e3af : adc eax, dword ptr [rax] ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000280fc6 : adc eax, dword ptr [rax] ; pushfq ; jmp qword ptr [rdi]
0x000002000003384b : adc eax, dword ptr [rax] ; ret
0x000002000025e8b6 : adc eax, dword ptr [rax] ; sysenter
0x00000200000267fe : adc eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d5a7e : adc eax, dword ptr [rbp + 3] ; ret 0x8348
0x000002000064805f : adc eax, dword ptr [rbp - 0x75] ; ret
0x0000020000222736 : adc eax, dword ptr [rbp - 0x75] ; ret 0xd58b
0x0000020000499f1c : adc eax, dword ptr [rbp - 0x7b] ; sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x00000200006cd98f : adc eax, dword ptr [rbx - 0x7cb6073d] ; ret
0x00000200004da89a : adc eax, dword ptr [rbx] ; add byte ptr [rax], al ; call 0x200000b6ab2
0x00000200001a7b18 : adc eax, dword ptr [rcx + 0x2b] ; ret 0x2341
0x0000020000588207 : adc eax, dword ptr [rcx + 0x3b] ; ror byte ptr [rdi], 0x84 ; ret 0xfff0
0x0000020000462ac9 : adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200004add1c : adc eax, dword ptr [rcx - 0x75] ; ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7570
0x00000200006e85a9 : adc eax, dword ptr [rcx - 0x7d] ; ret
0x00000200006dcef2 : adc eax, dword ptr [rcx - 0x7d] ; ret 0x48f8
0x00000200006c648b : adc eax, dword ptr [rcx - 0x7d] ; ret 0x49f8
0x000002000056a41b : adc eax, dword ptr [rcx - 0xa] ; ret
0x00000200006f9794 : adc eax, dword ptr [rcx - 0xa] ; ret 0xf01
0x00000200004342ac : adc eax, dword ptr [rcx - 0xa] ; ret 0xf40
0x00000200004dcace : adc eax, dword ptr [rcx - 1] ; ret
0x000002000025ea61 : adc eax, dword ptr [rdi] ; ret 0x4714
0x0000020000012dd0 : adc eax, dword ptr [rip + 0x3b92050b] ; ret
0x000002000025e8b5 : adc eax, dword ptr fs:[rax] ; sysenter
0x0000020000540ddf : adc eax, ebp ; sti ; ret 0xffb7
0x000002000037ed63 : adc eax, ebx ; mov eax, 0xc000000d ; ret
0x00000200004ac89d : adc eax, ecx ; ret 0x48ff
0x000002000044060b : adc eax, edi ; ret 0x33ff
0x000002000015e399 : adc eax, esi ; or dword ptr [rsp], 0 ; ret
0x000002000028882e : adc eax, esp ; add ah, byte ptr [rip + 0x60c000d] ; ret 0x2536
0x00000200001cf8c1 : adc ebp, dword ptr [rax] ; add byte ptr [rax + 4], bh ; ret
0x0000020000188077 : adc ebp, dword ptr [rbp - 0xf] ; push rsi ; ret 0xba01
0x000002000068d33b : adc ebp, dword ptr [rdx + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200000a7d7c : adc ebp, dword ptr [rdx] ; add byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x0000020000454107 : adc ebp, eax ; inc dword ptr [rbp - 0x7c] ; in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x00000200006cd186 : adc ebp, ebx ; or dword ptr [rcx - 0x75], ecx ; ret 0x3348
0x000002000057719d : adc ebp, esi ; push rsi ; ret
0x0000020000415925 : adc ebx, -1 ; add rsp, 0x58 ; ret
0x00000200001549bc : adc ebx, dword ptr [rbx + 0x5f] ; pop rsi ; ret
0x0000020000472a59 : adc ebx, dword ptr [rcx - 0x32] ; dec dword ptr [rax + 0x3b] ; ret
0x000002000071f6f1 : adc ebx, dword ptr [rcx] ; ret
0x00000200000f7189 : adc ebx, dword ptr [rsi] ; add al, ch ; ret
0x000002000071fe2a : adc ebx, eax ; call qword ptr [rcx]
0x00000200001b5fa3 : adc ebx, eax ; idiv edi ; jmp 0x200001321fb
0x00000200001d6e1a : adc ebx, eax ; mov eax, 0xc000000d ; ret
0x0000020000668b0b : adc ebx, eax ; ret 0x48ff
0x000002000067faa1 : adc ebx, esp ; ret 0x48ff
0x000002000045676c : adc ecx, dword ptr [rax + 0x39] ; adc byte ptr [rdi], cl ; test esp, esi ; call qword ptr [rcx]
0x00000200000dc080 : adc ecx, dword ptr [rax + 0x63] ; ret 0x8b49
0x000002000059c34f : adc ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200003c4115 : adc ecx, dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200004da093 : adc ecx, dword ptr [rax - 0x75] ; je 0x200004da0c4 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000489ffb : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200001b16b3 : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [rcx + 0x23], cl ; ret
0x00000200001dfd2c : adc ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000236949 : adc ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; xor eax, eax ; ret
0x0000020000068ffd : adc ecx, dword ptr [rax - 0x75] ; ret
0x0000020000116903 : adc ecx, dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000726f73 : adc ecx, dword ptr [rax - 0x75] ; ret 0x32e9
0x00000200001413dc : adc ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbx ; call r14
0x00000200005d5d2d : adc ecx, dword ptr [rax - 0x77] ; adc dword ptr [rcx - 0x75], eax ; ret 0x8348
0x00000200004fc3aa : adc ecx, dword ptr [rax - 0x77] ; push rbx ; or bl, ch ; ret 0x4b80
0x00000200001364dd : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200003b55c2 : adc ecx, dword ptr [rax - 1] ; ret
0x000002000019ebf2 : adc ecx, dword ptr [rax] ; cmc ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000134dfc : adc ecx, dword ptr [rbp + 0x33] ; ret 0x8349
0x000002000007faa9 : adc ecx, dword ptr [rbp - 0x73] ; pop rbx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000211aaf : adc ecx, dword ptr [rbp - 0x77] ; or byte ptr [r9 - 0x7d], cl ; ret
0x0000020000221e5b : adc ecx, dword ptr [rbx + 0xf602444] ; ret
0x00000200002252ee : adc ecx, dword ptr [rbx - 0x1f3ebeff] ; sbb al, 0x23 ; ret
0x00000200000ebec0 : adc ecx, dword ptr [rbx] ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x0000020000170f07 : adc ecx, dword ptr [rcx + 0x3b] ; ret 0x860f
0x00000200006e8b93 : adc ecx, dword ptr [rcx + 0x63] ; ret 0x8b41
0x000002000010ecc1 : adc ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000f5eee : adc ecx, dword ptr [rcx - 0x77] ; or ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x000002000019d415 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000013d248 : adc ecx, dword ptr [rcx - 0x7f] ; ret
0x0000020000100fd1 : adc ecx, dword ptr [rcx - 1] ; enter -0x218b, -1 ; ret
0x0000020000144860 : adc ecx, dword ptr [rcx - 1] ; ret
0x00000200002638a9 : adc ecx, dword ptr [rcx] ; call qword ptr [rbx]
0x00000200000729ef : adc ecx, dword ptr [rsi - 0x74befff0] ; ret 0xe083
0x00000200000527a9 : adc ecx, ebp ; ret
0x000002000003575b : adc edi, edi ; ret
0x00000200001c53bb : adc edi, edi ; ret 0x1139
0x00000200000fa9b0 : adc edi, edi ; ret 0x8349
0x000002000071fe75 : adc edx, dword ptr [rsi] ; ret
0x000002000072869c : adc edx, eax ; inc dword ptr [rbx] ; fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x00000200000e0823 : adc esi, dword ptr [rbp + 0x12] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012b292 : adc esi, dword ptr [rbx + 8] ; add byte ptr [rsi - 1], ah ; ret 0xb70f
0x00000200000fcbec : adc esi, dword ptr [rbx] ; ror byte ptr [rcx + 0x3b], cl ; ret
0x00000200001babe8 : adc esi, dword ptr [rcx + rcx - 0x7d] ; call qword ptr [rsi]
0x000002000001d459 : adc esi, dword ptr [rcx] ; xchg dword ptr [rsi - 0x7dbaf7ec], eax ; lodsb al, byte ptr [rsi] ; ret
0x000002000022a8c4 : adc esi, dword ptr [rdx - 8] ; jmp 0x2000022a8dc
0x0000020000471c20 : adc esi, edi ; add dil, r12b ; ret
0x0000020000219d7b : adc esi, esi ; ret
0x000002000057228a : adc esi, esi ; ret 0x4104
0x0000020000079f07 : adc esi, esi ; ret 0x7401
0x00000200003ceec3 : adc esi, esi ; ret 0x7402
0x00000200002285e9 : adc esi, esi ; ret 0x7407
0x00000200001eb249 : adc esi, esi ; ret 0x7420
0x00000200003cee54 : adc esi, esi ; ret 0x7502
0x00000200004f528c : adc esi, esi ; ret 0x7504
0x000002000037081b : adc esi, esi ; ret 0xf02
0x00000200004b43ff : adc esi, esi ; ret 0xf04
0x00000200003f2e17 : adc esi, esi ; ret 0xf1c
0x000002000028d44c : adc esp, dword ptr [rbp + rcx] ; sysenter
0x000002000028d774 : adc esp, dword ptr [rdi + rcx] ; sysenter
0x00000200003c2fe9 : adc esp, eax ; clc ; dec dword ptr [rax + 0x3b] ; ret 0x5777
0x00000200004f4f67 : adc esp, eax ; ret
0x00000200004c0197 : adc r11b, bpl ; out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x0000020000095e5d : adc r11b, bpl ; ret 0x894c
0x000002000022ab63 : adc r11b, bpl ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x00000200005665bc : adc r12b, bpl ; dec dword ptr [rax - 0x7d] ; ret 0x6608
0x0000020000181e5e : adc r15b, dil ; ret 0xd03b
0x000002000003384a : adc r8, qword ptr [r8] ; ret
0x0000020000376c57 : adc r8b, r13b ; ret 0xd31a
0x00000200000f41dc : adc r9b, byte ptr [r8 + 3] ; ret
0x000002000054a468 : adc r9b, byte ptr [rax - 0x75] ; add eax, 0xffd572f7 ; call rax
0x0000020000441ad8 : adc r9b, dl ; call 0x1ffc345fb6a
0x000002000059c34e : adc r9d, dword ptr [r8 + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200006dd126 : adc rax, -0x357d0000 ; jmp qword ptr [rbx]
0x00000200004c717c : adc rax, -0x3fccfff3 ; ret
0x000002000014e17a : add ah, ah ; add byte ptr [rax], al ; ret
0x000002000026ce9f : add ah, ah ; ret 0x10
0x0000020000155a8f : add ah, ah ; ret 0x4010
0x000002000014e57a : add ah, al ; add byte ptr [rax], al ; ret
0x000002000014de7a : add ah, bh ; add byte ptr [rax], al ; ret
0x000002000012ed28 : add ah, bh ; ret
0x000002000026d323 : add ah, bh ; ret 0x26
0x000002000025386b : add ah, bh ; rol dword ptr [rdx], -0x15 ; ret
0x000002000014e27a : add ah, bl ; add byte ptr [rax], al ; ret
0x000002000000dbe1 : add ah, byte ptr [rax + 0x6b] ; ret
0x00000200002629bc : add ah, byte ptr [rbx] ; or eax, dword ptr [rax] ; or eax, 0x23166006 ; ret 0xf01f
0x0000020000166b49 : add ah, byte ptr [rbx] ; ret
0x00000200005e9ec1 : add ah, byte ptr [rbx] ; ret 0x8d45
0x000002000053e0cd : add ah, byte ptr [rbx] ; ret 0xd18b
0x000002000002e253 : add ah, byte ptr [rbx] ; ret 0xf741
0x0000020000447009 : add ah, byte ptr [rcx + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x00000200004c0c94 : add ah, byte ptr [rcx + rax] ; ret
0x0000020000253b20 : add ah, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x2106ca06 ; ret 0xf01a
0x000002000025fb5c : add ah, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x21167b06 ; ret 0xf01a
0x00000200007180bf : add ah, byte ptr [rdi + rax*4 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x000002000028abfc : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22060016 ; ret 0xf01b
0x0000020000263ee8 : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22061e06 ; ret 0xf01b
0x000002000063615d : add ah, byte ptr [rdx] ; ret
0x0000020000288830 : add ah, byte ptr [rip + 0x60c000d] ; ret 0x2536
0x000002000024cf10 : add ah, byte ptr [rip + 0x60c000d] ; ret 0x2596
0x0000020000430209 : add ah, byte ptr [rsi + 0x3b] ; ret
0x000002000046c180 : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000067573c : add ah, byte ptr [rsi + 0x44] ; mov dword ptr [rdx + 2], eax ; ret
0x000002000039c967 : add ah, byte ptr [rsi + 3] ; ret 0x8966
0x000002000039c929 : add ah, byte ptr [rsi + 3] ; ret 0xf175
0x000002000002c5fe : add ah, byte ptr [rsi - 0x7b] ; ret 0x840f
0x00000200004908f0 : add ah, byte ptr [rsi - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0xf4c
0x0000020000141f4a : add ah, byte ptr [rsi - 0x7b] ; sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x00000200001513a3 : add ah, byte ptr [rsi - 9] ; ret 0x100
0x000002000028eacc : add ah, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x26061406 ; ret 0xf01f
0x000002000027d0c4 : add ah, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x26063d06 ; ret 0xf01f
0x000002000014e07a : add ah, ch ; add byte ptr [rax], al ; ret
0x0000020000265a3f : add ah, ch ; or byte ptr [rdx], cl ; ret
0x0000020000253897 : add ah, ch ; ret
0x000002000024d317 : add ah, ch ; ret 0x24
0x0000020000032b7f : add ah, ch ; xor dword ptr [rax], eax ; add dword ptr [rbx + rcx*4 + 0x74], eax ; ret 0xf08
0x000002000014e47a : add ah, cl ; add byte ptr [rax], al ; ret
0x0000020000280ff3 : add ah, cl ; jmp qword ptr [rdi]
0x00000200003708d6 : add ah, cl ; mov al, 1 ; ret
0x00000200004c741e : add ah, cl ; mov al, byte ptr [rip + 0x1e2d52] ; ret
0x00000200000e84aa : add ah, cl ; mov eax, dword ptr [rip + 0x268ed6] ; ret
0x00000200006712d2 : add ah, cl ; mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x0000020000014bdf : add ah, cl ; ret
0x000002000028a9cb : add ah, cl ; ret 0x5f
0x000002000014df7a : add ah, dh ; add byte ptr [rax], al ; ret
0x0000020000249b77 : add ah, dh ; pop rbx ; or dword ptr [rax], eax ; ret
0x000002000023d557 : add ah, dh ; ret
0x0000020000275de7 : add ah, dh ; ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000027a963 : add ah, dh ; ror dword ptr [rdi], -0x5d ; ret 0x4f
0x000002000014e37a : add ah, dl ; add byte ptr [rax], al ; ret
0x000002000026d3f3 : add ah, dl ; ret
0x0000020000402d6a : add ah, dl ; ret 0xccff
0x00000200004e64f8 : add al, 0 ; add al, al ; ret
0x00000200000e68f6 : add al, 0 ; add al, ch ; ret 0x772
0x000002000053b25a : add al, 0 ; add al, ch ; ret 0xb2a4
0x000002000015dff0 : add al, 0 ; add bl, al ; add qword ptr [rdx], r8 ; ret
0x0000020000205a2f : add al, 0 ; add bl, al ; xor eax, eax ; ret
0x00000200006c784f : add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006ce118 : add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000074038 : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x00000200006e36a0 : add al, 0 ; add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e36b1
0x000002000020b9e9 : add al, 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200006cef82 : add al, 0 ; add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000021f7a1 : add al, 0 ; add byte ptr [rax + 3], cl ; rol byte ptr [rcx], 0xac ; ret
0x000002000020ba7f : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x000002000020ba8f : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x00000200006cb03b : add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006cb04c
0x00000200006d67d9 : add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006d67ea
0x00000200006dfcf8 : add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006dfd09
0x0000020000092ab7 : add al, 0 ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x0000020000487055 : add al, 0 ; add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xa348
0x0000020000574377 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2674
0x000002000044b557 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7f], ecx ; ret 0x438
0x0000020000534af3 : add al, 0 ; add byte ptr [rax - 0x75], cl ; enter -0x7d18, -0x73 ; ret 0x49ff
0x0000020000052246 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c5f5a : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c93ff : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x6beb
0x0000020000448d40 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000037179 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200001b1716 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006cc9bf : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xeeb
0x000002000012843e : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006e5d59 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xe10
0x0000020000079b99 : add al, 0 ; add byte ptr [rax - 1], cl ; ret 0x8549
0x00000200002108f3 : add al, 0 ; add byte ptr [rax], al ; and eax, 1 ; ret
0x00000200004ac65e : add al, 0 ; add byte ptr [rax], al ; call 0x200000d28df
0x000002000012fac5 : add al, 0 ; add byte ptr [rax], al ; call rdi
0x000002000026ce58 : add al, 0 ; add byte ptr [rax], al ; clc ; ret
0x00000200000b573b : add al, 0 ; add byte ptr [rax], al ; jne 0x200000b578e ; xor al, al ; ret
0x0000020000434680 : add al, 0 ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200005fa2da : add al, 0 ; add byte ptr [rax], al ; mov dword ptr [rdx], eax ; ret
0x000002000008f8f7 : add al, 0 ; add byte ptr [rax], al ; ret
0x000002000060d6e8 : add al, 0 ; add byte ptr [rax], al ; setne al ; ret
0x00000200006d5ab5 : add al, 0 ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5ac6
0x00000200006d5b36 : add al, 0 ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5b47
0x00000200006c62b5 : add al, 0 ; add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x000002000044b887 : add al, 0 ; add byte ptr [rbp + 0x43], dh ; ret
0x00000200006c7317 : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6d59 : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x349
0x00000200006c80d1 : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8341
0x00000200006e57ff : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0xb941
0x000002000012ae44 : add al, 0 ; add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x0000020000412d5c : add al, 0 ; add byte ptr [rbp - 0x9f68a3f], al ; ret
0x00000200000c3bb8 : add al, 0 ; add byte ptr [rbx + 3], dh ; xor eax, eax ; ret
0x00000200006042fe : add al, 0 ; add byte ptr [rbx - 0x987dba4], cl ; ret
0x00000200005c4b92 : add al, 0 ; add byte ptr [rbx], bh ; ret
0x000002000044824e : add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x000002000007b322 : add al, 0 ; add byte ptr [rbx], dh ; ret 0x8348
0x00000200004e15a5 : add al, 0 ; add byte ptr [rcx + 3], al ; ret
0x000002000061a787 : add al, 0 ; add byte ptr [rcx + 3], al ; ret 0x8944
0x0000020000064e8b : add al, 0 ; add byte ptr [rcx + rdi + 0x1d], al ; xchg eax, edi ; ret
0x000002000065d56f : add al, 0 ; add byte ptr [rcx - 0x73], al ; call 0x2004527d8c7
0x00000200006c80e1 : add al, 0 ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006c6873 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000d32ef : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x00000200006cd928 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x00000200006c5f1c : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000044efdd : add al, 0 ; add byte ptr [rcx - 0x76], dh ; ret 0xe8c0
0x000002000029502a : add al, 0 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200000f183a : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000149f56 : add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x00000200003b8044 : add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x3b44
0x0000020000148697 : add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x48e9
0x000002000023010f : add al, 0 ; add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000072c0c9 : add al, 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000057434 : add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000031fe8 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000002000003e13b : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000482f4a : add al, 0 ; add byte ptr [rdi], cl ; ret 0x4389
0x000002000003bf88 : add al, 0 ; add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x00000200006d45e8 : add al, 0 ; add byte ptr [rdx], bh ; ret
0x0000020000520319 : add al, 0 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200005aba96 : add al, 0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001b6e86 : add al, 0 ; add byte ptr [rsi - 0x7b], ah ; ret
0x0000020000077903 : add al, 0 ; add dh, dh ; ret
0x000002000005b14f : add al, 0 ; add dh, dh ; ret 0x740f
0x00000200000df91f : add al, 0 ; add dh, dh ; ret 0xf0f
0x0000020000670718 : add al, 0 ; add rsp, 0x28 ; ret
0x00000200006708a6 : add al, 0 ; add rsp, 0x38 ; ret
0x0000020000105f5b : add al, 0 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000106e92 : add al, 0 ; add rsp, 0x58 ; ret
0x00000200001005b2 : add al, 0 ; add rsp, 0x68 ; ret
0x00000200000fc59b : add al, 0 ; add rsp, 0x70 ; pop rbp ; ret
0x00000200005d8aaf : add al, 0 ; je 0x200005d8ac2 ; mov eax, 0xc0000120 ; ret
0x000002000062066f : add al, 0 ; je 0x2000062067c ; mov al, 1 ; ret
0x00000200006655d4 : add al, 0 ; jl 0x200006655e1 ; mov al, 1 ; ret
0x000002000018f608 : add al, 0 ; jmp 0x2000018f61d
0x00000200004c5d80 : add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000241002 : add al, 0 ; mov r15b, 4 ; add al, ch ; jmp qword ptr [rbx]
0x00000200001755d1 : add al, 0 ; nop ; jmp 0x20000061877
0x00000200004ad6eb : add al, 0 ; or dword ptr [rax], eax ; je 0x200004ad6fc ; xor al, al ; ret
0x0000020000241142 : add al, 0 ; pop rsi ; ret
0x000002000010ca22 : add al, 0 ; ret
0x00000200000c95ab : add al, 0 ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200001a17a9 : add al, 0 ; shr cl, 0xb6 ; mov ebp, esi ; push rsi ; ret
0x0000020000520190 : add al, 0x10 ; add byte ptr [rax], al ; add rax, rdx ; ret
0x000002000007fd62 : add al, 0x10 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004ac5ca : add al, 0x10 ; sub rcx, rax ; mov rax, rcx ; ret
0x00000200005049a2 : add al, 0x11 ; cmp eax, edx ; ja 0x200005049b3 ; mov eax, ecx ; ret
0x0000020000141a89 : add al, 0x11 ; mov rax, r11 ; ret
0x0000020000158507 : add al, 0x11 ; movnti qword ptr [rcx], rax ; sfence ; ret
0x00000200003daec3 : add al, 0x11 ; ret
0x00000200001f2ba4 : add al, 0x11 ; shr rax, 0xc ; ret
0x00000200004eb20d : add al, 0x12 ; call 0x200003a0600
0x0000020000666eec : add al, 0x13 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000044efa8 : add al, 0x13 ; ret 0x4cff
0x00000200003f5c97 : add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200002874d8 : add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x00000200003c6b5a : add al, 0x18 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000021e459 : add al, 0x23 ; or ecx, dword ptr [rcx + 3] ; ret 0x8d4d
0x000002000038669d : add al, 0x23 ; ret
0x00000200005cc7d1 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000200000fe927 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000200000ecaec : add al, 0x24 ; jmp 0x200000ecab6
0x000002000054c7dd : add al, 0x24 ; jmp 0x200003d8aa5
0x000002000015e31a : add al, 0x24 ; ret
0x000002000015dd03 : add al, 0x24 ; shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x000002000012a172 : add al, 0x25 ; add al, 0x55 ; add byte ptr [rax], al ; ret
0x00000200001c1cca : add al, 0x25 ; add byte ptr cs:[rax], al ; ret
0x000002000006ad4b : add al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200001c1cd6 : add al, 0x25 ; push rbp ; add byte ptr [rax], al ; ret
0x00000200006c78c0 : add al, 0x2b ; mov edi, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x00000200000cb758 : add al, 0x2b ; ret
0x0000020000481fe4 : add al, 0x2b ; ret 0xc085
0x00000200003cd497 : add al, 0x32 ; ret
0x000002000000fecc : add al, 0x32 ; test al, 0x17 ; pop rdi ; jg 0x2000000fef6 ; ret
0x000002000000fecb : add al, 0x32 ; test al, 0x17 ; pop rdi ; jg 0x2000000fef7 ; ret
0x00000200005f7e2f : add al, 0x33 ; fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000066a097 : add al, 0x33 ; imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x00000200004e0151 : add al, 0x33 ; leave ; call rax
0x0000020000131d9d : add al, 0x33 ; leave ; call rdx
0x000002000039a456 : add al, 0x33 ; ret 0xe083
0x00000200005f006a : add al, 0x33 ; shr bl, 0 ; ret
0x000002000038e91f : add al, 0x36 ; mov dword ptr [rcx], eax ; test rdi, rdi ; je 0x2000038e8f2 ; jmp 0x2000038e8ce
0x00000200004ae53f : add al, 0x39 ; adc dword ptr [rsi*2 - 0x3d00be37], r9d ; jmp 0x200004ae522
0x000002000014c9b8 : add al, 0x3a ; ret 0x9475
0x00000200004288d4 : add al, 0x3b ; je 0x20000428902 ; jo 0x20000428952 ; ret
0x000002000043c023 : add al, 0x3b ; ret
0x000002000021ce77 : add al, 0x3b ; ret 0x470f
0x000002000014be0b : add al, 0x3b ; ret 0xe175
0x00000200005c5acc : add al, 0x3b ; ret 0xed72
0x00000200003e66bb : add al, 0x3b ; ror byte ptr [rdi], 1 ; xchg dword ptr [rax], esi ; ret
0x00000200005d3039 : add al, 0x41 ; and dword ptr [rcx], 0 ; add rsp, 0x18 ; ret
0x000002000008a178 : add al, 0x41 ; mov al, al ; ret
0x00000200000bc4c1 : add al, 0x41 ; mov al, cl ; ret
0x00000200003683ba : add al, 0x41 ; mov al, dl ; ret
0x00000200001d898f : add al, 0x41 ; mov dword ptr [rax], eax ; ret
0x000002000008ece3 : add al, 0x41 ; mov eax, eax ; ret
0x00000200001d9533 : add al, 0x41 ; mov eax, ecx ; ret
0x000002000000d09e : add al, 0x41 ; ret
0x00000200002788b8 : add al, 0x42 ; add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret 0x68
0x000002000037f449 : add al, 0x44 ; add dword ptr [rcx + 0x40], ebx ; ret
0x0000020000033a56 : add al, 0x48 ; add eax, dword ptr [rcx + 0x98] ; ret
0x000002000046f529 : add al, 0x48 ; add eax, ecx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000003362c : add al, 0x48 ; add eax, ecx ; ret
0x000002000003363f : add al, 0x48 ; add eax, edx ; ret
0x00000200001d3d57 : add al, 0x48 ; add ecx, -0x10 ; mov rax, rcx ; ret
0x00000200004d7b3d : add al, 0x48 ; add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005fc033 : add al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000008e7b8 : add al, 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001c4fc9 : add al, 0x48 ; add esp, 0x28 ; ret
0x000002000068cf9b : add al, 0x48 ; add esp, 0x38 ; ret
0x000002000015e18d : add al, 0x48 ; and dword ptr [rcx + 8], 0 ; ret
0x0000020000140f9f : add al, 0x48 ; and eax, 0x157 ; ret
0x0000020000140fff : add al, 0x48 ; and eax, 0x80 ; ret
0x0000020000140fdf : add al, 0x48 ; and eax, 1 ; ret
0x0000020000140f7f : add al, 0x48 ; and eax, 2 ; ret
0x0000020000140f5f : add al, 0x48 ; and eax, 4 ; ret
0x0000020000140fbf : add al, 0x48 ; and eax, 8 ; ret
0x000002000020c440 : add al, 0x48 ; cmp edx, eax ; jb 0x2000020c441 ; mov al, 1 ; ret
0x00000200000f8b54 : add al, 0x48 ; dec ecx ; jne 0x200000f8b54 ; ret
0x00000200000f8b53 : add al, 0x48 ; dec ecx ; jne 0x200000f8b55 ; ret
0x00000200003db3ec : add al, 0x48 ; imul eax, r10d ; ret
0x00000200003da95f : add al, 0x48 ; imul eax, r9d ; ret
0x00000200001bc1c7 : add al, 0x48 ; lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x000002000048b757 : add al, 0x48 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000048b6f0
0x000002000048b756 : add al, 0x48 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000048b6f1
0x000002000020fd5c : add al, 0x48 ; lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x00000200001ff979 : add al, 0x48 ; mov dword ptr [rcx + 0x10], edx ; ret
0x0000020000666f16 : add al, 0x48 ; mov dword ptr [rcx + 8], eax ; ret
0x000002000010fb50 : add al, 0x48 ; mov dword ptr [rcx], eax ; ret
0x0000020000120f4f : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x00000200004c441e : add al, 0x48 ; mov eax, dword ptr [rdx + 0x38] ; ret
0x00000200000de25e : add al, 0x48 ; mov eax, ecx ; ret
0x00000200006cb03e : add al, 0x48 ; mov eax, edx ; jmp 0x200006cb049
0x00000200006d67dc : add al, 0x48 ; mov eax, edx ; jmp 0x200006d67e7
0x00000200006dfcfb : add al, 0x48 ; mov eax, edx ; jmp 0x200006dfd06
0x0000020000142b4a : add al, 0x48 ; movzx ecx, dx ; and eax, ecx ; ret
0x0000020000026aa3 : add al, 0x48 ; ret
0x00000200000267c2 : add al, 0x48 ; sub eax, ecx ; ret
0x000002000038120e : add al, 0x49 ; add edx, esi ; call 0x200000dd4ca
0x00000200005ec871 : add al, 0x49 ; and dword ptr [rax], 0 ; mov al, r10b ; ret
0x0000020000601001 : add al, 0x49 ; and dword ptr [rax], 0 ; ret
0x00000200003cef61 : add al, 0x49 ; and dword ptr [rcx], 0 ; ret
0x000002000014a912 : add al, 0x49 ; dec edx ; jne 0x2000014a8ef ; ret
0x0000020000055011 : add al, 0x49 ; mov dword ptr [rax], eax ; ret
0x00000200000b55df : add al, 0x49 ; mov dword ptr [rax], ecx ; ret
0x00000200004f9952 : add al, 0x49 ; mov eax, eax ; ret
0x00000200000366e2 : add al, 0x49 ; mov eax, ecx ; ret
0x0000020000123806 : add al, 0x4b ; add rsp, 0x40 ; pop rbx ; ret
0x000002000020c424 : add al, 0x4c ; cmp eax, eax ; jb 0x2000020c421 ; mov al, 1 ; ret
0x00000200002154bb : add al, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x0000020000095e35 : add al, 0x4d ; mov dword ptr [rcx], eax ; ret
0x000002000000d17a : add al, 0x4e ; ret 0x3b3
0x0000020000209639 : add al, 0x4f ; add rsp, 0x50 ; pop rdi ; ret
0x000002000046309d : add al, 0x51 ; jne 0x200004630b0 ; test eax, eax ; setg al ; ret
0x000002000012a174 : add al, 0x55 ; add byte ptr [rax], al ; ret
0x0000020000039feb : add al, 0x57 ; add byte ptr [rax], al ; movsxd r8, eax ; jne 0x2000003a034 ; ret
0x0000020000011801 : add al, 0x5d ; ret
0x0000020000515648 : add al, 0x63 ; ret 0x48ff
0x000002000047a811 : add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000046be5d : add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000000d0dc : add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x0000020000206362 : add al, 0x6b ; ret 0x2b32
0x0000020000206172 : add al, 0x6b ; ret 0x4432
0x00000200004799e0 : add al, 0x72 ; in eax, dx ; mov eax, 1 ; ret
0x0000020000675ba2 : add al, 0x72 ; leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004dcad9 : add al, 0x72 ; loop 0x200004dcb2d ; add esp, 0x20 ; pop rbx ; ret
0x00000200000a0f34 : add al, 0x72 ; ret
0x00000200006685a1 : add al, 0x73 ; jbe 0x20000668534 ; ret 0x3949
0x000002000037f447 : add al, 0x74 ; add al, 0x44 ; add dword ptr [rcx + 0x40], ebx ; ret
0x00000200002008a2 : add al, 0x74 ; jmp 0x1ff8d6cdae4
0x00000200002008a1 : add al, 0x74 ; jmp 0x1ff8d6cdae5
0x00000200004f1118 : add al, 0x74 ; or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200005373b7 : add al, 0x74 ; or esi, esi ; ret
0x00000200001f684c : add al, 0x74 ; sbb dh, dh ; ret
0x000002000037f50b : add al, 0x74 ; sbb eax, 0x84cf8b48 ; ret
0x00000200004c6c4a : add al, 0x75 ; add eax, 0x58c48348 ; ret
0x00000200004f47be : add al, 0x75 ; add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x000002000014089c : add al, 0x75 ; and al, 0xf6 ; ret
0x0000020000207567 : add al, 0x75 ; jge 0x200002074fd ; je 0x20000207580 ; ret 0x1a8
0x0000020000094b8f : add al, 0x75 ; or dword ptr [rcx - 0x76], eax ; ret
0x00000200000dc0c6 : add al, 0x75 ; out dx, eax ; test al, dl ; jne 0x200000dc0df ; xor al, al ; ret
0x00000200003fee95 : add al, 0x75 ; ret
0x000002000004da39 : add al, 0x75 ; ret 0x8d48
0x0000020000063e33 : add al, 0x75 ; rol byte ptr [rbp - 0x7c], cl ; ret
0x00000200001427a2 : add al, 0x75 ; sbb al, 0xf6 ; ret
0x0000020000448051 : add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200001471ed : add al, 0x76 ; add eax, 0x7520f983 ; cmp esi, esi ; ret
0x000002000071edb1 : add al, 0x76 ; or dword ptr [rax - 0x7bf0ffc1], eax ; pop rax ; ret 0xfffc
0x000002000050164c : add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x000002000044e8a8 : add al, 0x7c ; in eax, -1 ; call 0x200000702b7
0x000002000054d38a : add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x000002000067b249 : add al, 0x7e ; mov eax, 1 ; ret
0x00000200006dad98 : add al, 0x80 ; add byte ptr [rax], dl ; jo 0x200006dad2f ; ret
0x000002000038a7ad : add al, 0x81 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003360a : add al, 0x81 ; ret
0x000002000045f3cd : add al, 0x81 ; ret 0xf7
0x0000020000033612 : add al, 0x82 ; ret
0x00000200003dae2b : add al, 0x82 ; sub eax, ecx ; ret
0x00000200003dabe0 : add al, 0x82 ; sub eax, r8d ; ret
0x0000020000602f05 : add al, 0x83 ; cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x000002000013f489 : add al, 0x83 ; loopne 0x2000013f492 ; ret
0x00000200000ca97c : add al, 0x83 ; ret
0x000002000011bc77 : add al, 0x83 ; ret 0x2307
0x00000200004b755b : add al, 0x83 ; ret 0x4128
0x00000200005a4f21 : add al, 0x83 ; ret 0x4804
0x000002000039d515 : add al, 0x83 ; ret 0x8908
0x000002000039adfb : add al, 0x83 ; ret 0x8918
0x00000200004d492c : add al, 0x83 ; ret 0xe830
0x000002000053c843 : add al, 0x83 ; ret 0xe918
0x000002000053a43f : add al, 0x83 ; ret 0xeb18
0x000002000010023d : add al, 0x83 ; ret 0xebe0
0x000002000038a6ee : add al, 0x83 ; stc ; xor byte ptr [rdx - 0x30], dh ; mov rax, r8 ; ret
0x00000200001418f0 : add al, 0x84 ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013fe7c : add al, 0x84 ; div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x00000200000358d1 : add al, 0x85 ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000066a093 : add al, 0x85 ; ret 0x474
0x0000020000673391 : add al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000d5455 : add al, 0x88 ; mov byte ptr [rcx + 0x48000002], cl ; mov eax, edx ; jmp 0x200000d53ec
0x000002000064b51d : add al, 0x88 ; mov eax, edi ; sub eax, edx ; jmp 0x2000064b52f
0x00000200003db479 : add al, 0x88 ; ret
0x000002000013e352 : add al, 0x89 ; add eax, 0x19a0bb ; xor eax, eax ; ret
0x0000020000220ab5 : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000632f71 : add al, 0x89 ; add rsp, 0x28 ; ret
0x0000020000472433 : add al, 0x89 ; je 0x20000472461 ; and al, 0xff ; ret 0xbdeb
0x0000020000026aa1 : add al, 0x8a ; add al, 0x48 ; ret
0x00000200001c0a1c : add al, 0x8a ; inc dword ptr [r10 + 0xc] ; ret
0x00000200001c0a53 : add al, 0x8a ; inc dword ptr [r10 + 8] ; ret
0x0000020000227102 : add al, 0x8a ; ret 0x8eb
0x00000200003d2bea : add al, 0x8a ; ret 0xbb
0x000002000039c27c : add al, 0x8b ; add al, 0xc1 ; jmp 0x1ffc1fc4da3
0x0000020000230e48 : add al, 0x8b ; add al, 0xf6 ; ret 0x7410
0x00000200003b245e : add al, 0x8b ; mov qword ptr [rsp + rcx*8 + 0x50], rax ; inc edx ; jmp 0x200003b2459
0x000002000009d47c : add al, 0x8b ; or bl, al ; or eax, 0xffffffff ; ret
0x000002000010487e : add al, 0x8b ; ret
0x0000020000568dc5 : add al, 0x8b ; ret 0x1ba
0x0000020000491cde : add al, 0x8b ; ret 0x2b44
0x00000200006c5918 : add al, 0x8b ; ret 0x4feb
0x0000020000383474 : add al, 0x8b ; ret 0xb5eb
0x00000200004f111f : add al, 0x8b ; ret 0xb8c3
0x00000200004e0d8e : add al, 0x8b ; ret 0xe083
0x000002000020a1ae : add al, 0x8b ; ret 0xe8c1
0x00000200001b8c92 : add al, 0x8b ; sti ; jmp 0x200001b8cd5
0x0000020000479919 : add al, 0x8d ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200003cab43 : add al, 0x90 ; ret
0x00000200003daf3f : add al, 0x90 ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200006687ef : add al, 0x91 ; add rax, r9 ; ret
0x000002000015840c : add al, 0x95 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000062cdf6 : add al, 0x96 ; inc edx ; jmp 0x2000062cdec
0x0000020000510110 : add al, 0x96 ; ret 0xf7ff
0x000002000062cdf3 : add al, 0x97 ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x2000062cdef
0x00000200001054c9 : add al, 0xa ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x0000020000629b8c : add al, 0xa ; inc edx ; jmp 0x20000629b84
0x00000200004914b4 : add al, 0xa ; ret
0x0000020000600b08 : add al, 0xa0 ; jmp qword ptr [rbx]
0x00000200000f539e : add al, 0xb ; ret
0x00000200001a7bcb : add al, 0xb ; ret 0x8b41
0x000002000002d386 : add al, 0xb ; ret 0xd1f7
0x00000200007187e1 : add al, 0xc0 ; mov qword ptr [rip - 0x3c6db2], rax ; ret
0x000002000039c27f : add al, 0xc1 ; jmp 0x1ffc1fc4da0
0x000002000039c27e : add al, 0xc1 ; jmp 0x1ffc1fc4da1
0x000002000013fb15 : add al, 0xc1 ; movzx eax, byte ptr [rax + 0x48] ; ret
0x0000020000025afd : add al, 0xc1 ; ret
0x00000200000ff7e1 : add al, 0xc1 ; test dword ptr [rax], edx ; jne 0x200000ff7f2 ; xor eax, eax ; ret
0x00000200000f7490 : add al, 0xc2 ; jmp 0x200000f741b
0x00000200003ee3bc : add al, 0xc2 ; jmp 0x200003ee38a
0x000002000048b75a : add al, 0xc2 ; jmp 0x2000048b6ed
0x000002000052017e : add al, 0xc3 ; add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x0000020000378804 : add al, 0xc3 ; mov al, 2 ; ret
0x00000200003ae0df : add al, 0xc3 ; mov eax, 0xc0000023 ; ret
0x000002000009c083 : add al, 0xc3 ; mov eax, 1 ; ret
0x000002000010a3e4 : add al, 0xc3 ; mov eax, 3 ; ret
0x00000200004b04ba : add al, 0xc3 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000a65e0 : add al, 0xc5 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000393eb2 : add al, 0xc8 ; add rax, r10 ; ret
0x0000020000547f37 : add al, 0xc8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x0000020000514dbc : add al, 0xc8 ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200000acdf2 : add al, 0xc8 ; mov al, r10b ; add rsp, 0x28 ; ret
0x00000200005b5e62 : add al, 0xc8 ; mov ecx, 1 ; call rax
0x000002000037526f : add al, 0xc8 ; mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x0000020000393eae : add al, 0xc8 ; mov rax, qword ptr [rax + rcx*8] ; add rax, r10 ; ret
0x00000200000a90bf : add al, 0xc8 ; ret
0x0000020000714b00 : add al, 0xc9 ; ret
0x0000020000014beb : add al, 0xcc ; ret 4
0x00000200003f9698 : add al, 0xce ; ret
0x00000200000e77b3 : add al, 0xd0 ; inc edx ; jmp 0x200000e77a8
0x000002000008e8b2 : add al, 0xd0 ; ret
0x000002000059280d : add al, 0xd1 ; dec dword ptr [rax + 0xf] ; ret 0x15eb
0x00000200000e77af : add al, 0xd6 ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000e77ac
0x00000200001e09d8 : add al, 0xe0 ; or eax, dword ptr [rax] ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200003d2af8 : add al, 0xe5 ; ret 0xebff
0x0000020000382184 : add al, 0xe8 ; div byte ptr [rsi - 0x7c990023] ; ret
0x0000020000673620 : add al, 0xe8 ; fimul dword ptr [rcx] ; ret 0x48ff
0x000002000049497b : add al, 0xe8 ; ret
0x0000020000661d38 : add al, 0xe8 ; ret 0xc322
0x00000200004362f8 : add al, 0xe8 ; ret 0xfffc
0x00000200001b5fcd : add al, 0xe9 ; pop rsp ; ret 0xfff7
0x0000020000186c18 : add al, 0xe9 ; ret
0x00000200005903d6 : add al, 0xe9 ; ret 0xfff1
0x00000200004d9ff0 : add al, 0xeb ; out dx, eax ; mov eax, 0xc000000e ; ret
0x00000200003e49ff : add al, 0xeb ; push rsi ; ret
0x00000200000fb64d : add al, 0xeb ; ret 0x5f6
0x0000020000722584 : add al, 0xef ; ret 0x75ff
0x00000200005d718a : add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200003a99fc : add al, 0xf ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000038fedd : add al, 0xf ; mov bh, 0xc1 ; ret
0x00000200005008ba : add al, 0xf ; mov dh, 0x4f ; add dword ptr [rax - 0x7d], ecx ; ret 0x8d08
0x00000200005eae13 : add al, 0xf ; mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x00000200000cc7ea : add al, 0xf ; ret
0x0000020000188074 : add al, 0xf ; test byte ptr [rbx], dl ; insd dword ptr [rdi], dx ; int1 ; push rsi ; ret 0xba01
0x00000200006ed238 : add al, 0xf ; test byte ptr [rsi - 0x74fffce2], ah ; ret
0x000002000044820f : add al, 0xf ; test dword ptr [rax - 0x9ffffff], ebx ; ret 0x7402
0x0000020000031982 : add al, 0xf ; test dword ptr [rax - 0xfffff5], esi ; ret 0x854d
0x00000200004af954 : add al, 0xf ; test dword ptr [rax], eax ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000007d087 : add al, 0xf ; test dword ptr [rbx - 0x9ffefdc], ebx ; ret
0x00000200003b0121 : add al, 0xf ; test dword ptr [rcx - 0x9ffe6ef], ebx ; ret
0x0000020000486dae : add al, 0xf ; test dword ptr [rsi], edx ; ret
0x000002000013476d : add al, 0xf ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200000fe59c : add al, 0xf0 ; dec dword ptr [rcx] ; ret
0x000002000067a580 : add al, 0xf0 ; inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001fba8b : add al, 0xf0 ; inc dword ptr [rcx + 8] ; ret
0x000002000043b108 : add al, 0xf5 ; ret 0x48ff
0x00000200002376e9 : add al, 0xf6 ; ret
0x000002000048df10 : add al, 0xf6 ; ret 0x7401
0x00000200005722a0 : add al, 0xf6 ; ret 0x7402
0x00000200005f5909 : add al, 0xf6 ; ret 0x7403
0x00000200004e0299 : add al, 0xf6 ; ret 0x7408
0x0000020000230e4b : add al, 0xf6 ; ret 0x7410
0x00000200003d2c92 : add al, 0xf6 ; ret 0x7502
0x000002000019446b : add al, 0xf6 ; ret 0x7508
0x0000020000420771 : add al, 0xf6 ; ret 0x7520
0x00000200005eae1a : add al, 0xf7 ; ret
0x0000020000075d53 : add al, 0xf7 ; ret 0xfffd
0x00000200001cd99f : add al, 0xf7 ; shl dword ptr [rbx], cl ; ret
0x00000200001b7fa0 : add al, 0xf8 ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000508654 : add al, 0xfa ; ret 0x48ff
0x000002000008ec4b : add al, 0xfd ; lock dec dword ptr [rcx + 0x8c] ; ret
0x000002000042bb49 : add al, 0xff ; leave ; jne 0x2000042bb46 ; ret
0x00000200001bf848 : add al, 0xff ; ret
0x00000200005d053f : add al, 0xff ; ret 0x15eb
0x0000020000220919 : add al, 0xff ; ret 0x3b4c
0x0000020000516817 : add al, 0xff ; ret 0x533b
0x000002000011f7dc : add al, 0xff ; ret 0x5489
0x0000020000625aab : add al, 0xff ; xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c4d5d : add al, 1 ; add byte ptr [rax - 0x75], al ; ret 0xc148
0x000002000067b00b : add al, 1 ; add byte ptr [rax], al ; ret
0x00000200001d174a : add al, 1 ; cmp r8d, r9d ; jae 0x200001d175d ; mov al, 1 ; ret
0x0000020000586742 : add al, 1 ; ret
0x00000200001c12f5 : add al, 2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000d93a8 : add al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4b89
0x0000020000612c15 : add al, 3 ; ret 0x8948
0x00000200000aa33f : add al, 4 ; add byte ptr [rax], al ; ret
0x00000200002486c8 : add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x000002000027bf00 : add al, 6 ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c240 : add al, 6 ; clts ; sysenter
0x0000020000275bd0 : add al, 6 ; cmp eax, dword ptr [rsi] ; sysenter
0x0000020000251528 : add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x000002000026dfa4 : add al, 6 ; sbb al, 6 ; sysenter
0x00000200004388c8 : add al, 7 ; ret
0x000002000012e1d2 : add al, 8 ; ret
0x000002000066f941 : add al, 9 ; ret
0x000002000015017a : add al, ah ; add byte ptr [rax], al ; ret
0x000002000025d34f : add al, ah ; push 0x46 ; add byte ptr [rax], ch ; ret
0x000002000002128f : add al, ah ; ret
0x000002000023d303 : add al, ah ; ret 0x23
0x000002000025d30b : add al, ah ; ret 0x25
0x00000200002433b7 : add al, ah ; ret 0x3b
0x000002000015057a : add al, al ; add byte ptr [rax], al ; ret
0x0000020000024bbd : add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d6b97 : add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e2ef3 : add al, al ; add rsp, 0x28 ; ret
0x000002000022529d : add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000135b58 : add al, al ; add rsp, 0x38 ; ret
0x0000020000119178 : add al, al ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001d02fb : add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000009c74b : add al, al ; add rsp, 0x48 ; ret
0x000002000020c582 : add al, al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005f906a : add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200005f7678 : add al, al ; add rsp, 0xa8 ; ret
0x00000200001bd61c : add al, al ; and dword ptr [r9], 0 ; ret
0x00000200000a639e : add al, al ; call 0x1ffc30b87af
0x00000200000e7b6d : add al, al ; call 0x1ffc30f9f7e
0x00000200000ec2ff : add al, al ; call 0x1ffc331040f
0x00000200000ec2fe : add al, al ; call 0x1ffc3310410
0x00000200004c0c91 : add al, al ; call 0x1ffc34d30a0
0x00000200004e7b65 : add al, al ; call 0x1ffc34f9f75
0x00000200004895d6 : add al, al ; call 0x1ffc36ad6e8
0x00000200004895d5 : add al, al ; call 0x1ffc36ad6e9
0x00000200001c2b39 : add al, al ; call 0x200000cee00
0x00000200004a0ed2 : add al, al ; call 0x200000cee01
0x00000200005f4a94 : add al, al ; cmove eax, ecx ; add rsp, 0x28 ; ret
0x00000200004f4691 : add al, al ; cmovne eax, ecx ; add rsp, 0x28 ; ret
0x00000200000f92dd : add al, al ; cmp eax, ecx ; ja 0x200000f92ea ; ret
0x00000200006f9077 : add al, al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b5970 : add al, al ; je 0x200000b597d ; mov eax, ecx ; ret
0x00000200000c95ac : add al, al ; je 0x200000c95b9 ; mov al, 1 ; ret
0x000002000010d108 : add al, al ; je 0x2000010d115 ; mov al, 1 ; ret
0x00000200002074a4 : add al, al ; je 0x200002074b7 ; mov eax, 1 ; ret
0x0000020000493cc5 : add al, al ; je 0x20000493c8e ; jmp 0x20000493c9b
0x0000020000169475 : add al, al ; jmp 0x20000035688
0x000002000017b220 : add al, al ; jmp 0x20000072210
0x0000020000197c5b : add al, al ; jmp 0x200000d2853
0x00000200000e01a4 : add al, al ; jmp 0x200000e0154
0x00000200001a17aa : add al, al ; jmp 0x200000fa16f
0x000002000013fbde : add al, al ; jmp 0x2000013fba8
0x0000020000121e92 : add al, al ; jmp 0x200001ae13f
0x0000020000205743 : add al, al ; jmp 0x200002058df
0x000002000022554e : add al, al ; jmp 0x200002255bd
0x000002000022c391 : add al, al ; jmp 0x2000022c454
0x00000200003844cc : add al, al ; jmp 0x20000384495
0x000002000054179f : add al, al ; jmp 0x200003b0f4a
0x00000200003e3121 : add al, al ; jmp 0x200003df401
0x0000020000552151 : add al, al ; jmp 0x200003e406a
0x0000020000553058 : add al, al ; jmp 0x200003e8587
0x0000020000402948 : add al, al ; jmp 0x20000402912
0x00000200004212ad : add al, al ; jmp 0x20000421276
0x000002000056c05d : add al, al ; jmp 0x20000438a5e
0x0000020000574cef : add al, al ; jmp 0x20000450fac
0x0000020000455412 : add al, al ; jmp 0x20000455a49
0x0000020000585e60 : add al, al ; jmp 0x200004920ce
0x0000020000587bb0 : add al, al ; jmp 0x20000493e22
0x00000200005881fb : add al, al ; jmp 0x200004944eb
0x000002000058e149 : add al, al ; jmp 0x200004a53b7
0x000002000058e95e : add al, al ; jmp 0x200004a7ca6
0x000002000058ff8e : add al, al ; jmp 0x200004ac251
0x0000020000596d6c : add al, al ; jmp 0x200004c2ff1
0x00000200004c8a7d : add al, al ; jmp 0x200004c8a47
0x000002000059e1ed : add al, al ; jmp 0x200004da4b5
0x00000200005a2c1f : add al, al ; jmp 0x200004e6757
0x00000200004ed0df : add al, al ; jmp 0x200004ed0a8
0x00000200004ee559 : add al, al ; jmp 0x200004ee523
0x00000200004f3a7d : add al, al ; jmp 0x200004f3a47
0x00000200004f3dc0 : add al, al ; jmp 0x200004f3d89
0x000002000051a7d8 : add al, al ; jmp 0x2000051a7a1
0x00000200005b49e3 : add al, al ; jmp 0x2000051d610
0x00000200005db453 : add al, al ; jmp 0x200005db41c
0x000002000060d7fd : add al, al ; jmp 0x2000060d8f2
0x000002000064be63 : add al, al ; jmp 0x2000064bf5a
0x000002000067ce7e : add al, al ; jmp 0x2000067ce7d
0x000002000068e456 : add al, al ; jmp 0x2000068a689
0x00000200006fe1db : add al, al ; jmp 0x200006fe1a5
0x0000020000240fe3 : add al, al ; jmp qword ptr [rbx]
0x00000200001f64ad : add al, al ; mov dword ptr [rdx], eax ; ret
0x00000200001d3d49 : add al, al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005db53a : add al, al ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000653b36 : add al, al ; mov eax, edx ; jmp 0x20000653b44
0x00000200005d8f2c : add al, al ; mov eax, edx ; ret
0x000002000064821c : add al, al ; mov eax, r10d ; ret
0x00000200001d78aa : add al, al ; mov eax, r8d ; ret
0x00000200002155b8 : add al, al ; mov eax, r9d ; ret
0x000002000023964a : add al, al ; mov rbx, qword ptr [rsp + 8] ; mov eax, ecx ; ret
0x00000200000eb1d4 : add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000053cdc0 : add al, al ; mov rcx, rsi ; call 0x20000068fd7
0x0000020000257fc7 : add al, al ; or al, 0x16 ; add byte ptr [rsi], ah ; ret
0x0000020000014e12 : add al, al ; ret
0x000002000024d2e7 : add al, al ; ret 0x24
0x00000200001e0203 : add al, al ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200000c5569 : add al, al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200001c7856 : add al, al ; test r9, r9 ; je 0x200001c7868 ; call r9
0x000002000015e2d0 : add al, al ; xor eax, eax ; ret
0x000002000014fe7a : add al, bh ; add byte ptr [rax], al ; ret
0x000002000037061e : add al, bh ; inc dword ptr [rcx] ; ret
0x0000020000222bbf : add al, bh ; jg 0x20000222bfa ; ret 0xd233
0x0000020000281027 : add al, bh ; jmp qword ptr [rdi]
0x000002000024b57b : add al, bh ; ret
0x0000020000272877 : add al, bh ; ret 0x4d
0x0000020000020857 : add al, bh ; sysenter
0x000002000015027a : add al, bl ; add byte ptr [rax], al ; ret
0x00000200004ca509 : add al, bl ; mov eax, 0xc000000d ; ret
0x000002000015e28e : add al, bl ; mov eax, dword ptr [rip + 0x144cf6] ; ret
0x00000200000dea97 : add al, bl ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000024d40f : add al, bl ; ret
0x0000020000021f57 : add al, bl ; ret 0x58aa
0x0000020000378807 : add al, bl ; xor al, al ; ret
0x000002000045c712 : add al, bl ; xor eax, eax ; ret
0x0000020000371bde : add al, bpl ; ret
0x00000200001145c0 : add al, byte ptr [r13 + 0x499575c9] ; mov eax, eax ; ret
0x000002000002a8bd : add al, byte ptr [r14*2 - 0x7d75bbe1] ; ret
0x00000200001364d8 : add al, byte ptr [r15 + r9 - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000042e256 : add al, byte ptr [r8] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200000339eb : add al, byte ptr [r9 - 1] ; ret 0x34c
0x00000200004ea359 : add al, byte ptr [r9] ; jne 0x200004ea368 ; xor eax, eax ; ret
0x00000200004a6a4b : add al, byte ptr [rax] ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c0c8f : add al, byte ptr [rax] ; add al, al ; call 0x1ffc34d30a2
0x0000020000094726 : add al, byte ptr [rax] ; add al, al ; ret
0x000002000051185e : add al, byte ptr [rax] ; add al, ch ; cli ; ret
0x00000200000ae314 : add al, byte ptr [rax] ; add al, ch ; in al, dx ; ret
0x0000020000510f0a : add al, byte ptr [rax] ; add al, ch ; int 0xc3
0x00000200003f3143 : add al, byte ptr [rax] ; add al, ch ; jne 0x200003f314d ; ret
0x000002000051d3af : add al, byte ptr [rax] ; add al, ch ; or dword ptr [rdx], ecx ; ret
0x000002000043b550 : add al, byte ptr [rax] ; add al, ch ; pop rax ; ret
0x00000200000b8d2d : add al, byte ptr [rax] ; add al, ch ; ret
0x00000200000cb026 : add al, byte ptr [rax] ; add al, ch ; ret 0x21
0x000002000051f13e : add al, byte ptr [rax] ; add al, ch ; sbb ch, bl ; ret 0x8bff
0x00000200006cf090 : add al, byte ptr [rax] ; add bh, bh ; loopne 0x200006cf0e7 ; add esp, 0x48 ; ret
0x000002000003d772 : add al, byte ptr [rax] ; add bh, bh ; mov edi, 0x8b4dffff ; ret
0x00000200000a3622 : add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000613da5 : add al, byte ptr [rax] ; add bh, bh ; ret 0x3b41
0x00000200000ce8f6 : add al, byte ptr [rax] ; add bh, bh ; ret 0x5489
0x00000200000628a5 : add al, byte ptr [rax] ; add bh, bh ; ret 0x8348
0x00000200000cdaf7 : add al, byte ptr [rax] ; add bh, bh ; ret 0x9489
0x000002000064071d : add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000012c1fe : add al, byte ptr [rax] ; add bh, dh ; ret
0x00000200003ca7d4 : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000002000012941d : add al, byte ptr [rax] ; add bl, al ; mov eax, 1 ; ret
0x0000020000141309 : add al, byte ptr [rax] ; add bl, ch ; ret 0xd148
0x000002000007903b : add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x0000020000571131 : add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000a8888 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200005a87e8 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x0000020000232896 : add al, byte ptr [rax] ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x00000200006f0df4 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000369879 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200001d6fa6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x17000009], al ; ret 0x4869
0x0000020000516d53 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3fffff0f], bh ; ret
0x0000020000069fc8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add byte ptr [r13 - 0x75], r9b ; ret 0x8b49
0x000002000043a68f : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000006a619
0x0000020000113009 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000069f09 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x4cf0
0x000002000012999e : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000a70db : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005e4ca : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x000002000045d435 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3348
0x000002000007ad09 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x5189
0x00000200000d5459 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x82eb
0x00000200004b932b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000369769 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000369657 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000a8ba3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; push rdi ; and byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000c5d20 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000c5d31 ; ret
0x00000200000cb1d1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000036c546 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200003d9a0b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4920
0x000002000070cb41 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x000002000018f76b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe840
0x00000200000aae36 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x7d ; ret 0x7402
0x00000200001fc383 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004f991e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x00000200004f98cf : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x0000020000124b86 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000020000184332 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000200001dccfc : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004003cc : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004678eb : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005ae1f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x00000200004bbe91 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200004037fb : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x0000020000469e8e : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x00000200005a061a : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x200005a063c
0x000002000025b3b0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea esi, dword ptr [rbp + rax*2] ; ret
0x00000200000967d9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov cr8, rcx ; ret
0x00000200005a5968 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x61], ebx ; call r15
0x00000200003eb67c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, esi ; jmp 0x200003eb649
0x000002000009c08c : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000026e088 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x4c9c
0x00000200002916d8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; std ; shl dword ptr [rbx], 0x23 ; ret 0x63
0x0000020000066c5d : add al, byte ptr [rax] ; add byte ptr [rax], bh ; xchg eax, ebx ; ret 0
0x00000200000893d0 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x000002000045ea65 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200006f8d48 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], cl ; ret
0x00000200000296f8 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200006e77c6 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x000002000038cdf2 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call rax
0x00000200000cbadb : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3a], al ; ret 0x850f
0x000002000002ea12 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200003ca056 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; cwde ; ret 0xfff0
0x00000200004d119c : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x1846
0x000002000006ebbe : add al, byte ptr [rax] ; add byte ptr [rbp - 0x73], al ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000208c8c : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb008e], cl ; ret 0xfa8b
0x00000200004b1a9a : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000009f761 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000393eea : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x0000020000142d06 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x00000200001278fd : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0xc149
0x000002000006bfee : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; xchg eax, esp ; int 0x80
0x00000200000d9c16 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x00000200000310eb : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000643c81 : add al, byte ptr [rax] ; add byte ptr [rbp - 0xd18a40], al ; ret
0x000002000005c806 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x4d], cl ; and dh, dh ; ret
0x0000020000574c46 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 5], cl ; clc ; ret
0x00000200000b858a : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0x7c], cl ; ret 0x248
0x00000200006d490f : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d5086 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54e5 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x50] ; call rbx
0x00000200006d5288 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x58] ; call rbx
0x00000200000462c2 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x000002000003d7cd : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49f04bab], cl ; ret 0xb41
0x000002000012a846 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x6374b63f], cl ; ret 0xd80
0x00000200003c75aa : add al, byte ptr [rax] ; add byte ptr [rbx - 0x73f0fd06], al ; ret 1
0x00000200005ee844 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0f017], al ; ret
0x0000020000417454 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x000002000013855a : add al, byte ptr [rax] ; add byte ptr [rbx], ah ; ret 0x8489
0x00000200000999c8 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret
0x000002000044f9ea : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x00000200004b8ea7 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000059361b : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x000002000044bf21 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x0000020000146c60 : add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret
0x00000200000abbef : add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0x589
0x00000200000e4e69 : add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0xd233
0x00000200004596b4 : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; fcomi st(7) ; ret 0xffff
0x00000200001ca2e5 : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x00000200001fb51d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret
0x000002000041e702 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000149d2b : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x8e0f
0x000002000050cb94 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000013eaa8 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000050922d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000108162 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000006ecd1 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000007907d : add al, byte ptr [rax] ; add byte ptr [rcx + 0xb], cl ; ret 0x2548
0x000002000003cd1e : add al, byte ptr [rax] ; add byte ptr [rcx + 0xf], al ; fdivr st(7), st(0) ; ret 0xff00
0x00000200004b8732 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x40 ; inc edx ; jmp 0x200004b86fd
0x00000200003bebc5 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*8 - 0x74b3be8c], al ; ret 0xc2f6
0x0000020000490898 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000020c7a3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000425413 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x3b45
0x0000020000393e86 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8141
0x000002000045c053 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; sbb dh, bh ; ret
0x000002000038de0f : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; iretd ; call rax
0x00000200000948ee : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 + 0x3b], r9b ; ret 0x1774
0x0000020000142d12 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000065377 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006c72bb : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xf8bf
0x00000200000852b3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x0000020000506632 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x0000020000478359 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200004db1a5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000003da7c : add al, byte ptr [rax] ; add byte ptr [rcx], al ; sete al ; ret
0x000002000022c778 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000413bce : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000041e1e6 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200000eb509 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000037fd49 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000066ea0 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; lodsd eax, dword ptr [rsi] ; ret
0x000002000020e15e : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; xor ecx, dword ptr [rax - 1] ; ret
0x00000200000692a6 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000040c9f : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x00000200000319cb : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x93 ; ret
0x000002000043d572 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; test esi, edi ; call qword ptr [rdx]
0x000002000044c3d3 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg dword ptr [rax + 0x6b], ebp ; adc al, byte ptr [rax] ; ret
0x00000200000fb998 : add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x75], al ; ret
0x0000020000092a31 : add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x79], al ; ret
0x000002000006853e : add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x00000200001c617c : add al, byte ptr [rax] ; add byte ptr [rdx - 0x1b], dh ; xor eax, eax ; ret
0x000002000013c4d1 : add al, byte ptr [rax] ; add byte ptr [rdx], ah ; ret 0xd8f6
0x00000200000ed207 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4e74
0x000002000002ac2b : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200001b6e67 : add al, byte ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200004dd0e7 : add al, byte ptr [rax] ; add ch, bh ; jbe 0x200004dd117 ; call 0x200000ffb25
0x00000200000cb4fd : add al, byte ptr [rax] ; add cl, ch ; ret
0x0000020000455b9a : add al, byte ptr [rax] ; add cl, ch ; ret 0xfff8
0x00000200000cc43c : add al, byte ptr [rax] ; add cl, ch ; sub eax, 0xf6fffffa ; ret
0x000002000051d014 : add al, byte ptr [rax] ; add dh, al ; and al, 0x20 ; add al, ch ; call qword ptr [rdx]
0x00000200004d241f : add al, byte ptr [rax] ; add dh, bh ; ret 0x3345
0x0000020000025c75 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003a6d0c : add al, byte ptr [rax] ; add dh, dh ; ret 0x7503
0x000002000049eed0 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000020000034351 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x00000200003b10d5 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x00000200000b22eb : add al, byte ptr [rax] ; add dh, dh ; ret 0xff0
0x000002000024236e : add al, byte ptr [rax] ; add eax, 0x20000dc4 ; ret 5
0x0000020000666d26 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000121cc4 : add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x000002000011a18f : add al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000066ec99 : add al, byte ptr [rax] ; and dword ptr [rip + 0x2240a], 0 ; ret
0x00000200006449b1 : add al, byte ptr [rax] ; call 0x200004f0c08
0x000002000062a677 : add al, byte ptr [rax] ; call 0x2000051b231
0x000002000004d9dd : add al, byte ptr [rax] ; jmp 0x2000004d9a7
0x000002000004dc51 : add al, byte ptr [rax] ; jmp 0x2000004dac6
0x00000200005a0ad6 : add al, byte ptr [rax] ; jmp 0x200005a0a9f
0x0000020000666b83 : add al, byte ptr [rax] ; jmp 0x20000666b93
0x00000200006feed9 : add al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006688d4 : add al, byte ptr [rax] ; mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x0000020000668920 : add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200000f860c : add al, byte ptr [rax] ; or edx, eax ; xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x000002000066232a : add al, byte ptr [rax] ; ret
0x000002000023af72 : add al, byte ptr [rax] ; ret 0x26a
0x0000020000647d40 : add al, byte ptr [rax] ; rol bl, 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200005f3401 : add al, byte ptr [rax] ; rol bl, 0x4c ; mov dword ptr [rcx], ecx ; ret
0x00000200000b597f : add al, byte ptr [rax] ; rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000064821b : add al, byte ptr [rax] ; rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x000002000066f9ef : add al, byte ptr [rax] ; rol dword ptr [rax], 0 ; add al, ch ; pop rsi ; ret 0xffbb
0x00000200000eb1d3 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200005f9069 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200005f90d6 ; ret
0x000002000020da00 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000070a164 : add al, byte ptr [rax] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000596d8a : add al, byte ptr [rax] ; shr cl, 0xec ; ret
0x00000200001336ff : add al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005d00b0 : add al, byte ptr [rbp + 0x23] ; fldenv dword ptr [rbx] ; ret
0x000002000053e1ca : add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x000002000062f8b9 : add al, byte ptr [rbp + 0x33] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000063ddf : add al, byte ptr [rbp + 0x33] ; rol byte ptr [rbp - 0x7c], cl ; ret
0x0000020000367eda : add al, byte ptr [rbp + 0x33] ; shr al, 0x69 ; ret
0x000002000072c2cd : add al, byte ptr [rbp + 0x3b] ; ret
0x00000200001145c1 : add al, byte ptr [rbp + 0x499575c9] ; mov eax, eax ; ret
0x00000200003e64f1 : add al, byte ptr [rbp + 3] ; ret 0x3b45
0x0000020000369611 : add al, byte ptr [rbp - 0x75] ; ret
0x00000200003b07a6 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003b07c3 ; xor eax, eax ; ret
0x00000200003b07a5 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003b07c4 ; xor eax, eax ; ret
0x00000200003ac17b : add al, byte ptr [rbx + 0x234103c0] ; ret
0x000002000071e9bf : add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x0000020000157a1f : add al, byte ptr [rbx - 0x7cb6ff30] ; ret 0xff02
0x00000200006d268d : add al, byte ptr [rbx - 0x7cb7073f] ; ret 0x4808
0x000002000059fb0b : add al, byte ptr [rbx] ; fsubr st(1) ; sbb eax, 0x83fff3d5 ; ret
0x000002000012fc5f : add al, byte ptr [rbx] ; ret
0x00000200000e3f56 : add al, byte ptr [rbx] ; ret 0xba0f
0x0000020000491c65 : add al, byte ptr [rbx] ; rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x00000200000296d6 : add al, byte ptr [rcx + 0x22] ; ret
0x00000200001c69fc : add al, byte ptr [rcx + 0x23] ; ret
0x000002000053e1e1 : add al, byte ptr [rcx + 0x23] ; ret 0x8b44
0x000002000053e170 : add al, byte ptr [rcx + 0x23] ; ret 0xc003
0x00000200006cdffa : add al, byte ptr [rcx + 0x2b] ; sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret 0x4808
0x000002000020d5c8 : add al, byte ptr [rcx + 0x33] ; ret 0x3b74
0x000002000020d5a2 : add al, byte ptr [rcx + 0x33] ; ret 0x6174
0x0000020000113643 : add al, byte ptr [rcx + 0x3a] ; ret 0x860f
0x000002000036ed06 : add al, byte ptr [rcx + 0x3b] ; ret
0x0000020000617b6a : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000022fce1 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000022fcb1 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x0000020000381df0 : add al, byte ptr [rcx + 3] ; ret
0x00000200000876e5 : add al, byte ptr [rcx + rcx*4 + 0x4a] ; or byte ptr [rcx + 0x23], cl ; ret
0x00000200000faa16 : add al, byte ptr [rcx - 0x75] ; and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x00000200004a6402 : add al, byte ptr [rcx - 0x75] ; ret 0x41c3
0x00000200005b23e1 : add al, byte ptr [rcx - 0x75] ; ret 0xff48
0x000002000051b424 : add al, byte ptr [rcx - 0x76] ; shl byte ptr [rbx + rax], 0x3a ; ret 0x1275
0x000002000061ecaa : add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x00000200003849c5 : add al, byte ptr [rcx - 0x78] ; add byte ptr [rbp + 3], cl ; ret 0x3b4d
0x000002000044b896 : add al, byte ptr [rcx - 0x7b] ; ret
0x0000020000595f3d : add al, byte ptr [rcx - 0x7b] ; ret 0x1e75
0x00000200004c0e43 : add al, byte ptr [rcx - 0x7b] ; ret 0x4975
0x0000020000637e1e : add al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x00000200003a3dd5 : add al, byte ptr [rcx - 0x7d] ; ret
0x00000200006173c7 : add al, byte ptr [rcx - 0x7d] ; ret 0xeb24
0x00000200000e4bca : add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x0000020000209fb2 : add al, byte ptr [rcx - 1] ; enter -0xf87, -0x75 ; ret 0x41c3
0x00000200000339ec : add al, byte ptr [rcx - 1] ; ret 0x34c
0x0000020000229596 : add al, byte ptr [rcx] ; je 0x200002295a9 ; mov eax, 0x30 ; ret
0x00000200005a109b : add al, byte ptr [rcx] ; jmp 0x200004e0eee
0x00000200004ea35a : add al, byte ptr [rcx] ; jne 0x200004ea367 ; xor eax, eax ; ret
0x000002000002eece : add al, byte ptr [rdi + rcx + 0x20] ; ret
0x00000200003658f0 : add al, byte ptr [rdi + rcx + 0x22] ; ret
0x00000200000c2652 : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x5f6
0x00000200004dd831 : add al, byte ptr [rdi + rcx + 0x44] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001364d9 : add al, byte ptr [rdi + rcx - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000471c1d : add al, byte ptr [rdi] ; adc esi, edi ; add dil, r12b ; ret
0x0000020000629b8b : add al, byte ptr [rdx + rcx] ; inc edx ; jmp 0x20000629b85
0x00000200006d4b49 : add al, byte ptr [rdx] ; add byte ptr [rax], al ; call rbx
0x00000200001441a0 : add al, byte ptr [rdx] ; movzx eax, cx ; add rsp, 0x38 ; ret
0x00000200000124a4 : add al, byte ptr [rdx] ; ret
0x0000020000668eaf : add al, byte ptr [rip - 0x3b7cb800] ; ret
0x000002000002a8be : add al, byte ptr [rsi*2 - 0x7d75bbe1] ; ret
0x0000020000286778 : add al, byte ptr [rsi] ; adc byte ptr [rsi], al ; sysenter
0x0000020000249b10 : add al, byte ptr [rsi] ; cmp al, byte ptr [rsi] ; sysenter
0x00000200002593f0 : add al, byte ptr [rsi] ; imul eax, dword ptr [rsi], 0x8640f ; sysenter
0x00000200002633f8 : add al, byte ptr [rsi] ; jge 0x2000026340a ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000004c957 : add al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000026ad48 : add al, byte ptr [rsi] ; or al, 6 ; sysenter
0x0000020000239d2c : add al, byte ptr [rsi] ; or byte ptr [rsi], al ; sysenter
0x000002000025413c : add al, byte ptr [rsi] ; or dword ptr [rsi], eax ; sysenter
0x000002000025c460 : add al, byte ptr [rsi] ; ret
0x000002000025755c : add al, byte ptr [rsi] ; sbb dword ptr [rsi], eax ; sysenter
0x0000020000252a4c : add al, byte ptr [rsi] ; test dword ptr [rsi], eax ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x0000020000279c8c : add al, byte ptr [rsi] ; xor dword ptr [rsi], eax ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200002657dc : add al, byte ptr [rsi] ; xor dword ptr [rsi], eax ; sysenter
0x00000200001284b4 : add al, byte ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000004d9dc : add al, byte ptr cs:[rax] ; jmp 0x2000004d9a8
0x0000020000425412 : add al, byte ptr es:[rax] ; add byte ptr [rcx - 0x75], al ; ret 0x3b45
0x00000200005ee843 : add al, byte ptr gs:[rax] ; add byte ptr [rbx - 0x7bf0f017], al ; ret
0x0000020000508a32 : add al, ch ; adc cl, cl ; ret
0x000002000043b106 : add al, ch ; add al, 0xf5 ; ret 0x48ff
0x000002000015b1f8 : add al, ch ; add bl, byte ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x000002000015007a : add al, ch ; add byte ptr [rax], al ; ret
0x00000200005205ba : add al, ch ; add dh, dl ; ret
0x000002000050dd59 : add al, ch ; add dword ptr [rcx], ebx ; add byte ptr [rax], al ; call 0x200001396c1
0x00000200000d2ef5 : add al, ch ; and eax, 0x8b001c1f ; ret
0x000002000051d01b : add al, ch ; call qword ptr [rdx]
0x000002000004b004 : add al, ch ; cli ; ret
0x00000200005d917a : add al, ch ; cmp al, 0xf9 ; ret 0x48ff
0x00000200001293b1 : add al, ch ; cmp dword ptr [rbp - 8], ebp ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004493d1 : add al, ch ; cmp dword ptr [rdx], edx ; ret 0x48ff
0x000002000043b163 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; ret 0x48ff
0x00000200004bca6a : add al, ch ; cwde ; push rcx ; ret 0x48ff
0x0000020000473c1d : add al, ch ; cwde ; ret 0x8bff
0x0000020000501dc2 : add al, ch ; cwde ; ret 0xffc4
0x000002000015afa2 : add al, ch ; fcomp dword ptr [rbx] ; add byte ptr [rax], al ; nop ; ret
0x0000020000682a1e : add al, ch ; fdiv st(6), st(0) ; dec dword ptr [rax - 0x75] ; ret
0x000002000042faad : add al, ch ; fstp qword ptr [rcx] ; sar bh, 0x8b ; ret
0x000002000015a922 : add al, ch ; fsub dword ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x00000200005aa8d6 : add al, ch ; in al, 0x5a ; ret
0x00000200000ae316 : add al, ch ; in al, dx ; ret
0x00000200006214b1 : add al, ch ; int 0x80
0x0000020000510f0c : add al, ch ; int 0xc3
0x000002000013d2c9 : add al, ch ; int1 ; or byte ptr [rdx], al ; add dh, dh ; ret
0x0000020000511d88 : add al, ch ; jb 0x20000511d4f ; ret
0x000002000049465d : add al, ch ; jge 0x2000049466c ; ret 0x4cff
0x000002000015bffc : add al, ch ; jle 0x2000015c012 ; add byte ptr [rax], al ; nop ; ret
0x0000020000241007 : add al, ch ; jmp qword ptr [rbx]
0x000002000055400f : add al, ch ; jmp rcx
0x00000200003f3145 : add al, ch ; jne 0x200003f314b ; ret
0x000002000051d485 : add al, ch ; jne 0x2000051d495 ; ret
0x00000200004ac661 : add al, ch ; jno 0x200004ac6cb ; ret 0x4dff
0x000002000046f3e7 : add al, ch ; jnp 0x2000046f3cf ; ret 0x32ff
0x0000020000511af7 : add al, ch ; jrcxz 0x20000511ac4 ; ret
0x00000200003ffa8b : add al, ch ; lcall ptr [rcx] ; ret
0x0000020000442c2a : add al, ch ; loopne 0x20000442cab ; ret 0x65ff
0x0000020000442c29 : add al, ch ; loopne 0x20000442cac ; ret 0x65ff
0x00000200004b7266 : add al, ch ; mov al, 0xac ; ret 0x4cff
0x00000200003ffdd7 : add al, ch ; mov bl, 0x16 ; ret
0x00000200004538f6 : add al, ch ; mov byte ptr [rax], dl ; ret 0x49ff
0x00000200004d7eb5 : add al, ch ; mov ch, 0x76 ; ret 0x48ff
0x000002000047b751 : add al, ch ; mov ch, 0xab ; ret
0x000002000015c449 : add al, ch ; mov cl, 7 ; add byte ptr [rax], al ; nop ; ret
0x0000020000516ca4 : add al, ch ; mov dh, 0x6f ; ret
0x0000020000506e34 : add al, ch ; mov dl, 0x12 ; ret
0x00000200005117a8 : add al, ch ; mov dl, 0xc8 ; ret
0x0000020000585e71 : add al, ch ; mov ecx, 0x90ffad28 ; jmp 0x20000492157
0x0000020000032273 : add al, ch ; mov edx, dword ptr [rcx + 3] ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004f0bc0 : add al, ch ; mov esi, 0x8b000003 ; ret
0x000002000015acee : add al, ch ; mov word ptr [rsi], ds ; add byte ptr [rax], al ; nop ; ret
0x0000020000624469 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000002000015c12e : add al, ch ; or al, 0xd ; add byte ptr [rax], al ; nop ; ret
0x000002000049b631 : add al, ch ; or al, byte ptr gs:[rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000e43f8 : add al, ch ; or dh, byte ptr [rbp - 0x74b70004] ; ret
0x000002000051d3b1 : add al, ch ; or dword ptr [rdx], ecx ; ret
0x00000200001b2f88 : add al, ch ; out 0x79, al ; stc ; jmp qword ptr [rcx]
0x00000200005c5f5b : add al, ch ; out dx, eax ; ret
0x00000200004cd19c : add al, ch ; outsb dx, byte ptr [rsi] ; popfq ; ret 0xe9ff
0x00000200003e0e60 : add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x00000200005aa94b : add al, ch ; outsd dx, dword ptr [rsi] ; pop rdx ; ret
0x000002000043b552 : add al, ch ; pop rax ; ret
0x00000200004a1962 : add al, ch ; pop rax ; ret 0xffcb
0x00000200005aa8ec : add al, ch ; pop rbp ; ret
0x00000200005cbe9f : add al, ch ; pop rbx ; ret
0x000002000019cd7c : add al, ch ; pop rdx ; ret
0x000002000066f9f4 : add al, ch ; pop rsi ; ret 0xffbb
0x0000020000107faa : add al, ch ; pop rsp ; fisubr dword ptr [rdi] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000548565 : add al, ch ; popfq ; jp 0x2000054853d ; push qword ptr [rdx] ; ret
0x000002000015bb12 : add al, ch ; push -0x6ffffff0 ; ret
0x0000020000385692 : add al, ch ; push -0x740032d3 ; ret
0x0000020000446f16 : add al, ch ; push rax ; xchg eax, edi ; ret 0x84ff
0x00000200005fd2a8 : add al, ch ; push rdx ; mov cl, 0xa5 ; push rsi ; ret
0x000002000015a524 : add al, ch ; push rsi ; add byte ptr es:[rax], al ; nop ; ret
0x0000020000513d66 : add al, ch ; push rsp ; outsd dx, dword ptr [rsi] ; ret 0x84ff
0x00000200004d1866 : add al, ch ; push rsp ; ret
0x00000200000b8d2f : add al, ch ; ret
0x00000200006eb16c : add al, ch ; ret 0
0x000002000070039c : add al, ch ; ret 0x159
0x00000200005ca504 : add al, ch ; ret 0x16
0x00000200000cb028 : add al, ch ; ret 0x21
0x00000200006ed0dc : add al, ch ; ret 0x212
0x00000200001a96a0 : add al, ch ; ret 0x2e8
0x000002000019bd14 : add al, ch ; ret 0x3d3
0x0000020000664db1 : add al, ch ; ret 0x48ff
0x00000200001d4714 : add al, ch ; ret 0x49
0x000002000007800c : add al, ch ; ret 0x521
0x00000200000e68f8 : add al, ch ; ret 0x772
0x000002000018499c : add al, ch ; ret 0x773
0x000002000072d138 : add al, ch ; ret 0xa20b
0x000002000067998c : add al, ch ; ret 0xa633
0x00000200006ed6a8 : add al, ch ; ret 0xa639
0x000002000068bb8c : add al, ch ; ret 0xaa2e
0x000002000054ed04 : add al, ch ; ret 0xae6b
0x0000020000609f4c : add al, ch ; ret 0xb0eb
0x000002000053b25c : add al, ch ; ret 0xb2a4
0x00000200005fccb8 : add al, ch ; ret 0xb60b
0x00000200005aeaf8 : add al, ch ; ret 0xbaf0
0x00000200004b8fe8 : add al, ch ; ret 0xbb72
0x00000200004719a0 : add al, ch ; ret 0xc2ba
0x00000200003ddab0 : add al, ch ; ret 0xcb23
0x000002000054f538 : add al, ch ; ret 0xd44a
0x0000020000639ac0 : add al, ch ; ret 0xd742
0x0000020000296598 : add al, ch ; ret 0xd998
0x0000020000295f74 : add al, ch ; ret 0xe12f
0x00000200001f06c4 : add al, ch ; ret 0xeb04
0x0000020000194748 : add al, ch ; ret 0xec10
0x00000200001bdef8 : add al, ch ; ret 0xed83
0x00000200001a9be0 : add al, ch ; ret 0xedbf
0x0000020000164db8 : add al, ch ; ret 0xeff7
0x000002000013f048 : add al, ch ; ret 0xf2b5
0x000002000021edf8 : add al, ch ; ret 0xf3ed
0x0000020000218648 : add al, ch ; ret 0xf3f6
0x00000200001a85a8 : add al, ch ; ret 0xf562
0x0000020000457698 : add al, ch ; ret 0xf5b7
0x00000200001f09d8 : add al, ch ; ret 0xf606
0x00000200001da320 : add al, ch ; ret 0xf6f2
0x000002000042a704 : add al, ch ; ret 0xf79b
0x0000020000123d58 : add al, ch ; ret 0xf849
0x00000200004a81b4 : add al, ch ; ret 0xf8c2
0x0000020000156df4 : add al, ch ; ret 0xfaf3
0x00000200001563f4 : add al, ch ; ret 0xfafd
0x00000200000d8a40 : add al, ch ; ret 0xfd6e
0x0000020000679074 : add al, ch ; ret 0xfef2
0x000002000037459c : add al, ch ; ret 0xff83
0x00000200005ecd40 : add al, ch ; ret 0xff8f
0x0000020000703bcd : add al, ch ; ret 0xff96
0x00000200006890dc : add al, ch ; ret 0xffab
0x0000020000558b9c : add al, ch ; ret 0xffb5
0x0000020000471215 : add al, ch ; ret 0xffc2
0x00000200004819b3 : add al, ch ; ret 0xffcc
0x00000200005c5ea8 : add al, ch ; ret 0xffd1
0x00000200006449b2 : add al, ch ; ret 0xffea
0x0000020000176041 : add al, ch ; ret 0xffef
0x00000200003f3794 : add al, ch ; ret 1
0x000002000015c227 : add al, ch ; ror dword ptr [rcx], cl ; add byte ptr [rax], al ; nop ; ret
0x0000020000513464 : add al, ch ; salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200004f511e : add al, ch ; sbb al, 0xc9 ; ret
0x000002000015a0e2 : add al, ch ; sbb byte ptr [rbx], ch ; add byte ptr [rax], al ; nop ; ret
0x000002000051f140 : add al, ch ; sbb ch, bl ; ret 0x8bff
0x0000020000444164 : add al, ch ; sbb cl, byte ptr [rax] ; ret
0x00000200005866a8 : add al, ch ; scasb al, byte ptr [rdi] ; push rsi ; cmc ; call qword ptr [rax - 0xf3dac17]
0x00000200004d047b : add al, ch ; scasd eax, dword ptr [rdi] ; sti ; dec dword ptr [rax - 0x75] ; ret
0x000002000010c653 : add al, ch ; scasd eax, dword ptr [rdi] ; xor bh, dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000062a678 : add al, ch ; stosb byte ptr [rdi], al ; or ebp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000267a8 : add al, ch ; stosb byte ptr [rdi], al ; ret
0x00000200005aa7f8 : add al, ch ; sub bl, byte ptr [rsi - 0x3d] ; call qword ptr [rax - 0xabe3d17]
0x0000020000439402 : add al, ch ; test al, 0x6e ; ret
0x00000200001ec04c : add al, ch ; xchg ah, dl ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000042d557 : add al, ch ; xchg dword ptr [rcx], esi ; idiv edi ; jmp 0x2000042d528
0x0000020000168b85 : add al, ch ; xchg eax, ebp ; ret 0x12
0x000002000047d888 : add al, ch ; xchg eax, edx ; scasb al, byte ptr [rdi] ; ret 0xebff
0x00000200005118d4 : add al, ch ; xchg eax, esi ; clc ; ret 0x85ff
0x000002000015047a : add al, cl ; add byte ptr [rax], al ; ret
0x00000200005d16f8 : add al, cl ; call 0x200421f4906
0x000002000000840f : add al, cl ; ret
0x000002000027041f : add al, cl ; ret 0x11
0x00000200003ddf34 : add al, cl ; ret 0x4106
0x00000200003dcc1c : add al, cl ; ret 0x4108
0x000002000024b88f : add al, cl ; ror dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x000002000014ff7a : add al, dh ; add byte ptr [rax], al ; ret
0x0000020000490231 : add al, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000369727 : add al, dh ; inc dword ptr [r8] ; ret
0x0000020000129418 : add al, dh ; inc dword ptr [rax + 0x200] ; ret
0x0000020000174064 : add al, dh ; jg 0x2000017405a ; nop ; xchg eax, ebx ; out dx, al ; push rsi ; ret 0x7401
0x000002000027101b : add al, dh ; jmp qword ptr [rsi]
0x0000020000257fd3 : add al, dh ; ror dword ptr [rax + rax], -0x31 ; ret
0x0000020000262ac7 : add al, dh ; ror dword ptr [rsi], 0 ; insd dword ptr [rdi], dx ; ret 0xe
0x000002000024b4f3 : add al, dh ; sar dword ptr [rsi], 0 ; scasd eax, dword ptr [rdi] ; ret 0x3e
0x000002000015037a : add al, dl ; add byte ptr [rax], al ; ret
0x0000020000157694 : add al, dl ; mov word ptr [rdx + 0x2cc0], ax ; ret
0x0000020000258007 : add al, dl ; ret
0x000002000025d34e : add al, r12b ; push 0x46 ; add byte ptr [rax], ch ; ret
0x000002000025d30a : add al, r12b ; ret 0x25
0x000002000006fe52 : add ax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x000002000002b342 : add ax, r8w ; mov word ptr [rdx + 0x14], ax ; ret
0x0000020000471c23 : add bh, ah ; ret
0x00000200000124a1 : add bh, ah ; rol byte ptr [rdx], 2 ; ret
0x00000200005ceec1 : add bh, al ; add dword ptr [rbp + 0x63], eax ; jo 0x200005cef1d ; xor eax, eax ; ret
0x000002000071516f : add bh, al ; add eax, 0xffb90ab2 ; push rax ; ret
0x000002000013c563 : add bh, al ; call qword ptr [r11]
0x00000200004cceaf : add bh, al ; call qword ptr [r8]
0x000002000065e232 : add bh, al ; ret
0x00000200000b49dc : add bh, al ; sub dword ptr [rax], eax ; call rax
0x000002000022ce12 : add bh, bh ; adc al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000003c5c6 : add bh, bh ; adc eax, 0x309b0b ; jmp 0x2000003c59a
0x00000200004aa273 : add bh, bh ; add byte ptr [rax], al ; jne 0x200004aa29e ; mov eax, r9d ; ret
0x0000020000209f8f : add bh, bh ; add byte ptr [rax], al ; setbe al ; ret
0x0000020000674a9f : add bh, bh ; add eax, 0x1c866 ; xor eax, eax ; ret
0x0000020000030e18 : add bh, bh ; call 0x2000003d072
0x00000200001f94d6 : add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x00000200000ef094 : add bh, bh ; dec dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x7f], 1 ; ret 0
0x000002000017e020 : add bh, bh ; dec dword ptr [rax + 0xb] ; ret 0x22eb
0x0000020000184198 : add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200005f75fa : add bh, bh ; dec dword ptr [rcx + 0x3b] ; ret 0x7372
0x000002000012e07f : add bh, bh ; enter 0x33c3, -0x40 ; ret
0x000002000021729b : add bh, bh ; jmp qword ptr [rbx]
0x000002000000a343 : add bh, bh ; jmp qword ptr [rcx]
0x0000020000157e18 : add bh, bh ; loop 0x20000157e79 ; ret
0x00000200006cf092 : add bh, bh ; loopne 0x200006cf0e5 ; add esp, 0x48 ; ret
0x000002000003d774 : add bh, bh ; mov edi, 0x8b4dffff ; ret
0x00000200007303c1 : add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000680572 : add bh, bh ; push rsi ; ret
0x0000020000079019 : add bh, bh ; push rsi ; ret 0xf01
0x0000020000531a15 : add bh, bh ; rcl byte ptr [rax + 0x20c48348], 1 ; pop rbp ; ret
0x000002000002f8ef : add bh, bh ; ret
0x000002000012da69 : add bh, bh ; ret 0x1589
0x000002000002dee6 : add bh, bh ; ret 0x348
0x00000200000e61e4 : add bh, bh ; ret 0x349
0x000002000051668a : add bh, bh ; ret 0x34d
0x00000200000d1000 : add bh, bh ; ret 0x3b41
0x0000020000642198 : add bh, bh ; ret 0x3b45
0x00000200000ce8f8 : add bh, bh ; ret 0x5489
0x000002000005d034 : add bh, bh ; ret 0x5589
0x0000020000208254 : add bh, bh ; ret 0x5a8d
0x000002000061740e : add bh, bh ; ret 0x5ee8
0x00000200001392af : add bh, bh ; ret 0x8341
0x000002000003726d : add bh, bh ; ret 0x8348
0x0000020000712c3c : add bh, bh ; ret 0x8349
0x0000020000031988 : add bh, bh ; ret 0x854d
0x0000020000624208 : add bh, bh ; ret 0x8948
0x0000020000509070 : add bh, bh ; ret 0x8b45
0x00000200005b26f8 : add bh, bh ; ret 0x8b48
0x00000200000cdaf9 : add bh, bh ; ret 0x9489
0x0000020000606a7a : add bh, bh ; ret 0xc148
0x00000200004ce369 : add bh, bh ; ret 0xca2b
0x0000020000598d8f : add bh, bh ; ret 0xcbeb
0x000002000039e899 : add bh, bh ; ret 0xd148
0x00000200004a13fd : add bh, bh ; ret 0xd7eb
0x000002000047677e : add bh, bh ; ret 0xe2eb
0x000002000020b4e1 : add bh, bh ; ret 0xebe9
0x00000200002281ec : add bh, bh ; ret 0xf983
0x000002000064071f : add bh, bh ; ret 0xfa83
0x000002000012ed21 : add bh, bh ; rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x000002000021ce71 : add bh, bh ; ror byte ptr [rax - 0x73], 0x71 ; add al, 0x3b ; ret 0x470f
0x00000200005c5ac6 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x00000200005c5ae8 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x000002000001f87f : add bh, bl ; ret
0x00000200001be3a3 : add bh, byte ptr [rax + 1] ; ret
0x0000020000088e20 : add bh, byte ptr [rax] ; sete al ; ret
0x000002000021d430 : add bh, byte ptr [rbx] ; ret
0x0000020000204fce : add bh, byte ptr [rbx] ; sar dword ptr [rsi + 7], 0x2a ; fucompp ; ret
0x0000020000234e63 : add bh, byte ptr [rcx + 0x12a] ; call 0x200001510a8
0x00000200004ce367 : add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x0000020000720520 : add bh, ch ; dec dword ptr [rax - 0x7d] ; ret
0x000002000013ef23 : add bh, ch ; ret
0x000002000027d3ef : add bh, cl ; loopne 0x2000027d469 ; add ah, cl ; ret
0x0000020000257fd7 : add bh, cl ; ret
0x000002000023d537 : add bh, cl ; ret 0x39
0x000002000002033f : add bh, dh ; jl 0x200000203ac ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000012c200 : add bh, dh ; ret
0x00000200003ca7d6 : add bh, dh ; ret 0
0x00000200004d078f : add bh, dh ; ret 0x402
0x0000020000205078 : add bh, dh ; ret 0x5f8a
0x0000020000413a33 : add bh, dh ; ret 0x6000
0x00000200000b230e : add bh, dh ; ret 0x700
0x0000020000483e3e : add bh, dh ; shl byte ptr [rbx], 1 ; ret 0xd2f7
0x0000020000290533 : add bh, dl ; jmp qword ptr [rdx]
0x00000200003b0f6c : add bh, dl ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000295194 : add bl, 0xb ; add byte ptr [rax + 0x33], cl ; ret
0x000002000014e97a : add bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed7a : add bl, al ; add byte ptr [rax], al ; ret
0x0000020000265933 : add bl, al ; add byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000015dff2 : add bl, al ; add qword ptr [rdx], r8 ; ret
0x0000020000214326 : add bl, al ; and dword ptr [rdx + 0x18], 0 ; ret
0x00000200001f2c58 : add bl, al ; dec dword ptr [rax + 0x1f28] ; ret
0x00000200002076cd : add bl, al ; inc dword ptr [rcx + 0x248] ; ret
0x0000020000517f38 : add bl, al ; jae 0x20000517f4f ; or eax, 0xffffffff ; ret
0x00000200001593e9 : add bl, al ; jmp rax
0x00000200004d7fe2 : add bl, al ; lea rax, qword ptr [rip + 0x50835] ; ret
0x00000200004d7ff2 : add bl, al ; lea rax, qword ptr [rip + 0x50855] ; ret
0x00000200004d7fea : add bl, al ; lea rax, qword ptr [rip + 0x508bd] ; ret
0x00000200000b6299 : add bl, al ; lea rax, qword ptr [rip + 0xa8cbe] ; ret
0x00000200000b6291 : add bl, al ; lea rax, qword ptr [rip + 0xaaec6] ; ret
0x00000200000b62b7 : add bl, al ; lea rax, qword ptr [rip + 0xaaee0] ; ret
0x00000200000b62bf : add bl, al ; lea rax, qword ptr [rip + 0xaaef8] ; ret
0x00000200000b62d3 : add bl, al ; lea rax, qword ptr [rip + 0xaafa4] ; ret
0x00000200000b56da : add bl, al ; lea rax, qword ptr [rip + 0xab83d] ; ret
0x00000200000b5686 : add bl, al ; lea rax, qword ptr [rip + 0xab981] ; ret
0x00000200000b56b8 : add bl, al ; lea rax, qword ptr [rip + 0xab9af] ; ret
0x00000200000b567e : add bl, al ; lea rax, qword ptr [rip + 0xab9c9] ; ret
0x00000200000b5696 : add bl, al ; lea rax, qword ptr [rip + 0xaba21] ; ret
0x00000200000b568e : add bl, al ; lea rax, qword ptr [rip + 0xabaa9] ; ret
0x00000200000b5666 : add bl, al ; lea rax, qword ptr [rip + 0xabab1] ; ret
0x00000200000b565e : add bl, al ; lea rax, qword ptr [rip + 0xabaf9] ; ret
0x000002000015e02a : add bl, al ; mov byte ptr [rcx + 0x88], 1 ; ret
0x0000020000106415 : add bl, al ; mov byte ptr [rip + 0x1d16a7], dl ; ret
0x0000020000106402 : add bl, al ; mov byte ptr [rip + 0x1d16bb], dl ; ret
0x000002000072f04a : add bl, al ; mov eax, 0x1000 ; ret
0x000002000009c0ef : add bl, al ; mov eax, 0x7d0 ; ret
0x000002000010a418 : add bl, al ; mov eax, 0xa ; ret
0x0000020000411965 : add bl, al ; mov eax, 0xc0000001 ; ret
0x0000020000673396 : add bl, al ; mov eax, 0xc0000002 ; ret
0x000002000010603d : add bl, al ; mov eax, 0xc000000d ; ret
0x00000200001d8992 : add bl, al ; mov eax, 0xc0000225 ; ret
0x0000020000520516 : add bl, al ; mov eax, 0xc000025f ; ret
0x00000200000d4fa2 : add bl, al ; mov eax, 1 ; ret
0x000002000009c089 : add bl, al ; mov eax, 2 ; ret
0x000002000009c08f : add bl, al ; mov eax, 3 ; ret
0x0000020000402b4c : add bl, al ; mov eax, 4 ; ret
0x000002000010a409 : add bl, al ; mov eax, 5 ; ret
0x0000020000107e33 : add bl, al ; mov eax, 7 ; ret
0x000002000010a892 : add bl, al ; mov eax, dword ptr [rcx + 0x1c0] ; ret
0x00000200000fa9c0 : add bl, al ; mov eax, edx ; ret
0x000002000015dcda : add bl, al ; mov rax, cr3 ; mov cr3, rax ; ret
0x0000020000102666 : add bl, al ; mov rax, qword ptr [rcx + 0x3c8] ; ret
0x000002000015e022 : add bl, al ; mov rax, qword ptr [rcx + 0x450] ; ret
0x000002000052050e : add bl, al ; mov rax, qword ptr [rcx + 0x770] ; ret
0x000002000015e382 : add bl, al ; movzx edx, cx ; in al, dx ; ret
0x000002000012fde9 : add bl, al ; or eax, 0xffffffff ; ret
0x000002000023a407 : add bl, al ; push rcx ; cmp byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000051d234 : add bl, al ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x00000200001ec3ab : add bl, al ; sbb eax, eax ; ret
0x00000200000d8327 : add bl, al ; sub qword ptr [rip + 0x1ddd38], rdx ; ret
0x00000200004b1ab5 : add bl, al ; test eax, eax ; jne 0x200004b1aa9 ; xor eax, eax ; ret
0x000002000015e1d2 : add bl, al ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x0000020000520156 : add bl, al ; xchg qword ptr [rip - 0x240a8f], rcx ; ret
0x0000020000033a5d : add bl, al ; xor eax, eax ; ret
0x000002000014e67a : add bl, bh ; add byte ptr [rax], al ; ret
0x00000200001c8d04 : add bl, bh ; add rsp, 0x28 ; ret
0x0000020000154b75 : add bl, bh ; ret
0x000002000014ea7a : add bl, bl ; add byte ptr [rax], al ; ret
0x00000200001516ef : add bl, bl ; loop 0x20000151694 ; fnstcw word ptr [rcx] ; ret
0x00000200001f64fc : add bl, bl ; or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000025386e : add bl, bpl ; ret
0x0000020000371bdc : add bl, byte ptr [rax] ; add al, bpl ; ret
0x0000020000253964 : add bl, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x1806d106 ; ret 0xf011
0x0000020000263294 : add bl, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x1866d406 ; ret 0xf014
0x0000020000600edb : add bl, byte ptr [rax] ; ret
0x00000200001de6dc : add bl, byte ptr [rbx] ; add byte ptr [rax], 0xe8 ; ret
0x0000020000144850 : add bl, byte ptr [rcx + rcx*2 - 1] ; ret 0x8b48
0x0000020000253eac : add bl, byte ptr [rcx] ; or al, 0 ; add eax, dword ptr [rsi] ; ret 0x1906
0x000002000028c904 : add bl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x1f060016 ; ret 0xf01b
0x000002000024a134 : add bl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x1f06a006 ; ret 0xf01b
0x000002000023bf64 : add bl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x1f466a06 ; ret 0xf01b
0x000002000015b1fa : add bl, byte ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x000002000024f56c : add bl, byte ptr [rdx] ; or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x000002000026eee8 : add bl, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x1a062506 ; ret 0xf016
0x000002000027c11c : add bl, byte ptr [rsp + rcx] ; add byte ptr [rsi + rax], cl ; ret
0x0000020000053507 : add bl, ch ; adc bh, byte ptr [rbx] ; ret 0x1374
0x00000200001ab986 : add bl, ch ; adc dh, dh ; ret 0x7402
0x000002000021bb2f : add bl, ch ; add al, 0x8b ; ret
0x000002000014e87a : add bl, ch ; add byte ptr [rax], al ; ret
0x00000200005b5aa8 : add bl, ch ; add eax, 0x8bf38a40 ; ret
0x0000020000549eb2 : add bl, ch ; add eax, 0xe85782e9 ; push rsi ; ret
0x0000020000574ba3 : add bl, ch ; add eax, 0xeda4aae9 ; push rdi ; ret
0x0000020000673002 : add bl, ch ; add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x000002000064d805 : add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000016dfdf : add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0xf44
0x000002000064d7c2 : add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000206372 : add bl, ch ; and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret
0x00000200006121aa : add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x0000020000611f4a : add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000710cee : add bl, ch ; fimul word ptr [rax - 0x75] ; ret 0x2b49
0x000002000046c18d : add bl, ch ; fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x0000020000468f75 : add bl, ch ; idiv dword ptr [rax - 0x3ffffff3] ; ret
0x0000020000463428 : add bl, ch ; in eax, -0x75 ; ret
0x00000200004653be : add bl, ch ; int1 ; xor eax, eax ; ret
0x0000020000718bf3 : add bl, ch ; jmp 0x20000718bc5
0x000002000051a7d2 : add bl, ch ; leave ; mov ebx, 0xc000000d ; jmp 0x2000051a7a7
0x0000020000110f61 : add bl, ch ; mov dh, 0x8a ; ret 0x624
0x00000200003cb8e0 : add bl, ch ; mov eax, edx ; jmp 0x200003cb880
0x00000200001ba505 : add bl, ch ; or bh, bh ; ret 0x153b
0x00000200001de415 : add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200001ee1bc : add bl, ch ; or cl, byte ptr [rbx - 0x4b74b23e] ; ret 0x550
0x00000200001c9edc : add bl, ch ; or dword ptr [rbp - 0x7c], eax ; ret
0x00000200002109b6 : add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000453499 : add bl, ch ; out 0x8b, al ; ret 0x4166
0x000002000003c5cc : add bl, ch ; ret
0x00000200000e43b1 : add bl, ch ; ret 0x1ba
0x00000200005a0ad7 : add bl, ch ; ret 0x3b9
0x000002000004bfc9 : add bl, ch ; ret 0x3d83
0x00000200003fd4c8 : add bl, ch ; ret 0x6948
0x000002000006fbb1 : add bl, ch ; ret 0x8548
0x0000020000087081 : add bl, ch ; ret 0x8948
0x000002000056e8d1 : add bl, ch ; ret 0x8b48
0x00000200000ec717 : add bl, ch ; ret 0xcccc
0x000002000014130b : add bl, ch ; ret 0xd148
0x00000200000287dc : add bl, ch ; ret 0xdb84
0x000002000037be67 : add bl, ch ; sub al, 0x8b ; ret
0x00000200001bd96f : add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200002377a2 : add bl, ch ; sub esi, esi ; ret
0x00000200001f2943 : add bl, ch ; xor ecx, dword ptr [rax - 0x75] ; ret
0x000002000014ec7a : add bl, cl ; add byte ptr [rax], al ; ret
0x000002000001ebb7 : add bl, cl ; ret
0x000002000014e77a : add bl, dh ; add byte ptr [rax], al ; ret
0x00000200004cf03d : add bl, dh ; dec dword ptr [rbx + 0x5891345] ; ret
0x00000200004a63fe : add bl, dh ; movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x000002000014eb7a : add bl, dl ; add byte ptr [rax], al ; ret
0x00000200000d2251 : add bl, dl ; loop 0x200000d224f ; ret 0xf15
0x0000020000217187 : add bl, dl ; loop 0x2000021711a ; ret 0xd0f7
0x00000200002176d7 : add bl, dl ; loop 0x2000021766a ; ret 0xd0f7
0x00000200002168a6 : add bl, dl ; loopne 0x200002168bc ; rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000224684 : add bl, dl ; loopne 0x200002246c7 ; ret 0xf272
0x000002000023d53b : add bl, dl ; ret 0x39
0x000002000047b34a : add bpl, r11b ; mov eax, 0xc0000058 ; ret
0x0000020000259212 : add bpl, r8b ; ret
0x0000020000147870 : add byte ptr [r11], r15b ; ret
0x0000020000602475 : add byte ptr [r13 + 3], r8b ; ret 0x8944
0x0000020000474b28 : add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x0000020000069fcd : add byte ptr [r13 - 0x75], r9b ; ret 0x8b49
0x0000020000271016 : add byte ptr [r15 + 0x51], r9b ; add r8b, r14b ; jmp qword ptr [rsi]
0x00000200001617da : add byte ptr [r8 + 0x30c48348], dl ; pop rbp ; ret
0x0000020000113edf : add byte ptr [r8 + 0xb], cl ; ret
0x00000200001f8e83 : add byte ptr [r8 - 0x3f], r9b ; call 0x1ffc242d6a0
0x0000020000707d02 : add byte ptr [r8 - 0x75], r9b ; ret
0x0000020000099dc5 : add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x00000200005a6070 : add byte ptr [r8], al ; adc dword ptr [rdi], ecx ; ret 0x4789
0x000002000002095b : add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x000002000014e275 : add byte ptr [r8], al ; add cl, ch ; add ah, bl ; add byte ptr [rax], al ; ret
0x000002000014e375 : add byte ptr [r8], al ; add cl, ch ; add ah, dl ; add byte ptr [rax], al ; ret
0x000002000014e3b5 : add byte ptr [r8], al ; add cl, ch ; ret 0xe1
0x000002000014e2b5 : add byte ptr [r8], al ; add cl, ch ; ret 0xe2
0x0000020000649444 : add byte ptr [r8], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000471bbe : add byte ptr [r8], r12b ; rcl dword ptr [rdi], -0x7a ; ret 0x57
0x00000200000e0a05 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x000002000008ce7b : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000470c8a : add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x000002000021b888 : add byte ptr [r9 + rcx*4 + 0x75], 0x88 ; call r9
0x000002000050cc96 : add byte ptr [r9 - 0x75], r8b ; ret
0x000002000054778b : add byte ptr [r9 - 0x75], r8b ; ret 0xe8c1
0x00000200003c468e : add byte ptr [r9], 0x48 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003cf776 : add byte ptr [rax + 0x1158d48], dl ; ret 0x2d
0x000002000000a393 : add byte ptr [rax + 0x125b5cff], al ; add esi, edx ; call qword ptr [rcx]
0x000002000000a392 : add byte ptr [rax + 0x125b5cff], r8b ; add esi, edx ; call qword ptr [rcx]
0x00000200001bc014 : add byte ptr [rax + 0x12], ah ; add byte ptr [rbx], al ; ret
0x000002000059e025 : add byte ptr [rax + 0x14840f04], ch ; ret 0xfff3
0x00000200002788e3 : add byte ptr [rax + 0x160068c2], dh ; ret
0x000002000001f84f : add byte ptr [rax + 0x19], cl ; ret 0xdd
0x0000020000242347 : add byte ptr [rax + 0x1b0005bb], al ; ret 5
0x00000200001622c8 : add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000007903d : add byte ptr [rax + 0x23], cl ; ret
0x00000200000b298f : add byte ptr [rax + 0x23], cl ; ret 0x2348
0x000002000007cb3b : add byte ptr [rax + 0x23], cl ; ret 0x3149
0x000002000004f962 : add byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000571133 : add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x0000020000056ab0 : add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x000002000018c7fb : add byte ptr [rax + 0x23], cl ; ret 0x48a
0x000002000017e03e : add byte ptr [rax + 0x23], cl ; ret 0x8348
0x0000020000127231 : add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200000f66cd : add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x00000200004d29c9 : add byte ptr [rax + 0x23], cl ; ret 0x8b45
0x000002000005525b : add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x000002000008911d : add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000063de49 : add byte ptr [rax + 0x23], cl ; ret 0x8d49
0x000002000002eeae : add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200000d153b : add byte ptr [rax + 0x23], cl ; ret 0xb948
0x0000020000077836 : add byte ptr [rax + 0x23], cl ; ret 0xba41
0x00000200005fbdf3 : add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200006fb4bb : add byte ptr [rax + 0x23], cl ; ret 0xc148
0x000002000005f6c5 : add byte ptr [rax + 0x23], cl ; ret 0xf48
0x0000020000089eae : add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x000002000066efb3 : add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000200000a0f4b : add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000049bc8 : add byte ptr [rax + 0x2b], cl ; ret
0x00000200003f918a : add byte ptr [rax + 0x2b], cl ; ret 0x349
0x0000020000052557 : add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200000b197c : add byte ptr [rax + 0x2b], cl ; ret 0x3b49
0x0000020000036fb7 : add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000193600 : add byte ptr [rax + 0x2b], cl ; ret 0x3d48
0x000002000021822a : add byte ptr [rax + 0x2b], cl ; ret 0x875
0x000002000010f007 : add byte ptr [rax + 0x2b], cl ; ret 0x8841
0x0000020000072e92 : add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200001d1149 : add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x00000200005fd13b : add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x000002000017dd25 : add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x0000020000088b78 : add byte ptr [rax + 0x2b], cl ; ret 0x8be9
0x000002000017488f : add byte ptr [rax + 0x2b], cl ; ret 0x8d48
0x000002000002f205 : add byte ptr [rax + 0x2b], cl ; ret 0xb60f
0x000002000020f8f9 : add byte ptr [rax + 0x2b], cl ; ret 0xb841
0x0000020000086194 : add byte ptr [rax + 0x2b], cl ; ret 0xb9
0x00000200000a5c3d : add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200003d450a : add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200003d6f73 : add byte ptr [rax + 0x2b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000060f206 : add byte ptr [rax + 0x2d0], bh ; ret
0x00000200004149bd : add byte ptr [rax + 0x30], dh ; add byte ptr [rbp + 1], dh ; ret
0x00000200001616ca : add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200000898a3 : add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x00000200001f95e5 : add byte ptr [rax + 0x31], cl ; and byte ptr [r15 + r9 + 0x20], r8b ; ret
0x0000020000675f1c : add byte ptr [rax + 0x32], al ; imul al ; ret
0x00000200002714b7 : add byte ptr [rax + 0x330011fa], al ; call qword ptr [rcx]
0x00000200001bb6f5 : add byte ptr [rax + 0x33027402], ch ; ror byte ptr [rax - 0x75], cl ; ret 0x80c3
0x00000200000fdc5b : add byte ptr [rax + 0x33], cl ; enter -0x76b5, 0x4c ; ror dword ptr [rax], cl ; ret
0x000002000005dc42 : add byte ptr [rax + 0x33], cl ; fimul dword ptr [rax - 0x75] ; ret
0x00000200000995d7 : add byte ptr [rax + 0x33], cl ; ret
0x0000020000039bc0 : add byte ptr [rax + 0x33], cl ; ret 0x2348
0x0000020000100ed2 : add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200006c7851 : add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006ce11a : add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200006c7117 : add byte ptr [rax + 0x33], cl ; rol byte ptr [rcx - 0x78], 1 ; adc byte ptr [rbp + 3], cl ; ret
0x00000200006d497e : add byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000017442f : add byte ptr [rax + 0x33], cl ; sub ecx, dword ptr [rax + 3] ; ret 0xbe49
0x0000020000275e13 : add byte ptr [rax + 0x37004ec2], dl ; ret
0x0000020000027125 : add byte ptr [rax + 0x38], al ; stosd dword ptr [rdi], eax ; ret
0x000002000017d913 : add byte ptr [rax + 0x39], cl ; add byte ptr [rax + rcx - 0x18], dh ; ret 0xf3f7
0x00000200000bd0d3 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000610d7b : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; pop rdx ; ret
0x0000020000729f12 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x0000020000219413 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xea3c
0x0000020000516a4f : add byte ptr [rax + 0x39], cl ; add byte ptr [rcx + rbx*8 - 0x17], dh ; ret 0x9bf
0x000002000043febb : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi + rdx*8 - 0x17], dh ; ret 0x12e8
0x000002000019868e : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test bh, cl ; ret
0x0000020000545c16 : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test ch, dh ; ret 0xffe7
0x000002000017531a : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test ch, dl ; ret
0x000002000017532f : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test dh, ch ; ret
0x000002000006ad84 : add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200003e5821 : add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + rbp*4 - 0x17], esi ; ret
0x00000200004177df : add byte ptr [rax + 0x39], cl ; or dword ptr [rsi + rbx*8 - 0x17], esi ; ret 0x148c
0x0000020000064a5d : add byte ptr [rax + 0x3a], al ; stosd dword ptr [rdi], eax ; ret
0x00000200006fa8af : add byte ptr [rax + 0x3b480000], al ; ret
0x00000200005a4d3b : add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x00000200000c8c46 : add byte ptr [rax + 0x3b], cl ; enter -0x7af1, 0x18 ; ret
0x00000200000267bd : add byte ptr [rax + 0x3b], cl ; enter 0x477, 0x48 ; sub eax, ecx ; ret
0x000002000018e941 : add byte ptr [rax + 0x3b], cl ; enter 0xf44, 0x46 ; ret 0x8b41
0x00000200000b12d7 : add byte ptr [rax + 0x3b], cl ; fimul dword ptr [rdi] ; test byte ptr [rbx], cl ; ret
0x000002000002775b : add byte ptr [rax + 0x3b], cl ; ret
0x00000200000ec6db : add byte ptr [rax + 0x3b], cl ; ret 0x1474
0x000002000008efbc : add byte ptr [rax + 0x3b], cl ; ret 0x1573
0x00000200000963d3 : add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x0000020000181437 : add byte ptr [rax + 0x3b], cl ; ret 0x2977
0x00000200006fadaf : add byte ptr [rax + 0x3b], cl ; ret 0x2e73
0x000002000020efd3 : add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200000f439e : add byte ptr [rax + 0x3b], cl ; ret 0x3d76
0x00000200001df101 : add byte ptr [rax + 0x3b], cl ; ret 0x577
0x00000200003d527c : add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x000002000047555a : add byte ptr [rax + 0x3b], cl ; ret 0x677e
0x00000200005f1ed7 : add byte ptr [rax + 0x3b], cl ; ret 0x772
0x00000200000de467 : add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x00000200001157c0 : add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000002675a : add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000004e2e0 : add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000020efa7 : add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000002ad12 : add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000026746 : add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000364e6c : add byte ptr [rax + 0x3b], cl ; ret 0x8b4c
0x00000200004bd26f : add byte ptr [rax + 0x3b], cl ; ret 0x930f
0x00000200001a14e8 : add byte ptr [rax + 0x3b], cl ; ret 0xa277
0x00000200005a87ea : add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x00000200005cb968 : add byte ptr [rax + 0x3b], cl ; ret 0xb775
0x0000020000103fd6 : add byte ptr [rax + 0x3b], cl ; ret 0xbc74
0x000002000021a67e : add byte ptr [rax + 0x3b], cl ; ret 0xc76
0x000002000007fc18 : add byte ptr [rax + 0x3b], cl ; ret 0xd76
0x0000020000089e33 : add byte ptr [rax + 0x3b], cl ; ret 0xd775
0x0000020000543890 : add byte ptr [rax + 0x3b], cl ; ret 0xe373
0x000002000007403a : add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x00000200000d1081 : add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x0000020000394331 : add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x0000020000058be4 : add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x000002000067435d : add byte ptr [rax + 0x3b], cl ; ret 0xef75
0x0000020000384e40 : add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000388660 : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xccc3
0x00000200000966f8 : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax - 0x75], -0x35 ; je 0x20000096784 ; call rax
0x000002000002a931 : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rbp + 3], 1 ; mov al, 1 ; ret
0x00000200000eb86a : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x47], 1 ; ret
0x00000200001153ab : add byte ptr [rax + 0x3bc72341], al ; ret
0x000002000016165d : add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200003787f5 : add byte ptr [rax + 0x450f0ff9], al ; ret 0xb0c3
0x0000020000492b8b : add byte ptr [rax + 0x47d61f9], al ; mov al, r9b ; ret
0x00000200006792b6 : add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x00000200006e36a2 : add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e36af
0x000002000036dd1f : add byte ptr [rax + 0x48fffff7], al ; add esp, 0x28 ; ret
0x0000020000209f71 : add byte ptr [rax + 0x48fffff7], al ; and eax, ecx ; ret
0x000002000015df45 : add byte ptr [rax + 0x48fffff7], al ; mov eax, dword ptr [rax] ; ret
0x000002000025ddbb : add byte ptr [rax + 0x4a0046c2], ah ; ret
0x000002000013c5a9 : add byte ptr [rax + 0x4d000000], 3 ; ret 0x8348
0x0000020000191f52 : add byte ptr [rax + 0x4de9cc75], al ; ret 0xfff2
0x00000200006d45e4 : add byte ptr [rax + 0x4f886], cl ; add byte ptr [rdx], bh ; ret
0x0000020000221008 : add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x00000200000031fe : add byte ptr [rax + 0x5322d61a], al ; cli ; sahf ; ret
0x000002000016fb35 : add byte ptr [rax + 0x5c840f40], ch ; ret 0xffed
0x00000200003a15ef : add byte ptr [rax + 0x63], cl ; leave ; add rcx, r15 ; call 0x2000015d889
0x00000200001abf55 : add byte ptr [rax + 0x63], cl ; ret
0x000002000051d0e5 : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000200000275a6 : add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200006169c1 : add byte ptr [rax + 0x63], cl ; ret 0x8d4e
0x0000020000468cfb : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x00000200001c4dc6 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x8548
0x000002000008e793 : add byte ptr [rax + 0x69], cl ; ret
0x0000020000232898 : add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x0000020000192079 : add byte ptr [rax + 0x74e9d475], al ; ret 0xfff2
0x000002000002f31b : add byte ptr [rax + 0xb], cl ; ret
0x00000200001b6568 : add byte ptr [rax + 0xb], cl ; ret 0x1ba
0x00000200003ddb75 : add byte ptr [rax + 0xb], cl ; ret 0x548b
0x000002000007eb34 : add byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200003704ea : add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200001d915f : add byte ptr [rax + 0xb], cl ; ret 0x8944
0x00000200000fc903 : add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200001d7678 : add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200006cce59 : add byte ptr [rax + 0xb], cl ; ret 0x8b45
0x000002000003bd2d : add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x0000020000233562 : add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000020b9eb : add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003e15a1 : add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x00000200006e849e : add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200006e89d7 : add byte ptr [rax + 0xb], cl ; ret 0x8d4c
0x000002000007b242 : add byte ptr [rax + 0xb], cl ; ret 0xb48
0x00000200000bc95d : add byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200005b4e8b : add byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000127ca6 : add byte ptr [rax + 0xb], cl ; ret 0xc748
0x000002000020c3eb : add byte ptr [rax + 0xb], cl ; ret 0xc933
0x000002000022f14d : add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x000002000056fd14 : add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200004cea0f : add byte ptr [rax + 0xb], cl ; ret 0xe083
0x0000020000090dbd : add byte ptr [rax + 0xf003530], 0xb7 ; ret
0x00000200001d6e04 : add byte ptr [rax + 0xf950805], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000574cc0 : add byte ptr [rax + 0xf], al ; test dword ptr [rcx], ecx ; ret 0xffed
0x000002000014380a : add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x00000200001f24e9 : add byte ptr [rax + 0xf], cl ; mov edx, 0x830f0ae3 ; ret
0x00000200000a5c86 : add byte ptr [rax + 0xf], cl ; mov edx, 0x8b4907f3 ; ret 0xf748
0x00000200000c92a8 : add byte ptr [rax + 0xf], cl ; ret
0x0000020000385c24 : add byte ptr [rax + 0xf], cl ; ret 0x8944
0x000002000061b3ea : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000002000006fe4a : add byte ptr [rax + 0xf], cl ; ret 0x8966
0x0000020000237547 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000002000012d00d : add byte ptr [rax + 0xfc18548], al ; xchg eax, ebp ; ret 0xc28b
0x0000020000070c52 : add byte ptr [rax + 0xfc80b48], al ; mov dh, 0x81 ; ret
0x00000200000b3a88 : add byte ptr [rax + 1], bh ; ret
0x0000020000598d88 : add byte ptr [rax + 3], cl ; adc dword ptr [rax], 0xff00000b ; ret 0xcbeb
0x00000200000f7dad : add byte ptr [rax + 3], cl ; iretd ; jmp rcx
0x000002000005095c : add byte ptr [rax + 3], cl ; ret
0x00000200000916f0 : add byte ptr [rax + 3], cl ; ret 0x153b
0x00000200000ebb8c : add byte ptr [rax + 3], cl ; ret 0x1ba
0x000002000003b321 : add byte ptr [rax + 3], cl ; ret 0x348
0x000002000005428b : add byte ptr [rax + 3], cl ; ret 0x349
0x00000200000375c0 : add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000005e7cc : add byte ptr [rax + 3], cl ; ret 0x3b49
0x0000020000037121 : add byte ptr [rax + 3], cl ; ret 0x3d48
0x0000020000520193 : add byte ptr [rax + 3], cl ; ret 0x48c3
0x00000200006cef84 : add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000016d7cf : add byte ptr [rax + 3], cl ; ret 0x840f
0x0000020000068742 : add byte ptr [rax + 3], cl ; ret 0x8548
0x00000200000df533 : add byte ptr [rax + 3], cl ; ret 0x8944
0x00000200003a9f98 : add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000098930 : add byte ptr [rax + 3], cl ; ret 0x8b49
0x000002000009bc4b : add byte ptr [rax + 3], cl ; ret 0x8b4c
0x00000200003d5c83 : add byte ptr [rax + 3], cl ; ret 0x8d48
0x0000020000041ab8 : add byte ptr [rax + 3], cl ; ret 0xb74
0x00000200000a4f5f : add byte ptr [rax + 3], cl ; ret 0xc148
0x00000200006e9018 : add byte ptr [rax + 3], cl ; ret 0xc748
0x0000020000065b22 : add byte ptr [rax + 3], cl ; ret 0xe0ff
0x000002000016d748 : add byte ptr [rax + 3], cl ; ret 0xe74
0x000002000021f7a3 : add byte ptr [rax + 3], cl ; rol byte ptr [rcx], 0xac ; ret
0x0000020000382175 : add byte ptr [rax + 3], cl ; rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x00000200005d8d21 : add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x000002000021dfc6 : add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0x94 ; ret
0x0000020000220c62 : add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0xbc ; ret
0x00000200000ee99d : add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0x4c ; ret
0x000002000013452d : add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0xc ; ret 0x366
0x00000200006f420c : add byte ptr [rax + 3], cl ; sti ; mov r13d, ebx ; jmp 0x200006f41ea
0x00000200001cf8c3 : add byte ptr [rax + 4], bh ; ret
0x0000020000037167 : add byte ptr [rax + 5], al ; or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000037d220 : add byte ptr [rax + 5], cl ; add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000065f29b : add byte ptr [rax + rax + 0x30000], bl ; add byte ptr [rax], al ; ret 0
0x000002000020a14f : add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x00000200005b114a : add byte ptr [rax + rax*2 - 0x7c], dh ; ret
0x00000200006dad97 : add byte ptr [rax + rax*4], al ; add byte ptr [rax], dl ; jo 0x200006dad30 ; ret
0x00000200004df02a : add byte ptr [rax + rax*8 + 0x1506850f], al ; or al, 0 ; ret
0x000002000013fed5 : add byte ptr [rax + rax*8 - 0x3fcc338b], al ; ret
0x00000200000c9571 : add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x000002000020ba81 : add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x000002000020ba91 : add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x000002000020baa1 : add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x00000200003fc00b : add byte ptr [rax + rax*8 - 0x74b7e98c], al ; ret
0x0000020000223b7a : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x5e9
0x0000020000223d50 : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x000002000020b9e8 : add byte ptr [rax + rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200006d3a74 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200006518f6 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000012fac4 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; call rdi
0x000002000026ce57 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; clc ; ret
0x000002000008f8f6 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x0000020000412d5b : add byte ptr [rax + rax], al ; add byte ptr [rbp - 0x9f68a3f], al ; ret
0x00000200000c3bb7 : add byte ptr [rax + rax], al ; add byte ptr [rbx + 3], dh ; xor eax, eax ; ret
0x000002000007b321 : add byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; ret 0x8348
0x0000020000057433 : add byte ptr [rax + rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000482f49 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000200005aba95 : add byte ptr [rax + rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001b6e85 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x000002000062066e : add byte ptr [rax + rax], al ; je 0x2000062067d ; mov al, 1 ; ret
0x00000200001c12db : add byte ptr [rax + rax], dl ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x000002000013d2c7 : add byte ptr [rax + rax], dl ; call 0x2000015dbc9
0x0000020000645f16 : add byte ptr [rax + rbp*8], ah ; ret
0x000002000017d916 : add byte ptr [rax + rcx - 0x18], dh ; ret 0xf3f7
0x00000200006cb03d : add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006cb04a
0x00000200006d67db : add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006d67e8
0x00000200006dfcfa : add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006dfd07
0x0000020000511c76 : add byte ptr [rax + rcx*4 + 0x2d], al ; ret
0x0000020000031a6e : add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x0000020000092ab9 : add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x00000200001858fd : add byte ptr [rax + rcx*4 - 0x59], al ; ret
0x00000200000561ba : add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x00000200000b21ec : add byte ptr [rax + rcx*8 - 0x3fccfd8b], al ; ret
0x0000020000090634 : add byte ptr [rax + rdi - 0x41], al ; ret
0x00000200001eb864 : add byte ptr [rax + rdi - 0x51], al ; ret
0x00000200001df9ff : add byte ptr [rax + rdi - 0x71], al ; ret
0x0000020000033857 : add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x00000200005819e9 : add byte ptr [rax - 0x10000a17], dl ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001748d3 : add byte ptr [rax - 0x114fbd17], dl ; push rsi ; ret 0xf08
0x00000200005797a8 : add byte ptr [rax - 0x1161bf17], dl ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0x0000020000577c57 : add byte ptr [rax - 0x11d11517], dl ; push rsi ; ret
0x0000020000576ab2 : add byte ptr [rax - 0x11f8af17], dl ; push rsi ; ret
0x00000200005766c4 : add byte ptr [rax - 0x1204e417], dl ; push rsi ; ret
0x000002000016e845 : add byte ptr [rax - 0x126c4b17], dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000025d417 : add byte ptr [rax - 0x13ffb98e], cl ; ret
0x000002000025d416 : add byte ptr [rax - 0x13ffb98e], r9b ; ret
0x00000200001f293f : add byte ptr [rax - 0x15000000], al ; xor ecx, dword ptr [rax - 0x75] ; ret
0x0000020000553145 : add byte ptr [rax - 0x16ac7e17], dl ; push rsi ; ret
0x00000200004ebf4b : add byte ptr [rax - 0x16e17], al ; push rdi ; ret 0xfffc
0x00000200001d6fa8 : add byte ptr [rax - 0x17000009], al ; ret 0x4869
0x0000020000127b90 : add byte ptr [rax - 0x17], al ; ret
0x000002000054475c : add byte ptr [rax - 0x18816d17], dl ; push rsi ; ret
0x00000200005358a8 : add byte ptr [rax - 0x1a7cb817], dl ; push rsi ; ret
0x00000200002788ff : add byte ptr [rax - 0x1eff973d], dh ; ret
0x0000020000248a7b : add byte ptr [rax - 0x22], bh ; or byte ptr [rax], al ; ret
0x0000020000270823 : add byte ptr [rax - 0x2a], ah ; adc dword ptr [rax], eax ; ret 0x11d8
0x000002000013e16a : add byte ptr [rax - 0x2d], cl ; loop 0x2000013e1c3 ; or dword ptr [rax + rcx*8 + 8], edx ; ret
0x000002000011e4ef : add byte ptr [rax - 0x2d], cl ; loopne 0x2000011e544 ; mov dword ptr [rax], eax ; ret
0x000002000036def8 : add byte ptr [rax - 0x2d], cl ; loopne 0x2000036df4d ; add esp, 0x28 ; ret
0x00000200001d69e1 : add byte ptr [rax - 0x2d], cl ; ret 0x3348
0x00000200001ab619 : add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200002706cf : add byte ptr [rax - 0x2e], bl ; adc dword ptr [rax], eax ; ret 0x11d4
0x0000020000123988 : add byte ptr [rax - 0x39], cl ; ret 0x3e00
0x00000200001cd283 : add byte ptr [rax - 0x39], cl ; ret 0x6980
0x000002000015e1fe : add byte ptr [rax - 0x3c000009], al ; xor eax, eax ; ret
0x000002000025920f : add byte ptr [rax - 0x3d], al ; add bpl, r8b ; ret
0x0000020000291b8b : add byte ptr [rax - 0x3dff9c15], ah ; jmp 0x20000291bfb
0x0000020000281923 : add byte ptr [rax - 0x3e], cl ; push rcx ; add byte ptr [rcx], dh ; ret
0x000002000020539e : add byte ptr [rax - 0x3ef2c4ff], dh ; ret 0xd
0x0000020000426235 : add byte ptr [rax - 0x3f7af0c0], ch ; call qword ptr [rbx]
0x000002000007c66f : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22b0f8a
0x00000200000f673f : add byte ptr [rax - 0x3f], cl ; call 0x1ffc232af5a
0x00000200000fa069 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc232e984
0x000002000011778a : add byte ptr [rax - 0x3f], cl ; call 0x1ffc234bfa5
0x00000200001243ca : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2358be2
0x000002000013aed5 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc236f6f0
0x0000020000169c40 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc239e458
0x00000200001f1124 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc242593f
0x00000200001f2742 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc242705d
0x00000200001f8e84 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc242d69f
0x00000200001f8f48 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc242d763
0x00000200000525f9 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2906a0d
0x00000200000a28af : add byte ptr [rax - 0x3f], cl ; call 0x1ffc32d71c8
0x00000200001ef4a9 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc3423cc4
0x00000200006fb263 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc392fb7b
0x0000020000060872 : add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000013ad93 : add byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax + 3] ; ret 0x8948
0x000002000013dceb : add byte ptr [rax - 0x3f], cl ; clc ; or al, 0xff ; ret
0x0000020000487057 : add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xa348
0x00000200000f8ed1 : add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003da261 : add byte ptr [rax - 0x3f], cl ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000b0ac3 : add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc39652de
0x000002000008cc40 : add byte ptr [rax - 0x3f], cl ; out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000005b21a : add byte ptr [rax - 0x3f], cl ; out dx, eax ; or dword ptr [rcx - 0xa], eax ; ret 0xf01
0x000002000005202b : add byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x00000200005ef105 : add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x00000200000ebec2 : add byte ptr [rax - 0x3ffffddb], bh ; ret
0x00000200004f4fc8 : add byte ptr [rax - 0x3ffffe77], bh ; ret
0x000002000010439d : add byte ptr [rax - 0x3fffff0e], bh ; ret
0x0000020000516d55 : add byte ptr [rax - 0x3fffff0f], bh ; ret
0x00000200004ba404 : add byte ptr [rax - 0x3fffff19], bh ; ret
0x0000020000375400 : add byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200000b4257 : add byte ptr [rax - 0x3fffff6b], bh ; ret
0x000002000013fbda : add byte ptr [rax - 0x3fffff9f], bh ; jmp 0x2000013fbac
0x00000200004f4fb4 : add byte ptr [rax - 0x3ffffff3], bh ; ret
0x0000020000094724 : add byte ptr [rax - 0x3ffffffe], bh ; ret
0x000002000020911a : add byte ptr [rax - 0x3fffffff], bh ; ret
0x000002000014e3b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [r8], al ; add cl, ch ; ret 0xe1
0x000002000014e2b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [r8], al ; add cl, ch ; ret 0xe2
0x000002000014f8b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xcc
0x00000200001502b2 : add byte ptr [rax - 0x48], dl ; add dword ptr [r8], eax ; add cl, ch ; ret 0xc2
0x0000020000150332 : add byte ptr [rax - 0x48], dl ; add dword ptr [r8], r8d ; add cl, ch ; ret 0
0x000002000014eab2 : add byte ptr [rax - 0x48], dl ; add dword ptr [rax], 0 ; add cl, ch ; ret 0xda
0x0000020000150ab2 : add byte ptr [rax - 0x48], dl ; add dword ptr [rcx], 0 ; add cl, ch ; ret 0xba
0x00000200001503b2 : add byte ptr [rax - 0x48], dl ; add qword ptr [r8], rax ; add cl, ch ; ret 0xc1
0x000002000014e7b2 : add byte ptr [rax - 0x48], dl ; imul eax, dword ptr [rax], 0 ; add cl, ch ; ret 0xdd
0x00000200001507b2 : add byte ptr [rax - 0x48], dl ; imul eax, dword ptr [rcx], 0 ; add cl, ch ; ret 0xbd
0x000002000014f1b2 : add byte ptr [rax - 0x48], dl ; mov ebx, 0xe9000000 ; ret 0xd3
0x000002000014e5b2 : add byte ptr [rax - 0x48], dl ; pop rbx ; add byte ptr [rax], al ; add cl, ch ; ret 0xdf
0x00000200001505b2 : add byte ptr [rax - 0x48], dl ; pop rbx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xbf
0x000002000014e4b2 : add byte ptr [rax - 0x48], dl ; push rbx ; add byte ptr [rax], al ; add cl, ch ; ret 0xe0
0x00000200001504b2 : add byte ptr [rax - 0x48], dl ; push rbx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xc0
0x000002000014f2b2 : add byte ptr [rax - 0x48], dl ; ret
0x000002000014f292 : add byte ptr [rax - 0x48], dl ; ret 0
0x000002000014f9b2 : add byte ptr [rax - 0x48], dl ; sti ; add byte ptr [rax], al ; add cl, ch ; ret 0xcb
0x000002000014efb2 : add byte ptr [rax - 0x48], dl ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd5
0x0000020000150fb2 : add byte ptr [rax - 0x48], dl ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb5
0x000002000014edb2 : add byte ptr [rax - 0x48], dl ; wait ; add byte ptr [rax], al ; add cl, ch ; ret 0xd7
0x0000020000150db2 : add byte ptr [rax - 0x48], dl ; wait ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb7
0x000002000014ecb2 : add byte ptr [rax - 0x48], dl ; xchg eax, ebx ; add byte ptr [rax], al ; add cl, ch ; ret 0xd8
0x0000020000150cb2 : add byte ptr [rax - 0x48], dl ; xchg eax, ebx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb8
0x0000020000081947 : add byte ptr [rax - 0x4f17dca3], cl ; ret
0x00000200003bdc97 : add byte ptr [rax - 0x50017], al ; dec dword ptr [rax - 0x75] ; ret 0xb49
0x0000020000486db4 : add byte ptr [rax - 0x557af0f0], ch ; ret
0x00000200001755c2 : add byte ptr [rax - 0x5a7bf0c0], ch ; ret 0xffee
0x00000200005e9eba : add byte ptr [rax - 0x72ba3e75], al ; add r12b, byte ptr [r11] ; ret 0x8d45
0x00000200001039d9 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9274
0x00000200006e5d62 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200005137a5 : add byte ptr [rax - 0x73], cl ; adc eax, 0xf673 ; jmp 0x2000051377b
0x0000020000069fca : add byte ptr [rax - 0x73], cl ; add byte ptr [r13 - 0x75], r9b ; ret 0x8b49
0x00000200000b5657 : add byte ptr [rax - 0x73], cl ; add eax, 0xa9831 ; ret
0x00000200001362e0 : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [r8 + 3] ; ret 0x3b48
0x0000020000462fc5 : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [r9 + 0x3b] ; ret 0x820f
0x000002000020dc61 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x000002000051c118 : add byte ptr [rax - 0x73], cl ; and al, 0x20 ; call 0x20000058408
0x00000200005c3b1d : add byte ptr [rax - 0x73], cl ; and al, 0x48 ; call 0x2000006fe28
0x00000200001516cf : add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x00000200000dfa4f : add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200003bb340 : add byte ptr [rax - 0x73], cl ; lea ecx, dword ptr [rax - 0x18000000] ; ret
0x00000200005064bf : add byte ptr [rax - 0x73], cl ; loopne 0x20000506458 ; clc ; call r15
0x00000200001fb72d : add byte ptr [rax - 0x73], cl ; nop ; call qword ptr [rcx]
0x000002000071810d : add byte ptr [rax - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret 0xff49
0x000002000015492a : add byte ptr [rax - 0x73], cl ; or eax, 0x7f89 ; jmp rcx
0x00000200004dee4c : add byte ptr [rax - 0x73], cl ; push rax ; or al, ch ; ret 0xedfd
0x00000200004ac160 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x50 ; call 0x20000158378
0x000002000062efb1 : add byte ptr [rax - 0x73], cl ; ret
0x00000200003948d9 : add byte ptr [rax - 0x73], cl ; rol byte ptr [r15 + rcx - 0x4a], 1 ; ret
0x000002000051431c : add byte ptr [rax - 0x73], cl ; ror byte ptr [r8 - 0x7d], 1 ; ret 0xe804
0x00000200001316d1 : add byte ptr [rax - 0x74000009], al ; ret 0x6ca3
0x0000020000592ef0 : add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004f2cc7 : add byte ptr [rax - 0x7427bbf1], al ; ret
0x0000020000456863 : add byte ptr [rax - 0x74af8afc], ch ; ret
0x0000020000079f01 : add byte ptr [rax - 0x74b80000], al ; adc esi, esi ; ret 0x7401
0x0000020000102f2f : add byte ptr [rax - 0x74b80000], al ; ret 0x8949
0x0000020000087b2c : add byte ptr [rax - 0x74bc0000], al ; ret
0x000002000021728a : add byte ptr [rax - 0x74ee8af8], ch ; ret
0x000002000012e1cc : add byte ptr [rax - 0x75000009], al ; add al, 8 ; ret
0x000002000038a7f7 : add byte ptr [rax - 0x75333cfa], dh ; ret 0xd233
0x0000020000066c8b : add byte ptr [rax - 0x75], al ; ret
0x00000200005c810a : add byte ptr [rax - 0x75], al ; ret 0x8b48
0x00000200001c4d5f : add byte ptr [rax - 0x75], al ; ret 0xc148
0x000002000019d24a : add byte ptr [rax - 0x75], cl ; adc al, 0xc2 ; jmp 0x2000019d263
0x00000200003f480a : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x0000020000232974 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200000fd3d5 : add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7401
0x00000200001ebe22 : add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x0000020000079f04 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x000002000013fb12 : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; movzx eax, byte ptr [rax + 0x48] ; ret
0x0000020000025afa : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200001c46c0 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000574379 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2674
0x00000200003bb0c1 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x0000020000060a0c : add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret
0x00000200000264f7 : add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x000002000044b559 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7f], ecx ; ret 0x438
0x0000020000190f2f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200000bd35a : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret
0x000002000005b748 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b48
0x00000200000723e2 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200006cd3e8 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200001d0d4f : add byte ptr [rax - 0x75], cl ; add eax, 0xd22c1 ; call rax
0x00000200003d09c2 : add byte ptr [rax - 0x75], cl ; add eax, 0xffed0d9e ; call rax
0x0000020000446176 : add byte ptr [rax - 0x75], cl ; and al, 0x40 ; call 0x20000068fd9
0x00000200004488a8 : add byte ptr [rax - 0x75], cl ; and al, 0x78 ; call 0x20000068fd9
0x000002000010a4f4 : add byte ptr [rax - 0x75], cl ; and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x000002000002e2d0 : add byte ptr [rax - 0x75], cl ; and byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x0000020000213b35 : add byte ptr [rax - 0x75], cl ; call 0x1ffc169fdcd
0x00000200003c3030 : add byte ptr [rax - 0x75], cl ; call 0x2000049f283
0x00000200001e082f : add byte ptr [rax - 0x75], cl ; call qword ptr [rax]
0x00000200000f43f8 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax], 7 ; add byte ptr [rax], al ; ret
0x0000020000427707 : add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x000002000038e2f0 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000381f53 : add byte ptr [rax - 0x75], cl ; cmpsq qword ptr [rsi], qword ptr [rdi] ; mov ebx, eax ; call 0x200003ce249
0x0000020000534af5 : add byte ptr [rax - 0x75], cl ; enter -0x7d18, -0x73 ; ret 0x49ff
0x0000020000538364 : add byte ptr [rax - 0x75], cl ; enter 0x53e8, 0x58 ; ret 0x4cff
0x000002000051d8db : add byte ptr [rax - 0x75], cl ; enter 0x7ce8, 3 ; ret
0x00000200004a856f : add byte ptr [rax - 0x75], cl ; fcos ; ret 0x1b9
0x00000200001008a4 : add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200003d3bfc : add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x000002000051e665 : add byte ptr [rax - 0x75], cl ; fld1 ; push rdx ; cmc ; ret
0x0000020000111921 : add byte ptr [rax - 0x75], cl ; fld1 ; xchg eax, esi ; ret 4
0x0000020000510c63 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x00000200003fbcf4 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004f8e47 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000088262 : add byte ptr [rax - 0x75], cl ; fnstcw word ptr [rdx] ; ret
0x0000020000675503 : add byte ptr [rax - 0x75], cl ; int 0x48
0x00000200004394e7 : add byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200001fb160 : add byte ptr [rax - 0x75], cl ; int1 ; jmp 0x200001fb1ce
0x000002000043b983 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000068fd7
0x000002000043a677 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000006a617
0x000002000044cd53 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000072647
0x00000200003d668b : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000007290a
0x00000200000780c7 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000011439a
0x000002000054916e : add byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000066c09c : add byte ptr [rax - 0x75], cl ; iretd ; mov rsi, rax ; call rbx
0x000002000011bef6 : add byte ptr [rax - 0x75], cl ; je 0x2000011bf27 ; sub byte ptr [rcx - 0x75], al ; ret
0x0000020000126b74 : add byte ptr [rax - 0x75], cl ; je 0x20000126ba5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000037d66a : add byte ptr [rax - 0x75], cl ; je 0x2000037d69b ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000436277 : add byte ptr [rax - 0x75], cl ; je 0x200004362a7 ; jo 0x20000436210 ; ret
0x000002000048eebc : add byte ptr [rax - 0x75], cl ; je 0x2000048eeed ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000050c3b0 : add byte ptr [rax - 0x75], cl ; je 0x2000050c3e1 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000116c0c : add byte ptr [rax - 0x75], cl ; jl 0x20000116c3d ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200003df38d : add byte ptr [rax - 0x75], cl ; lea ebp, dword ptr [rax - 0xffffff] ; ret
0x00000200003df1dc : add byte ptr [rax - 0x75], cl ; lea ebx, dword ptr [rax - 0xffffff] ; ret
0x00000200003dffa8 : add byte ptr [rax - 0x75], cl ; lea ebx, dword ptr [rax] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200003deae9 : add byte ptr [rax - 0x75], cl ; lea ecx, dword ptr [rax] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200003df466 : add byte ptr [rax - 0x75], cl ; lea edi, dword ptr [rax - 0xffffff] ; ret
0x00000200003dd43d : add byte ptr [rax - 0x75], cl ; lea edi, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000446d2f : add byte ptr [rax - 0x75], cl ; mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000002000057fe0c : add byte ptr [rax - 0x75], cl ; mov byte ptr [rax - 0x18000000], bh ; ret
0x0000020000471999 : add byte ptr [rax - 0x75], cl ; mov byte ptr [rax - 0x18000000], bh ; ret 0xc2ba
0x0000020000132405 : add byte ptr [rax - 0x75], cl ; mov ch, 0 ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x000002000054ecfd : add byte ptr [rax - 0x75], cl ; mov ecx, dword ptr [rax - 0x17ffffff] ; ret 0xae6b
0x0000020000640b66 : add byte ptr [rax - 0x75], cl ; mov r13, qword ptr [rax] ; jmp 0x20000640b3c
0x00000200001e06f2 : add byte ptr [rax - 0x75], cl ; mov rbx, rcx ; call qword ptr [rax]
0x00000200000ead39 : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; ret
0x0000020000499f6e : add byte ptr [rax - 0x75], cl ; or byte ptr [r15 + r9 - 0x49], r8b ; ret
0x0000020000157cff : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x00000200000560a1 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000069f0b : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x4cf0
0x0000020000097ec6 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x000002000045ce49 : add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x23], cl ; ret
0x000002000010c74d : add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x00000200000761f7 : add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; ret 0x61eb
0x00000200002329d5 : add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000200004a179e : add byte ptr [rax - 0x75], cl ; or eax, ebp ; cdq ; ret 0x48ff
0x00000200004a1082 : add byte ptr [rax - 0x75], cl ; or eax, ebp ; mov ch, 0x51 ; ret 0x48ff
0x00000200004451a3 : add byte ptr [rax - 0x75], cl ; pop rax ; or dh, dh ; ret
0x000002000053fcac : add byte ptr [rax - 0x75], cl ; pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x00000200001be121 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x000002000020426e : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x000002000008fe6e : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov qword ptr [r8], r10 ; ret
0x00000200001299a0 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200005c2575 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7402
0x00000200003fc854 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf02
0x000002000010c088 : add byte ptr [rax - 0x75], cl ; push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200003be5c3 : add byte ptr [rax - 0x75], cl ; push rcx ; sbb dh, dh ; ret 0x4801
0x0000020000510bd2 : add byte ptr [rax - 0x75], cl ; push rdi ; and al, ch ; fdiv st(6), st(0) ; ret 0x85ff
0x00000200001121ad : add byte ptr [rax - 0x75], cl ; push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000044b141 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; mov rcx, rbp ; call rsi
0x0000020000573d5a : add byte ptr [rax - 0x75], cl ; push rsp ; ret
0x00000200000253b4 : add byte ptr [rax - 0x75], cl ; ret
0x0000020000295919 : add byte ptr [rax - 0x75], cl ; ret 0x1ee9
0x00000200004c0f55 : add byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200001ebe2e : add byte ptr [rax - 0x75], cl ; ret 0x25
0x000002000005e4cc : add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000087ff8 : add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000182d8a : add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200006c5f5c : add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000002645d : add byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000003314d : add byte ptr [rax - 0x75], cl ; ret 0x3348
0x00000200000895cf : add byte ptr [rax - 0x75], cl ; ret 0x348
0x000002000061b711 : add byte ptr [rax - 0x75], cl ; ret 0x44c7
0x00000200001da4eb : add byte ptr [rax - 0x75], cl ; ret 0x48c3
0x000002000009eccb : add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000020b728 : add byte ptr [rax - 0x75], cl ; ret 0x49f0
0x00000200004850b1 : add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000004b8b2 : add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x000002000007ad0b : add byte ptr [rax - 0x75], cl ; ret 0x5189
0x00000200006c9401 : add byte ptr [rax - 0x75], cl ; ret 0x6beb
0x00000200000c883b : add byte ptr [rax - 0x75], cl ; ret 0x8148
0x00000200000d545b : add byte ptr [rax - 0x75], cl ; ret 0x82eb
0x00000200004674ca : add byte ptr [rax - 0x75], cl ; ret 0x8341
0x000002000020be67 : add byte ptr [rax - 0x75], cl ; ret 0x8348
0x00000200001063ce : add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200000daf07 : add byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000106e63 : add byte ptr [rax - 0x75], cl ; ret 0x8844
0x000002000003a08f : add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000102f32 : add byte ptr [rax - 0x75], cl ; ret 0x8949
0x0000020000099dc6 : add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000c59c7 : add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200006fb562 : add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000012abbc : add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x0000020000123dab : add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x0000020000061baf : add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200000cf572 : add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200003bbf75 : add byte ptr [rax - 0x75], cl ; ret 0xb49
0x000002000005ab1d : add byte ptr [rax - 0x75], cl ; ret 0xb841
0x0000020000063109 : add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000067359d : add byte ptr [rax - 0x75], cl ; ret 0xb9
0x000002000003717b : add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200001f4d14 : add byte ptr [rax - 0x75], cl ; ret 0xba48
0x0000020000032c2f : add byte ptr [rax - 0x75], cl ; ret 0xba49
0x000002000005554e : add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001c5644 : add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200001c4de5 : add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200000827ce : add byte ptr [rax - 0x75], cl ; ret 0xca8a
0x00000200001d48c2 : add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000011c887 : add byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000100948 : add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200006cc9c1 : add byte ptr [rax - 0x75], cl ; ret 0xeeb
0x00000200004d7bf9 : add byte ptr [rax - 0x75], cl ; ret 0xf49
0x000002000008f0e3 : add byte ptr [rax - 0x75], cl ; ret 0xf748
0x000002000044140d : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000068fd7
0x000002000043b0ae : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000690a7
0x0000020000441817 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000006a617
0x00000200005d95f7 : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000208a43
0x00000200004f86f8 : add byte ptr [rax - 0x75], cl ; retf ; call 0x200004149aa
0x00000200003f725b : add byte ptr [rax - 0x75], cl ; retf ; call r10
0x0000020000454004 : add byte ptr [rax - 0x75], cl ; retf ; call r15
0x000002000050d093 : add byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200004ae303 : add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x000002000021217a : add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x674
0x00000200004b59e2 : add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4566
0x0000020000484c50 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x73], 1 ; out -0x18, eax ; ret
0x000002000010af34 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x000002000014157f : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call r15
0x0000020000369659 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x0000020000407d15 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], 1 ; ret 0x4466
0x00000200001359fb : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200005a68a1 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200005fa775 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rbp - 0x75], 1 ; ret
0x00000200006caf28 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + rcx*4 + 0x18], -0x7d ; ret 0x48f8
0x00000200006e0885 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + rcx*4 + 0x38], -0x7d ; ret 0x48f8
0x0000020000671587 : add byte ptr [rax - 0x75], cl ; sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x00000200003f7f10 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x000002000048e86a : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r9 ; call 0x200003cab19
0x00000200005005b7 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call qword ptr [rax]
0x00000200001a741a : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x00000200004314bd : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200000f6f07 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x00000200000376f8 : add byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x000002000007c1b4 : add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x00000200001c037b : add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret
0x00000200001c02be : add byte ptr [rax - 0x75], cl ; shr al, 1 ; std ; ret
0x000002000056322d : add byte ptr [rax - 0x75], cl ; sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000d8a15 : add byte ptr [rax - 0x75], cl ; sub byte ptr [r13 + 0x43], sil ; call rdi
0x0000020000179f53 : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x00000200000ec3fc : add byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200000f8e7c : add byte ptr [rax - 0x75], cl ; sub byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x000002000005b14a : add byte ptr [rax - 0x75], cl ; xchg eax, ebp ; nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x00000200000286b1 : add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x000002000044cd90 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x20000070d77
0x00000200001fe151 : add byte ptr [rax - 0x75], cl ; xlatb ; call rax
0x00000200005ae3d8 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005ae430 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x00000200005ae46b : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rsi ; call r10
0x00000200000e4c84 : add byte ptr [rax - 0x75], cl ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000200001a7419 : add byte ptr [rax - 0x75], r9b ; salc ; mov rcx, rdi ; call rbx
0x000002000067810b : add byte ptr [rax - 0x76], al ; iretd ; mov rbx, rax ; call rsi
0x0000020000722690 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200004a399f : add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x75], ecx ; ret
0x00000200000dea94 : add byte ptr [rax - 0x77], cl ; add al, bl ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000050e6fa : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4130
0x00000200000cf3dd : add byte ptr [rax - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000052039a : add byte ptr [rax - 0x77], cl ; add eax, 0x18a37e ; ret
0x000002000048e540 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200001cae10 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004d7a15 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200000ff579
0x0000020000234e42 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200001510a8
0x0000020000402fe4 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200004b1fd2 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r14
0x00000200001b8a59 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x0000020000416372 : add byte ptr [rax - 0x77], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x000002000060072e : add byte ptr [rax - 0x77], cl ; div r14d ; ret 0x7402
0x000002000043f6ae : add byte ptr [rax - 0x77], cl ; enter -0x769a, 0x75 ; ret 0xa0e8
0x000002000041fddf : add byte ptr [rax - 0x77], cl ; insb byte ptr [rdi], dx ; ret
0x00000200004a250a : add byte ptr [rax - 0x77], cl ; je 0x200004a253a ; and al, ch ; jmp rdx
0x0000020000035e7c : add byte ptr [rax - 0x77], cl ; mov byte ptr [rax + 6], ch ; add byte ptr [rax], al ; ret
0x00000200003fdaf7 : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000102943 : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x000002000066ef2c : add byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], r9b ; ret
0x0000020000128cb0 : add byte ptr [rax - 0x77], cl ; or dword ptr [rax + 5], 0 ; add al, ch ; ret
0x00000200001dd558 : add byte ptr [rax - 0x77], cl ; or eax, 0xec5a8 ; ret
0x0000020000368f0a : add byte ptr [rax - 0x77], cl ; or r11b, bpl ; leave ; ret
0x000002000067c29e : add byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x20 ; call 0x20000108518
0x000002000048eda1 : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000050c3d5 : add byte ptr [rax - 0x77], cl ; push rax ; push rax ; mov qword ptr [rdx + 0x30], rcx ; ret
0x0000020000103f85 : add byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200000a8ba5 : add byte ptr [rax - 0x77], cl ; push rdi ; and byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000d5f9c : add byte ptr [rax - 0x77], cl ; sbb al, byte ptr [rcx - 0x75] ; ret
0x000002000007cacf : add byte ptr [rax - 0x77], cl ; sbb dh, dh ; ret
0x00000200000e0a08 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x0000020000064863 : add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000049a8c : add byte ptr [rax - 0x78], al ; xor edi, edi ; ret
0x00000200000657fa : add byte ptr [rax - 0x79], cl ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x00000200000ec2e4 : add byte ptr [rax - 0x7a9a0000], al ; ret 0x1f74
0x00000200004895bb : add byte ptr [rax - 0x7a9a0000], al ; ret 0x2474
0x000002000012c227 : add byte ptr [rax - 0x7a9a0000], al ; ret 0x840f
0x0000020000210206 : add byte ptr [rax - 0x7a9a0000], al ; ret 0xd74
0x00000200005f6a00 : add byte ptr [rax - 0x7ae9fb73], al ; ret 0x575
0x0000020000386750 : add byte ptr [rax - 0x7aecfb73], al ; ret 0x840f
0x0000020000590c74 : add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x00000200006dd975 : add byte ptr [rax - 0x7aeefb73], al ; ret 0x875
0x00000200006db819 : add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x00000200003b11ec : add byte ptr [rax - 0x7af0c706], al ; ret 0
0x000002000060ed47 : add byte ptr [rax - 0x7af10000], al ; ret
0x000002000009de20 : add byte ptr [rax - 0x7b000009], al ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfc24
0x000002000044c174 : add byte ptr [rax - 0x7b], al ; ret 0x1475
0x00000200000cc7e4 : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rbp + 0x440f0458] ; ret
0x0000020000130152 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000130160 ; call rcx
0x00000200001cbd4e : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbd5c ; call rcx
0x00000200001cbdda : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbdea ; jmp rcx
0x00000200001cbe4a : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbe58 ; call rcx
0x0000020000051960 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000005196d ; ret
0x000002000009bb08 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000009bb1b ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000c5d22 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000c5d2f ; ret
0x0000020000112742 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rcx + rax*2 - 0x75] ; ret
0x0000020000062d12 : add byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000020000703f66 : add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x0000020000374a01 : add byte ptr [rax - 0x7b], cl ; ret 0xf75
0x00000200003995f5 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000043ca7d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200003df9e8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x37
0x00000200000b53fa : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000043d5d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; call qword ptr [rdx]
0x0000020000486c77 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200003ee680 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x000002000038d18b : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 2
0x000002000009b154 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; test ebp, eax ; ret 0xe
0x00000200000fdb6e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x000002000066cfa6 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x0000020000672b5b : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x0000020000461c1c : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x000002000041da1e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rcx + 0xf], 0xb6 ; ret
0x00000200004b00c1 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x14], 0xeb ; ret 0xcccc
0x00000200001cccf9 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x7b], 0x8b ; ret
0x00000200001cbdfe : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x000002000021a0a2 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rbp + 0x44], 0x8b ; ret
0x0000020000131d98 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x00000200001fef07 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rdx + 0x48], 0x8b ; xlatb ; call rax
0x00000200000a39d4 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200003cd23e : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0x17b7
0x000002000048dbfe : add byte ptr [rax - 0x7c], al ; dec dword ptr [rax + 0xf] ; ret
0x00000200001cc876 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200003e98ad : add byte ptr [rax - 0x7c], al ; div byte ptr [rdx - 0xa] ; ret
0x00000200001cd996 : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x00000200005d733e : add byte ptr [rax - 0x7c], al ; fidiv word ptr [rbp + rcx - 0xa] ; ret
0x00000200002018de : add byte ptr [rax - 0x7c], al ; fnsave dword ptr [rbp + rcx - 0xa] ; ret
0x000002000070e6e3 : add byte ptr [rax - 0x7cb7cf8e], al ; ret 0x4c08
0x00000200004f92b3 : add byte ptr [rax - 0x7cb7f7bf], cl ; ret 0x4808
0x0000020000624463 : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200004af51f : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200001f8a8b : add byte ptr [rax - 0x7d], cl ; call 0x1ffc35ad2a1
0x00000200004e014b : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x000002000020dc71 : add byte ptr [rax - 0x7d], cl ; jmp 0x2000020dc8c
0x000002000020df19 : add byte ptr [rax - 0x7d], cl ; jmp 0x2000020df34
0x00000200000b14e2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000200004e1a69 : add byte ptr [rax - 0x7d], cl ; loope 0x200004e1a72 ; mov rax, rcx ; ret
0x000002000003a9ea : add byte ptr [rax - 0x7d], cl ; ret
0x00000200001eae8c : add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x000002000045ba8e : add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x00000200005ee9e0 : add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200001d49b6 : add byte ptr [rax - 0x7d], cl ; ret 0x4540
0x00000200005dd519 : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200000258e4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000002000007d807 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001361d4 : add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000200000310f6 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000068c10f : add byte ptr [rax - 0x7d], cl ; ret 0x481c
0x000002000048ed99 : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000002000002575f : add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000046e7bb : add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000002578a : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000257a7 : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000200000257c4 : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200001d159f : add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000020000198314 : add byte ptr [rax - 0x7d], cl ; ret 0x4868
0x00000200000257e4 : add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x0000020000025804 : add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x0000020000638df2 : add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000002000070fcc0 : add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200003e084b : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000200000f2669 : add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x000002000045ea8e : add byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200003d9a0d : add byte ptr [rax - 0x7d], cl ; ret 0x4920
0x00000200000b7059 : add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200004b4fae : add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x00000200003b0ebc : add byte ptr [rax - 0x7d], cl ; ret 0x4950
0x000002000070cb43 : add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x0000020000134510 : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001071b5 : add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x000002000019d003 : add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200006c5498 : add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x00000200001d87c6 : add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x00000200005a9479 : add byte ptr [rax - 0x7d], cl ; ret 0x8914
0x000002000050ce49 : add byte ptr [rax - 0x7d], cl ; ret 0x8928
0x000002000009e35b : add byte ptr [rax - 0x7d], cl ; ret 0x8b50
0x0000020000392fdc : add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x000002000018f76d : add byte ptr [rax - 0x7d], cl ; ret 0xe840
0x00000200003c496c : add byte ptr [rax - 0x7d], cl ; ret 0xe84c
0x00000200001363fe : add byte ptr [rax - 0x7d], cl ; ret 0xe907
0x00000200002162da : add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x000002000039e786 : add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x0000020000148efc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x00000200000aae38 : add byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x7d ; ret 0x7402
0x000002000046e44e : add byte ptr [rax - 0x7d], cl ; sal byte ptr [rax + 0x48], 3 ; ret
0x0000020000032f1f : add byte ptr [rax - 0x7f], cl ; ret
0x0000020000085acf : add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x000002000017d1c1 : add byte ptr [rax - 0x7f], cl ; ret 0x108
0x000002000007ce3d : add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200004f9920 : add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x00000200004f98d1 : add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x00000200007006e1 : add byte ptr [rax - 0x7f], cl ; ret 0x298
0x0000020000062267 : add byte ptr [rax - 0x7f], cl ; ret 0xc00
0x00000200006e5d5b : add byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200001fb5d5 : add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x0000020000074bf9 : add byte ptr [rax - 0x7f], cl ; ret 0xffff
0x00000200007006e0 : add byte ptr [rax - 0x7f], r9b ; ret 0x298
0x00000200001b7f9c : add byte ptr [rax - 0x7fb3517], dl ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004fc6ec : add byte ptr [rax - 0x7fffffe6], bh ; ret
0x0000020000055890 : add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001d8091 : add byte ptr [rax - 0x9000009], al ; ret
0x00000200001a7d10 : add byte ptr [rax - 0x9ae0b17], dl ; push rsi ; ret
0x0000020000272857 : add byte ptr [rax - 0x9ffb23e], bh ; ret 0x4d
0x00000200000890c2 : add byte ptr [rax - 0x9fffff7], al ; ret 0xf04
0x000002000002edec : add byte ptr [rax - 0x9fffffb], al ; ret
0x00000200005ab11e : add byte ptr [rax - 0xaaf3f17], dl ; push rsi ; ret
0x000002000019bc6b : add byte ptr [rax - 0xb472117], dl ; push rsi ; ret
0x00000200005a2899 : add byte ptr [rax - 0xbcf5817], dl ; push rsi ; ret
0x000002000036daf2 : add byte ptr [rax - 0xbe3cff], dh ; ret 0x3b45
0x0000020000648079 : add byte ptr [rax - 0xbefc15], al ; ret
0x0000020000191a3f : add byte ptr [rax - 0xd42e317], dl ; push rsi ; ret 0x7501
0x000002000059013c : add byte ptr [rax - 0xe3fab17], dl ; push rsi ; ret
0x000002000018806b : add byte ptr [rax - 0xe945a17], dl ; push rsi ; ret 0xf04
0x00000200004df115 : add byte ptr [rax - 0xf000009], al ; inc dword ptr [rax] ; ret
0x0000020000039c7f : add byte ptr [rax - 1], cl ; ret
0x00000200004a9235 : add byte ptr [rax - 1], cl ; ret 0x8348
0x00000200003e42c2 : add byte ptr [rax - 1], cl ; ret 0x8349
0x0000020000079b9b : add byte ptr [rax - 1], cl ; ret 0x8549
0x00000200005f755c : add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200005fc529 : add byte ptr [rax - 1], cl ; ret 0xc2f6
0x0000020000486309 : add byte ptr [rax - 1], cl ; ret 0xd5eb
0x00000200003d7532 : add byte ptr [rax - 1], cl ; ret 0xe181
0x000002000020c743 : add byte ptr [rax - 1], cl ; ret 0xe281
0x0000020000141adb : add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200000a5cc5 : add byte ptr [rax - 9], cl ; jmp 0x20048cce81f
0x0000020000082bf8 : add byte ptr [rax - 9], cl ; ret
0x0000020000082504 : add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200000fd225 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], cl ; rol byte ptr [rcx - 0x75], 1 ; ret
0x000002000021d70e : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x00000200005c74b0 : add byte ptr [rax*2 - 0x74b33075], al ; ret
0x0000020000508a2f : add byte ptr [rax], 0 ; add al, ch ; adc cl, cl ; ret
0x00000200003ffa88 : add byte ptr [rax], 0 ; add al, ch ; lcall ptr [rcx] ; ret
0x00000200003ffdd4 : add byte ptr [rax], 0 ; add al, ch ; mov bl, 0x16 ; ret
0x00000200001472a8 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000200005fccb5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xb60b
0x000002000042a701 : add byte ptr [rax], 0 ; add al, ch ; ret 0xf79b
0x00000200004393ff : add byte ptr [rax], 0 ; add al, ch ; test al, 0x6e ; ret
0x000002000039e6ed : add byte ptr [rax], 0 ; add bh, bh ; ret
0x00000200004a986e : add byte ptr [rax], 0 ; add bl, ch ; ret
0x00000200001f2940 : add byte ptr [rax], 0 ; add bl, ch ; xor ecx, dword ptr [rax - 0x75] ; ret
0x0000020000224681 : add byte ptr [rax], 0 ; add bl, dl ; loopne 0x200002246ca ; ret 0xf272
0x00000200005fbdf0 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000e4969 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000898a0 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000159efa : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret
0x000002000036d60c : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000009ecc8 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000047fcf3 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001da25c : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200004f86f5 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200004149ad
0x0000020000454001 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; retf ; call r15
0x00000200001e1b26 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000638def : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000002000011df46 : add byte ptr [rax], 0 ; add byte ptr [rax - 9], cl ; ret
0x0000020000151db0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000200001ed3de : add byte ptr [rax], 0 ; add byte ptr [rbp + 0xb], cl ; ret 0xc148
0x000002000013c5aa : add byte ptr [rax], 0 ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x000002000046733f : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000057462d : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000020d979 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200001e1a5a : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x7cb7feb2], cl ; ret
0x00000200004abcc4 : add byte ptr [rax], 0 ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xffe2
0x000002000048cbed : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x000002000050f45f : add byte ptr [rax], 0 ; add byte ptr [rbx], bh ; ret 0x777
0x00000200000717ef : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200005be4d4 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x0000020000622154 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200002312e5 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x000002000061a75e : add byte ptr [rax], 0 ; add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000045bd57 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; ret 0xffb9
0x00000200000ff2c6 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000abff8 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200000f9455 : add byte ptr [rax], 0 ; add byte ptr [rcx - 9], al ; ret
0x000002000046ee31 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000013e7ba : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200003f98bf : add byte ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b48
0x000002000057f926 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x0000020000469c09 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200003ffa4d : add byte ptr [rax], 0 ; add byte ptr [rdx + 0x1208e801], dh ; ret
0x00000200003ffdbf : add byte ptr [rax], 0 ; add byte ptr [rdx + 0xe96e801], dh ; ret
0x0000020000712352 : add byte ptr [rax], 0 ; add byte ptr [rdx - 0x4c], dh ; ret
0x000002000022003d : add byte ptr [rax], 0 ; add byte ptr [rdx], bh ; ret
0x000002000014ea55 : add byte ptr [rax], 0 ; add cl, ch ; and bl, bl ; add byte ptr [rax], al ; ret
0x0000020000071c76 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x00000200004b95ae : add byte ptr [rax], 0 ; call rax
0x000002000067ea2f : add byte ptr [rax], 0 ; inc dword ptr [rdx + 0x8060] ; ret
0x000002000067ea35 : add byte ptr [rax], 0 ; ret
0x00000200006dad99 : add byte ptr [rax], 0x10 ; jo 0x200006dad2e ; ret
0x000002000022ab57 : add byte ptr [rax], 0x46 ; ret
0x00000200001de6de : add byte ptr [rax], 0xe8 ; ret
0x000002000012941b : add byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x00000200006fadac : add byte ptr [rax], ah ; add byte ptr [rax + 0x3b], cl ; ret 0x2e73
0x0000020000026744 : add byte ptr [rax], ah ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200006f8962 : add byte ptr [rax], ah ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000062d10 : add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0x000002000072f047 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x000002000007e2ab : add byte ptr [rax], ah ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200000f3d39 : add byte ptr [rax], ah ; add byte ptr [rdi + rdx*4 - 0x17], dh ; lodsd eax, dword ptr [rsi] ; ret 0xa
0x000002000059e4cc : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; test esp, ebx ; ret
0x0000020000050070 : add byte ptr [rax], ah ; call 0x200001e578c
0x000002000025ee63 : add byte ptr [rax], ah ; cmp byte ptr [rdi], al ; ret
0x0000020000471bbf : add byte ptr [rax], ah ; rcl dword ptr [rdi], -0x7a ; ret 0x57
0x0000020000242373 : add byte ptr [rax], ah ; ret 5
0x000002000001e366 : add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000001f99e : add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x00000200000a01d6 : add byte ptr [rax], al ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200006d5ab6 : add byte ptr [rax], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006fb4b7 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xc148
0x0000020000029c5f : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rdi], cl ; test ecx, esp ; ret 0x13
0x00000200007122ed : add byte ptr [rax], al ; adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003da51 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x2000003da61 ; mov eax, edx ; ret
0x000002000003da51 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x2000003da62 ; mov eax, edx ; ret
0x0000020000366159 : add byte ptr [rax], al ; adc byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000011e19 : add byte ptr [rax], al ; adc byte ptr [rdi], 1 ; ret
0x00000200005a6071 : add byte ptr [rax], al ; adc dword ptr [rdi], ecx ; ret 0x4789
0x000002000026ce9d : add byte ptr [rax], al ; add ah, ah ; ret 0x10
0x0000020000155a8d : add byte ptr [rax], al ; add ah, ah ; ret 0x4010
0x000002000012ed26 : add byte ptr [rax], al ; add ah, bh ; ret
0x0000020000253869 : add byte ptr [rax], al ; add ah, bh ; rol dword ptr [rdx], -0x15 ; ret
0x0000020000265a3d : add byte ptr [rax], al ; add ah, ch ; or byte ptr [rdx], cl ; ret
0x0000020000253895 : add byte ptr [rax], al ; add ah, ch ; ret
0x0000020000014bdd : add byte ptr [rax], al ; add ah, cl ; ret
0x000002000028a9d1 : add byte ptr [rax], al ; add ah, cl ; ret 0x5f
0x0000020000249b75 : add byte ptr [rax], al ; add ah, dh ; pop rbx ; or dword ptr [rax], eax ; ret
0x0000020000275de5 : add byte ptr [rax], al ; add ah, dh ; ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000027a961 : add byte ptr [rax], al ; add ah, dh ; ror dword ptr [rdi], -0x5d ; ret 0x4f
0x00000200006cb03c : add byte ptr [rax], al ; add al, 0x48 ; mov eax, edx ; jmp 0x200006cb04b
0x00000200006d67da : add byte ptr [rax], al ; add al, 0x48 ; mov eax, edx ; jmp 0x200006d67e9
0x00000200006dfcf9 : add byte ptr [rax], al ; add al, 0x48 ; mov eax, edx ; jmp 0x200006dfd08
0x0000020000568dc3 : add byte ptr [rax], al ; add al, 0x8b ; ret 0x1ba
0x000002000002128d : add byte ptr [rax], al ; add al, ah ; ret
0x00000200002433b5 : add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x00000200000e7b6b : add byte ptr [rax], al ; add al, al ; call 0x1ffc30f9f80
0x00000200000f92db : add byte ptr [rax], al ; add al, al ; cmp eax, ecx ; ja 0x200000f92ec ; ret
0x00000200006f9075 : add byte ptr [rax], al ; add al, al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000262b0d : add byte ptr [rax], al ; add al, al ; ret
0x000002000024b579 : add byte ptr [rax], al ; add al, bh ; ret
0x0000020000272875 : add byte ptr [rax], al ; add al, bh ; ret 0x4d
0x0000020000020855 : add byte ptr [rax], al ; add al, bh ; sysenter
0x0000020000021f55 : add byte ptr [rax], al ; add al, bl ; ret 0x58aa
0x0000020000508a30 : add byte ptr [rax], al ; add al, ch ; adc cl, cl ; ret
0x000002000015b1f6 : add byte ptr [rax], al ; add al, ch ; add bl, byte ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x00000200005205b8 : add byte ptr [rax], al ; add al, ch ; add dh, dl ; ret
0x00000200000d2ef3 : add byte ptr [rax], al ; add al, ch ; and eax, 0x8b001c1f ; ret
0x00000200004bca68 : add byte ptr [rax], al ; add al, ch ; cwde ; push rcx ; ret 0x48ff
0x0000020000473c1b : add byte ptr [rax], al ; add al, ch ; cwde ; ret 0x8bff
0x0000020000501dc0 : add byte ptr [rax], al ; add al, ch ; cwde ; ret 0xffc4
0x000002000015afa0 : add byte ptr [rax], al ; add al, ch ; fcomp dword ptr [rbx] ; add byte ptr [rax], al ; nop ; ret
0x000002000015a920 : add byte ptr [rax], al ; add al, ch ; fsub dword ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x00000200006214af : add byte ptr [rax], al ; add al, ch ; int 0x80
0x0000020000511d86 : add byte ptr [rax], al ; add al, ch ; jb 0x20000511d51 ; ret
0x000002000015bffa : add byte ptr [rax], al ; add al, ch ; jle 0x2000015c014 ; add byte ptr [rax], al ; nop ; ret
0x000002000055400d : add byte ptr [rax], al ; add al, ch ; jmp rcx
0x000002000051d483 : add byte ptr [rax], al ; add al, ch ; jne 0x2000051d497 ; ret
0x00000200004ac65f : add byte ptr [rax], al ; add al, ch ; jno 0x200004ac6cd ; ret 0x4dff
0x000002000046f3e5 : add byte ptr [rax], al ; add al, ch ; jnp 0x2000046f3d1 ; ret 0x32ff
0x0000020000511af5 : add byte ptr [rax], al ; add al, ch ; jrcxz 0x20000511ac6 ; ret
0x00000200003ffa89 : add byte ptr [rax], al ; add al, ch ; lcall ptr [rcx] ; ret
0x00000200003ffdd5 : add byte ptr [rax], al ; add al, ch ; mov bl, 0x16 ; ret
0x00000200004538f4 : add byte ptr [rax], al ; add al, ch ; mov byte ptr [rax], dl ; ret 0x49ff
0x00000200004d7eb3 : add byte ptr [rax], al ; add al, ch ; mov ch, 0x76 ; ret 0x48ff
0x000002000047b74f : add byte ptr [rax], al ; add al, ch ; mov ch, 0xab ; ret
0x000002000015c447 : add byte ptr [rax], al ; add al, ch ; mov cl, 7 ; add byte ptr [rax], al ; nop ; ret
0x0000020000516ca2 : add byte ptr [rax], al ; add al, ch ; mov dh, 0x6f ; ret
0x0000020000506e32 : add byte ptr [rax], al ; add al, ch ; mov dl, 0x12 ; ret
0x000002000015acec : add byte ptr [rax], al ; add al, ch ; mov word ptr [rsi], ds ; add byte ptr [rax], al ; nop ; ret
0x000002000015c12c : add byte ptr [rax], al ; add al, ch ; or al, 0xd ; add byte ptr [rax], al ; nop ; ret
0x00000200004cd19a : add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; popfq ; ret 0xe9ff
0x00000200005cbe9d : add byte ptr [rax], al ; add al, ch ; pop rbx ; ret
0x000002000066f9f2 : add byte ptr [rax], al ; add al, ch ; pop rsi ; ret 0xffbb
0x000002000015bb10 : add byte ptr [rax], al ; add al, ch ; push -0x6ffffff0 ; ret
0x00000200005fd2a6 : add byte ptr [rax], al ; add al, ch ; push rdx ; mov cl, 0xa5 ; push rsi ; ret
0x0000020000513d64 : add byte ptr [rax], al ; add al, ch ; push rsp ; outsd dx, dword ptr [rsi] ; ret 0x84ff
0x00000200000c5fa5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000200005ca502 : add byte ptr [rax], al ; add al, ch ; ret 0x16
0x00000200006ed0da : add byte ptr [rax], al ; add al, ch ; ret 0x212
0x000002000007800a : add byte ptr [rax], al ; add al, ch ; ret 0x521
0x000002000072d136 : add byte ptr [rax], al ; add al, ch ; ret 0xa20b
0x00000200006ed6a6 : add byte ptr [rax], al ; add al, ch ; ret 0xa639
0x000002000068bb8a : add byte ptr [rax], al ; add al, ch ; ret 0xaa2e
0x0000020000609f4a : add byte ptr [rax], al ; add al, ch ; ret 0xb0eb
0x00000200005fccb6 : add byte ptr [rax], al ; add al, ch ; ret 0xb60b
0x00000200004b8fe6 : add byte ptr [rax], al ; add al, ch ; ret 0xbb72
0x000002000047199e : add byte ptr [rax], al ; add al, ch ; ret 0xc2ba
0x00000200003ddaae : add byte ptr [rax], al ; add al, ch ; ret 0xcb23
0x000002000054f536 : add byte ptr [rax], al ; add al, ch ; ret 0xd44a
0x0000020000194746 : add byte ptr [rax], al ; add al, ch ; ret 0xec10
0x00000200001a85a6 : add byte ptr [rax], al ; add al, ch ; ret 0xf562
0x0000020000457696 : add byte ptr [rax], al ; add al, ch ; ret 0xf5b7
0x00000200001f09d6 : add byte ptr [rax], al ; add al, ch ; ret 0xf606
0x000002000042a702 : add byte ptr [rax], al ; add al, ch ; ret 0xf79b
0x00000200004a81b2 : add byte ptr [rax], al ; add al, ch ; ret 0xf8c2
0x0000020000156df2 : add byte ptr [rax], al ; add al, ch ; ret 0xfaf3
0x00000200001563f2 : add byte ptr [rax], al ; add al, ch ; ret 0xfafd
0x00000200000d8a3e : add byte ptr [rax], al ; add al, ch ; ret 0xfd6e
0x0000020000679072 : add byte ptr [rax], al ; add al, ch ; ret 0xfef2
0x00000200005ecd3e : add byte ptr [rax], al ; add al, ch ; ret 0xff8f
0x00000200006890da : add byte ptr [rax], al ; add al, ch ; ret 0xffab
0x0000020000471213 : add byte ptr [rax], al ; add al, ch ; ret 0xffc2
0x00000200005c5ea6 : add byte ptr [rax], al ; add al, ch ; ret 0xffd1
0x000002000017603f : add byte ptr [rax], al ; add al, ch ; ret 0xffef
0x00000200003f3792 : add byte ptr [rax], al ; add al, ch ; ret 1
0x000002000015c225 : add byte ptr [rax], al ; add al, ch ; ror dword ptr [rcx], cl ; add byte ptr [rax], al ; nop ; ret
0x0000020000513462 : add byte ptr [rax], al ; add al, ch ; salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000002000015a0e0 : add byte ptr [rax], al ; add al, ch ; sbb byte ptr [rbx], ch ; add byte ptr [rax], al ; nop ; ret
0x0000020000439400 : add byte ptr [rax], al ; add al, ch ; test al, 0x6e ; ret
0x000002000047d886 : add byte ptr [rax], al ; add al, ch ; xchg eax, edx ; scasb al, byte ptr [rdi] ; ret 0xebff
0x00000200005118d2 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; clc ; ret 0x85ff
0x000002000000840d : add byte ptr [rax], al ; add al, cl ; ret
0x000002000027041d : add byte ptr [rax], al ; add al, cl ; ret 0x11
0x000002000024b88d : add byte ptr [rax], al ; add al, cl ; ror dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x0000020000369725 : add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x0000020000257fd1 : add byte ptr [rax], al ; add al, dh ; ror dword ptr [rax + rax], -0x31 ; ret
0x0000020000262ac5 : add byte ptr [rax], al ; add al, dh ; ror dword ptr [rsi], 0 ; insd dword ptr [rdi], dx ; ret 0xe
0x000002000024b4f1 : add byte ptr [rax], al ; add al, dh ; sar dword ptr [rsi], 0 ; scasd eax, dword ptr [rdi] ; ret 0x3e
0x0000020000258005 : add byte ptr [rax], al ; add al, dl ; ret
0x00000200004ccead : add byte ptr [rax], al ; add bh, al ; call qword ptr [r8]
0x0000020000030e16 : add byte ptr [rax], al ; add bh, bh ; call 0x2000003d074
0x00000200001f94d4 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x000002000017e01e : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret 0x22eb
0x0000020000184196 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x000002000000a340 : add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x0000020000157e16 : add byte ptr [rax], al ; add bh, bh ; loop 0x20000157e7b ; ret
0x00000200007303bf : add byte ptr [rax], al ; add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000079017 : add byte ptr [rax], al ; add bh, bh ; push rsi ; ret 0xf01
0x000002000002f8ed : add byte ptr [rax], al ; add bh, bh ; ret
0x000002000061d82e : add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x000002000061740c : add byte ptr [rax], al ; add bh, bh ; ret 0x5ee8
0x0000020000062519 : add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x0000020000606a78 : add byte ptr [rax], al ; add bh, bh ; ret 0xc148
0x000002000001f87d : add byte ptr [rax], al ; add bh, bl ; ret
0x0000020000633115 : add byte ptr [rax], al ; add bh, dh ; ret
0x00000200003ca8f2 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000200004d078d : add byte ptr [rax], al ; add bh, dh ; ret 0x402
0x0000020000517f36 : add byte ptr [rax], al ; add bl, al ; jae 0x20000517f51 ; or eax, 0xffffffff ; ret
0x00000200001593e7 : add byte ptr [rax], al ; add bl, al ; jmp rax
0x000002000010a416 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xa ; ret
0x0000020000673394 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000002 ; ret
0x00000200000d4fa0 : add byte ptr [rax], al ; add bl, al ; mov eax, 1 ; ret
0x000002000009c087 : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000002000009c08d : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x0000020000402b4a : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x000002000010a407 : add byte ptr [rax], al ; add bl, al ; mov eax, 5 ; ret
0x0000020000107e31 : add byte ptr [rax], al ; add bl, al ; mov eax, 7 ; ret
0x00000200000fa9be : add byte ptr [rax], al ; add bl, al ; mov eax, edx ; ret
0x000002000012fde7 : add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x00000200001ec3a9 : add byte ptr [rax], al ; add bl, al ; sbb eax, eax ; ret
0x0000020000033a5b : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200001516ed : add byte ptr [rax], al ; add bl, bl ; loop 0x20000151696 ; fnstcw word ptr [rcx] ; ret
0x000002000021bb2d : add byte ptr [rax], al ; add bl, ch ; add al, 0x8b ; ret
0x00000200005b5aa6 : add byte ptr [rax], al ; add bl, ch ; add eax, 0x8bf38a40 ; ret
0x000002000064d803 : add byte ptr [rax], al ; add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000016dfdd : add byte ptr [rax], al ; add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0xf44
0x000002000064d7c0 : add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200006121a8 : add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x0000020000611f48 : add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000710cec : add byte ptr [rax], al ; add bl, ch ; fimul word ptr [rax - 0x75] ; ret 0x2b49
0x0000020000718bf1 : add byte ptr [rax], al ; add bl, ch ; jmp 0x20000718bc7
0x00000200003cb8de : add byte ptr [rax], al ; add bl, ch ; mov eax, edx ; jmp 0x200003cb882
0x00000200002109b4 : add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000453497 : add byte ptr [rax], al ; add bl, ch ; out 0x8b, al ; ret 0x4166
0x00000200000d45fa : add byte ptr [rax], al ; add bl, ch ; ret
0x000002000006fbaf : add byte ptr [rax], al ; add bl, ch ; ret 0x8548
0x000002000008707f : add byte ptr [rax], al ; add bl, ch ; ret 0x8948
0x0000020000109764 : add byte ptr [rax], al ; add bl, ch ; ret 0xcccc
0x000002000037be65 : add byte ptr [rax], al ; add bl, ch ; sub al, 0x8b ; ret
0x00000200001f2941 : add byte ptr [rax], al ; add bl, ch ; xor ecx, dword ptr [rax - 0x75] ; ret
0x000002000001ebb5 : add byte ptr [rax], al ; add bl, cl ; ret
0x00000200000d224f : add byte ptr [rax], al ; add bl, dl ; loop 0x200000d2251 ; ret 0xf15
0x0000020000217185 : add byte ptr [rax], al ; add bl, dl ; loop 0x2000021711c ; ret 0xd0f7
0x00000200002176d5 : add byte ptr [rax], al ; add bl, dl ; loop 0x2000021766c ; ret 0xd0f7
0x00000200002168a4 : add byte ptr [rax], al ; add bl, dl ; loopne 0x200002168be ; rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000224682 : add byte ptr [rax], al ; add bl, dl ; loopne 0x200002246c9 ; ret 0xf272
0x000002000023d541 : add byte ptr [rax], al ; add bl, dl ; ret 0x39
0x00000200002788e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x160068c2], dh ; ret
0x000002000001f84d : add byte ptr [rax], al ; add byte ptr [rax + 0x19], cl ; ret 0xdd
0x0000020000242345 : add byte ptr [rax], al ; add byte ptr [rax + 0x1b0005bb], al ; ret 5
0x000002000007cb39 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3149
0x0000020000081a19 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x000002000018c7f9 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x48a
0x00000200004d29c7 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b45
0x0000020000055259 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x000002000008911b : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000002eeac : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200000d1539 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xb948
0x00000200005fbdf1 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x000002000066efb1 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000200000a0f49 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x00000200000e496a : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200003f9188 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x349
0x0000020000604ee1 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200000b197a : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b49
0x0000020000072e90 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200001d1147 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x000002000002f203 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb60f
0x0000020000086192 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb9
0x00000200000898a1 : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000675f1a : add byte ptr [rax], al ; add byte ptr [rax + 0x32], al ; imul al ; ret
0x00000200002714b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x330011fa], al ; call qword ptr [rcx]
0x0000020000130a48 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200006e0d86 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000275e11 : add byte ptr [rax], al ; add byte ptr [rax + 0x37004ec2], dl ; ret
0x000002000017d911 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rax + rcx - 0x18], dh ; ret 0xf3f7
0x00000200000bd0d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000729f10 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x0000020000219411 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xea3c
0x0000020000516a4d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rcx + rbx*8 - 0x17], dh ; ret 0x9bf
0x000002000043feb9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi + rdx*8 - 0x17], dh ; ret 0x12e8
0x000002000019868c : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test bh, cl ; ret
0x0000020000545c14 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test ch, dh ; ret 0xffe7
0x0000020000175318 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test ch, dl ; ret
0x000002000017532d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test dh, ch ; ret
0x000002000006ad82 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200003e581f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + rbp*4 - 0x17], esi ; ret
0x00000200004177dd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; or dword ptr [rsi + rbx*8 - 0x17], esi ; ret 0x148c
0x0000020000064a5b : add byte ptr [rax], al ; add byte ptr [rax + 0x3a], al ; stosd dword ptr [rdi], eax ; ret
0x00000200005a4d39 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x00000200000c8c44 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter -0x7af1, 0x18 ; ret
0x000002000018e93f : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter 0xf44, 0x46 ; ret 0x8b41
0x00000200000b12d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; fimul dword ptr [rdi] ; test byte ptr [rbx], cl ; ret
0x0000020000027759 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000008efba : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1573
0x00000200000963d1 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x0000020000181435 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x2977
0x000002000020efd1 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200003d527a : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x00000200005f1ed5 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x00000200003f2700 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000c5b5c : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000002ad10 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x00000200003dd00b : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200001a14e6 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa277
0x000002000038865e : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xccc3
0x00000200001153a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x3bc72341], al ; ret
0x00000200003787f3 : add byte ptr [rax], al ; add byte ptr [rax + 0x450f0ff9], al ; ret 0xb0c3
0x00000200006792b4 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x000002000025ddb9 : add byte ptr [rax], al ; add byte ptr [rax + 0x4a0046c2], ah ; ret
0x0000020000191f50 : add byte ptr [rax], al ; add byte ptr [rax + 0x4de9cc75], al ; ret 0xfff2
0x00000200001abf53 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000275a4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200006169bf : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4e
0x0000020000468cf9 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x0000020000192077 : add byte ptr [rax], al ; add byte ptr [rax + 0x74e9d475], al ; ret 0xfff2
0x000002000002f319 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x00000200003ddb73 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x548b
0x00000200003704e8 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200007099d9 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200001d7676 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000003bd2b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x0000020000233560 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x00000200006e8d2d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x00000200006e89d5 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d4c
0x00000200000bc95b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200005b4e89 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000127ca4 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc748
0x000002000056fd12 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200004cea0d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xe083
0x0000020000143808 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x0000020000159ecd : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000020000385c22 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8944
0x000002000061b3e8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000002000012d00b : add byte ptr [rax], al ; add byte ptr [rax + 0xfc18548], al ; xchg eax, ebp ; ret 0xc28b
0x00000200001595e2 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000200000590fe : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000441f4c : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x348
0x00000200000375be : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000434cd2 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000068a13c : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000128659 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x0000020000382173 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x00000200005d8d1f : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x000002000021dfc4 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0x94 ; ret
0x0000020000220c60 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0xbc ; ret
0x00000200000ee99b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0x4c ; ret
0x00000200005b1148 : add byte ptr [rax], al ; add byte ptr [rax + rax*2 - 0x7c], dh ; ret
0x00000200000c956f : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x0000020000223b78 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x5e9
0x0000020000223d4e : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x0000020000092e78 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x00000200000561b8 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x00000200000b21ea : add byte ptr [rax], al ; add byte ptr [rax + rcx*8 - 0x3fccfd8b], al ; ret
0x00000200001df9fd : add byte ptr [rax], al ; add byte ptr [rax + rdi - 0x71], al ; ret
0x0000020000127b8e : add byte ptr [rax], al ; add byte ptr [rax - 0x17], al ; ret
0x00000200002788fd : add byte ptr [rax], al ; add byte ptr [rax - 0x1eff973d], dh ; ret
0x0000020000248a79 : add byte ptr [rax], al ; add byte ptr [rax - 0x22], bh ; or byte ptr [rax], al ; ret
0x0000020000270821 : add byte ptr [rax], al ; add byte ptr [rax - 0x2a], ah ; adc dword ptr [rax], eax ; ret 0x11d8
0x000002000011e4ed : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x2000011e546 ; mov dword ptr [rax], eax ; ret
0x00000200001ab617 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200002706cd : add byte ptr [rax], al ; add byte ptr [rax - 0x2e], bl ; adc dword ptr [rax], eax ; ret 0x11d4
0x000002000025920d : add byte ptr [rax], al ; add byte ptr [rax - 0x3d], al ; add bpl, r8b ; ret
0x0000020000291b89 : add byte ptr [rax], al ; add byte ptr [rax - 0x3dff9c15], ah ; jmp 0x20000291bfd
0x0000020000281921 : add byte ptr [rax], al ; add byte ptr [rax - 0x3e], cl ; push rcx ; add byte ptr [rcx], dh ; ret
0x000002000020539c : add byte ptr [rax], al ; add byte ptr [rax - 0x3ef2c4ff], dh ; ret 0xd
0x0000020000426233 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f7af0c0], ch ; call qword ptr [rbx]
0x00000200000f673d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc232af5c
0x00000200000fa067 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc232e986
0x0000020000169c3e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc239e45a
0x00000200000525f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2906a0f
0x0000020000060870 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000013ad91 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; clc ; add ecx, dword ptr [rax + 3] ; ret 0x8948
0x00000200000f8ecf : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003da25f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000005b218 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; out dx, eax ; or dword ptr [rcx - 0xa], eax ; ret 0xf01
0x00000200004ba402 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff19], bh ; ret
0x00000200004f4fb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffff3], bh ; ret
0x0000020000094722 : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x000002000068f0af : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffffff], bh ; ret
0x000002000020df07 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x00000200001516cd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x00000200003c408d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000456861 : add byte ptr [rax], al ; add byte ptr [rax - 0x74af8afc], ch ; ret
0x0000020000087b2a : add byte ptr [rax], al ; add byte ptr [rax - 0x74bc0000], al ; ret
0x00000200001c46be : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003bb0bf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x000002000006a6f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret
0x00000200001b98dc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200006cd3e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x0000020000213b33 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc169fdcf
0x00000200003c302e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x2000049f285
0x0000020000427705 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x0000020000538362 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x53e8, 0x58 ; ret 0x4cff
0x000002000051d8d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x7ce8, 3 ; ret
0x00000200003d3bfa : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x000002000051e663 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fld1 ; push rdx ; cmc ; ret
0x0000020000510c61 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x00000200004394e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000044440f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000006a619
0x000002000044cd51 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000072649
0x000002000054916c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x0000020000157cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x00000200000bd74d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000232a70 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000200004a1080 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or eax, ebp ; mov ch, 0x51 ; ret 0x48ff
0x000002000053fcaa : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x000002000048559a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200003be5c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rcx ; sbb dh, dh ; ret 0x4801
0x00000200000359f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000295917 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1ee9
0x00000200001ebe2c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200003b70fb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000895cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x000002000061b70f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x44c7
0x000002000009ecc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200004674c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8341
0x00000200000daf05 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200001594b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200006f7afd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000047fcf4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200000cf570 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000063107 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x00000200001f4d12 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba48
0x0000020000032c2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x000002000005554c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001c5642 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x0000020000544618 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200001d48c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000100946 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000043b0ac : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000690a9
0x0000020000441815 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000006a619
0x00000200004f86f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200004149ac
0x00000200003f7259 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r10
0x0000020000454002 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r15
0x000002000050d091 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call rax
0x0000020000212178 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x674
0x00000200005a689f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x0000020000179f51 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x000002000044cd8e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; call 0x20000070d79
0x00000200005ae3d6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005ae42e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x00000200000cf3db : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200006e79e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000402fe2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200004b1fd0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r14
0x00000200001b8a57 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x00000200000e0a06 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x0000020000064b27 : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000049a8a : add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; xor edi, edi ; ret
0x00000200005f69fe : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae9fb73], al ; ret 0x575
0x000002000038674e : add byte ptr [rax], al ; add byte ptr [rax - 0x7aecfb73], al ; ret 0x840f
0x0000020000590c72 : add byte ptr [rax], al ; add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x00000200006dd973 : add byte ptr [rax], al ; add byte ptr [rax - 0x7aeefb73], al ; ret 0x875
0x00000200006db817 : add byte ptr [rax], al ; add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x00000200003b11ea : add byte ptr [rax], al ; add byte ptr [rax - 0x7af0c706], al ; ret 0
0x000002000060ed45 : add byte ptr [rax], al ; add byte ptr [rax - 0x7af10000], al ; ret
0x000002000044c172 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], al ; ret 0x1475
0x0000020000130150 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000130162 ; call rcx
0x00000200001cbd4c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbd5e ; call rcx
0x00000200001cbdd8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbdec ; jmp rcx
0x00000200001cbe48 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbe5a ; call rcx
0x000002000005195e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000005196f ; ret
0x0000020000703f64 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x00000200003995f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200003df9e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x37
0x00000200000b53f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000043d5d1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; call qword ptr [rdx]
0x0000020000486c75 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004a0619 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200001cbdfc : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200005df6c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200003cd23c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0x17b7
0x00000200003e99a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; div byte ptr [rdx - 0xa] ; ret
0x00000200005d733c : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; fidiv word ptr [rbp + rcx - 0xa] ; ret
0x000002000070e6e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7cf8e], al ; ret 0x4c08
0x00000200004f92b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7f7bf], cl ; ret 0x4808
0x000002000020df17 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp 0x2000020df36
0x0000020000048789 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001eae8a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x00000200005ee9de : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200000258e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200003dbdcf : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001361d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x00000200000310f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000068c10d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481c
0x000002000048ed97 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000002000002575d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x0000020000025788 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000257a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000200000257c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200001d159d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x00000200000257e2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x0000020000025802 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x0000020000638df0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000002000070fcbe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000603eea : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200003b0eba : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4950
0x00000200004ad464 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200006c5496 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x00000200001d87c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x00000200005a9477 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8914
0x000002000050ce47 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8928
0x0000020000392fda : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x000002000039e784 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000046e44c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; sal byte ptr [rax + 0x48], 3 ; ret
0x0000020000032f1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000017d1bf : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x108
0x000002000007ce3b : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200000a4dc8 : add byte ptr [rax], al ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000272855 : add byte ptr [rax], al ; add byte ptr [rax - 0x9ffb23e], bh ; ret 0x4d
0x00000200000890c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x9fffff7], al ; ret 0xf04
0x000002000002edea : add byte ptr [rax], al ; add byte ptr [rax - 0x9fffffb], al ; ret
0x000002000007e703 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200003e42c0 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200005fc527 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xc2f6
0x0000020000486307 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x0000020000141ad9 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000082bf6 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x0000020000082502 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0xfff
0x0000020000062d0e : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0x000002000007e2a9 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rcx - 0x7b], cl ; ret
0x000002000059e4ca : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rdi], cl ; test esp, ebx ; ret
0x000002000025ee61 : add byte ptr [rax], al ; add byte ptr [rax], ah ; cmp byte ptr [rdi], al ; ret
0x00000200002423a9 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 5
0x000002000001e364 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000001f99c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x00000200006fb4b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xc148
0x000002000003da4f : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x2000003da63 ; mov eax, edx ; ret
0x0000020000157c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x000002000000840b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000002000017e01c : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret 0x22eb
0x0000020000184194 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x0000020000079015 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; push rsi ; ret 0xf01
0x000002000002f8eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000008ce7c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000159ecb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000200000359f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000895cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000062d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x840f
0x000002000007e2a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rcx - 0x7b], cl ; ret
0x0000020000008409 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000002000000a6c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9e
0x0000020000173a10 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; ret
0x00000200000889f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret
0x0000020000182c96 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x840f
0x00000200001f234c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rcx + 0xb] ; ret 0xb48
0x000002000005be63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000005c990 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x000002000000a6ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9e
0x00000200003749fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0xf75
0x0000020000151db1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x000002000045dceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200005f7556 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000876b5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x000002000015920b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; and al, bl ; ret
0x0000020000173a12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, cl ; ret
0x00000200000889f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret
0x0000020000182c98 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x840f
0x00000200001f234e : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rcx + 0xb] ; ret 0xb48
0x000002000005be65 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000015923b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bh ; ret
0x000002000005c992 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x0000020000520374 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x000002000001ef74 : add byte ptr [rax], al ; add byte ptr [rax], al ; add esp, dword ptr [rcx] ; ret
0x00000200000c0e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000437403 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001fdef7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001e2b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x0000020000114d73 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000002000002267c : add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x0000020000020854 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; sysenter
0x000002000015923c : add byte ptr [rax], al ; add byte ptr [rax], al ; cli ; ret
0x000002000001f7bc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200001743ef : add byte ptr [rax], al ; add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200001516ec : add byte ptr [rax], al ; add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000021d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; jle 0x20000021d29 ; ret 0x94
0x00000200000217dc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rsi
0x00000200001516cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x000002000001fcfc : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret 0x21d1
0x0000020000369724 : add byte ptr [rax], al ; add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x00000200000222ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000021904 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dh, 0x59 ; ret
0x00000200001595e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000002000001fd44 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x0000020000586694 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r15b, sil ; jmp 0x200004928d9
0x000002000015920c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, cr3 ; ret
0x000002000005e808 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x00000200000890bf : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add dh, dh ; ret 0xf04
0x000002000015840e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000001f93c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x000002000001e974 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000065f27c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000002000001eab4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2237
0x000002000001e91c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000001e84c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x000002000001e7c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x399b
0x0000020000011a05 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4000
0x000002000001e29c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x000002000001fcbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x000002000001e004 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c9a
0x0000020000021d04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53e8
0x000002000002177c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x82bc
0x00000200000202e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x8d0a
0x000002000000a6cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x9e
0x0000020000020fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb0cc
0x00000200000211b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x00000200000220f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb9b4
0x000002000002095c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdf27
0x000002000002024c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x00000200002485f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x00000200000fd308 : add byte ptr [rax], al ; add byte ptr [rax], al ; seta al ; ret
0x0000020000036609 : add byte ptr [rax], al ; add byte ptr [rax], al ; sete al ; ret
0x00000200001d941f : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; ret
0x00000200000876b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; str word ptr [rcx + 0xb] ; ret
0x000002000001fd14 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x000002000001f314 : add byte ptr [rax], al ; add byte ptr [rax], al ; wait ; ret 0x55a5
0x0000020000020d34 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; push rsp ; ret
0x0000020000021a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; ret 0x7c05
0x000002000052047a : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000022fcdd : add byte ptr [rax], al ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000022fcad : add byte ptr [rax], al ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x0000020000266849 : add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x0000020000162163 : add byte ptr [rax], al ; add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x000002000027ef05 : add byte ptr [rax], al ; add byte ptr [rax], bl ; div byte ptr [rax] ; ret
0x0000020000021a55 : add byte ptr [rax], al ; add byte ptr [rax], ch ; loope 0x200000219e9 ; ret
0x00000200001971a3 : add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x2000019714e
0x000002000028d3e9 : add byte ptr [rax], al ; add byte ptr [rax], cl ; jmp qword ptr [rcx]
0x000002000028185d : add byte ptr [rax], al ; add byte ptr [rax], cl ; rcl dword ptr [rcx], 0x11 ; ret 0x51
0x000002000001e76d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000002000024471d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 6
0x000002000023d325 : add byte ptr [rax], al ; add byte ptr [rax], dh ; lodsd eax, dword ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000002000024255d : add byte ptr [rax], al ; add byte ptr [rax], dh ; push rdi ; cmp eax, dword ptr [rax] ; ret 0x3b59
0x00000200001555dd : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000200003749fd : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0xf75
0x000002000003da50 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rbp + 3], dh ; mov eax, edx ; ret
0x000002000001f99d : add byte ptr [rax], al ; add byte ptr [rax], dl ; js 0x2000001fa27 ; ret
0x000002000053a3f2 : add byte ptr [rax], al ; add byte ptr [rax], dl ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000103697 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], dh ; ret
0x00000200003d72fe : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret 0x2b41
0x00000200000df935 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; in al, -0x17 ; ret 0xfffd
0x00000200000f9812 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx + 0x3b], cl ; ret
0x0000020000596ddc : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x000002000012450e : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x000002000016e000 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; shr cl, cl ; ret
0x00000200003ad44c : add byte ptr [rax], al ; add byte ptr [rbp + 0x3a41f341], cl ; ret 0x860f
0x00000200001d77e5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200004cc906 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret 0x4674
0x000002000010cb3c : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f1050], cl ; ret 0x8b49
0x00000200000f73eb : add byte ptr [rax], al ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x00000200000b573c : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; xor al, al ; ret
0x0000020000024935 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4880fc0], al ; call qword ptr [rbx]
0x0000020000168e5e : add byte ptr [rax], al ; add byte ptr [rbp + 0x52880fc0], al ; ret
0x0000020000045725 : add byte ptr [rax], al ; add byte ptr [rbp + 0x5b], bl ; ret
0x0000020000222833 : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], cl ; ret 0x8948
0x00000200001ed3df : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], cl ; ret 0xc148
0x0000020000402a75 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; ret 0x8b49
0x00000200000c63fe : add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x0000020000464327 : add byte ptr [rax], al ; add byte ptr [rbp + 3], al ; ret
0x000002000013c5ab : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x00000200006e49d1 : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xff83
0x00000200000f4520 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; ret
0x0000020000151db3 : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000200006737aa : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; or al, 0xa5 ; ret
0x00000200004962f2 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x42], al ; js 0x200004962ea ; ret 0xcc78
0x00000200000aa275 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x000002000004b859 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x5d], al ; add dword ptr [rcx - 0x7c], eax ; ret
0x000002000065af5c : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0xc767
0x0000020000184ae4 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xfd98
0x00000200003f0ea5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x17], dh ; call 0x200000bd0e7
0x0000020000141fc0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3eb0f040], al ; ret
0x000002000043daf7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3ebbf040], al ; ret
0x000002000023e8b5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x47], dl ; cmp al, byte ptr [rax] ; ret
0x00000200000b3b20 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6af0be40], al ; ret
0x0000020000157a5f : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x000002000029642a : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b306b6], cl ; ret
0x0000020000676289 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b31bb6], cl ; ret
0x0000020000681e4a : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b3bcb6], cl ; ret
0x000002000017ac37 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b3e7b6], cl ; ret
0x00000200006d7d8a : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b729af], cl ; ret
0x0000020000425d68 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74dd8725], al ; ret
0x000002000042ff78 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74e68a40], al ; ret
0x00000200006e7f8d : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; adc byte ptr [rax - 0x75], r9b ; ret
0x00000200005fa1d7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; add eax, dword ptr [rbp + 0x3b] ; ret 0x860f
0x000002000003ea53 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000036e1b : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200006119ff : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x000002000006c9b8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000002d9e3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200003b28c5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x00000200001ea4cc : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xc149
0x000002000012a418 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000003ad52 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x6349
0x000002000020d97a : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000cfa78 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200000c1374 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000774dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200006d8acd : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x0000020000384cf8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x99e8
0x00000200003c9330 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xd233
0x00000200001831ab : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xeae8
0x00000200006d8b44 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xf41
0x00000200001327b5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; sub byte ptr [r13 - 0x75], al ; ret 0xf43
0x00000200001fd373 : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0x8b41
0x00000200006ccd9e : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; push rdi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200001f678d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x99 ; ret
0x000002000006b7c8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; in al, 0x74 ; jbe 0x2000006b765 ; ret
0x000002000004058d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x00000200004253b4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; ret
0x00000200000ca4dc : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; ret 0x850f
0x00000200004448d4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x85 ; ret
0x00000200004d4484 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x85 ; ret 0xc7b
0x000002000054d292 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb70da9], cl ; ret
0x00000200001e1a5b : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7feb2], cl ; ret
0x00000200006471d7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x9e68a40], al ; ret 0x7401
0x00000200006eebb7 : add byte ptr [rax], al ; add byte ptr [rbp - 0xbb8740], al ; ret 0x8b49
0x00000200006eebe0 : add byte ptr [rax], al ; add byte ptr [rbp - 0xe48740], al ; ret 0x8b49
0x000002000043eb0c : add byte ptr [rax], al ; add byte ptr [rbp - 0xf28a40], al ; ret
0x0000020000436edb : add byte ptr [rax], al ; add byte ptr [rbp - 0xf68740], al ; ret
0x00000200003b5adb : add byte ptr [rax], al ; add byte ptr [rbx + 0x32c2444], cl ; ret 0x4489
0x000002000066eac6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x0000020000021af5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x0000020000519b95 : add byte ptr [rax], al ; add byte ptr [rbx + 0x4061e8d8], cl ; ret
0x00000200001c4c97 : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f01f9], al ; ret 0x521
0x000002000051579b : add byte ptr [rax], al ; add byte ptr [rbx + 0x4600b8c8], cl ; ret
0x00000200001e0dd1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000200000d6587 : add byte ptr [rax], al ; add byte ptr [rbx + 0x694c2451], cl ; ret 0x170
0x0000020000095de0 : add byte ptr [rax], al ; add byte ptr [rbx + 0xfca3ac1], cl ; ret 0x8ac3
0x000002000005500d : add byte ptr [rax], al ; add byte ptr [rbx + 4], dh ; mov qword ptr [r8], rax ; ret
0x000002000015c824 : add byte ptr [rax], al ; add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x0000020000721f60 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x1d], al ; push rdx ; ret 0x48ff
0x00000200003925cb : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x3d], cl ; ret
0x000002000005d9d4 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x41], cl ; and byte ptr [rax - 1], cl ; ret 0x3b4c
0x00000200004a5ddb : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x000002000050cc91 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], cl ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003d323f : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x52], al ; xor byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000053cd17 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x61], cl ; or al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xffb2
0x00000200004abcc5 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xffe2
0x000002000050c4b5 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x3d], cl ; call 0x200001389d5
0x00000200004d7f97 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x40], cl ; call 0x200000ff579
0x00000200000b021c : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x54], cl ; ret 0x508
0x00000200004755ff : add byte ptr [rax], al ; add byte ptr [rbx - 0x13cc1738], cl ; ret
0x00000200004efe31 : add byte ptr [rax], al ; add byte ptr [rbx - 0x1714742d], cl ; ret
0x0000020000021e3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x25], al ; ret 0
0x000002000023d531 : add byte ptr [rax], al ; add byte ptr [rbx - 0x30ffc63e], bl ; ret 0x39
0x00000200001a3fb0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x48f0ba39], cl ; ret 0xc7ff
0x000002000048cbee : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x000002000012b74f : add byte ptr [rax], al ; add byte ptr [rbx - 0x7374b63f], cl ; ret 0xd80
0x000002000072d3ff : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b3fbbf], cl ; ret 0x589
0x00000200006d05d4 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b6c01f], al ; ret 0x3b4d
0x0000020000052b9b : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f83f], al ; ret
0x00000200001e7207 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74baafab], cl ; ret 0x8548
0x000002000063849b : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x00000200000f67fb : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bbecbbd], cl ; ret 0x974
0x000002000014841a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x00000200000a11e0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0
0x000002000050e705 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb60038], al ; ret 0x4d04
0x00000200006d1925 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb70740], al ; ret
0x000002000036fb53 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001de9ba : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x00000200003eb67d : add byte ptr [rax], al ; add byte ptr [rbx - 0x9431402], cl ; ret
0x00000200003b64d3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x0000020000052282 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; enter -0x48f1, 0x45 ; ret 0xc80b
0x000002000021cf50 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x00000200000c70b9 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4789
0x000002000014d903 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8041
0x00000200004ba5fa : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x000002000051205d : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0xd08b
0x0000020000034a9e : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000066a9b6 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8445
0x00000200001a865c : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8966
0x0000020000111346 : add byte ptr [rax], al ; add byte ptr [rbx], al ; shl byte ptr [rsi - 0x77], 0x4d ; ret
0x00000200000fc263 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; fmul dword ptr [rdi] ; ret
0x00000200003c1f59 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200000a4296 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x10ba
0x00000200005affee : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1275
0x000002000001fb7d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x0000020000233e73 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1b72
0x00000200000d9e99 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1d74
0x00000200005b002a : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2a74
0x00000200005e283c : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x4575
0x000002000050f460 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x777
0x00000200003a146d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200004c00d4 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x840f
0x00000200003d686f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x850f
0x0000020000480854 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x000002000003c9d2 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8d0f
0x0000020000112202 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x973
0x00000200001e86ca : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0xa77
0x000002000021a61d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0xc7e
0x00000200000ae611 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200002134c8 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x0000020000020ef5 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret
0x00000200002025dd : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200000ca9ab : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x3b41
0x0000020000138b4b : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4389
0x000002000047d24e : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x448b
0x00000200001d8851 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x00000200004534ec : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xbee9
0x000002000020c2ef : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xc803
0x0000020000061a85 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xd08b
0x00000200005dd1a0 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf803
0x00000200000b769f : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf883
0x00000200000d93aa : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4b89
0x0000020000485055 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x00000200001e7c07 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; ret 0x11b0
0x0000020000613468 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x2b] ; ret
0x00000200004642ef : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x3b] ; ret
0x000002000066aae0 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x000002000045a591 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x00000200001bd699 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000061d5dc : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000025569 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal al, 0xf ; mov cl, 0x1d ; ret 0x288f
0x0000020000147ec6 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000062eacc : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr al, cl ; ret 0xc042
0x00000200003ac130 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], al ; ret
0x000002000064697f : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], al ; ret 0x4589
0x000002000005a4cb : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], al ; ret 0xebd3
0x00000200000ad565 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200000f67b1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x348
0x00000200001e9789 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x3b48
0x000002000018e9b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0xba49
0x000002000045bae2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x0000020000162bb4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x00000200001786cc : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x8b44
0x0000020000186eeb : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200003ec5b1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200001e66cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x33], cl ; ret 0xb841
0x00000200006e9209 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x473
0x00000200005e1f4e : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x00000200003f302a : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x55e9
0x00000200000717f0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200000928b1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x6574
0x000002000017bc6f : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000d37cf : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x000002000036946d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x21], 0xf6 ; ret 0x7504
0x00000200001a87dd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4589c745], cl ; ret
0x00000200006fe8fb : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbp ; ret
0x0000020000294229 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dd203 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000091e21 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x00000200001287e9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x000002000004414f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200005be4d5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x000002000005e3ff : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000116b15 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000038c78c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000097f2a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000eaab6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; ret
0x000002000062413e : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000036f5b8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000200002312e6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200001e9a88 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004ed0cb : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000878db : add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret
0x000002000058f370 : add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x00000200003d639e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret
0x000002000017e4ea : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x4489
0x00000200000ed787 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000020000033964 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8948
0x000002000003e086 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x00000200006119ef : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x00000200004e1564 : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x00000200000aadf9 : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x00000200005a68f9 : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000005c90a : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000009f7ac : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x000002000009f752 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x8b49
0x000002000021992b : add byte ptr [rax], al ; add byte ptr [rcx - 0x17dfdbbc], cl ; int1 ; ret 0
0x00000200006e9683 : add byte ptr [rax], al ; add byte ptr [rcx - 0x2f], al ; ret 0x68e9
0x0000020000039d0f : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x0000020000257fbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x3e], cl ; or al, 0 ; ret
0x00000200006e962b : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xe904
0x00000200006e97d2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xeb07
0x00000200000a7230 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200003b841b : add byte ptr [rax], al ; add byte ptr [rcx - 0x49f0b3b8], cl ; ret 0xe8d1
0x000002000023789f : add byte ptr [rax], al ; add byte ptr [rcx - 0x4f], al ; add dword ptr [rdx], ecx ; ret
0x00000200002092ac : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x00000200004b43f9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; pop rsi ; adc esi, esi ; ret 0xf04
0x00000200006efd04 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; push rcx ; adc cl, byte ptr [rax - 1] ; ret
0x00000200006034ef : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x0000020000372c82 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add qword ptr [r13 + 0x2b], rcx ; ret
0x0000020000127211 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b758bb], cl ; ret
0x000002000046805e : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b778bb], cl ; ret
0x0000020000468bf3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b7dfb5], cl ; ret
0x000002000021651d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x0000020000382fb8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; fdivr st(7), st(0) ; sal esi, cl ; ret
0x0000020000086213 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001d03f0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x348
0x00000200006cb1c3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3bb
0x0000020000672fcb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x587
0x0000020000611f04 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x00000200005b15fb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000021e20a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000045dced : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200004a12bc : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x950f
0x00000200006d0a06 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200006ddb50 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbc49
0x00000200006dacf4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbe49
0x00000200006d6f0f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbf48
0x00000200000f1b9b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x00000200000f0d8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd233
0x000002000008dfed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200006548e0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd366
0x00000200001a0124 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd62b
0x0000020000217981 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe2d3
0x00000200004accc9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000045bd58 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xffb9
0x00000200000d703c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x000002000043795c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; salc ; call 0x20000063ac9
0x000002000008f436 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; salc ; call rax
0x000002000008f1b8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200005d22b6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; and byte ptr [rcx - 0x75], al ; ret 0x8d48
0x000002000061703b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x000002000059e457 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200005333be : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; leave ; call 0x2000015d889
0x00000200005139ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; ret 0x4818
0x0000020000046728 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006d6792 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200001279b4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8a44
0x00000200000e1b70 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x00000200001eb630 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200000523e5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001282fe : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xf6b9
0x0000020000415818 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; stc ; call 0x20000401a5c
0x00000200000ef54f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75c7dbac], cl ; ret 0xeac1
0x000002000014c94e : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x000002000054c7d8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; add al, 0x24 ; jmp 0x200003d8aaa
0x00000200004ba568 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x00000200001bc63b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x0000020000577102 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; fbstp dword ptr [rbp + rcx - 0xa] ; ret
0x00000200000abb0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200000cb53f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x0000020000195949 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x00000200000ff2c7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200005ea950 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4803
0x0000020000612052 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x000002000004c2ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0xf618
0x00000200000abff9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000142f38 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x0000020000124b88 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000020000184334 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x00000200003ed4e6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4cfe
0x0000020000436e2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7ebeefb8], cl ; ret
0x000002000056b198 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x000002000005f2c3 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000157a13 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000157a2c : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7506
0x00000200000c3058 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7508
0x00000200004b891c : add byte ptr [rax], al ; add byte ptr [rcx - 0xcf60bc], cl ; ret
0x00000200001b4b5a : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200001c68fe : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x000002000005e9aa : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005c2968 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8948
0x00000200000bb914 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0xd348
0x000002000065d140 : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; leave ; jne 0x2000065d132 ; ret
0x00000200006c9ed3 : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret
0x00000200006c9e7f : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret 0x34c
0x00000200000ce2ae : add byte ptr [rax], al ; add byte ptr [rcx - 2], al ; ret 0x8844
0x00000200000f9456 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000200001956c1 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; rol byte ptr [rbp + 0x23], 1 ; ret 0xf6e9
0x00000200000538f9 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; call 0x20049c7c457
0x000002000066f1d3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000454353 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000015e02f : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x0000020000645a36 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; sbb dword ptr [rdi], ecx ; ret 0xd233
0x000002000001fd15 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; jne 0x2000001fcb3 ; ret
0x00000200006e9f4c : add byte ptr [rax], al ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000211b5 : add byte ptr [rax], al ; add byte ptr [rdi + 0x42], al ; ret 0xb1
0x00000200002916e5 : add byte ptr [rax], al ; add byte ptr [rdi + 0x510063c2], dl ; ret 0x63
0x00000200001e1152 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200006282bb : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; ret
0x000002000007e37e : add byte ptr [rax], al ; add byte ptr [rdi + 0x5d], bl ; ret
0x0000020000117d45 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000008dc2b : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000495470 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001281c3 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000003c907 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; ret
0x0000020000028b5c : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001fdcc0 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x000002000008ce2b : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001d6ca6 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x0000020000097701 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x3345
0x000002000010e57c : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x00000200000659bd : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x000002000007ebab : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4588
0x00000200000fd0a8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x00000200001ad362 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4e80
0x00000200000f3801 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x0000020000064594 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x000002000023534d : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200001c02a6 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x0000020000029fb1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret 0x3270
0x0000020000107fb6 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x2490
0x000002000008bfb6 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x2c50
0x00000200003f98c0 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b48
0x00000200001104dd : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], cl ; ret
0x000002000065d2c3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x47], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x000002000012af3a : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x00000200001b74e4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000022610b : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000036f28e : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; rol byte ptr [rcx - 0x75], cl ; ret 0xe0c1
0x00000200001b74c7 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 1] ; ret
0x00000200000642dc : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000001e365 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*2], dl ; ret
0x0000020000020f8d : add byte ptr [rax], al ; add byte ptr [rdi - 0x20], dl ; ret
0x000002000015dc76 : add byte ptr [rax], al ; add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x00000200005f7558 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000876b7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x00000200006cef5d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x000002000015920d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; and al, bl ; ret
0x000002000053eeda : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x57 ; add dh, dh ; ret 0xf10
0x0000020000064972 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x93 ; ret
0x000002000012c4eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov edx, 0x820f0ee0 ; ret 0x864
0x000002000065c375 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret
0x00000200000fcd3b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000002000059acc1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x00000200000f1a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4589
0x0000020000109723 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x789
0x0000020000511f62 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8a44
0x00000200001f09b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc83a
0x00000200000a429d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd233
0x00000200000f89f8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd88a
0x0000020000561e05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test al, ah ; ret
0x0000020000545c25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test esp, eax ; ret 0xffe7
0x00000200004ceb52 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rdi], eax ; ret 0xc
0x00000200001ae7b8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000617532 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200006f51fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc149
0x000002000057f927 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x0000020000042066 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000184da7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000469c0a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x000002000014ac7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d48
0x00000200003ffa4e : add byte ptr [rax], al ; add byte ptr [rdx + 0x1208e801], dh ; ret
0x00000200001f6901 : add byte ptr [rax], al ; add byte ptr [rdx + 0x3a0724c1], cl ; ret 0xa74
0x00000200003ffdc0 : add byte ptr [rax], al ; add byte ptr [rdx + 0xe96e801], dh ; ret
0x0000020000586695 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4 - 2], al ; jmp 0x200004928d8
0x0000020000031a5f : add byte ptr [rax], al ; add byte ptr [rdx + rdi - 0x45], al ; ret
0x0000020000092e65 : add byte ptr [rax], al ; add byte ptr [rdx + rdi - 0x49], al ; ret
0x00000200003f872f : add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 - 0x75], dh ; ret
0x00000200003caf3c : add byte ptr [rax], al ; add byte ptr [rdx - 0x3174b7ff], dh ; call r12
0x0000020000712353 : add byte ptr [rax], al ; add byte ptr [rdx - 0x4c], dh ; ret
0x00000200000917aa : add byte ptr [rax], al ; add byte ptr [rdx - 0x6af0ddbf], cl ; ret 0xc232
0x000002000044f7b4 : add byte ptr [rax], al ; add byte ptr [rdx - 0x77], cl ; ret 0x4218
0x0000020000266845 : add byte ptr [rax], al ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x00000200003704e4 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x0000020000067096 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; lahf ; ret
0x000002000022003e : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x0000020000686c2f : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x3a76
0x00000200000a73b4 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x674
0x00000200003a221b : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x840f
0x0000020000210da3 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x973
0x00000200000950f3 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xc88b
0x0000020000248251 : add byte ptr [rax], al ; add byte ptr [rdx], ch ; or byte ptr [rax], al ; ret 0x8a2
0x0000020000020d45 : add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0xf854
0x000002000001e27d : add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x0000020000512fbf : add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x00000200005767a3 : add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x000002000013c482 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x820f
0x0000020000512730 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200006171b4 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x00000200000a2f0c : add byte ptr [rax], al ; add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x0000020000456a43 : add byte ptr [rax], al ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x000002000024b53d : add byte ptr [rax], al ; add byte ptr [rsi - 0x16ffc13d], bh ; ret
0x000002000022a607 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000021d9d : add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x0000020000055b3a : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x0000020000151473 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x300
0x000002000000a33f : add byte ptr [rax], al ; add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x000002000001e2b5 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000020d35 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x00000200002916d9 : add byte ptr [rax], al ; add ch, bh ; shl dword ptr [rbx], 0x23 ; ret 0x63
0x000002000023b96d : add byte ptr [rax], al ; add ch, ch ; ret
0x0000020000173a14 : add byte ptr [rax], al ; add ch, cl ; ret
0x000002000053410c : add byte ptr [rax], al ; add ch, cl ; sbb cl, byte ptr [rdx - 0x1b] ; push rsi ; ret
0x00000200001aac4b : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret 0xf49
0x0000020000569709 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x0000020000726faa : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rcx - 0x75], ecx ; ret 0x2b48
0x00000200001b8204 : add byte ptr [rax], al ; add ch, cl ; sub esi, esi ; ret
0x000002000049e3ae : add byte ptr [rax], al ; add cl, al ; call 0x1ffc3d527ca
0x0000020000617b79 : add byte ptr [rax], al ; add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x0000020000515641 : add byte ptr [rax], al ; add cl, al ; loop 0x2000051565f ; call 0x2000013b959
0x0000020000188e5b : add byte ptr [rax], al ; add cl, byte ptr [rax + 9] ; sub r9b, bpl ; ret
0x00000200000889f6 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret
0x0000020000182c9a : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x840f
0x000002000039300d : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x00000200001f2350 : add byte ptr [rax], al ; add cl, byte ptr [rcx + 0xb] ; ret 0xb48
0x000002000014e176 : add byte ptr [rax], al ; add cl, ch ; add ah, ah ; add byte ptr [rax], al ; ret
0x000002000014e576 : add byte ptr [rax], al ; add cl, ch ; add ah, al ; add byte ptr [rax], al ; ret
0x000002000014de76 : add byte ptr [rax], al ; add cl, ch ; add ah, bh ; add byte ptr [rax], al ; ret
0x000002000014e276 : add byte ptr [rax], al ; add cl, ch ; add ah, bl ; add byte ptr [rax], al ; ret
0x000002000014e076 : add byte ptr [rax], al ; add cl, ch ; add ah, ch ; add byte ptr [rax], al ; ret
0x000002000014e476 : add byte ptr [rax], al ; add cl, ch ; add ah, cl ; add byte ptr [rax], al ; ret
0x000002000014df76 : add byte ptr [rax], al ; add cl, ch ; add ah, dh ; add byte ptr [rax], al ; ret
0x000002000014e376 : add byte ptr [rax], al ; add cl, ch ; add ah, dl ; add byte ptr [rax], al ; ret
0x000002000014e976 : add byte ptr [rax], al ; add cl, ch ; add bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed76 : add byte ptr [rax], al ; add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x000002000014e676 : add byte ptr [rax], al ; add cl, ch ; add bl, bh ; add byte ptr [rax], al ; ret
0x000002000014ea76 : add byte ptr [rax], al ; add cl, ch ; add bl, bl ; add byte ptr [rax], al ; ret
0x000002000014e876 : add byte ptr [rax], al ; add cl, ch ; add bl, ch ; add byte ptr [rax], al ; ret
0x000002000014ec76 : add byte ptr [rax], al ; add cl, ch ; add bl, cl ; add byte ptr [rax], al ; ret
0x000002000014e776 : add byte ptr [rax], al ; add cl, ch ; add bl, dh ; add byte ptr [rax], al ; ret
0x000002000014eb76 : add byte ptr [rax], al ; add cl, ch ; add bl, dl ; add byte ptr [rax], al ; ret
0x000002000014dd76 : add byte ptr [rax], al ; add cl, ch ; add ch, al ; add byte ptr [rax], al ; ret
0x000002000014da76 : add byte ptr [rax], al ; add cl, ch ; add ch, bl ; add byte ptr [rax], al ; ret
0x000002000014dc76 : add byte ptr [rax], al ; add cl, ch ; add ch, cl ; add byte ptr [rax], al ; ret
0x000002000014db76 : add byte ptr [rax], al ; add cl, ch ; add ch, dl ; add byte ptr [rax], al ; ret
0x000002000014f976 : add byte ptr [rax], al ; add cl, ch ; add cl, ah ; add byte ptr [rax], al ; ret
0x000002000014f676 : add byte ptr [rax], al ; add cl, ch ; add cl, bh ; add byte ptr [rax], al ; ret
0x000002000014f876 : add byte ptr [rax], al ; add cl, ch ; add cl, ch ; add byte ptr [rax], al ; ret
0x000002000014f776 : add byte ptr [rax], al ; add cl, ch ; add cl, dh ; add byte ptr [rax], al ; ret
0x000002000014f176 : add byte ptr [rax], al ; add cl, ch ; add dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f576 : add byte ptr [rax], al ; add cl, ch ; add dl, al ; add byte ptr [rax], al ; ret
0x000002000014ee76 : add byte ptr [rax], al ; add cl, ch ; add dl, bh ; add byte ptr [rax], al ; ret
0x000002000014f276 : add byte ptr [rax], al ; add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x000002000014f076 : add byte ptr [rax], al ; add cl, ch ; add dl, ch ; add byte ptr [rax], al ; ret
0x000002000014f476 : add byte ptr [rax], al ; add cl, ch ; add dl, cl ; add byte ptr [rax], al ; ret
0x000002000014ef76 : add byte ptr [rax], al ; add cl, ch ; add dl, dh ; add byte ptr [rax], al ; ret
0x000002000014f376 : add byte ptr [rax], al ; add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x000002000014e156 : add byte ptr [rax], al ; add cl, ch ; and ah, ah ; add byte ptr [rax], al ; ret
0x000002000014e556 : add byte ptr [rax], al ; add cl, ch ; and ah, al ; add byte ptr [rax], al ; ret
0x000002000014de56 : add byte ptr [rax], al ; add cl, ch ; and ah, bh ; add byte ptr [rax], al ; ret
0x000002000014e256 : add byte ptr [rax], al ; add cl, ch ; and ah, bl ; add byte ptr [rax], al ; ret
0x000002000014e056 : add byte ptr [rax], al ; add cl, ch ; and ah, ch ; add byte ptr [rax], al ; ret
0x000002000014e456 : add byte ptr [rax], al ; add cl, ch ; and ah, cl ; add byte ptr [rax], al ; ret
0x000002000014df56 : add byte ptr [rax], al ; add cl, ch ; and ah, dh ; add byte ptr [rax], al ; ret
0x000002000014e356 : add byte ptr [rax], al ; add cl, ch ; and ah, dl ; add byte ptr [rax], al ; ret
0x000002000014e956 : add byte ptr [rax], al ; add cl, ch ; and bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed56 : add byte ptr [rax], al ; add cl, ch ; and bl, al ; add byte ptr [rax], al ; ret
0x000002000014e656 : add byte ptr [rax], al ; add cl, ch ; and bl, bh ; add byte ptr [rax], al ; ret
0x000002000014ea56 : add byte ptr [rax], al ; add cl, ch ; and bl, bl ; add byte ptr [rax], al ; ret
0x000002000014e856 : add byte ptr [rax], al ; add cl, ch ; and bl, ch ; add byte ptr [rax], al ; ret
0x000002000014ec56 : add byte ptr [rax], al ; add cl, ch ; and bl, cl ; add byte ptr [rax], al ; ret
0x000002000014e756 : add byte ptr [rax], al ; add cl, ch ; and bl, dh ; add byte ptr [rax], al ; ret
0x000002000014eb56 : add byte ptr [rax], al ; add cl, ch ; and bl, dl ; add byte ptr [rax], al ; ret
0x000002000014dd56 : add byte ptr [rax], al ; add cl, ch ; and ch, al ; add byte ptr [rax], al ; ret
0x000002000014da56 : add byte ptr [rax], al ; add cl, ch ; and ch, bl ; add byte ptr [rax], al ; ret
0x000002000014dc56 : add byte ptr [rax], al ; add cl, ch ; and ch, cl ; add byte ptr [rax], al ; ret
0x000002000014db56 : add byte ptr [rax], al ; add cl, ch ; and ch, dl ; add byte ptr [rax], al ; ret
0x000002000014f956 : add byte ptr [rax], al ; add cl, ch ; and cl, ah ; add byte ptr [rax], al ; ret
0x000002000014f656 : add byte ptr [rax], al ; add cl, ch ; and cl, bh ; add byte ptr [rax], al ; ret
0x000002000014f856 : add byte ptr [rax], al ; add cl, ch ; and cl, ch ; add byte ptr [rax], al ; ret
0x000002000014f756 : add byte ptr [rax], al ; add cl, ch ; and cl, dh ; add byte ptr [rax], al ; ret
0x000002000014f156 : add byte ptr [rax], al ; add cl, ch ; and dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f556 : add byte ptr [rax], al ; add cl, ch ; and dl, al ; add byte ptr [rax], al ; ret
0x000002000014ee56 : add byte ptr [rax], al ; add cl, ch ; and dl, bh ; add byte ptr [rax], al ; ret
0x000002000014f256 : add byte ptr [rax], al ; add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x000002000014f056 : add byte ptr [rax], al ; add cl, ch ; and dl, ch ; add byte ptr [rax], al ; ret
0x000002000014f456 : add byte ptr [rax], al ; add cl, ch ; and dl, cl ; add byte ptr [rax], al ; ret
0x000002000014ef56 : add byte ptr [rax], al ; add cl, ch ; and dl, dh ; add byte ptr [rax], al ; ret
0x000002000014f356 : add byte ptr [rax], al ; add cl, ch ; and dl, dl ; add byte ptr [rax], al ; ret
0x000002000059b3c6 : add byte ptr [rax], al ; add cl, ch ; and eax, 0xf6fff353 ; ret 0x7420
0x000002000016a700 : add byte ptr [rax], al ; add cl, ch ; call rsi
0x000002000056a014 : add byte ptr [rax], al ; add cl, ch ; hlt ; cdq ; in al, dx ; push rsi ; ret
0x0000020000588bd3 : add byte ptr [rax], al ; add cl, ch ; jmp 0x20000588baf
0x000002000014da96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014da8e ; add byte ptr [rax], al ; ret
0x000002000014db96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014db8d ; add byte ptr [rax], al ; ret
0x000002000014dc96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014dc8c ; add byte ptr [rax], al ; ret
0x000002000014dd96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014dd8b ; add byte ptr [rax], al ; ret
0x000002000014de96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014de8a ; add byte ptr [rax], al ; ret
0x000002000014df96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014df89 ; add byte ptr [rax], al ; ret
0x000002000014e096 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e088 ; add byte ptr [rax], al ; ret
0x000002000014e196 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e187 ; add byte ptr [rax], al ; ret
0x000002000014e296 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e286 ; add byte ptr [rax], al ; ret
0x000002000014e295 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e287 ; add byte ptr [rax], al ; ret
0x000002000014e396 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e385 ; add byte ptr [rax], al ; ret
0x000002000014e395 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e386 ; add byte ptr [rax], al ; ret
0x000002000014e496 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e484 ; add byte ptr [rax], al ; ret
0x000002000014e596 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e583 ; add byte ptr [rax], al ; ret
0x000002000014e696 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e682 ; add byte ptr [rax], al ; ret
0x000002000014e796 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e781 ; add byte ptr [rax], al ; ret
0x000002000014e896 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e880 ; add byte ptr [rax], al ; ret
0x000002000014e996 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e97f ; add byte ptr [rax], al ; ret
0x000002000014ea96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ea7e ; add byte ptr [rax], al ; ret
0x000002000014eb96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014eb7d ; add byte ptr [rax], al ; ret
0x000002000014ec96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ec7c ; add byte ptr [rax], al ; ret
0x000002000014ed96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ed7b ; add byte ptr [rax], al ; ret
0x000002000014ee96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ee7a ; add byte ptr [rax], al ; ret
0x000002000014ef96 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ef79 ; add byte ptr [rax], al ; ret
0x000002000014f096 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f078 ; add byte ptr [rax], al ; ret
0x000002000014f196 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f177 ; add byte ptr [rax], al ; ret
0x000002000014f296 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f276 ; add byte ptr [rax], al ; ret
0x000002000014f396 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f375 ; add byte ptr [rax], al ; ret
0x000002000014f496 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f474 ; add byte ptr [rax], al ; ret
0x000002000014f596 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f573 ; add byte ptr [rax], al ; ret
0x000002000014f696 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f672 ; add byte ptr [rax], al ; ret
0x000002000014f796 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f771 ; add byte ptr [rax], al ; ret
0x000002000014f896 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f870 ; add byte ptr [rax], al ; ret
0x000002000014f895 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f871 ; add byte ptr [rax], al ; ret
0x000002000014f996 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f96f ; add byte ptr [rax], al ; ret
0x000002000048bab4 : add byte ptr [rax], al ; add cl, ch ; push -0x74000002 ; ret
0x000002000003f5cd : add byte ptr [rax], al ; add cl, ch ; ret
0x000002000014f9b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcb
0x000002000014f8b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcc
0x000002000014f7b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcd
0x000002000014f6b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xce
0x000002000014f5b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcf
0x000002000014f4b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd0
0x000002000014f3b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd1
0x000002000014f2b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd2
0x000002000014f1b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd3
0x000002000014f0b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd4
0x000002000014efb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd5
0x000002000014eeb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd6
0x000002000014edb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd7
0x000002000014ecb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd8
0x000002000014ebb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd9
0x000002000014eab6 : add byte ptr [rax], al ; add cl, ch ; ret 0xda
0x000002000014e9b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdb
0x000002000014e8b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdc
0x000002000014e7b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdd
0x000002000014e6b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xde
0x000002000014e5b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdf
0x000002000014e4b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe0
0x000002000014e3b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe1
0x000002000014e2b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe2
0x000002000014e1b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe3
0x000002000014e0b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe4
0x000002000014dfb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe5
0x000002000014deb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe6
0x000002000014ddb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe7
0x000002000014dcb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe8
0x000002000014dbb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xe9
0x000002000014dab6 : add byte ptr [rax], al ; add cl, ch ; ret 0xea
0x000002000016b1db : add byte ptr [rax], al ; add cl, ch ; ret 0xece9
0x000002000056f361 : add byte ptr [rax], al ; add cl, ch ; ret 0xed23
0x0000020000170950 : add byte ptr [rax], al ; add cl, ch ; ret 0xee1c
0x0000020000722b1e : add byte ptr [rax], al ; add cl, ch ; ret 0xfd78
0x000002000038572d : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000002000040b581 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000020000419c55 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000020000180f5d : add byte ptr [rax], al ; add cl, ch ; ror dword ptr [rax], -0x10 ; jmp qword ptr [rcx]
0x000002000014ef36 : add byte ptr [rax], al ; add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000023d521 : add byte ptr [rax], al ; add cl, ch ; sar byte ptr [rcx], 0 ; xchg eax, edx ; ret 0x39
0x0000020000585ee1 : add byte ptr [rax], al ; add cl, ch ; sti ; ret 0xfff0
0x0000020000196896 : add byte ptr [rax], al ; add cl, ch ; test eax, 0xfffff37d ; ret
0x000002000056ec14 : add byte ptr [rax], al ; add cl, ch ; xchg eax, esi ; sbb ch, ch ; push rsi ; ret
0x000002000014ee36 : add byte ptr [rax], al ; add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x000002000001fcfd : add byte ptr [rax], al ; add cl, cl ; ret 0x21d1
0x00000200004146a1 : add byte ptr [rax], al ; add dh, bh ; ret
0x000002000003a69e : add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001ab978 : add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000462d94 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000002000010619b : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200000b88d7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200001952fb : add byte ptr [rax], al ; add dh, dh ; ret 0x7520
0x00000200000fb19f : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000002000005be67 : add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200000f3ca1 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x00000200000ebd6f : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000200000bf5b8 : add byte ptr [rax], al ; add dh, dh ; ret 0xf1f
0x0000020000077e67 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000020000618fd9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000002000015923d : add byte ptr [rax], al ; add dl, bh ; ret
0x000002000025ea5d : add byte ptr [rax], al ; add dl, ch ; adc eax, dword ptr [rdi] ; ret 0x4714
0x000002000005c994 : add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x000002000004f906 : add byte ptr [rax], al ; add dword ptr [rax + rbp - 0xa], esi ; ret
0x000002000012d0f9 : add byte ptr [rax], al ; add dword ptr [rax + rdx - 0x7b], esi ; ret 0x875
0x0000020000125323 : add byte ptr [rax], al ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000015e0d4 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000520376 : add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x00000200005e76a4 : add byte ptr [rax], al ; add dword ptr [rax], eax ; xor esi, esi ; call 0x200004d395c
0x000002000015ceb3 : add byte ptr [rax], al ; add dword ptr [rbp + rax - 0x18], esi ; ret
0x00000200000a8451 : add byte ptr [rax], al ; add dword ptr [rcx - 0x7b], eax ; ret
0x000002000042603a : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; test esi, esp ; call qword ptr [rbx]
0x00000200001b2f85 : add byte ptr [rax], al ; add eax, 0x79e6e800 ; stc ; jmp qword ptr [rcx]
0x000002000065f286 : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000209f84 : add byte ptr [rax], al ; add eax, dword ptr [rsi] ; je 0x20000209f95 ; xor al, al ; ret
0x000002000013f53e : add byte ptr [rax], al ; add eax, dword ptr [rsi] ; setbe al ; ret
0x00000200007083c1 : add byte ptr [rax], al ; add eax, ebp ; ret
0x00000200000e5456 : add byte ptr [rax], al ; add eax, ebp ; ret 0xf65c
0x000002000001ef76 : add byte ptr [rax], al ; add esp, dword ptr [rcx] ; ret
0x000002000015df1f : add byte ptr [rax], al ; add rax, 0x40 ; ret
0x000002000037d21f : add byte ptr [rax], al ; add rax, 0x600 ; ret
0x00000200007195e8 : add byte ptr [rax], al ; add rax, 0x8b8 ; ret
0x00000200003e3e35 : add byte ptr [rax], al ; add rax, 0xd00 ; ret
0x0000020000520192 : add byte ptr [rax], al ; add rax, rdx ; ret
0x00000200006cef83 : add byte ptr [rax], al ; add rax, rdx ; sub rsp, 0x28 ; call rax
0x00000200006f420b : add byte ptr [rax], al ; add rdi, rbx ; mov r13d, ebx ; jmp 0x200006f41eb
0x000002000009637c : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000002000015d874 : add byte ptr [rax], al ; add rsp, 0x1a8 ; ret
0x0000020000673fe5 : add byte ptr [rax], al ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000161cdc : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000026f83 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013bc63 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000027bf3 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000161dcc : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000027e04 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000588d9 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000093be6 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000161cab : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000013da3d : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000013978c : add byte ptr [rax], al ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000f940d : add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000161a2d : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000f52cf : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004c7b80 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000020f166 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; ret
0x00000200000b4999 : add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200005011b4 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200004c03c1 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000b6996 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012faea : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000064d55 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000002c3ec : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000013f7fc : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000481765 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x00000200002032e5 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d5d6b : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x000002000072a696 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rsi ; ret
0x000002000051a91b : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000002000002c2ea : add byte ptr [rax], al ; add rsp, 0x88 ; ret
0x0000020000366e28 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000002000045e0c8 : add byte ptr [rax], al ; add word ptr [rcx + 0xa], dx ; ret
0x00000200001d8a4b : add byte ptr [rax], al ; add word ptr [rip + 0xcca14], ax ; ret
0x0000020000645f15 : add byte ptr [rax], al ; and al, 0xe8 ; ret
0x000002000010373c : add byte ptr [rax], al ; and al, 1 ; ret
0x000002000024b576 : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; ret
0x00000200002788ba : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret 0x68
0x000002000023eaca : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rsp ; ret
0x000002000026f2d2 : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000027a9ae : add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000002000005006f : add byte ptr [rax], al ; and al, ch ; or eax, 0xf6001957 ; ret
0x0000020000034e97 : add byte ptr [rax], al ; and byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], al ; ret
0x000002000015e17d : add byte ptr [rax], al ; and dword ptr [rip + 0x1511b2], 0 ; ret
0x0000020000107bb6 : add byte ptr [rax], al ; and eax, 0x10001 ; ret
0x00000200002108f6 : add byte ptr [rax], al ; and eax, 1 ; ret
0x0000020000102690 : add byte ptr [rax], al ; and eax, r8d ; shr eax, 0xe ; ret
0x00000200004df19f : add byte ptr [rax], al ; and r14, rdi ; call 0x20000109f80
0x00000200001bb615 : add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x00000200005c6d57 : add byte ptr [rax], al ; call 0x20000032fc4
0x00000200002194df : add byte ptr [rax], al ; call 0x20000058408
0x000002000043b194 : add byte ptr [rax], al ; call 0x20000063dd9
0x000002000043b105 : add byte ptr [rax], al ; call 0x2000006a615
0x0000020000176040 : add byte ptr [rax], al ; call 0x20000072298
0x000002000044431e : add byte ptr [rax], al ; call 0x20000072299
0x0000020000453223 : add byte ptr [rax], al ; call 0x20000074989
0x00000200004dbd07 : add byte ptr [rax], al ; call 0x20000082478
0x00000200001f0928 : add byte ptr [rax], al ; call 0x2000008cc18
0x00000200001911e6 : add byte ptr [rax], al ; call 0x2000009d46c
0x000002000046f3e6 : add byte ptr [rax], al ; call 0x2000009d46d
0x000002000047d887 : add byte ptr [rax], al ; call 0x200000a8725
0x00000200001c36cd : add byte ptr [rax], al ; call 0x200000af90c
0x00000200001293b0 : add byte ptr [rax], al ; call 0x200000b00f9
0x0000020000558b9b : add byte ptr [rax], al ; call 0x200000b4de4
0x000002000049465c : add byte ptr [rax], al ; call 0x200000b4de5
0x00000200004da89c : add byte ptr [rax], al ; call 0x200000b6ab0
0x00000200001ec04b : add byte ptr [rax], al ; call 0x200000c94e1
0x00000200004ac660 : add byte ptr [rax], al ; call 0x200000d28dd
0x00000200004bca69 : add byte ptr [rax], al ; call 0x200000e1c0d
0x00000200004b7265 : add byte ptr [rax], al ; call 0x200000e1f21
0x000002000047abb2 : add byte ptr [rax], al ; call 0x200000e6de8
0x000002000049abef : add byte ptr [rax], al ; call 0x200000f6264
0x00000200004cd19b : add byte ptr [rax], al ; call 0x200000f6f15
0x00000200003a7b80 : add byte ptr [rax], al ; call 0x200000fe18c
0x00000200004d7c53 : add byte ptr [rax], al ; call 0x200000ff575
0x00000200004dc9ee : add byte ptr [rax], al ; call 0x200000ff629
0x000002000037c268 : add byte ptr [rax], al ; call 0x20000108514
0x000002000050d819 : add byte ptr [rax], al ; call 0x20000138f11
0x000002000050dd5d : add byte ptr [rax], al ; call 0x200001396bd
0x0000020000513d65 : add byte ptr [rax], al ; call 0x2000013acc5
0x00000200001d107a : add byte ptr [rax], al ; call 0x2000013d145
0x0000020000164156 : add byte ptr [rax], al ; call 0x20000140424
0x00000200005118d3 : add byte ptr [rax], al ; call 0x20000141175
0x0000020000516831 : add byte ptr [rax], al ; call 0x20000141245
0x00000200006890db : add byte ptr [rax], al ; call 0x2000014534c
0x00000200004819b2 : add byte ptr [rax], al ; call 0x2000014dc04
0x000002000051e242 : add byte ptr [rax], al ; call 0x2000014dc65
0x0000020000501ad2 : add byte ptr [rax], al ; call 0x2000014dd04
0x000002000051ec32 : add byte ptr [rax], al ; call 0x2000014dd05
0x0000020000501dc1 : add byte ptr [rax], al ; call 0x2000014e064
0x0000020000194e69 : add byte ptr [rax], al ; call 0x200001510a4
0x00000200001bc158 : add byte ptr [rax], al ; call 0x20000158374
0x00000200005c85e8 : add byte ptr [rax], al ; call 0x2000015d888
0x00000200004a1961 : add byte ptr [rax], al ; call 0x2000015dbc4
0x000002000061bdda : add byte ptr [rax], al ; call 0x2000015dbc6
0x0000020000596519 : add byte ptr [rax], al ; call 0x200001c09e5
0x00000200001cbfae : add byte ptr [rax], al ; call 0x200001cbe3c
0x00000200005b5a92 : add byte ptr [rax], al ; call 0x200001e4e69
0x00000200005d9179 : add byte ptr [rax], al ; call 0x20000208ac1
0x000002000066f9f3 : add byte ptr [rax], al ; call 0x2000022bc5c
0x0000020000137d34 : add byte ptr [rax], al ; call 0x20000294004
0x000002000067172f : add byte ptr [rax], al ; call 0x20000294005
0x0000020000168b84 : add byte ptr [rax], al ; call 0x20000294e24
0x000002000037952b : add byte ptr [rax], al ; call 0x200003794bd
0x00000200003e95a0 : add byte ptr [rax], al ; call 0x200003e584c
0x000002000054edec : add byte ptr [rax], al ; call 0x2000047b080
0x00000200007258b9 : add byte ptr [rax], al ; call 0x20000631b64
0x000002000066e94b : add byte ptr [rax], al ; call 0x2000066ac34
0x000002000036bb76 : add byte ptr [rax], al ; call qword ptr [r14]
0x00000200004d9a07 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000020000588c27 : add byte ptr [rax], al ; call qword ptr [rip + 0xcc201]
0x000002000001e2b6 : add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x000002000015c8ae : add byte ptr [rax], al ; call r10
0x00000200006e97ff : add byte ptr [rax], al ; call r11
0x00000200004003ce : add byte ptr [rax], al ; call r12
0x0000020000114d75 : add byte ptr [rax], al ; call r14
0x000002000050ab00 : add byte ptr [rax], al ; call r15
0x00000200001c679a : add byte ptr [rax], al ; call r8
0x00000200001c592c : add byte ptr [rax], al ; call r9
0x0000020000086a86 : add byte ptr [rax], al ; call rax
0x00000200006d4b4b : add byte ptr [rax], al ; call rbx
0x0000020000668565 : add byte ptr [rax], al ; call rcx
0x000002000012fac7 : add byte ptr [rax], al ; call rdi
0x000002000040ac2c : add byte ptr [rax], al ; call rsi
0x000002000002267e : add byte ptr [rax], al ; cdq ; ret
0x0000020000222bbe : add byte ptr [rax], al ; clc ; jg 0x20000222bfb ; ret 0xd233
0x000002000024b57a : add byte ptr [rax], al ; clc ; ret
0x0000020000272876 : add byte ptr [rax], al ; clc ; ret 0x4d
0x0000020000020856 : add byte ptr [rax], al ; clc ; sysenter
0x000002000012ed27 : add byte ptr [rax], al ; cld ; ret
0x000002000025386a : add byte ptr [rax], al ; cld ; rol dword ptr [rdx], -0x15 ; ret
0x000002000015923e : add byte ptr [rax], al ; cli ; ret
0x00000200000fc647 : add byte ptr [rax], al ; cmove eax, r8d ; ret
0x00000200004a93d8 : add byte ptr [rax], al ; cmovne r8d, edx ; jmp 0x200004a939f
0x000002000061cbfa : add byte ptr [rax], al ; cmp al, 1 ; jne 0x2000061cc0f ; movzx eax, r10w ; jmp 0x2000061cc80
0x00000200003787f4 : add byte ptr [rax], al ; cmp cl, 0xf ; cmovne eax, edx ; ret
0x000002000020a064 : add byte ptr [rax], al ; cmp cx, ax ; jae 0x2000020a077 ; xor al, al ; ret
0x00000200002714b6 : add byte ptr [rax], al ; cmp dl, 0x11 ; add byte ptr [rbx], dh ; call qword ptr [rcx]
0x000002000007791a : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200005cee36 : add byte ptr [rax], al ; cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x00000200004c380a : add byte ptr [rax], al ; cmp eax, r8d ; jne 0x200004c37ff ; xor eax, eax ; ret
0x00000200000e1ea0 : add byte ptr [rax], al ; cmp ecx, 0x12 ; jae 0x200000e1eb3 ; mov al, 1 ; ret
0x0000020000434657 : add byte ptr [rax], al ; cmp ecx, 4 ; jne 0x2000043466a ; xor eax, eax ; ret
0x000002000011ae98 : add byte ptr [rax], al ; cmp edx, 5 ; cmovne eax, ecx ; ret
0x00000200000bd0d2 : add byte ptr [rax], al ; cmp qword ptr [rax], rax ; jne 0x200000bd0e1 ; ret
0x000002000006ad83 : add byte ptr [rax], al ; cmp qword ptr [rcx], rcx ; jne 0x2000006ad92 ; ret
0x00000200005bca4c : add byte ptr [rax], al ; cmp r10d, ecx ; jae 0x200005bca5f ; mov al, 1 ; ret
0x0000020000635b57 : add byte ptr [rax], al ; cmp r8d, r9d ; jb 0x20000635b26 ; jmp 0x20000635b69
0x000002000038865f : add byte ptr [rax], al ; cmp rax, rcx ; cmovae rax, rdx ; ret
0x00000200004bd26e : add byte ptr [rax], al ; cmp rax, rdx ; setae al ; ret
0x0000020000103760 : add byte ptr [rax], al ; cmp rcx, rax ; jb 0x20000103773 ; xor eax, eax ; ret
0x0000020000159e64 : add byte ptr [rax], al ; cmp rcx, rdx ; jb 0x20000159e27 ; ret
0x000002000004e1b7 : add byte ptr [rax], al ; cmp rdx, rcx ; setbe al ; ret
0x000002000001f7be : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000002000026ddea : add byte ptr [rax], al ; cwde ; call qword ptr [rax]
0x00000200001743f1 : add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200006c9a81 : add byte ptr [rax], al ; dec byte ptr [rax - 0x7d] ; ret
0x00000200000bb9a9 : add byte ptr [rax], al ; dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x00000200002063c7 : add byte ptr [rax], al ; dec dword ptr [rcx - 0x75] ; ret 0x83c7
0x0000020000139038 : add byte ptr [rax], al ; dec eax ; jne 0x20000139045 ; ret
0x000002000065d141 : add byte ptr [rax], al ; dec r9 ; jne 0x2000065d131 ; ret
0x00000200000b1d17 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e4] ; ret
0x00000200000eb737 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e6] ; ret
0x0000020000250842 : add byte ptr [rax], al ; enter 0x40e3, 0 ; ret 0x40e4
0x000002000024b88e : add byte ptr [rax], al ; enter 0x9c1, 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x0000020000273c1a : add byte ptr [rax], al ; fadd st(1), st(0) ; add dl, bl ; ret 0x36
0x000002000025f7aa : add byte ptr [rax], al ; fild qword ptr [rdi + rax*2] ; ret
0x00000200001516ee : add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000151cd6 : add byte ptr [rax], al ; fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x0000020000249b76 : add byte ptr [rax], al ; hlt ; pop rbx ; or dword ptr [rax], eax ; ret
0x0000020000275de6 : add byte ptr [rax], al ; hlt ; ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000027a962 : add byte ptr [rax], al ; hlt ; ror dword ptr [rdi], -0x5d ; ret 0x4f
0x0000020000265a3e : add byte ptr [rax], al ; in al, dx ; or byte ptr [rdx], cl ; ret
0x0000020000253896 : add byte ptr [rax], al ; in al, dx ; ret
0x000002000023b96e : add byte ptr [rax], al ; in eax, dx ; ret
0x0000020000030e17 : add byte ptr [rax], al ; inc dword ptr [rbx + 0x4c] ; call 0x2000003d073
0x00000200002076da : add byte ptr [rax], al ; inc dword ptr [rcx + 0x244] ; ret
0x000002000067ea30 : add byte ptr [rax], al ; inc dword ptr [rdx + 0x8060] ; ret
0x000002000047677d : add byte ptr [rax], al ; inc edx ; jmp 0x20000476768
0x00000200004a13fc : add byte ptr [rax], al ; inc edx ; jmp 0x200004a13dc
0x0000020000598d8e : add byte ptr [rax], al ; inc edx ; jmp 0x20000598d62
0x0000020000486308 : add byte ptr [rax], al ; inc rdx ; jmp 0x200004862e8
0x000002000026b04e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x000002000016d724 : add byte ptr [rax], al ; int 0x29
0x0000020000411a4c : add byte ptr [rax], al ; ja 0x20000411a5b ; mov al, r8b ; ret
0x000002000044c3d4 : add byte ptr [rax], al ; ja 0x20000572f4c ; ret
0x000002000005500e : add byte ptr [rax], al ; jae 0x2000005501d ; mov qword ptr [r8], rax ; ret
0x00000200000c3bb9 : add byte ptr [rax], al ; jae 0x200000c3bc6 ; xor eax, eax ; ret
0x000002000012d4d4 : add byte ptr [rax], al ; jb 0x2000012d49f ; add rsp, 0x38 ; ret
0x00000200001c5760 : add byte ptr [rax], al ; jb 0x200001c5773 ; mov eax, 0xc000000d ; ret
0x00000200001c617d : add byte ptr [rax], al ; jb 0x200001c616c ; xor eax, eax ; ret
0x000002000067aff0 : add byte ptr [rax], al ; jb 0x2000067affd ; xor eax, eax ; ret
0x0000020000712354 : add byte ptr [rax], al ; jb 0x20000712310 ; ret
0x00000200005fc34e : add byte ptr [rax], al ; jbe 0x200005fc33e ; xor eax, eax ; ret
0x00000200000ebc58 : add byte ptr [rax], al ; je 0x200000ebc14 ; mov eax, r10d ; jmp 0x200000ebc14
0x00000200000f3d3b : add byte ptr [rax], al ; je 0x200000f3cdc ; jmp 0x2000019fff7
0x00000200000f587c : add byte ptr [rax], al ; je 0x200000f5873 ; mov eax, 2 ; ret
0x00000200001058ad : add byte ptr [rax], al ; je 0x200001058c0 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000012bad7 : add byte ptr [rax], al ; je 0x2000012bb20 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000008ee6d : add byte ptr [rax], al ; je 0x20000184562 ; ret
0x000002000042afdb : add byte ptr [rax], al ; je 0x2000042afd0 ; mov al, 1 ; ret
0x0000020000439071 : add byte ptr [rax], al ; je 0x20000439081 ; call 0x20000068fd7
0x000002000046f28b : add byte ptr [rax], al ; je 0x2000046f29c ; add rsp, 0x28 ; ret
0x00000200004bfea5 : add byte ptr [rax], al ; je 0x200004bfeb2 ; mov al, 1 ; ret
0x00000200004deb5e : add byte ptr [rax], al ; je 0x200004deb71 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000454adc : add byte ptr [rax], al ; je 0x20000575cfa ; ret
0x000002000065a00b : add byte ptr [rax], al ; je 0x2000065a01a ; xor al, al ; ret
0x00000200006750b1 : add byte ptr [rax], al ; je 0x200006750c4 ; mov eax, 1 ; ret
0x000002000072f03e : add byte ptr [rax], al ; je 0x2000072f053 ; or eax, 0xffffffff ; ret
0x000002000003c908 : add byte ptr [rax], al ; jg 0x2000003c911 ; ret
0x00000200000b41ea : add byte ptr [rax], al ; jg 0x200000b4208 ; mov eax, 1 ; ret
0x00000200000b422f : add byte ptr [rax], al ; jl 0x200000b4242 ; mov eax, 1 ; ret
0x0000020000021d9e : add byte ptr [rax], al ; jle 0x20000021d27 ; ret 0x94
0x0000020000041c21 : add byte ptr [rax], al ; jmp 0x200000415e8
0x000002000004738c : add byte ptr [rax], al ; jmp 0x20000046671
0x000002000004b4e7 : add byte ptr [rax], al ; jmp 0x2000004b235
0x00000200000577cd : add byte ptr [rax], al ; jmp 0x20000056c55
0x0000020000067d12 : add byte ptr [rax], al ; jmp 0x20000067c10
0x000002000006fbb0 : add byte ptr [rax], al ; jmp 0x2000006fb79
0x000002000017f56e : add byte ptr [rax], al ; jmp 0x2000007cc66
0x0000020000180f5e : add byte ptr [rax], al ; jmp 0x2000008182c
0x0000020000087080 : add byte ptr [rax], al ; jmp 0x20000087049
0x00000200000901c2 : add byte ptr [rax], al ; jmp 0x20000090014
0x000002000018a6ea : add byte ptr [rax], al ; jmp 0x200000a69c6
0x00000200000bc87e : add byte ptr [rax], al ; jmp 0x200000bc848
0x00000200000c27a4 : add byte ptr [rax], al ; jmp 0x200000c276d
0x00000200000cba8b : add byte ptr [rax], al ; jmp 0x200000cb09a
0x00000200000cc43d : add byte ptr [rax], al ; jmp 0x200000cbe79
0x00000200000d0c18 : add byte ptr [rax], al ; jmp 0x200000d0c12
0x00000200000d45fb : add byte ptr [rax], al ; jmp 0x200000d45c5
0x00000200000e4724 : add byte ptr [rax], al ; jmp 0x200000e46ee
0x00000200000e8ad6 : add byte ptr [rax], al ; jmp 0x200000e8aa0
0x00000200000ecf9e : add byte ptr [rax], al ; jmp 0x200000ece3a
0x00000200000f2788 : add byte ptr [rax], al ; jmp 0x200000f2752
0x000002000011551a : add byte ptr [rax], al ; jmp 0x200001153f9
0x000002000014130a : add byte ptr [rax], al ; jmp 0x200001412d3
0x0000020000147267 : add byte ptr [rax], al ; jmp 0x200001471ad
0x0000020000150297 : add byte ptr [rax], al ; jmp 0x2000015c584
0x000002000016bc5c : add byte ptr [rax], al ; jmp 0x2000016bcad
0x000002000016bc9c : add byte ptr [rax], al ; jmp 0x2000016bcae
0x000002000016bd89 : add byte ptr [rax], al ; jmp 0x2000016bdd5
0x0000020000177557 : add byte ptr [rax], al ; jmp 0x2000017759f
0x00000200001857bb : add byte ptr [rax], al ; jmp 0x2000018580c
0x00000200001857fb : add byte ptr [rax], al ; jmp 0x2000018580d
0x00000200001cd030 : add byte ptr [rax], al ; jmp 0x200001cd045
0x00000200001d2ff1 : add byte ptr [rax], al ; jmp 0x200001d3006
0x000002000038a08e : add byte ptr [rax], al ; jmp 0x20000389bb4
0x000002000038b871 : add byte ptr [rax], al ; jmp 0x2000038b83b
0x00000200003bbb80 : add byte ptr [rax], al ; jmp 0x200003bba67
0x00000200003d7566 : add byte ptr [rax], al ; jmp 0x200003d7255
0x0000020000554de4 : add byte ptr [rax], al ; jmp 0x200003f1008
0x00000200003fd4c7 : add byte ptr [rax], al ; jmp 0x200003fd490
0x00000200005627b8 : add byte ptr [rax], al ; jmp 0x2000041ea8b
0x000002000056a015 : add byte ptr [rax], al ; jmp 0x20000433a18
0x000002000056ec15 : add byte ptr [rax], al ; jmp 0x200004404ba
0x000002000044ec25 : add byte ptr [rax], al ; jmp 0x2000044ea8a
0x00000200004503cc : add byte ptr [rax], al ; jmp 0x2000044f04c
0x0000020000450946 : add byte ptr [rax], al ; jmp 0x2000045086a
0x0000020000585ee2 : add byte ptr [rax], al ; jmp 0x200004921e8
0x0000020000585ee2 : add byte ptr [rax], al ; jmp 0x200004921ec
0x0000020000588bd4 : add byte ptr [rax], al ; jmp 0x200004959ce
0x000002000049d59f : add byte ptr [rax], al ; jmp 0x2000049d569
0x00000200004a9870 : add byte ptr [rax], al ; jmp 0x200004a983a
0x000002000059045f : add byte ptr [rax], al ; jmp 0x200004ac6e7
0x00000200004af902 : add byte ptr [rax], al ; jmp 0x200004af8e3
0x00000200005137ab : add byte ptr [rax], al ; jmp 0x20000513775
0x000002000053573f : add byte ptr [rax], al ; jmp 0x20000535765
0x00000200005781ba : add byte ptr [rax], al ; jmp 0x2000057821b
0x0000020000579537 : add byte ptr [rax], al ; jmp 0x200005795b7
0x000002000058294c : add byte ptr [rax], al ; jmp 0x20000582960
0x00000200005853e8 : add byte ptr [rax], al ; jmp 0x200005853ff
0x0000020000585909 : add byte ptr [rax], al ; jmp 0x20000585920
0x0000020000585958 : add byte ptr [rax], al ; jmp 0x2000058596f
0x00000200005a061c : add byte ptr [rax], al ; jmp 0x200005a063a
0x00000200006e7e62 : add byte ptr [rax], al ; jmp 0x200006e7ebc
0x00000200006fb03b : add byte ptr [rax], al ; jmp 0x200006fac36
0x000002000070fb15 : add byte ptr [rax], al ; jmp 0x2000070fb10
0x0000020000718bf2 : add byte ptr [rax], al ; jmp 0x20000718be9
0x00000200007244a7 : add byte ptr [rax], al ; jmp 0x20000724465
0x00000200007244c9 : add byte ptr [rax], al ; jmp 0x20000724468
0x00000200001b318a : add byte ptr [rax], al ; jmp qword ptr [rbx]
0x000002000015c5df : add byte ptr [rax], al ; jmp r11
0x00000200006cefa3 : add byte ptr [rax], al ; jmp r8
0x00000200006cf091 : add byte ptr [rax], al ; jmp rax
0x0000020000154930 : add byte ptr [rax], al ; jmp rcx
0x0000020000157e17 : add byte ptr [rax], al ; jmp rdx
0x00000200000217de : add byte ptr [rax], al ; jmp rsi
0x000002000002b558 : add byte ptr [rax], al ; jne 0x2000002b58a ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x0000020000033676 : add byte ptr [rax], al ; jne 0x2000003366f ; mov al, 1 ; ret
0x00000200000728a4 : add byte ptr [rax], al ; jne 0x200000728cc ; mov eax, ecx ; ret
0x00000200000b41f8 : add byte ptr [rax], al ; jne 0x200000b4216 ; xor eax, eax ; ret
0x00000200000b573d : add byte ptr [rax], al ; jne 0x200000b578c ; xor al, al ; ret
0x00000200000b7275 : add byte ptr [rax], al ; jne 0x200000b727e ; ret
0x00000200000c63ff : add byte ptr [rax], al ; jne 0x200000c6408 ; ret
0x00000200000e1865 : add byte ptr [rax], al ; jne 0x200000e186e ; ret
0x00000200000f4521 : add byte ptr [rax], al ; jne 0x200000f452e ; ret
0x0000020000103698 : add byte ptr [rax], al ; jne 0x200001036cb ; ret
0x000002000015c8a8 : add byte ptr [rax], al ; jne 0x2000015cb0f ; call r10
0x0000020000116b34 : add byte ptr [rax], al ; jne 0x200001ab254 ; ret
0x00000200001d29e6 : add byte ptr [rax], al ; jne 0x200001d29f3 ; xor al, al ; ret
0x00000200001e01ad : add byte ptr [rax], al ; jne 0x200001e01bf ; mov eax, 1 ; ret
0x000002000022b0b9 : add byte ptr [rax], al ; jne 0x2000022b0c6 ; xor eax, eax ; ret
0x000002000022b0d5 : add byte ptr [rax], al ; jne 0x2000022b0e2 ; xor eax, eax ; ret
0x000002000022b135 : add byte ptr [rax], al ; jne 0x2000022b142 ; xor eax, eax ; ret
0x00000200003f0ea6 : add byte ptr [rax], al ; jne 0x200003f0e99 ; call 0x200000bd0e6
0x000002000044b888 : add byte ptr [rax], al ; jne 0x2000044b8d3 ; ret
0x0000020000450dff : add byte ptr [rax], al ; jne 0x20000450d9a ; call 0x200000bd0e6
0x000002000049ca97 : add byte ptr [rax], al ; jne 0x2000049ca7b ; call 0x200000bd0e7
0x00000200004a13f6 : add byte ptr [rax], al ; jne 0x200004a1587 ; inc edx ; jmp 0x200004a13e2
0x00000200004aa275 : add byte ptr [rax], al ; jne 0x200004aa29c ; mov eax, r9d ; ret
0x00000200003d9447 : add byte ptr [rax], al ; jne 0x2000054cadc ; ret
0x0000020000590df9 : add byte ptr [rax], al ; jne 0x20000590e08 ; call 0x200000bd0e6
0x00000200005c0dff : add byte ptr [rax], al ; jne 0x200005c0e0e ; call 0x200000bd0e6
0x0000020000248a7a : add byte ptr [rax], al ; js 0x20000248a62 ; or byte ptr [rax], al ; ret
0x00000200001cc657 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000025b3b2 : add byte ptr [rax], al ; lea esi, dword ptr [rbp + rax*2] ; ret
0x000002000015dc77 : add byte ptr [rax], al ; lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x0000020000157a60 : add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200001516ce : add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x000002000047e8ea : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 1] ; call 0x200000a52e9
0x0000020000154929 : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x7f89] ; jmp rcx
0x000002000051c117 : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x20] ; call 0x20000058409
0x00000200005c3b1c : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x48] ; call 0x2000006fe29
0x000002000003622d : add byte ptr [rax], al ; lea rdx, qword ptr [rdi + 0x10] ; call r8
0x00000200004ac15f : add byte ptr [rax], al ; lea rdx, qword ptr [rsp + 0x50] ; call 0x20000158379
0x000002000001fcfe : add byte ptr [rax], al ; leave ; ret 0x21d1
0x0000020000369726 : add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x0000020000129417 : add byte ptr [rax], al ; lock inc dword ptr [rax + 0x200] ; ret
0x000002000023fa5a : add byte ptr [rax], al ; loopne 0x2000023fa77 ; cmp eax, dword ptr [rax] ; ret
0x00000200000222ae : add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x000002000020b0a3 : add byte ptr [rax], al ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036daf1 : add byte ptr [rax], al ; mov al, 1 ; ret
0x0000020000670498 : add byte ptr [rax], al ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b4943 : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x232] ; ret
0x000002000020a123 : add byte ptr [rax], al ; mov al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014c94f : add byte ptr [rax], al ; mov al, r11b ; ret
0x00000200003e0eb8 : add byte ptr [rax], al ; mov bl, al ; call 0x200003ad192
0x000002000015e2ec : add byte ptr [rax], al ; mov byte ptr [rcx + 0x58], 1 ; xor eax, eax ; ret
0x000002000009de97 : add byte ptr [rax], al ; mov byte ptr [rcx + 0x58a], 6 ; ret
0x000002000015e1a3 : add byte ptr [rax], al ; mov byte ptr [rip + 0x14fd45], al ; ret
0x000002000026dd2e : add byte ptr [rax], al ; mov ch, bh ; adc byte ptr [rax], al ; ret
0x0000020000399d4b : add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x0000020000390c60 : add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x00000200003a0ea6 : add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x00000200005915dc : add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x000002000059155f : add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x00000200003a1380 : add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x000002000049d0e7 : add byte ptr [rax], al ; mov cl, 0xa ; call r10
0x00000200003c3981 : add byte ptr [rax], al ; mov cl, 0xb ; call r10
0x0000020000546027 : add byte ptr [rax], al ; mov cl, 0xb ; call rax
0x00000200003991ec : add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200003a3b7f : add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x000002000056724d : add byte ptr [rax], al ; mov cl, 0xf ; call rax
0x000002000067810a : add byte ptr [rax], al ; mov cl, dil ; mov rbx, rax ; call rsi
0x0000020000096043 : add byte ptr [rax], al ; mov cr8, rcx ; mov rcx, rax ; call rdx
0x00000200000967db : add byte ptr [rax], al ; mov cr8, rcx ; ret
0x0000020000021906 : add byte ptr [rax], al ; mov dh, 0x59 ; ret
0x00000200003caf3d : add byte ptr [rax], al ; mov dl, 1 ; mov rcx, rsi ; call r12
0x00000200000af9e9 : add byte ptr [rax], al ; mov dl, r12b ; call qword ptr [rax]
0x000002000054c7d9 : add byte ptr [rax], al ; mov dword ptr [r12], eax ; jmp 0x200003d8aa9
0x000002000012e1e8 : add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x000002000066907c : add byte ptr [rax], al ; mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x00000200005a596a : add byte ptr [rax], al ; mov dword ptr [rbp - 0x61], ebx ; call r15
0x0000020000026de5 : add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005203e2 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200005c978e : add byte ptr [rax], al ; mov dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200000ea957 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000046aca6 : add byte ptr [rax], al ; mov dword ptr [rdi + 0x1c], r15d ; call 0x20000406f2c
0x00000200005fa2dc : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; ret
0x000002000015df54 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000066ec4d : add byte ptr [rax], al ; mov dword ptr [rip + 0x22457], ecx ; ret
0x000002000021992c : add byte ptr [rax], al ; mov dword ptr [rsp + 0x20], eax ; call 0x20000225c30
0x000002000068f0b0 : add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x0000020000094723 : add byte ptr [rax], al ; mov eax, 0xc0000002 ; ret
0x00000200004f4fb3 : add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200004ba403 : add byte ptr [rax], al ; mov eax, 0xc00000e7 ; ret
0x0000020000516d54 : add byte ptr [rax], al ; mov eax, 0xc00000f1 ; ret
0x000002000010439c : add byte ptr [rax], al ; mov eax, 0xc00000f2 ; ret
0x0000020000272856 : add byte ptr [rax], al ; mov eax, 0xf6004dc2 ; ret 0x4d
0x00000200001595e3 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200001f1346 : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x000002000015960b : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x00000200000ea1a2 : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x266f02] ; ret
0x0000020000128122 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022997e : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001416a3 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005f47d5 : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006403e1 : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000095de1 : add byte ptr [rax], al ; mov eax, ecx ; cmp cl, dl ; cmovg eax, edx ; ret
0x00000200001d802d : add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200003775f7 : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d5f34 : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001d5ef2
0x00000200001d6082 : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001d60a1
0x00000200000e05ce : add byte ptr [rax], al ; mov eax, edx ; ret
0x000002000020a397 : add byte ptr [rax], al ; mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000010e0fc : add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000666f4d : add byte ptr [rax], al ; mov eax, r9d ; ret
0x000002000001fd46 : add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x0000020000646bdb : add byte ptr [rax], al ; mov ebx, eax ; jmp 0x20000646c3c
0x000002000023d552 : add byte ptr [rax], al ; mov ebx, es ; cmp dword ptr [rax], eax ; hlt ; ret
0x0000020000194e64 : add byte ptr [rax], al ; mov ecx, 0x1a ; call 0x200001510a9
0x0000020000668493 : add byte ptr [rax], al ; mov ecx, dword ptr [rip - 0x3c65a3] ; call rax
0x00000200001c1599 : add byte ptr [rax], al ; mov ecx, ebx ; call 0x200005cd7ce
0x0000020000402343 : add byte ptr [rax], al ; mov ecx, r8d ; inc edx ; jmp 0x20000402329
0x00000200003eb67e : add byte ptr [rax], al ; mov edi, esi ; jmp 0x200003eb647
0x00000200006cef9e : add byte ptr [rax], al ; mov edx, 1 ; jmp r8
0x000002000043795d : add byte ptr [rax], al ; mov edx, r14d ; call 0x20000063ac8
0x000002000008f437 : add byte ptr [rax], al ; mov edx, r14d ; call rax
0x000002000008f1b9 : add byte ptr [rax], al ; mov edx, r15d ; call rax
0x000002000024b53e : add byte ptr [rax], al ; mov esi, 0xe9003ec3 ; ret
0x000002000027a982 : add byte ptr [rax], al ; mov esp, 0x92004fc2 ; ret
0x000002000025dd9a : add byte ptr [rax], al ; mov esp, 0x9d0046c1 ; ret 0x46
0x00000200001262d3 : add byte ptr [rax], al ; mov qword ptr [r10 + 0x68], rax ; ret
0x000002000010a1ad : add byte ptr [rax], al ; mov qword ptr [r10], r11 ; ret
0x0000020000446fc8 : add byte ptr [rax], al ; mov qword ptr [r11 - 0x38], rax ; call r10
0x0000020000404cf8 : add byte ptr [rax], al ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x00000200001bc63c : add byte ptr [rax], al ; mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x0000020000116943 : add byte ptr [rax], al ; mov qword ptr [r9 + 0x5448], rax ; ret
0x00000200003ecbc0 : add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x0000020000035e7b : add byte ptr [rax], al ; mov qword ptr [rax + 0x668], rcx ; ret
0x00000200000b62e7 : add byte ptr [rax], al ; mov qword ptr [rax + 0x738], rcx ; ret
0x000002000022c499 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x00000200004b30c4 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x400], rax ; ret
0x00000200006741d0 : add byte ptr [rax], al ; mov qword ptr [rcx + 0xe0], rax ; ret
0x00000200006135a8 : add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200000ed1e5 : add byte ptr [rax], al ; mov qword ptr [rcx], r9 ; mov eax, r8d ; ret
0x00000200000fea86 : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; ret
0x00000200000b6302 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x738], rcx ; ret
0x000002000037933c : add byte ptr [rax], al ; mov qword ptr [rdx], r8 ; add rsp, 0x28 ; ret
0x0000020000033771 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000234e41 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call 0x200001510a9
0x0000020000402fe3 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200004b1fd1 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r14
0x00000200001b8a58 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r15
0x000002000067c29d : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rbx ; call 0x20000108519
0x00000200004b8733 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x40], r15 ; inc edx ; jmp 0x200004b86fc
0x00000200003bcbd7 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x78], r13 ; call 0x200003b8e59
0x000002000053cd18 : add byte ptr [rax], al ; mov r12, qword ptr [rcx + 8] ; call 0x20000068fd8
0x00000200006d4910 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d5087 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54e6 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rdi + 0x50] ; call rbx
0x00000200006d5289 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rdi + 0x58] ; call rbx
0x0000020000586696 : add byte ptr [rax], al ; mov r15b, sil ; jmp 0x200004928d7
0x00000200004d7f98 : add byte ptr [rax], al ; mov r8, rax ; call 0x200000ff578
0x000002000050c4b6 : add byte ptr [rax], al ; mov r8, rbx ; call 0x200001389d4
0x00000200001d5c2b : add byte ptr [rax], al ; mov r8, rbx ; call rdi
0x000002000015920e : add byte ptr [rax], al ; mov rax, cr3 ; ret
0x00000200000ead38 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x1c8] ; ret
0x000002000010a4f3 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x220] ; ret
0x00000200005d5e2f : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200002059ef : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200002059df : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000eca7a : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x398] ; ret
0x00000200000f6f06 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x418] ; ret
0x000002000002e2cf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x620] ; ret
0x00000200000f8e7b : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x628] ; ret
0x00000200004a6ee2 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x640] ; ret
0x00000200000eb8cf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x668] ; ret
0x00000200000f43f7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x738] ; ret
0x00000200000b1cf7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xb8] ; ret
0x00000200000e4c83 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xf0] ; ret
0x0000020000157cfe : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x00000200003d09c1 : add byte ptr [rax], al ; mov rax, qword ptr [rip - 0x12f262] ; call rax
0x000002000067ed36 : add byte ptr [rax], al ; mov rax, r9 ; add rsp, 0x28 ; ret
0x000002000015921e : add byte ptr [rax], al ; mov rax, rbx ; ret
0x00000200000d545a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200000d53e7
0x00000200006c5f5b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c5f68
0x00000200006c7366 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c7373
0x00000200006c76bd : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c76ca
0x00000200006c7c51 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c7c5e
0x00000200006c8b38 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c8b45
0x00000200006c8f38 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c8f45
0x00000200006c92eb : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c92f8
0x00000200006c9400 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c9476
0x00000200006c952d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c953a
0x00000200006ca633 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006ca640
0x00000200006cac77 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006cac84
0x00000200006caf5c : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006caf69
0x00000200006cb75d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006cb76a
0x00000200006cc9c0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006cc9d9
0x00000200006cd255 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006cd262
0x00000200006d1203 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1210
0x00000200006d1502 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d150f
0x00000200006d1a70 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1a7d
0x00000200006d1f16 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1f23
0x00000200006d646f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d647c
0x00000200006d6c94 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6ca1
0x00000200006d759a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d75a7
0x00000200006d78d1 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d78de
0x00000200006d8950 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d895d
0x00000200006d8c5e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8c6b
0x00000200006d9d2c : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d9d39
0x00000200006da03a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006da047
0x00000200006db260 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db26d
0x00000200006db5a0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db5ad
0x00000200006dc4d7 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dc4e4
0x00000200006dcc05 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dcc12
0x00000200006dcf2e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dcf3b
0x00000200006de0bb : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de0c8
0x00000200006de3fb : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de408
0x00000200006df341 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df34e
0x00000200006e010d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e011a
0x00000200006e04e0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e04ed
0x00000200006e08ba : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e08c7
0x00000200006e0cab : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e0cb8
0x00000200006e10ad : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e10ba
0x00000200006e14aa : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e14b7
0x00000200006e18be : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e18cb
0x00000200006e1cbf : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e1ccc
0x00000200006e20df : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e20ec
0x00000200006e24ed : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e24fa
0x00000200006e28c3 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e28d0
0x00000200006e2d53 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e2d60
0x00000200006e31e2 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e31ef
0x00000200006e36a1 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e36b0
0x00000200006e422f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e423c
0x00000200006e509e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e50ab
0x00000200006e5839 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e5846
0x00000200006e5d1b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e5d28
0x00000200006e605a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e6067
0x00000200006e64af : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e64bc
0x00000200006e68de : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e68eb
0x00000200006e6d9b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e6da8
0x00000200006e8007 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e8014
0x00000200006e883a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e8847
0x00000200001d48c1 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x000002000012999f : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000676f1f : add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x0000020000111920 : add byte ptr [rax], al ; mov rbx, rcx ; call 0x2000015dbc7
0x000002000038ddd3 : add byte ptr [rax], al ; mov rcx, qword ptr [r15 + 0x3d0] ; call rax
0x00000200000d8a14 : add byte ptr [rax], al ; mov rcx, qword ptr [rcx + 0x28] ; jne 0x200000d8a67 ; call rdi
0x000002000038d2b0 : add byte ptr [rax], al ; mov rcx, qword ptr [rcx + 0x2e0] ; call rax
0x00000200004a1081 : add byte ptr [rax], al ; mov rcx, qword ptr [rcx] ; call 0x200000c6248
0x00000200003c302f : add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 0x48] ; call 0x2000049f284
0x00000200000761f6 : add byte ptr [rax], al ; mov rcx, qword ptr [rdx] ; mov rax, rdx ; jmp 0x20000076268
0x00000200004535b1 : add byte ptr [rax], al ; mov rcx, qword ptr [rsi + 8] ; call rax
0x00000200001634c1 : add byte ptr [rax], al ; mov rcx, r10 ; call r10
0x00000200004801aa : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200000a52e8
0x00000200004473c5 : add byte ptr [rax], al ; mov rcx, r13 ; call 0x2000006a618
0x0000020000395d5c : add byte ptr [rax], al ; mov rcx, r13 ; call qword ptr [r14]
0x000002000043fe70 : add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000006a618
0x00000200003de55c : add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000047a827
0x00000200003b050c : add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x000002000038de10 : add byte ptr [rax], al ; mov rcx, r15 ; call rax
0x00000200005333bf : add byte ptr [rax], al ; mov rcx, r9 ; call 0x2000015d888
0x0000020000534af4 : add byte ptr [rax], al ; mov rcx, rax ; call 0x2000015d888
0x0000020000538363 : add byte ptr [rax], al ; mov rcx, rax ; call 0x2000015dbc8
0x000002000043b0ad : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000690a8
0x0000020000441816 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000006a618
0x00000200005d95f6 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000208a44
0x00000200004f86f7 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200004149ab
0x00000200003f725a : add byte ptr [rax], al ; mov rcx, rbx ; call r10
0x0000020000454003 : add byte ptr [rax], al ; mov rcx, rbx ; call r15
0x000002000050d092 : add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x000002000043a690 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x2000006a618
0x000002000044cd52 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000072648
0x000002000054916d : add byte ptr [rax], al ; mov rcx, rdi ; call rsi
0x000002000066c09b : add byte ptr [rax], al ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000043b749 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000006a618
0x000002000019e8a1 : add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x0000020000415819 : add byte ptr [rax], al ; mov rdi, r9 ; call 0x20000401a5b
0x00000200003cc77e : add byte ptr [rax], al ; mov rdx, qword ptr [r14 + 0x68] ; mov rcx, rdi ; call rax
0x00000200003f819f : add byte ptr [rax], al ; mov rdx, r14 ; mov rcx, r13 ; call rax
0x000002000014157e : add byte ptr [rax], al ; mov rdx, rbx ; mov rcx, rdi ; call r15
0x000002000044cd8f : add byte ptr [rax], al ; mov rdx, rdi ; call 0x20000070d78
0x00000200001fe150 : add byte ptr [rax], al ; mov rdx, rdi ; call rax
0x00000200005ae3d7 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r14 ; call rax
0x00000200005ae42f : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r15 ; call rax
0x00000200005ae46a : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, rsi ; call r10
0x00000200003f7f0f : add byte ptr [rax], al ; mov rdx, rsi ; mov rcx, r15 ; call rax
0x000002000065d1c5 : add byte ptr [rax], al ; mov word ptr [rcx + 0xd6], ax ; ret
0x000002000015e28a : add byte ptr [rax], al ; mov word ptr [rdx], ax ; ret
0x0000020000278872 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; shr dword ptr [rax], 0x56 ; ret 0x68
0x0000020000039fed : add byte ptr [rax], al ; movsxd r8, eax ; jne 0x2000003a032 ; ret
0x0000020000103264 : add byte ptr [rax], al ; movzx eax, byte ptr [rax + 0x22] ; and eax, 1 ; ret
0x00000200004ac46f : add byte ptr [rax], al ; movzx eax, byte ptr [rax + 0x651] ; ret
0x00000200006178ed : add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200000f500a : add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x44] ; ret
0x00000200005f02fe : add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000219549 : add byte ptr [rax], al ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000221007 : add byte ptr [rax], al ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000157775 : add byte ptr [rax], al ; nop ; ret
0x0000020000275e12 : add byte ptr [rax], al ; nop ; ret 0x4e
0x0000020000279c66 : add byte ptr [rax], al ; nop ; ret 0x6f
0x000002000023d6c2 : add byte ptr [rax], al ; not ah ; cmp dword ptr [rax], eax ; ret
0x00000200000cc9b2 : add byte ptr [rax], al ; or bh, bh ; ret
0x000002000066a6cf : add byte ptr [rax], al ; or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x000002000002953f : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], 0xe0 ; dec byte ptr [rcx + 0xb] ; ret
0x0000020000195dc0 : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000200001962cc : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x36e9
0x00000200001971a4 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x9ceb
0x0000020000195d54 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0xee9
0x000002000005e80a : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x00000200004e2a29 : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x850f
0x0000020000649916 : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x000002000037fc7c : add byte ptr [rax], al ; or byte ptr [rbx - 0x7f4b335], 0x8b ; ret
0x00000200000b298a : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x2348
0x00000200000f66c8 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x0000020000052552 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000036fb2 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200000a5834 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000017dd20 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000a5c38 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200003d4505 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x0000020000113ba2 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008da66 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f6f87 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000ad56f : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200006f717a : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a5e25 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x0000020000056b91 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret
0x000002000007d300 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x0000020000039b13 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx - 0x39], cl ; ret
0x00000200000890c1 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add dh, dh ; ret 0xf04
0x00000200000437b4 : add byte ptr [rax], al ; or byte ptr [rdi], 0x85 ; ret
0x000002000067b7df : add byte ptr [rax], al ; or byte ptr [rdi], 0x95 ; ret 0xc141
0x000002000003714e : add byte ptr [rax], al ; or byte ptr [rdx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000028185e : add byte ptr [rax], al ; or cl, al ; push rcx ; add byte ptr [rcx], dl ; ret 0x51
0x00000200000dcad5 : add byte ptr [rax], al ; or dword ptr [rcx + 0x90], r11d ; ret
0x0000020000515d83 : add byte ptr [rax], al ; or dword ptr [rcx + 0x98], 1 ; ret
0x00000200001e19a5 : add byte ptr [rax], al ; or eax, ecx ; ret
0x00000200004a4e4a : add byte ptr [rax], al ; or ebx, ecx ; jmp 0x200004a4e18
0x000002000057f46e : add byte ptr [rax], al ; or ecx, ebp ; ret
0x000002000010267e : add byte ptr [rax], al ; or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x000002000013ef22 : add byte ptr [rax], al ; out dx, eax ; ret
0x00000200006fe8fc : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000029422a : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dd204 : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000091e22 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200001287ea : add byte ptr [rax], al ; pop r13 ; pop r12 ; ret
0x0000020000044150 : add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x000002000007d486 : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x0000020000391fb7 : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000853fd : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000393c6c : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000014127e : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200005f42f0 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005be4d6 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000005e400 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000116b16 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000108163 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000097f2b : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000eaab7 : add byte ptr [rax], al ; pop r14 ; pop rdi ; ret
0x000002000046f018 : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000036f5b9 : add byte ptr [rax], al ; pop r14 ; ret
0x000002000039357f : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003c5cca : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003d5cbe : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000002d993 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000007aa2f : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rsi ; pop rbx ; ret
0x0000020000076b80 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop r13 ; pop rbx ; ret
0x00000200002312e7 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000084f1f : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rbx ; pop rbp ; ret
0x0000020000644c19 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c03ae : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004bf511 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000006ecd2 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200001e9a89 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004ed0cc : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000155a76 : add byte ptr [rax], al ; pop rax ; ret
0x00000200002788be : add byte ptr [rax], al ; pop rax ; ret 0x68
0x0000020000045726 : add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x00000200000bfd74 : add byte ptr [rax], al ; pop rbp ; ret
0x00000200001e0dd2 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000020000041cd5 : add byte ptr [rax], al ; pop rbx ; ret
0x000002000007e37f : add byte ptr [rax], al ; pop rdi ; pop rbp ; ret
0x00000200001e1153 : add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006282bc : add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x0000020000117d46 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000008dc2c : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000a3c95 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001281c4 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000081088 : add byte ptr [rax], al ; pop rdi ; ret
0x00000200000926fa : add byte ptr [rax], al ; pop rsi ; ret
0x000002000023eace : add byte ptr [rax], al ; pop rsp ; ret
0x000002000027cb62 : add byte ptr [rax], al ; pop rsp ; ret 0x70
0x000002000024113e : add byte ptr [rax], al ; pop rsp ; rol byte ptr [rax + rax], 0x5e ; ret
0x000002000023a6ae : add byte ptr [rax], al ; push rax ; sub byte ptr [rbx], dl ; ret 0x5328
0x00000200005d9613 : add byte ptr [rax], al ; push rbp ; push r8 ; call 0x20000208ac5
0x000002000001f93e : add byte ptr [rax], al ; push rsp ; ret
0x00000200001514f9 : add byte ptr [rax], al ; rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000019496 : add byte ptr [rax], al ; ret
0x0000020000019b66 : add byte ptr [rax], al ; ret 0
0x0000020000268c4a : add byte ptr [rax], al ; ret 0x1036
0x000002000023b0ea : add byte ptr [rax], al ; ret 0x164a
0x000002000001eab6 : add byte ptr [rax], al ; ret 0x2237
0x000002000025d22b : add byte ptr [rax], al ; ret 0x25
0x000002000001e91e : add byte ptr [rax], al ; ret 0x2fe1
0x000002000001e84e : add byte ptr [rax], al ; ret 0x344d
0x000002000001e7c6 : add byte ptr [rax], al ; ret 0x399b
0x000002000024c2a2 : add byte ptr [rax], al ; ret 0x3f39
0x000002000024ce2a : add byte ptr [rax], al ; ret 0x3f61
0x0000020000011a07 : add byte ptr [rax], al ; ret 0x4000
0x000002000001e29e : add byte ptr [rax], al ; ret 0x410c
0x000002000001fcbe : add byte ptr [rax], al ; ret 0x42a
0x0000020000261d06 : add byte ptr [rax], al ; ret 0x4872
0x000002000001e006 : add byte ptr [rax], al ; ret 0x4c9a
0x000002000026e08a : add byte ptr [rax], al ; ret 0x4c9c
0x0000020000281922 : add byte ptr [rax], al ; ret 0x51
0x0000020000021d06 : add byte ptr [rax], al ; ret 0x53e8
0x000002000028dcba : add byte ptr [rax], al ; ret 0x61ff
0x00000200002917e2 : add byte ptr [rax], al ; ret 0x63c4
0x000002000002177e : add byte ptr [rax], al ; ret 0x82bc
0x00000200000202e6 : add byte ptr [rax], al ; ret 0x8d0a
0x000002000000a61e : add byte ptr [rax], al ; ret 0x9e
0x00000200002557fa : add byte ptr [rax], al ; ret 0xb
0x0000020000020fde : add byte ptr [rax], al ; ret 0xb0cc
0x00000200000211b6 : add byte ptr [rax], al ; ret 0xb1
0x00000200000220f6 : add byte ptr [rax], al ; ret 0xb9b4
0x0000020000257fbe : add byte ptr [rax], al ; ret 0xc
0x000002000002095e : add byte ptr [rax], al ; ret 0xdf27
0x000002000002024e : add byte ptr [rax], al ; ret 0xf023
0x0000020000714b58 : add byte ptr [rax], al ; ret 1
0x00000200002485f3 : add byte ptr [rax], al ; ret 8
0x0000020000619a92 : add byte ptr [rax], al ; rol bl, 0x33 ; leave ; jmp rax
0x00000200000ec99e : add byte ptr [rax], al ; rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000013573a : add byte ptr [rax], al ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004e64f9 : add byte ptr [rax], al ; rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x00000200003b07b1 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200003b07c1 ; add al, al ; ret
0x000002000047a908 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x2000047a918 ; add al, al ; ret
0x000002000047b350 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x2000047b360 ; add al, al ; ret
0x000002000047c5bc : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x2000047c5cc ; add al, al ; ret
0x000002000015e22f : add byte ptr [rax], al ; rol bl, 0xcc ; mov eax, ecx ; ret
0x000002000064ea1b : add byte ptr [rax], al ; rol byte ptr [rbp + 0x410e78c0], 0xff ; ret
0x00000200003c5544 : add byte ptr [rax], al ; rol byte ptr [rcx + rcx*4 + 0x64], 0x24 ; xor al, 0xe9 ; ret
0x0000020000614653 : add byte ptr [rax], al ; rol byte ptr [rcx + rcx*4 + 0x74], 0x24 ; sub bh, bh ; ret
0x00000200001e298c : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200006f865f : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006f9d4f : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rbp + 0x23], cl ; ret
0x00000200001d78a9 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200002155b7 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x00000200004084bd : add byte ptr [rax], al ; ror byte ptr [rax + 0x6b], 0xc0 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200004e2803 : add byte ptr [rax], al ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000053cdbf : add byte ptr [rax], al ; ror byte ptr [rax - 0x75], 0xce ; call 0x20000068fd8
0x0000020000119177 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; ret
0x00000200001d02fa : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000020c581 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000009c74a : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000038b80c : add byte ptr [rax], al ; ror byte ptr [rbp - 0x75], 0x14 ; ret 0x8b48
0x00000200001c7855 : add byte ptr [rax], al ; ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001c7869 ; call r9
0x000002000002b666 : add byte ptr [rax], al ; ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x0000020000376264 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret
0x00000200005f7183 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret 0x189
0x000002000055f14c : add byte ptr [rax], al ; ror byte ptr [rdi], 0x45 ; fsubr st(1) ; ret 0xeb2b
0x000002000021dcb9 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004e85e4 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000021be35 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 4
0x0000020000193702 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000446ea1 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200000e7903 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret 0xb43
0x0000020000228f14 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000275562 : add byte ptr [rax], al ; ror dl, 1 ; adc al, byte ptr [rax] ; ret
0x00000200005d4115 : add byte ptr [rax], al ; sal byte ptr [rbp + 2], 0x8b ; ret
0x00000200000b596f : add byte ptr [rax], al ; sal byte ptr [rbx + rax - 0x75], 0xc1 ; ret
0x000002000015e2cf : add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x0000020000430d9c : add byte ptr [rax], al ; sal byte ptr [rcx + 0x49], 0x8b ; ret
0x00000200000c91b2 : add byte ptr [rax], al ; sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x0000020000195089 : add byte ptr [rax], al ; sal byte ptr [rdx + 0x41], 0x81 ; call qword ptr [rdi]
0x0000020000508497 : add byte ptr [rax], al ; sal dh, 0xc1 ; adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200006f9076 : add byte ptr [rax], al ; sal dh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f92dc : add byte ptr [rax], al ; sar byte ptr [rbx], 0xc1 ; ja 0x200000f92eb ; ret
0x000002000013e28a : add byte ptr [rax], al ; sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000031fd : add byte ptr [rax], al ; sbb byte ptr [rdx], 0xd6 ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x000002000027ef06 : add byte ptr [rax], al ; sbb dh, dh ; jo 0x2000027ef12 ; ret
0x000002000024b4fe : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret 0x3e
0x00000200000fd30a : add byte ptr [rax], al ; seta al ; ret
0x000002000045079b : add byte ptr [rax], al ; setb al ; movzx eax, al ; ret
0x0000020000140f42 : add byte ptr [rax], al ; setb al ; ret
0x0000020000209f91 : add byte ptr [rax], al ; setbe al ; ret
0x0000020000436017 : add byte ptr [rax], al ; sete al ; add rsp, 0x28 ; ret
0x000002000003660b : add byte ptr [rax], al ; sete al ; ret
0x000002000038392c : add byte ptr [rax], al ; setne al ; mov byte ptr [rdx], al ; xor eax, eax ; ret
0x0000020000102e3a : add byte ptr [rax], al ; setne al ; ret
0x00000200006cef5e : add byte ptr [rax], al ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x00000200006341a8 : add byte ptr [rax], al ; shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x000002000020a014 : add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x0000020000515642 : add byte ptr [rax], al ; shl edx, 0xf ; call 0x2000013b958
0x000002000036def7 : add byte ptr [rax], al ; shl rax, cl ; add rsp, 0x28 ; ret
0x000002000011e4ee : add byte ptr [rax], al ; shl rax, cl ; mov qword ptr [r8], rax ; ret
0x00000200004a17e2 : add byte ptr [rax], al ; shr al, 0x12 ; salc ; ret 0x49ff
0x00000200001c2ba2 : add byte ptr [rax], al ; shr al, 0x52 ; ret 0xfff0
0x00000200001c2b82 : add byte ptr [rax], al ; shr al, 0x72 ; ret 0xfff0
0x00000200004aac75 : add byte ptr [rax], al ; shr al, 0x7f ; ret 0x48ff
0x00000200001c2b60 : add byte ptr [rax], al ; shr al, 0x94 ; ret 0xfff0
0x00000200001c2b38 : add byte ptr [rax], al ; shr al, 0xbc ; ret 0xfff0
0x00000200004c0c90 : add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x00000200004e7b64 : add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x00000200000a639d : add byte ptr [rax], al ; shr al, 4 ; and al, 1 ; ret
0x0000020000621f96 : add byte ptr [rax], al ; shr bl, 0 ; add rsp, 0x38 ; ret
0x0000020000408b8f : add byte ptr [rax], al ; shr bl, 0xc ; inc r10d ; jmp 0x20000408b84
0x00000200004ae949 : add byte ptr [rax], al ; shr bl, 0xde ; call 0x200000d7db4
0x000002000011ea8c : add byte ptr [rax], al ; shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x000002000057d1b5 : add byte ptr [rax], al ; shr bl, 4 ; call rax
0x000002000068e45f : add byte ptr [rax], al ; shr cl, 0x1e ; ret 0xffff
0x00000200005b49e2 : add byte ptr [rax], al ; shr cl, 0x20 ; mov esi, dr0 ; jmp qword ptr [rcx]
0x00000200005a758a : add byte ptr [rax], al ; shr cl, 0x21 ; ret
0x0000020000538116 : add byte ptr [rax], al ; shr cl, 0x22 ; ret
0x000002000059e184 : add byte ptr [rax], al ; shr cl, 0x25 ; ret
0x000002000068e455 : add byte ptr [rax], al ; shr cl, 0x28 ; ret 0xffff
0x00000200005a2c1e : add byte ptr [rax], al ; shr cl, 0x29 ; cmp esi, esp ; push rsi ; ret
0x000002000054727b : add byte ptr [rax], al ; shr cl, 0x2e ; jmp rdi
0x000002000053810b : add byte ptr [rax], al ; shr cl, 0x38 ; ret
0x000002000068e742 : add byte ptr [rax], al ; shr cl, 0x53 ; ret
0x000002000068e738 : add byte ptr [rax], al ; shr cl, 0x5d ; ret
0x000002000058e148 : add byte ptr [rax], al ; shr cl, 0x5f ; jb 0x2000058e149 ; push rdi ; ret
0x0000020000585e5f : add byte ptr [rax], al ; shr cl, 0x63 ; ret 0xfff0
0x000002000058fee0 : add byte ptr [rax], al ; shr cl, 0x65 ; ret
0x000002000068e72e : add byte ptr [rax], al ; shr cl, 0x67 ; ret
0x0000020000587baf : add byte ptr [rax], al ; shr cl, 0x67 ; ret 0xfff0
0x0000020000596d6b : add byte ptr [rax], al ; shr cl, 0x7a ; ret 0xfff2
0x0000020000205742 : add byte ptr [rax], al ; shr cl, 0x8d ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003e3132 : add byte ptr [rax], al ; shr cl, 0x98 ; ret
0x0000020000561e31 : add byte ptr [rax], al ; shr cl, 0x99 ; ret
0x000002000054c7e7 : add byte ptr [rax], al ; shr cl, 0xa0 ; ret
0x00000200005380a2 : add byte ptr [rax], al ; shr cl, 0xa1 ; ret
0x0000020000121e91 : add byte ptr [rax], al ; shr cl, 0xa2 ; ret 8
0x0000020000574cf8 : add byte ptr [rax], al ; shr cl, 0xa8 ; ret 0xffed
0x0000020000538098 : add byte ptr [rax], al ; shr cl, 0xab ; ret
0x0000020000574cee : add byte ptr [rax], al ; shr cl, 0xb2 ; ret 0xffed
0x000002000058ff8d : add byte ptr [rax], al ; shr cl, 0xb8 ; ret 0xfff1
0x000002000059e1ec : add byte ptr [rax], al ; shr cl, 0xbd ; ret 0xfff3
0x000002000059e233 : add byte ptr [rax], al ; shr cl, 0xc1 ; ret
0x0000020000588213 : add byte ptr [rax], al ; shr cl, 0xcc ; ret 0xfff0
0x00000200003e3120 : add byte ptr [rax], al ; shr cl, 0xd5 ; ret 0xffff
0x000002000054c7ce : add byte ptr [rax], al ; shr cl, 0xdf ; ret
0x000002000068e787 : add byte ptr [rax], al ; shr cl, 0xe ; ret
0x000002000017b21f : add byte ptr [rax], al ; shr cl, 0xe1 ; outsd dx, dword ptr [rsi] ; out dx, eax ; push rsi ; ret
0x00000200005881fa : add byte ptr [rax], al ; shr cl, 0xe5 ; ret 0xfff0
0x00000200005800c7 : add byte ptr [rax], al ; shr cl, 0xe9 ; ret
0x0000020000197c5a : add byte ptr [rax], al ; shr cl, 0xe9 ; stosd dword ptr [rdi], eax ; push rsi ; ret
0x0000020000561dda : add byte ptr [rax], al ; shr cl, 0xf0 ; ret
0x000002000056c05c : add byte ptr [rax], al ; shr cl, 0xf2 ; leave ; in al, dx ; push rsi ; ret
0x000002000055c6e4 : add byte ptr [rax], al ; shr cl, 0xf3 ; ret
0x0000020000169474 : add byte ptr [rax], al ; shr cl, 8 ; ret 0xffec
0x00000200000e84b9 : add byte ptr [rax], al ; shr eax, 3 ; and eax, 1 ; ret
0x000002000013f485 : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; ret
0x00000200004b7288 : add byte ptr [rax], al ; shr r9, 1 ; call 0x200000e1f24
0x00000200005201a4 : add byte ptr [rax], al ; shr rax, 0xc ; and rax, rcx ; ret
0x00000200001579ab : add byte ptr [rax], al ; shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200003797fc : add byte ptr [rax], al ; shr rdx, 0xc ; and rdx, rax ; call qword ptr [rsi]
0x00000200004dd0e8 : add byte ptr [rax], al ; std ; jbe 0x200004dd116 ; call 0x200000ffb24
0x00000200002916da : add byte ptr [rax], al ; std ; shl dword ptr [rbx], 0x23 ; ret 0x63
0x0000020000154b74 : add byte ptr [rax], al ; sti ; ret
0x00000200000876b8 : add byte ptr [rax], al ; str word ptr [rcx + 0xb] ; ret
0x0000020000248252 : add byte ptr [rax], al ; sub al, 0xa2 ; or byte ptr [rax], al ; ret 0x8a2
0x0000020000561df8 : add byte ptr [rax], al ; sub cl, 0xd2 ; ret
0x000002000001fd16 : add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200002328a5 : add byte ptr [rax], al ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x000002000015c825 : add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x0000020000159dce : add byte ptr [rax], al ; sub r9, r8 ; jmp r9
0x00000200000c8864 : add byte ptr [rax], al ; sub rdx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000020000431126 : add byte ptr [rax], al ; test al, 0x10 ; je 0x20000431137 ; xor al, al ; ret
0x0000020000484b24 : add byte ptr [rax], al ; test al, 0x10 ; jne 0x20000484b35 ; xor eax, eax ; ret
0x000002000042afc4 : add byte ptr [rax], al ; test al, 0x20 ; jne 0x2000042afd5 ; xor al, al ; ret
0x000002000043d68c : add byte ptr [rax], al ; test al, 4 ; jne 0x2000043d699 ; ret
0x0000020000431139 : add byte ptr [rax], al ; test ax, cx ; jne 0x20000431135 ; mov al, 1 ; ret
0x00000200000b21eb : add byte ptr [rax], al ; test cl, al ; jne 0x200000b21fb ; xor eax, eax ; ret
0x000002000043daf8 : add byte ptr [rax], al ; test eax, eax ; cmove eax, ecx ; ret
0x0000020000141fc1 : add byte ptr [rax], al ; test eax, eax ; cmovg eax, ecx ; ret
0x00000200000ea949 : add byte ptr [rax], al ; test eax, eax ; jne 0x200000ea956 ; ret
0x0000020000129b1f : add byte ptr [rax], al ; test rax, r8 ; je 0x20000129b2e ; ret
0x00000200005e6866 : add byte ptr [rax], al ; test rax, rax ; je 0x200005e6876 ; call rax
0x00000200000ead05 : add byte ptr [rax], al ; test rax, rax ; jne 0x200000ead18 ; xor eax, eax ; ret
0x0000020000130151 : add byte ptr [rax], al ; test rcx, rcx ; je 0x20000130161 ; call rcx
0x00000200001cbd4d : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001cbd5d ; call rcx
0x00000200001cbdd9 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001cbdeb ; jmp rcx
0x00000200001cbe49 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001cbe59 ; call rcx
0x000002000005195f : add byte ptr [rax], al ; test rcx, rcx ; jne 0x2000005196e ; ret
0x00000200000c5d21 : add byte ptr [rax], al ; test rcx, rcx ; jne 0x200000c5d30 ; ret
0x0000020000131d97 : add byte ptr [rax], al ; test rdx, rdx ; je 0x20000131dab ; xor ecx, ecx ; call rdx
0x00000200001cbdfd : add byte ptr [rax], al ; test rdx, rdx ; je 0x200001cbe0f ; jmp rdx
0x00000200000fdb6d : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200000fdb7c ; ret
0x00000200004a061a : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200004a0629 ; ret
0x00000200002638a6 : add byte ptr [rax], al ; wait ; adc ecx, dword ptr [rcx] ; call qword ptr [rbx]
0x000002000023d532 : add byte ptr [rax], al ; wait ; ret 0x39
0x000002000001f316 : add byte ptr [rax], al ; wait ; ret 0x55a5
0x000002000010af85 : add byte ptr [rax], al ; xchg dword ptr [rcx + 0x506c], eax ; ret
0x00000200001d2efd : add byte ptr [rax], al ; xchg dword ptr [rip + 0x10f27b], eax ; ret
0x0000020000020d36 : add byte ptr [rax], al ; xchg eax, ebp ; push rsp ; ret
0x0000020000021a76 : add byte ptr [rax], al ; xchg eax, ecx ; ret 0x7c05
0x00000200002916e6 : add byte ptr [rax], al ; xchg eax, edi ; ret 0x63
0x0000020000266012 : add byte ptr [rax], al ; xchg eax, edi ; xor dword ptr [rdx], ecx ; ret
0x000002000024b526 : add byte ptr [rax], al ; xchg eax, edx ; ret
0x000002000027a9b2 : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000002000010ca2b : add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200000931f8 : add byte ptr [rax], al ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036635d : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000013172a : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xa348
0x0000020000091400 : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xba49
0x000002000036f49a : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000015e1fd : add byte ptr [rax], al ; xor bh, 0xff ; inc ebx ; xor eax, eax ; ret
0x00000200004df114 : add byte ptr [rax], al ; xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200001d8090 : add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x0000020000191f51 : add byte ptr [rax], al ; xor byte ptr [rbp - 0x34], 0xe9 ; ret 0xfff2
0x00000200006f975b : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x000002000005bff5 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000008af1d : add byte ptr [rax], al ; xor dh, 0xff ; inc dword ptr [rcx - 0xa] ; ret 0x7408
0x00000200001c6edb : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000378158 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bc459 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000047fbea : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001e0aab : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000115348 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000020000132ff6 : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200001bd69a : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x00000200000dbcf3 : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200006c54dd : add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200006e7cb7 : add byte ptr [rax], al ; xor ecx, ecx ; call rbx
0x0000020000416b32 : add byte ptr [rax], al ; xor edx, eax ; test dl, 0x47 ; jne 0x20000416b45 ; ret
0x00000200001e70a8 : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rsi ; call 0x200000b3331
0x0000020000168b41 : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rsi ; call 0x20000294e29
0x000002000038cdcd : add byte ptr [rax], al ; xor r8d, r8d ; call rax
0x000002000038cdf3 : add byte ptr [rax], al ; xor r8d, r8d ; mov rcx, rbx ; call rax
0x000002000054925d : add byte ptr [rax], al ; xor r8d, r8d ; xor edx, edx ; call 0x20000045499
0x000002000012450f : add byte ptr [rax], al ; xor r8d, r8d ; xor edx, edx ; call r9
0x00000200005acbbb : add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000148e17
0x000002000051a6b0 : add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000148e18
0x000002000022fcdf : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000022fcaf : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x000002000000afc1 : add byte ptr [rax], bh ; call qword ptr [rdx]
0x0000020000148aa6 : add byte ptr [rax], bh ; pop rbp ; ret
0x000002000026684b : add byte ptr [rax], bh ; ret
0x00000200003a00c7 : add byte ptr [rax], bh ; ret 0x39
0x00000200000e915d : add byte ptr [rax], bh ; sahf ; mov al, byte ptr [rip - 0x79f10000] ; sysenter
0x0000020000066c5f : add byte ptr [rax], bh ; xchg eax, ebx ; ret 0
0x000002000002a797 : add byte ptr [rax], bl ; add byte ptr [rbp - 0x76], al ; ret 0x854d
0x0000020000162165 : add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x000002000027ef07 : add byte ptr [rax], bl ; div byte ptr [rax] ; ret
0x0000020000270f3f : add byte ptr [rax], bl ; jmp qword ptr [rsi]
0x0000020000021a57 : add byte ptr [rax], ch ; loope 0x200000219e7 ; ret
0x000002000025d353 : add byte ptr [rax], ch ; ret
0x000002000024d253 : add byte ptr [rax], ch ; ret 0x24
0x0000020000558b99 : add byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x200000b4de6
0x000002000049465a : add byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x200000b4de7
0x000002000043906f : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x20000439083 ; call 0x20000068fd9
0x0000020000026737 : add byte ptr [rax], cl ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200001c09d5 : add byte ptr [rax], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001971a5 : add byte ptr [rax], cl ; inc rdx ; jmp 0x2000019714c
0x00000200000f17ca : add byte ptr [rax], cl ; jbe 0x2000019f6bc ; ret
0x000002000028d3eb : add byte ptr [rax], cl ; jmp qword ptr [rcx]
0x000002000001e917 : add byte ptr [rax], cl ; mov ecx, 0x66eb ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000002251f : add byte ptr [rax], cl ; mov esi, 0x92d ; add byte ptr [rax], al ; ret
0x000002000028185f : add byte ptr [rax], cl ; rcl dword ptr [rcx], 0x11 ; ret 0x51
0x000002000001e76f : add byte ptr [rax], cl ; ret
0x0000020000244717 : add byte ptr [rax], cl ; ret 6
0x0000020000261cff : add byte ptr [rax], dh ; int1 ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4872
0x000002000023d327 : add byte ptr [rax], dh ; lodsd eax, dword ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000002000024255f : add byte ptr [rax], dh ; push rdi ; cmp eax, dword ptr [rax] ; ret 0x3b59
0x00000200001555df : add byte ptr [rax], dh ; ret
0x000002000025d243 : add byte ptr [rax], dh ; ret 0x25
0x00000200003749ff : add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0xf75
0x000002000037722b : add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x000002000002a7eb : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000200003652ea : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000003da52 : add byte ptr [rax], dl ; add byte ptr [rbp + 3], dh ; mov eax, edx ; ret
0x00000200004ae889 : add byte ptr [rax], dl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x00000200004524df : add byte ptr [rax], dl ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200006712ff : add byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret 0x676
0x00000200004c0fc2 : add byte ptr [rax], dl ; add byte ptr [rcx + 0x23], cl ; ret 0x2b49
0x00000200004bf6b8 : add byte ptr [rax], dl ; add dh, dh ; ret
0x000002000021b185 : add byte ptr [rax], dl ; add dh, dh ; ret 0xc704
0x00000200003af27e : add byte ptr [rax], dl ; add dword ptr [rbx], esp ; ret 0xc933
0x0000020000542526 : add byte ptr [rax], dl ; fmul dword ptr [rbx] ; ret 0x8941
0x00000200006dad9a : add byte ptr [rax], dl ; jo 0x200006dad2d ; ret
0x000002000001f99f : add byte ptr [rax], dl ; js 0x2000001fa25 ; ret
0x00000200006d5ab7 : add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5ac4
0x00000200006d5b38 : add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5b45
0x000002000002a7db : add byte ptr [rax], dl ; movzx r8d, r8b ; cmovl r8d, r10d ; jmp 0x2000002a7ac
0x000002000053a3f4 : add byte ptr [rax], dl ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000013ef1a : add byte ptr [rax], dl ; ret
0x000002000023c917 : add byte ptr [rax], dl ; ret 0xd009
0x000002000025d352 : add byte ptr [rax], r13b ; ret
0x000002000025d242 : add byte ptr [rax], r14b ; ret 0x25
0x000002000015921d : add byte ptr [rax], r8b ; mov rax, rbx ; ret
0x000002000025d22a : add byte ptr [rax], r8b ; ret 0x25
0x000002000015922d : add byte ptr [rax], r8b ; sti ; ret
0x000002000045c071 : add byte ptr [rbp + 0x100083], cl ; add byte ptr [rbx], bh ; ret
0x000002000001e847 : add byte ptr [rbp + 0x11], ah ; imul esi, dword ptr [rsi], 0 ; ret 0x344d
0x000002000038c982 : add byte ptr [rbp + 0x14], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b41f9 : add byte ptr [rbp + 0x14], dh ; xor eax, eax ; ret
0x0000020000486c4f : add byte ptr [rbp + 0x18880ff6], al ; ret
0x000002000004da2f : add byte ptr [rbp + 0x18], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004aa276 : add byte ptr [rbp + 0x1c], dh ; mov eax, r9d ; ret
0x0000020000419424 : add byte ptr [rbp + 0x1e], bl ; out dx, al ; call 0x2000003e017
0x00000200000728a5 : add byte ptr [rbp + 0x1e], dh ; mov eax, ecx ; ret
0x000002000045c27e : add byte ptr [rbp + 0x23], al ; ret
0x0000020000061e23 : add byte ptr [rbp + 0x23], cl ; ret
0x00000200000890f7 : add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x000002000002b559 : add byte ptr [rbp + 0x25], dh ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x000002000009db49 : add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x00000200001c12de : add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x000002000045ea67 : add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200006f8d4a : add byte ptr [rbp + 0x2b], cl ; ret
0x000002000007eb41 : add byte ptr [rbp + 0x2b], cl ; ret 0xf748
0x0000020000103699 : add byte ptr [rbp + 0x2b], dh ; ret
0x00000200003e669f : add byte ptr [rbp + 0x2e840fd2], al ; ret
0x00000200000296fa : add byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200000596c9 : add byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004a7d85 : add byte ptr [rbp + 0x33], al ; div bh ; ret 0
0x0000020000649f5d : add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200006c9380 : add byte ptr [rbp + 0x33], al ; fild dword ptr [rax - 0x49f0fe3e] ; ret 0x3b41
0x000002000016ad25 : add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x00000200003d7300 : add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret 0x2b41
0x00000200006e77c8 : add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000020000051ed7 : add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rcx - 0x75] ; sbb dh, dh ; ret
0x0000020000176896 : add byte ptr [rbp + 0x33], al ; fucomi st(1) ; ret 0xeeed
0x00000200000df937 : add byte ptr [rbp + 0x33], al ; in al, -0x17 ; ret 0xfffd
0x000002000007a322 : add byte ptr [rbp + 0x33], al ; in al, -0x75 ; ret
0x00000200001334f8 : add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x00000200000f9814 : add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx + 0x3b], cl ; ret
0x00000200003d1843 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0xd ; jp 0x200003d17f8 ; ret
0x000002000038cdf4 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call rax
0x00000200004b30f6 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x0000020000596dde : add byte ptr [rbp + 0x33], al ; ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x00000200001b9235 : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x20000045498
0x0000020000442714 : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x200000702b9
0x0000020000124510 : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x000002000016e002 : add byte ptr [rbp + 0x33], al ; shr cl, cl ; ret
0x00000200001ea4e7 : add byte ptr [rbp + 0x33], cl ; ret
0x00000200004059bb : add byte ptr [rbp + 0x39], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ad44e : add byte ptr [rbp + 0x3a41f341], cl ; ret 0x860f
0x00000200000cbadd : add byte ptr [rbp + 0x3a], al ; ret 0x850f
0x000002000045bdc1 : add byte ptr [rbp + 0x3b0875db], al ; ret 0x860f
0x000002000012ebf3 : add byte ptr [rbp + 0x3b44f050], cl ; ret 0x870f
0x00000200000248e4 : add byte ptr [rbp + 0x3b880fc0], al ; call qword ptr [rbx]
0x000002000010a043 : add byte ptr [rbp + 0x3b], al ; ret
0x000002000019dbd0 : add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x0000020000039fc2 : add byte ptr [rbp + 0x3b], al ; ret 0x3774
0x00000200000e5d4a : add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x000002000002ea14 : add byte ptr [rbp + 0x3b], cl ; ret
0x00000200004cc908 : add byte ptr [rbp + 0x3b], cl ; ret 0x4674
0x00000200001f1b5f : add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x00000200001f1bf2 : add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000020c84e : add byte ptr [rbp + 0x3b], cl ; ret 0x860f
0x000002000007f21b : add byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x00000200004cc94e : add byte ptr [rbp + 0x3b], cl ; ret 0xc175
0x000002000007d594 : add byte ptr [rbp + 0x3b], cl ; ret 0xd72
0x000002000037ed12 : add byte ptr [rbp + 0x3b], cl ; ret 0xda75
0x00000200002059bd : add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x0000020000280f57 : add byte ptr [rbp + 0x40006594], al ; jmp qword ptr [rdi]
0x000002000044b889 : add byte ptr [rbp + 0x43], dh ; ret
0x000002000010cb3e : add byte ptr [rbp + 0x440f1050], cl ; ret 0x8b49
0x00000200001dd4c1 : add byte ptr [rbp + 0x440f41c0], al ; ret
0x00000200003f33d9 : add byte ptr [rbp + 0x440f41c0], al ; ret 0x3de9
0x00000200004a4938 : add byte ptr [rbp + 0x440f41db], al ; fdivr st(7), st(0) ; ret
0x00000200000f7303 : add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x000002000013004a : add byte ptr [rbp + 0x450579c0], al ; mov eax, edx ; jmp 0x20000130018
0x00000200000b573e : add byte ptr [rbp + 0x45], dh ; xor al, al ; ret
0x00000200000d8128 : add byte ptr [rbp + 0x480578c0], al ; add esp, 0x28 ; ret
0x000002000009c773 : add byte ptr [rbp + 0x480579c0], al ; add esp, 0x58 ; ret
0x0000020000024937 : add byte ptr [rbp + 0x4880fc0], al ; call qword ptr [rbx]
0x00000200000f7281 : add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x0000020000644d75 : add byte ptr [rbp + 0x4e], dh ; xor al, al ; ret
0x0000020000168e60 : add byte ptr [rbp + 0x52880fc0], al ; ret
0x000002000045bf44 : add byte ptr [rbp + 0x53880fc0], al ; ret
0x0000020000045727 : add byte ptr [rbp + 0x5b], bl ; ret
0x000002000018a6c1 : add byte ptr [rbp + 0x5c840fc0], al ; ret 0xfff1
0x000002000024d27b : add byte ptr [rbp + 0x63], bh ; or al, byte ptr [rax] ; pop rax ; ret 0x24
0x00000200001c0c2b : add byte ptr [rbp + 0x63], cl ; ret 0x8d49
0x0000020000020747 : add byte ptr [rbp + 0x65], bl ; fild dword ptr [rcx] ; ret
0x00000200004c3b97 : add byte ptr [rbp + 0xb], al ; ret 0x8944
0x00000200000a5d8b : add byte ptr [rbp + 0xb], cl ; ret
0x0000020000222835 : add byte ptr [rbp + 0xb], cl ; ret 0x8948
0x00000200001ed3e1 : add byte ptr [rbp + 0xb], cl ; ret 0xc148
0x00000200004bf7af : add byte ptr [rbp + 0xd], dh ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200001b4cbd : add byte ptr [rbp + 0xf480346], cl ; scasd eax, dword ptr [rdi] ; shr al, 1 ; ret 0xee56
0x0000020000235a75 : add byte ptr [rbp + 0xf], 0x47 ; ret 0x8545
0x00000200000e05e6 : add byte ptr [rbp + 0xf], al ; ret
0x0000020000402a77 : add byte ptr [rbp + 0xf], cl ; ret 0x8b49
0x00000200000a7d7e : add byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000200000b7276 : add byte ptr [rbp + 1], dh ; ret
0x00000200001092c9 : add byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x000002000013c0a1 : add byte ptr [rbp + 3], al ; fmul qword ptr [rcx - 0x7d] ; ret 0x4108
0x0000020000464329 : add byte ptr [rbp + 3], al ; ret
0x0000020000602476 : add byte ptr [rbp + 3], al ; ret 0x8944
0x000002000010765c : add byte ptr [rbp + 3], al ; ret 0x8948
0x00000200006dfce6 : add byte ptr [rbp + 3], cl ; ret
0x00000200003849c8 : add byte ptr [rbp + 3], cl ; ret 0x3b4d
0x000002000013c5ad : add byte ptr [rbp + 3], cl ; ret 0x8348
0x00000200006e49d3 : add byte ptr [rbp + 3], cl ; ret 0xff83
0x000002000003da54 : add byte ptr [rbp + 3], dh ; mov eax, edx ; ret
0x00000200001d29e7 : add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x000002000022b0ba : add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000600fff : add byte ptr [rbp + 4], dh ; and qword ptr [r8], 0 ; ret
0x00000200004e4042 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000020000590dfa : add byte ptr [rbp + 5], dh ; call 0x200000bd0e5
0x00000200001e01ae : add byte ptr [rbp + 5], dh ; mov eax, 1 ; ret
0x00000200000f4522 : add byte ptr [rbp + 5], dh ; ret
0x000002000002fe1b : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004544c3 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006869b7 : add byte ptr [rbp + 6], dh ; mov eax, 0xc00000bb ; ret
0x0000020000408146 : add byte ptr [rbp + 6], r14b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c6d7a : add byte ptr [rbp + 7], dh ; call 0x20000032fc5
0x00000200004f3dba : add byte ptr [rbp + 7], dh ; mov eax, 0xc0000022 ; jmp 0x200004f3d8f
0x00000200000eb2b7 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000668f82 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200003eed37 : add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x000002000046f28c : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x0000020000610d7e : add byte ptr [rbp + rax - 0x18], dh ; pop rdx ; ret
0x0000020000151db5 : add byte ptr [rbp + rax - 0x18], dh ; ret
0x0000020000219416 : add byte ptr [rbp + rax - 0x18], dh ; ret 0xea3c
0x000002000012d459 : add byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x000002000066ce47 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; insd dword ptr [rdi], dx ; pop rbx ; ret
0x00000200006737ac : add byte ptr [rbp + rcx*4 + 0x2d], cl ; or al, 0xa5 ; ret
0x00000200004962f4 : add byte ptr [rbp + rcx*4 + 0x42], al ; js 0x200004962e8 ; ret 0xcc78
0x0000020000474b29 : add byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x00000200000aa277 : add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x00000200006331cb : add byte ptr [rbp + rcx*4 + 0x56], al ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x000002000004b85b : add byte ptr [rbp + rcx*4 + 0x5d], al ; add dword ptr [rcx - 0x7c], eax ; ret
0x0000020000053aa5 : add byte ptr [rbp + rcx*4 + 0x66], cl ; xor byte ptr [rcx + 0x23], cl ; ret 0x8b45
0x00000200003c7354 : add byte ptr [rbp + rcx*4 + 0xd], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; ret
0x00000200006f0576 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0xbb67
0x000002000065af5e : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0xc767
0x00000200000f174a : add byte ptr [rbp + rcx*4 + 4], cl ; add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200003ca058 : add byte ptr [rbp + rcx*4 + 5], cl ; cwde ; ret 0xfff0
0x00000200004d119e : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x1846
0x0000020000184ae6 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xfd98
0x00000200005d9614 : add byte ptr [rbp + rdx*2 + 0x4d], al ; push rax ; call 0x20000208ac4
0x0000020000033677 : add byte ptr [rbp - 0x11], dh ; mov al, 1 ; ret
0x00000200003fae91 : add byte ptr [rbp - 0x1577f00a], al ; ret 0x15
0x00000200000797e5 : add byte ptr [rbp - 0x16198a40], al ; ret
0x00000200006688f6 : add byte ptr [rbp - 0x16], dh ; xor al, al ; ret
0x00000200003f0ea7 : add byte ptr [rbp - 0x17], dh ; call 0x200000bd0e5
0x00000200006688aa : add byte ptr [rbp - 0x17], dh ; xor al, al ; ret
0x0000020000140627 : add byte ptr [rbp - 0x1a], dh ; mov rax, rcx ; ret
0x000002000045f3c7 : add byte ptr [rbp - 0x1d3ebff4], cl ; add al, 0x81 ; ret 0xf7
0x0000020000140d07 : add byte ptr [rbp - 0x21], dh ; mov rax, rcx ; ret
0x000002000009fadd : add byte ptr [rbp - 0x22], dh ; mov qword ptr [r8 + 0x40], rcx ; ret
0x000002000026d427 : add byte ptr [rbp - 0x26], dl ; adc byte ptr [rax], al ; clc ; ret
0x000002000049ca98 : add byte ptr [rbp - 0x27], dh ; call 0x200000bd0e6
0x0000020000667439 : add byte ptr [rbp - 0x2c74eba8], cl ; call 0x20000294009
0x0000020000142007 : add byte ptr [rbp - 0x2e], dh ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000232470 : add byte ptr [rbp - 0x2e], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000408b11 : add byte ptr [rbp - 0x3d74feaf], cl ; ret
0x0000020000141fc2 : add byte ptr [rbp - 0x3eb0f040], al ; ret
0x000002000043daf9 : add byte ptr [rbp - 0x3ebbf040], al ; ret
0x00000200001d29f2 : add byte ptr [rbp - 0x3f6af040], al ; ret
0x0000020000471bd7 : add byte ptr [rbp - 0x42], dl ; push rdi ; add byte ptr [rcx], al ; ret
0x000002000023e8b7 : add byte ptr [rbp - 0x47], dl ; cmp al, byte ptr [rax] ; ret
0x000002000009b22d : add byte ptr [rbp - 0x577af040], al ; ret 0xe
0x00000200000b3b22 : add byte ptr [rbp - 0x6af0be40], al ; ret
0x00000200006f5354 : add byte ptr [rbp - 0x6c77f040], al ; ret 2
0x0000020000450e00 : add byte ptr [rbp - 0x6f], dh ; call 0x200000bd0e5
0x000002000006ebc0 : add byte ptr [rbp - 0x73], al ; outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000157a61 : add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x0000020000532978 : add byte ptr [rbp - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret
0x000002000018e9c8 : add byte ptr [rbp - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret 0xff48
0x000002000007eaf3 : add byte ptr [rbp - 0x73], cl ; pop rbp ; dec dword ptr [rcx - 0x75] ; ret
0x000002000055131c : add byte ptr [rbp - 0x74a18b25], al ; ret
0x000002000029642c : add byte ptr [rbp - 0x74b306b6], cl ; ret
0x000002000067628b : add byte ptr [rbp - 0x74b31bb6], cl ; ret
0x00000200004b32b1 : add byte ptr [rbp - 0x74b324b6], cl ; ret
0x0000020000681e4c : add byte ptr [rbp - 0x74b3bcb6], cl ; ret
0x000002000017ac39 : add byte ptr [rbp - 0x74b3e7b6], cl ; ret
0x00000200006d7d8c : add byte ptr [rbp - 0x74b729af], cl ; ret
0x0000020000208c8e : add byte ptr [rbp - 0x74bb008e], cl ; ret 0xfa8b
0x0000020000135ef4 : add byte ptr [rbp - 0x74bbcfa9], cl ; ret
0x000002000017ac6e : add byte ptr [rbp - 0x74bbfaad], cl ; ret
0x0000020000378952 : add byte ptr [rbp - 0x74c78b2e], al ; ret 0xe8c1
0x000002000043ef79 : add byte ptr [rbp - 0x74cf8a40], al ; ret
0x000002000056dc8c : add byte ptr [rbp - 0x74d68a40], al ; pop rbp ; mov al, 0xf6 ; ret
0x0000020000425d6a : add byte ptr [rbp - 0x74dd8725], al ; ret
0x00000200004b1a9c : add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000042ff7a : add byte ptr [rbp - 0x74e68a40], al ; ret
0x00000200003f3545 : add byte ptr [rbp - 0x74ea8725], al ; ret
0x00000200006e7f8f : add byte ptr [rbp - 0x75], al ; adc byte ptr [rax - 0x75], r9b ; ret
0x00000200005fa1d9 : add byte ptr [rbp - 0x75], al ; add eax, dword ptr [rbp + 0x3b] ; ret 0x860f
0x000002000002c6bc : add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6d5b : add byte ptr [rbp - 0x75], al ; ret 0x349
0x00000200003e3b9a : add byte ptr [rbp - 0x75], al ; ret 0x674
0x00000200006c80d3 : add byte ptr [rbp - 0x75], al ; ret 0x8341
0x0000020000178359 : add byte ptr [rbp - 0x75], al ; ret 0x8348
0x00000200002942c1 : add byte ptr [rbp - 0x75], al ; ret 0x8944
0x0000020000036e1d : add byte ptr [rbp - 0x75], al ; ret 0x8948
0x0000020000611a01 : add byte ptr [rbp - 0x75], al ; ret 0x8949
0x000002000004c3ce : add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x000002000006c9ba : add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000002d9e5 : add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200003b28c7 : add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x00000200006e5801 : add byte ptr [rbp - 0x75], al ; ret 0xb941
0x00000200001ea4ce : add byte ptr [rbp - 0x75], al ; ret 0xc149
0x0000020000230054 : add byte ptr [rbp - 0x75], cl ; adc al, 0xc2 ; jmp 0x20000230062
0x0000020000607354 : add byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200004cc94b : add byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0xc175
0x0000020000142d08 : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x000002000011c2be : add byte ptr [rbp - 0x75], cl ; or bl, ch ; call 0x1ffe9d44e11
0x00000200006f1dd8 : add byte ptr [rbp - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; ret 0xc148
0x0000020000038fee : add byte ptr [rbp - 0x75], cl ; push rsi ; and byte ptr [rbp - 0x75], cl ; ret 0xc149
0x0000020000033c7b : add byte ptr [rbp - 0x75], cl ; ret
0x000002000003ad54 : add byte ptr [rbp - 0x75], cl ; ret 0x6349
0x000002000020d97c : add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000cfa7a : add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x0000020000391b03 : add byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x00000200000c1376 : add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000069fce : add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200006d8acf : add byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x0000020000384cfa : add byte ptr [rbp - 0x75], cl ; ret 0x99e8
0x00000200001278ff : add byte ptr [rbp - 0x75], cl ; ret 0xc149
0x00000200003c9332 : add byte ptr [rbp - 0x75], cl ; ret 0xd233
0x00000200001831ad : add byte ptr [rbp - 0x75], cl ; ret 0xeae8
0x0000020000166865 : add byte ptr [rbp - 0x75], cl ; ret 0xeee8
0x00000200006d8b46 : add byte ptr [rbp - 0x75], cl ; ret 0xf41
0x000002000012ae46 : add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x00000200001327b7 : add byte ptr [rbp - 0x75], cl ; sub byte ptr [r13 - 0x75], al ; ret 0xf43
0x000002000006bff0 : add byte ptr [rbp - 0x75], cl ; xchg eax, esp ; int 0x80
0x000002000038b7b9 : add byte ptr [rbp - 0x75d78740], al ; ret
0x000002000061729f : add byte ptr [rbp - 0x7699d2be], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000002a79a : add byte ptr [rbp - 0x76], al ; ret 0x854d
0x00000200001fd375 : add byte ptr [rbp - 0x76], al ; ret 0x8b41
0x00000200000d9c18 : add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x00000200003cc599 : add byte ptr [rbp - 0x77], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200006ccda0 : add byte ptr [rbp - 0x77], al ; push rdi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000013cda7 : add byte ptr [rbp - 0x77], cl ; add cl, byte ptr [rbp + 3] ; ret
0x00000200000f9820 : add byte ptr [rbp - 0x77], cl ; pop rdi ; or byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x000002000004f013 : add byte ptr [rbp - 0x7b], al ; in al, -0x75 ; ret 0x840f
0x00000200003d7b84 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200003f2414 : add byte ptr [rbp - 0x7b], al ; sal dword ptr [rsi + rbx + 0xf], -0x4a ; ret
0x00000200001f678f : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x99 ; ret
0x000002000006b7ca : add byte ptr [rbp - 0x7b], cl ; in al, 0x74 ; jbe 0x2000006b763 ; ret
0x000002000018272b : add byte ptr [rbp - 0x7b], cl ; in al, 0x74 ; ret 0xb848
0x0000020000613c79 : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000310ed : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200001245dd : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x0000020000385fb4 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rcx + rdx + 0x48], 0x8b ; ret 0xc148
0x0000020000043fcf : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000002000004058f : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x00000200000dd147 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x5488
0x0000020000093d0e : add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000ca4e7 : add byte ptr [rbp - 0x7c], al ; ret
0x00000200000ca4de : add byte ptr [rbp - 0x7c], al ; ret 0x850f
0x00000200004448d6 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x85 ; ret
0x00000200004d4486 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x85 ; ret 0xc7b
0x000002000054d294 : add byte ptr [rbp - 0x7cb70da9], cl ; ret
0x00000200001e1a5d : add byte ptr [rbp - 0x7cb7feb2], cl ; ret
0x00000200005ff661 : add byte ptr [rbp - 0x7ee68b25], al ; ret
0x00000200006471d9 : add byte ptr [rbp - 0x9e68a40], al ; ret 0x7401
0x0000020000412d5e : add byte ptr [rbp - 0x9f68a3f], al ; ret
0x00000200001406dc : add byte ptr [rbp - 0xa], dh ; ret
0x00000200006eebb9 : add byte ptr [rbp - 0xbb8740], al ; ret 0x8b49
0x0000020000643c83 : add byte ptr [rbp - 0xd18a40], al ; ret
0x0000020000055d12 : add byte ptr [rbp - 0xda8b40], al ; ret
0x00000200006eebe2 : add byte ptr [rbp - 0xe48740], al ; ret 0x8b49
0x000002000043eb0e : add byte ptr [rbp - 0xf28a40], al ; ret
0x00000200001ba536 : add byte ptr [rbp - 0xf58740], al ; ret
0x0000020000436edd : add byte ptr [rbp - 0xf68740], al ; ret
0x00000200005627b4 : add byte ptr [rbx + 0x103], bh ; jmp 0x2000041ea8f
0x000002000015e17e : add byte ptr [rbx + 0x1511b225], al ; add byte ptr [rax], al ; ret
0x0000020000413a2d : add byte ptr [rbx + 0x18c93], cl ; add bh, dh ; ret 0x6000
0x0000020000119bc6 : add byte ptr [rbx + 0x194f2b05], cl ; add byte ptr [rbx], al ; ret
0x000002000009983b : add byte ptr [rbx + 0x21c9ee05], cl ; add byte ptr [rbx], al ; ret
0x000002000066ec9a : add byte ptr [rbx + 0x2240a25], al ; add byte ptr [rax], al ; ret
0x000002000012abb6 : add byte ptr [rbx + 0x226c1b0d], cl ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200000abbe3 : add byte ptr [rbx + 0x22bc6e05], cl ; add byte ptr [rbx], bh ; ret 0x860f
0x000002000053e28e : add byte ptr [rbx + 0x234104e2], al ; ret 0x345
0x00000200006dfe3d : add byte ptr [rbx + 0x2341ffca], al ; ret
0x00000200006e48a1 : add byte ptr [rbx + 0x2341ffca], al ; ret 0xe0c1
0x0000020000507958 : add byte ptr [rbx + 0x23d8f7c2], cl ; ret 0xc23b
0x000002000011170d : add byte ptr [rbx + 0x23f90405], cl ; add byte ptr [rbx], bh ; ret
0x000002000010f001 : add byte ptr [rbx + 0x2423600d], cl ; add byte ptr [rax + 0x2b], cl ; ret 0x8841
0x00000200000f9c9f : add byte ptr [rbx + 0x24f41a05], cl ; add byte ptr [rbx], ch ; ret 0xe083
0x0000020000232892 : add byte ptr [rbx + 0x28c90], cl ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x000002000060679c : add byte ptr [rbx + 0x2c8941c2], cl ; xchg bh, bh ; ret 0x840f
0x000002000005fed2 : add byte ptr [rbx + 0x2f11cf35], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003b5add : add byte ptr [rbx + 0x32c2444], cl ; ret 0x4489
0x000002000004e7f6 : add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x000002000066eac8 : add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x00000200004d91ec : add byte ptr [rbx + 0x358d4cfd], cl ; ret 0x1d0e
0x00000200000e1ea1 : add byte ptr [rbx + 0x37312f9], al ; mov al, 1 ; ret
0x0000020000434658 : add byte ptr [rbx + 0x37504f9], al ; xor eax, eax ; ret
0x0000020000021af7 : add byte ptr [rbx + 0x3a], ch ; ret 1
0x00000200000da682 : add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x000002000004fac0 : add byte ptr [rbx + 0x3c8d4ef0], cl ; or dh, dh ; ret
0x0000020000519b97 : add byte ptr [rbx + 0x4061e8d8], cl ; ret
0x0000020000481fde : add byte ptr [rbx + 0x418b3052], cl ; add al, 0x2b ; ret 0xc085
0x00000200001c4c9a : add byte ptr [rbx + 0x440f01f9], al ; ret 0x521
0x00000200006e57fb : add byte ptr [rbx + 0x4448e], cl ; add byte ptr [rbp - 0x75], al ; ret 0xb941
0x00000200006e5cdb : add byte ptr [rbx + 0x4448f], cl ; add byte ptr [rbp - 0x75], al ; ret 0xb941
0x000002000051579d : add byte ptr [rbx + 0x4600b8c8], cl ; ret
0x000002000070f2ba : add byte ptr [rbx + 0x4800f065], al ; lea ecx, dword ptr [rbp - 0x20] ; call qword ptr [rdi]
0x00000200000e20a7 : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x28 ; ret
0x000002000043008a : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x48 ; ret
0x000002000042e543 : add byte ptr [rbx + 0x48482444], cl ; add esp, 0x38 ; ret
0x0000020000473dad : add byte ptr [rbx + 0x48], dh ; mov ecx, ebx ; call 0x2000009d471
0x000002000045f9e7 : add byte ptr [rbx + 0x48c18bc8], cl ; add esp, 0x28 ; ret
0x000002000014746b : add byte ptr [rbx + 0x48c28bd0], cl ; add esp, 0x28 ; ret
0x000002000066233f : add byte ptr [rbx + 0x48c301e0], al ; mov dword ptr [rcx + 0x70], edx ; ret
0x00000200006014a8 : add byte ptr [rbx + 0x4c8b48c2], cl ; ret
0x00000200003d6083 : add byte ptr [rbx + 0x4d8d4106], cl ; jmp qword ptr [rbx]
0x000002000007d14f : add byte ptr [rbx + 0x4d8d4cc3], cl ; cmp byte ptr [rbp - 0x75], cl ; ret
0x00000200000ebb86 : add byte ptr [rbx + 0x531c80], cl ; add byte ptr [rax + 3], cl ; ret 0x1ba
0x000002000014c56e : add byte ptr [rbx + 0x538b0843], cl ; sbb byte ptr [rbx], bh ; ret 0x3373
0x000002000041d7d0 : add byte ptr [rbx + 0x578bf4c0], al ; or byte ptr [rbx], bh ; ret 0x820f
0x00000200000b0534 : add byte ptr [rbx + 0x58d48c8], cl ; ret 0xf50a
0x00000200001e0dd3 : add byte ptr [rbx + 0x5d], bl ; ret
0x000002000011eb92 : add byte ptr [rbx + 0x5f8b0c57], cl ; sbb al, 0xff ; ret 0xf41
0x000002000025d227 : add byte ptr [rbx + 0x62], cl ; add byte ptr [rax], r8b ; ret 0x25
0x000002000025d226 : add byte ptr [rbx + 0x62], r9b ; add byte ptr [rax], r8b ; ret 0x25
0x00000200000d6589 : add byte ptr [rbx + 0x694c2451], cl ; ret 0x170
0x00000200000c47a8 : add byte ptr [rbx + 0x7500047b], al ; ret
0x00000200004ae642 : add byte ptr [rbx + 0x75020879], al ; or edi, edi ; ret 0xfa83
0x0000020000510bec : add byte ptr [rbx + 0x75c085d8], cl ; test al, 0x8b ; ret
0x00000200002342b6 : add byte ptr [rbx + 0x79483], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200000d9e95 : add byte ptr [rbx + 0x9081], cl ; add byte ptr [rbx], bh ; ret 0x1d74
0x0000020000515d84 : add byte ptr [rbx + 0x9889], al ; add byte ptr [rcx], al ; ret
0x000002000021cf4c : add byte ptr [rbx + 0xa489], cl ; add byte ptr [rbx], ah ; ret
0x000002000008dfe9 : add byte ptr [rbx + 0xa493], cl ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x000002000066a897 : add byte ptr [rbx + 0xac89], cl ; add bh, bh ; ret
0x000002000045f8bb : add byte ptr [rbx + 0xba0846], cl ; add bh, bh ; jmp qword ptr [rbx]
0x00000200002942bb : add byte ptr [rbx + 0xbcde205], cl ; add byte ptr [rbp - 0x75], al ; ret 0x8944
0x00000200003cc7f9 : add byte ptr [rbx + 0xfc085f0], cl ; mov dl, ah ; ret
0x00000200001843b6 : add byte ptr [rbx + 0xfc33b01], cl ; fdivr dword ptr [rbx] ; ret 0x375
0x0000020000095de2 : add byte ptr [rbx + 0xfca3ac1], cl ; ret 0x8ac3
0x00000200004ae88b : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x000002000010a1a4 : add byte ptr [rbx + 1], dh ; ret
0x00000200000c3bba : add byte ptr [rbx + 3], dh ; xor eax, eax ; ret
0x000002000005500f : add byte ptr [rbx + 4], dh ; mov qword ptr [r8], rax ; ret
0x00000200004234c5 : add byte ptr [rbx + r8 - 0x37], cl ; jmp r9
0x0000020000722257 : add byte ptr [rbx + rax + 0x15], cl ; stc ; in eax, dx ; ret 0x41ff
0x00000200004234c6 : add byte ptr [rbx + rax - 0x37], cl ; jmp r9
0x000002000022da2d : add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x00000200006655d5 : add byte ptr [rbx + rax - 0x50], bh ; add ebx, eax ; xor al, al ; ret
0x00000200004bfea6 : add byte ptr [rbx + rax - 0x50], dh ; add ebx, eax ; xor al, al ; ret
0x000002000015c826 : add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x00000200003a4202 : add byte ptr [rbx + rbx*8 - 0x5b147e88], 0xf6 ; ret
0x0000020000721f62 : add byte ptr [rbx + rcx*4 + 0x1d], al ; push rdx ; ret 0x48ff
0x00000200005f86ae : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0xd591
0x00000200003925cd : add byte ptr [rbx + rcx*4 + 0x3d], cl ; ret
0x000002000005d9d6 : add byte ptr [rbx + rcx*4 + 0x41], cl ; and byte ptr [rax - 1], cl ; ret 0x3b4c
0x00000200004a5ddd : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x0000020000175535 : add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x50 ; jmp 0x20000061847
0x000002000050cc93 : add byte ptr [rbx + rcx*4 + 0x4d], cl ; add byte ptr [rcx - 0x75], al ; ret
0x000002000005c808 : add byte ptr [rbx + rcx*4 + 0x4d], cl ; and dh, dh ; ret
0x00000200003d3241 : add byte ptr [rbx + rcx*4 + 0x52], al ; xor byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000053cd19 : add byte ptr [rbx + rcx*4 + 0x61], cl ; or al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xffb2
0x0000020000081f47 : add byte ptr [rbx + rcx*4 + 0x65], al ; sub al, 0xf6 ; ret
0x000002000068aa13 : add byte ptr [rbx + rcx*4 + 5], al ; xchg eax, ebp ; ret
0x0000020000611020 : add byte ptr [rbx + rcx*4 + 5], cl ; clc ; call rbx
0x0000020000574c48 : add byte ptr [rbx + rcx*4 + 5], cl ; clc ; ret
0x0000020000135054 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0x21
0x00000200005af776 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xda18
0x00000200004abcc7 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xffe2
0x000002000021030e : add byte ptr [rbx + rcx*4 - 0x2e], cl ; test rax, rax ; jne 0x20000210321 ; ret
0x00000200004b56b7 : add byte ptr [rbx + rcx*4 - 0x31], cl ; call 0x200000e1c0f
0x000002000050c4b7 : add byte ptr [rbx + rcx*4 - 0x3d], cl ; call 0x200001389d3
0x00000200001d5c2c : add byte ptr [rbx + rcx*4 - 0x3d], cl ; call rdi
0x00000200004d7f99 : add byte ptr [rbx + rcx*4 - 0x40], cl ; call 0x200000ff577
0x00000200000b021e : add byte ptr [rbx + rcx*4 - 0x54], cl ; ret 0x508
0x00000200000b858c : add byte ptr [rbx + rcx*4 - 0x7c], cl ; ret 0x248
0x00000200006d4911 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d5088 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54e7 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x50] ; call rbx
0x00000200006d528a : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rdi + 0x58] ; call rbx
0x0000020000568dc4 : add byte ptr [rbx + rcx*4], al ; ret 0x1ba
0x00000200000cb602 : add byte ptr [rbx + rdi + 0x34], cl ; ret 0x840f
0x00000200005bca4d : add byte ptr [rbx + rdi - 0x2f], al ; jae 0x200005bca5e ; mov al, 1 ; ret
0x00000200001ea4fa : add byte ptr [rbx + rsi - 0x7c], cl ; ret
0x00000200001815df : add byte ptr [rbx + rsi*2 - 0xa], dh ; ret
0x00000200000a7c74 : add byte ptr [rbx + rsi*8 - 0x75], dh ; ret 0x8b4d
0x0000020000475601 : add byte ptr [rbx - 0x13cc1738], cl ; ret
0x00000200004efe33 : add byte ptr [rbx - 0x1714742d], cl ; ret
0x0000020000646bdc : add byte ptr [rbx - 0x17ab1428], cl ; ret 0xfffb
0x000002000065b6b0 : add byte ptr [rbx - 0x1d3eb72f], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x6975
0x00000200003b84ae : add byte ptr [rbx - 0x1f7cf91f], al ; ret
0x00000200004c421b : add byte ptr [rbx - 0x1f7cf91f], al ; ret 0xb41
0x000002000027d3c3 : add byte ptr [rbx - 0x24], al ; jo 0x2000027d3ce ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000021e3f : add byte ptr [rbx - 0x25], al ; ret 0
0x000002000066c13e : add byte ptr [rbx - 0x3074b72b], cl ; mov rsi, rax ; call rbx
0x000002000023d533 : add byte ptr [rbx - 0x30ffc63e], bl ; ret 0x39
0x000002000044724d : add byte ptr [rbx - 0x3274b608], cl ; call 0x20000068fd9
0x00000200006f5d1d : add byte ptr [rbx - 0x3a4bdffb], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4c50
0x00000200006feeda : add byte ptr [rbx - 0x3b7cb73d], cl ; jo 0x200006fef45 ; ret
0x0000020000487900 : add byte ptr [rbx - 0x3b7cb73d], cl ; pop rbx ; ret
0x0000020000471bdf : add byte ptr [rbx - 0x3d], cl ; push rdi ; add byte ptr [rcx], cl ; ret 0x57
0x00000200001f1347 : add byte ptr [rbx - 0x3ddcb7ff], cl ; ret
0x0000020000396a47 : add byte ptr [rbx - 0x3e36003e], cl ; call 0x20048fb9d64
0x0000020000396e2b : add byte ptr [rbx - 0x3e36003e], cl ; call 0x20048fba148
0x00000200001bd6ba : add byte ptr [rbx - 0x3ef00f3e], cl ; sbb byte ptr [r11], al ; ret 0xc23b
0x000002000070514c : add byte ptr [rbx - 0x3f7cb7ef], cl ; adc dh, dh ; ret 0x481f
0x0000020000039fee : add byte ptr [rbx - 0x40], cl ; jne 0x2000003a031 ; ret
0x000002000012b451 : add byte ptr [rbx - 0x4374b63a], cl ; ret 0xd80
0x00000200001d9b1b : add byte ptr [rbx - 0x4797dbb4], cl ; ret
0x000002000072f39e : add byte ptr [rbx - 0x4885f5f3], al ; call qword ptr [rax]
0x00000200001a3fb2 : add byte ptr [rbx - 0x48f0ba39], cl ; ret 0xc7ff
0x00000200000462c4 : add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x000002000003d7cf : add byte ptr [rbx - 0x49f04bab], cl ; ret 0xb41
0x000002000012a848 : add byte ptr [rbx - 0x6374b63f], cl ; ret 0xd80
0x0000020000280fc3 : add byte ptr [rbx - 0x63ffec34], ch ; jmp qword ptr [rdi]
0x000002000050df02 : add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x000002000048cbf0 : add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x000002000024d2b7 : add byte ptr [rbx - 0x6ffff59a], al ; ret 0x24
0x00000200004716e4 : add byte ptr [rbx - 0x7017fbb2], cl ; ret
0x000002000050e7dc : add byte ptr [rbx - 0x7374b63f], cl ; ret
0x000002000012b751 : add byte ptr [rbx - 0x7374b63f], cl ; ret 0xd80
0x00000200003c75ac : add byte ptr [rbx - 0x73f0fd06], al ; ret 1
0x00000200001a7446 : add byte ptr [rbx - 0x74978c22], cl ; ret
0x000002000065cf06 : add byte ptr [rbx - 0x74b3cfad], cl ; ret
0x00000200006ca808 : add byte ptr [rbx - 0x74b3ef83], cl ; loopne 0x200006ca7a3 ; ret
0x000002000072d401 : add byte ptr [rbx - 0x74b3fbbf], cl ; ret 0x589
0x00000200006d05d6 : add byte ptr [rbx - 0x74b6c01f], al ; ret 0x3b4d
0x000002000003dfb1 : add byte ptr [rbx - 0x74b7dbb1], cl ; ret
0x00000200005f13a3 : add byte ptr [rbx - 0x74b7e78f], cl ; ret 0xb48
0x0000020000052b9d : add byte ptr [rbx - 0x74b7f83f], al ; ret
0x00000200001e7209 : add byte ptr [rbx - 0x74baafab], cl ; ret 0x8548
0x000002000021b9ba : add byte ptr [rbx - 0x74bbdba4], cl ; ret
0x0000020000568a70 : add byte ptr [rbx - 0x74bbf7a9], cl ; ret
0x00000200001ba4d0 : add byte ptr [rbx - 0x74c2892a], cl ; ret 0x8d48
0x00000200000fb646 : add byte ptr [rbx - 0x76cfdbb4], cl ; add al, 0xeb ; ret 0x5f6
0x00000200005a0074 : add byte ptr [rbx - 0x78f0fe08], al ; ret 0xf3e7
0x00000200005eac61 : add byte ptr [rbx - 0x79f0fe08], al ; ret
0x00000200003a9377 : add byte ptr [rbx - 0x7abe992a], cl ; ret 0x850f
0x000002000070967c : add byte ptr [rbx - 0x7af0fec2], al ; ret 1
0x000002000063849d : add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x00000200000f67fd : add byte ptr [rbx - 0x7bbecbbd], cl ; ret 0x974
0x000002000005c31f : add byte ptr [rbx - 0x7bf00006], al ; ret
0x000002000014841c : add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x00000200005ee846 : add byte ptr [rbx - 0x7bf0f017], al ; ret
0x0000020000590326 : add byte ptr [rbx - 0x7bf0f620], al ; push rbp ; ret 0xfff1
0x00000200000b2525 : add byte ptr [rbx - 0x7bf0f807], al ; ret
0x00000200003faf59 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000200000a11e2 : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0
0x0000020000222d27 : add byte ptr [rbx - 0x7bf0fe03], al ; ret
0x000002000050e707 : add byte ptr [rbx - 0x7cb60038], al ; ret 0x4d04
0x00000200006d1927 : add byte ptr [rbx - 0x7cb70740], al ; ret
0x000002000039c784 : add byte ptr [rbx - 0x7cb750ab], cl ; rol dword ptr [rdx], -0x7d ; ret 0x4802
0x000002000036fb55 : add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001de9bc : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x00000200004f9220 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200004a8fce : add byte ptr [rbx - 0x7cbfdbbc], cl ; rcl byte ptr [rax], 3 ; ret 0x5f41
0x0000020000281023 : add byte ptr [rbx - 0x7ffae60], dl ; jmp qword ptr [rdi]
0x0000020000365ae9 : add byte ptr [rbx - 0x860b3e3], cl ; push rsi ; ret
0x00000200003eb67f : add byte ptr [rbx - 0x9431402], cl ; ret
0x0000020000604300 : add byte ptr [rbx - 0x987dba4], cl ; ret
0x00000200003b64d5 : add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x0000020000417456 : add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x000002000013019e : add byte ptr [rbx - 0xb7ffda], al ; ret
0x00000200004df1a0 : add byte ptr [rbx - 9], cl ; call 0x20000109f7f
0x00000200004a8f61 : add byte ptr [rbx], 0 ; add byte ptr [rcx + 3], al ; ret 0xc503
0x000002000039b030 : add byte ptr [rbx], 0 ; add byte ptr [rcx + 3], al ; ret 0xc803
0x000002000054d43d : add byte ptr [rbx], 0 ; add cl, ch ; ret 0xe8fa
0x0000020000052284 : add byte ptr [rbx], ah ; enter -0x48f1, 0x45 ; ret 0xc80b
0x0000020000240fdf : add byte ptr [rbx], ah ; mov ah, 4 ; add al, al ; jmp qword ptr [rbx]
0x0000020000173c5f : add byte ptr [rbx], ah ; ret
0x0000020000215d7a : add byte ptr [rbx], ah ; ret 0x3b41
0x00000200000c70bb : add byte ptr [rbx], ah ; ret 0x4789
0x00000200002916df : add byte ptr [rbx], ah ; ret 0x63
0x000002000027cb17 : add byte ptr [rbx], ah ; ret 0x70
0x000002000014d905 : add byte ptr [rbx], ah ; ret 0x8041
0x000002000013855c : add byte ptr [rbx], ah ; ret 0x8489
0x00000200004ba5fc : add byte ptr [rbx], ah ; ret 0x8941
0x00000200004524e1 : add byte ptr [rbx], ah ; ret 0xc23b
0x000002000036ef0d : add byte ptr [rbx], ah ; ret 0xc73b
0x000002000051205f : add byte ptr [rbx], ah ; ret 0xd08b
0x0000020000490f75 : add byte ptr [rbx], ah ; rol byte ptr [rbx], 1 ; ret 0xe8c1
0x000002000001f987 : add byte ptr [rbx], ah ; scasb al, byte ptr [rdi] ; jp 0x2000001f9af ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000000a33d : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x00000200004c0fa3 : add byte ptr [rbx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x000002000002a8d9 : add byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001775a8 : add byte ptr [rbx], al ; jmp 0x200000682f1
0x0000020000472430 : add byte ptr [rbx], al ; jo 0x20000472441 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x20000472402
0x0000020000034aa0 : add byte ptr [rbx], al ; ret
0x000002000020a001 : add byte ptr [rbx], al ; ret 0x4166
0x00000200001d930e : add byte ptr [rbx], al ; ret 0x48b
0x000002000066a9b8 : add byte ptr [rbx], al ; ret 0x8445
0x0000020000058e26 : add byte ptr [rbx], al ; ret 0x850f
0x00000200001a865e : add byte ptr [rbx], al ; ret 0x8966
0x0000020000712ea1 : add byte ptr [rbx], al ; ret 0x8d48
0x00000200002215fd : add byte ptr [rbx], al ; ret 0xc123
0x00000200001fb9fe : add byte ptr [rbx], al ; ret 0xc23b
0x00000200006176e3 : add byte ptr [rbx], al ; ret 0xf799
0x000002000056b077 : add byte ptr [rbx], al ; sal dword ptr [rbx], 1 ; sal bh, 1 ; ret 0xc000
0x00000200004fb10d : add byte ptr [rbx], al ; sar bh, cl ; ret 0x5489
0x0000020000111348 : add byte ptr [rbx], al ; shl byte ptr [rsi - 0x77], 0x4d ; ret
0x000002000026834f : add byte ptr [rbx], bh ; add byte ptr [rcx], bl ; ret 0x5309
0x0000020000176847 : add byte ptr [rbx], bh ; enter -0x3875, 0x74 ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200000fc265 : add byte ptr [rbx], bh ; fmul dword ptr [rdi] ; ret
0x000002000002557d : add byte ptr [rbx], bh ; ret
0x00000200000a4298 : add byte ptr [rbx], bh ; ret 0x10ba
0x00000200005afff0 : add byte ptr [rbx], bh ; ret 0x1275
0x000002000001fb7f : add byte ptr [rbx], bh ; ret 0x1883
0x0000020000233e75 : add byte ptr [rbx], bh ; ret 0x1b72
0x00000200000d9e9b : add byte ptr [rbx], bh ; ret 0x1d74
0x000002000066c72e : add byte ptr [rbx], bh ; ret 0x2173
0x00000200005b002c : add byte ptr [rbx], bh ; ret 0x2a74
0x000002000059a82e : add byte ptr [rbx], bh ; ret 0x4466
0x00000200005e283e : add byte ptr [rbx], bh ; ret 0x4575
0x00000200000f8bf7 : add byte ptr [rbx], bh ; ret 0x470f
0x00000200005efb77 : add byte ptr [rbx], bh ; ret 0x676
0x0000020000615df7 : add byte ptr [rbx], bh ; ret 0x7675
0x000002000050f462 : add byte ptr [rbx], bh ; ret 0x777
0x00000200001c19ca : add byte ptr [rbx], bh ; ret 0x820f
0x00000200004c00d6 : add byte ptr [rbx], bh ; ret 0x840f
0x00000200003d6871 : add byte ptr [rbx], bh ; ret 0x850f
0x00000200000abbe9 : add byte ptr [rbx], bh ; ret 0x860f
0x000002000018bb87 : add byte ptr [rbx], bh ; ret 0x870f
0x00000200004ace5f : add byte ptr [rbx], bh ; ret 0x8b44
0x000002000003c9d4 : add byte ptr [rbx], bh ; ret 0x8d0f
0x0000020000112204 : add byte ptr [rbx], bh ; ret 0x973
0x0000020000666759 : add byte ptr [rbx], bh ; ret 0xa73
0x00000200001fd9d8 : add byte ptr [rbx], bh ; ret 0xa74
0x00000200001e86cc : add byte ptr [rbx], bh ; ret 0xa77
0x0000020000215466 : add byte ptr [rbx], bh ; ret 0xc77
0x000002000021a61f : add byte ptr [rbx], bh ; ret 0xc7e
0x00000200001060a6 : add byte ptr [rbx], bh ; ret 0xc7f
0x0000020000448250 : add byte ptr [rbx], bh ; ret 0xe475
0x000002000017ff26 : add byte ptr [rbx], bh ; ret 0xe675
0x00000200004b8ea9 : add byte ptr [rbx], bh ; ret 0xe775
0x000002000059361d : add byte ptr [rbx], bh ; ret 0xe875
0x000002000017ff59 : add byte ptr [rbx], bh ; ret 0xea75
0x000002000023695c : add byte ptr [rbx], bh ; ret 0xf72
0x00000200001fe2ee : add byte ptr [rbx], bh ; ret 0xf74
0x0000020000369711 : add byte ptr [rbx], bh ; ret 0xf774
0x0000020000131626 : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0x3b49
0x0000020000131668 : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0x8d48
0x00000200000ae613 : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200003823a0 : add byte ptr [rbx], bl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000382396 : add byte ptr [rbx], bl ; add byte ptr [rsi - 0x7d], ah ; jmp qword ptr [rax]
0x00000200002134ca : add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x0000020000020ef7 : add byte ptr [rbx], bl ; ret
0x000002000024234b : add byte ptr [rbx], bl ; ret 5
0x0000020000020957 : add byte ptr [rbx], ch ; out 5, eax ; add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x0000020000146c62 : add byte ptr [rbx], ch ; ret
0x00000200000ca9ad : add byte ptr [rbx], ch ; ret 0x3b41
0x0000020000138b4d : add byte ptr [rbx], ch ; ret 0x4389
0x000002000047d250 : add byte ptr [rbx], ch ; ret 0x448b
0x00000200000abbf1 : add byte ptr [rbx], ch ; ret 0x589
0x00000200001d8853 : add byte ptr [rbx], ch ; ret 0x8966
0x00000200007077ae : add byte ptr [rbx], ch ; ret 0x8b48
0x00000200004534ee : add byte ptr [rbx], ch ; ret 0xbee9
0x000002000020c2f1 : add byte ptr [rbx], ch ; ret 0xc803
0x00000200001c19d2 : add byte ptr [rbx], ch ; ret 0xc83b
0x0000020000061a87 : add byte ptr [rbx], ch ; ret 0xd08b
0x00000200000e4e6b : add byte ptr [rbx], ch ; ret 0xd233
0x0000020000060075 : add byte ptr [rbx], ch ; ret 0xd38b
0x000002000006ca46 : add byte ptr [rbx], ch ; ret 0xe083
0x00000200005dd1a2 : add byte ptr [rbx], ch ; ret 0xf803
0x00000200000b76a1 : add byte ptr [rbx], ch ; ret 0xf883
0x0000020000470c88 : add byte ptr [rbx], cl ; add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x00000200000eeb3c : add byte ptr [rbx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a4e4b : add byte ptr [rbx], cl ; fldpi ; ret
0x00000200003f8ed5 : add byte ptr [rbx], cl ; ret
0x00000200000d93ac : add byte ptr [rbx], cl ; ret 0x4b89
0x00000200003f92ad : add byte ptr [rbx], cl ; ret 0xba0f
0x0000020000555cb2 : add byte ptr [rbx], cl ; ret 0xc883
0x0000020000485057 : add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x00000200002714bb : add byte ptr [rbx], dh ; call qword ptr [rcx]
0x000002000021ddba : add byte ptr [rbx], dh ; call rbx
0x00000200001e7c09 : add byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; ret 0x11b0
0x00000200003d23ff : add byte ptr [rbx], dh ; dec dword ptr [rbp + rcx*4 + 0x35] ; imul ebx ; ret 0x44ff
0x000002000005035c : add byte ptr [rbx], dh ; dec dword ptr [rcx - 0x9c3db84] ; ret
0x00000200003c02dd : add byte ptr [rbx], dh ; div bh ; ret 0
0x00000200004c1b81 : add byte ptr [rbx], dh ; div bh ; ret 0xfff0
0x0000020000439785 : add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x0000020000126058 : add byte ptr [rbx], dh ; div dh ; ret
0x00000200004596b6 : add byte ptr [rbx], dh ; fcomi st(7) ; ret 0xffff
0x000002000061346a : add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x2b] ; ret
0x00000200004642f1 : add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x3b] ; ret
0x00000200006d88af : add byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; ret 0x8948
0x0000020000021289 : add byte ptr [rbx], dh ; fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x00000200005e76a7 : add byte ptr [rbx], dh ; imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffee
0x000002000066aae2 : add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x000002000044cc95 : add byte ptr [rbx], dh ; in eax, dx ; xor r12d, r12d ; call 0x20000072651
0x000002000013240c : add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x00000200005b1b8e : add byte ptr [rbx], dh ; leave ; call 0x200004dde25
0x00000200006c54de : add byte ptr [rbx], dh ; leave ; call r9
0x00000200006e7cb8 : add byte ptr [rbx], dh ; leave ; call rbx
0x0000020000191f9d : add byte ptr [rbx], dh ; leave ; jmp 0x200000be1e1
0x00000200000fcc6d : add byte ptr [rbx], dh ; leave ; mov al, cl ; ret
0x00000200004491fa : add byte ptr [rbx], dh ; ret
0x000002000007b324 : add byte ptr [rbx], dh ; ret 0x8348
0x0000020000228746 : add byte ptr [rbx], dh ; ret 0x8d48
0x00000200000f4426 : add byte ptr [rbx], dh ; rol bl, 0x41 ; mov eax, ecx ; ret
0x00000200003a51d6 : add byte ptr [rbx], dh ; rol bl, 0x49 ; mov eax, edx ; jmp 0x200003a519d
0x00000200001c4daf : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000674aa5 : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001ca2e7 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x000002000045a593 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x00000200001bd69b : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000051d0d1 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x73], cl ; sbb r15b, dil ; ret 0x8948
0x00000200004f42ee : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000637b46 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000115349 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000061d5de : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200001e94f9 : add byte ptr [rbx], dh ; ror byte ptr [rbp - 0x74b3c0b6], cl ; ret
0x000002000002556b : add byte ptr [rbx], dh ; sal al, 0xf ; mov cl, 0x1d ; ret 0x288f
0x0000020000415b37 : add byte ptr [rbx], dh ; sal bh, 1 ; ret 0x7000
0x0000020000416b33 : add byte ptr [rbx], dh ; sal dh, 1 ; ret 0x7547
0x0000020000147ec8 : add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000049e401 : add byte ptr [rbx], dh ; shr al, cl ; movsxd rbx, esp ; ret
0x000002000012047b : add byte ptr [rbx], dh ; shr al, cl ; or eax, 0x8bfff27d ; ret
0x000002000039f7ed : add byte ptr [rbx], dh ; shr al, cl ; ret
0x000002000062eace : add byte ptr [rbx], dh ; shr al, cl ; ret 0xc042
0x000002000040d53a : add byte ptr [rbx], dh ; shr al, cl ; xchg eax, edx ; ret
0x00000200005b9db6 : add byte ptr [rbx], dh ; shr bl, 0 ; add rsp, 0x18 ; ret
0x00000200004e346a : add byte ptr [rbx], dh ; test byte ptr [rdx - 0x74bb38bb], 0x4d ; ret
0x000002000050bb92 : add byte ptr [rcx + 0x1000c5], al ; add byte ptr [rax + 3], cl ; ret
0x00000200005065d5 : add byte ptr [rcx + 0x109fe801], dh ; ret
0x00000200003f7f2a : add byte ptr [rcx + 0x10fb], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004f68b7 : add byte ptr [rcx + 0x11081], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000194e65 : add byte ptr [rcx + 0x1a], bh ; call 0x200001510a8
0x000002000057caac : add byte ptr [rcx + 0x2344fffa], bh ; ret 0x6aeb
0x00000200003ac132 : add byte ptr [rcx + 0x23], al ; ret
0x000002000042ae1b : add byte ptr [rcx + 0x23], al ; ret 0x2345
0x00000200001a2ff6 : add byte ptr [rcx + 0x23], al ; ret 0x3b41
0x0000020000555c20 : add byte ptr [rcx + 0x23], al ; ret 0x4166
0x0000020000646981 : add byte ptr [rcx + 0x23], al ; ret 0x4589
0x0000020000555ca8 : add byte ptr [rcx + 0x23], al ; ret 0x8966
0x000002000022243c : add byte ptr [rcx + 0x23], al ; ret 0x8d45
0x000002000005a4cd : add byte ptr [rcx + 0x23], al ; ret 0xebd3
0x0000020000083b1a : add byte ptr [rcx + 0x23], al ; rol dword ptr [rcx - 0x3f], -0x20 ; add cl, byte ptr [rbx] ; ret 0x225
0x00000200000305c7 : add byte ptr [rcx + 0x23], cl ; ret
0x00000200004c0fc4 : add byte ptr [rcx + 0x23], cl ; ret 0x2b49
0x00000200000f67b3 : add byte ptr [rcx + 0x23], cl ; ret 0x348
0x00000200001e978b : add byte ptr [rcx + 0x23], cl ; ret 0x3b48
0x000002000007c322 : add byte ptr [rcx + 0x23], cl ; ret 0x8d4c
0x000002000054bedd : add byte ptr [rcx + 0x23], cl ; ret 0xb849
0x000002000018e9bb : add byte ptr [rcx + 0x23], cl ; ret 0xba49
0x000002000045bae4 : add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x0000020000162bb6 : add byte ptr [rcx + 0x2b], al ; ret
0x00000200001786ce : add byte ptr [rcx + 0x2b], al ; ret 0x8b44
0x0000020000186eed : add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000ad574 : add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200003ec5b3 : add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a5e2a : add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x00000200000b36e9 : add byte ptr [rcx + 0x31], cl ; and r14b, r14b ; ret
0x0000020000215489 : add byte ptr [rcx + 0x33], al ; leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000020c7a8 : add byte ptr [rcx + 0x33], al ; ret
0x00000200002278c9 : add byte ptr [rcx + 0x33], al ; ret 0x25
0x00000200002278d1 : add byte ptr [rcx + 0x33], al ; ret 0x4489
0x0000020000051ec2 : add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x00000200001fb51f : add byte ptr [rcx + 0x33], cl ; ret
0x000002000007bb01 : add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200001e66cf : add byte ptr [rcx + 0x33], cl ; ret 0xb841
0x00000200000ac014 : add byte ptr [rcx + 0x39], al ; cmp esi, dword ptr [rdx - 0x17] ; ret 0xfffa
0x0000020000176834 : add byte ptr [rcx + 0x3a], al ; ret 0x1475
0x00000200006e920b : add byte ptr [rcx + 0x3a], al ; ret 0x473
0x00000200005e1f50 : add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x000002000066859d : add byte ptr [rcx + 0x3b], al ; push rax ; add al, 0x73 ; jbe 0x20000668538 ; ret 0x3949
0x00000200000cedcb : add byte ptr [rcx + 0x3b], al ; ret
0x000002000044509d : add byte ptr [rcx + 0x3b], al ; ret 0x2f77
0x00000200003f302c : add byte ptr [rcx + 0x3b], al ; ret 0x55e9
0x00000200000a25e8 : add byte ptr [rcx + 0x3b], al ; ret 0x820f
0x000002000041e704 : add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000149d2d : add byte ptr [rcx + 0x3b], al ; ret 0x8e0f
0x000002000044fc3a : add byte ptr [rcx + 0x3b], al ; ret 0xe575
0x000002000003c8fe : add byte ptr [rcx + 0x3b], al ; sal byte ptr [rbp + 8], 0x3a ; xchg eax, ecx ; ret
0x00000200006d0201 : add byte ptr [rcx + 0x3b], al ; sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x000002000008032e : add byte ptr [rcx + 0x3b], cl ; fmul dword ptr [rdi + rcx + 0x42] ; ret
0x000002000006cc17 : add byte ptr [rcx + 0x3b], cl ; ret
0x00000200000928b3 : add byte ptr [rcx + 0x3b], cl ; ret 0x6574
0x000002000008fe65 : add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x000002000017bc71 : add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000092911 : add byte ptr [rcx + 0x3b], cl ; ret 0xa275
0x00000200004c0f74 : add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200000d37d1 : add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x000002000009291d : add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x000002000020daff : add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x000002000036946f : add byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x21], 0xf6 ; ret 0x7504
0x000002000026d253 : add byte ptr [rcx + 0x400010c7], al ; ret 0x26
0x0000020000482f46 : add byte ptr [rcx + 0x400f9], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000200001a87df : add byte ptr [rcx + 0x4589c745], cl ; ret
0x00000200006cb107 : add byte ptr [rcx + 0x52886], cl ; add byte ptr [rcx - 0x75], al ; ret
0x00000200006fe8fd : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbp ; ret
0x000002000029422b : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dd205 : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000091e23 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x00000200001287eb : add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x0000020000044151 : add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x000002000007d487 : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x0000020000391fb8 : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000853fe : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003161d : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000393c6d : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000014127f : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000002f670 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000010f228 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000397006 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005f42f1 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006446b6 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200005be4d7 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x000002000005e401 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000116b17 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000108164 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000097f2c : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000eaab8 : add byte ptr [rcx + 0x5e], al ; pop rdi ; ret
0x000002000046f019 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000036f5ba : add byte ptr [rcx + 0x5e], al ; ret
0x0000020000393580 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003c5ccb : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003d5cbf : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200004f0bda : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000002d994 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000007aa30 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rsi ; pop rbx ; ret
0x00000200000ee72f : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000064338 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200001ee2d0 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop r12 ; ret
0x0000020000076b81 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rbx ; ret
0x00000200002312e8 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000084f20 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbx ; pop rbp ; ret
0x0000020000644c1a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f6a4 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000c03af : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000041c933 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004bf512 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000006ecd3 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200001e9a8a : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004ed0cd : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000280f83 : add byte ptr [rcx + 0x6000519d], bl ; jmp qword ptr [rdi]
0x0000020000368e19 : add byte ptr [rcx + 0x63], cl ; ret
0x0000020000151303 : add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200003a4e14 : add byte ptr [rcx + 0x8010ce], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000876bb : add byte ptr [rcx + 0xb], cl ; ret
0x000002000006c72a : add byte ptr [rcx + 0xb], cl ; ret 0x23e9
0x000002000007907f : add byte ptr [rcx + 0xb], cl ; ret 0x2548
0x000002000006c652 : add byte ptr [rcx + 0xb], cl ; ret 0x47f7
0x0000020000058242 : add byte ptr [rcx + 0xb], cl ; ret 0xc748
0x000002000058f372 : add byte ptr [rcx + 0xb], cl ; ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x00000200005c6d53 : add byte ptr [rcx + 0xd], bh ; call 0x20000032fc8
0x000002000036bb70 : add byte ptr [rcx + 0xf024b4], cl ; add byte ptr [rax], al ; call qword ptr [r14]
0x000002000003cd20 : add byte ptr [rcx + 0xf], al ; fdivr st(7), st(0) ; ret 0xff00
0x00000200003aafee : add byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; add al, byte ptr [rcx - 1] ; ret 0x34c
0x000002000002c5f9 : add byte ptr [rcx + 0xf], al ; mov bh, 0x47 ; add ah, byte ptr [rsi - 0x7b] ; ret 0x840f
0x000002000058673c : add byte ptr [rcx + 0xf], al ; mov bh, 0xc9 ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000051fe0 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; sbb dh, dh ; ret 0xf20
0x00000200000fd2a9 : add byte ptr [rcx + 0xf], al ; mov dh, 0xc1 ; mov cr8, rax ; ret
0x000002000049e5ca : add byte ptr [rcx + 0xf], al ; mov edx, 0x8b4c08eb ; ret
0x00000200003d63a0 : add byte ptr [rcx + 0xf], al ; ret
0x000002000017e4ec : add byte ptr [rcx + 0xf], al ; ret 0x4489
0x000002000012a8f5 : add byte ptr [rcx + 0xf], al ; scasd eax, dword ptr [rdi] ; ret
0x00000200000ed789 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000020000033966 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8948
0x000002000003e088 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x8844
0x00000200006119f1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x000002000004f59b : add byte ptr [rcx + 0xf], cl ; mov edx, 0x830f0be4 ; ret 1
0x0000020000085ad6 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 0x2b], 1 ; ret 0x8d4a
0x000002000010e08a : add byte ptr [rcx + 0xfffe2], al ; add byte ptr [rax + 3], cl ; ret 0xc148
0x00000200001a21c9 : add byte ptr [rcx + 3], al ; enter -0x48f1, 4 ; ret
0x00000200001851f4 : add byte ptr [rcx + 3], al ; ret
0x0000020000208ea0 : add byte ptr [rcx + 3], al ; ret 0x3eb
0x00000200000aadfb : add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000061a824 : add byte ptr [rcx + 3], al ; ret 0x85c7
0x000002000021c02c : add byte ptr [rcx + 3], al ; ret 0x873b
0x00000200005a68fb : add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000061a789 : add byte ptr [rcx + 3], al ; ret 0x8944
0x00000200004a8f64 : add byte ptr [rcx + 3], al ; ret 0xc503
0x000002000039b033 : add byte ptr [rcx + 3], al ; ret 0xc803
0x000002000046d283 : add byte ptr [rcx + 3], al ; rol dword ptr [rbp + 3], cl ; ret
0x00000200001f106c : add byte ptr [rcx + 3], al ; ror dword ptr [rbp + 3], cl ; ret
0x000002000011b0b1 : add byte ptr [rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x0000020000048c21 : add byte ptr [rcx + 3], cl ; leave ; jmp 0x20000048bf6
0x000002000065161e : add byte ptr [rcx + 3], cl ; leave ; jmp rcx
0x0000020000056b96 : add byte ptr [rcx + 3], cl ; ret
0x0000020000709aa3 : add byte ptr [rcx + 3], cl ; ret 0x348
0x000002000005c90c : add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000007d305 : add byte ptr [rcx + 3], cl ; ret 0x3b49
0x000002000007c90f : add byte ptr [rcx + 3], cl ; ret 0x8948
0x000002000009f754 : add byte ptr [rcx + 3], cl ; ret 0x8b49
0x000002000005b018 : add byte ptr [rcx + 3], cl ; ret 0xc148
0x00000200006ccf1b : add byte ptr [rcx + 3], cl ; ret 0xc9ff
0x0000020000470c8b : add byte ptr [rcx + 3], cl ; ret 0xe0ff
0x000002000005e41c : add byte ptr [rcx + 3], cl ; xlatb ; jmp rdx
0x000002000011a4e7 : add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x000002000044431a : add byte ptr [rcx + 5], bh ; call 0x2000007229d
0x00000200001b9e9a : add byte ptr [rcx + rax + 0x25], al ; ret 0xfc7
0x000002000010373d : add byte ptr [rcx + rax], ah ; ret
0x000002000067b00a : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; ret
0x000002000061cbfb : add byte ptr [rcx + rax], bh ; jne 0x2000061cc0e ; movzx eax, r10w ; jmp 0x2000061cc7f
0x0000020000516a52 : add byte ptr [rcx + rbx*8 - 0x17], dh ; ret 0x9bf
0x000002000065d5c8 : add byte ptr [rcx + rcx*4 + 0x1b], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005ac986 : add byte ptr [rcx + rcx*4 + 0x35], cl ; ret 0xfd9
0x0000020000497b71 : add byte ptr [rcx + rcx*4 + 0x51], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4410
0x000002000064971e : add byte ptr [rcx + rcx*4 + 0x65], al ; ret
0x00000200003bcbd8 : add byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x78 ; call 0x200003b8e58
0x0000020000703b2f : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x20 ; call 0x2000047fd9c
0x000002000021b889 : add byte ptr [rcx + rcx*4 + 0x75], 0x88 ; call r9
0x00000200000acbf1 : add byte ptr [rcx + rcx*4 + 0x7a], cl ; sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000200004b8734 : add byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x40 ; inc edx ; jmp 0x200004b86fb
0x00000200004b4399 : add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x0000020000668921 : add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x000002000037933d : add byte ptr [rcx + rcx*4 + 2], cl ; add rsp, 0x28 ; ret
0x00000200006688d5 : add byte ptr [rcx + rcx*4 + 8], cl ; mov al, 1 ; ret
0x00000200000ed1e6 : add byte ptr [rcx + rcx*4 + 9], cl ; mov eax, r8d ; ret
0x00000200000e68f1 : add byte ptr [rcx + rcx*4 - 0x51], cl ; add al, 0 ; add al, ch ; ret 0x772
0x000002000018b047 : add byte ptr [rcx + rcx*4 - 0x60], cl ; push -0x74fffffa ; ret
0x00000200003bebc7 : add byte ptr [rcx + rcx*8 - 0x74b3be8c], al ; ret 0xc2f6
0x0000020000064e8d : add byte ptr [rcx + rdi + 0x1d], al ; xchg eax, edi ; ret
0x000002000018f261 : add byte ptr [rcx + rdi + 0x3d], al ; ret
0x00000200003e6593 : add byte ptr [rcx + rdi + 0x57], al ; and byte ptr [rdi], cl ; test cl, dl ; ret
0x00000200003e6705 : add byte ptr [rcx + rdi + 0x57], al ; cmp byte ptr [rdi], cl ; test bh, al ; ret 0x16
0x00000200003e6800 : add byte ptr [rcx + rdi + 0x57], al ; je 0x200003e6795 ; jmp 0x20000552a4d
0x000002000022707f : add byte ptr [rcx + rdx - 0x75], dh ; ret
0x000002000021992d : add byte ptr [rcx - 0x17dfdbbc], cl ; int1 ; ret 0
0x00000200003c0312 : add byte ptr [rcx - 0x1d], al ; add esi, edi ; ret
0x00000200006e9685 : add byte ptr [rcx - 0x2f], al ; ret 0x68e9
0x00000200004b7289 : add byte ptr [rcx - 0x2f], cl ; jmp 0x1ffc2f7fd80
0x0000020000280fef : add byte ptr [rcx - 0x33ffec33], bh ; jmp qword ptr [rdi]
0x0000020000039b18 : add byte ptr [rcx - 0x39], cl ; ret
0x00000200003db927 : add byte ptr [rcx - 0x39], cl ; ret 0
0x00000200004f64a9 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000200007202d0 : add byte ptr [rcx - 0x3cf0a6eb], cl ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000200006176dd : add byte ptr [rcx - 0x3d], ch ; std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000257fbf : add byte ptr [rcx - 0x3e], cl ; or al, 0 ; ret
0x00000200006e962d : add byte ptr [rcx - 0x3f], al ; ret 0xe904
0x00000200006e97d4 : add byte ptr [rcx - 0x3f], al ; ret 0xeb07
0x00000200004292ad : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc275dec5
0x000002000042ac39 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc275f851
0x00000200000a2559 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc32d7274
0x000002000004f56c : add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200003f6c9e : add byte ptr [rcx - 0x3f], cl ; clc ; adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200000ea958 : add byte ptr [rcx - 0x3fccf3bf], cl ; ret
0x0000020000098f99 : add byte ptr [rcx - 0x41], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000008620f : add byte ptr [rcx - 0x42], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000067ea96 : add byte ptr [rcx - 0x43], al ; add eax, 0xf6000010 ; ret 0x7508
0x00000200005f7d78 : add byte ptr [rcx - 0x48], al ; insd dword ptr [rdi], dx ; and byte ptr [rax], ah ; call 0x20000294009
0x00000200003f7d9c : add byte ptr [rcx - 0x48], al ; insd dword ptr [rdi], dx ; push rbx ; movsxd rbp, eax ; pop rax ; ret 0xffe9
0x0000020000567ac1 : add byte ptr [rcx - 0x48], al ; js 0x20000567ad0 ; ret 0xc148
0x0000020000467ca1 : add byte ptr [rcx - 0x48], al ; push rax ; jo 0x20000467d23 ; jne 0x20000467c9a ; push rbx ; ret
0x00000200005e1532 : add byte ptr [rcx - 0x48], al ; push rax ; jo 0x200005e15a4 ; movsxd rbp, eax ; ret 0xcb2a
0x00000200003b841d : add byte ptr [rcx - 0x49f0b3b8], cl ; ret 0xe8d1
0x00000200002378a1 : add byte ptr [rcx - 0x4f], al ; add dword ptr [rdx], ecx ; ret
0x00000200003ec37c : add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200002092ae : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x000002000065d571 : add byte ptr [rcx - 0x73], al ; call 0x2004527d8c5
0x000002000041a9e6 : add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x000002000050b25e : add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x000002000045bd70 : add byte ptr [rcx - 0x73], al ; inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x0000020000097bbe : add byte ptr [rcx - 0x73], al ; jmp qword ptr [r11]
0x00000200000b3966 : add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x00000200004b43fb : add byte ptr [rcx - 0x73], al ; pop rsi ; adc esi, esi ; ret 0xf04
0x000002000009b9f5 : add byte ptr [rcx - 0x73], al ; pop rsi ; add dword ptr [rbx], edi ; ret
0x00000200006efd06 : add byte ptr [rcx - 0x73], al ; push rcx ; adc cl, byte ptr [rax - 1] ; ret
0x000002000018fa0c : add byte ptr [rcx - 0x73], al ; push rcx ; add ch, al ; ret
0x00000200000b0311 : add byte ptr [rcx - 0x73], al ; push rdx ; jmp qword ptr [rbx]
0x00000200006034f1 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x0000020000372c84 : add byte ptr [rcx - 0x73], cl ; add qword ptr [r13 + 0x2b], rcx ; ret
0x00000200004a9228 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 + 0x3b] ; ret 0x870f
0x00000200000ad764 : add byte ptr [rcx - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x3349
0x00000200003d2d00 : add byte ptr [rcx - 0x73], cl ; or byte ptr [rax - 0x7d], cl ; ret 0xe808
0x0000020000081495 : add byte ptr [rcx - 0x73], cl ; pop rdx ; dec dword ptr [rax - 0x75] ; ret
0x000002000045536b : add byte ptr [rcx - 0x7483dbbc], cl ; ret 0x8948
0x000002000004201f : add byte ptr [rcx - 0x74b2c7b9], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd80
0x0000020000127213 : add byte ptr [rcx - 0x74b758bb], cl ; ret
0x0000020000468060 : add byte ptr [rcx - 0x74b778bb], cl ; ret
0x000002000004c621 : add byte ptr [rcx - 0x74b7cbbd], cl ; ret 0xb48
0x0000020000468bf5 : add byte ptr [rcx - 0x74b7dfb5], cl ; ret
0x00000200006cd8e7 : add byte ptr [rcx - 0x74b7e7bb], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200006ccea7 : add byte ptr [rcx - 0x74b7e7bb], cl ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200005e7d41 : add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x4466
0x00000200003b3e28 : add byte ptr [rcx - 0x75], al ; adc al, 0x2b ; ret 0x341
0x000002000049089a : add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000020c7a5 : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x000002000021651f : add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200001c53b4 : add byte ptr [rcx - 0x75], al ; add dword ptr [rbp - 0xee8b40], eax ; ret 0x1139
0x00000200003d59a7 : add byte ptr [rcx - 0x75], al ; add ecx, dword ptr [rbx + 0x2c8d4417] ; ret 0xb848
0x00000200006e4794 : add byte ptr [rcx - 0x75], al ; fadd dword ptr [rbp + 3] ; ret 0x348
0x0000020000382fba : add byte ptr [rcx - 0x75], al ; fdivr st(7), st(0) ; sal esi, cl ; ret
0x00000200004b0c78 : add byte ptr [rcx - 0x75], al ; fmul qword ptr [rax - 0x75] ; ret 0xff48
0x0000020000433ad5 : add byte ptr [rcx - 0x75], al ; mov cl, 0xe8 ; add al, 0x23 ; ret
0x00000200004a4cd8 : add byte ptr [rcx - 0x75], al ; pop rbx ; or bh, dh ; ret
0x000002000003171b : add byte ptr [rcx - 0x75], al ; push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x000002000011bc73 : add byte ptr [rcx - 0x75], al ; push rdx ; add al, 0x83 ; ret 0x2307
0x0000020000054fe9 : add byte ptr [rcx - 0x75], al ; ret
0x00000200006d2cd4 : add byte ptr [rcx - 0x75], al ; ret 0x3344
0x00000200001d03f2 : add byte ptr [rcx - 0x75], al ; ret 0x348
0x00000200002953d5 : add byte ptr [rcx - 0x75], al ; ret 0x349
0x0000020000425415 : add byte ptr [rcx - 0x75], al ; ret 0x3b45
0x00000200006cb1c5 : add byte ptr [rcx - 0x75], al ; ret 0x3bb
0x0000020000295ab9 : add byte ptr [rcx - 0x75], al ; ret 0x41f0
0x000002000013fac3 : add byte ptr [rcx - 0x75], al ; ret 0x4cc3
0x0000020000672fcd : add byte ptr [rcx - 0x75], al ; ret 0x587
0x0000020000393e88 : add byte ptr [rcx - 0x75], al ; ret 0x8141
0x000002000009189f : add byte ptr [rcx - 0x75], al ; ret 0x8348
0x0000020000611f06 : add byte ptr [rcx - 0x75], al ; ret 0x8545
0x00000200005b15fd : add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x0000020000294aca : add byte ptr [rcx - 0x75], al ; ret 0x8b45
0x00000200001d6e0a : add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000045dcef : add byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200004a12be : add byte ptr [rcx - 0x75], al ; ret 0x950f
0x000002000049da62 : add byte ptr [rcx - 0x75], al ; ret 0xb41
0x00000200006d0a08 : add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200006ddb52 : add byte ptr [rcx - 0x75], al ; ret 0xbc49
0x00000200006dacf6 : add byte ptr [rcx - 0x75], al ; ret 0xbe49
0x00000200006d6f11 : add byte ptr [rcx - 0x75], al ; ret 0xbf48
0x00000200000f1b17 : add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x00000200006c80e3 : add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200000f0d8f : add byte ptr [rcx - 0x75], al ; ret 0xd233
0x0000020000033bd8 : add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200006548e2 : add byte ptr [rcx - 0x75], al ; ret 0xd366
0x00000200001a0126 : add byte ptr [rcx - 0x75], al ; ret 0xd62b
0x00000200000729f2 : add byte ptr [rcx - 0x75], al ; ret 0xe083
0x0000020000217983 : add byte ptr [rcx - 0x75], al ; ret 0xe2d3
0x00000200004acccb : add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000037025b : add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x00000200000a25bc : add byte ptr [rcx - 0x75], al ; ret 0xf066
0x00000200000f5ce8 : add byte ptr [rcx - 0x75], al ; ret 0xf741
0x0000020000294924 : add byte ptr [rcx - 0x75], al ; ret 0xff0
0x000002000045bd5a : add byte ptr [rcx - 0x75], al ; ret 0xffb9
0x00000200000ce18d : add byte ptr [rcx - 0x75], al ; rol byte ptr [rbp + 0x3b], 1 ; ret
0x00000200000d703e : add byte ptr [rcx - 0x75], al ; rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x000002000050e606 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000067f1e5 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x000002000005d309 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rax + 0xf], -0x51 ; ret
0x000002000043795e : add byte ptr [rcx - 0x75], al ; salc ; call 0x20000063ac7
0x000002000008f438 : add byte ptr [rcx - 0x75], al ; salc ; call rax
0x000002000045c055 : add byte ptr [rcx - 0x75], al ; sbb dh, bh ; ret
0x000002000008f1ba : add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200002274c4 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000516687 : add byte ptr [rcx - 0x75], cl ; add bh, bh ; ret 0x34d
0x00000200000de464 : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x00000200005d22b8 : add byte ptr [rcx - 0x75], cl ; and byte ptr [rcx - 0x75], al ; ret 0x8d48
0x000002000009e014 : add byte ptr [rcx - 0x75], cl ; dec dword ptr [rbx - 0x9a7dbb4] ; ret
0x0000020000634c4a : add byte ptr [rcx - 0x75], cl ; enter 0x3b4c, 5 ; stosd dword ptr [rdi], eax ; ret
0x000002000061703d : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x000002000059e459 : add byte ptr [rcx - 0x75], cl ; int 0xe8
0x000002000040cb11 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000031497
0x0000020000448e85 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000006a617
0x000002000038de11 : add byte ptr [rcx - 0x75], cl ; iretd ; call rax
0x00000200005333c0 : add byte ptr [rcx - 0x75], cl ; leave ; call 0x2000015d887
0x00000200000948f0 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 + 0x3b], r9b ; ret 0x1774
0x00000200005139ef : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x7d], cl ; ret 0x4818
0x000002000022961f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r9 - 0x7c], al ; ret
0x00000200004a7284 : add byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 3], cl ; ret 0xcaff
0x0000020000142d14 : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000045e5fe : add byte ptr [rcx - 0x75], cl ; or dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x00000200003d59c9 : add byte ptr [rcx - 0x75], cl ; or ecx, dword ptr [rbp - 0x74bb008e] ; ret 0xf503
0x000002000007ca1d : add byte ptr [rcx - 0x75], cl ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a90b8 : add byte ptr [rcx - 0x75], cl ; push rax ; lea rax, qword ptr [rax + r9*8] ; ret
0x00000200003f3448 : add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x000002000004672a : add byte ptr [rcx - 0x75], cl ; ret
0x00000200004863c6 : add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200000e44d1 : add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000063b15f : add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000111b34 : add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x00000200000d32f1 : add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x0000020000037aa7 : add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200001279b6 : add byte ptr [rcx - 0x75], cl ; ret 0x8a44
0x00000200000e1b72 : add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x00000200001eb632 : add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200006cd92a : add byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x000002000007aade : add byte ptr [rcx - 0x75], cl ; ret 0xb948
0x00000200000523e7 : add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000050e67b : add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200006d74dc : add byte ptr [rcx - 0x75], cl ; ret 0xdb33
0x0000020000128300 : add byte ptr [rcx - 0x75], cl ; ret 0xf6b9
0x00000200006c72bd : add byte ptr [rcx - 0x75], cl ; ret 0xf8bf
0x000002000037ef9f : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x000002000037ef2d : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe875
0x000002000037ec23 : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe975
0x00000200006c8be5 : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; ret
0x00000200003f81a0 : add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x0000020000051f41 : add byte ptr [rcx - 0x75], cl ; sbb dh, dh ; ret
0x000002000041581a : add byte ptr [rcx - 0x75], cl ; stc ; call 0x20000401a5a
0x00000200000852b5 : add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x0000020000130c9b : add byte ptr [rcx - 0x75], cl ; sub byte ptr [rax + 0x23], r9b ; ret 0x3b49
0x000002000008921d : add byte ptr [rcx - 0x75], cl ; xchg dword ptr [rax - 0xa000000], ebp ; ret
0x00000200000df91a : add byte ptr [rcx - 0x75], cl ; xchg eax, edi ; nop ; add al, 0 ; add dh, dh ; ret 0xf0f
0x00000200000ef551 : add byte ptr [rcx - 0x75c7dbac], cl ; ret 0xeac1
0x00000200004c9fff : add byte ptr [rcx - 0x76], al ; mul byte ptr [rsi - 0x7d] ; ret 0xf02
0x00000200000fd252 : add byte ptr [rcx - 0x76], al ; ret
0x00000200005ec875 : add byte ptr [rcx - 0x76], al ; ret 0x41c3
0x00000200003bf196 : add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200000a1be2 : add byte ptr [rcx - 0x76], al ; ret 0x8d49
0x000002000044efdf : add byte ptr [rcx - 0x76], dh ; ret 0xe8c0
0x000002000054c7da : add byte ptr [rcx - 0x77], al ; add al, 0x24 ; jmp 0x200003d8aa8
0x00000200004ba56a : add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x00000200004746f5 : add byte ptr [rcx - 0x77], al ; or al, 0x8b ; ret
0x0000020000087901 : add byte ptr [rcx - 0x77], al ; push rax ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000162b99 : add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x00000200001bc653 : add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x00000200000bec6d : add byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x00000200000c0764 : add byte ptr [rcx - 0x77], cl ; out dx, eax ; adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200001bc63d : add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x000002000067d343 : add byte ptr [rcx - 0x78], al ; or byte ptr [rax - 9], cl ; ret 0xfffc
0x0000020000448056 : add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200005a3024 : add byte ptr [rcx - 0x7b], al ; ret 0x61e9
0x0000020000506634 : add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200004bf43d : add byte ptr [rcx - 0x7b], al ; ret 0xc75
0x000002000007e2ad : add byte ptr [rcx - 0x7b], cl ; ret
0x0000020000577104 : add byte ptr [rcx - 0x7c], al ; fbstp dword ptr [rbp + rcx - 0xa] ; ret
0x0000020000063e42 : add byte ptr [rcx - 0x7c], al ; ret
0x00000200000e654a : add byte ptr [rcx - 0x7c], al ; ret 0x574
0x00000200000cb541 : add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x000002000019594b : add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x000002000011c465 : add byte ptr [rcx - 0x7cb780b3], cl ; ret 0x6608
0x00000200004043e3 : add byte ptr [rcx - 0x7d], al ; and byte ptr [rax], al ; ret
0x0000020000026739 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000018a738 : add byte ptr [rcx - 0x7d], al ; enter -0x16f8, 0x74 ; ret
0x00000200002940c2 : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200003c883b : add byte ptr [rcx - 0x7d], al ; ret
0x00000200003ecb4f : add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x000002000021fb3e : add byte ptr [rcx - 0x7d], al ; ret 0x457f
0x00000200005ea952 : add byte ptr [rcx - 0x7d], al ; ret 0x4803
0x00000200003b8d39 : add byte ptr [rcx - 0x7d], al ; ret 0x49e0
0x0000020000612054 : add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x00000200003c90ea : add byte ptr [rcx - 0x7d], al ; ret 0xe9e0
0x000002000040ee1a : add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x000002000004c2ee : add byte ptr [rcx - 0x7d], al ; ret 0xf618
0x000002000008fe46 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000200006190af : add byte ptr [rcx - 0x7d], cl ; ret 0x2302
0x0000020000142f3a : add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x0000020000124b8a : add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200000ece0a : add byte ptr [rcx - 0x7d], cl ; ret 0x4860
0x0000020000184336 : add byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000020000673c0d : add byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x00000200003ed4e8 : add byte ptr [rcx - 0x7d], cl ; ret 0x4cfe
0x000002000008eb74 : add byte ptr [rcx - 0x7d], cl ; ret 0x4d04
0x00000200006192fa : add byte ptr [rcx - 0x7d], cl ; ret 0x6602
0x0000020000157a22 : add byte ptr [rcx - 0x7d], cl ; ret 0xff02
0x00000200000937ea : add byte ptr [rcx - 0x7d], cl ; sar ch, 0x4d ; add eax, ecx ; jmp 0x200000937c0
0x000002000010eb68 : add byte ptr [rcx - 0x7e7527bb], cl ; ret
0x0000020000436e2f : add byte ptr [rcx - 0x7ebeefb8], cl ; ret
0x000002000056b0c9 : add byte ptr [rcx - 0x7f], al ; ret
0x000002000056b3e0 : add byte ptr [rcx - 0x7f], al ; ret 0x1000
0x00000200004df2c6 : add byte ptr [rcx - 0x7f], cl ; ret
0x00000200000c28be : add byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x0000020000084962 : add byte ptr [rcx - 0x7f], cl ; ret 0x2e00
0x000002000022f74e : add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x000002000010a693 : add byte ptr [rcx - 0x7f], cl ; ret 0xfff
0x0000020000031f86 : add byte ptr [rcx - 0x80], al ; call qword ptr [rax]
0x00000200006c86eb : add byte ptr [rcx - 0x80], al ; call rcx
0x000002000005f189 : add byte ptr [rcx - 0xa], al ; ret
0x000002000005d8bd : add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000018d3b4 : add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200003b3d23 : add byte ptr [rcx - 0xa], al ; ret 0x7403
0x000002000018d39c : add byte ptr [rcx - 0xa], al ; ret 0x7404
0x0000020000157a15 : add byte ptr [rcx - 0xa], al ; ret 0x7406
0x00000200000371eb : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x00000200003ac824 : add byte ptr [rcx - 0xa], al ; ret 0x7503
0x0000020000157a2e : add byte ptr [rcx - 0xa], al ; ret 0x7506
0x00000200000c305a : add byte ptr [rcx - 0xa], al ; ret 0x7508
0x000002000010e6ed : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200005a50d6 : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000002000018d3cc : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000200001037b4 : add byte ptr [rcx - 0xa], al ; ret 0xf20
0x00000200000729fe : add byte ptr [rcx - 0xa], al ; ret 0xff0
0x00000200004b891e : add byte ptr [rcx - 0xcf60bc], cl ; ret
0x000002000012562d : add byte ptr [rcx - 1], al ; ret
0x00000200003b8046 : add byte ptr [rcx - 1], al ; ret 0x3b44
0x000002000045dd08 : add byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000148699 : add byte ptr [rcx - 1], al ; ret 0x48e9
0x000002000013d1ab : add byte ptr [rcx - 1], al ; ret 0x8348
0x000002000005e9ac : add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005c296a : add byte ptr [rcx - 1], al ; ret 0x8948
0x00000200000260d9 : add byte ptr [rcx - 1], al ; ret 0x8a8b
0x000002000014783f : add byte ptr [rcx - 1], al ; ret 0x90e9
0x00000200000bb916 : add byte ptr [rcx - 1], al ; ret 0xd348
0x000002000050c8b4 : add byte ptr [rcx - 1], al ; rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x48d
0x000002000065d142 : add byte ptr [rcx - 1], cl ; leave ; jne 0x2000065d130 ; ret
0x00000200006c9ed5 : add byte ptr [rcx - 1], cl ; ret
0x00000200006c9e81 : add byte ptr [rcx - 1], cl ; ret 0x34c
0x000002000048946a : add byte ptr [rcx - 1], cl ; ret 0x894c
0x00000200006d137e : add byte ptr [rcx - 1], cl ; ret 0xff49
0x00000200000ce2b0 : add byte ptr [rcx - 2], al ; ret 0x8844
0x00000200000f9458 : add byte ptr [rcx - 9], al ; ret
0x00000200000b04d3 : add byte ptr [rcx - 9], al ; ret 0x417
0x00000200000731b5 : add byte ptr [rcx - 9], al ; ret 0x600
0x0000020000072a26 : add byte ptr [rcx - 9], al ; ret 0x700
0x000002000017224a : add byte ptr [rcx - 9], al ; rol byte ptr [rbp + 0x23], 1 ; ret 0xbee9
0x00000200001956c3 : add byte ptr [rcx - 9], al ; rol byte ptr [rbp + 0x23], 1 ; ret 0xf6e9
0x00000200000538fb : add byte ptr [rcx - 9], cl ; call 0x20049c7c455
0x00000200004a13fa : add byte ptr [rcx], 0 ; add bh, bh ; ret 0xd7eb
0x00000200000f7300 : add byte ptr [rcx], 0 ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x0000020000477f9f : add byte ptr [rcx], 0 ; add cl, ch ; ret
0x00000200003c468f : add byte ptr [rcx], 0x48 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000207133 : add byte ptr [rcx], ah ; je 0x2000020714a ; mov rcx, r14 ; call 0x200002333b1
0x00000200001ad5ed : add byte ptr [rcx], al ; add al, ch ; ret
0x000002000020c7dd : add byte ptr [rcx], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000028a9cf : add byte ptr [rcx], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x5f
0x000002000023d53f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, dl ; ret 0x39
0x000002000066f1d5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000291b87 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x3dff9c15], ah ; jmp 0x20000291bff
0x0000020000454355 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000028d3e7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; jmp qword ptr [rcx]
0x000002000024471b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 6
0x0000020000103695 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], dh ; ret
0x000002000023e8b3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x47], dl ; cmp al, byte ptr [rax] ; ret
0x00000200000f67af : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x348
0x000002000023b96b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add ch, ch ; ret
0x000002000024b547 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000025ea5b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add dl, ch ; adc eax, dword ptr [rdi] ; ret 0x4714
0x00000200004b7263 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000e1f23
0x000002000037c266 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000108516
0x0000020000501ad0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x2000014dd06
0x000002000067afee : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x2000067afff ; xor eax, eax ; ret
0x00000200003a0ea4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x00000200003884dc : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000111753 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000202e19 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000100917 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000601c49 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000015ca62 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x00000200003e3b98 : add byte ptr [rcx], al ; add byte ptr [rbp - 0x75], al ; ret 0x674
0x0000020000666757 : add byte ptr [rcx], al ; add byte ptr [rbx], bh ; ret 0xa73
0x00000200005e76a5 : add byte ptr [rcx], al ; add byte ptr [rbx], dh ; imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffee
0x000002000020dafd : add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200004bf43b : add byte ptr [rcx], al ; add byte ptr [rcx - 0x7b], al ; ret 0xc75
0x0000020000230111 : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bd058 : add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000292a63 : add byte ptr [rcx], al ; clts ; add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x0000020000250a33 : add byte ptr [rcx], al ; clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x000002000025d2bb : add byte ptr [rcx], al ; clts ; add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x000002000057565e : add byte ptr [rcx], al ; fmul dword ptr [rbx] ; ret 0x8941
0x00000200004754cf : add byte ptr [rcx], al ; je 0x200004754e0 ; add rsp, 0x28 ; ret
0x0000020000573bfb : add byte ptr [rcx], al ; jmp 0x20000450231
0x0000020000095cd9 : add byte ptr [rcx], al ; jne 0x20000095cf9 ; lock dec dword ptr [rcx] ; ret
0x00000200000967c1 : add byte ptr [rcx], al ; jne 0x200000967d4 ; lock and qword ptr [rcx], 0 ; ret
0x00000200000fe599 : add byte ptr [rcx], al ; jne 0x200000fe5a8 ; lock dec dword ptr [rcx] ; ret
0x00000200000aa8b6 : add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x200000aa883
0x000002000015e031 : add byte ptr [rcx], al ; ret
0x000002000003da7e : add byte ptr [rcx], al ; sete al ; ret
0x00000200005dde68 : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000236968 : add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x00000200000ab7d3 : add byte ptr [rcx], bh ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000020000645a38 : add byte ptr [rcx], bh ; sbb dword ptr [rdi], ecx ; ret 0xd233
0x0000020000268351 : add byte ptr [rcx], bl ; ret 0x5309
0x000002000001fd17 : add byte ptr [rcx], ch ; jne 0x2000001fcb1 ; ret
0x000002000065161b : add byte ptr [rcx], cl ; add byte ptr gs:[rcx + 3], cl ; leave ; jmp rcx
0x0000020000471be3 : add byte ptr [rcx], cl ; ret 0x57
0x00000200006e9f4e : add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000281927 : add byte ptr [rcx], dh ; ret
0x0000020000281863 : add byte ptr [rcx], dl ; ret 0x51
0x0000020000246507 : add byte ptr [rcx], dl ; ret 0xf00d
0x00000200001ad5ec : add byte ptr [rcx], r8b ; add al, ch ; ret
0x00000200000b41eb : add byte ptr [rdi + 0x11], bh ; mov eax, 1 ; ret
0x000002000025d23f : add byte ptr [rdi + 0x30004662], bh ; ret 0x25
0x000002000025d23e : add byte ptr [rdi + 0x30004662], r15b ; ret 0x25
0x00000200000211b7 : add byte ptr [rdi + 0x42], al ; ret 0xb1
0x000002000027d31b : add byte ptr [rdi + 0x5078], bl ; ret
0x00000200002916e7 : add byte ptr [rdi + 0x510063c2], dl ; ret 0x63
0x0000020000271017 : add byte ptr [rdi + 0x51], cl ; add r8b, r14b ; jmp qword ptr [rsi]
0x00000200001e1154 : add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200006282bd : add byte ptr [rdi + 0x5b], bl ; ret
0x000002000007e380 : add byte ptr [rdi + 0x5d], bl ; ret
0x0000020000117d47 : add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000008dc2d : add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200000a3c96 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001281c5 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000240f7b : add byte ptr [rdi + 0x600004b2], ch ; jmp qword ptr [rbx]
0x000002000026d31f : add byte ptr [rdi + 0x73], dh ; add spl, r15b ; ret 0x26
0x000002000026d31e : add byte ptr [rdi + 0x73], r14b ; add spl, r15b ; ret 0x26
0x000002000003c909 : add byte ptr [rdi + 1], bh ; ret
0x0000020000411a4d : add byte ptr [rdi + 4], dh ; mov al, r8b ; ret
0x00000200006004d7 : add byte ptr [rdi + rax + 0x33], dh ; shr al, cl ; mov bh, 0x28 ; ret
0x000002000060035a : add byte ptr [rdi + rax + 0x33], dh ; shr al, cl ; xor al, 0x2a ; ret
0x00000200000c2a83 : add byte ptr [rdi + rcx + 0x20], al ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200002948da : add byte ptr [rdi + rcx + 0x20], al ; mov byte ptr [rbp + 0xf], 0x22 ; ret 0x41f0
0x0000020000028b5e : add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001fdcc2 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x00000200001dc693 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x5488
0x000002000005ff93 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x000002000004853d : add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001d6ca8 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x0000020000097703 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x3345
0x000002000010e57e : add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x00000200000659bf : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x000002000007ebad : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4588
0x00000200000fd0aa : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x00000200001ad364 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4e80
0x00000200000f3803 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x0000020000064596 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x000002000023534f : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200000d80d0 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8d48
0x00000200001c02a8 : add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x0000020000096044 : add byte ptr [rdi + rcx + 0x22], al ; ror dword ptr [rax - 0x75], -0x38 ; call rdx
0x0000020000029fb3 : add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret 0x3270
0x0000020000104d8c : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; out dx, al ; ret 0x24
0x0000020000184e44 : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x1c
0x0000020000107fb8 : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x2490
0x000002000008bfb8 : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x2c50
0x0000020000054e2d : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; ret 0x2f
0x00000200000e4ce4 : add byte ptr [rdi + rcx + 0x22], al ; sal dh, 5 ; xchg eax, esi ; ret
0x00000200007289ae : add byte ptr [rdi + rcx + 0x44], cl ; ret
0x00000200003f98c2 : add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b48
0x00000200004a93d9 : add byte ptr [rdi + rcx + 0x45], al ; ret 0xbaeb
0x00000200001104df : add byte ptr [rdi + rcx + 0x45], cl ; ret
0x0000020000034e9b : add byte ptr [rdi + rcx + 0x46], al ; ret
0x000002000065d2c5 : add byte ptr [rdi + rcx + 0x47], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x00000200004d6364 : add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x0000020000046540 : add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000090699 : add byte ptr [rdi + rcx - 0x42], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000090087 : add byte ptr [rdi + rcx - 0x42], cl ; scasb al, byte ptr [rdi] ; ret
0x0000020000085c81 : add byte ptr [rdi + rcx - 0x44], al ; ret
0x000002000012af3c : add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x0000020000085c80 : add byte ptr [rdi + rcx - 0x44], r8b ; ret
0x00000200001b74e6 : add byte ptr [rdi + rcx - 0x49], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000121b83 : add byte ptr [rdi + rcx - 0x49], al ; pop rbp ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x00000200000e4bc5 : add byte ptr [rdi + rcx - 0x49], al ; push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x000002000013d470 : add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200001b449e : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8348
0x000002000038f8e7 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d49
0x000002000036f290 : add byte ptr [rdi + rcx - 0x49], al ; rol byte ptr [rcx - 0x75], cl ; ret 0xe0c1
0x00000200001b74c9 : add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000066ea2 : add byte ptr [rdi + rcx - 0x4a], al ; lodsd eax, dword ptr [rsi] ; ret
0x0000020000032278 : add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006768c8 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b4c
0x000002000067af54 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0xc4b9
0x00000200000415fe : add byte ptr [rdi + rcx - 0x4a], al ; scasd eax, dword ptr [rdi] ; ret
0x00000200000461ea : add byte ptr [rdi + rcx - 0x4a], al ; stosd dword ptr [rdi], eax ; ret
0x000002000020e160 : add byte ptr [rdi + rcx - 0x4a], al ; xor ecx, dword ptr [rax - 1] ; ret
0x00000200006ed237 : add byte ptr [rdi + rcx], al ; test byte ptr [rsi - 0x74fffce2], ah ; ret
0x00000200003b0120 : add byte ptr [rdi + rcx], al ; test dword ptr [rcx - 0x9ffe6ef], ebx ; ret
0x0000020000021397 : add byte ptr [rdi + rdi*2 + 0xcf63], dh ; add byte ptr [rax], al ; ret
0x000002000001e367 : add byte ptr [rdi + rdi*2], dl ; ret
0x000002000028d3ef : add byte ptr [rdi + rdi*8 + 0x21], dh ; add dl, bl ; jmp qword ptr [rcx]
0x0000020000053503 : add byte ptr [rdi + rdx*2], 0 ; add bl, ch ; adc bh, byte ptr [rbx] ; ret 0x1374
0x00000200000f3d3c : add byte ptr [rdi + rdx*4 - 0x17], dh ; lodsd eax, dword ptr [rsi] ; ret 0xa
0x000002000043febe : add byte ptr [rdi + rdx*8 - 0x17], dh ; ret 0x12e8
0x0000020000020f8f : add byte ptr [rdi - 0x20], dl ; ret
0x0000020000020247 : add byte ptr [rdi - 0x38], ch ; and bh, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x000002000029052b : add byte ptr [rdi - 0x45ffdd03], cl ; jmp qword ptr [rdx]
0x000002000023d27b : add byte ptr [rdi - 0x59], ch ; cmp dword ptr [rax], eax ; ret 0x23
0x000002000015dc78 : add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x000002000023d547 : add byte ptr [rdi - 0x73ffc63d], al ; ret
0x000002000015799f : add byte ptr [rdi - 0x75], dl ; ret 0xbf48
0x00000200004f6233 : add byte ptr [rdi], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000290c83 : add byte ptr [rdi], ah ; xor ah, byte ptr [rbx] ; ret
0x00000200000728a2 : add byte ptr [rdi], al ; add byte ptr [rax], al ; jne 0x200000728ce ; mov eax, ecx ; ret
0x0000020000235a73 : add byte ptr [rdi], al ; add byte ptr [rbp + 0xf], 0x47 ; ret 0x8545
0x00000200005f755a : add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x000002000023a3ff : add byte ptr [rdi], ch ; push rcx ; cmp byte ptr [rax], al ; mov dh, 0x51 ; cmp byte ptr [rax], al ; ret
0x0000020000718961 : add byte ptr [rdi], cl ; add al, ch ; ret
0x00000200000876b9 : add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x00000200006cef5f : add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x000002000015920f : add byte ptr [rdi], cl ; and al, bl ; ret
0x00000200000f500b : add byte ptr [rdi], cl ; mov bh, 0x41 ; ret
0x00000200003ab311 : add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x348
0x000002000053e5af : add byte ptr [rdi], cl ; mov bh, 0x50 ; add dh, dh ; ret 0x7404
0x000002000063c55a : add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x2000063c569 ; ret 0xc13b
0x000002000053eedc : add byte ptr [rdi], cl ; mov bh, 0x57 ; add dh, dh ; ret 0xf10
0x00000200001fd9f3 : add byte ptr [rdi], cl ; mov bh, 0x57 ; cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000013fd14 : add byte ptr [rdi], cl ; mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000140fdc : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 1 ; ret
0x0000020000140f7c : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 2 ; ret
0x0000020000140f5c : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 4 ; ret
0x0000020000140fbc : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 8 ; ret
0x00000200006178ee : add byte ptr [rdi], cl ; mov bh, 4 ; ret
0x0000020000031fea : add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x000002000004722f : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x000002000003e13d : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000040ad1 : add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x0000020000066669 : add byte ptr [rdi], cl ; mov dh, 0x90 ; ret
0x0000020000041241 : add byte ptr [rdi], cl ; mov dh, 0x91 ; ret
0x00000200000319cd : add byte ptr [rdi], cl ; mov dh, 0x93 ; ret
0x00000200000416fa : add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x00000200000962a1 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000174e6a : add byte ptr [rdi], cl ; mov dh, 5 ; push rsp ; ret
0x000002000059e482 : add byte ptr [rdi], cl ; mov ds, ebp ; ret
0x000002000006709e : add byte ptr [rdi], cl ; mov ds, word ptr [rbp + rdi*8 + 0x3ce9ffff] ; call qword ptr [rax]
0x0000020000665626 : add byte ptr [rdi], cl ; mov edx, 0x37211e0 ; mov al, 1 ; ret
0x000002000012c4ed : add byte ptr [rdi], cl ; mov edx, 0x820f0ee0 ; ret 0x864
0x00000200003d576c : add byte ptr [rdi], cl ; mov edx, 0x830f1de7 ; ret 0xfffd
0x000002000070d7b0 : add byte ptr [rdi], cl ; mov edx, 0x8b073071 ; ret
0x00000200006ef4de : add byte ptr [rdi], cl ; mov edx, 0xc61b252d ; call qword ptr [rax]
0x00000200000ffc6d : add byte ptr [rdi], cl ; mov edx, 0xf037473 ; xchg eax, edx ; ret 0x5488
0x000002000003c9cd : add byte ptr [rdi], cl ; mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x8d0f
0x0000020000292a67 : add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x0000020000292937 : add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x000002000036e5af : add byte ptr [rdi], cl ; or dword ptr [rax - 0x75], ecx ; push rbp ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000250a37 : add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x00000200002494db : add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x000002000065c377 : add byte ptr [rdi], cl ; popfq ; ret
0x000002000028b5bb : add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000242c2b : add byte ptr [rdi], cl ; push rsp ; or eax, dword ptr [rax] ; sysenter
0x00000200000fcd3d : add byte ptr [rdi], cl ; ret
0x0000020000482f4c : add byte ptr [rdi], cl ; ret 0x4389
0x00000200000c5edf : add byte ptr [rdi], cl ; ret 0x4489
0x00000200000f1a3f : add byte ptr [rdi], cl ; ret 0x4589
0x0000020000109725 : add byte ptr [rdi], cl ; ret 0x789
0x0000020000511f64 : add byte ptr [rdi], cl ; ret 0x8a44
0x000002000010950a : add byte ptr [rdi], cl ; ret 0xbb83
0x00000200001f09ba : add byte ptr [rdi], cl ; ret 0xc83a
0x00000200000a429f : add byte ptr [rdi], cl ; ret 0xd233
0x00000200000f89fa : add byte ptr [rdi], cl ; ret 0xd88a
0x0000020000460ec3 : add byte ptr [rdi], cl ; ror byte ptr [rax - 0x57], 5 ; jmp rax
0x00000200004496d0 : add byte ptr [rdi], cl ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200004496cb ; ret
0x00000200007157ba : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000020000089e2d : add byte ptr [rdi], cl ; sub dword ptr [rcx + rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xd775
0x0000020000175596 : add byte ptr [rdi], cl ; test ah, ch ; mov esp, 0xa7e9ffee ; ret 0xffee
0x0000020000561e07 : add byte ptr [rdi], cl ; test al, ah ; ret
0x00000200000555eb : add byte ptr [rdi], cl ; test al, al ; ret 0x11
0x0000020000198691 : add byte ptr [rdi], cl ; test bh, cl ; ret
0x000002000018b85d : add byte ptr [rdi], cl ; test byte ptr [rax - 0x17000df5], ch ; jmp qword ptr [rdi]
0x00000200000bd6c6 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x74fffffe], ah ; ret
0x0000020000077f5b : add byte ptr [rdi], cl ; test byte ptr [rax - 0x74ffffff], al ; ret
0x0000020000045fdb : add byte ptr [rdi], cl ; test byte ptr [rbp + rcx - 0x44800000], al ; ret
0x00000200004e22e6 : add byte ptr [rdi], cl ; test byte ptr [rbx - 0x74fff40d], bh ; ret
0x0000020000538181 : add byte ptr [rdi], cl ; test byte ptr [rbx], bl ; ret
0x00000200003cb20c : add byte ptr [rdi], cl ; test byte ptr [rcx - 0x7efffff9], al ; jmp qword ptr [rax]
0x0000020000168c75 : add byte ptr [rdi], cl ; test byte ptr [rcx], cl ; mov esp, 0x66e9ffec ; ret 0xffec
0x0000020000408d05 : add byte ptr [rdi], cl ; test byte ptr [rdx], bl ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200000ebd6b : add byte ptr [rdi], cl ; test byte ptr [rsi - 0xa000000], al ; ret 0xf08
0x00000200004f6e15 : add byte ptr [rdi], cl ; test byte ptr [rsi], ch ; sbb al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000545c19 : add byte ptr [rdi], cl ; test ch, dh ; ret 0xffe7
0x000002000017531d : add byte ptr [rdi], cl ; test ch, dl ; ret
0x000002000059e449 : add byte ptr [rdi], cl ; test dh, bh ; ret
0x0000020000175332 : add byte ptr [rdi], cl ; test dh, ch ; ret
0x00000200001361ce : add byte ptr [rdi], cl ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000002000059e48d : add byte ptr [rdi], cl ; test dl, dl ; ret
0x0000020000192861 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x17000d21], ebx ; ret
0x00000200004a13f7 : add byte ptr [rdi], cl ; test dword ptr [rax - 0xffffff], eax ; ret 0xd7eb
0x0000020000116b35 : add byte ptr [rdi], cl ; test dword ptr [rax], edx ; or dword ptr [r8], r8d ; ret
0x0000020000596ca1 : add byte ptr [rdi], cl ; test dword ptr [rax], edx ; ret 0xfff2
0x000002000059fe11 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x17000c22], esp ; ret
0x0000020000063dc0 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x75ffeeda], esi ; ret
0x000002000053fe11 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x17001974], ebp ; ret
0x000002000002d2a0 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x74fffffd], edi ; ret 0xba0f
0x00000200003a83f0 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x75ffe689], eax ; ret
0x0000020000168c99 : add byte ptr [rdi], cl ; test dword ptr [rbx], ebp ; ret
0x00000200000dd60e : add byte ptr [rdi], cl ; test dword ptr [rbx], ebx ; ret
0x0000020000118d0c : add byte ptr [rdi], cl ; test dword ptr [rcx + rbp - 0x49f0fff7], ebp ; ret
0x0000020000049ce6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x74ffeda7], edx ; ret
0x000002000048d40c : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x74fff095], ecx ; ret
0x00000200003a410e : add byte ptr [rdi], cl ; test dword ptr [rcx - 0xa000000], esi ; ret
0x00000200004b43ec : add byte ptr [rdi], cl ; test dword ptr [rcx - 0xa000000], esi ; ret 0xf01
0x00000200000ae0ff : add byte ptr [rdi], cl ; test dword ptr [rcx], ecx ; add eax, 0xb60f0000 ; ret 0x8d48
0x00000200000ffd15 : add byte ptr [rdi], cl ; test dword ptr [rdi + rbp - 0x7475fff6], ebx ; ret 0
0x000002000013d97f : add byte ptr [rdi], cl ; test dword ptr [rdi + rcx*8 - 0x49f0fff9], edx ; ret
0x0000020000480f78 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x74ffeff8], ebx ; ret
0x00000200000d4965 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x74fff3c4], ebp ; ret
0x000002000013a5f0 : add byte ptr [rdi], cl ; test dword ptr [rdi], ebp ; jmp 0x2000013a605
0x00000200004a0dc3 : add byte ptr [rdi], cl ; test dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x00000200003bbbfe : add byte ptr [rdi], cl ; test dword ptr [rdx + rcx - 0x74b30000], eax ; ret
0x0000020000418153 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x74ffeb7b], eax ; ret
0x000002000051dc04 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x74fff691], ebx ; ret
0x00000200003d50a4 : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x9ffe89b], esi ; ret
0x000002000046e7b5 : add byte ptr [rdi], cl ; test dword ptr [rdx], edi ; ficom word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000013f034 : add byte ptr [rdi], cl ; test dword ptr [rdx], edi ; mov edi, 0xb60f0007 ; ret
0x00000200004cb373 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x74fff314], ebp ; ret
0x000002000015c8a9 : add byte ptr [rdi], cl ; test dword ptr [rsi + 2], edx ; add byte ptr [rax], al ; call r10
0x0000020000389ca4 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x74ffe552], ebx ; ret
0x0000020000485a9e : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x74fff030], esp ; ret
0x00000200001228ae : add byte ptr [rdi], cl ; test dword ptr [rsi], esp ; mov edi, 0xb60f0008 ; ret
0x000002000007f629 : add byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret
0x0000020000596d09 : add byte ptr [rdi], cl ; test eax, esi ; ret 0xfff2
0x0000020000580225 : add byte ptr [rdi], cl ; test ecx, ebx ; ret
0x0000020000426229 : add byte ptr [rdi], cl ; test ecx, esi ; call qword ptr [rbx]
0x0000020000029c63 : add byte ptr [rdi], cl ; test ecx, esp ; ret 0x13
0x00000200001214cf : add byte ptr [rdi], cl ; test edi, esi ; leave ; or byte ptr [rax], al ; ret
0x00000200000ac36c : add byte ptr [rdi], cl ; test edx, ebp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000ac350 : add byte ptr [rdi], cl ; test esi, ecx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000043d574 : add byte ptr [rdi], cl ; test esi, edi ; call qword ptr [rdx]
0x0000020000168c87 : add byte ptr [rdi], cl ; test esi, edi ; mov ebx, 0x6ce9ffec ; ret 0xffec
0x0000020000425fde : add byte ptr [rdi], cl ; test esp, eax ; call qword ptr [rbx]
0x0000020000545c27 : add byte ptr [rdi], cl ; test esp, eax ; ret 0xffe7
0x000002000059e4cf : add byte ptr [rdi], cl ; test esp, ebx ; ret
0x00000200001ac8b6 : add byte ptr [rdi], cl ; xchg byte ptr [rsi - 0x74000901], ah ; ret
0x00000200001ac946 : add byte ptr [rdi], cl ; xchg byte ptr [rsi - 0x74000901], bh ; ret
0x000002000044c3d5 : add byte ptr [rdi], cl ; xchg dword ptr [rax + 0x6b], ebp ; adc al, byte ptr [rax] ; ret
0x00000200004ceb54 : add byte ptr [rdi], cl ; xchg dword ptr [rdi], eax ; ret 0xc
0x000002000006efa8 : add byte ptr [rdi], cl ; xchg dword ptr [rdx], esi ; add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200001ae7ba : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000617534 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200005fa8c3 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b4c
0x00000200006f5200 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc149
0x000002000057f929 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x00000200004a72fe : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xebc1
0x00000200000cac9e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000020000042068 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000604315 : add byte ptr [rdi], cl ; xchg eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000184da9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000469c0c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200001d6e48 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x000002000006d373 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b4c
0x000002000014ac7e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d48
0x000002000022b45a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200003cd491 : add byte ptr [rdi], cl ; xchg eax, esp ; rol al, 0xe0 ; add al, 0x32 ; ret
0x000002000008ea02 : add byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200001514fa : add byte ptr [rdi], cl ; xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x000002000015798a : add byte ptr [rdi], cl ; xor cl, byte ptr [rax - 0x3f] ; loop 0x200001579ba ; or rax, rdx ; pop rdi ; ret
0x0000020000275e17 : add byte ptr [rdi], dh ; ret
0x0000020000280c23 : add byte ptr [rdi], dl ; ret 0xf010
0x0000020000275e16 : add byte ptr [rdi], r14b ; ret
0x00000200003ffa50 : add byte ptr [rdx + 0x1208e801], dh ; ret
0x00000200004747c4 : add byte ptr [rdx + 0x2358db05], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006014ee : add byte ptr [rdx + 0x24548801], dh ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200001f6903 : add byte ptr [rdx + 0x3a0724c1], cl ; ret 0xa74
0x00000200001dff46 : add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x000002000026d237 : add byte ptr [rdx + 0x4004c69], al ; ret 0x26
0x000002000026d236 : add byte ptr [rdx + 0x4004c69], r8b ; ret 0x26
0x00000200004d1d9d : add byte ptr [rdx + 0x538a3043], cl ; cmp byte ptr [rdx], bh ; ret 0x820f
0x000002000041022f : add byte ptr [rdx + 0xa29e901], dh ; ret 0xccff
0x0000020000064f81 : add byte ptr [rdx + 0xa412046], cl ; ret 0x4688
0x00000200003ffdc2 : add byte ptr [rdx + 0xe96e801], dh ; ret
0x00000200006cef9f : add byte ptr [rdx + 1], bh ; jmp r8
0x00000200000e05ca : add byte ptr [rdx + 1], bh ; mov eax, edx ; ret
0x000002000009625e : add byte ptr [rdx + 1], dh ; ret
0x000002000067aff1 : add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x00000200001c5761 : add byte ptr [rdx + 6], dh ; mov eax, 0xc000000d ; ret
0x0000020000122b67 : add byte ptr [rdx + 8], dh ; mov al, 1 ; ret
0x00000200000f587d : add byte ptr [rdx + rbp*8 - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001c69f8 : add byte ptr [rdx + rcx - 0x75], dh ; add al, byte ptr [rcx + 0x23] ; ret
0x000002000002b9bc : add byte ptr [rdx + rcx - 0x75], dh ; or byte ptr [rbx], dil ; ret 0xf41
0x00000200000fb99a : add byte ptr [rdx + rcx*4 - 0x75], al ; ret
0x0000020000092a33 : add byte ptr [rdx + rcx*4 - 0x79], al ; ret
0x0000020000068540 : add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x0000020000067721 : add byte ptr [rdx + rcx*4 - 0x7e], al ; ret
0x000002000003b743 : add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x0000020000586697 : add byte ptr [rdx + rcx*4 - 2], al ; jmp 0x200004928d6
0x00000200001cd778 : add byte ptr [rdx + rdi - 0x3e], al ; jne 0x200001cd7dc ; mov r8b, dl ; jmp 0x200001cd7d2
0x0000020000031a61 : add byte ptr [rdx + rdi - 0x45], al ; ret
0x0000020000092e67 : add byte ptr [rdx + rdi - 0x49], al ; ret
0x00000200003f8731 : add byte ptr [rdx + rdx*2 - 0x75], dh ; ret
0x0000020000026a9d : add byte ptr [rdx + rdx*8 + 0x48a0474], al ; ret
0x00000200004450fa : add byte ptr [rdx + rdx*8 - 0x74b7958c], al ; ret
0x00000200000a7039 : add byte ptr [rdx + rdx*8 - 0x74b7ab87], al ; ret
0x00000200000ebc59 : add byte ptr [rdx + rsi*4 + 0x41], dh ; mov eax, edx ; jmp 0x200000ebc13
0x00000200001c617e : add byte ptr [rdx - 0x1b], dh ; xor eax, eax ; ret
0x00000200001396ff : add byte ptr [rdx - 0x1f], dh ; mov eax, dword ptr [rip + 0x217910] ; ret
0x000002000029052f : add byte ptr [rdx - 0x28ffdd01], bh ; jmp qword ptr [rdx]
0x000002000026d3ef : add byte ptr [rdx - 0x2bffb389], dl ; ret
0x000002000026d3ee : add byte ptr [rdx - 0x2bffb389], r10b ; ret
0x00000200001e80b8 : add byte ptr [rdx - 0x2e], dh ; mov rcx, rbx ; call 0x200000a4308
0x00000200003caf3e : add byte ptr [rdx - 0x3174b7ff], dh ; call r12
0x0000020000246a27 : add byte ptr [rdx - 0x32ffe83e], dh ; ret 0x17
0x0000020000403d7c : add byte ptr [rdx - 0x3474b7ff], dh ; call 0x20000030f79
0x00000200004050a7 : add byte ptr [rdx - 0x413e16ff], dh ; ret 0xccff
0x000002000012d4d5 : add byte ptr [rdx - 0x41], dh ; add rsp, 0x38 ; ret
0x000002000062fc35 : add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x0000020000712355 : add byte ptr [rdx - 0x4c], dh ; ret
0x000002000023d527 : add byte ptr [rdx - 0x64ffc63e], dl ; ret 0x39
0x00000200000917ac : add byte ptr [rdx - 0x6af0ddbf], cl ; ret 0xc232
0x00000200001972d1 : add byte ptr [rdx - 0x6db816ff], cl ; push rsi ; ret 0xf03
0x00000200003f1e49 : add byte ptr [rdx - 0x758fdba4], cl ; ret
0x000002000049650c : add byte ptr [rdx - 0x759fdba4], cl ; ret
0x000002000044f7b6 : add byte ptr [rdx - 0x77], cl ; ret 0x4218
0x000002000044f7a9 : add byte ptr [rdx - 0x77], cl ; ret 0x4820
0x00000200000c5d1f : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000c5d32 ; ret
0x00000200006d7e58 : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005da384 : add byte ptr [rdx], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000026ce9b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, ah ; ret 0x10
0x0000020000265a3b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, ch ; or byte ptr [rdx], cl ; ret
0x00000200002433b3 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x0000020000262b0b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, al ; ret
0x000002000024b577 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bh ; ret
0x000002000024bce3 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, cl ; ret
0x000002000027081f : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x2a], ah ; adc dword ptr [rax], eax ; ret 0x11d8
0x00000200002423a7 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 5
0x0000020000266847 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000002000024255b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], dh ; push rdi ; cmp eax, dword ptr [rax] ; ret 0x3b59
0x00000200001408c8 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000013c4d3 : add byte ptr [rdx], ah ; ret 0xd8f6
0x000002000025baf7 : add byte ptr [rdx], al ; adc al, 0xc ; add byte ptr [rsi + rax], cl ; ret
0x0000020000246503 : add byte ptr [rdx], al ; adc dword ptr [rdi], eax ; add byte ptr [rcx], dl ; ret 0xf00d
0x00000200006448a2 : add byte ptr [rdx], al ; add al, ch ; pop rdx ; ret
0x00000200006449b0 : add byte ptr [rdx], al ; add al, ch ; ret 0xffea
0x0000020000384e3e : add byte ptr [rdx], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000020ca1c : add byte ptr [rdx], al ; add byte ptr [rax + 3], cl ; ret
0x00000200005c78d5 : add byte ptr [rdx], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200002063d2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x00000200003704e6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200006e97fd : add byte ptr [rdx], al ; add byte ptr [rax], al ; call r11
0x00000200006e9bd2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call r9
0x00000200001c617b : add byte ptr [rdx], al ; add byte ptr [rax], al ; jb 0x200001c616e ; xor eax, eax ; ret
0x00000200003991ea : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200006135a6 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000022c777 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012941c : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000129b1d : add byte ptr [rdx], al ; add byte ptr [rax], al ; test rax, r8 ; je 0x20000129b30 ; ret
0x00000200004df2c4 : add byte ptr [rdx], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x000002000024cf0f : add byte ptr [rdx], al ; and eax, 0x60c000d ; ret 0x2596
0x00000200002494d7 : add byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x000002000028b5b7 : add byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000242c27 : add byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; push rsp ; or eax, dword ptr [rax] ; sysenter
0x000002000027befb : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c23b : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; clts ; sysenter
0x0000020000251523 : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x0000020000287667 : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x000002000053410d : add byte ptr [rdx], al ; jmp 0x20000388b36
0x0000020000484b32 : add byte ptr [rdx], al ; jne 0x20000484b33 ; mov eax, 1 ; ret
0x00000200002431d3 : add byte ptr [rdx], al ; or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x000002000020a038 : add byte ptr [rdx], al ; ret
0x000002000027c11b : add byte ptr [rdx], al ; sbb al, 0xc ; add byte ptr [rsi + rax], cl ; ret
0x000002000024f56b : add byte ptr [rdx], al ; sbb cl, byte ptr [rax + rax] ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x0000020000253eab : add byte ptr [rdx], al ; sbb dword ptr [rax + rax], ecx ; add eax, dword ptr [rsi] ; ret 0x1906
0x00000200001cc7dd : add byte ptr [rdx], al ; setne al ; ret
0x0000020000067098 : add byte ptr [rdx], bh ; lahf ; ret
0x00000200000f44c1 : add byte ptr [rdx], bh ; ret
0x0000020000686c31 : add byte ptr [rdx], bh ; ret 0x3a76
0x00000200000a73b6 : add byte ptr [rdx], bh ; ret 0x674
0x00000200003a221d : add byte ptr [rdx], bh ; ret 0x840f
0x0000020000210da5 : add byte ptr [rdx], bh ; ret 0x973
0x00000200000950f5 : add byte ptr [rdx], bh ; ret 0xc88b
0x0000020000011e17 : add byte ptr [rdx], bl ; add byte ptr [rax], al ; adc byte ptr [rdi], 1 ; ret
0x0000020000275bcb : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; cmp eax, dword ptr [rsi] ; sysenter
0x00000200002609b7 : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x00000200002874d3 : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x00000200002438b7 : add byte ptr [rdx], bl ; and eax, 0x608000b ; ret 0x1306
0x000002000023dd0f : add byte ptr [rdx], bl ; and eax, 0x60c000b ; ret 0x1316
0x000002000026df9f : add byte ptr [rdx], bl ; sbb eax, 0x6040008 ; sbb al, 6 ; sysenter
0x0000020000248253 : add byte ptr [rdx], ch ; or byte ptr [rax], al ; ret 0x8a2
0x0000020000265935 : add byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000048183a : add byte ptr [rdx], cl ; mov rcx, r13 ; call 0x200000a52e8
0x0000020000265931 : add byte ptr [rdx], cl ; ret
0x0000020000280acb : add byte ptr [rdx], cl ; ret 0x13
0x00000200002431d7 : add byte ptr [rdx], cl ; ret 0x7006
0x0000020000020d47 : add byte ptr [rdx], cl ; ret 0xf854
0x00000200000121a1 : add byte ptr [rdx], cl ; rol byte ptr [rbx], 1 ; ret 0x2a05
0x000002000023ea9b : add byte ptr [rdx], dh ; ret
0x0000020000389bd6 : add byte ptr [rdx], dh ; ret 0x2240
0x0000020000046a76 : add byte ptr [rdx], dh ; ret 0xf24
0x000002000065e230 : add byte ptr [rdx], dl ; add bh, al ; ret
0x000002000024d06f : add byte ptr [rdx], dl ; and dword ptr [rdx], ecx ; add byte ptr [rsi + rax], cl ; ret
0x000002000027d41b : add byte ptr [rdx], dl ; jo 0x2000027d426 ; clc ; ret
0x000002000001e27f : add byte ptr [rdx], dl ; ret
0x000002000052031b : add byte ptr [rdx], dl ; xor eax, eax ; ret
0x0000020000107bb7 : add byte ptr [rip + 0x10001], ah ; ret
0x0000020000290f03 : add byte ptr [rip + 0x11060016], cl ; ret 0xf00d
0x000002000027112f : add byte ptr [rip + 0x11062306], cl ; ret 0xf00d
0x000002000025487b : add byte ptr [rip + 0x11467406], cl ; ret 0xf00d
0x000002000024ca2b : add byte ptr [rip + 0x12162f06], al ; ret 0x700e
0x0000020000287aff : add byte ptr [rip + 0x14060016], cl ; ret 0xf00d
0x000002000024a973 : add byte ptr [rip + 0x14069b06], cl ; ret 0xf00d
0x000002000023f4df : add byte ptr [rip + 0x15161a06], cl ; ret 0xf011
0x000002000024cd5b : add byte ptr [rip + 0x15268c06], cl ; ret 0xf011
0x0000020000274edf : add byte ptr [rip + 0x16061206], cl ; ret 0xf00f
0x00000200002770f3 : add byte ptr [rip + 0x1706c806], cl ; ret 0xf010
0x0000020000253967 : add byte ptr [rip + 0x1806d106], cl ; ret 0xf011
0x0000020000263297 : add byte ptr [rip + 0x1866d406], cl ; ret 0xf014
0x000002000026eeeb : add byte ptr [rip + 0x1a062506], cl ; ret 0xf016
0x0000020000292197 : add byte ptr [rip + 0x1d060016], cl ; ret 0xf016
0x0000020000264373 : add byte ptr [rip + 0x1d061f06], cl ; ret 0xf016
0x000002000028c907 : add byte ptr [rip + 0x1f060016], cl ; ret 0xf01b
0x000002000024a137 : add byte ptr [rip + 0x1f06a006], cl ; ret 0xf01b
0x000002000023bf67 : add byte ptr [rip + 0x1f466a06], cl ; ret 0xf01b
0x000002000024236f : add byte ptr [rip + 0x20000dc4], al ; ret 5
0x0000020000253b23 : add byte ptr [rip + 0x2106ca06], cl ; ret 0xf01a
0x000002000025fb5f : add byte ptr [rip + 0x21167b06], cl ; ret 0xf01a
0x000002000028abff : add byte ptr [rip + 0x22060016], cl ; ret 0xf01b
0x0000020000263eeb : add byte ptr [rip + 0x22061e06], cl ; ret 0xf01b
0x00000200002629bf : add byte ptr [rip + 0x23166006], cl ; ret 0xf01f
0x000002000028eacf : add byte ptr [rip + 0x26061406], cl ; ret 0xf01f
0x000002000027d0c7 : add byte ptr [rip + 0x26063d06], cl ; ret 0xf01f
0x00000200000fb748 : add byte ptr [rip + 0x33730000], 0x8a ; xchg eax, ebx ; ret
0x00000200003a00c3 : add byte ptr [rip + 0x380039ed], cl ; ret 0x39
0x0000020000027122 : add byte ptr [rip + 0x38400000], 0xab ; ret
0x00000200001b2f86 : add byte ptr [rip + 0x79e6e800], al ; stc ; jmp qword ptr [rcx]
0x0000020000285d37 : add byte ptr [rip + 0xc060016], al ; ret 0x7005
0x000002000023d3e3 : add byte ptr [rip - 0x43ffc646], bh ; ret
0x0000020000244e2b : add byte ptr [rip - 0x58ffc315], ah ; in al, dx ; cmp al, 0 ; ret
0x000002000026d2c7 : add byte ptr [rip - 0x5bffb390], al ; ret 0x26
0x000002000026d2c6 : add byte ptr [rip - 0x5bffb390], r8b ; ret 0x26
0x00000200004f6cb8 : add byte ptr [rip - 0x74b7fff5], bl ; ret 0x8b48
0x000002000045b870 : add byte ptr [rsi + 0x23], ah ; ret 0x366
0x00000200005ad6f0 : add byte ptr [rsi + 0x23], ah ; ret 0x8966
0x00000200005adb00 : add byte ptr [rsi + 0x23], ah ; ret 0x8d4c
0x0000020000512fc1 : add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x000002000037186d : add byte ptr [rsi + 0x23], ah ; ret 0xb9
0x0000020000721039 : add byte ptr [rsi + 0x23], ah ; shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x000002000039189e : add byte ptr [rsi + 0x2b], ah ; ret 0x2366
0x00000200003918d6 : add byte ptr [rsi + 0x2b], ah ; ret 0x8566
0x00000200005767a5 : add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x00000200005a8aa9 : add byte ptr [rsi + 0x2b], ah ; ret 0x99e9
0x000002000039222e : add byte ptr [rsi + 0x2b], ah ; ret 0xffba
0x0000020000721a19 : add byte ptr [rsi + 0x3b], ah ; fsub dword ptr [rsi + 0xf] ; ret
0x000002000005362e : add byte ptr [rsi + 0x3b], ah ; ret
0x00000200005f9ff7 : add byte ptr [rsi + 0x3b], ah ; ret 0x1d77
0x00000200005aba98 : add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200005fa011 : add byte ptr [rsi + 0x3b], ah ; ret 0x377
0x000002000002ac23 : add byte ptr [rsi + 0x3b], ah ; ret 0x4374
0x00000200001ad456 : add byte ptr [rsi + 0x3b], ah ; ret 0x475
0x0000020000617738 : add byte ptr [rsi + 0x3b], ah ; ret 0x4d77
0x00000200000ed209 : add byte ptr [rsi + 0x3b], ah ; ret 0x4e74
0x00000200005abab4 : add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x000002000013c484 : add byte ptr [rsi + 0x3b], ah ; ret 0x820f
0x0000020000380f1d : add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x000002000003acea : add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000002ac2d : add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000f5f7f : add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200006171b6 : add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x0000020000630a97 : add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x0000020000055bd5 : add byte ptr [rsi + 0x3b], ah ; ret 0xd75
0x0000020000144ec3 : add byte ptr [rsi + 0x3b], ah ; sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x000002000010267f : add byte ptr [rsi + 0x44], ah ; or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x000002000001ee4f : add byte ptr [rsi + 0x67], bl ; jbe 0x2000001ee12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000a2f0f : add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x00000200005905ae : add byte ptr [rsi + 0xf], ah ; scasd eax, dword ptr [rdi] ; ret
0x00000200001d8a4c : add byte ptr [rsi + 1], ah ; add eax, 0xcca14 ; ret
0x0000020000095d0e : add byte ptr [rsi + 1], ah ; pop rdx ; and byte ptr [rcx + 0x5c], 0xfe ; ret
0x0000020000456a45 : add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200004bad1a : add byte ptr [rsi + 3], ah ; ret 0xb70f
0x00000200006750eb : add byte ptr [rsi + 7], dh ; mov dword ptr [rip + 0x1bfc0], eax ; ret
0x00000200004deb5f : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200001058ae : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x50 ; pop rbx ; ret
0x00000200000a9108 : add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200000b4230 : add byte ptr [rsi + rax - 0x48], bh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006750b2 : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005efbcc : add byte ptr [rsi + rax - 0x48], dh ; add eax, dword ptr [rbx] ; add al, al ; ret
0x00000200005d8ab0 : add byte ptr [rsi + rax - 0x48], dh ; and byte ptr [rcx], al ; add al, al ; ret
0x00000200002486c7 : add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x000002000027beff : add byte ptr [rsi + rax], al ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c23f : add byte ptr [rsi + rax], al ; clts ; sysenter
0x0000020000275bcf : add byte ptr [rsi + rax], al ; cmp eax, dword ptr [rsi] ; sysenter
0x0000020000251527 : add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x000002000026dfa3 : add byte ptr [rsi + rax], al ; sbb al, 6 ; sysenter
0x000002000023be53 : add byte ptr [rsi + rax], cl ; ret
0x000002000023dd13 : add byte ptr [rsi + rax], cl ; ret 0x1316
0x0000020000288833 : add byte ptr [rsi + rax], cl ; ret 0x2536
0x000002000024cf13 : add byte ptr [rsi + rax], cl ; ret 0x2596
0x0000020000120450 : add byte ptr [rsi + rbp*8 - 1], dh ; ret
0x00000200003cc18c : add byte ptr [rsi + rdx*2 - 0xa], dh ; ret
0x00000200002874d7 : add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x0000020000471bc3 : add byte ptr [rsi - 0x15ffa83e], al ; ret 0x57
0x000002000024b53f : add byte ptr [rsi - 0x16ffc13d], bh ; ret
0x00000200005fc34f : add byte ptr [rsi - 0x1a], dh ; xor eax, eax ; ret
0x000002000026d3cb : add byte ptr [rsi - 0x29], ch ; adc byte ptr [rax], al ; pushfq ; ret
0x000002000045baad : add byte ptr [rsi - 0x39], ah ; add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004674a1 : add byte ptr [rsi - 0x77], ah ; adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x000002000022a609 : add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004b6674 : add byte ptr [rsi - 0x77], ah ; push rbx ; call 0x200000e1ac8
0x00000200004fe52d : add byte ptr [rsi - 0x77], ah ; shl byte ptr [r14 - 0x77], 0x45 ; ret 0xb5e8
0x00000200001b6e69 : add byte ptr [rsi - 0x7b], ah ; ret
0x00000200000ec2e7 : add byte ptr [rsi - 0x7b], ah ; ret 0x1f74
0x00000200004895be : add byte ptr [rsi - 0x7b], ah ; ret 0x2474
0x0000020000096080 : add byte ptr [rsi - 0x7b], ah ; ret 0x3377
0x0000020000034c34 : add byte ptr [rsi - 0x7b], ah ; ret 0x840f
0x00000200004ac617 : add byte ptr [rsi - 0x7b], ah ; ret 0xc38b
0x0000020000392236 : add byte ptr [rsi - 0x7b], ah ; ret 0xc78b
0x0000020000210209 : add byte ptr [rsi - 0x7b], ah ; ret 0xd74
0x0000020000474d3a : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret 0
0x000002000017530a : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; cli ; ret
0x00000200005801a4 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; popfq ; ret 0xffef
0x00000200005f0715 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0
0x0000020000035184 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x000002000021ad9a : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000020000382398 : add byte ptr [rsi - 0x7d], ah ; jmp qword ptr [rax]
0x000002000037fc1d : add byte ptr [rsi - 0x7d], ah ; ret 0x6630
0x0000020000021d9f : add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x000002000007f62f : add byte ptr [rsi - 1], ah ; ret
0x000002000007f5fd : add byte ptr [rsi - 1], ah ; ret 0x3b66
0x0000020000055b3c : add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200001396ec : add byte ptr [rsi - 1], ah ; ret 0x8b48
0x000002000012b295 : add byte ptr [rsi - 1], ah ; ret 0xb70f
0x000002000012aff1 : add byte ptr [rsi - 1], ah ; ret 0xf44
0x0000020000151475 : add byte ptr [rsi - 9], ah ; ret 0x300
0x0000020000257fc3 : add byte ptr [rsi], ah ; ret
0x0000020000149bdc : add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200006ccc0d : add byte ptr [rsi], al ; add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200006e8258 : add byte ptr [rsi], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rbx
0x000002000027ce26 : add byte ptr [rsi], al ; andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x0000020000277a7a : add byte ptr [rsi], al ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000009de9e : add byte ptr [rsi], al ; ret
0x00000200005ef08e : add byte ptr [rsi], al ; setb al ; movzx eax, al ; ret
0x00000200002489da : add byte ptr [rsi], al ; sysenter
0x00000200000fae45 : add byte ptr [rsi], bl ; add al, ch ; ret
0x000002000000a341 : add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x0000020000115518 : add byte ptr [rsi], ch ; add byte ptr [rax], al ; jmp 0x200001153fb
0x00000200003a00b3 : add byte ptr [rsi], cl ; fidivr word ptr [rcx] ; add dh, ch ; ret 0x39
0x000002000001e2b7 : add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000020d37 : add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x00000200002788e7 : add byte ptr [rsi], dl ; ret
0x0000020000020fd7 : add byte ptr [rsi], dl ; test eax, 0x9ba2 ; add byte ptr [rax], al ; ret 0xb0cc
0x00000200005d053d : add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x0000020000482481 : add byte ptr [rsp + rbx - 0x75], dh ; ret
0x000002000012bad8 : add byte ptr [rsp + rdi + 0x48], dh ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x00000200000ead15 : add byte ptr [rsp + rsi*8 + 0x48], dh ; mov eax, dword ptr [rax + 8] ; ret
0x0000020000231836 : add byte ptr cs:[rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200002312fc : add byte ptr cs:[rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200003e61b8 : add byte ptr cs:[rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000115519 : add byte ptr cs:[rax], al ; jmp 0x200001153fa
0x00000200001c1ccd : add byte ptr cs:[rax], al ; ret
0x0000020000060074 : add byte ptr cs:[rbx], ch ; ret 0xd38b
0x000002000024b546 : add byte ptr ds:[rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000eb869 : add byte ptr es:[rax + 0x3b], cl ; sal byte ptr [rdi + 0x47], 1 ; ret
0x000002000005428a : add byte ptr es:[rax + 3], cl ; ret 0x349
0x00000200001301a0 : add byte ptr es:[rax - 1], cl ; ret
0x0000020000436eda : add byte ptr es:[rax], al ; add byte ptr [rbp - 0xf68740], al ; ret
0x000002000015a527 : add byte ptr es:[rax], al ; nop ; ret
0x00000200000ea264 : add byte ptr es:[rbp + 1], dh ; ret
0x00000200003f2413 : add byte ptr es:[rbp - 0x7b], al ; sal dword ptr [rsi + rbx + 0xf], -0x4a ; ret
0x00000200000555ea : add byte ptr es:[rdi], cl ; test al, al ; ret 0x11
0x00000200000e3863 : add byte ptr es:[rdx + rcx - 0x75], dh ; or byte ptr [rbx], dil ; ret 0xf41
0x00000200000121a0 : add byte ptr es:[rdx], cl ; rol byte ptr [rbx], 1 ; ret 0x2a05
0x00000200001a87dc : add byte ptr fs:[rax], al ; add byte ptr [rcx + 0x4589c745], cl ; ret
0x0000020000246a26 : add byte ptr fs:[rdx - 0x32ffe83e], dh ; ret 0x17
0x0000020000280f56 : add byte ptr gs:[rbp + 0x40006594], al ; jmp qword ptr [rdi]
0x000002000065161d : add byte ptr gs:[rcx + 3], cl ; leave ; jmp rcx
0x00000200005a3023 : add byte ptr gs:[rcx - 0x7b], al ; ret 0x61e9
0x00000200001a7d0f : add byte ptr ss:[rax - 0x9ae0b17], dl ; push rsi ; ret
0x00000200000217db : add byte ptr ss:[rax], al ; add byte ptr [rax], al ; jmp rsi
0x000002000001e84b : add byte ptr ss:[rax], al ; add byte ptr [rax], al ; ret 0x344d
0x0000020000532538 : add ch, ah ; dec dword ptr [rbx - 0x6efa3931] ; ret 0xffd7
0x000002000014dd7a : add ch, al ; add byte ptr [rax], al ; ret
0x000002000053d557 : add ch, al ; and eax, dword ptr [rbx] ; ret 0x48ff
0x000002000072147e : add ch, al ; cld ; ret
0x00000200005371cd : add ch, al ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0x000002000018fa10 : add ch, al ; ret
0x00000200004dd0e9 : add ch, bh ; jbe 0x200004dd115 ; call 0x200000ffb23
0x00000200002916db : add ch, bh ; shl dword ptr [rbx], 0x23 ; ret 0x63
0x000002000014da7a : add ch, bl ; add byte ptr [rax], al ; ret
0x000002000045b1da : add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000539be9 : add ch, bl ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000072677c : add ch, bl ; add esi, esi ; ret 0xf04
0x00000200004bcadf : add ch, bl ; call 0x200330ecc9e
0x000002000047b34b : add ch, bl ; mov eax, 0xc0000058 ; ret
0x00000200000f9f06 : add ch, bl ; sar dword ptr [rax - 0x3ffffff3], 1 ; ret
0x0000020000135735 : add ch, bl ; stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x00000200004bc7d9 : add ch, bl ; wait ; call 0x200000e7b7a
0x0000020000600f82 : add ch, byte ptr [rax] ; ret
0x000002000070792b : add ch, byte ptr [rdx] ; ret
0x0000020000140311 : add ch, byte ptr [rip - 0x74b22709] ; ret 0xd233
0x0000020000235496 : add ch, byte ptr [rsi] ; call r10
0x0000020000144897 : add ch, byte ptr [rsi] ; inc r10 ; jmp 0x200001448b5
0x000002000023b96f : add ch, ch ; ret
0x000002000014dc7a : add ch, cl ; add byte ptr [rax], al ; ret
0x0000020000173a16 : add ch, cl ; ret
0x0000020000246a2b : add ch, cl ; ret 0x17
0x000002000017c73c : add ch, cl ; ret 0xef81
0x000002000053410e : add ch, cl ; sbb cl, byte ptr [rdx - 0x1b] ; push rsi ; ret
0x00000200001aac4d : add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret 0xf49
0x00000200001894f9 : add ch, cl ; sub dword ptr [rax - 0x3f], ecx ; call 0x1ffc33bde18
0x000002000056970b : add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x0000020000726fac : add ch, cl ; sub dword ptr [rcx - 0x75], ecx ; ret 0x2b48
0x0000020000027534 : add ch, cl ; sub dword ptr [rdi + rcx - 0x49], eax ; adc bpl, cl ; ret
0x00000200001b8206 : add ch, cl ; sub esi, esi ; ret
0x000002000028a9bf : add ch, dh ; ret 0x5f
0x000002000014db7a : add ch, dl ; add byte ptr [rax], al ; ret
0x000002000014f97a : add cl, ah ; add byte ptr [rax], al ; ret
0x0000020000278903 : add cl, ah ; ret
0x000002000066f9f0 : add cl, al ; add byte ptr [rax], al ; add al, ch ; pop rsi ; ret 0xffbb
0x000002000014fd7a : add cl, al ; add byte ptr [rax], al ; ret
0x00000200000cd959 : add cl, al ; call 0x1ffc2911a69
0x00000200000d0908 : add cl, al ; call 0x1ffc2914a18
0x000002000049e3b0 : add cl, al ; call 0x1ffc3d527c8
0x0000020000141604 : add cl, al ; clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x0000020000617b7b : add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x0000020000380608 : add cl, al ; jmp 0x1ffc1fa111c
0x000002000056543f : add cl, al ; jmp 0x20000565454
0x0000020000515643 : add cl, al ; loop 0x2000051565d ; call 0x2000013b957
0x00000200001ca3bc : add cl, al ; loopne 0x200001ca3d4 ; mov dword ptr [r8 + 0x28], eax ; ret
0x000002000020a015 : add cl, al ; loopne 0x2000020a029 ; add eax, ecx ; ret
0x000002000028a9c7 : add cl, al ; ret 0x5f
0x000002000014f67a : add cl, bh ; add byte ptr [rax], al ; ret
0x000002000000de62 : add cl, bh ; jp 0x2000000de69 ; ret 0x4adb
0x00000200002912c3 : add cl, bh ; mov ah, byte ptr [rbx] ; ret 0x638c
0x000002000014fa7a : add cl, bl ; add byte ptr [rax], al ; ret
0x000002000008d9a6 : add cl, bpl ; ret
0x00000200001356d1 : add cl, byte ptr [r15] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x00000200005404f5 : add cl, byte ptr [r8 + 3] ; ret
0x00000200005d04b9 : add cl, byte ptr [r8 - 0x75] ; ret
0x00000200003a991a : add cl, byte ptr [r8 - 0x7d] ; ret
0x0000020000564299 : add cl, byte ptr [r8 - 0x7d] ; ret 0x2b38
0x000002000072179b : add cl, byte ptr [r8 - 0x7d] ; ret 0x4908
0x00000200004bbf27 : add cl, byte ptr [r9 - 0x75] ; iretd ; call rsi
0x00000200001cc42b : add cl, byte ptr [r9 - 1] ; enter -0x118b, -0x75 ; ret 0x8b48
0x00000200000ac7d6 : add cl, byte ptr [rax + 0x23] ; ret
0x000002000050e018 : add cl, byte ptr [rax + 0x23] ; ret 0x1ba
0x00000200000ea1fd : add cl, byte ptr [rax + 0x23] ; ret 0x348
0x000002000036f0b8 : add cl, byte ptr [rax + 0x23] ; ret 0xd233
0x0000020000058d16 : add cl, byte ptr [rax + 0x23] ; ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003ab4d6 : add cl, byte ptr [rax + 0x2b] ; ret
0x000002000004215e : add cl, byte ptr [rax + 0x2b] ; ret 0x3b48
0x00000200000a39cb : add cl, byte ptr [rax + 0x3b] ; ret
0x0000020000102886 : add cl, byte ptr [rax + 0x3b] ; ret 0x2374
0x000002000057437c : add cl, byte ptr [rax + 0x3b] ; ret 0x2674
0x000002000049a413 : add cl, byte ptr [rax + 0x3b] ; ret 0x2874
0x0000020000368edc : add cl, byte ptr [rax + 0x3b] ; ret 0x2f74
0x00000200004f98f7 : add cl, byte ptr [rax + 0x3b] ; ret 0x3874
0x00000200000de4e6 : add cl, byte ptr [rax + 0x3b] ; ret 0x6675
0x000002000065b6b6 : add cl, byte ptr [rax + 0x3b] ; ret 0x6975
0x00000200003d54e4 : add cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x000002000047286b : add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200000804bc : add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x00000200001420f7 : add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x0000020000636665 : add cl, byte ptr [rax + 0x3b] ; ret 0xf172
0x000002000013a99c : add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x000002000007f744 : add cl, byte ptr [rax + 0x3b] ; ret 0xf74
0x0000020000209fd4 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x0000020000643d58 : add cl, byte ptr [rax + 0x63] ; ret 0x8348
0x000002000071eb97 : add cl, byte ptr [rax + 0x6b] ; ret 0x480d
0x00000200004b2dd0 : add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x00000200006d0884 : add cl, byte ptr [rax + 0x6b] ; ret 0x4c0d
0x00000200006d0828 : add cl, byte ptr [rax + 0x6b] ; ret 0x8b0d
0x0000020000233528 : add cl, byte ptr [rax + 0xb] ; ret 0x8944
0x00000200006d4cbf : add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x000002000020e988 : add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001a3bf2 : add cl, byte ptr [rax + 3] ; ret
0x0000020000188e5d : add cl, byte ptr [rax + 9] ; sub r9b, bpl ; ret
0x000002000006b666 : add cl, byte ptr [rax - 0x3f] ; call 0x1ffc229ff7e
0x0000020000033a69 : add cl, byte ptr [rax - 0x73] ; add al, 0x81 ; ret
0x00000200000dea4a : add cl, byte ptr [rax - 0x73] ; pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000042bb45 : add cl, byte ptr [rax - 0x73] ; push rdx ; add al, 0xff ; leave ; jne 0x2000042bb4a ; ret
0x000002000020e9f3 : add cl, byte ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret 0xeb10
0x00000200000c24c6 : add cl, byte ptr [rax - 0x75] ; add dword ptr [rax - 0x75], ecx ; adc dh, dh ; ret 0xf01
0x000002000048c0b4 : add cl, byte ptr [rax - 0x75] ; jmp 0x200750afc0b
0x00000200000e2115 : add cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x000002000021243a : add cl, byte ptr [rax - 0x75] ; ret
0x00000200000fe20c : add cl, byte ptr [rax - 0x75] ; ret 0x48f0
0x00000200001e4163 : add cl, byte ptr [rax - 0x75] ; ret 0x8948
0x00000200007289e4 : add cl, byte ptr [rax - 0x75] ; ret 0x8d48
0x00000200004df393 : add cl, byte ptr [rax - 0x75] ; ret 0xba49
0x000002000020d8e8 : add cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x7d], cl ; ret
0x000002000051b403 : add cl, byte ptr [rax - 0x75] ; ror dword ptr [rbp + 0x33], 1 ; ret
0x000002000045e0bd : add cl, byte ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200001030b5 : add cl, byte ptr [rax - 0x77] ; add eax, 0x1c4d7b ; ret
0x00000200004fc206 : add cl, byte ptr [rax - 0x77] ; or byte ptr [r9 - 0x75], al ; ret
0x00000200000889f8 : add cl, byte ptr [rax - 0x7b] ; ret
0x0000020000182c9c : add cl, byte ptr [rax - 0x7b] ; ret 0x840f
0x0000020000557f54 : add cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x8f ; ret 0xfffe
0x00000200000ec5cb : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x00000200001048ea : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsi + rdx + 0x49], 0x3b ; ret
0x0000020000429229 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x49], 0x3b ; ret
0x0000020000122d0a : add cl, byte ptr [rax - 0x7d] ; and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000212ce7 : add cl, byte ptr [rax - 0x7d] ; or al, bpl ; ret
0x0000020000142353 : add cl, byte ptr [rax - 0x7d] ; ret
0x000002000056429a : add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x00000200002135f5 : add cl, byte ptr [rax - 0x7d] ; ret 0x4102
0x0000020000238d7b : add cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x000002000050e6fd : add cl, byte ptr [rax - 0x7d] ; ret 0x4130
0x000002000049d5d7 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000020000025118 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000002000014caa2 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200004a6383 : add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000020000054f83 : add cl, byte ptr [rax - 0x7d] ; ret 0x4828
0x0000020000142084 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x0000020000222d76 : add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200001a141c : add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006c71fb : add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x00000200006c514b : add cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x0000020000140cff : add cl, byte ptr [rax - 0x7d] ; ret 0x6602
0x0000020000238c80 : add cl, byte ptr [rax - 0x7d] ; ret 0x8b02
0x0000020000503844 : add cl, byte ptr [rax - 0x7d] ; ret 0xb928
0x000002000039300f : add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x000002000020d6ea : add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x000002000020e95b : add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200006eaac2 : add cl, byte ptr [rax - 0x7d] ; ret 0xf70c
0x00000200004346e9 : add cl, byte ptr [rax - 0x7f] ; ret 0x1000
0x000002000065d511 : add cl, byte ptr [rax - 0xb7eefc] ; ret 0xff41
0x0000020000162d37 : add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x00000200006ceed1 : add cl, byte ptr [rax - 1] ; ret 0x188
0x0000020000140621 : add cl, byte ptr [rax - 1] ; ret 0x3a80
0x00000200001daafe : add cl, byte ptr [rax - 1] ; ret 0x4166
0x0000020000712349 : add cl, byte ptr [rax - 1] ; ret 0x6348
0x0000020000631cec : add cl, byte ptr [rax - 1] ; ret 0x692d
0x00000200005b2403 : add cl, byte ptr [rax - 1] ; ret 0x8041
0x000002000042e632 : add cl, byte ptr [rax - 1] ; ret 0x8948
0x000002000020bb97 : add cl, byte ptr [rax - 1] ; ret 0x8b48
0x00000200005e286c : add cl, byte ptr [rax - 1] ; ret 0xc084
0x00000200002353b4 : add cl, byte ptr [rax - 1] ; ret 0xff48
0x0000020000100f51 : add cl, byte ptr [rax - 1] ; ret 0xff49
0x000002000013a681 : add cl, byte ptr [rax - 9] ; ret 0xfff
0x000002000021bb9e : add cl, byte ptr [rax - 9] ; ror byte ptr [rcx + 0x3b], 1 ; ret
0x0000020000554e72 : add cl, byte ptr [rbp + 0x25e8274a] ; ret 0xffbf
0x00000200004da596 : add cl, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x0000020000140c7e : add cl, byte ptr [rbp + 0x3b] ; enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x00000200000f174e : add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200001356d6 : add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x000002000020598d : add cl, byte ptr [rbp + 0x3b] ; ret 0x3c74
0x00000200000898a6 : add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x00000200005d9913 : add cl, byte ptr [rbp + 0x3b] ; ret 0xdb73
0x00000200001403fe : add cl, byte ptr [rbp + 0x3b] ; ret 0xe372
0x000002000020cd8e : add cl, byte ptr [rbp + 0x634c880c] ; ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x000002000013cdaa : add cl, byte ptr [rbp + 3] ; ret
0x00000200006d67c3 : add cl, byte ptr [rbp + 3] ; ror byte ptr [rax + 0x33], 1 ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200006e508b : add cl, byte ptr [rbp + 3] ; ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200001f0568 : add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200003ed391 : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x18 ; ret
0x00000200000f8716 : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x28 ; ret
0x0000020000083b21 : add cl, byte ptr [rbx] ; ret 0x225
0x000002000002e1ea : add cl, byte ptr [rbx] ; ret 0xb44
0x000002000013f966 : add cl, byte ptr [rcx + 0x23] ; ret
0x000002000007ae84 : add cl, byte ptr [rcx + 0x23] ; ret 0x3148
0x000002000006ef70 : add cl, byte ptr [rcx + 0x23] ; ret 0x348
0x00000200004e9c67 : add cl, byte ptr [rcx + 0x3b] ; enter -0x108e, 0x69 ; ret 0xb0a5
0x000002000003a033 : add cl, byte ptr [rcx + 0x3b] ; ret
0x00000200000dcfdd : add cl, byte ptr [rcx + 0x3b] ; ret 0x1574
0x00000200001a1016 : add cl, byte ptr [rcx + 0x3b] ; ret 0x2373
0x00000200001e8292 : add cl, byte ptr [rcx + 0x3b] ; ret 0xa77
0x00000200004f997a : add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x0000020000638539 : add cl, byte ptr [rcx + 0x3b] ; ret 0xf272
0x00000200001f2352 : add cl, byte ptr [rcx + 0xb] ; ret 0xb48
0x0000020000134113 : add cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x00000200001e56aa : add cl, byte ptr [rcx + rcx*4 + 1] ; ret
0x00000200002363f0 : add cl, byte ptr [rcx - 0x48f0bafe] ; ret
0x00000200005f3bb4 : add cl, byte ptr [rcx - 0x75] ; iretd ; call 0x2000050fe66
0x00000200004bbf28 : add cl, byte ptr [rcx - 0x75] ; iretd ; call rsi
0x0000020000028617 : add cl, byte ptr [rcx - 0x75] ; lodsb al, byte ptr [rsi] ; ret 0xd80
0x00000200001fde63 : add cl, byte ptr [rcx - 0x75] ; or byte ptr [rax + 0x49], r11b ; mov dword ptr [rcx], eax ; ret
0x000002000020e8b9 : add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x00000200006034f5 : add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x0000020000149236 : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000020000144ef7 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x000002000061a1f7 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x00000200006ce612 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200003c8946 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c02
0x0000020000142da6 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200006191b5 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x00000200006cd9fb : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x0000020000144ea9 : add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x0000020000142e01 : add cl, byte ptr [rcx - 0x7d] ; ret 0xc708
0x0000020000142d0b : add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x0000020000144f2e : add cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x000002000059be68 : add cl, byte ptr [rcx - 0x7d] ; ret 0xff02
0x00000200001a30c7 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 0xff ; ret 0xff48
0x00000200001a2530 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rcx + rcx*2], 0xff ; ret 0xff48
0x00000200001cc42c : add cl, byte ptr [rcx - 1] ; enter -0x118b, -0x75 ; ret 0x8b48
0x000002000020eaaf : add cl, byte ptr [rcx - 1] ; ret
0x000002000037d086 : add cl, byte ptr [rcx - 1] ; ret 0x3348
0x00000200006d0603 : add cl, byte ptr [rcx - 1] ; ret 0x334c
0x0000020000631521 : add cl, byte ptr [rcx - 1] ; ret 0x692d
0x0000020000144830 : add cl, byte ptr [rcx - 1] ; ret 0x8041
0x000002000014486d : add cl, byte ptr [rcx - 1] ; ret 0xff48
0x0000020000285d34 : add cl, byte ptr [rdi + rax] ; add byte ptr [rip + 0xc060016], al ; ret 0x7005
0x00000200003ecfb5 : add cl, byte ptr [rdi - 0x73] ; or al, 0x53 ; mov rax, r9 ; ret
0x00000200004b7557 : add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200001356d2 : add cl, byte ptr [rdi] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x00000200001441a1 : add cl, byte ptr [rdi] ; mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x0000020000511407 : add cl, byte ptr [rdi] ; mov dh, 5 ; ret
0x0000020000287668 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x000002000027befc : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c23c : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; clts ; sysenter
0x0000020000251524 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x000002000015146f : add cl, byte ptr [rdi] ; test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x00000200005389eb : add cl, byte ptr [rdi] ; test byte ptr [rax], bh ; ret
0x00000200005442c7 : add cl, byte ptr [rdi] ; test byte ptr [rbx - 0x9001890], bl ; ret
0x000002000052013e : add cl, byte ptr [rdi] ; test byte ptr [rdi + 0x55], ah ; or dword ptr [rax], eax ; ret
0x0000020000544329 : add cl, byte ptr [rdi] ; test dh, ah ; push 0xe7 ; push rsi ; ret
0x0000020000129aa7 : add cl, byte ptr [rdi] ; test dword ptr [rcx + rax*4 + 8], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000020cdc1 : add cl, byte ptr [rdi] ; test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005be6c : add cl, byte ptr [rdi] ; test eax, esp ; or al, 0 ; add dh, dh ; ret 0x7508
0x00000200007094c0 : add cl, byte ptr [rdi] ; test ebx, edi ; ret 1
0x00000200005901e1 : add cl, byte ptr [rdi] ; test ecx, esi ; ret 0xfff1
0x000002000055c633 : add cl, byte ptr [rdi] ; test esi, ebx ; ret 0xffea
0x000002000039ef87 : add cl, byte ptr [rdi] ; xchg bl, bl ; ret 0x19
0x000002000039e640 : add cl, byte ptr [rdi] ; xchg byte ptr [rcx], ch ; ret 0x19
0x0000020000668da7 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000002000022afab : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8ce9
0x000002000045d9fc : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000020000553bef : add cl, byte ptr [rdi] ; xor esp, 0x5b ; jmp 0x1fffd183400
0x00000200000960df : add cl, byte ptr [rdx + 0x1a82041] ; jne 0x200000960f0 ; ret
0x00000200004fac85 : add cl, byte ptr [rdx + 0x470f44ca] ; ret 0x2a40
0x0000020000450947 : add cl, ch ; adc eax, 0xf6ffffff ; ret
0x000002000014e178 : add cl, ch ; add ah, ah ; add byte ptr [rax], al ; ret
0x000002000014e578 : add cl, ch ; add ah, al ; add byte ptr [rax], al ; ret
0x000002000014de78 : add cl, ch ; add ah, bh ; add byte ptr [rax], al ; ret
0x000002000014e278 : add cl, ch ; add ah, bl ; add byte ptr [rax], al ; ret
0x000002000014e078 : add cl, ch ; add ah, ch ; add byte ptr [rax], al ; ret
0x000002000014e478 : add cl, ch ; add ah, cl ; add byte ptr [rax], al ; ret
0x000002000014df78 : add cl, ch ; add ah, dh ; add byte ptr [rax], al ; ret
0x000002000014e378 : add cl, ch ; add ah, dl ; add byte ptr [rax], al ; ret
0x0000020000150178 : add cl, ch ; add al, ah ; add byte ptr [rax], al ; ret
0x0000020000150578 : add cl, ch ; add al, al ; add byte ptr [rax], al ; ret
0x000002000014fe78 : add cl, ch ; add al, bh ; add byte ptr [rax], al ; ret
0x0000020000150278 : add cl, ch ; add al, bl ; add byte ptr [rax], al ; ret
0x0000020000150078 : add cl, ch ; add al, ch ; add byte ptr [rax], al ; ret
0x0000020000150478 : add cl, ch ; add al, cl ; add byte ptr [rax], al ; ret
0x000002000014ff78 : add cl, ch ; add al, dh ; add byte ptr [rax], al ; ret
0x0000020000150378 : add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x000002000014e978 : add cl, ch ; add bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed78 : add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x000002000014e678 : add cl, ch ; add bl, bh ; add byte ptr [rax], al ; ret
0x000002000014ea78 : add cl, ch ; add bl, bl ; add byte ptr [rax], al ; ret
0x000002000014e878 : add cl, ch ; add bl, ch ; add byte ptr [rax], al ; ret
0x000002000014ec78 : add cl, ch ; add bl, cl ; add byte ptr [rax], al ; ret
0x000002000014e778 : add cl, ch ; add bl, dh ; add byte ptr [rax], al ; ret
0x000002000014eb78 : add cl, ch ; add bl, dl ; add byte ptr [rax], al ; ret
0x000002000014f87a : add cl, ch ; add byte ptr [rax], al ; ret
0x000002000014dd78 : add cl, ch ; add ch, al ; add byte ptr [rax], al ; ret
0x000002000014da78 : add cl, ch ; add ch, bl ; add byte ptr [rax], al ; ret
0x000002000014dc78 : add cl, ch ; add ch, cl ; add byte ptr [rax], al ; ret
0x000002000014db78 : add cl, ch ; add ch, dl ; add byte ptr [rax], al ; ret
0x000002000014f978 : add cl, ch ; add cl, ah ; add byte ptr [rax], al ; ret
0x000002000014fd78 : add cl, ch ; add cl, al ; add byte ptr [rax], al ; ret
0x000002000014f678 : add cl, ch ; add cl, bh ; add byte ptr [rax], al ; ret
0x000002000014fa78 : add cl, ch ; add cl, bl ; add byte ptr [rax], al ; ret
0x000002000014f878 : add cl, ch ; add cl, ch ; add byte ptr [rax], al ; ret
0x000002000014fc78 : add cl, ch ; add cl, cl ; add byte ptr [rax], al ; ret
0x000002000014f778 : add cl, ch ; add cl, dh ; add byte ptr [rax], al ; ret
0x000002000014fb78 : add cl, ch ; add cl, dl ; add byte ptr [rax], al ; ret
0x000002000014f178 : add cl, ch ; add dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f578 : add cl, ch ; add dl, al ; add byte ptr [rax], al ; ret
0x000002000014ee78 : add cl, ch ; add dl, bh ; add byte ptr [rax], al ; ret
0x000002000014f278 : add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x000002000019738a : add cl, ch ; add dl, byte ptr [rdx - 0x7cb7000d] ; ret 0x4908
0x000002000014f078 : add cl, ch ; add dl, ch ; add byte ptr [rax], al ; ret
0x000002000014f478 : add cl, ch ; add dl, cl ; add byte ptr [rax], al ; ret
0x000002000014ef78 : add cl, ch ; add dl, dh ; add byte ptr [rax], al ; ret
0x000002000014f378 : add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x000002000014e158 : add cl, ch ; and ah, ah ; add byte ptr [rax], al ; ret
0x000002000014e558 : add cl, ch ; and ah, al ; add byte ptr [rax], al ; ret
0x000002000014de58 : add cl, ch ; and ah, bh ; add byte ptr [rax], al ; ret
0x000002000014e258 : add cl, ch ; and ah, bl ; add byte ptr [rax], al ; ret
0x000002000014e058 : add cl, ch ; and ah, ch ; add byte ptr [rax], al ; ret
0x000002000014e458 : add cl, ch ; and ah, cl ; add byte ptr [rax], al ; ret
0x000002000014df58 : add cl, ch ; and ah, dh ; add byte ptr [rax], al ; ret
0x000002000014e358 : add cl, ch ; and ah, dl ; add byte ptr [rax], al ; ret
0x00000200001ba225 : add cl, ch ; and al, 0xf8 ; push rsi ; ret
0x0000020000150158 : add cl, ch ; and al, ah ; add byte ptr [rax], al ; ret
0x0000020000150558 : add cl, ch ; and al, al ; add byte ptr [rax], al ; ret
0x000002000014fe58 : add cl, ch ; and al, bh ; add byte ptr [rax], al ; ret
0x0000020000150258 : add cl, ch ; and al, bl ; add byte ptr [rax], al ; ret
0x0000020000150058 : add cl, ch ; and al, ch ; add byte ptr [rax], al ; ret
0x0000020000150458 : add cl, ch ; and al, cl ; add byte ptr [rax], al ; ret
0x000002000014ff58 : add cl, ch ; and al, dh ; add byte ptr [rax], al ; ret
0x0000020000150358 : add cl, ch ; and al, dl ; add byte ptr [rax], al ; ret
0x000002000014e958 : add cl, ch ; and bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed58 : add cl, ch ; and bl, al ; add byte ptr [rax], al ; ret
0x000002000014e658 : add cl, ch ; and bl, bh ; add byte ptr [rax], al ; ret
0x000002000014ea58 : add cl, ch ; and bl, bl ; add byte ptr [rax], al ; ret
0x000002000014e858 : add cl, ch ; and bl, ch ; add byte ptr [rax], al ; ret
0x000002000014ec58 : add cl, ch ; and bl, cl ; add byte ptr [rax], al ; ret
0x000002000014e758 : add cl, ch ; and bl, dh ; add byte ptr [rax], al ; ret
0x000002000014eb58 : add cl, ch ; and bl, dl ; add byte ptr [rax], al ; ret
0x000002000014dd58 : add cl, ch ; and ch, al ; add byte ptr [rax], al ; ret
0x000002000014da58 : add cl, ch ; and ch, bl ; add byte ptr [rax], al ; ret
0x000002000014dc58 : add cl, ch ; and ch, cl ; add byte ptr [rax], al ; ret
0x000002000014db58 : add cl, ch ; and ch, dl ; add byte ptr [rax], al ; ret
0x000002000014f958 : add cl, ch ; and cl, ah ; add byte ptr [rax], al ; ret
0x000002000014fd58 : add cl, ch ; and cl, al ; add byte ptr [rax], al ; ret
0x000002000014f658 : add cl, ch ; and cl, bh ; add byte ptr [rax], al ; ret
0x000002000014fa58 : add cl, ch ; and cl, bl ; add byte ptr [rax], al ; ret
0x000002000014f858 : add cl, ch ; and cl, ch ; add byte ptr [rax], al ; ret
0x000002000014fc58 : add cl, ch ; and cl, cl ; add byte ptr [rax], al ; ret
0x000002000014f758 : add cl, ch ; and cl, dh ; add byte ptr [rax], al ; ret
0x000002000014fb58 : add cl, ch ; and cl, dl ; add byte ptr [rax], al ; ret
0x000002000014f158 : add cl, ch ; and dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f558 : add cl, ch ; and dl, al ; add byte ptr [rax], al ; ret
0x000002000014ee58 : add cl, ch ; and dl, bh ; add byte ptr [rax], al ; ret
0x000002000014f258 : add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x000002000014f058 : add cl, ch ; and dl, ch ; add byte ptr [rax], al ; ret
0x000002000014f458 : add cl, ch ; and dl, cl ; add byte ptr [rax], al ; ret
0x000002000014ef58 : add cl, ch ; and dl, dh ; add byte ptr [rax], al ; ret
0x000002000014f358 : add cl, ch ; and dl, dl ; add byte ptr [rax], al ; ret
0x000002000059b3c8 : add cl, ch ; and eax, 0xf6fff353 ; ret 0x7420
0x000002000017fcc3 : add cl, ch ; and edi, 0x8b48ffef ; ret 0xb948
0x00000200001868c0 : add cl, ch ; call qword ptr [rdi]
0x000002000016a702 : add cl, ch ; call rsi
0x000002000017615b : add cl, ch ; cmc ; shr dh, cl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000175736 : add cl, ch ; fadd st(5) ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000191763 : add cl, ch ; fstp xword ptr [rbp - 0x33000e] ; ret
0x000002000056a016 : add cl, ch ; hlt ; cdq ; in al, dx ; push rsi ; ret
0x000002000007a8d4 : add cl, ch ; imul edi, esp, -1 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000588bd5 : add cl, ch ; jmp 0x20000588bad
0x00000200006fb03c : add cl, ch ; jmp 0x200006fb043
0x0000020000532369 : add cl, ch ; jmp rsp
0x000002000048eeeb : add cl, ch ; lcall ptr [rbx - 0x3fcc0043] ; ret
0x000002000014fc38 : add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x000002000014da98 : add cl, ch ; loop 0x2000014da8c ; add byte ptr [rax], al ; ret
0x000002000014db98 : add cl, ch ; loop 0x2000014db8b ; add byte ptr [rax], al ; ret
0x000002000014dc98 : add cl, ch ; loop 0x2000014dc8a ; add byte ptr [rax], al ; ret
0x000002000014dd98 : add cl, ch ; loop 0x2000014dd89 ; add byte ptr [rax], al ; ret
0x000002000014de98 : add cl, ch ; loop 0x2000014de88 ; add byte ptr [rax], al ; ret
0x000002000014df98 : add cl, ch ; loop 0x2000014df87 ; add byte ptr [rax], al ; ret
0x000002000014e098 : add cl, ch ; loop 0x2000014e086 ; add byte ptr [rax], al ; ret
0x000002000014e198 : add cl, ch ; loop 0x2000014e185 ; add byte ptr [rax], al ; ret
0x000002000014e298 : add cl, ch ; loop 0x2000014e284 ; add byte ptr [rax], al ; ret
0x000002000014e398 : add cl, ch ; loop 0x2000014e383 ; add byte ptr [rax], al ; ret
0x000002000014e498 : add cl, ch ; loop 0x2000014e482 ; add byte ptr [rax], al ; ret
0x000002000014e598 : add cl, ch ; loop 0x2000014e581 ; add byte ptr [rax], al ; ret
0x000002000014e698 : add cl, ch ; loop 0x2000014e680 ; add byte ptr [rax], al ; ret
0x000002000014e798 : add cl, ch ; loop 0x2000014e77f ; add byte ptr [rax], al ; ret
0x000002000014e898 : add cl, ch ; loop 0x2000014e87e ; add byte ptr [rax], al ; ret
0x000002000014e998 : add cl, ch ; loop 0x2000014e97d ; add byte ptr [rax], al ; ret
0x000002000014ea98 : add cl, ch ; loop 0x2000014ea7c ; add byte ptr [rax], al ; ret
0x000002000014eb98 : add cl, ch ; loop 0x2000014eb7b ; add byte ptr [rax], al ; ret
0x000002000014ec98 : add cl, ch ; loop 0x2000014ec7a ; add byte ptr [rax], al ; ret
0x000002000014ed98 : add cl, ch ; loop 0x2000014ed79 ; add byte ptr [rax], al ; ret
0x000002000014ee98 : add cl, ch ; loop 0x2000014ee78 ; add byte ptr [rax], al ; ret
0x000002000014ef98 : add cl, ch ; loop 0x2000014ef77 ; add byte ptr [rax], al ; ret
0x000002000014f098 : add cl, ch ; loop 0x2000014f076 ; add byte ptr [rax], al ; ret
0x000002000014f198 : add cl, ch ; loop 0x2000014f175 ; add byte ptr [rax], al ; ret
0x000002000014f298 : add cl, ch ; loop 0x2000014f274 ; add byte ptr [rax], al ; ret
0x000002000014f398 : add cl, ch ; loop 0x2000014f373 ; add byte ptr [rax], al ; ret
0x000002000014f498 : add cl, ch ; loop 0x2000014f472 ; add byte ptr [rax], al ; ret
0x000002000014f598 : add cl, ch ; loop 0x2000014f571 ; add byte ptr [rax], al ; ret
0x000002000014f698 : add cl, ch ; loop 0x2000014f670 ; add byte ptr [rax], al ; ret
0x000002000014f798 : add cl, ch ; loop 0x2000014f76f ; add byte ptr [rax], al ; ret
0x000002000014f898 : add cl, ch ; loop 0x2000014f86e ; add byte ptr [rax], al ; ret
0x000002000014f998 : add cl, ch ; loop 0x2000014f96d ; add byte ptr [rax], al ; ret
0x000002000014fa98 : add cl, ch ; loop 0x2000014fa6c ; add byte ptr [rax], al ; ret
0x000002000014fb98 : add cl, ch ; loop 0x2000014fb6b ; add byte ptr [rax], al ; ret
0x000002000014fc98 : add cl, ch ; loop 0x2000014fc6a ; add byte ptr [rax], al ; ret
0x000002000014fd98 : add cl, ch ; loop 0x2000014fd69 ; add byte ptr [rax], al ; ret
0x000002000014fe98 : add cl, ch ; loop 0x2000014fe68 ; add byte ptr [rax], al ; ret
0x000002000014ff98 : add cl, ch ; loop 0x2000014ff67 ; add byte ptr [rax], al ; ret
0x0000020000150098 : add cl, ch ; loop 0x20000150066 ; add byte ptr [rax], al ; ret
0x0000020000150198 : add cl, ch ; loop 0x20000150165 ; add byte ptr [rax], al ; ret
0x0000020000150298 : add cl, ch ; loop 0x20000150264 ; add byte ptr [rax], al ; ret
0x0000020000150398 : add cl, ch ; loop 0x20000150363 ; add byte ptr [rax], al ; ret
0x0000020000150498 : add cl, ch ; loop 0x20000150462 ; add byte ptr [rax], al ; ret
0x0000020000150598 : add cl, ch ; loop 0x20000150561 ; add byte ptr [rax], al ; ret
0x0000020000150698 : add cl, ch ; loop 0x20000150660 ; add byte ptr [rax], al ; ret
0x0000020000150798 : add cl, ch ; loop 0x2000015075f ; add byte ptr [rax], al ; ret
0x0000020000150898 : add cl, ch ; loop 0x2000015085e ; add byte ptr [rax], al ; ret
0x0000020000150998 : add cl, ch ; loop 0x2000015095d ; add byte ptr [rax], al ; ret
0x0000020000150a98 : add cl, ch ; loop 0x20000150a5c ; add byte ptr [rax], al ; ret
0x0000020000150b98 : add cl, ch ; loop 0x20000150b5b ; add byte ptr [rax], al ; ret
0x0000020000150c98 : add cl, ch ; loop 0x20000150c5a ; add byte ptr [rax], al ; ret
0x0000020000150d98 : add cl, ch ; loop 0x20000150d59 ; add byte ptr [rax], al ; ret
0x0000020000150e98 : add cl, ch ; loop 0x20000150e58 ; add byte ptr [rax], al ; ret
0x0000020000150f98 : add cl, ch ; loop 0x20000150f57 ; add byte ptr [rax], al ; ret
0x000002000014ff38 : add cl, ch ; mov byte ptr [rax], 0 ; ret
0x0000020000208ce5 : add cl, ch ; mov esi, 0xf6000001 ; ret 0xf3f
0x00000200001a10da : add cl, ch ; mov word ptr [rcx - 0xb], dr1 ; dec dword ptr [rax + 0x3b] ; ret 0xc77
0x000002000048bab6 : add cl, ch ; push -0x74000002 ; ret
0x000002000003f5cf : add cl, ch ; ret
0x000002000011f682 : add cl, ch ; ret 0
0x0000020000135b30 : add cl, ch ; ret 0x37c2
0x0000020000150fb8 : add cl, ch ; ret 0xb5
0x0000020000150eb8 : add cl, ch ; ret 0xb6
0x0000020000150db8 : add cl, ch ; ret 0xb7
0x0000020000150cb8 : add cl, ch ; ret 0xb8
0x0000020000150bb8 : add cl, ch ; ret 0xb9
0x0000020000150ab8 : add cl, ch ; ret 0xba
0x00000200001509b8 : add cl, ch ; ret 0xbb
0x00000200001508b8 : add cl, ch ; ret 0xbc
0x00000200001507b8 : add cl, ch ; ret 0xbd
0x00000200001506b8 : add cl, ch ; ret 0xbe
0x00000200001505b8 : add cl, ch ; ret 0xbf
0x00000200001504b8 : add cl, ch ; ret 0xc0
0x00000200001503b8 : add cl, ch ; ret 0xc1
0x00000200001502b8 : add cl, ch ; ret 0xc2
0x00000200001501b8 : add cl, ch ; ret 0xc3
0x00000200001500b8 : add cl, ch ; ret 0xc4
0x000002000014ffb8 : add cl, ch ; ret 0xc5
0x000002000014feb8 : add cl, ch ; ret 0xc6
0x000002000014fdb8 : add cl, ch ; ret 0xc7
0x000002000014fcb8 : add cl, ch ; ret 0xc8
0x000002000014fbb8 : add cl, ch ; ret 0xc9
0x000002000014fab8 : add cl, ch ; ret 0xca
0x000002000014f9b8 : add cl, ch ; ret 0xcb
0x000002000014f8b8 : add cl, ch ; ret 0xcc
0x000002000014f7b8 : add cl, ch ; ret 0xcd
0x000002000014f6b8 : add cl, ch ; ret 0xce
0x000002000014f5b8 : add cl, ch ; ret 0xcf
0x000002000014f4b8 : add cl, ch ; ret 0xd0
0x000002000014f3b8 : add cl, ch ; ret 0xd1
0x000002000014f2b8 : add cl, ch ; ret 0xd2
0x000002000014f1b8 : add cl, ch ; ret 0xd3
0x000002000014f0b8 : add cl, ch ; ret 0xd4
0x000002000014efb8 : add cl, ch ; ret 0xd5
0x000002000014eeb8 : add cl, ch ; ret 0xd6
0x000002000014edb8 : add cl, ch ; ret 0xd7
0x000002000014ecb8 : add cl, ch ; ret 0xd8
0x000002000014ebb8 : add cl, ch ; ret 0xd9
0x000002000014eab8 : add cl, ch ; ret 0xda
0x000002000014e9b8 : add cl, ch ; ret 0xdb
0x000002000014e8b8 : add cl, ch ; ret 0xdc
0x000002000014e7b8 : add cl, ch ; ret 0xdd
0x000002000014e6b8 : add cl, ch ; ret 0xde
0x000002000014e5b8 : add cl, ch ; ret 0xdf
0x000002000014e4b8 : add cl, ch ; ret 0xe0
0x000002000014e3b8 : add cl, ch ; ret 0xe1
0x000002000014e2b8 : add cl, ch ; ret 0xe2
0x000002000014e1b8 : add cl, ch ; ret 0xe3
0x000002000014e0b8 : add cl, ch ; ret 0xe4
0x000002000014dfb8 : add cl, ch ; ret 0xe5
0x000002000014deb8 : add cl, ch ; ret 0xe6
0x000002000014ddb8 : add cl, ch ; ret 0xe7
0x000002000014dcb8 : add cl, ch ; ret 0xe8
0x000002000054ad85 : add cl, ch ; ret 0xe874
0x000002000054d440 : add cl, ch ; ret 0xe8fa
0x000002000014dbb8 : add cl, ch ; ret 0xe9
0x0000020000554e8e : add cl, ch ; ret 0xe9c7
0x000002000014dab8 : add cl, ch ; ret 0xea
0x000002000016b1dd : add cl, ch ; ret 0xece9
0x000002000056f363 : add cl, ch ; ret 0xed23
0x0000020000170952 : add cl, ch ; ret 0xee1c
0x00000200001acf0d : add cl, ch ; ret 0xf712
0x0000020000722b20 : add cl, ch ; ret 0xfd78
0x0000020000455b9c : add cl, ch ; ret 0xfff8
0x000002000038572f : add cl, ch ; ret 0xfffc
0x000002000002e175 : add cl, ch ; ret 0xfffd
0x00000200000ea7f2 : add cl, ch ; ret 0xfffe
0x0000020000150538 : add cl, ch ; rol byte ptr [rax], 0 ; ret
0x0000020000150438 : add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000180f5f : add cl, ch ; ror dword ptr [rax], -0x10 ; jmp qword ptr [rcx]
0x000002000016ba76 : add cl, ch ; sal dl, 1 ; in al, dx ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x0000020000105717 : add cl, ch ; sal dword ptr [rbx], cl ; idiv bh ; xor eax, eax ; ret
0x000002000014ef38 : add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000023d523 : add cl, ch ; sar byte ptr [rcx], 0 ; xchg eax, edx ; ret 0x39
0x0000020000585ee3 : add cl, ch ; sti ; ret 0xfff0
0x000002000019b35c : add cl, ch ; sub byte ptr [rsp + rsi*8 - 0x48f0be01], bl ; ret 0x8b4c
0x00000200000cc43e : add cl, ch ; sub eax, 0xf6fffffa ; ret
0x0000020000196898 : add cl, ch ; test eax, 0xfffff37d ; ret
0x000002000056ec16 : add cl, ch ; xchg eax, esi ; sbb ch, ch ; push rsi ; ret
0x000002000014ee38 : add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000185259 : add cl, ch ; xlatb ; mov ebx, 0xb70ffff0 ; ret 0x4166
0x000002000014fc7a : add cl, cl ; add byte ptr [rax], al ; ret
0x000002000070939d : add cl, cl ; inc dword ptr [rbp - 0x3877f040] ; ret
0x000002000001fcff : add cl, cl ; ret 0x21d1
0x000002000014f77a : add cl, dh ; add byte ptr [rax], al ; ret
0x000002000014fb7a : add cl, dl ; add byte ptr [rax], al ; ret
0x00000200002373be : add cx, cx ; mov word ptr [r10], cx ; ret
0x000002000038ff1a : add cx, r9w ; movzx eax, cx ; ret
0x000002000001e297 : add dh, ah ; xor byte ptr [rdx - 0x5b], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200000e4722 : add dh, al ; add byte ptr [rax], al ; jmp 0x200000e46f0
0x000002000068c669 : add dh, al ; add eax, 0xffc19d68 ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000051d016 : add dh, al ; and al, 0x20 ; add al, ch ; call qword ptr [rdx]
0x000002000002dcbb : add dh, al ; and al, 0x20 ; add eax, ebp ; ret 0x63
0x00000200000527a4 : add dh, al ; and al, 0x30 ; adc ecx, ebp ; ret
0x0000020000113edb : add dh, al ; and al, 0x41 ; add byte ptr [rax + 0xb], cl ; ret
0x00000200002270fb : add dh, al ; cmpxchg qword ptr [rdi], rcx ; jne 0x20000227110 ; mov al, dl ; jmp 0x20000227118
0x0000020000070a87 : add dh, al ; ret 0x4806
0x00000200001403b6 : add dh, bh ; fsub dword ptr [rsi - 0x77] ; or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x0000020000178353 : add dh, bh ; or dword ptr [rdx + 0x45000005], 0xffffff8b ; ret 0x8348
0x0000020000204dc4 : add dh, bh ; ret
0x00000200004d2421 : add dh, bh ; ret 0x3345
0x00000200000e42b0 : add dh, byte ptr [rax + 0xb] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006c5911 : add dh, byte ptr [rax + rdx - 0x7d] ; stc ; or dword ptr [rsp + rax - 0x75], esi ; ret 0x4feb
0x000002000043b4c0 : add dh, byte ptr [rbp + 0x22] ; mov rcx, rsi ; call 0x2000006a619
0x0000020000447735 : add dh, byte ptr [rbp + 0x23] ; mov rcx, rdi ; call 0x2000006a619
0x000002000043e980 : add dh, byte ptr [rbp + 0x3b] ; mov rcx, r14 ; call 0x2000006a619
0x0000020000532b7e : add dh, byte ptr [rbp + 0x43] ; mov rcx, rbx ; call 0x2000015dd01
0x000002000043adb1 : add dh, byte ptr [rbp + 0x61] ; mov rcx, r14 ; call 0x2000006a619
0x0000020000447721 : add dh, byte ptr [rbp + 0x63] ; mov rcx, rbp ; call 0x2000006a619
0x0000020000449cc9 : add dh, byte ptr [rbp + 0xa] ; mov rcx, rbx ; call 0x2000006a619
0x000002000014c675 : add dh, byte ptr [rbp + 2] ; xor dl, dl ; mov al, dl ; ret
0x00000200004895ab : add dh, byte ptr [rbp + 3] ; xor eax, eax ; ret
0x00000200006800e6 : add dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x00000200001063ee : add dh, byte ptr [rbp + 7] ; mov byte ptr [rip + 0x1d16cc], dl ; ret
0x00000200000f2259 : add dh, byte ptr [rbp + 9] ; add rsp, 0x28 ; ret
0x00000200000dc008 : add dh, byte ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x000002000010ba12 : add dh, byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rcx + 0x28] ; ret
0x00000200005db4ef : add dh, byte ptr [rbp + rax*2 - 0xa] ; ret
0x00000200001759a7 : add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x000002000017b8e1 : add dh, byte ptr [rbp + rcx - 0xa] ; ret 0x7504
0x0000020000646b61 : add dh, byte ptr [rbp + rdi*2 - 0x18] ; ret
0x0000020000025588 : add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000484b33 : add dh, byte ptr [rbp - 0xc] ; mov eax, 1 ; ret
0x0000020000674006 : add dh, byte ptr [rbp - 0xf] ; ret
0x00000200000f4543 : add dh, byte ptr [rbx + 1] ; ret
0x000002000014d807 : add dh, byte ptr [rbx + 3] ; xor al, al ; ret
0x0000020000238a61 : add dh, byte ptr [rbx + 3] ; xor eax, eax ; ret
0x000002000008e7d8 : add dh, byte ptr [rbx + rax - 0x75] ; ret 0x41c3
0x000002000015139e : add dh, byte ptr [rbx + rax - 0x7d] ; enter 0x6602, -9 ; ret 0x100
0x000002000053572a : add dh, byte ptr [rbx + rsi - 0xa] ; ret
0x000002000058821e : add dh, byte ptr [rbx - 0x10] ; jmp 0x2000049447a
0x00000200000998ea : add dh, byte ptr [rbx] ; leave ; mov qword ptr [rbp - 0x48], rax ; jmp 0x200000998be
0x000002000066ea99 : add dh, byte ptr [rbx] ; leave ; mov rax, rcx ; ret
0x0000020000575514 : add dh, byte ptr [rbx] ; ret 0x8941
0x0000020000730025 : add dh, byte ptr [rbx] ; rol bl, 0xb8 ; adc dword ptr [rax], eax ; add al, al ; ret
0x00000200001c5416 : add dh, byte ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000c5cbd : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200001bb6f9 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x80c3
0x00000200003b3f39 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000066610c : add dh, byte ptr [rcx + rcx - 0x75] ; xlatb ; call 0x20000294e28
0x00000200004b3dda : add dh, byte ptr [rcx + rcx - 0xa] ; ret
0x0000020000219d79 : add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x00000200004f528a : add dh, byte ptr [rcx + rdx - 0xa] ; ret 0x7504
0x00000200003ceec6 : add dh, byte ptr [rcx + rdx*4 - 0xa] ; ret 0x7504
0x00000200005d5e1a : add dh, byte ptr [rdx + 6] ; mov eax, 0xc0000189 ; ret
0x00000200001bb6f7 : add dh, byte ptr [rdx + rax + 0x33] ; ror byte ptr [rax - 0x75], cl ; ret 0x80c3
0x0000020000118d76 : add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000138187 : add dh, byte ptr [rdx - 0x18] ; ret
0x0000020000472b8e : add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x00000200004c5f1b : add dh, byte ptr [rdx - 0x59] ; mov al, 2 ; ret
0x00000200004bf12b : add dh, byte ptr [rdx] ; leave ; mov al, cl ; ret
0x00000200005d16fb : add dh, byte ptr [rdx] ; ret 0x2241
0x000002000063861e : add dh, byte ptr [rsi + rax - 0x48] ; add al, byte ptr [rax] ; add al, al ; ret
0x00000200000b4174 : add dh, byte ptr [rsi + rcx - 0xa] ; ret
0x0000020000178042 : add dh, byte ptr [rsi + rdx - 0xa] ; ret 0x7502
0x00000200001cdcb3 : add dh, byte ptr [rsp + rbx*8 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x000002000044c21e : add dh, byte ptr [rsp + rcx - 0xa] ; ret
0x0000020000151e9c : add dh, byte ptr [rsp + rdx + 0xf] ; xchg eax, esp ; ret 0x8b48
0x00000200003a00b7 : add dh, ch ; ret 0x39
0x0000020000025c22 : add dh, dh ; ret
0x000002000027285b : add dh, dh ; ret 0x4d
0x000002000006c6fc : add dh, dh ; ret 0x7401
0x0000020000448215 : add dh, dh ; ret 0x7402
0x000002000053e5b3 : add dh, dh ; ret 0x7404
0x000002000005b151 : add dh, dh ; ret 0x740f
0x0000020000121e49 : add dh, dh ; ret 0x7410
0x00000200000a710c : add dh, dh ; ret 0x7501
0x00000200000b88d9 : add dh, dh ; ret 0x7502
0x00000200003a6d0e : add dh, dh ; ret 0x7503
0x00000200004c1ba8 : add dh, dh ; ret 0x7504
0x000002000005be72 : add dh, dh ; ret 0x7508
0x0000020000499cac : add dh, dh ; ret 0x7510
0x00000200001952fd : add dh, dh ; ret 0x7520
0x000002000021b187 : add dh, dh ; ret 0xc704
0x00000200000706b8 : add dh, dh ; ret 0xf01
0x000002000005be69 : add dh, dh ; ret 0xf02
0x0000020000034353 : add dh, dh ; ret 0xf03
0x00000200000890c6 : add dh, dh ; ret 0xf04
0x00000200000ebd71 : add dh, dh ; ret 0xf08
0x00000200000df921 : add dh, dh ; ret 0xf0f
0x00000200001b29f3 : add dh, dh ; ret 0xf10
0x00000200000bf5ba : add dh, dh ; ret 0xf1f
0x0000020000077e69 : add dh, dh ; ret 0xf20
0x00000200004b3db8 : add dh, dh ; ret 0xf30
0x00000200003e4637 : add dh, dh ; ret 0xf38
0x0000020000208cea : add dh, dh ; ret 0xf3f
0x0000020000079819 : add dh, dh ; ret 0xf40
0x00000200000b22ed : add dh, dh ; ret 0xff0
0x00000200003a4d2a : add dh, dh ; rol byte ptr [rcx + 0x22], 1 ; ret
0x00000200004393c2 : add dh, dh ; rol dword ptr [rax + 0xf], -0x7b ; ret
0x000002000021d101 : add dh, dh ; rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200004ad6e3 : add dh, dh ; shl byte ptr [rcx + rax], 1 ; ret
0x00000200005205bc : add dh, dl ; ret
0x0000020000235c2c : add dil, dil ; ret
0x00000200003a99ff : add dil, dil ; ret 0x348
0x00000200000e61e3 : add dil, dil ; ret 0x349
0x0000020000471c22 : add dil, r12b ; ret
0x000002000056e817 : add dil, r15b ; ret
0x00000200003ab314 : add dil, r15b ; ret 0x348
0x000002000014f17a : add dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f57a : add dl, al ; add byte ptr [rax], al ; ret
0x0000020000674da7 : add dl, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000025ba0b : add dl, al ; int 0xd
0x0000020000291b8f : add dl, al ; jmp 0x20000291bf7
0x000002000014ee7a : add dl, bh ; add byte ptr [rax], al ; ret
0x000002000026592b : add dl, bh ; dec byte ptr [rcx] ; insd dword ptr [rdi], dx ; add byte ptr [rdx], cl ; ret
0x000002000015923f : add dl, bh ; ret
0x000002000014f27a : add dl, bl ; add byte ptr [rax], al ; ret
0x00000200004c5f17 : add dl, bl ; cmp dl, 2 ; jb 0x200004c5ece ; mov al, 2 ; ret
0x000002000028d3f3 : add dl, bl ; jmp qword ptr [rcx]
0x0000020000273c1f : add dl, bl ; ret 0x36
0x0000020000243363 : add dl, bl ; ret 0x3b
0x000002000018f3c9 : add dl, byte ptr [r10] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000287afc : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14060016], cl ; ret 0xf00d
0x000002000024a970 : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14069b06], cl ; ret 0xf00d
0x00000200002638b1 : add dl, byte ptr [rbx] ; call qword ptr [rbx]
0x0000020000254878 : add dl, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x11467406 ; ret 0xf00d
0x00000200002770f0 : add dl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x1706c806 ; ret 0xf010
0x000002000019738c : add dl, byte ptr [rdx - 0x7cb7000d] ; ret 0x4908
0x00000200001851f2 : add dl, byte ptr [rdx] ; add byte ptr [rcx + 3], al ; ret
0x000002000018f3ca : add dl, byte ptr [rdx] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000027ce24 : add dl, byte ptr [rsi] ; add byte ptr [rsi], al ; andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x0000020000277a78 : add dl, byte ptr [rsi] ; add byte ptr [rsi], al ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200002489d8 : add dl, byte ptr [rsi] ; add byte ptr [rsi], al ; sysenter
0x0000020000243598 : add dl, byte ptr [rsi] ; or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x0000020000274edc : add dl, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x16061206 ; ret 0xf00f
0x000002000025baf8 : add dl, byte ptr [rsp + rcx] ; add byte ptr [rsi + rax], cl ; ret
0x000002000025ea5f : add dl, ch ; adc eax, dword ptr [rdi] ; ret 0x4714
0x000002000014f07a : add dl, ch ; add byte ptr [rax], al ; ret
0x0000020000471bc7 : add dl, ch ; ret 0x57
0x000002000014f47a : add dl, cl ; add byte ptr [rax], al ; ret
0x000002000068fd6b : add dl, cl ; jmp 0x1ffc37186b9
0x0000020000290c2f : add dl, cl ; xor byte ptr [rbx], ah ; ret
0x000002000014ef7a : add dl, dh ; add byte ptr [rax], al ; ret
0x000002000014f37a : add dl, dl ; add byte ptr [rax], al ; ret
0x000002000070791d : add dword ptr [r10], r13d ; ret
0x00000200006201aa : add dword ptr [r11], ebp ; ret 0x8b44
0x000002000041ed8f : add dword ptr [r11], ecx ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200006f2aa4 : add dword ptr [r11], edi ; ret
0x00000200002946d0 : add dword ptr [r11], esp ; ret 0xd88b
0x0000020000722c35 : add dword ptr [r11], r12d ; ret 0xd2f7
0x0000020000295e4d : add dword ptr [r11], r12d ; ret 0xf88b
0x000002000047ce2b : add dword ptr [r11], r13d ; ret
0x00000200005edd59 : add dword ptr [r11], r15d ; ret
0x000002000013241c : add dword ptr [r13 + 0x33], r8d ; jmp qword ptr [rax]
0x00000200000358ce : add dword ptr [r13 + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x0000020000707f19 : add dword ptr [r13 - 0x74ee8b2e], r8d ; ret 0xd148
0x00000200006c7361 : add dword ptr [r15 + 0x458], r11d ; mov rax, rdx ; jmp 0x200006c7378
0x00000200006c76b8 : add dword ptr [r15 + 0x458], r9d ; mov rax, rdx ; jmp 0x200006c76cf
0x00000200006e9bb3 : add dword ptr [r8 + 0x33], ecx ; ret 0xd233
0x00000200001448b8 : add dword ptr [r8 + 0x3b], ecx ; ret 0xa76
0x00000200005bfe50 : add dword ptr [r8 + 0x63], ecx ; enter 0xf41, -0x49 ; ret 0xc149
0x00000200006cd58e : add dword ptr [r8 + 0xb], ecx ; ret 0x8b48
0x000002000020d6d3 : add dword ptr [r8 + r9 + 0x48], r14d ; inc edi ; inc rdx ; jmp 0x2000020d715
0x00000200000c4d4c : add dword ptr [r8 - 0x77], ecx ; or bl, bpl ; ret
0x0000020000201f5b : add dword ptr [r8 - 0x7b], ecx ; sal byte ptr [rbp + 0x31], 0xff ; ret 0x8348
0x000002000020d804 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000002000020ecea : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000020000150275 : add dword ptr [r8], eax ; add cl, ch ; add al, bl ; add byte ptr [rax], al ; ret
0x00000200001502b5 : add dword ptr [r8], eax ; add cl, ch ; ret 0xc2
0x0000020000071c7f : add dword ptr [r8], eax ; add dh, dh ; ret
0x00000200003a51d4 : add dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200001f1069 : add dword ptr [r8], r8d ; add byte ptr [rcx + 3], al ; ror dword ptr [rbp + 3], cl ; ret
0x0000020000150335 : add dword ptr [r8], r8d ; add cl, ch ; ret 0
0x00000200000638de : add dword ptr [r8], r8d ; add dh, dh ; ret
0x0000020000233e95 : add dword ptr [r9 + 0x14], edx ; xor eax, eax ; ret
0x0000020000060a0f : add dword ptr [r9 + 0x23], ecx ; ret
0x00000200000264fa : add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x0000020000213f15 : add dword ptr [r9 + 0x3b], eax ; ret 0xdd75
0x0000020000213eeb : add dword ptr [r9 + 0x3b], eax ; ret 0xde75
0x00000200004bbc12 : add dword ptr [r9 - 0x75], ecx ; iretd ; call rsi
0x00000200004b4faa : add dword ptr [r9 - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x0000020000408b83 : add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200000ac819 : add dword ptr [rax + 0x23], ecx ; ret
0x00000200000898c7 : add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200000c0734 : add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x000002000015e072 : add dword ptr [rax + 0x23], ecx ; ret 0xc149
0x00000200001f1349 : add dword ptr [rax + 0x23], ecx ; ret 0xccc3
0x0000020000144807 : add dword ptr [rax + 0x2c64101], ecx ; cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x0000020000679347 : add dword ptr [rax + 0x2d8b0842], ecx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200000327f1 : add dword ptr [rax + 0x33], ecx ; ret 0x2349
0x00000200006c6f84 : add dword ptr [rax + 0x33], ecx ; ret 0x8948
0x00000200006e9bb4 : add dword ptr [rax + 0x33], ecx ; ret 0xd233
0x00000200001124ac : add dword ptr [rax + 0x3b], ecx ; ret
0x00000200000894fe : add dword ptr [rax + 0x3b], ecx ; ret 0x1a74
0x00000200000fd237 : add dword ptr [rax + 0x3b], ecx ; ret 0x1f75
0x00000200001448b9 : add dword ptr [rax + 0x3b], ecx ; ret 0xa76
0x000002000067459c : add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x000002000012dbc6 : add dword ptr [rax + 0x3b], ecx ; sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x0000020000027121 : add dword ptr [rax + 0x40000005], 0x38 ; stosd dword ptr [rdi], eax ; ret
0x0000020000235492 : add dword ptr [rax + 0x41], ecx ; mov byte ptr [rdx], 0x2e ; call r10
0x00000200005bfe51 : add dword ptr [rax + 0x63], ecx ; enter 0xf41, -0x49 ; ret 0xc149
0x000002000040516d : add dword ptr [rax + 0x63], ecx ; ret
0x00000200001d8c55 : add dword ptr [rax + 0xb], ecx ; ret 0x8944
0x000002000005c996 : add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x00000200006cd58f : add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x000002000036cebc : add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x000002000071e63d : add dword ptr [rax + 0xc], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x000002000071e7c3 : add dword ptr [rax + 0xc], 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x000002000071e920 : add dword ptr [rax + 0xc], 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x000002000071e9de : add dword ptr [rax + 0xc], 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x000002000022bc31 : add dword ptr [rax + 0xf], ecx ; fisttp word ptr [rax - 0x75] ; ret
0x0000020000159ed3 : add dword ptr [rax + 0xf], ecx ; ret
0x0000020000058d3d : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000020000011a02 : add dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4000
0x00000200004af403 : add dword ptr [rax + 1], edi ; ret
0x00000200003daabd : add dword ptr [rax + 3], ecx ; rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x00000200000ef075 : add dword ptr [rax + 3], ecx ; ror byte ptr [rax - 0x77], 0xc ; ret
0x00000200000ef074 : add dword ptr [rax + 3], r9d ; ror byte ptr [rax - 0x77], 0xc ; ret
0x00000200003f9316 : add dword ptr [rax + rax + 0x68e80000], -0x39 ; ret
0x000002000015e1d0 : add dword ptr [rax + rax], edx ; ret
0x000002000004f908 : add dword ptr [rax + rbp - 0xa], esi ; ret
0x000002000020d6d4 : add dword ptr [rax + rcx + 0x48], esi ; inc edi ; inc rdx ; jmp 0x2000020d714
0x000002000051641e : add dword ptr [rax + rcx*4 + 0x42], eax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x000002000002b516 : add dword ptr [rax + rcx*8 - 0x75beb78c], eax ; ret 0x4db9
0x00000200000aa32f : add dword ptr [rax + rdx + 0x400], ecx ; ret
0x00000200000aa32e : add dword ptr [rax + rdx + 0x400], r9d ; ret
0x00000200000aa33c : add dword ptr [rax + rdx + 0x404], ecx ; ret
0x00000200000aa33b : add dword ptr [rax + rdx + 0x404], r9d ; ret
0x000002000012d0fb : add dword ptr [rax + rdx - 0x7b], esi ; ret 0x875
0x00000200001b8b47 : add dword ptr [rax - 0x2f], ecx ; call 0x20048ddae9d
0x0000020000077876 : add dword ptr [rax - 0x3f], ecx ; call 0x1ffc22ac08e
0x00000200001f2608 : add dword ptr [rax - 0x3f], ecx ; call 0x1ffc2426f23
0x00000200005d6a35 : add dword ptr [rax - 0x3fccfcbf], ecx ; ret
0x000002000015e22c : add dword ptr [rax - 0x3fffff45], edi ; ret
0x00000200006015cf : add dword ptr [rax - 0x74bbd3bf], ecx ; ret 0x2b44
0x00000200000da211 : add dword ptr [rax - 0x74bfdbbc], ecx ; ret 0x8445
0x00000200000c24c9 : add dword ptr [rax - 0x75], ecx ; adc dh, dh ; ret 0xf01
0x000002000011a517 : add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000d9137 : add dword ptr [rax - 0x75], ecx ; add eax, 0x2783c1 ; call rax
0x00000200000d90d5 : add dword ptr [rax - 0x75], ecx ; add eax, 0x278423 ; call rax
0x000002000063d770 : add dword ptr [rax - 0x75], ecx ; add eax, 0xffc63ff0 ; call rax
0x0000020000553542 : add dword ptr [rax - 0x75], ecx ; add eax, 0xffd4e20e ; call rax
0x0000020000133ac0 : add dword ptr [rax - 0x75], ecx ; and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x00000200000bf623 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x00000200004d727c : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000039b1b7 : add dword ptr [rax - 0x75], ecx ; push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000002000006ebc4 : add dword ptr [rax - 0x75], ecx ; ret
0x00000200001bb9ed : add dword ptr [rax - 0x75], ecx ; ret 0x2b49
0x000002000002a399 : add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x00000200004a6433 : add dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000798a6 : add dword ptr [rax - 0x75], ecx ; ret 0xba48
0x00000200000894a3 : add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000403d7e : add dword ptr [rax - 0x75], ecx ; retf ; call 0x20000030f77
0x000002000044427e : add dword ptr [rax - 0x75], ecx ; retf ; call 0x20000068fd7
0x000002000044427d : add dword ptr [rax - 0x75], ecx ; retf ; call 0x20000068fd8
0x00000200004c6feb : add dword ptr [rax - 0x75], ecx ; retf ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000473359 : add dword ptr [rax - 0x75], ecx ; rol dword ptr [rcx + 0xf], 1 ; ret 0xc933
0x00000200000f9f7a : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x00000200003c4690 : add dword ptr [rax - 0x77], ecx ; and al, 0x20 ; call r10
0x000002000040dcfb : add dword ptr [rax - 0x77], ecx ; and al, 0x20 ; call rsi
0x00000200000c4d4d : add dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x00000200003fdc48 : add dword ptr [rax - 0x77], ecx ; or byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x00000200001cd398 : add dword ptr [rax - 0x77], ecx ; or eax, 0x107db8 ; ret
0x0000020000387af3 : add dword ptr [rax - 0x7b], ecx ; dec dword ptr [rdi] ; test byte ptr [rdx], al ; ret
0x0000020000201f5c : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 0x31], 0xff ; ret 0x8348
0x000002000009d2e1 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x0000020000663f78 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x0000020000055f7e : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x0000020000135ed9 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000020000134670 : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x00000200005008be : add dword ptr [rax - 0x7d], ecx ; ret 0x8d08
0x000002000020e98b : add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x0000020000216522 : add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200001c9387 : add dword ptr [rax - 0x7f], ecx ; ret
0x000002000044b55c : add dword ptr [rax - 0x7f], ecx ; ret 0x438
0x000002000072222d : add dword ptr [rax - 0x7f], ecx ; ret 0x800
0x0000020000115ce0 : add dword ptr [rax - 1], ecx ; enter -0x78b8, 1 ; ret
0x0000020000144bf4 : add dword ptr [rax - 1], ecx ; ret
0x000002000006ee56 : add dword ptr [rax - 1], ecx ; ret 0xff25
0x0000020000158524 : add dword ptr [rax - 1], ecx ; ror dword ptr [rcx - 1], -0x38 ; jne 0x20000158529 ; ret
0x0000020000190f32 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x0000020000180e51 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200001594b7 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000070fc8c : add dword ptr [rax], 0 ; add byte ptr [rcx - 1], al ; ret 0x8348
0x000002000012af39 : add dword ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x000002000014eab5 : add dword ptr [rax], 0 ; add cl, ch ; ret 0xda
0x000002000037722a : add dword ptr [rax], 0x10 ; add byte ptr [rax], al ; call rax
0x00000200001d1146 : add dword ptr [rax], 0x2b480000 ; ret 0x8b44
0x000002000065161a : add dword ptr [rax], 0x49006509 ; add ecx, ecx ; jmp rcx
0x0000020000128f13 : add dword ptr [rax], 0x83480000 ; ret
0x000002000008fe43 : add dword ptr [rax], 0x83490024 ; ret
0x0000020000602e12 : add dword ptr [rax], 0x8b440000 ; ret
0x000002000020a037 : add dword ptr [rax], 2 ; ret
0x000002000062066d : add dword ptr [rax], eax ; add al, 0 ; je 0x2000062067e ; mov al, 1 ; ret
0x000002000051c187 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x28 ; ret
0x000002000065c5d5 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000135b56 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x38 ; ret
0x000002000065d268 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x48 ; ret
0x00000200004ed0dd : add dword ptr [rax], eax ; add al, al ; jmp 0x200004ed0aa
0x0000020000653b34 : add dword ptr [rax], eax ; add al, al ; mov eax, edx ; jmp 0x20000653b46
0x00000200000dcce3 : add dword ptr [rax], eax ; add al, al ; ret
0x000002000043b104 : add dword ptr [rax], eax ; add al, ch ; add al, 0xf5 ; ret 0x48ff
0x000002000004b002 : add dword ptr [rax], eax ; add al, ch ; cli ; ret
0x00000200005d9178 : add dword ptr [rax], eax ; add al, ch ; cmp al, 0xf9 ; ret 0x48ff
0x000002000043b161 : add dword ptr [rax], eax ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; ret 0x48ff
0x00000200004b7264 : add dword ptr [rax], eax ; add al, ch ; mov al, 0xac ; ret 0x4cff
0x00000200005117a6 : add dword ptr [rax], eax ; add al, ch ; mov dl, 0xc8 ; ret
0x00000200004f0bbe : add dword ptr [rax], eax ; add al, ch ; mov esi, 0x8b000003 ; ret
0x00000200004a1960 : add dword ptr [rax], eax ; add al, ch ; pop rax ; ret 0xffcb
0x0000020000548563 : add dword ptr [rax], eax ; add al, ch ; popfq ; jp 0x2000054853f ; push qword ptr [rdx] ; ret
0x0000020000385690 : add dword ptr [rax], eax ; add al, ch ; push -0x740032d3 ; ret
0x000002000015a522 : add dword ptr [rax], eax ; add al, ch ; push rsi ; add byte ptr es:[rax], al ; nop ; ret
0x00000200004d1864 : add dword ptr [rax], eax ; add al, ch ; push rsp ; ret
0x00000200003e8a7d : add dword ptr [rax], eax ; add al, ch ; ret
0x000002000054ed02 : add dword ptr [rax], eax ; add al, ch ; ret 0xae6b
0x0000020000296596 : add dword ptr [rax], eax ; add al, ch ; ret 0xd998
0x00000200004f511c : add dword ptr [rax], eax ; add al, ch ; sbb al, 0xc9 ; ret
0x0000020000168b83 : add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0x12
0x00000200000ce6fe : add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000045dc0a : add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x000002000050cf0b : add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x000002000050906e : add dword ptr [rax], eax ; add bh, bh ; ret 0x8b45
0x00000200004a0dc7 : add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x00000200004a13fb : add dword ptr [rax], eax ; add bh, bh ; ret 0xd7eb
0x000002000047677c : add dword ptr [rax], eax ; add bh, bh ; ret 0xe2eb
0x000002000020b4df : add dword ptr [rax], eax ; add bh, bh ; ret 0xebe9
0x0000020000413a31 : add dword ptr [rax], eax ; add bh, dh ; ret 0x6000
0x0000020000154b73 : add dword ptr [rax], eax ; add bl, bh ; ret
0x0000020000110f5f : add dword ptr [rax], eax ; add bl, ch ; mov dh, 0x8a ; ret 0x624
0x00000200001de413 : add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000bc87d : add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200001bd96d : add dword ptr [rax], eax ; add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000089eac : add dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x000002000011e2bb : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000005dc40 : add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; fimul dword ptr [rax - 0x75] ; ret
0x00000200004521a4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000020efa5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003dbf2e : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000089e31 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0xd775
0x000002000037a402 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000002000007b240 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0xb48
0x00000200001f6b4b : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x000002000037d21e : add dword ptr [rax], eax ; add byte ptr [rax + 5], cl ; add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000020ba9f : add dword ptr [rax], eax ; add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x0000020000645f14 : add dword ptr [rax], eax ; add byte ptr [rax + rbp*8], ah ; ret
0x00000200001eb862 : add dword ptr [rax], eax ; add byte ptr [rax + rdi - 0x51], al ; ret
0x0000020000123986 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0x3e00
0x0000020000117788 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc234bfa7
0x00000200001f8f46 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc242d765
0x00000200001ef4a7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc3423cc6
0x00000200003bee65 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000b0ac1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc39652e0
0x000002000010439b : add dword ptr [rax], eax ; add byte ptr [rax - 0x3fffff0e], bh ; ret
0x0000020000232972 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200000fd3d3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7401
0x00000200001ebe20 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x000002000017a2a2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x000002000005b746 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b48
0x000002000038e2ee : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000093a37 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000761f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; ret 0x61eb
0x00000200002329d3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000200004a179c : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or eax, ebp ; cdq ; ret 0x48ff
0x00000200005c2573 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7402
0x0000020000573d58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; ret
0x0000020000075826 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000571567 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000087ff6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000002645b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000020b726 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x49f0
0x000002000004b8b0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x00000200004e636e : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000003a08d : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000452624 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000114ea6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000011c885 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200005d95f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x20000208a45
0x00000200003f7f0e : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x00000200001fe14f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; xlatb ; call rax
0x000002000072268e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000007cacd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sbb dh, dh ; ret
0x0000020000064861 : add dword ptr [rax], eax ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000038d189 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 2
0x000002000048dbfc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rax + 0xf] ; ret
0x00000200003e98ab : add dword ptr [rax], eax ; add byte ptr [rax - 0x7c], al ; div byte ptr [rdx - 0xa] ; ret
0x00000200000b14e0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000002000006631d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000007d805 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000f2667 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x00000200001ce936 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000ec335 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xc00
0x0000020000209ccc : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200004a9233 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000200001e3d95 : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x000002000023355e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x00000200001743ed : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200006d744f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x000002000009637a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000020000161cda : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000054753 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000519ad4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000074029 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000161dca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000bf684 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000015c4fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000161ca9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000478a31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000017603e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000007229a
0x000002000047d885 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000a8727
0x0000020000137d32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000294006
0x000002000067172d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000294007
0x000002000040df21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r10
0x000002000040b64d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x00000200004e2260 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000002000050aafe : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r15
0x0000020000500097 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r8
0x00000200001bbb84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000020000403746 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x000002000040ac2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rsi
0x00000200000fc645 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, r8d ; ret
0x00000200003787f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmp cl, 0xf ; cmovne eax, edx ; ret
0x000002000025f7a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; fild qword ptr [rdi + rax*2] ; ret
0x000002000023b96c : add dword ptr [rax], eax ; add byte ptr [rax], al ; in eax, dx ; ret
0x000002000006fbae : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000006fb7b
0x000002000016bc9a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000016bcb0
0x00000200001857f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000018580f
0x0000020000585ee0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x200004921ea
0x000002000058294a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x20000582962
0x00000200006cefa1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp r8
0x000002000026879c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rsi
0x00000200000f451f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200000f4530 ; ret
0x0000020000103696 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200001036cd ; ret
0x00000200003f0ea4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f0e9b ; call 0x200000bd0e8
0x00000200004f154a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, 1 ; ret
0x000002000070f811 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200000e05cc : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000200001d9277 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000666f4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r9d ; ret
0x000002000023d550 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebx, es ; cmp dword ptr [rax], eax ; hlt ; ret
0x000002000024b53c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 0xe9003ec3 ; ret
0x0000020000446fc6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [r11 - 0x38], rax ; call r10
0x000002000067f277 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003f7258 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call r10
0x000002000023d6c0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; not ah ; cmp dword ptr [rax], eax ; ret
0x0000020000155a74 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rax ; ret
0x00000200006433fb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000024b518 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rsp ; ret
0x000002000023a6ac : add dword ptr [rax], eax ; add byte ptr [rax], al ; push rax ; sub byte ptr [rbx], dl ; ret 0x5328
0x0000020000019494 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000019b64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0
0x0000020000268c48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1036
0x000002000023b0e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x164a
0x000002000024c2a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3f39
0x000002000024ce28 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3f61
0x000002000028dcb8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x61ff
0x00000200002917e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x63c4
0x000002000000a61c : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x9e
0x0000020000257fbc : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0xc
0x000002000024b4fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret 0x3e
0x0000020000102e38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; setne al ; ret
0x0000020000141fbf : add dword ptr [rax], eax ; add byte ptr [rax], al ; test eax, eax ; cmovg eax, ecx ; ret
0x00000200004a0618 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x200004a062b ; ret
0x00000200002638a4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; wait ; adc ecx, dword ptr [rcx] ; call qword ptr [rbx]
0x000002000023d530 : add dword ptr [rax], eax ; add byte ptr [rax], al ; wait ; ret 0x39
0x00000200002916e4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg eax, edi ; ret 0x63
0x0000020000266010 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg eax, edi ; xor dword ptr [rdx], ecx ; ret
0x000002000024b524 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg eax, edx ; ret
0x000002000010ca29 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x000002000015e0d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000148aa4 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x0000020000486c4d : add dword ptr [rax], eax ; add byte ptr [rbp + 0x18880ff6], al ; ret
0x000002000007eb3f : add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], cl ; ret 0xf748
0x00000200000596c7 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004a7d83 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; div bh ; ret 0
0x0000020000649f5b : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200001334f6 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x000002000007f219 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x00000200000f7301 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x00000200000f727f : add dword ptr [rax], eax ; add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x0000020000055bb3 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x5b], bl ; ret
0x00000200000a5d89 : add dword ptr [rax], eax ; add byte ptr [rbp + 0xb], cl ; ret
0x0000020000590df8 : add dword ptr [rax], eax ; add byte ptr [rbp + 5], dh ; call 0x200000bd0e7
0x00000200003fae8f : add dword ptr [rax], eax ; add byte ptr [rbp - 0x1577f00a], al ; ret 0x15
0x000002000049ca96 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x27], dh ; call 0x200000bd0e8
0x0000020000450dfe : add dword ptr [rax], eax ; add byte ptr [rbp - 0x6f], dh ; call 0x200000bd0e7
0x00000200001ab498 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000033c79 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000566b02 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000004f011 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; in al, -0x75 ; ret 0x840f
0x00000200000dd145 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x5488
0x00000200004d91ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x358d4cfd], cl ; ret 0x1d0e
0x00000200000da680 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x00000200005f86ac : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0xd591
0x000002000061101e : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; clc ; call rbx
0x00000200005af774 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xda18
0x00000200003b84ac : add dword ptr [rax], eax ; add byte ptr [rbx - 0x1f7cf91f], al ; ret
0x00000200004c4219 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x1f7cf91f], al ; ret 0xb41
0x00000200005f13a1 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b7e78f], cl ; ret 0xb48
0x0000020000568a6e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74bbf7a9], cl ; ret
0x00000200004f921e : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x0000020000465e03 : add dword ptr [rax], eax ; add byte ptr [rbx], ah ; ret
0x000002000002a8d7 : add dword ptr [rax], eax ; add byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004309a3 : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret
0x00000200006f7ea3 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x0000020000615df5 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200001d8849 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200001c19d0 : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret 0xc83b
0x00000200004a4e49 : add dword ptr [rax], eax ; add byte ptr [rbx], cl ; fldpi ; ret
0x00000200003f8ed3 : add dword ptr [rax], eax ; add byte ptr [rbx], cl ; ret
0x00000200003f92ab : add dword ptr [rax], eax ; add byte ptr [rbx], cl ; ret 0xba0f
0x000002000021ddb8 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; call rbx
0x00000200004c1b7f : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; div bh ; ret 0xfff0
0x0000020000439783 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x000002000013240a : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x00000200006c54dc : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r9
0x00000200006e7cb6 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call rbx
0x00000200004491f8 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ret
0x0000020000637b44 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000415b35 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; sal bh, 1 ; ret 0x7000
0x0000020000416b31 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; sal dh, 1 ; ret 0x7547
0x000002000039f7eb : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200005065d3 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x109fe801], dh ; ret
0x00000200000ac012 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; cmp esi, dword ptr [rdx - 0x17] ; ret 0xfffa
0x0000020000176832 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3a], al ; ret 0x1475
0x000002000044509b : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x2f77
0x000002000008032c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; fmul dword ptr [rdi + rcx + 0x42] ; ret
0x00000200006147cf : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000007d485 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x0000020000391fb6 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004bf2a4 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011b448 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003884dd : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000007aa2e : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rsi ; pop rbx ; ret
0x00000200003f12e6 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000084f1e : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbx ; pop rbp ; ret
0x0000020000368e17 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret
0x0000020000058240 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xb], cl ; ret 0xc748
0x00000200003b80e8 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret
0x000002000061a822 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x85c7
0x000002000061a7ed : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8944
0x00000200001f106a : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ror dword ptr [rbp + 3], cl ; ret
0x0000020000087c0d : add dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret
0x00000200004b7287 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x2f], cl ; jmp 0x1ffc2f7fd82
0x00000200003ec37a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200004a9226 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 + 0x3b] ; ret 0x870f
0x00000200000ad762 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x3349
0x0000020000455369 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7483dbbc], cl ; ret 0x8948
0x000002000004201d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x74b2c7b9], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd80
0x000002000004c61f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x74b7cbbd], cl ; ret 0xb48
0x000002000020c7e6 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x00000200004b0c76 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; fmul qword ptr [rax - 0x75] ; ret 0xff48
0x0000020000201709 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000295ab7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x41f0
0x000002000009189d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8348
0x0000020000294ac8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b45
0x00000200000f1b15 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x0000020000294922 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xff0
0x000002000005d307 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rax + 0xf], -0x51 ; ret
0x000002000007ca1b : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f3446 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x000002000012b4db : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004863c4 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000007aadc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0xb948
0x0000020000071c3e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003f819e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x00000200005d1910 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x00000200002940c0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x000002000021fb3c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret 0x457f
0x000002000056b0c7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; ret
0x00000200006c86e9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; call rcx
0x000002000005d8bb : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000200005a50d4 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000002000045dd06 : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200000ab7d1 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000020000202646 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000007f6a0 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5d], bl ; ret
0x0000020000202e1a : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200000a3c94 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200000b505f : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001dc691 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x5488
0x000002000005ff91 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200004d6362 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x000002000013d46e : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000680703 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000067af52 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xc4b9
0x00000200000415fc : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; scasd eax, dword ptr [rdi] ; ret
0x000002000063c558 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x2000063c56b ; ret 0xc13b
0x000002000004722d : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x0000020000066667 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x90 ; ret
0x000002000059e447 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dh, bh ; ret
0x0000020000116b33 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dword ptr [rax], edx ; or dword ptr [r8], r8d ; ret
0x0000020000596c9f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dword ptr [rax], edx ; ret 0xfff2
0x0000020000168c97 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dword ptr [rbx], ebp ; ret
0x0000020000596d07 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test eax, esi ; ret 0xfff2
0x00000200004978b1 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001dff44 : add dword ptr [rax], eax ; add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x000002000041022d : add dword ptr [rax], eax ; add byte ptr [rdx + 0xa29e901], dh ; ret 0xccff
0x000002000067afef : add dword ptr [rax], eax ; add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x000002000006771f : add dword ptr [rax], eax ; add byte ptr [rdx + rcx*4 - 0x7e], al ; ret
0x00000200004450f8 : add dword ptr [rax], eax ; add byte ptr [rdx + rdx*8 - 0x74b7958c], al ; ret
0x00000200000a7037 : add dword ptr [rax], eax ; add byte ptr [rdx + rdx*8 - 0x74b7ab87], al ; ret
0x00000200004050a5 : add dword ptr [rax], eax ; add byte ptr [rdx - 0x413e16ff], dh ; ret 0xccff
0x000002000024b575 : add dword ptr [rax], eax ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bh ; ret
0x0000020000492a57 : add dword ptr [rax], eax ; add byte ptr [rdx], bh ; ret
0x0000020000389bd4 : add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x00000200005a8aa7 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x99e9
0x000002000002ac21 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x4374
0x00000200005b809a : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200005905ac : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; scasd eax, dword ptr [rdi] ; ret
0x0000020000474d38 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000175308 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; cli ; ret
0x00000200005801a2 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; popfq ; ret 0xffef
0x00000200005f0713 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0
0x0000020000035182 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x000002000021ad98 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000002000037fc1b : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7d], ah ; ret 0x6630
0x000002000007f62d : add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret
0x000002000006efac : add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x0000020000150176 : add dword ptr [rax], eax ; add cl, ch ; add al, ah ; add byte ptr [rax], al ; ret
0x0000020000150576 : add dword ptr [rax], eax ; add cl, ch ; add al, al ; add byte ptr [rax], al ; ret
0x000002000014fe76 : add dword ptr [rax], eax ; add cl, ch ; add al, bh ; add byte ptr [rax], al ; ret
0x0000020000150276 : add dword ptr [rax], eax ; add cl, ch ; add al, bl ; add byte ptr [rax], al ; ret
0x0000020000150076 : add dword ptr [rax], eax ; add cl, ch ; add al, ch ; add byte ptr [rax], al ; ret
0x0000020000150476 : add dword ptr [rax], eax ; add cl, ch ; add al, cl ; add byte ptr [rax], al ; ret
0x000002000014ff76 : add dword ptr [rax], eax ; add cl, ch ; add al, dh ; add byte ptr [rax], al ; ret
0x0000020000150376 : add dword ptr [rax], eax ; add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x000002000014fd76 : add dword ptr [rax], eax ; add cl, ch ; add cl, al ; add byte ptr [rax], al ; ret
0x000002000014fa76 : add dword ptr [rax], eax ; add cl, ch ; add cl, bl ; add byte ptr [rax], al ; ret
0x000002000014fc76 : add dword ptr [rax], eax ; add cl, ch ; add cl, cl ; add byte ptr [rax], al ; ret
0x000002000014fb76 : add dword ptr [rax], eax ; add cl, ch ; add cl, dl ; add byte ptr [rax], al ; ret
0x0000020000150156 : add dword ptr [rax], eax ; add cl, ch ; and al, ah ; add byte ptr [rax], al ; ret
0x0000020000150556 : add dword ptr [rax], eax ; add cl, ch ; and al, al ; add byte ptr [rax], al ; ret
0x000002000014fe56 : add dword ptr [rax], eax ; add cl, ch ; and al, bh ; add byte ptr [rax], al ; ret
0x0000020000150256 : add dword ptr [rax], eax ; add cl, ch ; and al, bl ; add byte ptr [rax], al ; ret
0x0000020000150056 : add dword ptr [rax], eax ; add cl, ch ; and al, ch ; add byte ptr [rax], al ; ret
0x0000020000150456 : add dword ptr [rax], eax ; add cl, ch ; and al, cl ; add byte ptr [rax], al ; ret
0x000002000014ff56 : add dword ptr [rax], eax ; add cl, ch ; and al, dh ; add byte ptr [rax], al ; ret
0x0000020000150356 : add dword ptr [rax], eax ; add cl, ch ; and al, dl ; add byte ptr [rax], al ; ret
0x000002000014fd56 : add dword ptr [rax], eax ; add cl, ch ; and cl, al ; add byte ptr [rax], al ; ret
0x000002000014fa56 : add dword ptr [rax], eax ; add cl, ch ; and cl, bl ; add byte ptr [rax], al ; ret
0x000002000014fc56 : add dword ptr [rax], eax ; add cl, ch ; and cl, cl ; add byte ptr [rax], al ; ret
0x000002000014fb56 : add dword ptr [rax], eax ; add cl, ch ; and cl, dl ; add byte ptr [rax], al ; ret
0x00000200001868be : add dword ptr [rax], eax ; add cl, ch ; call qword ptr [rdi]
0x000002000014fc36 : add dword ptr [rax], eax ; add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x000002000014fa96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014fa6e ; add byte ptr [rax], al ; ret
0x000002000014fb96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014fb6d ; add byte ptr [rax], al ; ret
0x000002000014fc96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014fc6c ; add byte ptr [rax], al ; ret
0x000002000014fd96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014fd6b ; add byte ptr [rax], al ; ret
0x000002000014fe96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014fe6a ; add byte ptr [rax], al ; ret
0x000002000014ff96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014ff69 ; add byte ptr [rax], al ; ret
0x0000020000150096 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150068 ; add byte ptr [rax], al ; ret
0x0000020000150196 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150167 ; add byte ptr [rax], al ; ret
0x0000020000150296 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150266 ; add byte ptr [rax], al ; ret
0x0000020000150295 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150267 ; add byte ptr [rax], al ; ret
0x0000020000150396 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150365 ; add byte ptr [rax], al ; ret
0x0000020000150496 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150464 ; add byte ptr [rax], al ; ret
0x0000020000150596 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150563 ; add byte ptr [rax], al ; ret
0x0000020000150696 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150662 ; add byte ptr [rax], al ; ret
0x0000020000150796 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150761 ; add byte ptr [rax], al ; ret
0x0000020000150896 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150860 ; add byte ptr [rax], al ; ret
0x0000020000150996 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000015095f ; add byte ptr [rax], al ; ret
0x0000020000150a96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150a5e ; add byte ptr [rax], al ; ret
0x0000020000150b96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150b5d ; add byte ptr [rax], al ; ret
0x0000020000150c96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150c5c ; add byte ptr [rax], al ; ret
0x0000020000150d96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150d5b ; add byte ptr [rax], al ; ret
0x0000020000150e96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150e5a ; add byte ptr [rax], al ; ret
0x0000020000150f96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150f59 ; add byte ptr [rax], al ; ret
0x000002000014ff36 : add dword ptr [rax], eax ; add cl, ch ; mov byte ptr [rax], 0 ; ret
0x0000020000150236 : add dword ptr [rax], eax ; add cl, ch ; ret
0x000002000011f680 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000020000150fb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb5
0x0000020000150eb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb6
0x0000020000150db6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb7
0x0000020000150cb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb8
0x0000020000150bb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb9
0x0000020000150ab6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xba
0x00000200001509b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbb
0x00000200001508b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbc
0x00000200001507b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbd
0x00000200001506b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbe
0x00000200001505b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbf
0x00000200001504b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc0
0x00000200001503b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc1
0x00000200001502b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc2
0x00000200001501b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc3
0x00000200001500b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc4
0x000002000014ffb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc5
0x000002000014feb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc6
0x000002000014fdb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc7
0x000002000014fcb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc8
0x000002000014fbb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xc9
0x000002000014fab6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xca
0x000002000054ad83 : add dword ptr [rax], eax ; add cl, ch ; ret 0xe874
0x0000020000150536 : add dword ptr [rax], eax ; add cl, ch ; rol byte ptr [rax], 0 ; ret
0x0000020000150436 : add dword ptr [rax], eax ; add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000025c20 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200001579f3 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x0000020000448213 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0x00000200003a3654 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000200004ab7ef : add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x000002000044820a : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000020000434266 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x0000020000618feb : add dword ptr [rax], eax ; add dh, dh ; ret 0xf10
0x00000200000c68c8 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf20
0x00000200004b3db6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf30
0x0000020000208ce8 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf3f
0x0000020000079817 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf40
0x00000200004393c0 : add dword ptr [rax], eax ; add dh, dh ; rol dword ptr [rax + 0xf], -0x7b ; ret
0x0000020000107bb9 : add dword ptr [rax], eax ; add dword ptr [rax], eax ; ret
0x0000020000208e9f : add dword ptr [rax], eax ; add eax, r10d ; jmp 0x20000208ead
0x000002000012fc40 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021f354 : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013f478 : add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000012d0e3 : add dword ptr [rax], eax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000012e2ba : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000134d1d : add dword ptr [rax], eax ; add rsp, 0x88 ; ret
0x0000020000012b9c : add dword ptr [rax], eax ; call qword ptr [rax]
0x000002000011baf9 : add dword ptr [rax], eax ; call rax
0x0000020000032423 : add dword ptr [rax], eax ; jmp 0x200000320d6
0x0000020000097025 : add dword ptr [rax], eax ; jmp 0x20000096fb1
0x0000020000703bf9 : add dword ptr [rax], eax ; lea rcx, qword ptr [rbp - 0x39] ; call 0x2000006fe28
0x0000020000679ade : add dword ptr [rax], eax ; mov dword ptr [rip + 0x1764a], eax ; ret
0x00000200006750f9 : add dword ptr [rax], eax ; mov eax, dword ptr [rip + 0x1bfb3] ; ret
0x00000200001319f9 : add dword ptr [rax], eax ; mov eax, r8d ; ret
0x0000020000235c9a : add dword ptr [rax], eax ; mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200005c6d52 : add dword ptr [rax], eax ; mov ecx, 0xd ; call 0x20000032fc9
0x00000200001da4ea : add dword ptr [rax], eax ; mov rax, rdx ; ret
0x0000020000107bbb : add dword ptr [rax], eax ; ret
0x00000200003ee028 : add dword ptr [rax], eax ; rol bl, 0xb8 ; adc byte ptr [rdx], al ; add al, al ; ret
0x00000200000fa733 : add dword ptr [rax], eax ; ror byte ptr [rax - 0x7d], 0xf9 ; dec byte ptr [rdi] ; ret 0x4589
0x00000200004a2860 : add dword ptr [rax], eax ; sbb eax, eax ; add rsp, 0x28 ; ret
0x000002000058e95d : add dword ptr [rax], eax ; shr cl, 0x39 ; xchg eax, ebx ; int1 ; push rsi ; ret
0x000002000060d7fc : add dword ptr [rax], eax ; shr cl, 0xe6 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000067f7b0 : add dword ptr [rax], eax ; test al, 2 ; je 0x2000067f7c1 ; xor eax, eax ; ret
0x000002000014533e : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003a51d5 : add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200005e76a6 : add dword ptr [rax], eax ; xor esi, esi ; call 0x200004d395a
0x0000020000011057 : add dword ptr [rax], ebp ; push rsp ; fild word ptr [rcx - 2] ; ret 0xb87
0x00000200006dad95 : add dword ptr [rax], esp ; add byte ptr [rax + rax*4], al ; add byte ptr [rax], dl ; jo 0x200006dad32 ; ret
0x00000200004309a2 : add dword ptr [rax], r8d ; add byte ptr [rbx], al ; ret
0x00000200000f1b14 : add dword ptr [rax], r8d ; add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x000002000012f995 : add dword ptr [rbp + 0x14], esi ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000095cda : add dword ptr [rbp + 0x15], esi ; lock dec dword ptr [rcx] ; ret
0x000002000002b79d : add dword ptr [rbp + 0x1e], esi ; ret
0x000002000016449c : add dword ptr [rbp + 0x20], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001c69e4 : add dword ptr [rbp + 0x23], eax ; ret
0x0000020000164104 : add dword ptr [rbp + 0x28], 0xa ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000372c88 : add dword ptr [rbp + 0x2b], ecx ; ret
0x000002000044807d : add dword ptr [rbp + 0x2d], esi ; mov rcx, rdi ; call 0x200000690a9
0x000002000013241d : add dword ptr [rbp + 0x33], eax ; jmp qword ptr [rax]
0x0000020000666f1e : add dword ptr [rbp + 0x33], eax ; leave ; test rax, rax ; jne 0x20000666f31 ; ret
0x0000020000162dae : add dword ptr [rbp + 0x34], 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000675014 : add dword ptr [rbp + 0x391675db], 0x1d ; loope 0x20000674fac ; ret
0x0000020000117cd0 : add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x00000200001d13b5 : add dword ptr [rbp + 0x3b], ecx ; ret
0x000002000018d5f8 : add dword ptr [rbp + 0x3b], ecx ; ret 0xf4d
0x000002000018d5f7 : add dword ptr [rbp + 0x3b], r9d ; ret 0xf4d
0x000002000040cbff : add dword ptr [rbp + 0x42], esi ; mov qword ptr [r9], r10 ; ret
0x000002000011527d : add dword ptr [rbp + 0x49f775c0], eax ; mov ecx, eax ; jmp rdx
0x00000200005ceec3 : add dword ptr [rbp + 0x63], eax ; jo 0x200005cef1b ; xor eax, eax ; ret
0x00000200000358cf : add dword ptr [rbp + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x0000020000033915 : add dword ptr [rbp + 0xb], esi ; ret
0x00000200000444d6 : add dword ptr [rbp + 0xf], eax ; ret 0x8944
0x0000020000484227 : add dword ptr [rbp + 0xfcf8bc9], eax ; xchg eax, ebp ; ret 0xd4e8
0x000002000003609c : add dword ptr [rbp + 1], esi ; ret
0x00000200000fcdd9 : add dword ptr [rbp + 2], esi ; xor eax, eax ; ret
0x00000200006cd2e9 : add dword ptr [rbp + 3], eax ; ret 0x8348
0x00000200001f5c29 : add dword ptr [rbp + 3], ecx ; ret
0x00000200001f5e0f : add dword ptr [rbp + 3], ecx ; ret 0x3b4c
0x00000200001c2bb8 : add dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200000fe59a : add dword ptr [rbp + 4], esi ; lock dec dword ptr [rcx] ; ret
0x00000200000967c2 : add dword ptr [rbp + 6], esi ; lock and qword ptr [rcx], 0 ; ret
0x00000200001c4d8a : add dword ptr [rbp + 6], esi ; mov eax, 0xc00000bb ; ret
0x0000020000614bef : add dword ptr [rbp + 6], esi ; mov eax, 1 ; ret
0x000002000012f57e : add dword ptr [rbp + 6], esi ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000061cbfd : add dword ptr [rbp + 6], esi ; movzx eax, r10w ; jmp 0x2000061cc7d
0x0000020000068f25 : add dword ptr [rbp + 9], esi ; ret
0x000002000011ee59 : add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x0000020000670450 : add dword ptr [rbp + rax + 0xf], esi ; mov edx, 0xf6143868 ; ret
0x000002000015ceb5 : add dword ptr [rbp + rax - 0x18], esi ; ret
0x00000200007105a7 : add dword ptr [rbp + rax - 0xa], esi ; ret 0x7408
0x00000200001579f8 : add dword ptr [rbp + rcx - 0x76], esi ; and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x0000020000294036 : add dword ptr [rbp + rcx*4 + 0xd], ecx ; ret 0xd6cf
0x00000200000f1776 : add dword ptr [rbp + rcx*4 + 4], ecx ; add cl, byte ptr [rbp + 0x3b] ; ret
0x000002000011a9cd : add dword ptr [rbp - 0x10], esi ; mov eax, dword ptr [rip + 0x236dea] ; ret
0x00000200003f8284 : add dword ptr [rbp - 0x17b48b40], eax ; loop 0x200003f8220 ; ret
0x000002000017ea99 : add dword ptr [rbp - 0x26], esi ; jmp 0x2000007bad2
0x000002000018a634 : add dword ptr [rbp - 0x26], esi ; jmp 0x200000a6844
0x0000020000192c22 : add dword ptr [rbp - 0x26], esi ; jmp 0x200000c1a48
0x000002000008d945 : add dword ptr [rbp - 0x2d], esi ; ret
0x0000020000674a0f : add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x0000020000402942 : add dword ptr [rbp - 0x53], esi ; mov ebx, 0xc0000225 ; jmp 0x20000402918
0x0000020000707f1a : add dword ptr [rbp - 0x74ee8b2e], eax ; ret 0xd148
0x0000020000147987 : add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x200001479b3
0x00000200000aa8b7 : add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x00000200002065ac : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rdi + rcx + 0x48], 0x83 ; ret 0x310
0x0000020000499f44 : add dword ptr [rbp - 0x8a48640], eax ; fdivr dword ptr [rbx] ; ret
0x000002000015da6b : add dword ptr [rbp - 0xe], esi ; mov rax, r11 ; ret
0x00000200001c53b7 : add dword ptr [rbp - 0xee8b40], eax ; ret 0x1139
0x000002000008f12c : add dword ptr [rbp - 9], esi ; ret
0x00000200006f53da : add dword ptr [rbx + 0x21840ff9], ecx ; ret 2
0x000002000015e083 : add dword ptr [rbx + 0x23480841], ecx ; ret 0xb49
0x000002000007c6ee : add dword ptr [rbx + 0x28], edx ; jmp 0x2000007c308
0x00000200000916ea : add dword ptr [rbx + 0x2bf97315], ecx ; add byte ptr [rax + 3], cl ; ret 0x153b
0x000002000070fc8b : add dword ptr [rbx + 0x41000000], -1 ; ret 0x8348
0x0000020000054e9a : add dword ptr [rbx + 0x418b3850], ecx ; sub al, 0xf6 ; ret 0x7520
0x00000200006e369d : add dword ptr [rbx + 0x458], 0x40 ; mov rax, rdx ; jmp 0x200006e36b4
0x00000200006cb038 : add dword ptr [rbx + 0x458], 4 ; mov rax, rdx ; jmp 0x200006cb04f
0x00000200006d67d6 : add dword ptr [rbx + 0x458], 4 ; mov rax, rdx ; jmp 0x200006d67ed
0x00000200006dfcf5 : add dword ptr [rbx + 0x458], 4 ; mov rax, rdx ; jmp 0x200006dfd0c
0x00000200006cb759 : add dword ptr [rbx + 0x458], ebx ; mov rax, rdx ; jmp 0x200006cb76e
0x00000200006d11ff : add dword ptr [rbx + 0x458], ebx ; mov rax, rdx ; jmp 0x200006d1214
0x00000200006c7c4d : add dword ptr [rbx + 0x458], edi ; mov rax, rdx ; jmp 0x200006c7c62
0x00000200006d646b : add dword ptr [rbx + 0x458], edi ; mov rax, rdx ; jmp 0x200006d6480
0x00000200006ca62f : add dword ptr [rbx + 0x458], edx ; mov rax, rdx ; jmp 0x200006ca644
0x00000200006d14fe : add dword ptr [rbx + 0x458], edx ; mov rax, rdx ; jmp 0x200006d1513
0x00000200006d1f12 : add dword ptr [rbx + 0x458], edx ; mov rax, rdx ; jmp 0x200006d1f27
0x00000200006cac73 : add dword ptr [rbx + 0x458], esi ; mov rax, rdx ; jmp 0x200006cac88
0x00000200006ca62e : add dword ptr [rbx + 0x458], r10d ; mov rax, rdx ; jmp 0x200006ca645
0x00000200006d14fd : add dword ptr [rbx + 0x458], r10d ; mov rax, rdx ; jmp 0x200006d1514
0x00000200006d1f11 : add dword ptr [rbx + 0x458], r10d ; mov rax, rdx ; jmp 0x200006d1f28
0x00000200006cb758 : add dword ptr [rbx + 0x458], r11d ; mov rax, rdx ; jmp 0x200006cb76f
0x00000200006d11fe : add dword ptr [rbx + 0x458], r11d ; mov rax, rdx ; jmp 0x200006d1215
0x00000200006d646a : add dword ptr [rbx + 0x458], r15d ; mov rax, rdx ; jmp 0x200006d6481
0x00000200001971a0 : add dword ptr [rbx + 0x98], 8 ; inc rdx ; jmp 0x20000197151
0x000002000021e596 : add dword ptr [rbx + 0xb4807e0], eax ; ret
0x000002000021e2f7 : add dword ptr [rbx + 0xb4807e0], eax ; ret 0x8948
0x00000200002258bc : add dword ptr [rbx + 0xb4907e0], eax ; ret 0x8948
0x0000020000590242 : add dword ptr [rbx + 2], eax ; jmp 0x200004ac4c8
0x000002000008188e : add dword ptr [rbx + 7], esi ; mov al, dl ; add rsp, 0x28 ; ret
0x0000020000032b83 : add dword ptr [rbx + rcx*4 + 0x74], eax ; ret 0xf08
0x0000020000439e0a : add dword ptr [rbx + rcx*4 - 0x3e], eax ; call 0x20000065ec7
0x0000020000035d33 : add dword ptr [rbx + rcx*4], 0x8bc7ffcf ; ret 0xd349
0x00000200003f98cf : add dword ptr [rbx + rdi*8 - 1], ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001e6212 : add dword ptr [rbx - 0x3e7cb73e], ecx ; or byte ptr [rcx + 0x3b], cl ; ret
0x000002000042ae26 : add dword ptr [rbx - 0x4fffec33], 1 ; ret
0x00000200001fd8be : add dword ptr [rbx - 0x74a7dba4], ecx ; ret
0x0000020000484d0c : add dword ptr [rbx - 0x75], esi ; ret
0x00000200001222df : add dword ptr [rbx - 0x78f0db08], eax ; push rsi ; ret 8
0x00000200000602a7 : add dword ptr [rbx - 0x831dc3a], ecx ; shl byte ptr [rbx], 1 ; ret
0x0000020000110cce : add dword ptr [rbx], 0xc4834800 ; push rax ; pop rbx ; ret
0x00000200006f01f5 : add dword ptr [rbx], eax ; add bh, bh ; ret
0x00000200004bfea3 : add dword ptr [rbx], eax ; add byte ptr [rax], al ; je 0x200004bfeb4 ; mov al, 1 ; ret
0x00000200001356dd : add dword ptr [rbx], eax ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200006d4cf0 : add dword ptr [rbx], eax ; ret 0x348
0x000002000037a00e : add dword ptr [rbx], eax ; ret 0x3b41
0x000002000047ce2c : add dword ptr [rbx], ebp ; ret
0x00000200003db474 : add dword ptr [rbx], ebp ; ret 0x3341
0x00000200005ad135 : add dword ptr [rbx], ebp ; ret 0x775
0x00000200006201ab : add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200005204f7 : add dword ptr [rbx], ebp ; ret 0xccc3
0x000002000041ed90 : add dword ptr [rbx], ecx ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200001b3dc9 : add dword ptr [rbx], ecx ; ret 0x4123
0x000002000010c7aa : add dword ptr [rbx], ecx ; ret 0x8941
0x00000200001f13ea : add dword ptr [rbx], ecx ; ret 0xccc3
0x00000200005efbfb : add dword ptr [rbx], ecx ; sar bh, 1 ; xor eax, eax ; ret
0x0000020000610414 : add dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009b9f9 : add dword ptr [rbx], edi ; ret
0x00000200000339cd : add dword ptr [rbx], edi ; ret 0x1675
0x00000200000339de : add dword ptr [rbx], edi ; ret 0x575
0x0000020000435f23 : add dword ptr [rbx], edi ; ret 0x850f
0x00000200005e9ec7 : add dword ptr [rbx], edi ; ret 0xe75
0x00000200003af288 : add dword ptr [rbx], edi ; ret 0xf41
0x0000020000517b0b : add dword ptr [rbx], edx ; ret
0x000002000045082b : add dword ptr [rbx], esi ; fnstenv dword ptr [rbx] ; ret
0x00000200003c43b2 : add dword ptr [rbx], esi ; ret 0x8d48
0x00000200000ea3db : add dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200004a0642 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x000002000010af92 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x00000200001df031 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x000002000070d4c9 : add dword ptr [rbx], esi ; shr al, cl ; outsd dx, dword ptr [rsi] ; ret 0xff9d
0x0000020000164dea : add dword ptr [rbx], esp ; ret 0x8b44
0x000002000003385b : add dword ptr [rbx], esp ; ret 0xc22b
0x00000200003af280 : add dword ptr [rbx], esp ; ret 0xc933
0x0000020000722c36 : add dword ptr [rbx], esp ; ret 0xd2f7
0x00000200002946d1 : add dword ptr [rbx], esp ; ret 0xd88b
0x0000020000295e4e : add dword ptr [rbx], esp ; ret 0xf88b
0x00000200000c5ed9 : add dword ptr [rcx + 0x1000f9], eax ; add byte ptr [rdi], cl ; ret 0x4489
0x0000020000233e96 : add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x000002000070f36b : add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x000002000070f23f : add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x00000200001028ac : add dword ptr [rcx + 0x18], ecx ; and qword ptr [rdx + 0x18], 0 ; ret
0x00000200001028ab : add dword ptr [rcx + 0x18], r9d ; and qword ptr [rdx + 0x18], 0 ; ret
0x00000200006fc409 : add dword ptr [rcx + 0x23], eax ; ret
0x000002000029628c : add dword ptr [rcx + 0x23], eax ; ret 0xd08b
0x0000020000060a10 : add dword ptr [rcx + 0x23], ecx ; ret
0x000002000005b74b : add dword ptr [rcx + 0x23], ecx ; ret 0x3b48
0x00000200000264fb : add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x000002000005b876 : add dword ptr [rcx + 0x23], ecx ; ret 0xb48
0x00000200002092b2 : add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x0000020000213f16 : add dword ptr [rcx + 0x3b], eax ; ret 0xdd75
0x0000020000213eec : add dword ptr [rcx + 0x3b], eax ; ret 0xde75
0x00000200001f3245 : add dword ptr [rcx + 0x3b], eax ; sal byte ptr [rsp + rdi - 0x75], 1 ; ret 0x8d4d
0x0000020000079047 : add dword ptr [rcx + 0x3b], ecx ; ret
0x0000020000462ffe : add dword ptr [rcx + 0x3b], ecx ; ret 0x6972
0x00000200001363bd : add dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x00000200004a9205 : add dword ptr [rcx + 0x3b], ecx ; ret 0x870f
0x00000200001b7454 : add dword ptr [rcx + 0x3b], ecx ; ret 0xcc73
0x0000020000462ffd : add dword ptr [rcx + 0x3b], r9d ; ret 0x6972
0x000002000037f44b : add dword ptr [rcx + 0x40], ebx ; ret
0x000002000037f44a : add dword ptr [rcx + 0x40], r11d ; ret
0x000002000045e0cb : add dword ptr [rcx + 0xa], edx ; ret
0x0000020000222673 : add dword ptr [rcx + 0xf], eax ; ret 0xb841
0x0000020000095ecb : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000058f24f : add dword ptr [rcx + 0xf], ecx ; ret 0x3b49
0x00000200005b1e66 : add dword ptr [rcx + 3], eax ; ret 0x3b41
0x000002000052017c : add dword ptr [rcx + 4], eax ; ret
0x0000020000520180 : add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x0000020000092140 : add dword ptr [rcx + rax + 0x48060000], -0x7f ; ret
0x00000200000e4e39 : add dword ptr [rcx + rax + 0xf410000], -0x49 ; ret 0xe0c1
0x0000020000088ef0 : add dword ptr [rcx + rax*8 + 0x28], eax ; cmp edx, 7 ; je 0x20000088f03 ; ret
0x00000200004bf127 : add dword ptr [rcx + rax*8 - 0x36cdfd8b], eax ; mov al, cl ; ret
0x00000200005373a8 : add dword ptr [rcx + rcx - 0xa], esi ; ret
0x000002000007017e : add dword ptr [rcx + rcx*4 + 0x3b], ecx ; jmp 0x2000007014b
0x00000200005caade : add dword ptr [rcx + rcx*4 + 0x3d], ecx ; ret 0xd0af
0x000002000065cdd9 : add dword ptr [rcx + rcx*4 + 0x4d], ecx ; adc byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000601f0f : add dword ptr [rcx + rcx*4 + 0x75], eax ; sub byte ptr [rbx], dh ; ret 0x8b48
0x00000200004d7279 : add dword ptr [rcx + rcx*4 + 1], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006c6ff : add dword ptr [rcx + rsi - 0xa], esi ; ret 0x7420
0x000002000049ef60 : add dword ptr [rcx - 0x17fa14ff], ecx ; ret 0x19cb
0x000002000015dd33 : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rax], al ; ret
0x00000200004b541a : add dword ptr [rcx - 0x48], eax ; push rax ; jo 0x200004b5449 ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x0000020000063ddc : add dword ptr [rcx - 0x4d], eax ; add al, byte ptr [rbp + 0x33] ; rol byte ptr [rbp - 0x7c], cl ; ret
0x0000020000197206 : add dword ptr [rcx - 0x75], eax ; enter -0x76b6, 0x44 ; ret
0x00000200000827a4 : add dword ptr [rcx - 0x75], eax ; ret
0x00000200000f6bd9 : add dword ptr [rcx - 0x75], eax ; ret 0x8b4c
0x00000200003cd00b : add dword ptr [rcx - 0x75], ecx ; iretd ; call r12
0x00000200003cc9f8 : add dword ptr [rcx - 0x75], ecx ; iretd ; call rsi
0x000002000002e410 : add dword ptr [rcx - 0x75], ecx ; or dword ptr [rcx - 0x75], eax ; ret 0xe083
0x00000200003aba61 : add dword ptr [rcx - 0x76], eax ; ret 0xe180
0x00000200001967f2 : add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x00000200004b4fab : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x0000020000408b84 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200001db1f9 : add dword ptr [rcx - 0x77], ecx ; call 0x1ffc33dc14e
0x000002000014486a : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0xff48
0x000002000005ab19 : add dword ptr [rcx - 0x79], 0x11 ; add byte ptr [rax - 0x75], cl ; ret 0xb841
0x00000200000a8453 : add dword ptr [rcx - 0x7b], eax ; ret
0x000002000004b85f : add dword ptr [rcx - 0x7c], eax ; ret
0x00000200000aab6e : add dword ptr [rcx - 0x7c], eax ; ret 0x840f
0x0000020000600f7c : add dword ptr [rcx - 0x7cb6e7af], ecx ; add ch, byte ptr [rax] ; ret
0x0000020000600ed5 : add dword ptr [rcx - 0x7cb6efaf], ecx ; add bl, byte ptr [rax] ; ret
0x000002000020d810 : add dword ptr [rcx - 0x7cb7fcbd], ecx ; ret
0x00000200003d6e8b : add dword ptr [rcx - 0x7d], eax ; ret
0x000002000020ad28 : add dword ptr [rcx - 0x7d], eax ; ret 0x4402
0x00000200006ccead : add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200006cb91d : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200006c65db : add dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x00000200006c65ff : add dword ptr [rcx - 1], ecx ; ret 0xff49
0x000002000022abdd : add dword ptr [rcx - 4], eax ; cmp rcx, r8 ; jb 0x2000022abd8 ; ret
0x00000200000f727e : add dword ptr [rcx], 0 ; add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x0000020000150ab5 : add dword ptr [rcx], 0 ; add cl, ch ; ret 0xba
0x00000200003f1189 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000058d3b : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000200001b8b45 : add dword ptr [rcx], eax ; add dword ptr [rax - 0x2f], ecx ; call 0x20048ddae9f
0x0000020000058d39 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000020000208d23 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x0000020000208d25 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x0000020000208d27 : add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x00000200002103e2 : add dword ptr [rcx], eax ; add rsp, 0x28 ; ret
0x00000200005fa018 : add dword ptr [rcx], eax ; mov eax, 1 ; ret
0x000002000001249c : add dword ptr [rcx], eax ; ret 0x30c
0x00000200006cef61 : add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x000002000050dd5b : add dword ptr [rcx], ebx ; add byte ptr [rax], al ; call 0x200001396bf
0x000002000037f3c0 : add dword ptr [rcx], ebx ; ret
0x000002000015dce5 : add dword ptr [rcx], edi ; ret
0x000002000037f3bf : add dword ptr [rcx], r11d ; ret
0x00000200005fa017 : add dword ptr [rcx], r8d ; mov eax, 1 ; ret
0x00000200006c7362 : add dword ptr [rdi + 0x458], ebx ; mov rax, rdx ; jmp 0x200006c7377
0x00000200006c76b9 : add dword ptr [rdi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006c76ce
0x00000200006e8003 : add dword ptr [rdi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006e8018
0x00000200006e8836 : add dword ptr [rdi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006e884b
0x00000200006d1a6c : add dword ptr [rdi + 0x458], edx ; mov rax, rdx ; jmp 0x200006d1a81
0x00000200006e5d17 : add dword ptr [rdi + 0x458], edx ; mov rax, rdx ; jmp 0x200006e5d2c
0x00000200006e509a : add dword ptr [rdi + 0x458], esi ; mov rax, rdx ; jmp 0x200006e50af
0x00000200006e31de : add dword ptr [rdi + 0x458], esp ; mov rax, rdx ; jmp 0x200006e31f3
0x00000200006d1a6b : add dword ptr [rdi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006d1a82
0x00000200006e5d16 : add dword ptr [rdi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006e5d2d
0x00000200006e31dd : add dword ptr [rdi + 0x458], r12d ; mov rax, rdx ; jmp 0x200006e31f4
0x00000200006e8002 : add dword ptr [rdi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006e8019
0x00000200006e8835 : add dword ptr [rdi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006e884c
0x00000200006ef09d : add dword ptr [rdi + 6], esi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051f7e5 : add dword ptr [rdi + 7], esi ; mov dword ptr [rip - 0x279c16], ecx ; ret
0x000002000011a9bd : add dword ptr [rdi + rax - 0x75], esi ; add eax, 0x2368c2 ; ret
0x00000200001f67a2 : add dword ptr [rdi + rcx + 0x22], eax ; ret 0xed33
0x00000200005cb2f1 : add dword ptr [rdi + rcx + 0x22], eax ; ret 0xff0
0x00000200004e7abb : add dword ptr [rdi + rcx + 0x45], eax ; ret
0x00000200001d958b : add dword ptr [rdi + rcx - 0x49], eax ; ret 0x3b66
0x000002000007d3a6 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x5488
0x0000020000598bca : add dword ptr [rdi + rcx - 1], esi ; ret
0x00000200006ffab7 : add dword ptr [rdi + rdi*8 + 0x20c48348], ebx ; pop rbx ; ret
0x0000020000039fbe : add dword ptr [rdi + rdx*2], 0x3b450000 ; ret 0x3774
0x000002000001056f : add dword ptr [rdi - 0x3fc2fa2a], eax ; ret
0x0000020000111109 : add dword ptr [rdi - 0x74bbfff7], eax ; ret
0x0000020000074863 : add dword ptr [rdi - 7], esi ; dec dword ptr [rax - 0x7f] ; ret 1
0x0000020000703bcb : add dword ptr [rdi], ebx ; add al, ch ; ret 0xff96
0x00000200006cef62 : add dword ptr [rdi], ecx ; add dword ptr [rdx], ecx ; ret
0x00000200003ad351 : add dword ptr [rdi], ecx ; ja 0x200003ad35e ; mov al, cl ; ret
0x0000020000142090 : add dword ptr [rdi], ecx ; mov bh, 0xa ; sub eax, ecx ; ret
0x00000200000e7bb6 : add dword ptr [rdi], ecx ; mov ds, word ptr [rax - 0x74fff4bf] ; ret
0x00000200003f2636 : add dword ptr [rdi], ecx ; mov edx, 0x37209e0 ; xor eax, eax ; ret
0x00000200001c4c9d : add dword ptr [rdi], ecx ; ret 0x521
0x0000020000105b5b : add dword ptr [rdi], ecx ; ret 0x7d80
0x000002000015850c : add dword ptr [rdi], ecx ; scasb al, byte ptr [rdi] ; clc ; ret
0x000002000015defc : add dword ptr [rdi], ecx ; sub byte ptr [rdx + 0x10], cl ; movaps xmmword ptr [rcx + 0x10], xmm1 ; ret
0x0000020000063103 : add dword ptr [rdi], ecx ; test byte ptr [rax + rax - 0x74b80000], dl ; ret 0xb849
0x0000020000146973 : add dword ptr [rdi], ecx ; test byte ptr [rbp - 0x74fffffa], al ; ret
0x00000200003faf74 : add dword ptr [rdi], ecx ; test byte ptr [rcx], ch ; ret
0x0000020000079b95 : add dword ptr [rdi], ecx ; test byte ptr [rcx], dh ; add al, 0 ; add byte ptr [rax - 1], cl ; ret 0x8549
0x0000020000728cd0 : add dword ptr [rdi], ecx ; test byte ptr [rdi + rbx*8 - 0x74bb0002], bl ; ret
0x00000200000786c0 : add dword ptr [rdi], ecx ; test byte ptr [rdi], bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a70d7 : add dword ptr [rdi], ecx ; test byte ptr [rdx], bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006fd68d : add dword ptr [rdi], ecx ; test byte ptr [rip - 0x74fffda2], cl ; ret
0x00000200000fb58d : add dword ptr [rdi], ecx ; test byte ptr [rsi - 0xfff59a], cl ; ret
0x00000200001ebe28 : add dword ptr [rdi], ecx ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200000824b6 : add dword ptr [rdi], ecx ; test dl, bh ; cmc ; sldt word ptr [rcx - 0x75] ; ret
0x00000200000c9b6f : add dword ptr [rdi], ecx ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f2663 : add dword ptr [rdi], ecx ; test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x00000200004270fb : add dword ptr [rdi], ecx ; test dword ptr [rax], esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000019808a : add dword ptr [rdi], ecx ; test dword ptr [rax], esp ; mov ch, 0xf3 ; push rsi ; ret
0x0000020000642a5c : add dword ptr [rdi], ecx ; test dword ptr [rbx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000121e33 : add dword ptr [rdi], ecx ; test dword ptr [rcx], eax ; ret
0x00000200000778ae : add dword ptr [rdi], ecx ; test dword ptr [rdi - 0xfffff9], esi ; ret
0x00000200006fe8e6 : add dword ptr [rdi], ecx ; test dword ptr [rdx - 0x74fffdb1], ebx ; ret
0x00000200000a1604 : add dword ptr [rdi], ecx ; test dword ptr [rdx], ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000133cd0 : add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x75000000], esp ; ret 0x6b48
0x0000020000434262 : add dword ptr [rdi], ecx ; test dword ptr [rsi], ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x000002000070967f : add dword ptr [rdi], ecx ; test dword ptr [rsi], esp ; ret 1
0x00000200000c8a09 : add dword ptr [rdi], ecx ; test ecx, eax ; ret
0x00000200000c8b30 : add dword ptr [rdi], ecx ; test edi, eax ; ret 0xc
0x000002000004f566 : add dword ptr [rdi], ecx ; test esi, eax ; or eax, 0xc1490000 ; call qword ptr [rax]
0x00000200003ed901 : add dword ptr [rdi], ecx ; test esi, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000042603c : add dword ptr [rdi], ecx ; test esi, esp ; call qword ptr [rbx]
0x00000200001d4190 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000200000aa166 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x894c
0x000002000048cbf3 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200001798c3 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0x00000200005302f7 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000530366 ; ret
0x000002000038b73f : add dword ptr [rdi], edx ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200001798c2 : add dword ptr [rdi], r9d ; xchg eax, esp ; ret 0xb60f
0x000002000070f6ce : add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200004929b7 : add dword ptr [rdx + 0x18], eax ; ret
0x00000200003dae28 : add dword ptr [rdx + 0x2b], eax ; add al, 0x82 ; sub eax, ecx ; ret
0x0000020000095d10 : add dword ptr [rdx + 0x5a], eax ; and byte ptr [rcx + 0x5c], 0xfe ; ret
0x000002000062a2df : add dword ptr [rdx + 0xf], eax ; mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x00000200005ad130 : add dword ptr [rdx + 0xf], eax ; mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x000002000023696a : add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x0000020000212ce9 : add dword ptr [rdx + 8], -0x18 ; ret
0x0000020000068481 : add dword ptr [rdx + rcx*4 - 0x76], eax ; ret
0x000002000002a7ab : add dword ptr [rdx + rdi - 0x3f], eax ; jne 0x2000002a7ed ; ret
0x0000020000114d4e : add dword ptr [rdx + rdx - 1], esi ; ret
0x00000200000e6b8c : add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x000002000011eff8 : add dword ptr [rdx - 0x3b7cb73d], ecx ; push rax ; pop rbx ; ret
0x0000020000596cbf : add dword ptr [rdx - 0x4e], ebx ; call qword ptr [rax - 0xd3d6e17]
0x0000020000600eda : add dword ptr [rdx], 0x18 ; ret
0x0000020000600f81 : add dword ptr [rdx], 0x28 ; ret
0x000002000015dff5 : add dword ptr [rdx], eax ; ret
0x000002000070791e : add dword ptr [rdx], ebp ; ret
0x000002000020ee59 : add dword ptr [rdx], ecx ; ret
0x00000200001d98c2 : add dword ptr [rdx], edi ; ret 0x473
0x000002000054856e : add dword ptr [rdx], esi ; fdiv st(6) ; ret
0x00000200001d8a4e : add dword ptr [rip + 0xcca14], eax ; ret
0x0000020000478d9d : add dword ptr [rip - 0x6bc80000], 0x24 ; ret 0
0x00000200006564c3 : add dword ptr [rsi + 0x31], edx ; or eax, 0x30dbde31 ; ret 0xc556
0x000002000014d803 : add dword ptr [rsi + 0x39], esp ; add sil, byte ptr [r11 + 3] ; xor al, al ; ret
0x0000020000380ec5 : add dword ptr [rsi + 0x3b], esp ; ret 0x3f74
0x00000200000ed1ff : add dword ptr [rsi + 0x3b], esp ; ret 0x5e74
0x00000200006d5ab2 : add dword ptr [rsi + 0x458], 0x10 ; mov rax, rdx ; jmp 0x200006d5ac9
0x00000200006d5b33 : add dword ptr [rsi + 0x458], 0x10 ; mov rax, rdx ; jmp 0x200006d5b4a
0x00000200006d78cd : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006d78e2
0x00000200006d8c5a : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006d8c6f
0x00000200006da036 : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006da04b
0x00000200006db25c : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006db271
0x00000200006db59c : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006db5b1
0x00000200006dcf2a : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006dcf3f
0x00000200006de0b7 : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006de0cc
0x00000200006de3f7 : add dword ptr [rsi + 0x458], eax ; mov rax, rdx ; jmp 0x200006de40c
0x00000200006c9529 : add dword ptr [rsi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006c953e
0x00000200006d7596 : add dword ptr [rsi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006d75ab
0x00000200006d894c : add dword ptr [rsi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006d8961
0x00000200006df33d : add dword ptr [rsi + 0x458], ecx ; mov rax, rdx ; jmp 0x200006df352
0x00000200006c5f57 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006c5f6c
0x00000200006c8f34 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006c8f49
0x00000200006c92e7 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006c92fc
0x00000200006c93fc : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006c947a
0x00000200006cc9bc : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006cc9dd
0x00000200006cd251 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006cd266
0x00000200006d9d28 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006d9d3d
0x00000200006dcc01 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006dcc16
0x00000200006e422b : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006e4240
0x00000200006e5835 : add dword ptr [rsi + 0x458], edx ; mov rax, rdx ; jmp 0x200006e584a
0x00000200006c8b34 : add dword ptr [rsi + 0x458], esi ; mov rax, rdx ; jmp 0x200006c8b49
0x00000200006e2d4f : add dword ptr [rsi + 0x458], esp ; mov rax, rdx ; jmp 0x200006e2d64
0x00000200006c5f56 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006c5f6d
0x00000200006c8f33 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006c8f4a
0x00000200006c92e6 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006c92fd
0x00000200006c93fb : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006c947b
0x00000200006cc9bb : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006cc9de
0x00000200006cd250 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006cd267
0x00000200006d9d27 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006d9d3e
0x00000200006dcc00 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006dcc17
0x00000200006e422a : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006e4241
0x00000200006e5834 : add dword ptr [rsi + 0x458], r10d ; mov rax, rdx ; jmp 0x200006e584b
0x00000200006e2d4e : add dword ptr [rsi + 0x458], r12d ; mov rax, rdx ; jmp 0x200006e2d65
0x00000200006c8b33 : add dword ptr [rsi + 0x458], r14d ; mov rax, rdx ; jmp 0x200006c8b4a
0x00000200006d78cc : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006d78e3
0x00000200006d8c59 : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006d8c70
0x00000200006da035 : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006da04c
0x00000200006db25b : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006db272
0x00000200006db59b : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006db5b2
0x00000200006dcf29 : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006dcf40
0x00000200006de0b6 : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006de0cd
0x00000200006de3f6 : add dword ptr [rsi + 0x458], r8d ; mov rax, rdx ; jmp 0x200006de40d
0x00000200006c9528 : add dword ptr [rsi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006c953f
0x00000200006d7595 : add dword ptr [rsi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006d75ac
0x00000200006d894b : add dword ptr [rsi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006d8962
0x00000200006df33c : add dword ptr [rsi + 0x458], r9d ; mov rax, rdx ; jmp 0x200006df353
0x000002000043041c : add dword ptr [rsi + 0xb], esi ; shr edi, 1 ; add edi, r14d ; jmp 0x200004303f2
0x000002000040ede8 : add dword ptr [rsi + 0xf], eax ; mov bh, 0x14 ; or al, byte ptr [rbp + 0x3b] ; ret 0x1174
0x00000200004e014f : add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x00000200003a9917 : add dword ptr [rsi + 9], esp ; add cl, byte ptr [r8 - 0x7d] ; ret
0x00000200004c4fec : add dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000229597 : add dword ptr [rsi + rax - 0x48], esi ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001e619c : add dword ptr [rsi + rax - 0x75], esi ; ret 0x149
0x000002000043d164 : add dword ptr [rsi + rax - 1], esi ; ret
0x000002000010a10e : add dword ptr [rsi + rcx - 0x75], esi ; ret
0x0000020000130301 : add dword ptr [rsi + rcx*2 + 0x48], esi ; add esi, 8 ; jmp 0x200001302d5
0x00000200003f268b : add dword ptr [rsi + rdx*4 - 0x48], esi ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200004c2dbb : add dword ptr [rsi - 0x74b70037], ebp ; ret
0x000002000045a133 : add dword ptr [rsi - 0x77], esp ; push rdi ; add ch, al ; ret
0x000002000053a84e : add dword ptr [rsi - 0x7d], esp ; ret 0x4d02
0x000002000006fe51 : add dword ptr [rsi - 0x7d], esp ; rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x000002000060cf15 : add dword ptr [rsi - 1], esp ; ret 0x4166
0x0000020000482d42 : add dword ptr [rsi - 1], esp ; ret 0x8d48
0x0000020000079f0a : add dword ptr [rsp + rsi - 0xa], esi ; ret 0x7404
0x000002000009c0ca : add dword ptr [rsp - 1], esi ; ret 0x8348
0x000002000005823f : add dword ptr cs:[rax], eax ; add byte ptr [rcx + 0xb], cl ; ret 0xc748
0x0000020000208e9e : add dword ptr cs:[rax], eax ; add eax, r10d ; jmp 0x20000208eae
0x000002000006492e : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000070e561 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f01f4 : add dword ptr ds:[rbx], eax ; add bh, bh ; ret
0x000002000070967e : add dword ptr ds:[rdi], ecx ; test dword ptr [rsi], esp ; ret 1
0x0000020000492a56 : add dword ptr es:[rax], eax ; add byte ptr [rdx], bh ; ret
0x000002000011f67f : add dword ptr fs:[rax], eax ; add cl, ch ; ret 0
0x00000200003d7dba : add dword ptr fs:[rax], eax ; add dh, dh ; ret
0x00000200004863c3 : add dword ptr ss:[rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000048b65d : add eax, -0x10 ; ret
0x000002000015e03e : add eax, -0x20 ; ret
0x00000200000937ec : add eax, -3 ; add r8, r9 ; jmp 0x200000937be
0x00000200004c13e5 : add eax, -4 ; add rsp, 0x28 ; ret
0x000002000067d09d : add eax, -8 ; ret
0x0000020000518d42 : add eax, 0x10 ; cmp rax, rcx ; jl 0x20000518d3b ; ret
0x000002000020c8f8 : add eax, 0x10 ; jmp 0x2000020c920
0x000002000020d0b4 : add eax, 0x10 ; jmp 0x2000020d0dc
0x00000200003eed3b : add eax, 0x10 ; ret
0x000002000052018f : add eax, 0x1004 ; add rax, rdx ; ret
0x00000200003eed39 : add eax, 0x10c08348 ; ret
0x00000200001d2f00 : add eax, 0x10f27b ; ret
0x0000020000231f25 : add eax, 0x11f13a ; mov dword ptr [r8], eax ; ret
0x000002000024ca2c : add eax, 0x12162f06 ; ret 0x700e
0x0000020000531a11 : add eax, 0x12342a ; call rax
0x00000200001cc568 : add eax, 0x135a4b ; add rsp, 0x28 ; ret
0x0000020000197578 : add eax, 0x13887f ; mov al, 1 ; ret
0x00000200001c57ff : add eax, 0x13c7a8 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000020c8ee : add eax, 0x14 ; jmp 0x2000020c920
0x000002000020d0aa : add eax, 0x14 ; jmp 0x2000020d0dc
0x0000020000568f4e : add eax, 0x1417c5 ; ret
0x000002000015e299 : add eax, 0x144cf2 ; ret
0x000002000015e291 : add eax, 0x144cf6 ; ret
0x000002000015e162 : add eax, 0x147301 ; ret
0x000002000015e0e1 : add eax, 0x14fb3a ; ret
0x000002000015e1a6 : add eax, 0x14fd45 ; ret
0x000002000015e1bb : add eax, 0x150d80 ; ret
0x0000020000143ef6 : add eax, 0x153115 ; ret
0x000002000015e1ee : add eax, 0x157f6d ; ret
0x000002000013fd65 : add eax, 0x158132 ; xor eax, eax ; ret
0x000002000013fd4e : add eax, 0x15814d ; xor eax, eax ; ret
0x000002000013fabf : add eax, 0x158370 ; mov eax, r10d ; ret
0x000002000013eacd : add eax, 0x158f0e ; add rsp, 0x28 ; ret
0x000002000013a648 : add eax, 0x16896b ; je 0x2000013a66b ; call rcx
0x0000020000131dde : add eax, 0x1711a9 ; ret
0x000002000012fac0 : add eax, 0x17351b ; add al, 0 ; add byte ptr [rax], al ; call rdi
0x0000020000679ae1 : add eax, 0x1764a ; ret
0x000002000013faf7 : add eax, 0x176bec ; xor eax, eax ; ret
0x00000200006798f3 : add eax, 0x17834 ; add rsp, 0x48 ; ret
0x00000200001d8978 : add eax, 0x178723 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001d6e34 : add eax, 0x17a21d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000011f8d0 : add eax, 0x17f203 ; add rsp, 0x28 ; ret
0x000002000051e0fd : add eax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020c8e4 : add eax, 0x18 ; jmp 0x2000020c920
0x000002000020d0a0 : add eax, 0x18 ; jmp 0x2000020d0dc
0x00000200000e3f6b : add eax, 0x18 ; ret
0x00000200001cdf19 : add eax, 0x1835e2 ; call rax
0x000002000011de7b : add eax, 0x185d54 ; add rsp, 0x28 ; ret
0x000002000052039d : add eax, 0x18a37e ; ret
0x00000200001c539c : add eax, 0x18beff ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001c536d : add eax, 0x18bf2e ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001c57cf : add eax, 0x18c05c ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001c4ca2 : add eax, 0x18c3d1 ; ret
0x00000200001c355a : add eax, 0x18dfa1 ; call rax
0x00000200001c344f : add eax, 0x18e0ac ; call rax
0x00000200001c31bc : add eax, 0x18e33f ; call rax
0x00000200001c30dd : add eax, 0x18e41e ; call rax
0x00000200001c2f1f : add eax, 0x18e5dc ; call rax
0x00000200001c2e64 : add eax, 0x18e697 ; call r8
0x0000020000130e75 : add eax, 0x19849d ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000c008a : add eax, 0x19894466 ; ret
0x000002000013e354 : add eax, 0x19a0bb ; xor eax, eax ; ret
0x000002000010ca6d : add eax, 0x19b4ce ; mov qword ptr [rdx], rax ; ret
0x0000020000131759 : add eax, 0x19e69a ; add rsp, 0x28 ; ret
0x00000200001b1c9e : add eax, 0x19f85d ; call r8
0x00000200004b42b3 : add eax, 0x1a0b78 ; call rax
0x0000020000505f96 : add eax, 0x1a565d ; ret
0x0000020000219482 : add eax, 0x1abe ; add dh, dh ; ret
0x0000020000012e8b : add eax, 0x1ac10510 ; ret
0x0000020000123b61 : add eax, 0x1b1f72 ; xor eax, eax ; ret
0x00000200004a03aa : add eax, 0x1b4cf1 ; ret
0x00000200000f8e6a : add eax, 0x1b8 ; add bl, al ; xor eax, eax ; ret
0x0000020000199418 : add eax, 0x1b80e3 ; call rax
0x0000020000196b66 : add eax, 0x1ba8c5 ; call rax
0x00000200006d018a : add eax, 0x1be ; add byte ptr [rbx], ch ; ret
0x00000200006750fc : add eax, 0x1bfb3 ; ret
0x00000200006750ef : add eax, 0x1bfc0 ; ret
0x000002000020c8da : add eax, 0x1c ; jmp 0x2000020c920
0x000002000020d096 : add eax, 0x1c ; jmp 0x2000020d0dc
0x000002000018ec88 : add eax, 0x1c2903 ; call rax
0x00000200001030b8 : add eax, 0x1c4d7b ; ret
0x0000020000674aa1 : add eax, 0x1c866 ; xor eax, eax ; ret
0x00000200000f8ba3 : add eax, 0x1cfbb6 ; add rsp, 0x28 ; ret
0x00000200004d3090 : add eax, 0x1d725b ; mov word ptr [rdx], ax ; ret
0x00000200004c7421 : add eax, 0x1e2d52 ; ret
0x000002000015e247 : add eax, 0x1f2e2c ; ret
0x000002000015e209 : add eax, 0x1f3616 ; ret
0x00000200000aa8b2 : add eax, 0x1f85b0 ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x000002000041aa7a : add eax, 0x20 ; ret
0x0000020000242370 : add eax, 0x20000dc4 ; ret 5
0x00000200000bfc1d : add eax, 0x209cc2 ; add rsp, 0x28 ; ret
0x00000200000b9bd6 : add eax, 0x20f355 ; ret
0x00000200001e05db : add eax, 0x213477e8 ; add bh, bh ; ret
0x0000020000139703 : add eax, 0x217910 ; ret
0x0000020000135d9f : add eax, 0x21b6b0 ; sete al ; ret
0x00000200001345ab : add eax, 0x21cc78 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000012f945 : add eax, 0x2218a2 ; ret
0x000002000012e1b9 : add eax, 0x22306a ; ret
0x0000020000129ff5 : add eax, 0x227506 ; call rax
0x0000020000129f7a : add eax, 0x227581 ; call rax
0x00000200000a9cf0 : add eax, 0x22dae3 ; add rsp, 0x28 ; ret
0x00000200001221b9 : add eax, 0x22eec7 ; and dword ptr [rdi], ecx ; test ecx, ecx ; ret 8
0x0000020000122084 : add eax, 0x22effc ; and dword ptr [rdi], ecx ; test ebx, esp ; ret 8
0x000002000012722f : add eax, 0x23480000 ; ret 0x8948
0x0000020000129031 : add eax, 0x23480000 ; ret 0x8d48
0x0000020000130a37 : add eax, 0x2349ffed ; ret
0x000002000011a9c1 : add eax, 0x2368c2 ; ret
0x000002000011a9d1 : add eax, 0x236dea ; ret
0x00000200001dbca2 : add eax, 0x238348f0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000010cc98 : add eax, 0x244863 ; call rax
0x000002000010cc45 : add eax, 0x2448b6 ; call rax
0x000002000010ce66 : add eax, 0x244afd ; ret
0x0000020000476a1f : add eax, 0x24de9 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f8c2d : add eax, 0x25044e ; ret
0x00000200000ffbba : add eax, 0x251459 ; mov dword ptr [rcx + 0x2c], eax ; ret
0x00000200000ffb1e : add eax, 0x2514e5 ; dec eax ; ret
0x00000200000fda84 : add eax, 0x253a77 ; call rax
0x00000200000fd90a : add eax, 0x253bf1 ; call rax
0x00000200000f9223 : add eax, 0x257df0 ; ret
0x00000200000f6b39 : add eax, 0x25a4de ; ret
0x00000200000ea261 : add eax, 0x266dee ; jne 0x200000ea270 ; ret
0x00000200000ea26b : add eax, 0x266df0 ; ret
0x00000200000ea24b : add eax, 0x266e50 ; ret
0x00000200000ea1a5 : add eax, 0x266f02 ; ret
0x00000200000e8606 : add eax, 0x268a49 ; ret
0x00000200000e84ad : add eax, 0x268ed6 ; ret
0x00000200000dca12 : add eax, 0x274ae9 ; call rax
0x000002000000edea : add eax, 0x274b5945 ; in eax, 0xa ; ret
0x00000200000dc8bf : add eax, 0x274c3c ; call r8
0x00000200000dc79b : add eax, 0x274d60 ; call rax
0x00000200000db9ff : add eax, 0x275afc ; call rax
0x00000200000da7ca : add eax, 0x276d31 ; call rax
0x00000200000da71b : add eax, 0x276de0 ; call rax
0x00000200000da66a : add eax, 0x276e91 ; call rax
0x00000200000da5bb : add eax, 0x276f40 ; call rax
0x00000200000da4d0 : add eax, 0x27702b ; call rax
0x00000200000da486 : add eax, 0x277075 ; call rax
0x00000200000d9cfa : add eax, 0x277801 ; call rax
0x00000200000d9b4c : add eax, 0x2779af ; call rax
0x00000200000d9ac0 : add eax, 0x277a3b ; call rax
0x00000200000d9997 : add eax, 0x277b64 ; call rax
0x00000200000d98ef : add eax, 0x277c0c ; call rax
0x00000200000d98d6 : add eax, 0x277c25 ; call rax
0x00000200000d97f9 : add eax, 0x277d02 ; call rax
0x00000200000d913a : add eax, 0x2783c1 ; call rax
0x00000200000d90d8 : add eax, 0x278423 ; call rax
0x0000020000033317 : add eax, 0x27ac3b ; je 0x20000033302 ; mov al, 1 ; ret
0x00000200000cf665 : add eax, 0x281dc6 ; call rax
0x00000200000cf257 : add eax, 0x2821d4 ; call rax
0x000002000010ba14 : add eax, 0x28418b48 ; ret
0x00000200000c8b2b : add eax, 0x288555 ; add dword ptr [rdi], ecx ; test edi, eax ; ret 0xc
0x00000200000c8ad2 : add eax, 0x2885ae ; and dword ptr [rdi], ecx ; test dword ptr [rsi], ecx ; ret
0x00000200000c8a04 : add eax, 0x28867c ; add dword ptr [rdi], ecx ; test ecx, eax ; ret
0x000002000003013f : add eax, 0x28c48348 ; ret
0x00000200000b49db : add eax, 0x29c700 ; call rax
0x00000200000b4cd4 : add eax, 0x29c8b7 ; call rax
0x0000020000666b80 : add eax, 0x2a543 ; jmp 0x20000666b96
0x0000020000643380 : add eax, 0x2b41c28b ; ret 0x1b9
0x000002000054adfd : add eax, 0x2b480000 ; ret
0x00000200005fd139 : add eax, 0x2b480000 ; ret 0x8b48
0x00000200005aa0e4 : add eax, 0x2bffc883 ; ret 0x8b4c
0x000002000008c837 : add eax, 0x2c4a48 ; setne al ; ret
0x00000200004cc804 : add eax, 0x2dd5e800 ; ret
0x0000020000662327 : add eax, 0x2edfc ; ret
0x0000020000032b7e : add eax, 0x31e502 ; add dword ptr [rbx + rcx*4 + 0x74], eax ; ret 0xf08
0x0000020000026816 : add eax, 0x32ac95 ; sub rax, rcx ; ret
0x0000020000192012 : add eax, 0x3345fff3 ; shr cl, 0x5d ; ret 0xfff2
0x0000020000113b35 : add eax, 0x334c0035 ; ret 0x234c
0x00000200001ea4e5 : add eax, 0x334d0035 ; ret
0x00000200006f7d8a : add eax, 0x34cdb33 ; ret 0x8b48
0x0000020000027123 : add eax, 0x38400000 ; stosd dword ptr [rdi], eax ; ret
0x0000020000670452 : add eax, 0x3868ba0f ; adc al, 0xf6 ; ret
0x000002000049a04d : add eax, 0x38c48348 ; ret
0x0000020000668578 : add eax, 0x3b000000 ; ret 0x850f
0x0000020000112201 : add eax, 0x3b000000 ; ret 0x973
0x00000200001e86c9 : add eax, 0x3b000000 ; ret 0xa77
0x0000020000616a41 : add eax, 0x3b480000 ; ret
0x000002000009290f : add eax, 0x3b490000 ; ret 0xa275
0x0000020000402b46 : add eax, 0x3b8c3 ; add byte ptr [rax], al ; ret
0x0000020000012dd1 : add eax, 0x3b92050b ; ret
0x0000020000159fbb : add eax, 0x40 ; jne 0x20000159f98 ; sfence ; ret
0x000002000015df22 : add eax, 0x40 ; ret
0x00000200001032e8 : add eax, 0x40408b48 ; ret
0x00000200004d34f7 : add eax, 0x41800000 ; pop rsi ; ret
0x00000200001748d2 : add eax, 0x42e99000 ; mov al, 0xee ; push rsi ; ret 0xf08
0x00000200005399de : add eax, 0x440fc000 ; ret
0x0000020000411a4b : add eax, 0x4770000 ; mov al, r8b ; ret
0x000002000012e3c8 : add eax, 0x48 ; ret
0x00000200001d62c9 : add eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001108db : add eax, 0x48000000 ; add esp, 0x28 ; ret
0x0000020000116aa7 : add eax, 0x48000000 ; add esp, 0x38 ; ret
0x00000200000f940b : add eax, 0x48000000 ; add esp, 0x48 ; ret
0x00000200000b4997 : add eax, 0x48000000 ; add esp, 0x58 ; ret
0x0000020000094c6b : add eax, 0x4801e083 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001ed1f0 : add eax, 0x481a4388 ; add esp, 0x20 ; pop rbx ; ret
0x00000200005f02fd : add eax, 0x48900000 ; add esp, 0x20 ; pop rbp ; ret
0x00000200001d9225 : add eax, 0x48c38a00 ; add esp, 0x30 ; pop rbx ; ret
0x000002000010b8da : add eax, 0x48c48348 ; ret
0x000002000060b507 : add eax, 0x48ffb3d9 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004c78f7 : add eax, 0x48fff35c ; add esp, 0x20 ; pop rbx ; ret
0x00000200004d7fe6 : add eax, 0x50835 ; ret
0x00000200004d7ff6 : add eax, 0x50855 ; ret
0x00000200004d7fde : add eax, 0x5089d ; ret
0x00000200004d7fee : add eax, 0x508bd ; ret
0x000002000016fb43 : add eax, 0x51e99000 ; ret 0xffed
0x000002000015e01e : add eax, 0x54c6c5 ; ret
0x000002000015e369 : add eax, 0x55acce ; ret
0x000002000009c777 : add eax, 0x58c48348 ; ret
0x00000200005cd1f3 : add eax, 0x5e410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000208fd9 : add eax, 0x5f410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000037d222 : add eax, 0x600 ; ret
0x00000200006d25cf : add eax, 0x6b08e1c1 ; ret 0x2b1a
0x000002000023779e : add eax, 0x6f50d ; jmp 0x200002377d6
0x00000200001f6849 : add eax, 0x7404c3f6 ; sbb dh, dh ; ret
0x00000200001471ef : add eax, 0x7520f983 ; cmp esi, esi ; ret
0x0000020000111356 : add eax, 0x75894466 ; ret
0x000002000008ecde : add eax, 0x75c08545 ; add al, 0x41 ; mov eax, eax ; ret
0x00000200004724d2 : add eax, 0x76ce8 ; add bh, bh ; ret
0x00000200001b2f87 : add eax, 0x79e6e800 ; stc ; jmp qword ptr [rcx]
0x00000200000c4e31 : add eax, 0x81480000 ; ret
0x000002000022b2e5 : add eax, 0x829d6 ; jne 0x2000022b2f8 ; xor eax, eax ; ret
0x000002000012d29b : add eax, 0x83480000 ; ret
0x0000020000670e9f : add eax, 0x83480673 ; ret
0x0000020000036448 : add eax, 0x8418b48 ; ret
0x00000200000f27d9 : add eax, 0x842894c ; ret
0x000002000050b29c : add eax, 0x850f0000 ; ret
0x0000020000182729 : add eax, 0x854d0000 ; in al, 0x74 ; ret 0xb848
0x000002000037fb12 : add eax, 0x8608348 ; add byte ptr [rcx - 1], al ; ret
0x00000200000e9161 : add eax, 0x860f0000 ; sysenter
0x0000020000152070 : add eax, 0x8941d033 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200003d0718 : add eax, 0x89480000 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000a1be0 : add eax, 0x8a410000 ; ret 0x8d49
0x00000200005118f7 : add eax, 0x8affc3c3 ; ret
0x00000200003efd44 : add eax, 0x8b000000 ; ret
0x000002000043535c : add eax, 0x8b001356 ; ret
0x000002000061540a : add eax, 0x8b01b641 ; ret
0x0000020000111b8c : add eax, 0x8b1fe283 ; ret 0xe083
0x00000200002167fa : add eax, 0x8b410000 ; ret
0x000002000050e604 : add eax, 0x8b410000 ; ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000002e0ca : add eax, 0x8b413b89 ; ret
0x00000200001d9fe9 : add eax, 0x8b440000 ; ret
0x0000020000676d36 : add eax, 0x8b44ffff ; ret
0x0000020000178357 : add eax, 0x8b450000 ; ret 0x8348
0x00000200000ae01e : add eax, 0x8b480000 ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000097ec4 : add eax, 0x8b480000 ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000a7473 : add eax, 0x8b480000 ; ret
0x00000200006f1e26 : add eax, 0x8b480000 ; ret 0xb948
0x00000200006748bf : add eax, 0x8b48ffc2 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000037d6ac : add eax, 0x8b48ffde ; ret
0x00000200006d74da : add eax, 0x8b490000 ; ret 0xdb33
0x0000020000130c99 : add eax, 0x8b490000 ; sub byte ptr [rax + 0x23], r9b ; ret 0x3b49
0x000002000050e679 : add eax, 0x8b49000a ; ret 0xd348
0x000002000008260f : add eax, 0x8b4c0000 ; ret
0x00000200007195eb : add eax, 0x8b8 ; ret
0x0000020000501c62 : add eax, 0x8bc32b44 ; ret
0x0000020000192bf4 : add eax, 0x8bd23300 ; ret 0xde9
0x00000200001d04b2 : add eax, 0x8bd68b41 ; ret 0x8b48
0x00000200005b5aaa : add eax, 0x8bf38a40 ; ret
0x00000200005d7fc7 : add eax, 0x8bffa910 ; ret
0x0000020000503c37 : add eax, 0x8bffeca6 ; ret
0x000002000045bd6e : add eax, 0x8d410000 ; inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x000002000050536b : add eax, 0x940fd284 ; ret 0x348
0x000002000063b15a : add eax, 0x9cce8 ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200001b8420 : add eax, 0xa ; ret
0x00000200001abf50 : add eax, 0xa0b9 ; add byte ptr [rax + 0x63], cl ; ret
0x000002000026d2c8 : add eax, 0xa4004c70 ; ret 0x26
0x00000200000b629d : add eax, 0xa8cbe ; ret
0x00000200000b565a : add eax, 0xa9831 ; ret
0x000002000047f003 : add eax, 0xa9fe8 ; jmp 0x2000047efd3
0x00000200000b62b3 : add eax, 0xaac68 ; ret
0x00000200000b6295 : add eax, 0xaaec6 ; ret
0x00000200000b62bb : add eax, 0xaaee0 ; ret
0x00000200000b628d : add eax, 0xaaeee ; ret
0x00000200000b62c3 : add eax, 0xaaef8 ; ret
0x00000200000b62cf : add eax, 0xaaf0c ; ret
0x00000200000b62d7 : add eax, 0xaafa4 ; ret
0x00000200000b56de : add eax, 0xab83d ; ret
0x00000200000b568a : add eax, 0xab981 ; ret
0x00000200000b56bc : add eax, 0xab9af ; ret
0x00000200000b5682 : add eax, 0xab9c9 ; ret
0x00000200000b56ea : add eax, 0xaba01 ; ret
0x00000200000b5619 : add eax, 0xaba12 ; ret
0x00000200000b569a : add eax, 0xaba21 ; ret
0x00000200000b567a : add eax, 0xaba51 ; ret
0x00000200000b5645 : add eax, 0xaba56 ; ret
0x00000200000b5603 : add eax, 0xaba88 ; ret
0x00000200000b5692 : add eax, 0xabaa9 ; ret
0x00000200000b566a : add eax, 0xabab1 ; ret
0x00000200000b56d6 : add eax, 0xabae5 ; ret
0x00000200000b56b4 : add eax, 0xabae7 ; ret
0x00000200000b5662 : add eax, 0xabaf9 ; ret
0x00000200000b5704 : add eax, 0xabb07 ; ret
0x00000200000b56c9 : add eax, 0xabb12 ; ret
0x00000200000b5639 : add eax, 0xabb42 ; ret
0x00000200000b56f7 : add eax, 0xabb44 ; ret
0x00000200000b56a7 : add eax, 0xabbb4 ; ret
0x000002000020a14e : add eax, 0xac00 ; ret
0x0000020000205a60 : add eax, 0xb19e2c1 ; ret 0x8189
0x0000020000583d75 : add eax, 0xb54031e8 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000049c77 : add eax, 0xb60f0000 ; ret
0x00000200000ae103 : add eax, 0xb60f0000 ; ret 0x8d48
0x000002000013732f : add eax, 0xb60f0008 ; ret
0x00000200003b21ad : add eax, 0xb60fffc9 ; ret
0x0000020000637f6b : add eax, 0xb70fc477 ; ret 0xe883
0x0000020000411963 : add eax, 0xb8c30000 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200001dffd5 : add eax, 0xb94775b8 ; jmp rax
0x00000200001e09d7 : add eax, 0xbe004 ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001e0934 : add eax, 0xbe0a7 ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001e0897 : add eax, 0xbe144 ; mov rsi, rdx ; call qword ptr [rax]
0x00000200001e082b : add eax, 0xbe1b0 ; mov rsi, rdx ; call qword ptr [rax]
0x00000200001e07e0 : add eax, 0xbe1fb ; mov rbx, rcx ; call qword ptr [rax]
0x000002000020c902 : add eax, 0xc ; jmp 0x2000020c920
0x000002000020d0be : add eax, 0xc ; jmp 0x2000020d0dc
0x000002000001219f : add eax, 0xc00a0026 ; add eax, dword ptr [rcx] ; ret 0x2a05
0x00000200001ac04b : add eax, 0xc01bdaf7 ; add eax, 3 ; ret
0x00000200001e0aaa : add eax, 0xc0330000 ; add rsp, 0x38 ; ret
0x0000020000285d38 : add eax, 0xc060016 ; ret 0x7005
0x000002000013aed3 : add eax, 0xc1480000 ; call 0x1ffc236f6f2
0x00000200001f1122 : add eax, 0xc1480000 ; call 0x1ffc2425941
0x00000200000a28ad : add eax, 0xc1480000 ; call 0x1ffc32d71ca
0x000002000020ee05 : add eax, 0xc18b0000 ; ret
0x000002000010a40c : add eax, 0xc3000000 ; xor eax, eax ; ret
0x0000020000662216 : add eax, 0xc4834800 ; pop rax ; ret
0x0000020000668a2c : add eax, 0xc4834800 ; ret
0x00000200004f1be1 : add eax, 0xc5c019e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000043ac88 : add eax, 0xc99ce6e8 ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c78ab : add eax, 0xca830000 ; jmp qword ptr [rbx]
0x00000200001d8a4f : add eax, 0xcca14 ; ret
0x00000200004c7a7b : add eax, 0xccc30000 ; ret 0
0x0000020000235a53 : add eax, 0xcd5e8 ; add rsp, 0x38 ; ret
0x00000200002373dd : add eax, 0xced4e ; ret
0x00000200003e3e38 : add eax, 0xd00 ; ret
0x00000200001d0d70 : add eax, 0xd09e3 ; call rax
0x00000200001d0d52 : add eax, 0xd22c1 ; call rax
0x00000200001d0c37 : add eax, 0xd23dc ; call rax
0x00000200001d0695 : add eax, 0xd2976 ; call rax
0x00000200001d06a6 : add eax, 0xd2995 ; call rax
0x000002000005e41b : add eax, 0xd7034900 ; jmp rdx
0x000002000057550f : add eax, 0xe083c233 ; add dh, byte ptr [rbx] ; ret 0x8941
0x00000200006d2d02 : add eax, 0xe3c1c82b ; or byte ptr [rcx - 0x75], al ; ret 0xc183
0x0000020000637ec7 : add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x00000200005fc34d : add eax, 0xe6760000 ; xor eax, eax ; ret
0x0000020000513461 : add eax, 0xe8000000 ; salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000549eb4 : add eax, 0xe85782e9 ; push rsi ; ret
0x00000200000b366e : add eax, 0xe8ba0f49 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000367ef0 : add eax, 0xe8c03345 ; push rbx ; ret
0x00000200001c0725 : add eax, 0xe8ce8b48 ; ret 0x1da1
0x000002000007d212 : add eax, 0xe9800000 ; ret
0x000002000006a597 : add eax, 0xe9c00000 ; ret
0x0000020000587956 : add eax, 0xe9fff0c4 ; xlatb ; ret
0x00000200002194ce : add eax, 0xea3c0ce8 ; push rsi ; ret
0x00000200001deace : add eax, 0xeaf45 ; ret
0x00000200000d45f9 : add eax, 0xeb000000 ; ret
0x000002000008707e : add eax, 0xeb000000 ; ret 0x8948
0x00000200005bca5e : add eax, 0xeb0100c6 ; out dx, eax ; xor al, al ; ret
0x000002000049ed68 : add eax, 0xeb144789 ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200003f86f2 : add eax, 0xebc08b41 ; ret
0x000002000057da0d : add eax, 0xebc12b48 ; add ecx, dword ptr [rax + 0x2b] ; ret 0x148
0x00000200001841a2 : add eax, 0xebc20b49 ; add ecx, dword ptr [rcx + 0x23] ; ret
0x00000200001f52b0 : add eax, 0xebc70b48 ; add ecx, dword ptr [rcx + 0x23] ; ret 0xc148
0x000002000021406f : add eax, 0xebca8b45 ; add eax, dword ptr [rbp - 0x75] ; ret 0x8d41
0x0000020000404085 : add eax, 0xebe0c283 ; mov ah, 0x8b ; ret 0xc148
0x00000200001427d9 : add eax, 0xebffcf83 ; or al, 0x8a ; ret
0x00000200001727a0 : add eax, 0xed9086e8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000574ba5 : add eax, 0xeda4aae9 ; push rdi ; ret
0x00000200005738fb : add eax, 0xedb754e9 ; dec dword ptr [rbp - 0x75] ; ret 0x8a40
0x000002000018e655 : add eax, 0xefba0f48 ; or dword ptr [rax - 0x75], ecx ; ret
0x00000200005c5f59 : add eax, 0xefe80000 ; ret
0x000002000059e47f : add eax, 0xf000003 ; mov ds, ebp ; ret
0x000002000048b65b : add eax, 0xf0c08348 ; ret
0x00000200001f99a1 : add eax, 0xf1ad51e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000012e66a : add eax, 0xf1f508d ; ret 0xb8c3
0x000002000070e844 : add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x000002000067ea99 : add eax, 0xf6000010 ; ret 0x7508
0x00000200004b6147 : add eax, 0xf6001f44 ; ret
0x000002000005f1d7 : add eax, 0xf61fe383 ; ret
0x000002000019a5ea : add eax, 0xf6fff46f ; ret
0x00000200001d7aa5 : add eax, 0xf8786 ; mov dword ptr [rcx], eax ; ret
0x00000200001d7a95 : add eax, 0xf878e ; ret
0x00000200001d79a5 : add eax, 0xf8816 ; ret
0x00000200004e097e : add eax, 0xf922c0e8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005f7182 : add eax, 0xfc00000 ; ret 0x189
0x00000200003e6734 : add eax, 0xfca3b4c ; xchg eax, ebp ; ret 0x16
0x000002000051d2a4 : add eax, 0xff008b48 ; ret
0x0000020000147079 : add eax, 0xff088341 ; ret
0x00000200006f3d1d : add eax, 0xff098b48 ; ret
0x0000020000149e2e : add eax, 0xff410000 ; ret
0x00000200006f59b0 : add eax, 0xff9d6d87 ; ret
0x00000200006f59cc : add eax, 0xff9d898f ; ret
0x00000200006f59c4 : add eax, 0xff9d9433 ; ret
0x00000200006f59a8 : add eax, 0xff9d96af ; ret
0x00000200006f59dc : add eax, 0xffa4a74f ; ret
0x00000200006f59d4 : add eax, 0xffa62c07 ; ret
0x00000200006f59bc : add eax, 0xffa6723f ; ret
0x0000020000718a7d : add eax, 0xffb8a40e ; ret
0x0000020000715171 : add eax, 0xffb90ab2 ; push rax ; ret
0x0000020000722702 : add eax, 0xffba6c68 ; adc byte ptr [rcx - 0x75], cl ; ret 0x86e9
0x0000020000718670 : add eax, 0xffbb0bc3 ; add rsp, 0x28 ; ret
0x00000200006eae83 : add eax, 0xffbb8228 ; add rsp, 0x68 ; ret
0x00000200006edc9e : add eax, 0xffbb9e7d ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000071833d : add eax, 0xffbc762e ; ret
0x000002000068c66b : add eax, 0xffc19d68 ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000068a334 : add eax, 0xffc1b0a7 ; add rsp, 0x28 ; ret
0x0000020000723215 : add eax, 0xffc2ea06 ; jmp 0x20000723229
0x0000020000718bf7 : add eax, 0xffc38760 ; enter 0, 0 ; ret
0x00000200007187e5 : add eax, 0xffc3924e ; ret
0x000002000065a4b5 : add eax, 0xffc3d8f6 ; mov qword ptr [rcx + 0x20], rax ; ret
0x00000200006622ff : add eax, 0xffc4b424 ; add rsp, 0x38 ; ret
0x0000020000662311 : add eax, 0xffc4b66e ; ret
0x000002000063d773 : add eax, 0xffc63ff0 ; call rax
0x00000200006620d0 : add eax, 0xffc66cab ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000622690 : add eax, 0xffc8269b ; add rsp, 0x28 ; ret
0x000002000061591d : add eax, 0xffcc257e ; ret
0x0000020000672b48 : add eax, 0xffcf8b48 ; sar bh, 1 ; ret
0x00000200005cee59 : add eax, 0xffd06b4a ; ret
0x0000020000553566 : add eax, 0xffd4e1d5 ; call rax
0x0000020000553545 : add eax, 0xffd4e20e ; call rax
0x000002000054a46c : add eax, 0xffd572f7 ; call rax
0x0000020000520290 : add eax, 0xffd80bf7 ; inc eax ; ret
0x000002000051fbf3 : add eax, 0xffd817e8 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x000002000051fbea : add eax, 0xffdb62c1 ; ja 0x2000051fbf9 ; ret
0x000002000051f9c2 : add eax, 0xffdb6619 ; add rsp, 0x28 ; ret
0x00000200004ee657 : add eax, 0xffdb72fc ; ret
0x00000200004dda6e : add eax, 0xffdcc52f ; ret
0x00000200004d7e67 : add eax, 0xffdd6900 ; add rsp, 0x28 ; ret
0x00000200004cf1dd : add eax, 0xffdd6a66 ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200004ccd48 : add eax, 0xffdd8c23 ; call 0x200000f3bdc
0x00000200004ccccf : add eax, 0xffdd8c9c ; call 0x200000f3bdc
0x00000200004b3ecd : add eax, 0xffdfa556 ; call rax
0x00000200004cd235 : add eax, 0xffe08b52 ; add rsp, 0x38 ; ret
0x00000200001bb72f : add eax, 0xffe6090c ; mov qword ptr [rcx], rax ; ret
0x00000200004aabcb : add eax, 0xffea6510 ; call rax
0x00000200004a16da : add eax, 0xffeafa01 ; call rax
0x00000200004a0fd3 : add eax, 0xffeb0108 ; call rax
0x00000200003eca8d : add eax, 0xffeb8d6e ; lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000418c03 : add eax, 0xffeb8e28 ; call 0x20000045498
0x000002000041aa73 : add eax, 0xffeb8f68 ; ret
0x0000020000414077 : add eax, 0xffebf964 ; ret
0x000002000040cbb8 : add eax, 0xffec5003 ; mov rax, r8 ; ret
0x00000200003d09c5 : add eax, 0xffed0d9e ; call rax
0x00000200003d096e : add eax, 0xffed0df5 ; call rax
0x00000200003e59a8 : add eax, 0xffee2db3 ; ret
0x00000200003e599f : add eax, 0xffee2dbc ; ret
0x000002000045411e : add eax, 0xffefcfbd ; call rax
0x000002000037f96f : add eax, 0xfff17a10 ; mov dword ptr [rcx + 8], eax ; ret
0x00000200006059c7 : add eax, 0xfff20734 ; ret
0x00000200006059bf : add eax, 0xfff2074c ; ret
0x00000200006059b7 : add eax, 0xfff20764 ; ret
0x00000200006059af : add eax, 0xfff2077c ; ret
0x00000200006059a7 : add eax, 0xfff20794 ; ret
0x000002000060599f : add eax, 0xfff207ac ; ret
0x0000020000605997 : add eax, 0xfff207c4 ; ret
0x000002000060598f : add eax, 0xfff207dc ; ret
0x00000200003d03c7 : add eax, 0xfff26fe9 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000044fcc4 : add eax, 0xfff38be9 ; dec dword ptr [rax - 9] ; ret
0x000002000036a175 : add eax, 0xfff3b2f0 ; ret
0x0000020000364d25 : add eax, 0xfff4129e ; add rsp, 0x28 ; ret
0x0000020000207f21 : add eax, 0xfff5815a ; call 0x200001441cb
0x00000200003f73d5 : add eax, 0xfff59d06 ; call rax
0x0000020000719337 : add eax, 0xfff90f33 ; ret
0x0000020000710e7b : add eax, 0xfff992b4 ; add rsp, 0x28 ; ret
0x00000200003b199f : add eax, 0xfff9f73c ; call rax
0x00000200001f99b8 : add eax, 0xfffce6e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000018ee57 : add eax, 0xfffd0104 ; ret
0x0000020000379ad6 : add eax, 0xffff6ee5 ; ret
0x0000020000379ace : add eax, 0xffff6efd ; ret
0x0000020000379ac6 : add eax, 0xffff6f15 ; ret
0x0000020000379abe : add eax, 0xffff6f2d ; ret
0x0000020000379ab6 : add eax, 0xffff6f45 ; ret
0x0000020000379aae : add eax, 0xffff6f5d ; ret
0x0000020000379aa6 : add eax, 0xffff6f75 ; ret
0x0000020000379a9e : add eax, 0xffff6f8d ; ret
0x00000200006066d7 : add eax, 0xffffca95 ; ret 0x933b
0x0000020000611e1b : add eax, 2 ; add rsp, 0x28 ; ret
0x000002000020c93f : add eax, 2 ; jmp 0x2000020c967
0x0000020000033a67 : add eax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x000002000020a21c : add eax, 2 ; mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x000002000006fe53 : add eax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x00000200000b4dd0 : add eax, 2 ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x000002000045c710 : add eax, 2 ; ret
0x00000200001ac050 : add eax, 3 ; ret
0x0000020000033639 : add eax, 6 ; shl rax, 4 ; add rax, rdx ; ret
0x00000200000c3953 : add eax, 8 ; dec r9 ; jne 0x200000c394e ; ret
0x0000020000186e71 : add eax, 8 ; inc r10 ; jmp 0x20000186e63
0x000002000020c90c : add eax, 8 ; jmp 0x2000020c920
0x000002000020d0c8 : add eax, 8 ; jmp 0x2000020d0dc
0x000002000010ba10 : add eax, dword ptr [r10] ; je 0x2000010ba23 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000049f2b7 : add eax, dword ptr [r11 + 0x3b41fce0] ; ret 0x1b75
0x00000200001e01f7 : add eax, dword ptr [r8 + rax*8 - 0x74b7f187] ; ret 0x2b9
0x000002000007eb07 : add eax, dword ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000009bb24 : add eax, dword ptr [r8] ; mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x0000020000120037 : add eax, dword ptr [r9 + 0x32] ; ret
0x0000020000453a72 : add eax, dword ptr [r9 + 0xb] ; ret 0x4188
0x00000200000c35aa : add eax, dword ptr [rax + rax*8 + 0x2a410774] ; ret 0x388
0x00000200001e01f8 : add eax, dword ptr [rax + rax*8 - 0x74b7f187] ; ret 0x2b9
0x000002000072a95e : add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x0000020000140326 : add eax, dword ptr [rax - 0x77becf3e] ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200003f31da : add eax, dword ptr [rax - 0x78] ; xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x00000200004e64fe : add eax, dword ptr [rax] ; add al, al ; ret
0x00000200004493cf : add eax, dword ptr [rax] ; add al, ch ; cmp dword ptr [rdx], edx ; ret 0x48ff
0x000002000021edf6 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf3ed
0x00000200004819b1 : add eax, dword ptr [rax] ; add al, ch ; ret 0xffcc
0x00000200003deaee : add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200000ccd85 : add eax, dword ptr [rax] ; add bh, bh ; ret 0x5589
0x000002000009c0ed : add eax, dword ptr [rax] ; add bl, al ; mov eax, 0x7d0 ; ret
0x00000200003fd4c6 : add eax, dword ptr [rax] ; add bl, ch ; ret 0x6948
0x00000200000b2cb7 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x00000200006cce57 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8b45
0x00000200006cd899 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200006e849c : add eax, dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200001cfbb6 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000031a6c : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x0000020000081945 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x4f17dca3], cl ; ret
0x000002000020dc5f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x00000200001316cf : add eax, dword ptr [rax] ; add byte ptr [rax - 0x74000009], al ; ret 0x6ca3
0x00000200004f9624 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200000adaa6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000045ce47 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x23], cl ; ret
0x0000020000077ba0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004c0f53 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200004850af : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x0000020000604319 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003ee67e : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x000002000020dc6f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp 0x2000020dc8e
0x00000200006c6591 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000198312 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4868
0x0000020000105227 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000062265 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xc00
0x00000200001d808f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x9000009], al ; ret
0x000002000000a33e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x000002000009a71e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000446c6c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004d7c51 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x200000ff577
0x00000200004e3f9e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x000002000016d722 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; int 0x29
0x0000020000180f5c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000008182e
0x00000200007244a5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x20000724467
0x000002000019e89f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x000002000009c092 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000065f288 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000261d04 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4872
0x00000200004cf1e2 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200000b41f7 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x14], dh ; xor eax, eax ; ret
0x0000020000061e21 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret
0x000002000002c6ba : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000017039c : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x0000020000166863 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0xeee8
0x00000200003d7b82 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000613c77 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200005ff65f : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7ee68b25], al ; ret
0x000002000004e7f4 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x000002000012b44f : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x4374b63a], cl ; ret 0xd80
0x000002000050df00 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x000002000050e7da : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7374b63f], cl ; ret
0x00000200005a0072 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x78f0fe08], al ; ret 0xf3e7
0x00000200005eac5f : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x79f0fe08], al ; ret
0x000002000043f035 : add eax, dword ptr [rax] ; add byte ptr [rbx], al ; ret
0x0000020000712e9f : add eax, dword ptr [rax] ; add byte ptr [rbx], al ; ret 0x8d48
0x0000020000604330 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x000002000059a82c : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x4466
0x00000200000f8bf5 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x470f
0x0000020000215464 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xc77
0x0000020000131666 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0x8d48
0x000002000007c320 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0x8d4c
0x00000200000b36e7 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x31], cl ; and r14b, r14b ; ret
0x0000020000051ec0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x000002000007baff : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x000002000046f017 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200004a8f62 : add eax, dword ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0xc503
0x000002000039b031 : add eax, dword ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0xc803
0x0000020000087a4b : add eax, dword ptr [rax] ; add byte ptr [rcx + 3], cl ; ret
0x000002000050b25c : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x0000020000097bbc : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; jmp qword ptr [r11]
0x000002000006c582 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200006c8be3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; ret
0x00000200006190ad : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x2302
0x0000020000673c0b : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x00000200006192f8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x6602
0x000002000005f187 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000002000014783d : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x90e9
0x00000200000731b3 : add eax, dword ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0x600
0x00000200003a9b22 : add eax, dword ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200000bcca4 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000461e8 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000040acf : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x00000200000416f8 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x000002000059e480 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov ds, ebp ; ret
0x0000020000109508 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; ret 0xbb83
0x000002000059e48b : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test dl, dl ; ret
0x00000200006cef9d : add eax, dword ptr [rax] ; add byte ptr [rdx + 1], bh ; jmp r8
0x0000020000096d7d : add eax, dword ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000003b741 : add eax, dword ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x0000020000721037 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x000002000056543d : add eax, dword ptr [rax] ; add cl, al ; jmp 0x20000565456
0x0000020000532367 : add eax, dword ptr [rax] ; add cl, ch ; jmp rsp
0x000002000054d43e : add eax, dword ptr [rax] ; add cl, ch ; ret 0xe8fa
0x00000200003af7bb : add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000680602 : add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000114ebd : add eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000118b6a : add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x000002000010b78e : add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000010fbd9 : add eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x000002000010ebe2 : add eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001117c7 : add eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000010d4c1 : add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x000002000010b135 : add eax, dword ptr [rax] ; add rsp, 0x70 ; pop rbp ; ret
0x000002000010d57c : add eax, dword ptr [rax] ; add rsp, 0x78 ; ret
0x000002000010915f : add eax, dword ptr [rax] ; add rsp, 0x98 ; ret
0x000002000003992a : add eax, dword ptr [rax] ; jmp 0x200000397e6
0x00000200006ed7b2 : add eax, dword ptr [rax] ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000009bb25 : add eax, dword ptr [rax] ; mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000018a66f : add eax, dword ptr [rax] ; nop ; jmp 0x200000a6892
0x00000200000124a0 : add eax, dword ptr [rax] ; out -0x40, eax ; add al, byte ptr [rdx] ; ret
0x0000020000709ced : add eax, dword ptr [rax] ; rol byte ptr [rbp - 0x26baf040], 0x8b ; ret
0x0000020000032622 : add eax, dword ptr [rbp + 0x22] ; ret
0x0000020000087b36 : add eax, dword ptr [rbp + 0x23] ; ret
0x0000020000605911 : add eax, dword ptr [rbp + 0x32] ; leave ; mov al, r9b ; ret
0x00000200001d175f : add eax, dword ptr [rbp + 0x33] ; leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x0000020000142b2c : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x0000020000673004 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x0000020000208cb0 : add eax, dword ptr [rbp + 0x3b] ; ret
0x00000200005fa1dc : add eax, dword ptr [rbp + 0x3b] ; ret 0x860f
0x00000200001d9abb : add eax, dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000214074 : add eax, dword ptr [rbp - 0x75] ; ret 0x8d41
0x000002000049d1e2 : add eax, dword ptr [rbp - 0x76] ; ret
0x000002000051f5e9 : add eax, dword ptr [rbp - 0x77] ; adc dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000049f2b8 : add eax, dword ptr [rbx + 0x3b41fce0] ; ret 0x1b75
0x000002000071e035 : add eax, dword ptr [rbx + 0x75030c79] ; or al, ch ; ret
0x000002000054769a : add eax, dword ptr [rbx + 0xf48e0c0] ; lodsb al, byte ptr [rsi] ; ret
0x000002000060e510 : add eax, dword ptr [rbx + rcx*4 - 0x30] ; mov eax, r10d ; jmp 0x2000060e524
0x0000020000075d4d : add eax, dword ptr [rbx - 0x157ce01e] ; add al, 0xf7 ; ret 0xfffd
0x00000200004ee626 : add eax, dword ptr [rbx - 0x3fccfbf7] ; ret
0x00000200000d07ed : add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x000002000055c627 : add eax, dword ptr [rbx - 0x7af0e907] ; cld ; ret 0xffea
0x0000020000616c63 : add eax, dword ptr [rbx - 0x7cb70037] ; ret 0x4802
0x00000200001513a0 : add eax, dword ptr [rbx - 0x899fd38] ; ret 0x100
0x000002000020e60b : add eax, dword ptr [rbx - 0xb7f81f] ; ret 0x8348
0x00000200005efbd0 : add eax, dword ptr [rbx] ; add al, al ; ret
0x0000020000617b7e : add eax, dword ptr [rbx] ; ret 0x3b41
0x0000020000490936 : add eax, dword ptr [rbx] ; ret 0x8948
0x00000200000ec302 : add eax, dword ptr [rcx + 0x22] ; ret
0x00000200003ac17e : add eax, dword ptr [rcx + 0x23] ; ret
0x00000200001b0f77 : add eax, dword ptr [rcx + 0x2b] ; ret
0x0000020000120038 : add eax, dword ptr [rcx + 0x32] ; ret
0x000002000006f693 : add eax, dword ptr [rcx + 0x32] ; ret 0x4288
0x0000020000071235 : add eax, dword ptr [rcx + 0x32] ; ret 0x4388
0x00000200003e9fb0 : add eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000033a58 : add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000598d8a : add eax, dword ptr [rcx + 0xb10] ; inc edx ; jmp 0x20000598d66
0x0000020000453a73 : add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x0000020000453c72 : add eax, dword ptr [rcx + 0xb] ; ret 0x8841
0x000002000003db8e : add eax, dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8844
0x00000200000f1be5 : add eax, dword ptr [rcx + 3] ; ret
0x00000200006134c4 : add eax, dword ptr [rcx + 3] ; ror dword ptr [rcx + 3], cl ; ret
0x000002000037f3be : add eax, dword ptr [rcx + rax + 0x19] ; ret
0x00000200005fa016 : add eax, dword ptr [rcx + rax + 1] ; mov eax, 1 ; ret
0x00000200002198da : add eax, dword ptr [rcx + rcx*4 + 0x11] ; ret
0x00000200006e464d : add eax, dword ptr [rcx - 0x3f] ; jmp 0x1ffc2f98761
0x000002000017684d : add eax, dword ptr [rcx - 0x75] ; ret
0x00000200003b3cc5 : add eax, dword ptr [rcx - 0x75] ; ret 0x2b41
0x000002000064d807 : add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x00000200001c4f3b : add eax, dword ptr [rcx - 0x75] ; ret 0x483d
0x0000020000128a00 : add eax, dword ptr [rcx - 0x75] ; ret 0x8d48
0x000002000045b1dc : add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x000002000016dfe1 : add eax, dword ptr [rcx - 0x75] ; ret 0xf44
0x00000200004f42c0 : add eax, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000cd95c : add eax, dword ptr [rcx - 0x7c] ; ret 0x840f
0x00000200001a79e8 : add eax, dword ptr [rcx - 0xa] ; ret 0x7507
0x000002000006ab00 : add eax, dword ptr [rcx - 1] ; ret
0x000002000021b320 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005627b6 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; jmp 0x2000041ea8d
0x00000200000121a4 : add eax, dword ptr [rcx] ; ret 0x2a05
0x000002000047b096 : add eax, dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066a6d3 : add eax, dword ptr [rcx] ; xor eax, eax ; ret
0x00000200005d5e09 : add eax, dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000023695a : add eax, dword ptr [rdi] ; add byte ptr [rbx], bh ; ret 0xf72
0x0000020000236966 : add eax, dword ptr [rdi] ; add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x000002000010c843 : add eax, dword ptr [rdx + 0x260] ; ret
0x000002000008decf : add eax, dword ptr [rdx + 0x60] ; ret
0x000002000010ba11 : add eax, dword ptr [rdx] ; je 0x2000010ba22 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x00000200005399dd : add eax, dword ptr [rip + 0x440fc000] ; ret
0x00000200005cee58 : add eax, dword ptr [rip - 0x2f94b6] ; ret
0x0000020000686151 : add eax, dword ptr [rip - 0x74b40000] ; ret
0x0000020000209f86 : add eax, dword ptr [rsi] ; je 0x20000209f93 ; xor al, al ; ret
0x0000020000253eb0 : add eax, dword ptr [rsi] ; ret 0x1906
0x000002000013f540 : add eax, dword ptr [rsi] ; setbe al ; ret
0x0000020000238736 : add eax, eax ; and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200005323bd : add eax, eax ; call 0x2000015d885
0x00000200000eaa40 : add eax, eax ; jmp rax
0x00000200000e1f08 : add eax, eax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x00000200005c15ee : add eax, eax ; mov qword ptr [rdx + 0x48], rax ; ret
0x000002000063bc0d : add eax, eax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000063bbec
0x000002000002b344 : add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x0000020000192a20 : add eax, eax ; movzx eax, word ptr [r8 + rax*8 + 0xc] ; ret
0x00000200001ea101 : add eax, eax ; ret
0x0000020000110b8e : add eax, eax ; test rax, rax ; jle 0x20000110b9d ; ret
0x0000020000108786 : add eax, eax ; xor eax, eax ; mov word ptr [r10 + 2], r8w ; ret
0x000002000010c430 : add eax, ebp ; cli ; ret 0xfff4
0x000002000040d622 : add eax, ebp ; cmp byte ptr [rsi], dh ; ret 0x48ff
0x00000200004d9016 : add eax, ebp ; cmp byte ptr [rsp + rbp*8 + 0x3bdf8bff], ah ; ret
0x00000200004538aa : add eax, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x0000020000467bfd : add eax, ebp ; int 0xc3
0x0000020000408fa5 : add eax, ebp ; mov ch, 0x7c ; ret 0xe8ff
0x0000020000148f29 : add eax, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x39] ; ret
0x00000200003ffa52 : add eax, ebp ; or byte ptr [rdx], dl ; ret
0x00000200004481fc : add eax, ebp ; pop rsi ; mov bh, byte ptr [rsi - 0x9e97401] ; ret 0xf01
0x000002000070d528 : add eax, ebp ; pop rsi ; ret
0x00000200006ed536 : add eax, ebp ; push rax ; ret
0x0000020000674c87 : add eax, ebp ; ret
0x000002000002dcc0 : add eax, ebp ; ret 0x63
0x00000200005d9988 : add eax, ebp ; ret 0xa966
0x00000200004a2d98 : add eax, ebp ; ret 0xb8de
0x00000200005e14bc : add eax, ebp ; ret 0xe2d8
0x00000200000e5458 : add eax, ebp ; ret 0xf65c
0x00000200004ddc38 : add eax, ebp ; ret 0xf91d
0x0000020000676f1b : add eax, ebp ; sbb ebx, dword ptr [rcx] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x0000020000586a93 : add eax, ebp ; scasd eax, dword ptr [rdi] ; ret
0x000002000037d0d7 : add eax, ebp ; test dword ptr [rsi], 0xc748ffd2 ; ret
0x00000200000e3df4 : add eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012d15c : add eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000379ec3 : add eax, ecx ; add rsp, 0x38 ; ret
0x000002000057550c : add eax, ecx ; call 0x1ff8419881d
0x00000200001ea0bc : add eax, ecx ; cmp r9, r10 ; jb 0x200001ea099 ; ret
0x00000200006142cb : add eax, ecx ; cmp rdx, rax ; setae al ; ret
0x000002000041c4ad : add eax, ecx ; dec r10 ; jne 0x2000041c486 ; ret
0x00000200000914fa : add eax, ecx ; inc rdx ; jmp 0x20000091494
0x00000200000937f0 : add eax, ecx ; jmp 0x200000937ba
0x000002000022da2f : add eax, ecx ; jmp r8
0x000002000046f52b : add eax, ecx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000020a313 : add eax, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x000002000003362e : add eax, ecx ; ret
0x00000200002093ff : add eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001402a0 : add eax, edi ; call r8
0x00000200003c3fe8 : add eax, edi ; mov qword ptr [rbp - 0x50], rax ; call 0x200000702b8
0x00000200001401af : add eax, edi ; mov rdx, r12 ; call rax
0x00000200001419b5 : add eax, edi ; ret
0x0000020000443ba9 : add eax, edi ; ret 0x48ff
0x0000020000490cc5 : add eax, edx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053d55a : add eax, edx ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c50b8 : add eax, edx ; jmp 0x200000c5071
0x00000200000e3f6f : add eax, edx ; jmp 0x200000e3f52
0x0000020000208ea2 : add eax, edx ; jmp 0x20000208eaa
0x00000200003ac933 : add eax, edx ; jmp 0x200003ac8bc
0x00000200003ac8f4 : add eax, edx ; jmp 0x200003ac8ca
0x00000200003ac913 : add eax, edx ; jmp 0x200003ac8d7
0x00000200003ac901 : add eax, edx ; jmp 0x200003ac940
0x00000200004f70a2 : add eax, edx ; jmp 0x200004f703a
0x0000020000616b9b : add eax, edx ; jmp 0x20000616ba3
0x000002000061cb63 : add eax, edx ; jmp 0x2000061cb6c
0x0000020000065b24 : add eax, edx ; jmp rax
0x00000200001d930f : add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000036b4f9 : add eax, edx ; mov qword ptr [r11], rcx ; ret
0x0000020000033641 : add eax, edx ; ret
0x00000200006cef86 : add eax, edx ; sub rsp, 0x28 ; call rax
0x0000020000235ac3 : add eax, esi ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200000fb667 : add eax, esi ; cmpxchg dword ptr [rdx], ecx ; jne 0x200000fb676 ; ret
0x0000020000036479 : add eax, esi ; cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x20000036499 ; ret
0x000002000002b798 : add eax, esi ; cmpxchg qword ptr [r9], r8 ; jne 0x2000002b7c6 ; ret
0x000002000002b797 : add eax, esi ; cmpxchg qword ptr [r9], r8 ; jne 0x2000002b7c7 ; ret
0x0000020000068f20 : add eax, esi ; cmpxchg qword ptr [r9], r8 ; jne 0x20000068f39 ; ret
0x0000020000068f1f : add eax, esi ; cmpxchg qword ptr [r9], r8 ; jne 0x20000068f3a ; ret
0x00000200000b9778 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x200000b9789 ; ret
0x00000200000b9777 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x200000b978a ; ret
0x0000020000208ea1 : add eax, r10d ; jmp 0x20000208eab
0x0000020000616b9a : add eax, r10d ; jmp 0x20000616ba4
0x00000200001419b4 : add eax, r15d ; ret
0x000002000002b343 : add eax, r8d ; mov word ptr [rdx + 0x14], ax ; ret
0x000002000057550b : add eax, r9d ; call 0x1ff8419881e
0x000002000020a0e6 : add eax, r9d ; ret
0x00000200000146e4 : add ebp, dword ptr [rax] ; ret
0x00000200006e971c : add ebp, dword ptr [rbx - 0x36] ; sbb al, byte ptr [rbp - 0x75] ; ret 0x2b44
0x00000200003fca2a : add ebp, dword ptr [rbx] ; ret
0x000002000018ec89 : add ebp, dword ptr [rcx] ; sbb al, 0 ; call rax
0x00000200003f17c9 : add ebp, dword ptr [rdx] ; ret 0x48ff
0x00000200000bf737 : add ebp, eax ; ret
0x000002000051eebb : add ebp, ebp ; ret
0x000002000070780d : add ebp, ebx ; call 0x200003f3a5c
0x00000200001775a9 : add ebp, ecx ; cmp dword ptr [rip - 0x417f0011], ecx ; ret
0x00000200004c0fd7 : add ebp, ecx ; dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x000002000045bb97 : add ebp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000596ce8 : add ebp, edi ; jmp 0x200004c2f79
0x0000020000141997 : add ebp, edi ; ret
0x00000200001648c9 : add ebp, esp ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000596ce7 : add ebp, r15d ; jmp 0x200004c2f7a
0x0000020000141996 : add ebp, r15d ; ret
0x00000200000bca73 : add ebx, 0x3a000000 ; ret 0xc88b
0x000002000003c9d0 : add ebx, 0x3b000000 ; ret 0x8d0f
0x000002000010e0f9 : add ebx, 0x41000000 ; mov eax, eax ; ret
0x00000200001a0f4a : add ebx, 0x79 ; cmc ; dec dword ptr [rcx - 0x75] ; ret 0x2b48
0x000002000003360b : add ebx, 0xf8408d41 ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000002000008e748 : add ebx, 8 ; dec r10 ; jne 0x2000008e745 ; ret
0x000002000000f512 : add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x000002000012fde1 : add ebx, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000066b17e : add ebx, dword ptr [rdi - 0x32] ; jmp qword ptr [rcx]
0x000002000050dd41 : add ebx, dword ptr [rdx] ; ret
0x000002000052010b : add ebx, eax ; and dword ptr [rip - 0x24a274], 0 ; ret
0x00000200003f72cf : add ebx, eax ; bts dword ptr [rdx], 0x18 ; ret
0x00000200000e1ea8 : add ebx, eax ; cmp ecx, 0x14 ; ja 0x200000e1ebb ; xor al, al ; ret
0x0000020000402b2e : add ebx, eax ; dec ecx ; jne 0x20000402b41 ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003f9aee : add ebx, eax ; jmp 0x200003f9a30
0x000002000059fb0c : add ebx, eax ; jmp 0x200004dd038
0x00000200001315f0 : add ebx, eax ; jmp rax
0x000002000070cd2c : add ebx, eax ; jmp rcx
0x00000200002108fa : add ebx, eax ; mov eax, 2 ; ret
0x0000020000662342 : add ebx, eax ; mov qword ptr [rcx + 0x70], rdx ; ret
0x00000200001c4613 : add ebx, eax ; mov rax, qword ptr [rax + 0x18] ; ret
0x00000200000fea8a : add ebx, eax ; mov rax, qword ptr [rcx + 0x1c8] ; ret
0x00000200000ea267 : add ebx, eax ; movzx eax, word ptr [rip + 0x266df0] ; ret
0x00000200000eb849 : add ebx, eax ; pause ; xor al, al ; ret
0x0000020000471bdc : add ebx, eax ; push rdi ; add byte ptr [rbx - 0x3d], cl ; push rdi ; add byte ptr [rcx], cl ; ret 0x57
0x00000200000c00d5 : add ebx, eax ; ret
0x0000020000082fe7 : add ebx, eax ; test al, 1 ; je 0x20000082fe3 ; xor al, al ; ret
0x00000200003e6549 : add ebx, eax ; test r8d, r8d ; je 0x200003e6534 ; xor al, al ; ret
0x000002000003367b : add ebx, eax ; xor al, al ; ret
0x000002000008cc0a : add ebx, eax ; xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x000002000060e50e : add ebx, ebp ; add eax, dword ptr [rbx + rcx*4 - 0x30] ; mov eax, r10d ; jmp 0x2000060e526
0x00000200005b66aa : add ebx, ebp ; in eax, dx ; mov eax, 0xc000000d ; ret
0x00000200004df14b : add ebx, ebp ; ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x00000200005bca61 : add ebx, ebp ; out dx, eax ; xor al, al ; ret
0x000002000013053f : add ebx, ebp ; ret
0x0000020000033e46 : add ebx, ebp ; ret 0xb848
0x00000200000b3d0c : add ebx, ecx ; jmp 0x200000b3bf8
0x00000200001419a3 : add ebx, edi ; ret
0x000002000010c807 : add ebx, edx ; loop 0x2000010c81a ; ret 0x8941
0x000002000065a3b1 : add ebx, edx ; ret
0x00000200003fd44f : add ebx, esi ; mov rcx, rbx ; call 0x2000002c2fc
0x0000020000675700 : add ebx, esi ; movq qword ptr [rdx], mm0 ; ret
0x00000200001419a2 : add ebx, r15d ; ret
0x000002000004257f : add ecx, -0x10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200001d3d59 : add ecx, -0x10 ; mov rax, rcx ; ret
0x00000200001de450 : add ecx, 0 ; ret
0x000002000067403c : add ecx, 0x10 ; dec r10 ; jne 0x2000067402c ; ret
0x0000020000425a05 : add ecx, 0x10 ; dec rax ; jne 0x20000425a05 ; ret
0x000002000053d96a : add ecx, 0x1c ; call r10
0x000002000053d5ff : add ecx, 0x1c ; call rax
0x00000200004315b9 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200004315ca ; ret
0x000002000043291d : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x2000043292e ; ret
0x00000200000f5246 : add ecx, 0x28 ; add rdx, 0x28 ; jmp 0x200000f521a
0x0000020000158554 : add ecx, 0x40 ; sub rdx, 0x40 ; ja 0x20000158559 ; ret
0x000002000051c8ff : add ecx, 0x59a4 ; call r14
0x000002000047abae : add ecx, 0xa0 ; call 0x200000e6dec
0x00000200001420f5 : add ecx, 2 ; cmp rax, rdx ; jb 0x200001420f3 ; ret
0x00000200004a3853 : add ecx, 2 ; dec rdx ; jne 0x200004a3854 ; ret
0x00000200004f45cc : add ecx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x0000020000140bb5 : add ecx, 2 ; test r8, r8 ; jne 0x20000140bb0 ; ret
0x000002000014a910 : add ecx, 4 ; dec r10 ; jne 0x2000014a8f1 ; ret
0x0000020000418c97 : add ecx, 8 ; call 0x20000048196
0x0000020000507b90 : add ecx, 8 ; call 0x200001378d6
0x000002000009c0d0 : add ecx, 8 ; cmp edx, r8d ; jb 0x2000009c0d0 ; ret
0x00000200005b5c9a : add ecx, 8 ; cmp r9d, edx ; jb 0x200005b5c99 ; ret
0x000002000036c9e9 : add ecx, 8 ; cmp rcx, rdx ; jbe 0x2000036c9e4 ; ret
0x000002000021eae7 : add ecx, 8 ; dec r10 ; jne 0x2000021ead8 ; ret
0x00000200001000cc : add ecx, 8 ; dec rdx ; jne 0x200001000c4 ; ret
0x000002000049b090 : add ecx, dword ptr [edi] ; add dh, dh ; ret 0xf03
0x00000200001362e3 : add ecx, dword ptr [r8 + 3] ; ret 0x3b48
0x000002000020d812 : add ecx, dword ptr [r8 - 0x7d] ; ret
0x0000020000462fc8 : add ecx, dword ptr [r9 + 0x3b] ; ret 0x820f
0x00000200000880b5 : add ecx, dword ptr [rax + 0x23] ; ret
0x0000020000032bdc : add ecx, dword ptr [rax + 0x23] ; ret 0xc148
0x000002000008622a : add ecx, dword ptr [rax + 0x2b] ; call 0x20049caed81
0x000002000057da12 : add ecx, dword ptr [rax + 0x2b] ; ret 0x148
0x00000200006e85a6 : add ecx, dword ptr [rax + 0x33] ; adc eax, dword ptr [rcx - 0x7d] ; ret
0x00000200006dceef : add ecx, dword ptr [rax + 0x33] ; adc eax, dword ptr [rcx - 0x7d] ; ret 0x48f8
0x00000200006d0dcd : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d0e10 ; ret 0x8948
0x00000200006d16da : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d171d ; ret 0x8948
0x00000200006d1bac : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1bef ; ret 0x8948
0x00000200006d2020 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2063 ; ret 0x8948
0x00000200006d2db5 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2df8 ; ret 0x8948
0x00000200006d5f48 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d5f8b ; ret 0x8948
0x00000200006d60a9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d60ec ; ret 0x8948
0x00000200006d68d7 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d691a ; ret 0x8948
0x00000200006d7116 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7159 ; ret 0x8948
0x00000200006d7aaf : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7af2 ; ret 0x8948
0x00000200006d7f4c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7f8f ; ret 0x8948
0x00000200006d85f3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d8636 ; ret 0x8948
0x00000200006d8e47 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d8e8a ; ret 0x8948
0x00000200006d92f7 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d933a ; ret 0x8948
0x00000200006d99d1 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d9a14 ; ret 0x8948
0x00000200006da21f : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da262 ; ret 0x8948
0x00000200006da6c3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da706 ; ret 0x8948
0x00000200006daf05 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006daf48 ; ret 0x8948
0x00000200006db77f : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006db7c2 ; ret 0x8948
0x00000200006dbc79 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dbcbc ; ret 0x8948
0x00000200006dc1fa : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc23d ; ret 0x8948
0x00000200006dc8ad : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc8f0 ; ret 0x8948
0x00000200006dd11a : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd15d ; ret 0x8948
0x00000200006ddd57 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006ddd9a ; ret 0x8948
0x00000200006de5da : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006de61d ; ret 0x8948
0x00000200006deac5 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006deb08 ; ret 0x8948
0x00000200006defed : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df030 ; ret 0x8948
0x00000200006df46a : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df4ad ; ret 0x8948
0x00000200006df93b : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df97e ; ret 0x8948
0x00000200006dfe2e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dfe71 ; ret 0x8948
0x00000200006e01f8 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e023b ; ret 0x8948
0x00000200006e05ca : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e060d ; ret 0x8948
0x00000200006e09c2 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0a05 ; ret 0x8948
0x00000200006e0dc5 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0e08 ; ret 0x8948
0x00000200006e11c2 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1205 ; ret 0x8948
0x00000200006e15d6 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1619 ; ret 0x8948
0x00000200006e19d8 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1a1b ; ret 0x8948
0x00000200006e1df8 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1e3b ; ret 0x8948
0x00000200006e2206 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2249 ; ret 0x8948
0x00000200006e25d7 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e261a ; ret 0x8948
0x00000200006e29d9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2a1c ; ret 0x8948
0x00000200006e2e72 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2eb5 ; ret 0x8948
0x00000200006e335c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e339f ; ret 0x8948
0x00000200006e3ec6 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3f09 ; ret 0x8948
0x00000200006e4892 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e48d5 ; ret 0x8948
0x00000200006e4d47 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e4d8a ; ret 0x8948
0x00000200006e5321 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5364 ; ret 0x8948
0x00000200006e54f3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5536 ; ret 0x8948
0x00000200006e59b1 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e59f4 ; ret 0x8948
0x00000200006e61ca : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e620d ; ret 0x8948
0x00000200006e65f9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e663c ; ret 0x8948
0x00000200006e6aaf : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6af2 ; ret 0x8948
0x00000200006e731c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e735f ; ret 0x8948
0x00000200006e78e3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7926 ; ret 0x8948
0x00000200006e7c3c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7c7f ; ret 0x8948
0x00000200006e7f19 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7f5c ; ret 0xbd83
0x00000200006e81e0 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e8223 ; ret 0x8948
0x000002000002aaed : add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200000d3fa6 : add ecx, dword ptr [rax + 0x3b] ; ret 0x4f72
0x00000200000610c7 : add ecx, dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200001f0be1 : add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000711b9 : add ecx, dword ptr [rax + 0xb] ; ret
0x00000200002335f5 : add ecx, dword ptr [rax + 0xb] ; ret 0x8944
0x000002000006f550 : add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x000002000006f6b5 : add ecx, dword ptr [rax + 0xb] ; ret 0x8949
0x000002000045d478 : add ecx, dword ptr [rax + 0xb] ; ret 0x894a
0x00000200001b4cc0 : add ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; shr al, 1 ; ret 0xee56
0x00000200006d5a9e : add ecx, dword ptr [rax + 3] ; fimul word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200006e85d9 : add ecx, dword ptr [rax + 3] ; fisttp word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x000002000020dc65 : add ecx, dword ptr [rax + 3] ; ret
0x00000200003d59e9 : add ecx, dword ptr [rax + 3] ; ret 0x348
0x00000200001362e4 : add ecx, dword ptr [rax + 3] ; ret 0x3b48
0x000002000013ad97 : add ecx, dword ptr [rax + 3] ; ret 0x8948
0x00000200003daac3 : add ecx, dword ptr [rax + 3] ; ret 0x8b48
0x00000200003da8e4 : add ecx, dword ptr [rax + 3] ; ret 0xe083
0x000002000018e121 : add ecx, dword ptr [rax - 0x3f] ; call 0x1ffc23c293c
0x000002000051e54d : add ecx, dword ptr [rax - 0x73] ; push rsp ; and al, 0x20 ; call 0x2000014e0e9
0x00000200006d268a : add ecx, dword ptr [rax - 0x75] ; add al, byte ptr [rbx - 0x7cb7073f] ; ret 0x4808
0x00000200006ce604 : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200006ee52f : add ecx, dword ptr [rax - 0x75] ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000200002132b8 : add ecx, dword ptr [rax - 0x75] ; je 0x200002132e9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000021330e : add ecx, dword ptr [rax - 0x75] ; je 0x2000021333f ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004fd1a5 : add ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000054318 : add ecx, dword ptr [rax - 0x75] ; ret
0x000002000048705b : add ecx, dword ptr [rax - 0x75] ; ret 0xa348
0x00000200000305ac : add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005ae44c : add ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbp ; call rax
0x000002000016fa3b : add ecx, dword ptr [rax - 0x75] ; sbb al, bpl ; ret
0x0000020000404ebb : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000049a0f7 : add ecx, dword ptr [rax - 0x77] ; or r11b, bpl ; ret
0x00000200004e59c1 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000002000020e521 : add ecx, dword ptr [rax - 0x7cb700b9] ; ret
0x0000020000047e63 : add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000041f9b2 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4802
0x00000200006cf052 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000012f496 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4930
0x0000020000516422 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x000002000020d6f4 : add ecx, dword ptr [rax - 0x7d] ; ret 0xeb03
0x00000200005d005f : add ecx, dword ptr [rax - 1] ; and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001cbddf : add ecx, dword ptr [rax - 1] ; loope 0x200001cbda5 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000669de7 : add ecx, dword ptr [rax - 1] ; loopne 0x20000669e3a ; jmp rax
0x000002000005202f : add ecx, dword ptr [rax - 1] ; ret
0x00000200001594ab : add ecx, dword ptr [rax - 1] ; ret 0x334d
0x00000200000961e8 : add ecx, dword ptr [rax - 1] ; ret 0x348
0x000002000017e664 : add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x00000200000ec9c5 : add ecx, dword ptr [rax - 1] ; ret 0x6b48
0x00000200000b2d3b : add ecx, dword ptr [rax - 1] ; ret 0x8348
0x00000200005648c3 : add ecx, dword ptr [rax - 1] ; ret 0x8c88
0x00000200003e7339 : add ecx, dword ptr [rax - 1] ; ret 0x8d41
0x000002000007f13f : add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200000619f6 : add ecx, dword ptr [rax - 9] ; ret
0x000002000006f2e1 : add ecx, dword ptr [rax - 9] ; ret 0xfff
0x00000200000b0f8f : add ecx, dword ptr [rax - 9] ; ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200001d1371 : add ecx, dword ptr [rax - 9] ; ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x000002000003a433 : add ecx, dword ptr [rbp + 0x23] ; ret
0x000002000051b410 : add ecx, dword ptr [rbp + 0x33] ; ret
0x00000200000a5e7b : add ecx, dword ptr [rbp + 0xb] ; ret
0x00000200006cc57b : add ecx, dword ptr [rbp + 3] ; fimul word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200006c810c : add ecx, dword ptr [rbp + 3] ; fisttp qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200006cddef : add ecx, dword ptr [rbp + 3] ; fisttp word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xcbff
0x00000200006cd9b2 : add ecx, dword ptr [rbp + 3] ; fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xcbff
0x00000200006d8add : add ecx, dword ptr [rbp + 3] ; ret
0x00000200006d77c0 : add ecx, dword ptr [rbp + 3] ; ret 0x349
0x00000200001dc56e : add ecx, dword ptr [rbp + 3] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200004d4926 : add ecx, dword ptr [rbp - 0x1d3e3fec] ; add al, 0x83 ; ret 0xe830
0x00000200004f111c : add ecx, dword ptr [rbp - 0x3d74fbbe] ; ret
0x00000200001f5e6e : add ecx, dword ptr [rbp - 0x75] ; ret
0x00000200005fd5b2 : add ecx, dword ptr [rbp - 0x75] ; ret 0x2b4d
0x00000200003d59aa : add ecx, dword ptr [rbx + 0x2c8d4417] ; ret 0xb848
0x00000200006f9ba9 : add ecx, dword ptr [rbx + 0x438b48c8] ; sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x000002000018a71e : add ecx, dword ptr [rbx + rbp - 0x10] ; jmp 0x200000a69dd
0x000002000037ec08 : add ecx, dword ptr [rbx - 0x7cb63c3f] ; ret 0x4d48
0x00000200003d04f9 : add ecx, dword ptr [rbx] ; ret
0x00000200001f6d48 : add ecx, dword ptr [rbx] ; ret 0x8d48
0x00000200001841a7 : add ecx, dword ptr [rcx + 0x23] ; ret
0x00000200001f52b5 : add ecx, dword ptr [rcx + 0x23] ; ret 0xc148
0x00000200006d964c : add ecx, dword ptr [rcx + 0x33] ; adc al, byte ptr [rcx + 3] ; fisttp dword ptr [rcx - 0x7d] ; ret 0x4808
0x00000200006cba41 : add ecx, dword ptr [rcx + 0x33] ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000200006c51e2 : add ecx, dword ptr [rcx + 0x33] ; adc byte ptr [rcx - 0x7d], al ; ret 0x49f8
0x00000200006c960b : add ecx, dword ptr [rcx + 0x33] ; adc dword ptr [rcx - 0x7d], eax ; ret
0x00000200006c7c1c : add ecx, dword ptr [rcx + 0x33] ; adc dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x00000200006cd98c : add ecx, dword ptr [rcx + 0x33] ; adc eax, dword ptr [rbx - 0x7cb6073d] ; ret
0x00000200006c6488 : add ecx, dword ptr [rcx + 0x33] ; adc eax, dword ptr [rcx - 0x7d] ; ret 0x49f8
0x0000020000462fc9 : add ecx, dword ptr [rcx + 0x3b] ; ret 0x820f
0x000002000010a6db : add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200001b746a : add ecx, dword ptr [rcx + 0x3b] ; ret 0xb673
0x00000200003ed5a8 : add ecx, dword ptr [rcx + 0x6b] ; enter 0x4925, -0x7d ; ret
0x00000200000f7f1f : add ecx, dword ptr [rcx + 0xb] ; ret 0x8949
0x0000020000095e57 : add ecx, dword ptr [rcx + 0xb] ; ror byte ptr [rax - 0x77], 0x41 ; adc bl, ch ; ret 0x894c
0x0000020000134106 : add ecx, dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200006d78bd : add ecx, dword ptr [rcx + 3] ; fimul dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200006d8c46 : add ecx, dword ptr [rcx + 3] ; fisttp qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x000002000057779c : add ecx, dword ptr [rcx + 3] ; ret 0x8541
0x00000200005777e7 : add ecx, dword ptr [rcx + 3] ; ret 0xcd85
0x0000020000577795 : add ecx, dword ptr [rcx + 3] ; ret 0xd585
0x00000200003ac3da : add ecx, dword ptr [rcx + rcx*4 + 0xa] ; mov al, 1 ; ret
0x00000200005fa5be : add ecx, dword ptr [rcx - 0x17c7dbbc] ; call 0x1ffd25f5221
0x00000200000cb49b : add ecx, dword ptr [rcx - 0x74a7dbac] ; ret 0x348
0x00000200001a5164 : add ecx, dword ptr [rcx - 0x75] ; fisttp dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200000a2c3b : add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000022b2d5 : add ecx, dword ptr [rcx - 0x75] ; ret 0x8348
0x000002000064d7c4 : add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200000f7f77 : add ecx, dword ptr [rcx - 0x75] ; ret 0xb49
0x00000200001298d2 : add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000045b500 : add ecx, dword ptr [rcx - 0x75] ; ret 0xf748
0x0000020000167aff : add ecx, dword ptr [rcx - 0x75] ; sbb al, r13b ; jmp rbx
0x00000200004abbcb : add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x000002000020812f : add ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000012e204 : add ecx, dword ptr [rcx - 1] ; loopne 0x2000012e1ca ; add al, byte ptr [rax] ; add al, al ; ret
0x0000020000145674 : add ecx, dword ptr [rcx - 1] ; ret
0x000002000010647e : add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000049b091 : add ecx, dword ptr [rdi] ; add dh, dh ; ret 0xf03
0x00000200006ed9f1 : add ecx, dword ptr [rdi] ; mov bh, 0x41 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000564296 : add ecx, dword ptr [rdi] ; mov bh, 0x4b ; add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x000002000051b951 : add ecx, dword ptr [rdi] ; test bh, ah ; test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000177cda : add ecx, dword ptr [rdi] ; test byte ptr [rcx + 0x28], ch ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x00000200003faf5c : add ecx, dword ptr [rdi] ; test byte ptr [rsi], ah ; ret
0x00000200001284b1 : add ecx, dword ptr [rdi] ; test byte ptr [rsi], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003e4631 : add ecx, dword ptr [rdi] ; test dword ptr [rdx], esp ; fcom qword ptr [rsi] ; add dh, dh ; ret 0xf38
0x00000200001dca8f : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x40e8
0x00000200000ffc72 : add ecx, dword ptr [rdi] ; xchg eax, edx ; ret 0x5488
0x0000020000471dc9 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x00000200003ad354 : add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x000002000020ecd5 : add ecx, dword ptr [rdx - 0x7cb700b9] ; ret
0x000002000020ece8 : add ecx, dword ptr [rdx - 0x7cb7feb9] ; ret
0x00000200001056a3 : add ecx, dword ptr [rdx] ; add dh, dh ; ret
0x000002000001219d : add ecx, eax ; add eax, 0xc00a0026 ; add eax, dword ptr [rcx] ; ret 0x2a05
0x000002000051ad5c : add ecx, eax ; call 0x2000013da4d
0x00000200004a8db7 : add ecx, eax ; cmp r8d, r9d ; jb 0x200004a8da6 ; mov eax, edx ; ret
0x00000200004a8db7 : add ecx, eax ; cmp r8d, r9d ; jb 0x200004a8da7 ; mov eax, edx ; ret
0x00000200001a5c71 : add ecx, eax ; jmp rcx
0x000002000011b0b3 : add ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000200001a21cb : add ecx, eax ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000066e1b9 : add ecx, eax ; sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x0000020000402d68 : add ecx, ebp ; add ah, dl ; ret 0xccff
0x0000020000194f3f : add ecx, ebp ; dec dword ptr ds:[rax - 0x75] ; ret
0x0000020000680d50 : add ecx, ebp ; jmp qword ptr [rcx]
0x00000200006c94a7 : add ecx, ebp ; ret
0x0000020000410648 : add ecx, ebp ; ret 0xfffd
0x00000200003b05b0 : add ecx, ebp ; ret 0xfffe
0x0000020000410231 : add ecx, ebp ; sub dword ptr [rdx], ecx ; ret 0xccff
0x00000200001972d3 : add ecx, ebp ; xchg eax, r10d ; push rsi ; ret 0xf03
0x000002000053d3c5 : add ecx, ebx ; call 0x2000015d885
0x0000020000646a20 : add ecx, ebx ; call 0x2000015d889
0x000002000065a48b : add ecx, ebx ; ret
0x0000020000048c23 : add ecx, ecx ; jmp 0x20000048bf4
0x00000200004234c8 : add ecx, ecx ; jmp r9
0x0000020000651620 : add ecx, ecx ; jmp rcx
0x00000200006687ec : add ecx, ecx ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x00000200002373bf : add ecx, ecx ; mov word ptr [r10], cx ; ret
0x000002000038ff1c : add ecx, ecx ; movzx eax, cx ; ret
0x0000020000714af5 : add ecx, ecx ; ret
0x00000200003a15f4 : add ecx, edi ; call 0x2000015d884
0x00000200000f7daf : add ecx, edi ; jmp rcx
0x00000200001419af : add ecx, edi ; ret
0x00000200003eddb7 : add ecx, edx ; and r9, rcx ; jmp 0x200003edd86
0x000002000010fdc7 : add ecx, edx ; bt dword ptr [rax], ecx ; jb 0x2000010fdda ; xor eax, eax ; ret
0x00000200000658b7 : add ecx, edx ; jmp rcx
0x000002000052057c : add ecx, edx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x000002000036f6b8 : add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x00000200001419ae : add ecx, r15d ; ret
0x00000200001a21ca : add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000038ff1b : add ecx, r9d ; movzx eax, cx ; ret
0x0000020000461a92 : add edi, dword ptr [r11] ; ret
0x0000020000022f3d : add edi, dword ptr [r14 + 0x21] ; je 0x20000022eef ; pop rdx ; ret 0x594d
0x00000200000e8659 : add edi, dword ptr [rbx + rax] ; jne 0x200000e867a ; mov rcx, r14 ; call r15
0x00000200003731c6 : add edi, dword ptr [rbx] ; ret
0x0000020000126930 : add edi, dword ptr [rbx] ; ret 0x470f
0x0000020000149f24 : add edi, dword ptr [rbx] ; ret 0x472
0x0000020000708b08 : add edi, dword ptr [rbx] ; ret 0x840f
0x00000200000211b1 : add edi, dword ptr [rcx - 0x5c] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x000002000051b429 : add edi, dword ptr [rdx] ; ret 0x1275
0x0000020000652cc7 : add edi, dword ptr [rdx] ; ret 0x1b75
0x0000020000137ea0 : add edi, dword ptr [rip + 0x74c08400] ; add bh, bh ; ret
0x0000020000022f3e : add edi, dword ptr [rsi + 0x21] ; je 0x20000022eee ; pop rdx ; ret 0x594d
0x0000020000216a6b : add edi, eax ; xor esi, esi ; call 0x20000212cc2
0x000002000061ebab : add edi, ebx ; inc dword ptr [rax + rax*8 - 0x7cb7da8b] ; ret
0x00000200006f420e : add edi, ebx ; mov r13d, ebx ; jmp 0x200006f41e8
0x000002000045ebbd : add edi, edi ; jmp 0x2000045e9b1
0x000002000014198b : add edi, edi ; ret
0x0000020000197fd7 : add edi, edi ; ret 0x5489
0x000002000050d6a0 : add edi, edi ; ret 0x8348
0x0000020000208d29 : add edi, edi ; ret 0x8b49
0x00000200003fe9ea : add edi, edi ; ret 0xe8d1
0x0000020000430422 : add edi, esi ; jmp 0x200004303ec
0x000002000044c8eb : add edi, esi ; mov rcx, r15 ; call 0x200000702b8
0x000002000014739b : add edi, esi ; ret
0x0000020000430421 : add edi, r14d ; jmp 0x200004303ed
0x000002000014198a : add edi, r15d ; ret
0x0000020000674001 : add edx, 0x28 ; cmp qword ptr [rdx], rax ; jne 0x20000674002 ; ret
0x00000200000f524a : add edx, 0x28 ; jmp 0x200000f5216
0x00000200005f3bb2 : add edx, 2 ; mov rcx, r15 ; call 0x2000050fe68
0x0000020000079a48 : add edx, 8 ; cmp rdx, r10 ; jb 0x20000079a16 ; ret
0x00000200004cb8e6 : add edx, 8 ; mov rax, rdx ; ret
0x00000200000c28d7 : add edx, 8 ; sub r9, r14 ; je 0x200000c286a ; jmp 0x200000c28ad
0x000002000013b72d : add edx, dword ptr [rax + 0x44] ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000013b71a ; ret
0x0000020000278e44 : add edx, dword ptr [rsi] ; add byte ptr [rsi], al ; sysenter
0x00000200001e9c5f : add edx, eax ; call qword ptr [rdi + 8]
0x000002000012e3a7 : add edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x000002000001249d : add edx, eax ; or al, 3 ; add bh, ah ; rol byte ptr [rdx], 2 ; ret
0x00000200003ac182 : add edx, eax ; test r9b, 0x10 ; jne 0x200003ac196 ; mov eax, edx ; ret
0x00000200005e1660 : add edx, ebx ; call 0x2000015d884
0x000002000045b41f : add edx, ebx ; jmp rdx
0x0000020000024a0b : add edx, ebx ; jne 0x20000024a0d ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000013f996 : add edx, ecx ; dec r9 ; jne 0x2000013f948 ; mov eax, edx ; ret
0x000002000013f996 : add edx, ecx ; dec r9 ; jne 0x2000013f949 ; mov eax, edx ; ret
0x0000020000195e1e : add edx, ecx ; jmp 0x200000ccc49
0x00000200001968a8 : add edx, ecx ; jmp 0x200000ce815
0x000002000057b036 : add edx, ecx ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000005e41e : add edx, edi ; jmp rdx
0x00000200001419a9 : add edx, edi ; ret
0x00000200001f13e6 : add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x0000020000381210 : add edx, esi ; call 0x200000dd4c8
0x00000200001419a8 : add edx, r15d ; ret
0x0000020000130305 : add esi, 8 ; jmp 0x200001302d1
0x0000020000028f32 : add esi, dword ptr [r11] ; dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x0000020000472431 : add esi, dword ptr [rax + 4] ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x20000472401
0x00000200005db4f4 : add esi, dword ptr [rax + rax*2 - 9] ; ret
0x000002000009c4db : add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x00000200000eb847 : add esi, dword ptr [rax - 0x6f0c3cff] ; xor al, al ; ret
0x00000200000e865b : add esi, dword ptr [rbp + 0x13] ; mov rcx, r14 ; call r15
0x000002000003cc1a : add esi, dword ptr [rbp + 0x6c] ; mov rcx, rsi ; call rdi
0x000002000042823e : add esi, dword ptr [rbp + 6] ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x00000200004dd38e : add esi, dword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x000002000063f7c9 : add esi, dword ptr [rbp + rax - 0x18] ; pop rbx ; ret
0x00000200004af462 : add esi, dword ptr [rbp + rax - 0x18] ; ret 0x18c6
0x000002000061d062 : add esi, dword ptr [rbp + rax - 0x18] ; ret 0x1ea
0x000002000048a023 : add esi, dword ptr [rbp + rcx*2 - 0x75] ; sbb byte ptr [r11], spl ; ret 0xc084
0x000002000067b27f : add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x00000200000d66df : add esi, dword ptr [rbp - 0xb] ; jmp 0x200000d66cc
0x0000020000028f33 : add esi, dword ptr [rbx] ; dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x00000200004c84a6 : add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200004509af : add esi, dword ptr [rbx] ; ret
0x0000020000449452 : add esi, dword ptr [rbx] ; ret 0xe083
0x00000200000ff7e6 : add esi, dword ptr [rbx] ; rol bl, 0x41 ; mov eax, ecx ; ret
0x00000200004ea35d : add esi, dword ptr [rbx] ; rol bl, 0x48 ; mov eax, ecx ; ret
0x00000200000d453c : add esi, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000048bbcd : add esi, dword ptr [rdi + 0x13] ; test edx, edx ; jne 0x2000048bbe5 ; xor eax, eax ; ret
0x00000200000e1e4a : add esi, dword ptr [rdi + 0x24] ; mov eax, 1 ; ret
0x000002000000fe84 : add esi, dword ptr [rdi - 0x58ea1719] ; ret
0x00000200005db559 : add esi, dword ptr [rdx + rbx*2 - 9] ; ret
0x00000200002281e7 : add esi, dword ptr [rdx + rcx - 0x7d] ; rol dword ptr [rdx], -1 ; ret 0xf983
0x00000200001babe3 : add esi, dword ptr [rdx + rsi - 0x7d] ; call qword ptr [rbx]
0x000002000044ce3d : add esi, dword ptr [rdx - 0x10] ; xor eax, eax ; ret
0x00000200000296d3 : add esi, dword ptr [rdx] ; add r8b, byte ptr [rcx + 0x22] ; ret
0x000002000016a69a : add esi, dword ptr [rdx] ; ret 0x3824
0x00000200001301e8 : add esi, dword ptr [rdx] ; rol bl, 0x48 ; jmp rcx
0x0000020000375188 : add esi, dword ptr [rsi - 0x74b30001] ; ret
0x00000200005c4090 : add esi, dword ptr [rsp - 0xa] ; ret 0x7402
0x000002000003cc19 : add esi, dword ptr ds:[rbp + 0x6c] ; mov rcx, rsi ; call rdi
0x000002000045bab0 : add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004f7092 : add esi, eax ; call 0x20000120f39
0x0000020000141991 : add esi, edi ; ret
0x00000200003d5b06 : add esi, edi ; ret 0xfff
0x000002000000a399 : add esi, edx ; call qword ptr [rcx]
0x000002000036982d : add esi, esi ; dec dword ptr [rdi] ; test byte ptr [rsi - 0x70], al ; add byte ptr [rax], al ; ret
0x000002000002abef : add esi, esi ; ret
0x0000020000027bc8 : add esi, esi ; ret 0x7502
0x000002000013356d : add esi, esi ; ret 0xf02
0x000002000009e864 : add esi, esi ; ret 0xf04
0x00000200000cb0cc : add esi, esi ; ret 0xf0f
0x00000200003d2bde : add esi, esi ; ret 0xf10
0x0000020000141316 : add esi, esp ; mov rdx, rsi ; call r14
0x0000020000141990 : add esi, r15d ; ret
0x000002000007028e : add esp, 0x10 ; pop rbx ; ret
0x00000200000fe4c7 : add esp, 0x10 ; pop rdi ; ret
0x0000020000111751 : add esp, 0x100 ; pop rbp ; ret
0x0000020000202e17 : add esp, 0x100 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000100915 : add esp, 0x100 ; pop rdi ; ret
0x0000020000055bb0 : add esp, 0x108 ; pop rbp ; pop rbx ; ret
0x00000200001224af : add esp, 0x108 ; ret
0x000002000062cc9f : add esp, 0x110 ; pop rbp ; ret
0x0000020000100ea9 : add esp, 0x110 ; pop rbx ; ret
0x00000200003e3de2 : add esp, 0x110 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051cc07 : add esp, 0x110 ; pop rdi ; ret
0x0000020000057da2 : add esp, 0x118 ; pop rbp ; pop rbx ; ret
0x0000020000519d1b : add esp, 0x130 ; pop rbp ; ret
0x0000020000206573 : add esp, 0x130 ; pop rbx ; ret
0x00000200004a090a : add esp, 0x130 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000007f69d : add esp, 0x138 ; pop rdi ; pop rbp ; ret
0x0000020000151947 : add esp, 0x138 ; ret
0x0000020000154b70 : add esp, 0x138 ; sti ; ret
0x00000200004cbcd7 : add esp, 0x140 ; pop rbx ; ret
0x000002000072e398 : add esp, 0x140 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000065b55d : add esp, 0x140 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000045cce4 : add esp, 0x140 ; pop rdi ; ret
0x00000200005cc5a9 : add esp, 0x148 ; ret
0x0000020000202643 : add esp, 0x150 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000bfd70 : add esp, 0x160 ; pop rbp ; ret
0x00000200004ec408 : add esp, 0x170 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b3b57 : add esp, 0x18 ; ret
0x0000020000373b5f : add esp, 0x190 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002091c6 : add esp, 0x190 ; pop rdi ; ret
0x000002000015d877 : add esp, 0x1a8 ; ret
0x000002000022550b : add esp, 0x1c0 ; pop rbp ; ret
0x00000200006ff67c : add esp, 0x1e0 ; pop rbp ; ret
0x0000020000700ce9 : add esp, 0x20 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001bdbaa : add esp, 0x20 ; pop r12 ; ret
0x0000020000420bbb : add esp, 0x20 ; pop r13 ; ret
0x000002000043b419 : add esp, 0x20 ; pop r14 ; jmp 0x20000068fd8
0x000002000044cc0a : add esp, 0x20 ; pop r14 ; jmp 0x200000712d4
0x0000020000515e2f : add esp, 0x20 ; pop r14 ; jmp 0x2000013bc74
0x000002000066f5f4 : add esp, 0x20 ; pop r14 ; jmp rax
0x0000020000035a09 : add esp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200001be60e : add esp, 0x20 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000b9aaf : add esp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ed186 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000218272 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000068d4b : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000024a75 : add esp, 0x20 ; pop r14 ; ret
0x000002000038aa5f : add esp, 0x20 ; pop r15 ; jmp 0x20000026d23
0x00000200004421be : add esp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200005163b7 : add esp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x000002000002677c : add esp, 0x20 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000aed82 : add esp, 0x20 ; pop r15 ; pop r14 ; pop r13 ; ret
0x0000020000091475 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000002632a : add esp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200001415e4 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200006fe3bd : add esp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000042477f : add esp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cede3 : add esp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000a3520 : add esp, 0x20 ; pop r15 ; ret
0x0000020000157b56 : add esp, 0x20 ; pop rbp ; ret
0x000002000048cdba : add esp, 0x20 ; pop rbx ; jmp 0x20000068fd6
0x00000200000dcd82 : add esp, 0x20 ; pop rbx ; jmp rax
0x0000020000024bc0 : add esp, 0x20 ; pop rbx ; ret
0x0000020000205233 : add esp, 0x20 ; pop rcx ; ret
0x000002000044660c : add esp, 0x20 ; pop rdi ; jmp 0x2000006a617
0x0000020000209285 : add esp, 0x20 ; pop rdi ; jmp rax
0x000002000016242f : add esp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000bf508 : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000137672 : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000013963a : add esp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000249bf : add esp, 0x20 ; pop rdi ; ret
0x000002000004b2d5 : add esp, 0x20 ; pop rsi ; ret
0x000002000022c775 : add esp, 0x200 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004e40ff : add esp, 0x210 ; pop rdi ; ret
0x000002000062426e : add esp, 0x240 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000366c5f : add esp, 0x240 ; pop rdi ; ret
0x0000020000627a87 : add esp, 0x250 ; pop rbp ; ret
0x00000200003b24bb : add esp, 0x250 ; pop rbx ; ret
0x00000200005bbc0a : add esp, 0x260 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005060ae : add esp, 0x260 ; pop rdi ; ret
0x000002000051e130 : add esp, 0x28 ; jmp 0x2000013f14e
0x000002000064dc6a : add esp, 0x28 ; jmp qword ptr [r10]
0x000002000006e40c : add esp, 0x28 ; jmp rax
0x00000200000c52e1 : add esp, 0x28 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000039cb4c : add esp, 0x28 ; pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007655b : add esp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000e1c70 : add esp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027bf6 : add esp, 0x28 ; ret
0x00000200005da382 : add esp, 0x280 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000717190 : add esp, 0x290 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004208a0 : add esp, 0x290 ; pop rdi ; ret
0x000002000041e1e3 : add esp, 0x2e0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005d3693 : add esp, 0x30 ; pop r12 ; ret
0x00000200000b6715 : add esp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000013b526 : add esp, 0x30 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200004e04a8 : add esp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000101039 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000480a7 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000365f77 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000162299 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200002266e4 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002b2b5 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000027160 : add esp, 0x30 ; pop r14 ; ret
0x0000020000135dee : add esp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000002a43d : add esp, 0x30 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000027b58 : add esp, 0x30 ; pop r15 ; pop r14 ; pop r13 ; ret
0x000002000021572f : add esp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000002ac63 : add esp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000682ad : add esp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000097865 : add esp, 0x30 ; pop r15 ; ret
0x000002000015445d : add esp, 0x30 ; pop rbp ; ret
0x0000020000680901 : add esp, 0x30 ; pop rbx ; jmp r10
0x0000020000680909 : add esp, 0x30 ; pop rbx ; jmp r8
0x0000020000027e07 : add esp, 0x30 ; pop rbx ; ret
0x000002000009122b : add esp, 0x30 ; pop rcx ; ret
0x000002000066bd0e : add esp, 0x30 ; pop rdi ; jmp rax
0x00000200000588cc : add esp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001580b7 : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012f9da : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026db3 : add esp, 0x30 ; pop rdi ; ret
0x0000020000063a22 : add esp, 0x30 ; pop rsi ; ret
0x00000200000e3eb6 : add esp, 0x308 ; ret
0x000002000062abf4 : add esp, 0x320 ; pop rdi ; ret
0x00000200006809fa : add esp, 0x38 ; jmp r8
0x0000020000680812 : add esp, 0x38 ; jmp r9
0x0000020000680819 : add esp, 0x38 ; jmp rax
0x000002000037154e : add esp, 0x38 ; pop r13 ; pop rbp ; ret
0x00000200004f31fe : add esp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000453935 : add esp, 0x38 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000161fe3 : add esp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000614b74 : add esp, 0x38 ; pop rdi ; pop rbp ; ret
0x0000020000134dc7 : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c540e : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025a91 : add esp, 0x38 ; ret
0x000002000041c288 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000035c62 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000d446c : add esp, 0x40 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200004634d1 : add esp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200002270ac : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000020949b : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004b1c77 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008401b : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000008dd69 : add esp, 0x40 ; pop r14 ; ret
0x00000200001e8d72 : add esp, 0x40 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000c11e7 : add esp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000004a74a : add esp, 0x40 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000002552b : add esp, 0x40 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000bab08 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000002c207 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004ee417 : add esp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x00000200006fdf6b : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001bf47f : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000094390 : add esp, 0x40 ; pop r15 ; ret
0x00000200005c26c6 : add esp, 0x40 ; pop rbp ; jmp 0x2000038e9be
0x000002000013a777 : add esp, 0x40 ; pop rbp ; ret
0x0000020000059277 : add esp, 0x40 ; pop rbx ; ret
0x000002000002e4cb : add esp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000037d20f : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b95ec : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002494b : add esp, 0x40 ; pop rdi ; ret
0x00000200000f6782 : add esp, 0x40 ; pop rsi ; ret
0x000002000072c0c6 : add esp, 0x460 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009ef37 : add esp, 0x48 ; pop r12 ; pop rdi ; ret
0x000002000052dc98 : add esp, 0x48 ; pop r13 ; pop rbp ; ret
0x00000200004cc76d : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012b264 : add esp, 0x48 ; pop r15 ; pop r13 ; ret
0x0000020000162088 : add esp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000013fcec : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200001623b9 : add esp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000336d8 : add esp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001290d5 : add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f5e88 : add esp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000002abb4 : add esp, 0x48 ; ret
0x00000200004f548d : add esp, 0x4b8 ; ret
0x000002000014043d : add esp, 0x4d8 ; ret
0x000002000015cb45 : add esp, 0x50 ; call r10
0x0000020000121a04 : add esp, 0x50 ; pop r12 ; ret
0x000002000009ec34 : add esp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000a4f90 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003940d2 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000041ca41 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000049fd80 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000051bd2 : add esp, 0x50 ; pop r14 ; ret
0x00000200004f04b6 : add esp, 0x50 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200003c944e : add esp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000edc99 : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007b215 : add esp, 0x50 ; pop r15 ; pop rsi ; pop rbx ; ret
0x00000200001d4b13 : add esp, 0x50 ; pop r15 ; ret
0x0000020000038de0 : add esp, 0x50 ; pop rbp ; ret
0x0000020000033472 : add esp, 0x50 ; pop rbx ; ret
0x0000020000080962 : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000020086f : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021e5fc : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003cc7a : add esp, 0x50 ; pop rdi ; ret
0x00000200001cd4eb : add esp, 0x50 ; pop rsi ; ret
0x000002000020a8e3 : add esp, 0x518 ; ret
0x00000200001620f0 : add esp, 0x58 ; pop rbp ; pop rbx ; ret
0x000002000022d7fb : add esp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000003399f : add esp, 0x58 ; ret
0x00000200003d3a92 : add esp, 0x60 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000013f912 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000072f3a9 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000010849d : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000060112b : add esp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000489bd8 : add esp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004c65ff : add esp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000091790 : add esp, 0x60 ; pop rbp ; ret
0x0000020000063006 : add esp, 0x60 ; pop rbx ; ret
0x00000200001405bb : add esp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b6999 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000094843 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000082244 : add esp, 0x60 ; pop rdi ; ret
0x00000200000329cb : add esp, 0x68 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000140a08 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000200000649dd : add esp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200000a124a : add esp, 0x68 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005c1acd : add esp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002c3ef : add esp, 0x68 ; ret
0x00000200004ed87f : add esp, 0x70 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001fd649 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009db2f : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000671470 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000fc59e : add esp, 0x70 ; pop rbp ; ret
0x0000020000122a64 : add esp, 0x70 ; pop rbx ; ret
0x0000020000513d49 : add esp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200002032e8 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d5d6e : add esp, 0x70 ; pop rdi ; ret
0x000002000072a699 : add esp, 0x70 ; pop rsi ; ret
0x0000020000487e50 : add esp, 0x78 ; pop rdi ; pop rbx ; ret
0x000002000009b847 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002eadf : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000010d57f : add esp, 0x78 ; ret
0x000002000012a6e3 : add esp, 0x80 ; pop rbp ; ret
0x0000020000041cd1 : add esp, 0x80 ; pop rbx ; ret
0x000002000046ee2f : add esp, 0x80 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013e7b8 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000081084 : add esp, 0x80 ; pop rdi ; ret
0x0000020000627575 : add esp, 0x840 ; pop rbp ; ret
0x0000020000045722 : add esp, 0x88 ; pop rbp ; pop rbx ; ret
0x00000200001e0f6f : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000002000002c2ed : add esp, 0x88 ; ret
0x000002000012a503 : add esp, 0x90 ; pop rbp ; ret
0x000002000022c5b7 : add esp, 0x90 ; pop rbx ; ret
0x00000200001e114f : add esp, 0x90 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000099f13 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000672fbb : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012e4f8 : add esp, 0x90 ; pop rdi ; ret
0x00000200000926f6 : add esp, 0x90 ; pop rsi ; ret
0x00000200001e0eaa : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000002000007e37b : add esp, 0x98 ; pop rdi ; pop rbp ; ret
0x0000020000109162 : add esp, 0x98 ; ret
0x00000200001bce3b : add esp, 0xa0 ; pop rbp ; ret
0x000002000066cc2a : add esp, 0xa0 ; pop rbx ; ret
0x00000200005dd9cc : add esp, 0xa0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000022e5fc : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051c9d6 : add esp, 0xa0 ; pop rdi ; ret
0x00000200001e1885 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000020000628387 : add esp, 0xa8 ; pop rdi ; pop rbx ; ret
0x00000200004af542 : add esp, 0xa8 ; ret
0x000002000010b9e0 : add esp, 0xb0 ; pop rbp ; ret
0x0000020000230556 : add esp, 0xb0 ; pop rbx ; ret
0x00000200004482ec : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000672f39 : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000404edb : add esp, 0xb0 ; pop rdi ; ret
0x00000200001e0dce : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000200006282b8 : add esp, 0xb8 ; pop rdi ; pop rbx ; ret
0x000002000012f52e : add esp, 0xb8 ; ret
0x0000020000203650 : add esp, 0xc0 ; pop rbp ; ret
0x00000200004b599e : add esp, 0xc0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000eb81d : add esp, 0xc0 ; pop rdi ; ret
0x00000200003bcd44 : add esp, 0xc0 ; pop rsi ; ret
0x00000200005007d5 : add esp, 0xc8 ; ret
0x00000200001cb6e3 : add esp, 0xce0 ; pop rbx ; ret
0x00000200001cb753 : add esp, 0xce8 ; ret
0x00000200000e503c : add esp, 0xd0 ; pop rbp ; ret
0x00000200001512b4 : add esp, 0xd0 ; pop rbx ; ret
0x0000020000400cd5 : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005df4ba : add esp, 0xd0 ; pop rdi ; ret
0x000002000036d492 : add esp, 0xe0 ; pop rbp ; ret
0x00000200001009e9 : add esp, 0xe0 ; pop rbx ; ret
0x0000020000225ad8 : add esp, 0xe0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000008dc28 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001281c0 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000100d41 : add esp, 0xe8 ; ret
0x000002000051d50e : add esp, 0xf0 ; pop rbp ; ret
0x00000200003e9ecd : add esp, 0xf0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003ec660 : add esp, 0xf0 ; pop rdi ; ret
0x00000200000eaab3 : add esp, 0xf8 ; pop r14 ; pop rdi ; ret
0x0000020000122da0 : add esp, 0xf8 ; ret
0x00000200006cf080 : add esp, 8 ; jmp r8
0x00000200001521b9 : add esp, 8 ; ret
0x00000200005192f1 : add esp, dword ptr [rax - 0x74b7fff7] ; ret
0x0000020000290529 : add esp, dword ptr [rbx] ; add byte ptr [rdi - 0x45ffdd03], cl ; jmp qword ptr [rdx]
0x00000200003a51d1 : add esp, dword ptr [rbx] ; rol dword ptr [rcx + 1], 0 ; xor eax, eax ; ret
0x00000200004ad6c2 : add esp, dword ptr [rcx + rax] ; ret
0x000002000001ef78 : add esp, dword ptr [rcx] ; ret
0x00000200005825f9 : add esp, dword ptr [rsi + 0x3b] ; ret 0x4c74
0x0000020000609d47 : add esp, dword ptr [rsi - 0x2f] ; jmp 0x20049232899
0x0000020000609e33 : add esp, dword ptr [rsi - 0x2f] ; jmp 0x20049232985
0x000002000058547f : add esp, dword ptr [rsi - 0x77] ; cmp byte ptr [r8 - 0x75], r9b ; ret 0x2548
0x00000200006642bc : add esp, dword ptr [rsi - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x000002000038e152 : add esp, dword ptr [rsi - 0x7b] ; sal byte ptr [rdi + rbx*2 + 0x48], 0x83 ; ret
0x000002000014199d : add esp, edi ; ret
0x000002000014199c : add esp, r15d ; ret
0x000002000049f33a : add qword ptr [r10 + 0x18], r8 ; ret
0x0000020000600ed9 : add qword ptr [r10], 0x18 ; ret
0x0000020000600f80 : add qword ptr [r10], 0x28 ; ret
0x00000200000602a6 : add qword ptr [r11 - 0x831dc3a], rcx ; shl byte ptr [rbx], 1 ; ret
0x00000200005e9ec6 : add qword ptr [r11], r15 ; ret 0xe75
0x0000020000372c87 : add qword ptr [r13 + 0x2b], rcx ; ret
0x0000020000033914 : add qword ptr [r13 + 0xb], rsi ; ret
0x00000200006c6f83 : add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x0000020000070a46 : add qword ptr [r8 - 0x75], rcx ; ret
0x00000200005008bd : add qword ptr [r8 - 0x7d], r9 ; ret 0x8d08
0x000002000020a036 : add qword ptr [r8], 2 ; ret
0x00000200004a143f : add qword ptr [r8], r8 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000209ccb : add qword ptr [r8], r8 ; add byte ptr [rax - 1], cl ; ret
0x0000020000294ac7 : add qword ptr [r8], r8 ; add byte ptr [rcx - 0x75], al ; ret 0x8b45
0x0000020000150435 : add qword ptr [r8], r8 ; add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000081f51 : add qword ptr [r8], r8 ; add dh, dh ; ret
0x0000020000150375 : add qword ptr [r8], rax ; add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x00000200001503b5 : add qword ptr [r8], rax ; add cl, ch ; ret 0xc1
0x00000200000827a3 : add qword ptr [r9 - 0x75], rax ; ret
0x000002000020d80f : add qword ptr [r9 - 0x7cb7fcbd], rcx ; ret
0x000002000051641d : add qword ptr [rax + r9*4 + 0x42], rax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200001f2607 : add qword ptr [rax - 0x3f], rcx ; call 0x1ffc2426f24
0x000002000063d76f : add qword ptr [rax - 0x75], r9 ; add eax, 0xffc63ff0 ; call rax
0x00000200001e1a5f : add qword ptr [rax - 0x7d], r9 ; ret
0x000002000066498c : add qword ptr [rax], r8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000097024 : add qword ptr [rax], r8 ; jmp 0x20000096fb2
0x000002000043b103 : add qword ptr [rax], rax ; add al, ch ; add al, 0xf5 ; ret 0x48ff
0x000002000043b160 : add qword ptr [rax], rax ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; ret 0x48ff
0x00000200000cba0b : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000649f5a : add qword ptr [rax], rax ; add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200006c54db : add qword ptr [rax], rax ; add byte ptr [rbx], dh ; leave ; call r9
0x000002000012b4da : add qword ptr [rax], rax ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000150355 : add qword ptr [rax], rax ; add cl, ch ; and al, dl ; add byte ptr [rax], al ; ret
0x0000020000150395 : add qword ptr [rax], rax ; add cl, ch ; loop 0x20000150366 ; add byte ptr [rax], al ; ret
0x0000020000439e09 : add qword ptr [rbx + r9*4 - 0x3e], rax ; call 0x20000065ec8
0x000002000070f36a : add qword ptr [rcx + 0x18], rax ; add rsp, 0x28 ; ret
0x000002000070f23e : add qword ptr [rcx + 0x18], rax ; add rsp, 0x38 ; ret
0x00000200005caadd : add qword ptr [rcx + rcx*4 + 0x3d], rcx ; ret 0xd0af
0x0000020000206359 : add qword ptr [rcx - 0x75], rax ; ret
0x00000200003aba60 : add qword ptr [rcx - 0x76], r8 ; ret 0xe180
0x000002000020ad27 : add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x00000200000aa165 : add qword ptr [rdi], r9 ; xchg eax, ebp ; ret 0x894c
0x000002000070f6cd : add qword ptr [rdx + 0x18], rax ; add rsp, 0x28 ; ret
0x0000020000212ce8 : add qword ptr [rdx + 8], -0x18 ; ret
0x000002000015dff4 : add qword ptr [rdx], r8 ; ret
0x000002000020ee58 : add qword ptr [rdx], rcx ; ret
0x000002000045a132 : add qword ptr [rsi - 0x77], r12 ; push rdi ; add ch, al ; ret
0x000002000008e747 : add r11, 8 ; dec r10 ; jne 0x2000008e746 ; ret
0x00000200005e9ec0 : add r12b, byte ptr [r11] ; ret 0x8d45
0x000002000002c5fd : add r12b, byte ptr [r14 - 0x7b] ; ret 0x840f
0x000002000070792a : add r13b, byte ptr [r10] ; ret
0x000002000070780c : add r13d, ebx ; call 0x200003f3a5d
0x000002000002abee : add r14, r14 ; ret
0x000002000027285a : add r14b, r14b ; ret 0x4d
0x000002000044c8ea : add r15, r14 ; mov rcx, r15 ; call 0x200000702b9
0x000002000002dee5 : add r15b, dil ; ret 0x348
0x00000200000937eb : add r8, -3 ; add r8, r9 ; jmp 0x200000937bf
0x000002000020c8f7 : add r8, 0x10 ; jmp 0x2000020c921
0x000002000020d0b3 : add r8, 0x10 ; jmp 0x2000020d0dd
0x000002000020c8ed : add r8, 0x14 ; jmp 0x2000020c921
0x000002000020d0a9 : add r8, 0x14 ; jmp 0x2000020d0dd
0x000002000020c8e3 : add r8, 0x18 ; jmp 0x2000020c921
0x000002000020d09f : add r8, 0x18 ; jmp 0x2000020d0dd
0x000002000020c8d9 : add r8, 0x1c ; jmp 0x2000020c921
0x000002000020d095 : add r8, 0x1c ; jmp 0x2000020d0dd
0x000002000020c901 : add r8, 0xc ; jmp 0x2000020c921
0x000002000020d0bd : add r8, 0xc ; jmp 0x2000020d0dd
0x000002000020c93e : add r8, 2 ; jmp 0x2000020c968
0x00000200000c3952 : add r8, 8 ; dec r9 ; jne 0x200000c394f ; ret
0x0000020000186e70 : add r8, 8 ; inc r10 ; jmp 0x20000186e64
0x000002000020c90b : add r8, 8 ; jmp 0x2000020c921
0x000002000020d0c7 : add r8, 8 ; jmp 0x2000020d0dd
0x000002000014029f : add r8, r15 ; call r8
0x00000200005323bc : add r8, r8 ; call 0x2000015d886
0x00000200000914f9 : add r8, r9 ; inc rdx ; jmp 0x20000091495
0x00000200000937ef : add r8, r9 ; jmp 0x200000937bb
0x000002000063bc0c : add r8, rax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000063bbed
0x000002000041c4ac : add r8, rcx ; dec r10 ; jne 0x2000041c487 ; ret
0x000002000022da2e : add r8, rcx ; jmp r8
0x00000200005d00af : add r8b, byte ptr [r13 + 0x23] ; fldenv dword ptr [rbx] ; ret
0x0000020000476a21 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f7e7d : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006bfed : add r8b, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; xchg eax, esp ; int 0x80
0x00000200000296d5 : add r8b, byte ptr [rcx + 0x22] ; ret
0x0000020000629b8a : add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x20000629b86
0x000002000027101a : add r8b, r14b ; jmp qword ptr [rsi]
0x0000020000236959 : add r8d, dword ptr [r15] ; add byte ptr [rbx], bh ; ret 0xf72
0x000002000050deff : add r8d, dword ptr [rax] ; add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x0000020000051ebf : add r8d, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x00000200000d07ec : add r8d, dword ptr [rbx - 0x74b7f020] ; ret
0x0000020000453c71 : add r8d, dword ptr [rcx + 0xb] ; ret 0x8841
0x00000200004538a9 : add r8d, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x000002000071ebae : add r8d, ebp ; ret
0x000002000020a312 : add r8d, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x000002000021eae6 : add r9, 8 ; dec r10 ; jne 0x2000021ead9 ; ret
0x00000200004234c7 : add r9, rcx ; jmp r9
0x00000200003eddb6 : add r9, rdx ; and r9, rcx ; jmp 0x200003edd87
0x000002000052057b : add r9, rdx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200001cef13 : add r9b, bpl ; ret
0x00000200003ab4d5 : add r9b, byte ptr [r8 + 0x2b] ; ret
0x00000200003a164d : add r9b, byte ptr [r8 + 3] ; ret
0x00000200002363ef : add r9b, byte ptr [r9 - 0x48f0bafe] ; ret
0x00000200004da595 : add r9b, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x000002000020dc64 : add r9d, dword ptr [r8 + 3] ; ret
0x00000200001b4cbf : add r9d, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; shr al, 1 ; ret 0xee56
0x000002000048b65c : add rax, -0x10 ; ret
0x000002000015e03d : add rax, -0x20 ; ret
0x00000200006f1e25 : add rax, -0x74b80000 ; ret 0xb948
0x00000200004c13e4 : add rax, -4 ; add rsp, 0x28 ; ret
0x000002000067d09c : add rax, -8 ; ret
0x0000020000518d41 : add rax, 0x10 ; cmp rax, rcx ; jl 0x20000518d3c ; ret
0x00000200003eed3a : add rax, 0x10 ; ret
0x000002000052018e : add rax, 0x1004 ; add rax, rdx ; ret
0x000002000051e0fc : add rax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041aa79 : add rax, 0x20 ; ret
0x000002000054adfc : add rax, 0x2b480000 ; ret
0x0000020000159fba : add rax, 0x40 ; jne 0x20000159f99 ; sfence ; ret
0x000002000015df21 : add rax, 0x40 ; ret
0x000002000037d221 : add rax, 0x600 ; ret
0x00000200007195ea : add rax, 0x8b8 ; ret
0x00000200003e3e37 : add rax, 0xd00 ; ret
0x0000020000611e1a : add rax, 2 ; add rsp, 0x28 ; ret
0x0000020000033a66 : add rax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200006da5cf : add rax, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000005f186 : add rax, qword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000109507 : add rax, qword ptr [rax] ; add byte ptr [rdi], cl ; ret 0xbb83
0x000002000056543c : add rax, qword ptr [rax] ; add cl, al ; jmp 0x20000565457
0x0000020000033a57 : add rax, qword ptr [rcx + 0x98] ; ret
0x0000020000598d89 : add rax, qword ptr [rcx + 0xb10] ; inc edx ; jmp 0x20000598d67
0x000002000066a6d2 : add rax, qword ptr [rcx] ; xor eax, eax ; ret
0x00000200005cee57 : add rax, qword ptr [rip - 0x2f94b6] ; ret
0x00000200003ac932 : add rax, r10 ; jmp 0x200003ac8bd
0x00000200003ac8f3 : add rax, r10 ; jmp 0x200003ac8cb
0x00000200003ac912 : add rax, r10 ; jmp 0x200003ac8d8
0x00000200003ac900 : add rax, r10 ; jmp 0x200003ac941
0x0000020000470c8c : add rax, r10 ; jmp rax
0x0000020000393eb4 : add rax, r10 ; ret
0x00000200003c3fe7 : add rax, r15 ; mov qword ptr [rbp - 0x50], rax ; call 0x200000702b9
0x00000200001401ae : add rax, r15 ; mov rdx, r12 ; call rax
0x00000200000eaa3f : add rax, r8 ; jmp rax
0x00000200005c15ed : add rax, r8 ; mov qword ptr [rdx + 0x48], rax ; ret
0x00000200001ea100 : add rax, r8 ; ret
0x0000020000110b8d : add rax, r8 ; test rax, rax ; jle 0x20000110b9e ; ret
0x00000200006687f1 : add rax, r9 ; ret
0x00000200000e1f07 : add rax, rax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x0000020000192a1f : add rax, rax ; movzx eax, word ptr [r8 + rax*8 + 0xc] ; ret
0x0000020000148f28 : add rax, rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x39] ; ret
0x000002000037d0d6 : add rax, rbp ; test dword ptr [rsi], 0xc748ffd2 ; ret
0x00000200000e3df3 : add rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012d15b : add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000379ec2 : add rax, rcx ; add rsp, 0x38 ; ret
0x00000200001ea0bb : add rax, rcx ; cmp r9, r10 ; jb 0x200001ea09a ; ret
0x00000200006142ca : add rax, rcx ; cmp rdx, rax ; setae al ; ret
0x000002000046f52a : add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000003362d : add rax, rcx ; ret
0x00000200002093fe : add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000490cc4 : add rax, rdx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c50b7 : add rax, rdx ; jmp 0x200000c5072
0x00000200004f70a1 : add rax, rdx ; jmp 0x200004f703b
0x000002000061cb62 : add rax, rdx ; jmp 0x2000061cb6d
0x0000020000065b23 : add rax, rdx ; jmp rax
0x000002000036b4f8 : add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x0000020000033640 : add rax, rdx ; ret
0x00000200006cef85 : add rax, rdx ; sub rsp, 0x28 ; call rax
0x00000200000fb666 : add rax, rsi ; cmpxchg dword ptr [rdx], ecx ; jne 0x200000fb677 ; ret
0x00000200003fd44e : add rbx, rsi ; mov rcx, rbx ; call 0x2000002c2fd
0x00000200001d3d58 : add rcx, -0x10 ; mov rax, rcx ; ret
0x000002000067403b : add rcx, 0x10 ; dec r10 ; jne 0x2000067402d ; ret
0x0000020000425a04 : add rcx, 0x10 ; dec rax ; jne 0x20000425a06 ; ret
0x00000200004315b8 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200004315cb ; ret
0x000002000043291c : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x2000043292f ; ret
0x00000200000f5245 : add rcx, 0x28 ; add rdx, 0x28 ; jmp 0x200000f521b
0x000002000051c8fe : add rcx, 0x59a4 ; call r14
0x000002000047abad : add rcx, 0xa0 ; call 0x200000e6ded
0x00000200001420f4 : add rcx, 2 ; cmp rax, rdx ; jb 0x200001420f4 ; ret
0x00000200004a3852 : add rcx, 2 ; dec rdx ; jne 0x200004a3855 ; ret
0x00000200004f45cb : add rcx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x0000020000140bb4 : add rcx, 2 ; test r8, r8 ; jne 0x20000140bb1 ; ret
0x000002000014a90f : add rcx, 4 ; dec r10 ; jne 0x2000014a8f2 ; ret
0x0000020000418c96 : add rcx, 8 ; call 0x20000048197
0x0000020000507b8f : add rcx, 8 ; call 0x200001378d7
0x000002000009c0cf : add rcx, 8 ; cmp edx, r8d ; jb 0x2000009c0d1 ; ret
0x00000200005b5c99 : add rcx, 8 ; cmp r9d, edx ; jb 0x200005b5c9a ; ret
0x000002000036c9e8 : add rcx, 8 ; cmp rcx, rdx ; jbe 0x2000036c9e5 ; ret
0x00000200001000cb : add rcx, 8 ; dec rdx ; jne 0x200001000c5 ; ret
0x00000200003a15f3 : add rcx, r15 ; call 0x2000015d885
0x00000200001a5c70 : add rcx, r8 ; jmp rcx
0x000002000011b0b2 : add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000020000048c22 : add rcx, r9 ; jmp 0x20000048bf5
0x000002000065161f : add rcx, r9 ; jmp rcx
0x00000200006687eb : add rcx, r9 ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000051ad5b : add rcx, rax ; call 0x2000013da4e
0x00000200004a8db6 : add rcx, rax ; cmp r8d, r9d ; jb 0x200004a8da7 ; mov eax, edx ; ret
0x000002000053d3c4 : add rcx, rbx ; call 0x2000015d886
0x00000200000f7dae : add rcx, rdi ; jmp rcx
0x00000200000658b6 : add rcx, rdx ; jmp rcx
0x00000200006f420d : add rdi, rbx ; mov r13d, ebx ; jmp 0x200006f41e9
0x0000020000674000 : add rdx, 0x28 ; cmp qword ptr [rdx], rax ; jne 0x20000674003 ; ret
0x00000200000f5249 : add rdx, 0x28 ; jmp 0x200000f5217
0x00000200005f3bb1 : add rdx, 2 ; mov rcx, r15 ; call 0x2000050fe69
0x0000020000079a47 : add rdx, 8 ; cmp rdx, r10 ; jb 0x20000079a17 ; ret
0x00000200004cb8e5 : add rdx, 8 ; mov rax, rdx ; ret
0x000002000038120f : add rdx, r14 ; call 0x200000dd4c9
0x000002000005e41d : add rdx, r15 ; jmp rdx
0x00000200001e9c5e : add rdx, rax ; call qword ptr [rdi + 8]
0x00000200005e165f : add rdx, rbx ; call 0x2000015d885
0x000002000045b41e : add rdx, rbx ; jmp rdx
0x0000020000130304 : add rsi, 8 ; jmp 0x200001302d2
0x0000020000130303 : add rsi, 8 ; jmp 0x200001302d3
0x0000020000141315 : add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200004f7091 : add rsi, rax ; call 0x20000120f3a
0x0000020000027bc7 : add rsi, rsi ; ret 0x7502
0x000002000007028d : add rsp, 0x10 ; pop rbx ; ret
0x00000200000fe4c6 : add rsp, 0x10 ; pop rdi ; ret
0x0000020000111750 : add rsp, 0x100 ; pop rbp ; ret
0x0000020000100914 : add rsp, 0x100 ; pop rdi ; ret
0x0000020000055baf : add rsp, 0x108 ; pop rbp ; pop rbx ; ret
0x00000200001224ae : add rsp, 0x108 ; ret
0x000002000062cc9e : add rsp, 0x110 ; pop rbp ; ret
0x0000020000100ea8 : add rsp, 0x110 ; pop rbx ; ret
0x000002000051cc06 : add rsp, 0x110 ; pop rdi ; ret
0x0000020000057da1 : add rsp, 0x118 ; pop rbp ; pop rbx ; ret
0x0000020000519d1a : add rsp, 0x130 ; pop rbp ; ret
0x0000020000206572 : add rsp, 0x130 ; pop rbx ; ret
0x000002000007f69c : add rsp, 0x138 ; pop rdi ; pop rbp ; ret
0x0000020000151946 : add rsp, 0x138 ; ret
0x0000020000154b6f : add rsp, 0x138 ; sti ; ret
0x00000200004cbcd6 : add rsp, 0x140 ; pop rbx ; ret
0x000002000045cce3 : add rsp, 0x140 ; pop rdi ; ret
0x00000200005cc5a8 : add rsp, 0x148 ; ret
0x00000200000bfd6f : add rsp, 0x160 ; pop rbp ; ret
0x00000200000b3b56 : add rsp, 0x18 ; ret
0x00000200002091c5 : add rsp, 0x190 ; pop rdi ; ret
0x000002000015d876 : add rsp, 0x1a8 ; ret
0x000002000022550a : add rsp, 0x1c0 ; pop rbp ; ret
0x00000200006ff67b : add rsp, 0x1e0 ; pop rbp ; ret
0x0000020000700ce8 : add rsp, 0x20 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001bdba9 : add rsp, 0x20 ; pop r12 ; ret
0x0000020000420bba : add rsp, 0x20 ; pop r13 ; ret
0x000002000043b418 : add rsp, 0x20 ; pop r14 ; jmp 0x20000068fd9
0x000002000044cc09 : add rsp, 0x20 ; pop r14 ; jmp 0x200000712d5
0x0000020000515e2e : add rsp, 0x20 ; pop r14 ; jmp 0x2000013bc75
0x000002000066f5f3 : add rsp, 0x20 ; pop r14 ; jmp rax
0x0000020000035a08 : add rsp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000b9aae : add rsp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ed185 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000068d4a : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000024a74 : add rsp, 0x20 ; pop r14 ; ret
0x000002000038aa5e : add rsp, 0x20 ; pop r15 ; jmp 0x20000026d24
0x000002000038aa5d : add rsp, 0x20 ; pop r15 ; jmp 0x20000026d25
0x00000200004421bd : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200005163b6 : add rsp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x0000020000091474 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000026329 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200001415e3 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200006fe3bc : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200000cede2 : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000a351f : add rsp, 0x20 ; pop r15 ; ret
0x0000020000157b55 : add rsp, 0x20 ; pop rbp ; ret
0x000002000048cdb9 : add rsp, 0x20 ; pop rbx ; jmp 0x20000068fd7
0x00000200000dcd81 : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000020000024bbf : add rsp, 0x20 ; pop rbx ; ret
0x0000020000205232 : add rsp, 0x20 ; pop rcx ; ret
0x000002000044660b : add rsp, 0x20 ; pop rdi ; jmp 0x2000006a618
0x0000020000209284 : add rsp, 0x20 ; pop rdi ; jmp rax
0x000002000016242e : add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000bf507 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000137671 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000139639 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000249be : add rsp, 0x20 ; pop rdi ; ret
0x000002000004b2d4 : add rsp, 0x20 ; pop rsi ; ret
0x00000200004e40fe : add rsp, 0x210 ; pop rdi ; ret
0x0000020000366c5e : add rsp, 0x240 ; pop rdi ; ret
0x0000020000627a86 : add rsp, 0x250 ; pop rbp ; ret
0x00000200003b24ba : add rsp, 0x250 ; pop rbx ; ret
0x00000200005060ad : add rsp, 0x260 ; pop rdi ; ret
0x000002000051e12f : add rsp, 0x28 ; jmp 0x2000013f14f
0x000002000064dc69 : add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000006e40b : add rsp, 0x28 ; jmp rax
0x000002000007655a : add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000e1c6f : add rsp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027bf5 : add rsp, 0x28 ; ret
0x000002000042089f : add rsp, 0x290 ; pop rdi ; ret
0x00000200005d3692 : add rsp, 0x30 ; pop r12 ; ret
0x00000200000b6714 : add rsp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004e04a7 : add rsp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000101038 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000480a6 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000365f76 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000002b2b4 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000002715f : add rsp, 0x30 ; pop r14 ; ret
0x0000020000135ded : add rsp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000021572e : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000002ac62 : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000682ac : add rsp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000097864 : add rsp, 0x30 ; pop r15 ; ret
0x000002000015445c : add rsp, 0x30 ; pop rbp ; ret
0x0000020000680900 : add rsp, 0x30 ; pop rbx ; jmp r10
0x0000020000680908 : add rsp, 0x30 ; pop rbx ; jmp r8
0x0000020000027e06 : add rsp, 0x30 ; pop rbx ; ret
0x000002000009122a : add rsp, 0x30 ; pop rcx ; ret
0x000002000066bd0d : add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200000588cb : add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001580b6 : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012f9d9 : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026db2 : add rsp, 0x30 ; pop rdi ; ret
0x0000020000063a21 : add rsp, 0x30 ; pop rsi ; ret
0x00000200000e3eb5 : add rsp, 0x308 ; ret
0x000002000062abf3 : add rsp, 0x320 ; pop rdi ; ret
0x00000200006809f9 : add rsp, 0x38 ; jmp r8
0x0000020000680811 : add rsp, 0x38 ; jmp r9
0x0000020000680818 : add rsp, 0x38 ; jmp rax
0x000002000037154d : add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x00000200004f31fd : add rsp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000161fe2 : add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000614b73 : add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x0000020000134dc6 : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c540d : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025a90 : add rsp, 0x38 ; ret
0x000002000041c287 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000035c61 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004634d0 : add rsp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200002270ab : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000008401a : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000008dd68 : add rsp, 0x40 ; pop r14 ; ret
0x00000200001e8d71 : add rsp, 0x40 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000c11e6 : add rsp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000bab07 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000002c206 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004ee416 : add rsp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x00000200001bf47e : add rsp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000009438f : add rsp, 0x40 ; pop r15 ; ret
0x00000200005c26c5 : add rsp, 0x40 ; pop rbp ; jmp 0x2000038e9bf
0x00000200005c26c4 : add rsp, 0x40 ; pop rbp ; jmp 0x2000038e9c0
0x000002000013a776 : add rsp, 0x40 ; pop rbp ; ret
0x0000020000059276 : add rsp, 0x40 ; pop rbx ; ret
0x000002000002e4ca : add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000037d20e : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b95eb : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002494a : add rsp, 0x40 ; pop rdi ; ret
0x00000200000f6781 : add rsp, 0x40 ; pop rsi ; ret
0x000002000009ef36 : add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x000002000052dc97 : add rsp, 0x48 ; pop r13 ; pop rbp ; ret
0x00000200004cc76c : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012b263 : add rsp, 0x48 ; pop r15 ; pop r13 ; ret
0x0000020000162087 : add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000013fceb : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200001623b8 : add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000336d7 : add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001290d4 : add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f5e87 : add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000002abb3 : add rsp, 0x48 ; ret
0x00000200004f548c : add rsp, 0x4b8 ; ret
0x000002000014043c : add rsp, 0x4d8 ; ret
0x000002000015cb44 : add rsp, 0x50 ; call r10
0x0000020000121a03 : add rsp, 0x50 ; pop r12 ; ret
0x000002000009ec33 : add rsp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000a4f8f : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000049fd7f : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000051bd1 : add rsp, 0x50 ; pop r14 ; ret
0x00000200004f04b5 : add rsp, 0x50 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200003c944d : add rsp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000007b214 : add rsp, 0x50 ; pop r15 ; pop rsi ; pop rbx ; ret
0x00000200001d4b12 : add rsp, 0x50 ; pop r15 ; ret
0x0000020000038ddf : add rsp, 0x50 ; pop rbp ; ret
0x0000020000033471 : add rsp, 0x50 ; pop rbx ; ret
0x0000020000080961 : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000020086e : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021e5fb : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003cc79 : add rsp, 0x50 ; pop rdi ; ret
0x00000200001cd4ea : add rsp, 0x50 ; pop rsi ; ret
0x000002000020a8e2 : add rsp, 0x518 ; ret
0x00000200001620ef : add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x000002000022d7fa : add rsp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000003399e : add rsp, 0x58 ; ret
0x000002000010849c : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000060112a : add rsp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000489bd7 : add rsp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004c65fe : add rsp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x000002000009178f : add rsp, 0x60 ; pop rbp ; ret
0x0000020000063005 : add rsp, 0x60 ; pop rbx ; ret
0x00000200001405ba : add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b6998 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000094842 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000082243 : add rsp, 0x60 ; pop rdi ; ret
0x0000020000140a07 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000200000649dc : add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200000a1249 : add rsp, 0x68 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005c1acc : add rsp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002c3ee : add rsp, 0x68 ; ret
0x00000200004ed87e : add rsp, 0x70 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000067146f : add rsp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000fc59d : add rsp, 0x70 ; pop rbp ; ret
0x0000020000122a63 : add rsp, 0x70 ; pop rbx ; ret
0x0000020000513d48 : add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200002032e7 : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d5d6d : add rsp, 0x70 ; pop rdi ; ret
0x000002000072a698 : add rsp, 0x70 ; pop rsi ; ret
0x0000020000487e4f : add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x000002000009b846 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002eade : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000010d57e : add rsp, 0x78 ; ret
0x000002000012a6e2 : add rsp, 0x80 ; pop rbp ; ret
0x0000020000041cd0 : add rsp, 0x80 ; pop rbx ; ret
0x0000020000081083 : add rsp, 0x80 ; pop rdi ; ret
0x0000020000627574 : add rsp, 0x840 ; pop rbp ; ret
0x0000020000045721 : add rsp, 0x88 ; pop rbp ; pop rbx ; ret
0x00000200001e0f6e : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000002000002c2ec : add rsp, 0x88 ; ret
0x000002000012a502 : add rsp, 0x90 ; pop rbp ; ret
0x000002000022c5b6 : add rsp, 0x90 ; pop rbx ; ret
0x000002000012e4f7 : add rsp, 0x90 ; pop rdi ; ret
0x00000200000926f5 : add rsp, 0x90 ; pop rsi ; ret
0x00000200001e0ea9 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000002000007e37a : add rsp, 0x98 ; pop rdi ; pop rbp ; ret
0x0000020000109161 : add rsp, 0x98 ; ret
0x00000200001bce3a : add rsp, 0xa0 ; pop rbp ; ret
0x000002000066cc29 : add rsp, 0xa0 ; pop rbx ; ret
0x000002000051c9d5 : add rsp, 0xa0 ; pop rdi ; ret
0x00000200001e1884 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000020000628386 : add rsp, 0xa8 ; pop rdi ; pop rbx ; ret
0x00000200004af541 : add rsp, 0xa8 ; ret
0x000002000010b9df : add rsp, 0xb0 ; pop rbp ; ret
0x0000020000230555 : add rsp, 0xb0 ; pop rbx ; ret
0x0000020000404eda : add rsp, 0xb0 ; pop rdi ; ret
0x00000200001e0dcd : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000200006282b7 : add rsp, 0xb8 ; pop rdi ; pop rbx ; ret
0x000002000012f52d : add rsp, 0xb8 ; ret
0x000002000020364f : add rsp, 0xc0 ; pop rbp ; ret
0x00000200000eb81c : add rsp, 0xc0 ; pop rdi ; ret
0x00000200003bcd43 : add rsp, 0xc0 ; pop rsi ; ret
0x00000200005007d4 : add rsp, 0xc8 ; ret
0x00000200001cb6e2 : add rsp, 0xce0 ; pop rbx ; ret
0x00000200001cb752 : add rsp, 0xce8 ; ret
0x00000200000e503b : add rsp, 0xd0 ; pop rbp ; ret
0x00000200001512b3 : add rsp, 0xd0 ; pop rbx ; ret
0x00000200005df4b9 : add rsp, 0xd0 ; pop rdi ; ret
0x000002000036d491 : add rsp, 0xe0 ; pop rbp ; ret
0x00000200001009e8 : add rsp, 0xe0 ; pop rbx ; ret
0x0000020000100d40 : add rsp, 0xe8 ; ret
0x000002000051d50d : add rsp, 0xf0 ; pop rbp ; ret
0x00000200003ec65f : add rsp, 0xf0 ; pop rdi ; ret
0x0000020000122d9f : add rsp, 0xf8 ; ret
0x00000200006cf07f : add rsp, 8 ; jmp r8
0x00000200001521b8 : add rsp, 8 ; ret
0x000002000014d806 : add sil, byte ptr [r11 + 3] ; xor al, al ; ret
0x0000020000447008 : add spl, byte ptr [r9 + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000430208 : add spl, byte ptr [rsi + 0x3b] ; ret
0x000002000026d3f2 : add spl, r10b ; ret
0x000002000025d41a : add spl, r13b ; ret
0x000002000026d322 : add spl, r15b ; ret 0x26
0x0000020000590241 : add word ptr [rbx + 2], ax ; jmp 0x200004ac4c9
0x000002000045e0ca : add word ptr [rcx + 0xa], dx ; ret
0x0000020000095d0f : add word ptr [rdx + 0x5a], ax ; and byte ptr [rcx + 0x5c], 0xfe ; ret
0x00000200001d8a4d : add word ptr [rip + 0xcca14], ax ; ret
0x000002000014e15a : and ah, ah ; add byte ptr [rax], al ; ret
0x000002000014e55a : and ah, al ; add byte ptr [rax], al ; ret
0x00000200003787cd : and ah, al ; add rsp, 0x28 ; ret
0x00000200003745b2 : and ah, al ; mov cr4, rcx ; add rsp, 0x28 ; ret
0x0000020000055dac : and ah, al ; mov cr4, rcx ; ret
0x000002000014de5a : and ah, bh ; add byte ptr [rax], al ; ret
0x000002000014e25a : and ah, bl ; add byte ptr [rax], al ; ret
0x0000020000544f18 : and ah, byte ptr [rbx - 0x74b30019] ; ret
0x000002000071fa3d : and ah, byte ptr [rsi + 0x3b] ; ret 0x4172
0x000002000072d8ee : and ah, byte ptr [rsi + 0x3b] ; ret 0x820f
0x000002000072d740 : and ah, byte ptr [rsi + 0x3b] ; ret 0x9b72
0x000002000014415c : and ah, ch ; adc eax, 0xc0940f00 ; ret
0x000002000014e05a : and ah, ch ; add byte ptr [rax], al ; ret
0x000002000014e45a : and ah, cl ; add byte ptr [rax], al ; ret
0x00000200003745b5 : and ah, cl ; add rsp, 0x28 ; ret
0x0000020000055daf : and ah, cl ; ret
0x000002000014df5a : and ah, dh ; add byte ptr [rax], al ; ret
0x000002000014e35a : and ah, dl ; add byte ptr [rax], al ; ret
0x000002000024d06e : and al, 0 ; adc ah, byte ptr [rcx] ; or al, byte ptr [rax] ; or al, 6 ; ret
0x000002000024cf0e : and al, 0 ; add ah, byte ptr [rip + 0x60c000d] ; ret 0x2596
0x0000020000570a2d : and al, 0 ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000002000024f56a : and al, 0 ; add bl, byte ptr [rdx] ; or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x0000020000066c89 : and al, 0 ; add byte ptr [rax - 0x75], al ; ret
0x000002000013e8bc : and al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000243596 : and al, 0 ; add dl, byte ptr [rsi] ; or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x000002000015ca61 : and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000060183d : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001ab496 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001ab456 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200004eabd2 : and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000010cc48 : and al, 0 ; call rax
0x00000200005ef06f : and al, 0 ; cmp rcx, qword ptr [rcx] ; sete al ; ret
0x00000200000722ea : and al, 0 ; cmp rcx, rdx ; jae 0x2000007231a ; ret
0x00000200003705d2 : and al, 0 ; je 0x200003705db ; ret
0x00000200004f4288 : and al, 0 ; mov byte ptr [rip - 0x2514ce], 1 ; ret
0x000002000010ca7f : and al, 0 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000010ce69 : and al, 0 ; ret
0x00000200002438b6 : and al, 0 ; sbb ah, byte ptr [rip + 0x608000b] ; ret 0x1306
0x00000200005b1b8d : and al, 0 ; xor ecx, ecx ; call 0x200004dde26
0x000002000009150d : and al, 0 ; xor edx, edx ; test r8, r8 ; jne 0x20000091520 ; ret
0x000002000007d08b : and al, 0x10 ; add dh, dh ; ret
0x0000020000573d56 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; ret
0x00000200004491f6 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ret
0x00000200003b80e6 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret
0x00000200001868bc : and al, 0x10 ; add dword ptr [rax], eax ; add cl, ch ; call qword ptr [rdi]
0x000002000054ad81 : and al, 0x10 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xe874
0x000002000008a5bb : and al, 0x10 ; mov al, r9b ; ret
0x00000200000d7da5 : and al, 0x10 ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000014c50f : and al, 0x10 ; mov dword ptr [r9], r11d ; mov eax, r10d ; ret
0x0000020000486505 : and al, 0x10 ; mov eax, 0xc0000017 ; ret
0x000002000041070d : and al, 0x10 ; mov eax, ecx ; ret
0x000002000020aac1 : and al, 0x10 ; mov eax, r10d ; ret
0x00000200000b43bd : and al, 0x10 ; mov eax, r11d ; ret
0x00000200000d02a9 : and al, 0x10 ; mov eax, r9d ; ret
0x00000200004b2d40 : and al, 0x10 ; mov rax, r10 ; ret
0x0000020000710e31 : and al, 0x10 ; mov rax, r11 ; ret
0x00000200000c0981 : and al, 0x10 ; mov rax, r9 ; ret
0x00000200000355d9 : and al, 0x10 ; mov rax, rdx ; ret
0x00000200004e1333 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000046e62d : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; mov eax, edx ; ret
0x00000200001370a1 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; mov eax, r10d ; ret
0x00000200000959d0 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000d5fae : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000029600 : and al, 0x10 ; ret
0x00000200003db373 : and al, 0x10 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003dab05 : and al, 0x10 ; shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200000ebbec : and al, 0x10 ; xor eax, eax ; ret
0x0000020000063fdc : and al, 0x11 ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x0000020000410168 : and al, 0x13 ; ret 0x65ff
0x00000200001cf8c0 : and al, 0x13 ; sub byte ptr [rax], al ; mov eax, 4 ; ret
0x000002000012d1c2 : and al, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200002373bc : and al, 0x18 ; add cx, cx ; mov word ptr [r10], cx ; ret
0x000002000056bcfa : and al, 0x18 ; jmp 0x20000437f1a
0x000002000056bcf9 : and al, 0x18 ; jmp 0x20000437f1b
0x0000020000200063 : and al, 0x18 ; mov al, r10b ; ret
0x00000200000fc719 : and al, 0x18 ; mov al, r9b ; ret
0x00000200004e1338 : and al, 0x18 ; mov eax, ecx ; ret
0x000002000046e632 : and al, 0x18 ; mov eax, edx ; ret
0x00000200001370a6 : and al, 0x18 ; mov eax, r10d ; ret
0x000002000020b705 : and al, 0x18 ; mov eax, r11d ; ret
0x00000200001fee11 : and al, 0x18 ; mov eax, r8d ; ret
0x00000200003d8cb6 : and al, 0x18 ; mov eax, r9d ; ret
0x0000020000666552 : and al, 0x18 ; mov qword ptr [rdx], r11 ; mov rax, r9 ; ret
0x000002000015e3a8 : and al, 0x18 ; mov qword ptr [rsp + 0x20], r9 ; ret
0x0000020000125673 : and al, 0x18 ; mov r14, qword ptr [rsp + 0x20] ; ret
0x0000020000642131 : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; mov rax, r10 ; ret
0x0000020000100b4e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200000ca950 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000013453b : and al, 0x18 ; mov word ptr [rip + 0x170f24], cx ; ret
0x00000200000b87ce : and al, 0x18 ; pop r15 ; pop r14 ; ret
0x00000200000959d5 : and al, 0x18 ; ret
0x0000020000389bd2 : and al, 0x1b ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x000002000051ec2e : and al, 0x20 ; adc al, 0 ; add byte ptr [rax], al ; call 0x2000014dd09
0x00000200004003ca : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004678e9 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005ae1ef : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x00000200004037f9 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x0000020000469e8c : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x000002000051d019 : and al, 0x20 ; add al, ch ; call qword ptr [rdx]
0x0000020000624467 : and al, 0x20 ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000020000371bda : and al, 0x20 ; add bl, byte ptr [rax] ; add al, bpl ; ret
0x00000200001de6da : and al, 0x20 ; add bl, byte ptr [rbx] ; add byte ptr [rax], 0xe8 ; ret
0x00000200005fa773 : and al, 0x20 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rbp - 0x75], 1 ; ret
0x0000020000558b97 : and al, 0x20 ; add byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x200000b4de8
0x0000020000494658 : and al, 0x20 ; add byte ptr [rax], cl ; add byte ptr [rax], al ; call 0x200000b4de9
0x000002000066ce45 : and al, 0x20 ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; insd dword ptr [rdi], dx ; pop rbx ; ret
0x00000200004af523 : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000020f15a : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000501ace : and al, 0x20 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x2000014dd08
0x0000020000501acd : and al, 0x20 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x2000014dd09
0x0000020000676f81 : and al, 0x20 ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006768c6 : and al, 0x20 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b4c
0x00000200003dbf2c : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000571565 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000040df1f : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r10
0x000002000040b64b : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x00000200004e225e : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000002000050aafc : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r15
0x0000020000403744 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x000002000040ac28 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rsi
0x00000200001d418e : and al, 0x20 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000002000051345f : and al, 0x20 ; add eax, 0xe8000000 ; salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000467bfb : and al, 0x20 ; add eax, ebp ; int 0xc3
0x000002000002dcbe : and al, 0x20 ; add eax, ebp ; ret 0x63
0x0000020000105dba : and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000585cf : and al, 0x20 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ed3ee : and al, 0x20 ; add rsp, 0x38 ; ret
0x000002000049e6e6 : and al, 0x20 ; and edx, 1 ; call rdi
0x00000200005b79cf : and al, 0x20 ; and esi, 3 ; call 0x200003a3bf7
0x00000200005b79ce : and al, 0x20 ; and esi, 3 ; call 0x200003a3bf8
0x000002000051c11c : and al, 0x20 ; call 0x20000058404
0x000002000051c11b : and al, 0x20 ; call 0x20000058405
0x00000200005ccf3a : and al, 0x20 ; call 0x200000691b4
0x00000200005ccf39 : and al, 0x20 ; call 0x200000691b5
0x0000020000070ad3 : and al, 0x20 ; call 0x200000691b8
0x000002000049a4d5 : and al, 0x20 ; call 0x200000691b9
0x0000020000127296 : and al, 0x20 ; call 0x200000a34c8
0x0000020000127295 : and al, 0x20 ; call 0x200000a34c9
0x00000200005f3997 : and al, 0x20 ; call 0x200000bfc0c
0x00000200005f3996 : and al, 0x20 ; call 0x200000bfc0d
0x00000200004d7954 : and al, 0x20 ; call 0x200000ff575
0x00000200004d7a18 : and al, 0x20 ; call 0x200000ff576
0x000002000060a0fa : and al, 0x20 ; call 0x200000ff62d
0x000002000067c2a2 : and al, 0x20 ; call 0x20000108514
0x00000200000f9b33 : and al, 0x20 ; call 0x20000115d80
0x0000020000235ef5 : and al, 0x20 ; call 0x20000132118
0x0000020000235ef4 : and al, 0x20 ; call 0x20000132119
0x00000200005085f7 : and al, 0x20 ; call 0x20000138061
0x000002000051104c : and al, 0x20 ; call 0x200001397a1
0x000002000051ee3c : and al, 0x20 ; call 0x2000013f455
0x000002000051ee3b : and al, 0x20 ; call 0x2000013f456
0x0000020000207f09 : and al, 0x20 ; call 0x200001441c8
0x0000020000207f08 : and al, 0x20 ; call 0x200001441c9
0x00000200006f1a21 : and al, 0x20 ; call 0x2000014dce4
0x00000200006f1a20 : and al, 0x20 ; call 0x2000014dce5
0x000002000051f0bd : and al, 0x20 ; call 0x2000014ddc5
0x000002000051e551 : and al, 0x20 ; call 0x2000014e0e5
0x00000200004f20af : and al, 0x20 ; call 0x2000014e324
0x000002000051f169 : and al, 0x20 ; call 0x2000014e625
0x000002000051f168 : and al, 0x20 ; call 0x2000014e626
0x0000020000234e46 : and al, 0x20 ; call 0x200001510a4
0x0000020000234e45 : and al, 0x20 ; call 0x200001510a5
0x00000200005eee94 : and al, 0x20 ; call 0x200001db168
0x00000200005eee93 : and al, 0x20 ; call 0x200001db169
0x0000020000219930 : and al, 0x20 ; call 0x20000225c2c
0x000002000021992f : and al, 0x20 ; call 0x20000225c2d
0x000002000066e0cb : and al, 0x20 ; call 0x2000022bdad
0x00000200007071ff : and al, 0x20 ; call 0x200003a3458
0x00000200007071fe : and al, 0x20 ; call 0x200003a3459
0x0000020000408566 : and al, 0x20 ; call 0x200004086b1
0x00000200005dc232 : and al, 0x20 ; call 0x200004184e8
0x00000200005dc231 : and al, 0x20 ; call 0x200004184e9
0x000002000042f9ec : and al, 0x20 ; call 0x2000042bc10
0x000002000042f9eb : and al, 0x20 ; call 0x2000042bc11
0x0000020000703b33 : and al, 0x20 ; call 0x2000047fd98
0x000002000059d4c4 : and al, 0x20 ; call 0x200004997c8
0x00000200004e6713 : and al, 0x20 ; call 0x200004aa585
0x0000020000406d78 : and al, 0x20 ; call 0x200004c3034
0x0000020000427743 : and al, 0x20 ; call 0x200004e0fb4
0x00000200006fd9a9 : and al, 0x20 ; call 0x200004f9c00
0x00000200006fd9a8 : and al, 0x20 ; call 0x200004f9c01
0x00000200005148cb : and al, 0x20 ; call 0x200005149d0
0x00000200005148ca : and al, 0x20 ; call 0x200005149d1
0x00000200005b989b : and al, 0x20 ; call 0x200005d5b74
0x00000200005b989a : and al, 0x20 ; call 0x200005d5b75
0x0000020000665268 : and al, 0x20 ; call 0x2000067147c
0x0000020000665267 : and al, 0x20 ; call 0x2000067147d
0x0000020000678817 : and al, 0x20 ; call 0x2000067d72d
0x0000020000619ccf : and al, 0x20 ; call qword ptr [r10]
0x00000200000809cd : and al, 0x20 ; call qword ptr [rdi]
0x000002000071f558 : and al, 0x20 ; call qword ptr [rip - 0x3d9510]
0x0000020000461e11 : and al, 0x20 ; call qword ptr [rsi]
0x00000200000e3db0 : and al, 0x20 ; call r10
0x00000200000423c1 : and al, 0x20 ; call r11
0x0000020000400354 : and al, 0x20 ; call r12
0x0000020000400229 : and al, 0x20 ; call r14
0x00000200001b8a5d : and al, 0x20 ; call r15
0x0000020000668394 : and al, 0x20 ; call r8
0x00000200003cf071 : and al, 0x20 ; call rax
0x00000200005ccdd8 : and al, 0x20 ; call rbx
0x00000200003c807b : and al, 0x20 ; call rdi
0x000002000040db17 : and al, 0x20 ; call rsi
0x00000200003c7257 : and al, 0x20 ; cmp esi, 4 ; je 0x200003c726b ; call r10
0x00000200003c7256 : and al, 0x20 ; cmp esi, 4 ; je 0x200003c726c ; call r10
0x000002000041078d : and al, 0x20 ; enter 0, 0 ; call r10
0x0000020000501dbd : and al, 0x20 ; inc byte ptr [rax] ; add byte ptr [rax], al ; call 0x2000014e068
0x0000020000501dbc : and al, 0x20 ; inc byte ptr [rax] ; add byte ptr [rax], al ; call 0x2000014e069
0x00000200003793f7 : and al, 0x20 ; insd dword ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; movsxd rbp, eax ; ret 0xdabb
0x00000200000f50a0 : and al, 0x20 ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x00000200004bbc0e : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; mov rcx, r15 ; call rsi
0x00000200004bbf23 : and al, 0x20 ; lea r8d, dword ptr [r9 + 2] ; mov rcx, r15 ; call rsi
0x0000020000718e9b : and al, 0x20 ; lea rcx, qword ptr [rsp + 0x28] ; call rax
0x00000200001cc372 : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x000002000012e2fb : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x000002000072f0b2 : and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x00000200002318d7 : and al, 0x20 ; mov al, r9b ; add rsp, 0x38 ; ret
0x000002000068e775 : and al, 0x20 ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200000e4c40 : and al, 0x20 ; mov eax, r9d ; ret
0x00000200004b95aa : and al, 0x20 ; mov ecx, 0x800c ; call rax
0x00000200004f329d : and al, 0x20 ; mov ecx, edi ; call rsi
0x0000020000464850 : and al, 0x20 ; mov edx, ebx ; mov r8b, r11b ; call r12
0x00000200004f31bf : and al, 0x20 ; mov edx, esi ; mov rcx, r14 ; call r9
0x00000200001fbcc2 : and al, 0x20 ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x0000020000672d16 : and al, 0x20 ; mov r9, rbx ; mov rcx, r14 ; call rax
0x00000200004bbe8d : and al, 0x20 ; mov r9d, 2 ; call rax
0x00000200004e3f9a : and al, 0x20 ; mov r9d, 3 ; call rax
0x00000200000ca992 : and al, 0x20 ; mov r9d, r11d ; mov eax, r11d ; pop rdi ; ret
0x0000020000642136 : and al, 0x20 ; mov rax, r10 ; ret
0x0000020000479627 : and al, 0x20 ; mov rcx, qword ptr [rcx] ; call 0x200000358d3
0x0000020000479626 : and al, 0x20 ; mov rcx, qword ptr [rcx] ; call 0x200000358d4
0x000002000066cee9 : and al, 0x20 ; mov rcx, r14 ; call rax
0x000002000064ad7a : and al, 0x20 ; mov rcx, r14 ; mov rdx, r12 ; call rsi
0x00000200004bb9fe : and al, 0x20 ; mov rcx, r15 ; mov rdx, r12 ; call rdi
0x00000200004b46b1 : and al, 0x20 ; mov rcx, rbp ; call rax
0x000002000066c034 : and al, 0x20 ; mov rcx, rsi ; call r12
0x000002000008eaaf : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200004e6306 : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x28] ; pop r15 ; ret
0x0000020000443193 : and al, 0x20 ; mov rdx, rbx ; call r10
0x000002000072c1d9 : and al, 0x20 ; movzx eax, r8w ; ret
0x0000020000208c49 : and al, 0x20 ; pop r14 ; ret
0x00000200000ca955 : and al, 0x20 ; pop rdi ; ret
0x0000020000100b53 : and al, 0x20 ; ret
0x000002000044e326 : and al, 0x20 ; xor edx, edx ; call 0x200003ca566
0x000002000044e325 : and al, 0x20 ; xor edx, edx ; call 0x200003ca567
0x00000200004ee178 : and al, 0x20 ; xor edx, edx ; mov qword ptr [rsp + 0x38], rbx ; call rdi
0x0000020000472436 : and al, 0x24 ; inc edx ; jmp 0x200004723fc
0x00000200006684ff : and al, 0x24 ; jmp 0x200006684c9
0x00000200001d915d : and al, 0x28 ; add byte ptr [rax + 0xb], cl ; ret 0x8944
0x00000200004a2508 : and al, 0x28 ; add byte ptr [rax - 0x77], cl ; je 0x200004a253c ; and al, ch ; jmp rdx
0x0000020000233526 : and al, 0x28 ; add cl, byte ptr [rax + 0xb] ; ret 0x8944
0x000002000002dcb9 : and al, 0x28 ; add dh, al ; and al, 0x20 ; add eax, ebp ; ret 0x63
0x00000200001d8c53 : and al, 0x28 ; add dword ptr [rax + 0xb], ecx ; ret 0x8944
0x00000200002335f3 : and al, 0x28 ; add ecx, dword ptr [rax + 0xb] ; ret 0x8944
0x000002000006e409 : and al, 0x28 ; add rsp, 0x28 ; jmp rax
0x00000200000b786d : and al, 0x28 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c9f82 : and al, 0x28 ; add rsp, 0x48 ; ret
0x000002000064e34e : and al, 0x28 ; and qword ptr [rsp + 0x20], 0 ; call r10
0x000002000019ceeb : and al, 0x28 ; call 0x200001d9190
0x0000020000718ea0 : and al, 0x28 ; call rax
0x00000200001fbcc7 : and al, 0x28 ; call rdx
0x0000020000600e59 : and al, 0x28 ; jae 0x20000600e6c ; mov eax, 0xc0000004 ; ret
0x0000020000600efd : and al, 0x28 ; jae 0x20000600f10 ; mov eax, 0xc0000004 ; ret
0x000002000012858c : and al, 0x28 ; jmp 0x20000128329
0x000002000066805f : and al, 0x28 ; jmp rax
0x000002000066838f : and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x000002000061ccd7 : and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x000002000061ccb9 : and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x00000200001cc377 : and al, 0x28 ; mov cl, bl ; call rax
0x00000200004cbadb : and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200005eee90 : and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call 0x200001db16c
0x00000200003c8077 : and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000511048 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ebp ; call 0x200001397a5
0x0000020000672d3b : and al, 0x28 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x000002000066cee5 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x0000020000633157 : and al, 0x28 ; mov dword ptr [rsp + 0x20], edi ; call r14
0x000002000013440a : and al, 0x28 ; mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x00000200005f0a29 : and al, 0x28 ; mov eax, r11d ; pop rdi ; ret
0x00000200007196b3 : and al, 0x28 ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000066f6a4 : and al, 0x28 ; mov edx, r15d ; call rdi
0x000002000056aa92 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call r10
0x0000020000567911 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200005676ff : and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x0000020000406d73 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r14 ; call 0x200004c3039
0x00000200003cf06c : and al, 0x28 ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000056ab5a : and al, 0x28 ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200007071fa : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call 0x200003a345d
0x00000200003a6654 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000042793d : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000461e0c : and al, 0x28 ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x000002000019cec5 : and al, 0x28 ; mov rcx, rdi ; call 0x200001d9193
0x0000020000080871 : and al, 0x28 ; movzx edx, bpl ; call qword ptr [rdi]
0x000002000008eab4 : and al, 0x28 ; pop r14 ; ret
0x00000200004e630b : and al, 0x28 ; pop r15 ; ret
0x000002000013440e : and al, 0x28 ; pop rdi ; pop rsi ; ret
0x0000020000459a7a : and al, 0x28 ; xor eax, eax ; pop r14 ; ret
0x000002000012e300 : and al, 0x28 ; xor ecx, ecx ; call rax
0x000002000068e77a : and al, 0x2c ; call rax
0x00000200000527a7 : and al, 0x30 ; adc ecx, ebp ; ret
0x0000020000580223 : and al, 0x30 ; add byte ptr [rdi], cl ; test ecx, ebx ; ret
0x000002000006d371 : and al, 0x30 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b4c
0x00000200003e8a7b : and al, 0x30 ; add dword ptr [rax], eax ; add al, ch ; ret
0x0000020000512927 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001401ac : and al, 0x30 ; add rax, r15 ; mov rdx, r12 ; call rax
0x00000200000fe4c4 : and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x0000020000024a72 : and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003753ec : and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001c4fac : and al, 0x30 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000205230 : and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000209282 : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000024c2c : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0b0b : and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000e20aa : and al, 0x30 ; add rsp, 0x28 ; ret
0x000002000006a794 : and al, 0x30 ; add rsp, 0x38 ; ret
0x00000200000336d5 : and al, 0x30 ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001d7da6 : and al, 0x30 ; add rsp, 0x48 ; ret
0x0000020000063003 : and al, 0x30 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000051c17b : and al, 0x30 ; call 0x2000013e34d
0x000002000051c17a : and al, 0x30 ; call 0x2000013e34e
0x0000020000666e50 : and al, 0x30 ; call 0x20000294e25
0x0000020000666e4f : and al, 0x30 ; call 0x20000294e26
0x000002000072bdfc : and al, 0x30 ; call r12
0x000002000012bade : and al, 0x30 ; call rax
0x0000020000611e3c : and al, 0x30 ; inc eax ; add rsp, 0x28 ; ret
0x000002000020d08a : and al, 0x30 ; jmp 0x2000020d132
0x00000200006712d7 : and al, 0x30 ; jmp rax
0x000002000010c42b : and al, 0x30 ; lea r12d, dword ptr [r13 + 1] ; call 0x20000058738
0x0000020000534501 : and al, 0x30 ; lea r8d, dword ptr [rdx + 0x20] ; call 0x2000015dbc9
0x00000200004a7aa1 : and al, 0x30 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011821f : and al, 0x30 ; mov al, r10b ; pop r15 ; pop r14 ; ret
0x00000200004acc5c : and al, 0x30 ; mov al, r8b ; pop r15 ; pop r14 ; ret
0x00000200000fb649 : and al, 0x30 ; mov dword ptr [rax + 4], ecx ; jmp 0x200000fb618
0x00000200000fb648 : and al, 0x30 ; mov dword ptr [rax + 4], ecx ; jmp 0x200000fb619
0x000002000012ecf2 : and al, 0x30 ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000593b81 : and al, 0x30 ; mov dword ptr [rsp + 0x38], esi ; call rax
0x0000020000111693 : and al, 0x30 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013c191 : and al, 0x30 ; mov eax, r11d ; pop r15 ; pop r14 ; ret
0x0000020000133ac4 : and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x00000200001bbad1 : and al, 0x30 ; mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x000002000055e583 : and al, 0x30 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000020fc87 : and al, 0x30 ; mov rax, rdx ; add rsp, 0x48 ; ret
0x00000200001bc6b3 : and al, 0x30 ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200006fe189 : and al, 0x30 ; mov rdx, rdi ; call 0x200004ba3fb
0x00000200006fe188 : and al, 0x30 ; mov rdx, rdi ; call 0x200004ba3fc
0x00000200000fb89a : and al, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000085aa3 : and al, 0x30 ; pop r15 ; pop r14 ; ret
0x00000200000fce13 : and al, 0x30 ; test eax, eax ; jne 0x200000fce30 ; ret
0x00000200000fce12 : and al, 0x30 ; test eax, eax ; jne 0x200000fce31 ; ret
0x00000200000e45bf : and al, 0x30 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000204a72 : and al, 0x30 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004c6791 : and al, 0x30 ; xor ecx, ecx ; call 0x200000e7093
0x00000200004c6790 : and al, 0x30 ; xor ecx, ecx ; call 0x200000e7094
0x0000020000648bc1 : and al, 0x30 ; xor edx, edx ; call 0x20000294e26
0x0000020000648bc0 : and al, 0x30 ; xor edx, edx ; call 0x20000294e27
0x000002000011dda4 : and al, 0x32 ; add rsp, 0x28 ; ret
0x000002000021d53b : and al, 0x33 ; call rbx
0x000002000056e8cb : and al, 0x33 ; fild dword ptr [rcx - 0x77] ; jge 0x2000056e8da ; jmp 0x2000056e89e
0x000002000009d55b : and al, 0x34 ; jmp 0x2000009d5b4
0x000002000009d55a : and al, 0x34 ; jmp 0x2000009d5b5
0x00000200004a6a90 : and al, 0x34 ; mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003d03fc : and al, 0x34 ; mov edx, r14d ; mov rcx, rbx ; call r10
0x00000200004c8a79 : and al, 0x34 ; or eax, 0xebc00000 ; ret
0x00000200006d83bf : and al, 0x38 ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6d57 : and al, 0x38 ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x349
0x0000020000106e61 : and al, 0x38 ; add byte ptr [rax - 0x75], cl ; ret 0x8844
0x00000200004ee682 : and al, 0x38 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200003cc18a : and al, 0x38 ; add byte ptr [rsi + rdx*2 - 0xa], dh ; ret
0x0000020000086bd9 : and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006fbf1b : and al, 0x38 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000119fc9 : and al, 0x38 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066be31 : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x00000200000249bc : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b1505 : and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000002b4ed : and al, 0x38 ; add rsp, 0x28 ; ret
0x00000200005fa5c1 : and al, 0x38 ; call 0x200000bf5b6
0x00000200005fa5c0 : and al, 0x38 ; call 0x200000bf5b7
0x00000200005a809a : and al, 0x38 ; call 0x200001ca195
0x00000200005a8099 : and al, 0x38 ; call 0x200001ca196
0x000002000072ab65 : and al, 0x38 ; call qword ptr [rip - 0x3d999d]
0x0000020000593b85 : and al, 0x38 ; call rax
0x00000200004ee17f : and al, 0x38 ; call rdi
0x00000200003da9c3 : and al, 0x38 ; imul eax, ecx ; add eax, r9d ; ret
0x00000200003da8f6 : and al, 0x38 ; imul eax, ecx ; sub eax, r8d ; ret
0x00000200003daf23 : and al, 0x38 ; imul eax, ecx ; xor eax, r9d ; ret
0x000002000056a0d0 : and al, 0x38 ; jmp 0x20000433b30
0x000002000022bcdf : and al, 0x38 ; jmp rax
0x000002000064a8c2 : and al, 0x38 ; mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x00000200001d786c : and al, 0x38 ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x00000200001d2604 : and al, 0x38 ; mov dword ptr [rsp + 0x40], eax ; call r9
0x000002000048b1e0 : and al, 0x38 ; mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0a9c : and al, 0x38 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000131e0a : and al, 0x38 ; mov eax, edx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043b6c9 : and al, 0x38 ; mov qword ptr [rdi + 0x78], rax ; call 0x20000068fd9
0x0000020000662228 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x00000200000dcef1 : and al, 0x38 ; mov rcx, rbx ; call 0x200001d9193
0x0000020000136ab7 : and al, 0x38 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000ece44 : and al, 0x38 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000261ab : and al, 0x38 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200003daf45 : and al, 0x38 ; ret
0x00000200006004ff : and al, 0x38 ; xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006eec2d : and al, 0x38 ; xor byte ptr [rcx + 2], al ; xor eax, eax ; ret
0x000002000011dd58 : and al, 0x38 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051fc78 : and al, 0x38 ; xor rcx, rsp ; call 0x20000148e18
0x000002000051fc77 : and al, 0x38 ; xor rcx, rsp ; call 0x20000148e19
0x00000200001c6b64 : and al, 0x3b ; ret
0x0000020000120c35 : and al, 0x3c ; cmp esi, ecx ; jb 0x20000120c87 ; inc edx ; jmp 0x20000120c21
0x00000200001c676a : and al, 0x3c ; movzx ecx, ax ; call r9
0x00000200004d401f : and al, 0x40 ; add rsp, 0x20 ; pop r13 ; ret
0x0000020000035d67 : and al, 0x40 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000428aa9 : and al, 0x40 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004db5cc : and al, 0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000043f5a1 : and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000376964 : and al, 0x40 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200000bf505 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000024b3e : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004b2d2 : and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000f6617 : and al, 0x40 ; add rsp, 0x28 ; ret
0x000002000008dcbe : and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001d01cc : and al, 0x40 ; add rsp, 0x30 ; pop r15 ; ret
0x000002000021527d : and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000060ef61 : and al, 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000067690d : and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000276c4 : and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013b452 : and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009ef34 : and al, 0x40 ; add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x000002000015cb42 : and al, 0x40 ; add rsp, 0x50 ; call r10
0x000002000044617a : and al, 0x40 ; call 0x20000068fd5
0x0000020000446179 : and al, 0x40 ; call 0x20000068fd6
0x00000200004f7079 : and al, 0x40 ; call 0x20000120f39
0x000002000051fd82 : and al, 0x40 ; call 0x2000014dc05
0x000002000051fd81 : and al, 0x40 ; call 0x2000014dc06
0x00000200005337fc : and al, 0x40 ; call 0x2000015dcc1
0x00000200005337fb : and al, 0x40 ; call 0x2000015dcc2
0x00000200000d1a3f : and al, 0x40 ; call 0x2000044cb50
0x00000200000d1a3e : and al, 0x40 ; call 0x2000044cb51
0x0000020000486ea1 : and al, 0x40 ; call 0x200005d3160
0x0000020000486ea0 : and al, 0x40 ; call 0x200005d3161
0x0000020000139649 : and al, 0x40 ; call qword ptr [rbx]
0x00000200001d2608 : and al, 0x40 ; call r9
0x000002000046c118 : and al, 0x40 ; call rax
0x00000200004f709c : and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x200004f7040
0x00000200004b8738 : and al, 0x40 ; inc edx ; jmp 0x200004b86f7
0x0000020000451903 : and al, 0x40 ; jmp 0x20000451512
0x00000200004e2a4b : and al, 0x40 ; jmp 0x200004e2a15
0x000002000072c0a1 : and al, 0x40 ; jmp 0x2000072c06b
0x000002000022bd87 : and al, 0x40 ; jmp rax
0x000002000009d664 : and al, 0x40 ; mov al, dl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cf1f8 : and al, 0x40 ; mov dword ptr [r10], eax ; call r10
0x000002000064aefe : and al, 0x40 ; mov dword ptr [rsp + 0x54], r10d ; call rax
0x0000020000515ac8 : and al, 0x40 ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000070541 : and al, 0x40 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040fea8 : and al, 0x40 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000100712 : and al, 0x40 ; mov eax, edx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022bccc : and al, 0x40 ; mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x00000200004021a0 : and al, 0x40 ; mov rcx, qword ptr [rcx + 0x30] ; call 0x20000031499
0x000002000040211b : and al, 0x40 ; mov rcx, qword ptr [rdi + 0x30] ; call 0x20000030f79
0x00000200004a5ea8 : and al, 0x40 ; mov rcx, qword ptr [rsp + 0x60] ; call r15
0x0000020000533077 : and al, 0x40 ; mov rcx, rdi ; call 0x2000015dcc4
0x00000200006f567e : and al, 0x40 ; movzx ecx, bx ; call rax
0x00000200004a37ac : and al, 0x40 ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000035e4d : and al, 0x40 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043ccd6 : and al, 0x40 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000008cb8f : and al, 0x40 ; xor rcx, rsp ; call 0x20000148e17
0x000002000008cb8e : and al, 0x40 ; xor rcx, rsp ; call 0x20000148e18
0x00000200005190ee : and al, 0x40 ; xor rcx, rsp ; call 0x20000148e19
0x0000020000113ede : and al, 0x41 ; add byte ptr [rax + 0xb], cl ; ret
0x00000200001da6db : and al, 0x41 ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200000faa1a : and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x000002000053817f : and al, 0x42 ; add byte ptr [rdi], cl ; test byte ptr [rbx], bl ; ret
0x00000200001f0924 : and al, 0x44 ; adc al, 0 ; add byte ptr [rax], al ; call 0x2000008cc1c
0x00000200001f0923 : and al, 0x44 ; adc al, 0 ; add byte ptr [rax], al ; call 0x2000008cc1d
0x00000200004c6c48 : and al, 0x44 ; add al, 0x75 ; add eax, 0x58c48348 ; ret
0x00000200001798c1 : and al, 0x44 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xb60f
0x000002000040ca48 : and al, 0x45 ; ret 0x49ff
0x00000200006d6c91 : and al, 0x48 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200000cba0a : and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000056543b : and al, 0x48 ; add eax, dword ptr [rax] ; add cl, al ; jmp 0x20000565458
0x00000200005cc7d2 : and al, 0x48 ; add esp, 0x18 ; ret
0x00000200000fe928 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000200001bdba7 : and al, 0x48 ; add rsp, 0x20 ; pop r12 ; ret
0x0000020000420bb8 : and al, 0x48 ; add rsp, 0x20 ; pop r13 ; ret
0x000002000066f5f1 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; jmp rax
0x0000020000026ec6 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000a351d : and al, 0x48 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000049a333 : and al, 0x48 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000068146f : and al, 0x48 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000234078 : and al, 0x48 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200001096ac : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000139637 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000036418 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000703b7 : and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000096772 : and al, 0x48 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200005088f4 : and al, 0x48 ; add rsp, 0x28 ; ret
0x00000200000bbf3f : and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000366b43 : and al, 0x48 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000432508 : and al, 0x48 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000677948 : and al, 0x48 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000026db0 : and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c1895 : and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000042e546 : and al, 0x48 ; add rsp, 0x38 ; ret
0x000002000058cd5f : and al, 0x48 ; call 0x20000068fd4
0x000002000058cd5e : and al, 0x48 ; call 0x20000068fd5
0x00000200005c3b21 : and al, 0x48 ; call 0x2000006fe24
0x00000200005c3b20 : and al, 0x48 ; call 0x2000006fe25
0x00000200004cfbc8 : and al, 0x48 ; call 0x200000f5bf1
0x00000200004cfbc7 : and al, 0x48 ; call 0x200000f5bf2
0x000002000050e923 : and al, 0x48 ; call 0x20000139499
0x000002000048e882 : and al, 0x48 ; call 0x200003cab14
0x000002000048e881 : and al, 0x48 ; call 0x200003cab15
0x0000020000390210 : and al, 0x48 ; jmp 0x200003901da
0x00000200003fad14 : and al, 0x48 ; jmp 0x200003fad22
0x00000200003fad13 : and al, 0x48 ; jmp 0x200003fad23
0x0000020000575256 : and al, 0x48 ; jmp 0x2000045146e
0x0000020000575255 : and al, 0x48 ; jmp 0x2000045146f
0x00000200004b3e7d : and al, 0x48 ; jmp 0x200004b3edb
0x000002000066222d : and al, 0x48 ; jmp rax
0x0000020000110d41 : and al, 0x48 ; lea edx, dword ptr [rip - 0x10dc39] ; jmp 0x20000110d17
0x00000200004f3298 : and al, 0x48 ; lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200004682bb : and al, 0x48 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004b8087 : and al, 0x48 ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000040133a : and al, 0x48 ; mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010795f : and al, 0x48 ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e29f6 : and al, 0x48 ; mov eax, ecx ; ret
0x00000200000e3939 : and al, 0x48 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003673c4 : and al, 0x48 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004474f5 : and al, 0x48 ; mov rcx, qword ptr [rcx] ; call 0x200000690a8
0x00000200004474f4 : and al, 0x48 ; mov rcx, qword ptr [rcx] ; call 0x200000690a9
0x0000020000486e9c : and al, 0x48 ; mov rcx, qword ptr [rsp + 0x40] ; call 0x200005d3165
0x0000020000151d29 : and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x000002000019ce96 : and al, 0x48 ; mov rcx, rbx ; call 0x200001d9193
0x0000020000220408 : and al, 0x48 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000068e6f : and al, 0x48 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000335e9 : and al, 0x48 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001f8be1 : and al, 0x48 ; xor edx, edx ; call 0x20000294e26
0x00000200001f8be0 : and al, 0x48 ; xor edx, edx ; call 0x20000294e27
0x0000020000085c7f : and al, 0x4c ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x00000200003f2918 : and al, 0x4c ; add rsp, 0x50 ; pop rbx ; ret
0x000002000057112f : and al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x0000020000114d71 : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x0000020000168b81 : and al, 0x50 ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0x12
0x00000200003872fb : and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001351d9 : and al, 0x50 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000002715d : and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000036fb72 : and al, 0x50 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006cf208 : and al, 0x50 ; add rsp, 0x30 ; pop rcx ; ret
0x000002000066bd0b : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200001e982b : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000271b5 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046f68c : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000008dd66 : and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200006f7a8d : and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000558a7 : and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000295a57 : and al, 0x50 ; add rsp, 0x70 ; pop rdi ; ret
0x000002000041e1c9 : and al, 0x50 ; call 0x20000045495
0x000002000041e1c8 : and al, 0x50 ; call 0x20000045496
0x00000200003d33ee : and al, 0x50 ; call 0x2000007290c
0x00000200003d33ed : and al, 0x50 ; call 0x2000007290d
0x00000200004ac164 : and al, 0x50 ; call 0x20000158374
0x00000200003f608e : and al, 0x50 ; call 0x200003c2354
0x00000200003f608d : and al, 0x50 ; call 0x200003c2355
0x00000200005af5c5 : and al, 0x50 ; call r8
0x0000020000151d2e : and al, 0x50 ; call rdx
0x000002000063bc12 : and al, 0x50 ; inc edx ; jmp 0x2000063bbe7
0x000002000063bc11 : and al, 0x50 ; inc edx ; jmp 0x2000063bbe8
0x000002000003e9b2 : and al, 0x50 ; jmp 0x2000003e1c6
0x0000020000175539 : and al, 0x50 ; jmp 0x20000061843
0x0000020000175538 : and al, 0x50 ; jmp 0x20000061844
0x00000200001a8349 : and al, 0x50 ; jmp 0x2000010e614
0x00000200006102d7 : and al, 0x50 ; jmp qword ptr [rcx]
0x000002000022bcd1 : and al, 0x50 ; jmp rax
0x00000200000f4794 : and al, 0x50 ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000010c2b7 : and al, 0x50 ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001425bc : and al, 0x50 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bd4fb : and al, 0x50 ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003946d : and al, 0x50 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009172c : and al, 0x50 ; mov eax, edx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004397d4 : and al, 0x50 ; mov ebx, eax ; call 0x20000068fd7
0x00000200004397d3 : and al, 0x50 ; mov ebx, eax ; call 0x20000068fd8
0x0000020000444736 : and al, 0x50 ; mov qword ptr [rax], rcx ; jmp 0x20000444706
0x0000020000444735 : and al, 0x50 ; mov qword ptr [rax], rcx ; jmp 0x20000444707
0x0000020000227c02 : and al, 0x50 ; mov rcx, r13 ; call 0x20000213e2b
0x0000020000227c01 : and al, 0x50 ; mov rcx, r13 ; call 0x20000213e2c
0x000002000043b10f : and al, 0x50 ; mov rcx, rbx ; call 0x20000068fd8
0x00000200003b193b : and al, 0x50 ; mov rcx, rbx ; call r15
0x00000200004d5abd : and al, 0x50 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d214d : and al, 0x50 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000044cb26 : and al, 0x50 ; xor rcx, rsp ; call 0x20000148e17
0x000002000044cb25 : and al, 0x50 ; xor rcx, rsp ; call 0x20000148e18
0x000002000051c139 : and al, 0x50 ; xor rcx, rsp ; call 0x20000148e19
0x00000200001e6fc6 : and al, 0x54 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000064af03 : and al, 0x54 ; call rax
0x00000200004077fb : and al, 0x54 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006d9684 : and al, 0x58 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000510f07 : and al, 0x58 ; add al, byte ptr [rax] ; add al, ch ; int 0xc3
0x0000020000566b00 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000ab7cf : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x000002000070780a : and al, 0x58 ; add r13d, ebx ; call 0x200003f3a5f
0x0000020000707809 : and al, 0x58 ; add r13d, ebx ; call 0x200003f3a60
0x00000200005d3690 : and al, 0x58 ; add rsp, 0x30 ; pop r12 ; ret
0x0000020000032f67 : and al, 0x58 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000097862 : and al, 0x58 ; add rsp, 0x30 ; pop r15 ; ret
0x000002000022a4bd : and al, 0x58 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000091228 : and al, 0x58 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200002067eb : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009395a : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000063a1f : and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000003ccb4 : and al, 0x58 ; add rsp, 0x38 ; ret
0x000002000011a54b : and al, 0x58 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000013a774 : and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000024948 : and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006d170d : and al, 0x58 ; call r10
0x00000200003ffe84 : and al, 0x58 ; call rax
0x0000020000071dbd : and al, 0x58 ; jmp 0x20000071c76
0x0000020000071dbc : and al, 0x58 ; jmp 0x20000071c77
0x0000020000139644 : and al, 0x58 ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x00000200000e7cb5 : and al, 0x58 ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001fd8c1 : and al, 0x58 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000037e3cd : and al, 0x58 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000038ae1d : and al, 0x58 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006f5cc7 : and al, 0x58 ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000066d128 : and al, 0x59 ; ret
0x00000200005c32e8 : and al, 0x5b ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200000588c9 : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000441ebb : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e7d79 : and al, 0x60 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000051953d : and al, 0x60 ; add rsp, 0x40 ; pop r15 ; ret
0x000002000038e9af : and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000047c8b7 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000004c3f0 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f677f : and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000047ec28 : and al, 0x60 ; add rsp, 0x48 ; ret
0x000002000008e5eb : and al, 0x60 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001280da : and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000068a5e5 : and al, 0x60 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000008cb9c : and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200000649da : and al, 0x60 ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200003d36bf : and al, 0x60 ; call 0x200000712d4
0x00000200003d36be : and al, 0x60 ; call 0x200000712d5
0x00000200001dab51 : and al, 0x60 ; call 0x200001cbd21
0x0000020000417d5c : and al, 0x60 ; call 0x20000294004
0x00000200000f50a5 : and al, 0x60 ; call qword ptr [rdi]
0x00000200006d0e00 : and al, 0x60 ; call r10
0x00000200004a5ead : and al, 0x60 ; call r15
0x0000020000147f65 : and al, 0x60 ; jmp 0x20000147e34
0x0000020000147f64 : and al, 0x60 ; jmp 0x20000147e35
0x000002000009b9ba : and al, 0x60 ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d7a87 : and al, 0x60 ; mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001cbecb : and al, 0x60 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000417f83 : and al, 0x60 ; mov eax, ecx ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001ecc80 : and al, 0x60 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004afd3c : and al, 0x60 ; mov eax, edx ; add rsp, 0x40 ; pop rdi ; ret
0x000002000061d27f : and al, 0x60 ; mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x00000200006f1a1c : and al, 0x60 ; mov qword ptr [rsp + 0x20], rax ; call 0x2000014dce9
0x0000020000513229 : and al, 0x60 ; mov rbx, rcx ; call 0x2000013a6b8
0x0000020000516444 : and al, 0x60 ; mov rcx, r9 ; call 0x2000013c0e8
0x00000200004aaaf3 : and al, 0x60 ; mov rcx, rbx ; call rsi
0x00000200003c65bd : and al, 0x60 ; mov rcx, rdi ; call r15
0x00000200004f28ad : and al, 0x60 ; mov word ptr [rbp - 0x78], ax ; call 0x200004aeaf8
0x00000200000d1128 : and al, 0x60 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000448d3e : and al, 0x68 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200000cb1cf : and al, 0x68 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000cbf0b : and al, 0x68 ; add al, byte ptr [rax] ; add cl, ch ; ret
0x00000200005de074 : and al, 0x68 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009b187 : and al, 0x68 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000009438d : and al, 0x68 ; add rsp, 0x40 ; pop r15 ; ret
0x000002000021f4b8 : and al, 0x68 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000447d96 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000097124 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004ddbd0 : and al, 0x68 ; add rsp, 0x48 ; ret
0x0000020000122934 : and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x0000020000232f81 : and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000090b60 : and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000070d7bb : and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004aa571 : and al, 0x68 ; mov eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200005619c4 : and al, 0x68 ; mov ebx, eax ; call 0x2000014dc06
0x00000200005619c3 : and al, 0x68 ; mov ebx, eax ; call 0x2000014dc07
0x0000020000672aee : and al, 0x68 ; mov qword ptr [rcx + 0x58], rax ; ret
0x00000200004028c2 : and al, 0x68 ; mov qword ptr [rsp + 0x20], r13 ; call rax
0x00000200004fa0bc : and al, 0x68 ; mov rcx, rdi ; call 0x20000120f3c
0x000002000058cd50 : and al, 0x68 ; test rcx, rcx ; je 0x2000058cd65 ; call 0x20000068fd9
0x000002000058cdbe : and al, 0x68 ; test rcx, rcx ; je 0x2000058cdda ; call 0x20000068fd9
0x0000020000427397 : and al, 0x68 ; xor edx, edx ; call r11
0x000002000026d2c4 : and al, 0x6d ; add byte ptr [rip - 0x5bffb390], r8b ; ret 0x26
0x00000200004a4e47 : and al, 0x70 ; add dword ptr [rax], eax ; add byte ptr [rbx], cl ; fldpi ; ret
0x000002000037d20c : and al, 0x70 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000121a01 : and al, 0x70 ; add rsp, 0x50 ; pop r12 ; ret
0x00000200000e4780 : and al, 0x70 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200005cb709 : and al, 0x70 ; add rsp, 0x50 ; pop r15 ; ret
0x00000200000b9ee9 : and al, 0x70 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000334a0 : and al, 0x70 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000020086c : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d50c1 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001cd4e8 : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000127ea3 : and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000082241 : and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003b65b1 : and al, 0x70 ; jmp 0x200003b62ab
0x00000200005744e4 : and al, 0x70 ; jmp 0x2000044fa48
0x00000200005744e3 : and al, 0x70 ; jmp 0x2000044fa49
0x000002000057549e : and al, 0x70 ; jmp 0x200005754ac
0x000002000040b9b3 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000040db12 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000044b145 : and al, 0x70 ; mov rcx, rbp ; call rsi
0x0000020000214d97 : and al, 0x70 ; mov rcx, rsi ; call r9
0x0000020000516cd8 : and al, 0x70 ; ret
0x00000200005dfe97 : and al, 0x70 ; xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000200004e401d : and al, 0x70 ; xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000214de7 : and al, 0x70 ; xor ecx, ecx ; call r9
0x00000200004ee570 : and al, 0x74 ; or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051185b : and al, 0x78 ; add al, byte ptr [rax] ; add al, ch ; cli ; ret
0x00000200004a4dc5 : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200001ed308 : and al, 0x78 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001d4b10 : and al, 0x78 ; add rsp, 0x50 ; pop r15 ; ret
0x0000020000038ddd : and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000049edeb : and al, 0x78 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003cc77 : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000128044 : and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000909f3 : and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000039cdb1 : and al, 0x78 ; call 0x20000068fd4
0x000002000039cdb0 : and al, 0x78 ; call 0x20000068fd5
0x0000020000446f6e : and al, 0x78 ; call 0x20000068fd6
0x00000200003bcbdc : and al, 0x78 ; call 0x200003b8e54
0x0000020000149aa7 : and al, 0x78 ; call r11
0x0000020000446fdb : and al, 0x78 ; mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x0000020000668b17 : and al, 0x78 ; mov eax, edi ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000446ee8 : and al, 0x78 ; mov ebx, eax ; call 0x20000068fd7
0x0000020000446ee7 : and al, 0x78 ; mov ebx, eax ; call 0x20000068fd8
0x00000200005fe3d0 : and al, 0x78 ; mov edx, edi ; call 0x20000225197
0x00000200004ee222 : and al, 0x78 ; xor al, al ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000601fde : and al, 0x78 ; xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x000002000051ffa3 : and al, 0x78 ; xor rcx, rsp ; call 0x20000148e18
0x000002000051ffa2 : and al, 0x78 ; xor rcx, rsp ; call 0x20000148e19
0x00000200001472a7 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005fccb4 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret 0xb60b
0x000002000042a700 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret 0xf79b
0x000002000039e6ec : and al, 0x80 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000e4968 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000051fbb2 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000009ecc7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000454000 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r15
0x000002000020cfa6 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000638dee : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000002000011df45 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000046733e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000057462c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000020d978 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200004abcc3 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xffe2
0x00000200000717ee : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000045bd56 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xffb9
0x00000200000abff7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200000f9454 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000200003f98be : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b48
0x0000020000469c08 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000071c75 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004a8f60 : and al, 0x80 ; add eax, dword ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0xc503
0x00000200000cfa76 : and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200001cff36 : and al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200006372af : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000457694 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 0xf5b7
0x000002000062038c : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000050c8ce : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d6ba4 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000050c910 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000050f960 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001aa368 : and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200001069f9 : and al, 0x8b ; ret
0x00000200006420e7 : and al, 0x8b ; ret 0x3844
0x0000020000633484 : and al, 0x8b ; ret 0x8d4c
0x000002000007ce7a : and al, 0x8b ; ret 0xe183
0x00000200001751f1 : and al, 0x8c ; jmp 0x20000061039
0x00000200001ab615 : and al, 0x8d ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000003434f : and al, 0x90 ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x000002000064d7be : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000110ad1 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006c9b6 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000012a416 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000056f35f : and al, 0x90 ; add byte ptr [rax], al ; add cl, ch ; ret 0xed23
0x00000200000d3182 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000453495 : and al, 0x94 ; add byte ptr [rax], al ; add bl, ch ; out 0x8b, al ; ret 0x4166
0x00000200004a195e : and al, 0x94 ; add dword ptr [rax], eax ; add al, ch ; pop rax ; ret 0xffcb
0x00000200004310e8 : and al, 0x95 ; ret
0x0000020000100d6f : and al, 0x97 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000086190 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb9
0x0000020000213b31 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc169fdd1
0x0000020000365028 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003dbdcd : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001f558b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200003ec5a4 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000033962 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8948
0x00000200001c68fc : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000483cc8 : and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000038572b : and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000002000039f7e9 : and al, 0x98 ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200001a14e4 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa277
0x0000020000049a88 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; xor edi, edi ; ret
0x000002000006b612 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000169ff8 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000384cf6 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x99e8
0x00000200004534ea : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xbee9
0x00000200000d37cd : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x000002000050ccff : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000652d6f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200002376ba : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000443146 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200003b70f9 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000002575b : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x0000020000025786 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000257a3 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000200000257c0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200000257e0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x0000020000025800 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200003b0eb8 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4950
0x00000200006119fd : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200001b4b58 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200000bc79d : and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000017de99 : and al, 0xaf ; out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000057181c : and al, 0xb0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200002109b2 : and al, 0xb0 ; add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x00000200000c70b7 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4789
0x000002000017bc6d : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200006119ed : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x00000200000642da : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004fa42c : and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000128657 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x00000200003d722f : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000222831 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rbp + 0xb], cl ; ret 0x8948
0x00000200000b021a : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x54], cl ; ret 0x508
0x0000020000484ece : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200000976ff : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x3345
0x00000200001ae7b6 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000044f7b2 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdx - 0x77], cl ; ret 0x4218
0x00000200003cc3cb : and al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000e1e4c : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000049b9b : and al, 0xb9 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000168aba : and al, 0xbc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x0000020000456fb3 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000020d874 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000061d5da : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000052054c : and al, 0xc0 ; mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x0000020000109fa7 : and al, 0xc2 ; mov eax, 0xc000025f ; ret
0x00000200000cb024 : and al, 0xc8 ; add al, byte ptr [rax] ; add al, ch ; ret 0x21
0x00000200000cb2d8 : and al, 0xc8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000455b98 : and al, 0xc8 ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfff8
0x000002000061d82c : and al, 0xc8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x00000200003d5278 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x00000200000d365d : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000034a9c : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200003a146b : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000584858 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000615bf : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005e2977 : and al, 0xcb ; inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000100944 : and al, 0xce ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200003a6d0a : and al, 0xd0 ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7503
0x00000200000c5fa3 : and al, 0xd0 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003f3790 : and al, 0xd0 ; add byte ptr [rax], al ; add al, ch ; ret 1
0x000002000068c10b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481c
0x00000200003f85a4 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200006e9681 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x2f], al ; ret 0x68e9
0x00000200006e9629 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xe904
0x00000200006e97d0 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xeb07
0x00000200006346c6 : and al, 0xd0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200006cd2cb : and al, 0xd0 ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000065a7f4 : and al, 0xd2 ; ret
0x00000200000eb26e : and al, 0xd3 ; mov eax, 0xc000025f ; ret
0x0000020000194744 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; ret 0xec10
0x00000200001691fe : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200001282fc : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xf6b9
0x000002000062b4e8 : and al, 0xd9 ; mov cl, 0xff ; add rsp, 0x68 ; ret
0x00000200004cd198 : and al, 0xe0 ; add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; popfq ; ret 0xe9ff
0x000002000061740a : and al, 0xe0 ; add byte ptr [rax], al ; add bh, bh ; ret 0x5ee8
0x00000200001f4d10 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba48
0x00000200000861cc : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200001104db : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], cl ; ret
0x00000200003f872d : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rdx + rdx*2 - 0x75], dh ; ret
0x0000020000533347 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000270f38 : and al, 0xe5 ; adc dword ptr [rax], eax ; out 0x11, al ; add byte ptr [rax], bl ; jmp qword ptr [rsi]
0x00000200005f1ed3 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x00000200006169bd : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4e
0x000002000003ea51 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000645f17 : and al, 0xe8 ; ret
0x00000200000ecaed : and al, 0xeb ; ret
0x000002000002dee0 : and al, 0xeb ; sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000013308e : and al, 0xf ; mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x000002000060db0c : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000570a61 : and al, 0xf0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200006c5129 : and al, 0xf0 ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000157db1 : and al, 0xf0 ; pop rbx ; ret
0x0000020000157d04 : and al, 0xf0 ; ret
0x00000200000ca887 : and al, 0xf4 ; dec dword ptr [rcx + 0x3b] ; ret 0x1274
0x000002000008915d : and al, 0xf6 ; ret
0x000002000017b8de : and al, 0xf6 ; ret 0x7402
0x000002000007b280 : and al, 0xf6 ; ret 0x740f
0x00000200001070f9 : and al, 0xf6 ; ret 0x7503
0x00000200004a126b : and al, 0xf6 ; ret 0xf08
0x00000200001c5640 : and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200001ba228 : and al, 0xf8 ; push rsi ; ret
0x00000200006cd5ae : and al, 0xfc ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200000d5687 : and al, 0xfd ; or al, dl ; jmp 0x200000d562e
0x00000200003d9509 : and al, 0xff ; ret
0x000002000009c0cc : and al, 0xff ; ret 0x8348
0x0000020000472437 : and al, 0xff ; ret 0xbdeb
0x00000200001396b1 : and al, 1 ; add byte ptr [rax], al ; ret
0x00000200000f831c : and al, 1 ; jmp 0x200000f8032
0x0000020000644d9e : and al, 1 ; mov al, r8b ; ret
0x000002000042693c : and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x00000200000a63a2 : and al, 1 ; ret
0x00000200000917b5 : and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x000002000010bb4b : and al, 2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000066ec9e : and al, 2 ; add byte ptr [rax], al ; ret
0x0000020000236bf5 : and al, 3 ; ret
0x000002000000e1ed : and al, 7 ; sahf ; ret
0x00000200000bc986 : and al, 8 ; cmp eax, r8d ; jb 0x200000bc977 ; ret
0x00000200000bc985 : and al, 8 ; cmp eax, r8d ; jb 0x200000bc978 ; ret
0x00000200001f34f2 : and al, 8 ; cmp rdx, rcx ; jg 0x200001f3505 ; xor eax, eax ; ret
0x000002000065118e : and al, 8 ; jae 0x2000065119d ; or eax, 0xffffffff ; ret
0x000002000065118d : and al, 8 ; jae 0x2000065119e ; or eax, 0xffffffff ; ret
0x00000200001f3549 : and al, 8 ; jle 0x200001f3502 ; mov eax, 1 ; ret
0x000002000008e4e8 : and al, 8 ; mov al, dl ; ret
0x00000200000b8579 : and al, 8 ; mov al, r9b ; ret
0x00000200000fcd44 : and al, 8 ; mov byte ptr [r11 + 0xc9], al ; ret
0x00000200006433e8 : and al, 8 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000023964f : and al, 8 ; mov eax, ecx ; ret
0x000002000023252b : and al, 8 ; mov eax, edx ; ret
0x000002000012dee5 : and al, 8 ; mov eax, r10d ; ret
0x000002000009d44e : and al, 8 ; mov eax, r11d ; ret
0x00000200001be125 : and al, 8 ; mov eax, r8d ; ret
0x00000200000e1b21 : and al, 8 ; mov eax, r9d ; ret
0x000002000008fe72 : and al, 8 ; mov qword ptr [r8], r10 ; ret
0x000002000020ee53 : and al, 8 ; mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x00000200001359a2 : and al, 8 ; mov rax, r11 ; ret
0x00000200004d8373 : and al, 8 ; mov rax, r8 ; ret
0x00000200001420d8 : and al, 8 ; mov rax, r9 ; ret
0x0000020000410708 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; mov eax, ecx ; ret
0x00000200006195d1 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; mov eax, r10d ; ret
0x00000200000355d4 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; mov rax, rdx ; ret
0x00000200000295fb : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000ebbe7 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; xor eax, eax ; ret
0x000002000010021f : and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x00000200006113aa : and al, 8 ; movzx eax, r9w ; ret
0x00000200000ac80d : and al, 8 ; or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x000002000008ea09 : and al, 8 ; ret
0x00000200003dadff : and al, 8 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003daebc : and al, 8 ; ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200004acd93 : and al, 8 ; sbb eax, eax ; and eax, 0x80000005 ; ret
0x000002000065119b : and al, 8 ; seta cl ; mov eax, ecx ; ret
0x000002000047ffcb : and al, 8 ; test r8d, r8d ; js 0x2000047ffde ; xor eax, eax ; ret
0x000002000023694d : and al, 8 ; xor eax, eax ; ret
0x000002000015015a : and al, ah ; add byte ptr [rax], al ; ret
0x000002000015055a : and al, al ; add byte ptr [rax], al ; ret
0x00000200000332c1 : and al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f1ca1 : and al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000238a5e : and al, al ; cmp al, 2 ; jae 0x20000238a6f ; xor eax, eax ; ret
0x00000200001aae81 : and al, al ; jmp 0x200001161f3
0x00000200001c922b : and al, al ; jmp 0x200001c91f4
0x00000200001dc745 : and al, al ; mov eax, r10d ; ret
0x0000020000443c0d : and al, al ; mov rcx, rbp ; call 0x2000006a618
0x000002000045e393 : and al, al ; mov rcx, rdi ; call 0x2000006a617
0x00000200000b28f2 : and al, al ; movzx ecx, cl ; mov cr8, rcx ; ret
0x000002000003335d : and al, al ; ret
0x000002000014fe5a : and al, bh ; add byte ptr [rax], al ; ret
0x000002000015025a : and al, bl ; add byte ptr [rax], al ; ret
0x00000200000bd105 : and al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000af61 : and al, bl ; jmp qword ptr [rcx]
0x00000200000ec304 : and al, bl ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x00000200004895a8 : and al, bl ; mov byte ptr [rdx], al ; jne 0x200004895b9 ; xor eax, eax ; ret
0x00000200003745bd : and al, bl ; mov cr3, rax ; add rsp, 0x28 ; ret
0x0000020000055db3 : and al, bl ; mov cr3, rax ; ret
0x0000020000159211 : and al, bl ; ret
0x00000200005204d9 : and al, bpl ; loopne 0x200005204b9 ; ret
0x0000020000534505 : and al, bpl ; mov ah, 0x96 ; ret 0x48ff
0x0000020000537303 : and al, bpl ; mov dh, 0x68 ; ret 0x48ff
0x00000200001d0df7 : and al, bpl ; ret 0xf8cd
0x00000200004e1bc5 : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051e139 : and al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x000002000058ff8c : and al, byte ptr [rax] ; add al, al ; jmp 0x200004ac253
0x00000200004f3dbe : and al, byte ptr [rax] ; add al, al ; jmp 0x200004f3d8b
0x0000020000033865 : and al, byte ptr [rax] ; add al, al ; ret
0x00000200000ff592 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000024b578 : and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; ret
0x0000020000272874 : and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; ret 0x4d
0x0000020000253868 : and al, byte ptr [rax] ; add byte ptr [rax], al ; cld ; rol dword ptr [rdx], -0x15 ; ret
0x00000200002714b4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; cmp dl, 0x11 ; add byte ptr [rbx], dh ; call qword ptr [rcx]
0x000002000026dde8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; cwde ; call qword ptr [rax]
0x0000020000250840 : and al, byte ptr [rax] ; add byte ptr [rax], al ; enter 0x40e3, 0 ; ret 0x40e4
0x000002000024b88c : and al, byte ptr [rax] ; add byte ptr [rax], al ; enter 0x9c1, 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x0000020000273c18 : and al, byte ptr [rax] ; add byte ptr [rax], al ; fadd st(1), st(0) ; add dl, bl ; ret 0x36
0x0000020000249b74 : and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; pop rbx ; or dword ptr [rax], eax ; ret
0x0000020000275de4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000027a960 : and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ror dword ptr [rdi], -0x5d ; ret 0x4f
0x0000020000265a3c : and al, byte ptr [rax] ; add byte ptr [rax], al ; in al, dx ; or byte ptr [rdx], cl ; ret
0x0000020000253894 : and al, byte ptr [rax] ; add byte ptr [rax], al ; in al, dx ; ret
0x000002000026b04c : and al, byte ptr [rax] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret
0x0000020000248a78 : and al, byte ptr [rax] ; add byte ptr [rax], al ; js 0x20000248a64 ; or byte ptr [rax], al ; ret
0x000002000023fa58 : and al, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x2000023fa79 ; cmp eax, dword ptr [rax] ; ret
0x000002000026dd2c : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov ch, bh ; adc byte ptr [rax], al ; ret
0x0000020000272854 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xf6004dc2 ; ret 0x4d
0x000002000027a980 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov esp, 0x92004fc2 ; ret
0x0000020000278870 : and al, byte ptr [rax] ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; shr dword ptr [rax], 0x56 ; ret 0x68
0x0000020000248610 : and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret
0x0000020000275e10 : and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x4e
0x0000020000279c64 : and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x6f
0x000002000028185c : and al, byte ptr [rax] ; add byte ptr [rax], al ; or cl, al ; push rcx ; add byte ptr [rcx], dl ; ret 0x51
0x000002000026265c : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x00000200002788bc : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret 0x68
0x000002000023eacc : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rsp ; ret
0x000002000027cb60 : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rsp ; ret 0x70
0x000002000024113c : and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rsp ; rol byte ptr [rax + rax], 0x5e ; ret
0x000002000025920c : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000281920 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x51
0x00000200002557f8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xb
0x0000020000275560 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ror dl, 1 ; adc al, byte ptr [rax] ; ret
0x000002000027ef04 : and al, byte ptr [rax] ; add byte ptr [rax], al ; sbb dh, dh ; jo 0x2000027ef14 ; ret
0x0000020000248250 : and al, byte ptr [rax] ; add byte ptr [rax], al ; sub al, 0xa2 ; or byte ptr [rax], al ; ret 0x8a2
0x000002000027a9b0 : and al, byte ptr [rax] ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000002000022da2c : and al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x00000200000a9cf3 : and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000159330 : and al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004043e2 : and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x0000020000122087 : and al, byte ptr [rax] ; and dword ptr [rdi], ecx ; test ebx, esp ; ret 8
0x00000200001221bc : and al, byte ptr [rax] ; and dword ptr [rdi], ecx ; test ecx, ecx ; ret 8
0x0000020000129f7d : and al, byte ptr [rax] ; call rax
0x00000200001214ce : and al, byte ptr [rax] ; jne 0x200001adedc ; ret
0x00000200004fc6eb : and al, byte ptr [rax] ; mov eax, 0x8000001a ; ret
0x0000020000209119 : and al, byte ptr [rax] ; mov eax, 0xc0000001 ; ret
0x00000200003753ff : and al, byte ptr [rax] ; mov eax, 0xc00000bb ; ret
0x000002000029052e : and al, byte ptr [rax] ; mov edx, 0xd70022ff ; jmp qword ptr [rdx]
0x000002000012e1bc : and al, byte ptr [rax] ; ret
0x0000020000290532 : and al, byte ptr [rax] ; xlatb ; jmp qword ptr [rdx]
0x000002000013fc65 : and al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000520485 : and al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000195e48 : and al, byte ptr [rbp - 0x7c] ; ret
0x00000200005f9fdf : and al, byte ptr [rbx + 0x3740af8] ; xor eax, eax ; ret
0x000002000007bf8b : and al, byte ptr [rcx + 0x23] ; ret 0xc133
0x0000020000206374 : and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret
0x00000200003fb498 : and al, byte ptr [rcx - 0x75] ; ret 0x8b48
0x00000200000ff4ef : and al, byte ptr [rcx - 0x75] ; ret 0xe8d1
0x000002000019508d : and al, byte ptr [rcx - 0x7f] ; call qword ptr [rdi]
0x0000020000049c76 : and al, byte ptr [rip - 0x49f10000] ; ret
0x000002000007221e : and al, byte ptr [rsi] ; add dh, dh ; ret
0x00000200000f20e9 : and al, ch ; adc eax, 0x8bfffb24 ; ret
0x0000020000508652 : and al, ch ; add al, 0xfa ; ret 0x48ff
0x000002000015005a : and al, ch ; add byte ptr [rax], al ; ret
0x00000200004e0cfe : and al, ch ; add dword ptr [rax], eax ; add bh, bh ; ret
0x0000020000516cd6 : and al, ch ; and al, 0x70 ; ret
0x00000200005f3dc9 : and al, ch ; and eax, 0x8bffdfaf ; ret
0x000002000060a0fb : and al, ch ; and edx, dword ptr [rbp - 0x51] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000047b277 : and al, ch ; call qword ptr [rbx]
0x000002000044100f : and al, ch ; call qword ptr [rcx]
0x0000020000145a75 : and al, ch ; cdq ; int 0xfd
0x000002000051f0be : and al, ch ; cld ; in al, dx ; ret 0x85ff
0x0000020000415e68 : and al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000510bd6 : and al, ch ; fdiv st(6), st(0) ; ret 0x85ff
0x00000200005b955d : and al, ch ; insd dword ptr [rdi], dx ; jmp rax
0x000002000021ed11 : and al, ch ; int 0x3b
0x0000020000219931 : and al, ch ; int1 ; ret 0
0x0000020000505e8c : and al, ch ; jle 0x20000505eab ; ret
0x000002000046d873 : and al, ch ; jmp qword ptr [rbx]
0x00000200004a250f : and al, ch ; jmp rdx
0x00000200005eee95 : and al, ch ; leave ; ret 0xffbe
0x00000200005e3efe : and al, ch ; lodsb al, byte ptr [rsi] ; ret
0x00000200005204da : and al, ch ; loopne 0x200005204b8 ; ret
0x0000020000534506 : and al, ch ; mov ah, 0x96 ; ret 0x48ff
0x000002000051f16a : and al, ch ; mov al, 0xf4 ; ret 0x48ff
0x000002000051e552 : and al, ch ; mov bl, bh ; ret 0x85ff
0x0000020000512385 : and al, ch ; mov ch, 0xbd ; ret
0x00000200004ee18d : and al, ch ; mov ch, 0xff ; ret
0x0000020000537304 : and al, ch ; mov dh, 0x68 ; ret 0x48ff
0x0000020000145b51 : and al, ch ; mov ebp, 0x8bfffdcc ; ret
0x000002000009b16d : and al, ch ; or eax, 0x8bfff981 ; ret
0x0000020000050071 : and al, ch ; or eax, 0xf6001957 ; ret
0x00000200005ccf3b : and al, ch ; outsd dx, dword ptr [rsi] ; ret 0xffa9
0x00000200004b1a5d : and al, ch ; pop rbp ; ret
0x0000020000703b34 : and al, ch ; pop rdx ; ret 0xffd7
0x00000200005085f8 : and al, ch ; pop rsi ; cli ; ret 0x48ff
0x00000200004ee518 : and al, ch ; pop rsi ; ret
0x000002000050198a : and al, ch ; push rax ; ret
0x0000020000234e47 : and al, ch ; push rbx ; ret 0xfff1
0x0000020000516bf8 : and al, ch ; push rdi ; ret 0x48ff
0x0000020000118fb7 : and al, ch ; ret
0x000002000041f1ec : and al, ch ; ret 0
0x0000020000494a14 : and al, ch ; ret 0x14
0x00000200001fbb94 : and al, ch ; ret 0x1b
0x0000020000025350 : and al, ch ; ret 0x35d6
0x00000200003deda8 : and al, ch ; ret 0x818
0x00000200005ca8e8 : and al, ch ; ret 0xa9e8
0x00000200005854d4 : and al, ch ; ret 0xab3f
0x00000200005c4658 : and al, ch ; ret 0xb89f
0x0000020000666a9c : and al, ch ; ret 0xbf
0x000002000070858c : and al, ch ; ret 0xc9ae
0x00000200003e524c : and al, ch ; ret 0xc9cf
0x00000200003ae098 : and al, ch ; ret 0xcbab
0x0000020000700d94 : and al, ch ; ret 0xe059
0x000002000059c690 : and al, ch ; ret 0xe573
0x000002000020314c : and al, ch ; ret 0xe7f0
0x00000200005640e8 : and al, ch ; ret 0xe9c1
0x00000200004c79c4 : and al, ch ; ret 0xee57
0x0000020000455ff8 : and al, ch ; ret 0xf5a1
0x00000200000b3ce4 : and al, ch ; ret 0xf740
0x00000200001d0df8 : and al, ch ; ret 0xf8cd
0x0000020000435908 : and al, ch ; ret 0xf93b
0x00000200001a9cd8 : and al, ch ; ret 0xfa73
0x000002000040bb34 : and al, ch ; ret 0xff88
0x0000020000724e4d : and al, ch ; ret 0xffa2
0x000002000067c2a3 : and al, ch ; ret 0xffa8
0x0000020000707200 : and al, ch ; ret 0xffc9
0x00000200006fd9aa : and al, ch ; ret 0xffdf
0x00000200000f9b34 : and al, ch ; ret 1
0x000002000058e080 : and al, ch ; sbb dh, byte ptr [rax] ; mov esp, 0xf6ccccff ; ret
0x00000200004ac92e : and al, ch ; shl byte ptr [rbx], 0xf4 ; dec dword ptr [rax - 0x75] ; ret
0x000002000059d4c5 : and al, ch ; stc ; ret 0xffef
0x0000020000407e5f : and al, ch ; sti ; ret
0x00000200005dc233 : and al, ch ; stosd dword ptr [rdi], eax ; ret 0xffe3
0x00000200005148cc : and al, ch ; test byte ptr [rax], 0 ; add cl, ch ; ret 0xfffc
0x0000020000446446 : and al, ch ; test byte ptr [rbx], ch ; ret 0x48ff
0x0000020000431726 : and al, ch ; test ch, bl ; ret
0x0000020000144765 : and al, ch ; test eax, 0x8bfffde0 ; ret
0x0000020000724d09 : and al, ch ; xchg eax, ecx ; ret
0x000002000051d4e6 : and al, ch ; xor al, 0x11 ; ret
0x000002000015045a : and al, cl ; add byte ptr [rax], al ; ret
0x000002000000b00f : and al, cl ; call qword ptr [rdx]
0x0000020000102a3a : and al, cl ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011d718 : and al, cl ; mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000096047 : and al, cl ; mov rcx, rax ; call rdx
0x00000200000967df : and al, cl ; ret
0x000002000014ff5a : and al, dh ; add byte ptr [rax], al ; ret
0x000002000015035a : and al, dl ; add byte ptr [rax], al ; ret
0x000002000045e3e4 : and al, dl ; mov rcx, rdi ; call 0x2000006a617
0x00000200000ec303 : and al, r11b ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x00000200004895a7 : and al, r11b ; mov byte ptr [rdx], al ; jne 0x200004895ba ; xor eax, eax ; ret
0x000002000023355c : and bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x0000020000587fbc : and bh, al ; ret
0x0000020000102b2b : and bh, bh ; ret
0x000002000014ab05 : and bh, bh ; ret 0x3b41
0x00000200003e6b03 : and bh, bh ; ret 0x513b
0x00000200001b9b5c : and bh, bh ; ret 0x533b
0x00000200005847f5 : and bh, bh ; ret 0x8349
0x00000200001bf624 : and bh, bh ; ret 0x8948
0x00000200000e1e6a : and bh, byte ptr [rax + 0x10] ; ret
0x0000020000174eee : and bh, byte ptr [rcx - 0x9be0012] ; ret
0x000002000002024a : and bh, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x0000020000471bd4 : and bh, byte ptr [rsi - 0x41aaffa9] ; push rdi ; add byte ptr [rcx], al ; ret
0x000002000044ca1a : and bh, byte ptr [rsi] ; ret 0xe9ff
0x00000200004e0981 : and bh, cl ; dec dword ptr [rax - 0x7d] ; ret
0x000002000014e95a : and bl, ah ; add byte ptr [rax], al ; ret
0x000002000014ed5a : and bl, al ; add byte ptr [rax], al ; ret
0x00000200003745c0 : and bl, al ; add rsp, 0x28 ; ret
0x0000020000055db6 : and bl, al ; ret
0x0000020000389258 : and bl, al ; xor eax, eax ; ret
0x000002000014e65a : and bl, bh ; add byte ptr [rax], al ; ret
0x000002000014ea5a : and bl, bl ; add byte ptr [rax], al ; ret
0x000002000000e22b : and bl, byte ptr [rdi + 0x6670408c] ; mov ch, 0x6e ; ret
0x0000020000709c52 : and bl, byte ptr [rsi - 0x7cf00044] ; ret
0x000002000014e85a : and bl, ch ; add byte ptr [rax], al ; ret
0x000002000047a903 : and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x000002000003ca6f : and bl, ch ; ret 0xc7ff
0x000002000014ec5a : and bl, cl ; add byte ptr [rax], al ; ret
0x000002000014e75a : and bl, dh ; add byte ptr [rax], al ; ret
0x000002000014eb5a : and bl, dl ; add byte ptr [rax], al ; ret
0x000002000057d638 : and bl, dl ; call rcx
0x00000200005804d2 : and bl, dl ; push rsi ; ret
0x0000020000011729 : and bpl, 0xe4 ; ret 0x394e
0x000002000020a1d6 : and byte ptr [r10 + 3], sil ; xor al, al ; ret
0x000002000012ffa8 : and byte ptr [r11 + r9*4 + 0x47], r8b ; sbb byte ptr [rax + 3], cl ; ret
0x00000200002049e9 : and byte ptr [r11], al ; ret 0xc23b
0x00000200003730ae : and byte ptr [r11], bpl ; ret 0xf83b
0x00000200004b1ce0 : and byte ptr [r11], r15b ; ret
0x000002000016449d : and byte ptr [r11], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000163301 : and byte ptr [r11], r9b ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200006515f0 : and byte ptr [r13 + 0x3b], r8b ; ret
0x0000020000100dee : and byte ptr [r13 - 0x77], cl ; ret 0x8b41
0x00000200001f95e8 : and byte ptr [r15 + r9 + 0x20], r8b ; ret
0x00000200005eacee : and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x00000200005d47cb : and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200000bca2e : and byte ptr [r8 + 0x3b], cl ; ret
0x0000020000159ee6 : and byte ptr [r8 + 0xf], cl ; ret
0x00000200000fae7b : and byte ptr [r8 - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000022b233 : and byte ptr [r8 - 0x75], cl ; pop rax ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000468bf7 : and byte ptr [r8 - 0x75], cl ; ret
0x00000200001e0377 : and byte ptr [r8 - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x000002000011cd34 : and byte ptr [r8 - 0x75], r9b ; ret
0x00000200001a514e : and byte ptr [r8 - 0x75], r9b ; sbb dword ptr [rax - 0x75], ecx ; ret
0x000002000014c564 : and byte ptr [r8 - 0x77], cl ; and cl, bpl ; ret 0
0x0000020000083e6e : and byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200006ee532 : and byte ptr [r8 - 0x7d], cl ; ret
0x0000020000611ef1 : and byte ptr [r8 - 0x7d], cl ; ret 0x491c
0x000002000067d4dc : and byte ptr [r8 - 0x7d], r9b ; ret 0x4120
0x000002000003a6e3 : and byte ptr [r8 - 0x7f], r9b ; ret
0x000002000005d9d9 : and byte ptr [r8 - 1], cl ; ret 0x3b4c
0x00000200000b0d70 : and byte ptr [r8 - 9], r9b ; ret 0xfff
0x00000200004a63fc : and byte ptr [r8], al ; movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x0000020000032c43 : and byte ptr [r9 + 0x23], cl ; ret 0x3148
0x000002000071370a : and byte ptr [r9 + 3], cl ; ret 0x3b48
0x000002000050d76a : and byte ptr [r9 - 0x7d], r9b ; ret
0x0000020000622dab : and byte ptr [r9 - 0xa], r8b ; ret 0x7401
0x00000200000ed627 : and byte ptr [rax + 0x23], cl ; ret 0x3348
0x00000200004315bb : and byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200000bca2f : and byte ptr [rax + 0x3b], cl ; ret
0x0000020000039d67 : and byte ptr [rax + 0x3b], cl ; ret 0x2674
0x0000020000729c5e : and byte ptr [rax + 0x3b], cl ; ret 0x267d
0x00000200001023af : and byte ptr [rax + 0x3b], cl ; ret 0x3c73
0x00000200001ed695 : and byte ptr [rax + 0x3b], cl ; ret 0x974
0x00000200001e46be : and byte ptr [rax + 0x3b], cl ; sal dword ptr [rax + rdx + 0x48], -0x75 ; ret
0x000002000037f445 : and byte ptr [rax + 0x44047404], ch ; add dword ptr [rcx + 0x40], ebx ; ret
0x00000200001caca8 : and byte ptr [rax + 0x69], cl ; ret 0x201
0x00000200006ef21f : and byte ptr [rax + 0xb483fe1], al ; ret 0x8b41
0x000002000006ce51 : and byte ptr [rax + 0xb], cl ; enter 0x3b4c, -0x37 ; sbb eax, eax ; ret
0x00000200001efdfa : and byte ptr [rax + 0xb], cl ; ret
0x00000200003750dd : and byte ptr [rax + 0xb], cl ; ret 0x10a8
0x0000020000708ee8 : and byte ptr [rax + 0xb], cl ; ret 0x188
0x000002000012526b : and byte ptr [rax + 0xb], cl ; ret 0x2b48
0x0000020000084e9b : and byte ptr [rax + 0xb], cl ; ret 0x2b49
0x0000020000372cee : and byte ptr [rax + 0xb], cl ; ret 0x3840
0x000002000015c6cb : and byte ptr [rax + 0xb], cl ; ret 0x3948
0x000002000015a05a : and byte ptr [rax + 0xb], cl ; ret 0x3949
0x00000200006f0caa : and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x000002000036c747 : and byte ptr [rax + 0xb], cl ; ret 0x43f7
0x00000200001e01da : and byte ptr [rax + 0xb], cl ; ret 0x48c3
0x0000020000674b80 : and byte ptr [rax + 0xb], cl ; ret 0x48f3
0x00000200000852c8 : and byte ptr [rax + 0xb], cl ; ret 0x548b
0x00000200006fa29a : and byte ptr [rax + 0xb], cl ; ret 0x6348
0x000002000022cddd : and byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200006ef2c0 : and byte ptr [rax + 0xb], cl ; ret 0x83f0
0x0000020000370501 : and byte ptr [rax + 0xb], cl ; ret 0x8441
0x0000020000116923 : and byte ptr [rax + 0xb], cl ; ret 0x8445
0x0000020000385fc0 : and byte ptr [rax + 0xb], cl ; ret 0x8941
0x00000200000430e9 : and byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000084e7e : and byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200001b6496 : and byte ptr [rax + 0xb], cl ; ret 0x8b41
0x0000020000028001 : and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000321ce : and byte ptr [rax + 0xb], cl ; ret 0x8b49
0x00000200006c5a58 : and byte ptr [rax + 0xb], cl ; ret 0x8b4b
0x000002000003bcee : and byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x0000020000378a96 : and byte ptr [rax + 0xb], cl ; ret 0x8ba
0x00000200006cc18b : and byte ptr [rax + 0xb], cl ; ret 0x8d44
0x00000200006c7d18 : and byte ptr [rax + 0xb], cl ; ret 0x8d45
0x00000200006ee94b : and byte ptr [rax + 0xb], cl ; ret 0x8d48
0x0000020000372e85 : and byte ptr [rax + 0xb], cl ; ret 0x8d49
0x000002000015204d : and byte ptr [rax + 0xb], cl ; ret 0x918b
0x0000020000374f12 : and byte ptr [rax + 0xb], cl ; ret 0xb48
0x00000200000d73d8 : and byte ptr [rax + 0xb], cl ; ret 0xba41
0x0000020000703f59 : and byte ptr [rax + 0xb], cl ; ret 0xba48
0x00000200001d830a : and byte ptr [rax + 0xb], cl ; ret 0xc084
0x00000200000cfba9 : and byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000157990 : and byte ptr [rax + 0xb], cl ; ret 0xc35f
0x00000200003f00fd : and byte ptr [rax + 0xb], cl ; ret 0xc833
0x0000020000181f85 : and byte ptr [rax + 0xb], cl ; ret 0xc88b
0x000002000015dd15 : and byte ptr [rax + 0xb], cl ; ret 0xccc3
0x0000020000180c47 : and byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200001aab94 : and byte ptr [rax + 0xb], cl ; ret 0xf48
0x0000020000040196 : and byte ptr [rax + 0xb], cl ; ret 0xffba
0x00000200001c7840 : and byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000060c58 : and byte ptr [rax + 0xb], cl ; ror byte ptr [rcx - 0x75], 1 ; ret 0xc148
0x0000020000159ee7 : and byte ptr [rax + 0xf], cl ; ret
0x00000200000fcf8c : and byte ptr [rax + 0xf], cl ; rol byte ptr [rcx - 1], 1 ; ret
0x00000200001441bb : and byte ptr [rax + 0xffff], bh ; ret
0x00000200006c72da : and byte ptr [rax + 3], cl ; ret
0x00000200006cef81 : and byte ptr [rax + rax], al ; add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000010d106 : and byte ptr [rax + rax], al ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200005b66fd : and byte ptr [rax + rax], bl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200006d527a : and byte ptr [rax + rax], dl ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000051ec2f : and byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x2000014dd08
0x00000200006e9144 : and byte ptr [rax - 0x39], cl ; ret
0x000002000019531b : and byte ptr [rax - 0x39], cl ; ret 0xdfff
0x00000200000780af : and byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000fae7c : and byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005d0062 : and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001e6632 : and byte ptr [rax - 0x5fe571], al ; jmp qword ptr [rax]
0x0000020000718e9c : and byte ptr [rax - 0x73], cl ; and al, 0x28 ; call rax
0x00000200001cc373 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x000002000012e2fc : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x000002000021738d : and byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x00000200001e5a01 : and byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x000002000003a430 : and byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rbp + 0x23] ; ret
0x000002000070b57f : and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200000f4f65 : and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200006403f1 : and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xe9cf
0x00000200004ea9e9 : and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xf432
0x00000200004b46b2 : and byte ptr [rax - 0x75], cl ; int 0xff
0x00000200005f0a25 : and byte ptr [rax - 0x75], cl ; je 0x200005f0a56 ; sub byte ptr [rcx - 0x75], al ; ret
0x000002000008eab0 : and byte ptr [rax - 0x75], cl ; jl 0x2000008eae1 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000102f61 : and byte ptr [rax - 0x75], cl ; jl 0x20000102f92 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200001dc5ab : and byte ptr [rax - 0x75], cl ; jl 0x200001dc5dc ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000021da0d : and byte ptr [rax - 0x75], cl ; jl 0x2000021da3e ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200004822be : and byte ptr [rax - 0x75], cl ; jl 0x200004822ee ; xor cl, ch ; ret
0x00000200004e6307 : and byte ptr [rax - 0x75], cl ; jl 0x200004e6338 ; sub byte ptr [rcx + 0x5f], al ; ret
0x00000200005072de : and byte ptr [rax - 0x75], cl ; jl 0x2000050730f ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200005d04f2 : and byte ptr [rax - 0x75], cl ; jl 0x200005d0523 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200006177a6 : and byte ptr [rax - 0x75], cl ; jl 0x200006177d7 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200000d22e4 : and byte ptr [rax - 0x75], cl ; jmp 0x20048cfae3a
0x0000020000479628 : and byte ptr [rax - 0x75], cl ; or eax, ebp ; wait ; ret 0xffbb
0x000002000022b234 : and byte ptr [rax - 0x75], cl ; pop rax ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200000c2566 : and byte ptr [rax - 0x75], cl ; pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000027235 : and byte ptr [rax - 0x75], cl ; ret
0x00000200001b9d45 : and byte ptr [rax - 0x75], cl ; ret 0x15eb
0x00000200003f997e : and byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000026f61 : and byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000036a2d : and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004ed413 : and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200004ce3b5 : and byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000013d674 : and byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200005939a3 : and byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200000a6f4f : and byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001c5257 : and byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200001cb655 : and byte ptr [rax - 0x75], cl ; ret 0xd98b
0x0000020000096871 : and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x00000200001a514f : and byte ptr [rax - 0x75], cl ; sbb dword ptr [rax - 0x75], ecx ; ret
0x00000200001e0378 : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x000002000003a42f : and byte ptr [rax - 0x75], r9b ; add ecx, dword ptr [rbp + 0x23] ; ret
0x000002000014c565 : and byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0
0x00000200000c334c : and byte ptr [rax - 0x7b], cl ; ret 0x850f
0x0000020000083e6f : and byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001d7ed9 : and byte ptr [rax - 0x7d], cl ; ret
0x000002000067d4dd : and byte ptr [rax - 0x7d], cl ; ret 0x4120
0x00000200004acdfa : and byte ptr [rax - 0x7d], cl ; ret 0x4210
0x00000200003fbde2 : and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200004fbce4 : and byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000020000611ef2 : and byte ptr [rax - 0x7d], cl ; ret 0x491c
0x0000020000140ae1 : and byte ptr [rax - 0x7d], cl ; ret 0x6602
0x00000200004b5420 : and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x000002000003a6e4 : and byte ptr [rax - 0x7f], cl ; ret
0x00000200005e8270 : and byte ptr [rax - 0x7f], cl ; ret 0x2980
0x000002000000a309 : and byte ptr [rax - 1], bl ; adc ah, byte ptr [rax] ; stosb byte ptr [rdi], al ; call qword ptr [rdx]
0x00000200005a68b6 : and byte ptr [rax - 1], cl ; ret 0x39e8
0x000002000005d9da : and byte ptr [rax - 1], cl ; ret 0x3b4c
0x00000200004f4020 : and byte ptr [rax - 1], cl ; ret 0xbe41
0x0000020000141b40 : and byte ptr [rax - 1], cl ; ret 0xff49
0x00000200005a68b5 : and byte ptr [rax - 1], r9b ; ret 0x39e8
0x00000200000266f0 : and byte ptr [rax - 9], cl ; ret 0xfff
0x00000200006cf08e : and byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x000002000010a4f7 : and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x000002000002e2d3 : and byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200006f9148 : and byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000040499c : and byte ptr [rax], ah ; call 0x20000032fc5
0x00000200005f7d7d : and byte ptr [rax], ah ; call 0x20000294004
0x000002000000afbd : and byte ptr [rax], ah ; call qword ptr [rdx]
0x0000020000417d58 : and byte ptr [rax], ah ; mov dword ptr [rsp + 0x60], ebx ; call 0x20000294008
0x00000200006dad96 : and byte ptr [rax], al ; add al, 0x80 ; add byte ptr [rax], dl ; jo 0x200006dad31 ; ret
0x000002000072f048 : and byte ptr [rax], al ; add bl, al ; mov eax, 0x1000 ; ret
0x00000200001cadaa : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001830ee : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200001831a9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xeae8
0x00000200004c03bf : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000596516 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001c09e8
0x00000200001c19c8 : and byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200000e6548 : and byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x574
0x0000020000034e99 : and byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], al ; ret
0x00000200000bfc20 : and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004e482c : and byte ptr [rax], al ; call 0x2000040fc80
0x000002000064e354 : and byte ptr [rax], al ; call r10
0x00000200000a9107 : and byte ptr [rax], al ; je 0x200000a9118 ; mov rax, rcx ; ret
0x000002000065a01c : and byte ptr [rax], al ; je 0x2000065a016 ; mov al, 1 ; ret
0x000002000011f7ea : and byte ptr [rax], al ; jmp 0x2000011f832
0x00000200005ec874 : and byte ptr [rax], al ; mov al, r10b ; ret
0x00000200004a63fd : and byte ptr [rax], al ; movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x0000020000494659 : and byte ptr [rax], al ; or byte ptr [rax], al ; add al, ch ; jge 0x20000494670 ; ret 0x4cff
0x0000020000558b98 : and byte ptr [rax], al ; or byte ptr [rax], al ; add al, ch ; ret 0xffb5
0x00000200000b9bd9 : and byte ptr [rax], al ; ret
0x00000200001383c4 : and byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000afcd : and byte ptr [rax], bh ; call qword ptr [rdx]
0x0000020000012b99 : and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x0000020000672823 : and byte ptr [rax], bl ; ret
0x00000200004321d3 : and byte ptr [rax], ch ; adc byte ptr [rax], al ; add al, ch ; ret
0x000002000013450e : and byte ptr [rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001f09d4 : and byte ptr [rax], dh ; add byte ptr [rax], al ; add al, ch ; ret 0xf606
0x00000200005117a4 : and byte ptr [rax], dl ; add dword ptr [rax], eax ; add al, ch ; mov dl, 0xc8 ; ret
0x00000200006f9147 : and byte ptr [rax], spl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000010a3ce : and byte ptr [rbp + 0x24], dh ; lea eax, dword ptr [rcx + 6] ; ret
0x00000200004c7ab5 : and byte ptr [rbp + 0x3b660553], cl ; ret 0x777
0x00000200006515f1 : and byte ptr [rbp + 0x3b], al ; ret
0x0000020000618877 : and byte ptr [rbp + 0x63], cl ; ret 0x8b49
0x0000020000618876 : and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x00000200003793f8 : and byte ptr [rbp + 0x6d], cl ; outsb dx, byte ptr [rsi] ; movsxd rbp, eax ; ret 0xdabb
0x00000200000df078 : and byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf49
0x00000200000b2804 : and byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x00000200004f926e : and byte ptr [rbp + 3], al ; ret
0x000002000036999f : and byte ptr [rbp + 3], cl ; ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x000002000042afc7 : and byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000147077 : and byte ptr [rbp + rax + 0x41], dh ; or dword ptr [rax], 0xffffffff ; ret
0x000002000008621f : and byte ptr [rbp + rcx*4 + 0x14], cl ; or byte ptr [rcx - 0x75], al ; ret
0x000002000066b87e : and byte ptr [rbp + rcx*4 + 0x3d], cl ; mov dl, 0x71 ; ret
0x00000200006cd58b : and byte ptr [rbp + rcx*4 + 0x43], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x00000200000f50a1 : and byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x60 ; call qword ptr [rdi]
0x00000200006ce1d8 : and byte ptr [rbp + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000036ceb8 : and byte ptr [rbp + rcx*4 + 0x6b], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x00000200003b3d88 : and byte ptr [rbp + rcx*4 + 4], cl ; adc byte ptr [rbp + 3], cl ; ret 0x48d
0x00000200003b3de1 : and byte ptr [rbp + rcx*4 + 4], cl ; adc dword ptr [rbp + 3], ecx ; ret 0xc8d
0x000002000055305b : and byte ptr [rbp - 0x17], dl ; push rsi ; ret
0x00000200005f6d78 : and byte ptr [rbp - 0x3b7cb701], dh ; pop rax ; ret
0x00000200004bbf24 : and byte ptr [rbp - 0x73], al ; add cl, byte ptr [r9 - 0x75] ; iretd ; call rsi
0x00000200004bbc0f : and byte ptr [rbp - 0x73], al ; add dword ptr [r9 - 0x75], ecx ; iretd ; call rsi
0x00000200006e60eb : and byte ptr [rbp - 0x73], cl ; sbb byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200007252d0 : and byte ptr [rbp - 0x74bb8eb6], cl ; ret 0xc4e8
0x00000200006d1ccc : and byte ptr [rbp - 0x75], al ; fiadd dword ptr [rcx + 0x2b] ; fimul dword ptr [rbp + 3] ; ret
0x00000200000a8ba9 : and byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000e26f8 : and byte ptr [rbp - 0x75], cl ; jae 0x200000e272e ; mov rsp, r11 ; pop rbp ; ret
0x000002000012f4ed : and byte ptr [rbp - 0x75], cl ; jae 0x2000012f523 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000146766 : and byte ptr [rbp - 0x75], cl ; jae 0x2000014679c ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e1e79 : and byte ptr [rbp - 0x75], cl ; jae 0x200001e1eaf ; mov rsp, r11 ; pop rbp ; ret
0x00000200003887a4 : and byte ptr [rbp - 0x75], cl ; jae 0x200003887da ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e7b4a : and byte ptr [rbp - 0x75], cl ; jae 0x200003e7b80 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000404cd7 : and byte ptr [rbp - 0x75], cl ; jae 0x20000404d0d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000412b76 : and byte ptr [rbp - 0x75], cl ; jae 0x20000412bac ; mov rsp, r11 ; pop rbp ; ret
0x0000020000415868 : and byte ptr [rbp - 0x75], cl ; jae 0x2000041589e ; mov rsp, r11 ; pop rbp ; ret
0x000002000043dbca : and byte ptr [rbp - 0x75], cl ; jae 0x2000043dc00 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000466d91 : and byte ptr [rbp - 0x75], cl ; jae 0x20000466dc7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cda7c : and byte ptr [rbp - 0x75], cl ; jae 0x200004cdab2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f8780 : and byte ptr [rbp - 0x75], cl ; jae 0x200004f87b6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050dacf : and byte ptr [rbp - 0x75], cl ; jae 0x2000050db05 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050db99 : and byte ptr [rbp - 0x75], cl ; jae 0x2000050dbcf ; mov rsp, r11 ; pop rbp ; ret
0x000002000050dd86 : and byte ptr [rbp - 0x75], cl ; jae 0x2000050ddbc ; mov rsp, r11 ; pop rbp ; ret
0x000002000051ff47 : and byte ptr [rbp - 0x75], cl ; jae 0x2000051ff7d ; mov rsp, r11 ; pop rbp ; ret
0x00000200005acbd8 : and byte ptr [rbp - 0x75], cl ; jae 0x200005acc0e ; mov rsp, r11 ; pop rbp ; ret
0x000002000060919c : and byte ptr [rbp - 0x75], cl ; jae 0x200006091d2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006183e3 : and byte ptr [rbp - 0x75], cl ; jae 0x20000618419 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064b20a : and byte ptr [rbp - 0x75], cl ; jae 0x2000064b240 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064b2ce : and byte ptr [rbp - 0x75], cl ; jae 0x2000064b304 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000704d0f : and byte ptr [rbp - 0x75], cl ; jae 0x20000704d45 ; mov rsp, r11 ; pop rbp ; ret
0x000002000070db5f : and byte ptr [rbp - 0x75], cl ; jae 0x2000070db95 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000711658 : and byte ptr [rbp - 0x75], cl ; jae 0x2000071168e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000712729 : and byte ptr [rbp - 0x75], cl ; jae 0x2000071275f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000716c9e : and byte ptr [rbp - 0x75], cl ; jae 0x20000716cd4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000072b39c : and byte ptr [rbp - 0x75], cl ; jae 0x2000072b3d2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000072b9ad : and byte ptr [rbp - 0x75], cl ; jae 0x2000072b9e3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ac3b : and byte ptr [rbp - 0x75], cl ; jnp 0x2000013ac71 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001dd505 : and byte ptr [rbp - 0x75], cl ; jnp 0x200001dd53b ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7344 : and byte ptr [rbp - 0x75], cl ; jnp 0x200004c737a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c9c54 : and byte ptr [rbp - 0x75], cl ; jnp 0x200004c9c8a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e6b5b : and byte ptr [rbp - 0x75], cl ; jnp 0x200004e6b91 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000500393 : and byte ptr [rbp - 0x75], cl ; jnp 0x200005003c9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a4fb : and byte ptr [rbp - 0x75], cl ; jnp 0x2000051a531 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000703e6f : and byte ptr [rbp - 0x75], cl ; jnp 0x20000703ea5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000614973 : and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000008e0cf : and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000038ff2 : and byte ptr [rbp - 0x75], cl ; ret 0xc149
0x0000020000100def : and byte ptr [rbp - 0x77], cl ; ret 0x8b41
0x00000200001f35f5 : and byte ptr [rbp - 0x7b], al ; sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x00000200004fa287 : and byte ptr [rbp - 0x7ef68725], al ; jmp qword ptr [rax]
0x0000020000621231 : and byte ptr [rbp - 0x8a48a40], al ; ret 0
0x0000020000479703 : and byte ptr [rbp - 0x9db8b40], al ; ret
0x00000200005b79d0 : and byte ptr [rbx + 0x17e803e6], al ; ret 0xffde
0x00000200000e4cd9 : and byte ptr [rbx + 0x200f44f9], cl ; ret
0x00000200006d14bf : and byte ptr [rbx + 0x4448b], cl ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006c93bd : and byte ptr [rbx + 0x4448e], cl ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006c686f : and byte ptr [rbx + 0x4448e], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006c5f18 : and byte ptr [rbx + 0x4448e], cl ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200006d918f : and byte ptr [rbx + 0x4448f], cl ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000dcd84 : and byte ptr [rbx + 0x48], bl ; jmp rax
0x00000200003c7258 : and byte ptr [rbx + 0x57404fe], al ; call r10
0x00000200005bbdc0 : and byte ptr [rbx + 0x8891], cl ; add dh, dh ; ret 0xf02
0x00000200005bbdbf : and byte ptr [rbx + 0x8891], r9b ; add dh, dh ; ret 0xf02
0x00000200006c7154 : and byte ptr [rbx + 0xb48f8c3], al ; ret 0x8b48
0x00000200006cbe71 : and byte ptr [rbx + 0xb48f8c6], al ; ret 0x8b48
0x00000200006d1828 : and byte ptr [rbx + 0xb48f8c7], al ; ret 0x8b48
0x000002000022044a : and byte ptr [rbx + 0xb48ffcf], al ; ret 0xd233
0x000002000067283f : and byte ptr [rbx + rax*8], bl ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x000002000023935f : and byte ptr [rbx + rcx*4 + 0x41], al ; cmp byte ptr [rax - 0x75], cl ; ret 0xd233
0x000002000012ffa9 : and byte ptr [rbx + rcx*4 + 0x47], al ; sbb byte ptr [rax + 3], cl ; ret
0x00000200003d31e7 : and byte ptr [rbx + rcx*4 + 0x5a], al ; sbb byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000672d17 : and byte ptr [rbx + rcx*4 - 0x35], cl ; mov rcx, r14 ; call rax
0x000002000047f3af : and byte ptr [rbx - 0x17], bl ; loop 0x2000047f432 ; ret
0x00000200004140a7 : and byte ptr [rbx - 0x17], bl ; ret 0xc1ce
0x00000200004f31c0 : and byte ptr [rbx - 0x3174b62a], cl ; call r9
0x0000020000464851 : and byte ptr [rbx - 0x3c75ba2d], cl ; call r12
0x000002000050c1b1 : and byte ptr [rbx - 0x3d], bl ; dec dword ptr [rcx + 0x58] ; je 0x2000050c1c2 ; ret
0x00000200005204f1 : and byte ptr [rbx - 0x3d], bl ; mov edx, dword ptr [rdx] ; mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x000002000072c141 : and byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rcx + 0x10] ; ret
0x00000200000809ec : and byte ptr [rbx - 0x50f0b640], cl ; ret 0x148
0x0000020000618f60 : and byte ptr [rbx - 0x74afdb8c], cl ; ret 0x3345
0x00000200004bceed : and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x000002000010f07c : and byte ptr [rbx - 0x74b7d797], cl ; ret 0x8b4c
0x0000020000633480 : and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x000002000044ce3a : and byte ptr [rbx - 0xf8dfc06], al ; xor eax, eax ; ret
0x000002000048505a : and byte ptr [rbx], ah ; ret 0x3148
0x00000200003fd4c5 : and byte ptr [rbx], al ; add byte ptr [rax], al ; jmp 0x200003fd492
0x000002000062abf6 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000126b85 : and byte ptr [rbx], al ; ret
0x0000020000053a9c : and byte ptr [rbx], al ; ret 0x8d4c
0x00000200002049ea : and byte ptr [rbx], al ; ret 0xc23b
0x000002000045a7fa : and byte ptr [rbx], bh ; ret
0x0000020000012b97 : and byte ptr [rbx], bl ; and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x0000020000672831 : and byte ptr [rbx], bl ; ret
0x000002000045c70d : and byte ptr [rbx], bl ; rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x000002000020947d : and byte ptr [rbx], ch ; fdivr st(7) ; ret
0x00000200003730af : and byte ptr [rbx], ch ; ret 0xf83b
0x0000020000290f01 : and byte ptr [rbx], cl ; add byte ptr [rip + 0x11060016], cl ; ret 0xf00d
0x000002000027112d : and byte ptr [rbx], cl ; add byte ptr [rip + 0x11062306], cl ; ret 0xf00d
0x000002000016449e : and byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000163302 : and byte ptr [rbx], cl ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000aa35f : and byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x7f] ; ret 0
0x00000200004ee179 : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x38 ; call rdi
0x0000020000485059 : and byte ptr [rbx], r12b ; ret 0x3148
0x0000020000053a9b : and byte ptr [rbx], r8b ; ret 0x8d4c
0x00000200006dd599 : and byte ptr [rcx + 0x1000c6], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200006e9bd0 : and byte ptr [rcx + 0x200], bh ; call r9
0x0000020000032c44 : and byte ptr [rcx + 0x23], cl ; ret 0x3148
0x000002000005922b : and byte ptr [rcx + 0x23], cl ; ret 0x8b41
0x00000200000dbd4b : and byte ptr [rcx + 0x2b], cl ; ret 0xe2eb
0x00000200000ca966 : and byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x000002000005e8c9 : and byte ptr [rcx + 0x3b], cl ; ret 0x860f
0x00000200000ca97f : and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x0000020000095d13 : and byte ptr [rcx + 0x5c], 0xfe ; ret
0x0000020000700ceb : and byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; ret
0x00000200001bdbac : and byte ptr [rcx + 0x5c], al ; ret
0x0000020000420bbd : and byte ptr [rcx + 0x5d], al ; ret
0x000002000043b41b : and byte ptr [rcx + 0x5e], al ; jmp 0x20000068fd6
0x000002000044cc0c : and byte ptr [rcx + 0x5e], al ; jmp 0x200000712d2
0x0000020000515e31 : and byte ptr [rcx + 0x5e], al ; jmp 0x2000013bc72
0x000002000066f5f6 : and byte ptr [rcx + 0x5e], al ; jmp rax
0x000002000011ce62 : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000035a0b : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000035691 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001be610 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200000b9ab1 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x00000200000ed188 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x0000020000218274 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000068d4d : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000024a77 : and byte ptr [rcx + 0x5e], al ; ret
0x000002000038aa61 : and byte ptr [rcx + 0x5f], al ; jmp 0x20000026d21
0x00000200004421c0 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x000002000022c9d7 : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005163b9 : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x0000020000410b36 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000002a2e1 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000d64b1 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000002677e : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000029111 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000aed84 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x000002000009d7a9 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000091477 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x00000200000d83c3 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000002632c : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200001415e6 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200006fe3bf : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x0000020000424781 : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cede5 : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x00000200000a3522 : and byte ptr [rcx + 0x5f], al ; ret
0x0000020000218ae5 : and byte ptr [rcx + 0x69], cl ; ret 0x88
0x00000200004b95ab : and byte ptr [rcx + 0x800c], bh ; call rax
0x00000200004dc9ea : and byte ptr [rcx + 0x92], bh ; call 0x200000ff62d
0x0000020000064f84 : and byte ptr [rcx + 0xa], al ; ret 0x4688
0x0000020000064f83 : and byte ptr [rcx + 0xa], r8b ; ret 0x4688
0x00000200003d31f2 : and byte ptr [rcx + 0xb], cl ; ret
0x000002000046d0fe : and byte ptr [rcx + 0xf], al ; dec byte ptr [r8 - 1] ; ret 0x8d48
0x000002000072c1da : and byte ptr [rcx + 0xf], al ; mov bh, 0xc0 ; ret
0x00000200004b2dcb : and byte ptr [rcx + 0xf], al ; mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x00000200000be0b4 : and byte ptr [rcx + 0xf], cl ; mov edx, 0x830f0ae5 ; ret 0xd3f
0x00000200000809b2 : and byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000200006d65c9 : and byte ptr [rcx + 3], al ; dec byte ptr [rax + 0xb] ; ret 0x8b48
0x00000200006e400c : and byte ptr [rcx + 3], al ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000053ea12 : and byte ptr [rcx + 3], al ; ret
0x000002000071370b : and byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200001fbcc3 : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x28 ; call rdx
0x000002000068e776 : and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x0000020000506234 : and byte ptr [rcx + rcx*4 + 0x7d], cl ; xor al, ch ; ret 0xd8dd
0x0000020000417d59 : and byte ptr [rcx - 0x179fdba4], cl ; popfq ; ret 0xffe7
0x00000200006d064b : and byte ptr [rcx - 0x39], cl ; ret 0x7400
0x00000200000bfb09 : and byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200004bbe8e : and byte ptr [rcx - 0x47], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200004e3f9b : and byte ptr [rcx - 0x47], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200006d4cbb : and byte ptr [rcx - 0x73], cl ; pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x000002000037f8a3 : and byte ptr [rcx - 0x75], al ; ret
0x000002000037f865 : and byte ptr [rcx - 0x75], al ; ret 0x394c
0x0000020000236930 : and byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200005d22bc : and byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200004f825f : and byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000611f4c : and byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000010a690 : and byte ptr [rcx - 0x75], cl ; add byte ptr [rcx - 0x7f], cl ; ret 0xfff
0x00000200004a69d9 : and byte ptr [rcx - 0x75], cl ; fld1 ; ret 0xc0e3
0x00000200000e47a6 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200004e5cbd : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200004effae : and byte ptr [rcx - 0x75], cl ; imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x00000200004bb9ff : and byte ptr [rcx - 0x75], cl ; iretd ; mov rdx, r12 ; call rdi
0x00000200000a4d64 : and byte ptr [rcx - 0x75], cl ; jae 0x200000a4d9a ; mov rsp, r11 ; pop rdi ; ret
0x00000200000c4791 : and byte ptr [rcx - 0x75], cl ; jae 0x200000c47c7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000cd346 : and byte ptr [rcx - 0x75], cl ; jae 0x200000cd37c ; mov rsp, r11 ; pop rdi ; ret
0x00000200000e4212 : and byte ptr [rcx - 0x75], cl ; jae 0x200000e4248 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e078c : and byte ptr [rcx - 0x75], cl ; jae 0x200001e07c2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e5778 : and byte ptr [rcx - 0x75], cl ; jae 0x200001e57ae ; mov rsp, r11 ; pop rdi ; ret
0x00000200001eb14e : and byte ptr [rcx - 0x75], cl ; jae 0x200001eb184 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f468e : and byte ptr [rcx - 0x75], cl ; jae 0x200001f46c4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fa307 : and byte ptr [rcx - 0x75], cl ; jae 0x200001fa33d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ff905 : and byte ptr [rcx - 0x75], cl ; jae 0x200001ff93b ; mov rsp, r11 ; pop rdi ; ret
0x000002000045addb : and byte ptr [rcx - 0x75], cl ; jae 0x2000045ae11 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000466a9a : and byte ptr [rcx - 0x75], cl ; jae 0x20000466ad0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004700f9 : and byte ptr [rcx - 0x75], cl ; jae 0x2000047012f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000471ed1 : and byte ptr [rcx - 0x75], cl ; jae 0x20000471f07 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047fd87 : and byte ptr [rcx - 0x75], cl ; jae 0x2000047fdbd ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ac576 : and byte ptr [rcx - 0x75], cl ; jae 0x200004ac5ac ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c1fa9 : and byte ptr [rcx - 0x75], cl ; jae 0x200004c1fdf ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c3a61 : and byte ptr [rcx - 0x75], cl ; jae 0x200004c3a97 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d1212 : and byte ptr [rcx - 0x75], cl ; jae 0x200004d1248 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d63a2 : and byte ptr [rcx - 0x75], cl ; jae 0x200004d63d8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050833f : and byte ptr [rcx - 0x75], cl ; jae 0x20000508375 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050d22b : and byte ptr [rcx - 0x75], cl ; jae 0x2000050d261 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005bf2ac : and byte ptr [rcx - 0x75], cl ; jae 0x200005bf2e2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d0dcb : and byte ptr [rcx - 0x75], cl ; jae 0x200005d0e01 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005da1ca : and byte ptr [rcx - 0x75], cl ; jae 0x200005da200 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005efb62 : and byte ptr [rcx - 0x75], cl ; jae 0x200005efb98 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f72f4 : and byte ptr [rcx - 0x75], cl ; jae 0x200005f732a ; mov rsp, r11 ; pop rdi ; ret
0x000002000060c4f7 : and byte ptr [rcx - 0x75], cl ; jae 0x2000060c52d ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d169 : and byte ptr [rcx - 0x75], cl ; jae 0x2000060d19f ; mov rsp, r11 ; pop rdi ; ret
0x000002000062aeae : and byte ptr [rcx - 0x75], cl ; jae 0x2000062aee4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000063886e : and byte ptr [rcx - 0x75], cl ; jae 0x200006388a4 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000638a8e : and byte ptr [rcx - 0x75], cl ; jae 0x20000638ac4 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000667bc4 : and byte ptr [rcx - 0x75], cl ; jae 0x20000667bfa ; mov rsp, r11 ; pop rdi ; ret
0x0000020000671d97 : and byte ptr [rcx - 0x75], cl ; jae 0x20000671dcd ; mov rsp, r11 ; pop rdi ; ret
0x0000020000671e65 : and byte ptr [rcx - 0x75], cl ; jae 0x20000671e9b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000673943 : and byte ptr [rcx - 0x75], cl ; jae 0x20000673979 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000673a13 : and byte ptr [rcx - 0x75], cl ; jae 0x20000673a49 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000675fb7 : and byte ptr [rcx - 0x75], cl ; jae 0x20000675fed ; mov rsp, r11 ; pop rdi ; ret
0x000002000067c572 : and byte ptr [rcx - 0x75], cl ; jae 0x2000067c5a8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000067c8d6 : and byte ptr [rcx - 0x75], cl ; jae 0x2000067c90c ; mov rsp, r11 ; pop rdi ; ret
0x000002000008f4f2 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000008f528 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011a2c1 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000011a2f7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000129ac0 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000129af6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000135f7b : and byte ptr [rcx - 0x75], cl ; jnp 0x20000135fb1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013d0e5 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000013d11b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c4c86 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001c4cbc ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d5227 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001d525d ; mov rsp, r11 ; pop rbp ; ret
0x00000200001da97a : and byte ptr [rcx - 0x75], cl ; jnp 0x200001da9b0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ee6bf : and byte ptr [rcx - 0x75], cl ; jnp 0x200001ee6f5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000203166 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000020319c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000203913 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000203949 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204943 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000204979 ; mov rsp, r11 ; pop rbp ; ret
0x000002000036d775 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000036d7ab ; mov rsp, r11 ; pop rbp ; ret
0x000002000037a81b : and byte ptr [rcx - 0x75], cl ; jnp 0x2000037a851 ; mov rsp, r11 ; pop rbp ; ret
0x000002000038adb2 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000038ade8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b0c22 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003b0c58 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000405193 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004051c9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004241f0 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000424226 ; mov rsp, r11 ; pop rbp ; ret
0x000002000048d4fd : and byte ptr [rcx - 0x75], cl ; jnp 0x2000048d533 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049aa9f : and byte ptr [rcx - 0x75], cl ; jnp 0x2000049aad5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049ad0d : and byte ptr [rcx - 0x75], cl ; jnp 0x2000049ad43 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c364f : and byte ptr [rcx - 0x75], cl ; jnp 0x200004c3685 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7497 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004c74cd ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d0210 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004d0246 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d1f2c : and byte ptr [rcx - 0x75], cl ; jnp 0x200004d1f62 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d699d : and byte ptr [rcx - 0x75], cl ; jnp 0x200004d69d3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e3a7e : and byte ptr [rcx - 0x75], cl ; jnp 0x200004e3ab4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ee00d : and byte ptr [rcx - 0x75], cl ; jnp 0x200004ee043 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051191b : and byte ptr [rcx - 0x75], cl ; jnp 0x20000511951 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000511a4d : and byte ptr [rcx - 0x75], cl ; jnp 0x20000511a83 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000514bf9 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000514c2f ; mov rsp, r11 ; pop rbp ; ret
0x000002000051bc06 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000051bc3c ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c049f : and byte ptr [rcx - 0x75], cl ; jnp 0x200005c04d5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ce233 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005ce269 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005da298 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005da2ce ; mov rsp, r11 ; pop rbp ; ret
0x00000200005e86fa : and byte ptr [rcx - 0x75], cl ; jnp 0x200005e8730 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000607ecb : and byte ptr [rcx - 0x75], cl ; jnp 0x20000607f01 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061018a : and byte ptr [rcx - 0x75], cl ; jnp 0x200006101c0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000624372 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006243a8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062baf6 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000062bb2c ; mov rsp, r11 ; pop rbp ; ret
0x000002000062f269 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000062f29f ; mov rsp, r11 ; pop rbp ; ret
0x00000200006461b6 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006461ec ; mov rsp, r11 ; pop rbp ; ret
0x000002000065dc34 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000065dc6a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000664b86 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000664bbc ; mov rsp, r11 ; pop rbp ; ret
0x00000200006fd6b1 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006fd6e7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000070b7e0 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000070b816 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000712a86 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000712abc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000083f36 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000083f9d ; ret
0x000002000008f88b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008f8f4 ; ret
0x0000020000093156 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000931bf ; ret
0x000002000009c6ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000009c768 ; ret
0x00000200000a7c5b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000a7cc4 ; ret
0x00000200000b8307 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000b8370 ; ret
0x00000200000c021f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000c0286 ; ret
0x00000200000d7993 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000d79fc ; ret
0x00000200000e379a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e3801 ; ret
0x00000200000f4613 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f467a ; ret
0x00000200000f559f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f5608 ; ret
0x00000200000f6233 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f629a ; ret
0x00000200000f65bb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f6622 ; ret
0x00000200000ff1a8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ff20f ; ret
0x000002000010057b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001005e2 ; ret
0x000002000010f2c1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010f328 ; ret
0x000002000010fcb1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010fd18 ; ret
0x000002000011115c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001111c3 ; ret
0x0000020000111479 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001114e0 ; ret
0x000002000011944c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001194b3 ; ret
0x000002000011ab4c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011abb3 ; ret
0x000002000012280d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000122876 ; ret
0x000002000013734e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001373b7 ; ret
0x000002000013a61c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013a685 ; ret
0x000002000013d760 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013d7c9 ; ret
0x00000200001efcfd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001efd64 ; ret
0x00000200001ff36f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ff3d8 ; ret
0x0000020000204486 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002044ed ; ret
0x000002000020457c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002045e3 ; ret
0x00000200002072ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000207368 ; ret
0x000002000020ad04 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020ad6d ; ret
0x000002000022af45 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022afac ; ret
0x000002000022fafe : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022fb65 ; ret
0x0000020000235031 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000235098 ; ret
0x000002000036d5bb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036d622 ; ret
0x0000020000382716 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038277f ; ret
0x0000020000384913 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038495f ; pop rsi ; ret
0x00000200003b263d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b2689 ; pop rsi ; ret
0x00000200003ef6c6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ef712 ; pop rsi ; ret
0x00000200003f115e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f11aa ; pop rsi ; ret
0x00000200003f60c4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f6110 ; pop rdi ; ret
0x00000200003f729f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f7308 ; ret
0x0000020000404f98 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000405001 ; ret
0x000002000040782e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000407897 ; ret
0x000002000041c429 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041c475 ; pop rsi ; ret
0x00000200004261bf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000426226 ; ret
0x00000200004341b8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000434221 ; ret
0x0000020000442fe9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000443052 ; ret
0x000002000044cf74 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044cfc0 ; pop rsi ; ret
0x000002000045a2b9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045a322 ; ret
0x000002000045af41 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045afaa ; ret
0x000002000045f6c9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045f730 ; ret
0x0000020000467a3a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000467aa3 ; ret
0x0000020000469940 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046998c ; pop rsi ; ret
0x000002000046c12f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046c198 ; ret
0x000002000046ca13 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046ca7c ; ret
0x000002000047762a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000477691 ; ret
0x0000020000483177 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004831c3 ; pop rsi ; ret
0x0000020000484aef : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000484b56 ; ret
0x00000200004856a2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000485709 ; ret
0x0000020000488c6e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000488cd7 ; ret
0x000002000048f9cd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048fa36 ; ret
0x00000200004920da : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000492126 ; pop rsi ; ret
0x0000020000499798 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004997ff ; ret
0x00000200004a2486 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a24ed ; ret
0x00000200004a8d3a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a8da3 ; ret
0x00000200004a9815 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a9861 ; pop rsi ; ret
0x00000200004bc31f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bc388 ; ret
0x00000200004c15fd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c1666 ; ret
0x00000200004c2cb3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c2d1a ; ret
0x00000200004c34d5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c353c ; ret
0x00000200004c6510 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c6579 ; ret
0x00000200004c7216 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c727d ; ret
0x00000200004c7955 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c79be ; ret
0x00000200004c7a65 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c7ace ; ret
0x00000200004c9288 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c92ef ; ret
0x00000200004c99c9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c9a30 ; ret
0x00000200004cd04a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cd0b1 ; ret
0x00000200004ce520 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ce589 ; ret
0x00000200004cf60c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cf675 ; ret
0x00000200004d68e0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d6947 ; ret
0x00000200004d786c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d78d5 ; ret
0x00000200004d8b75 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d8bdc ; ret
0x00000200004da6e1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004da74a ; ret
0x00000200004df56c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004df5d3 ; ret
0x00000200004df65d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004df6c4 ; ret
0x00000200004e29a9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e2a12 ; ret
0x00000200004f2cdd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f2d44 ; ret
0x00000200004f3b06 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f3b6d ; ret
0x00000200004fdd42 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fdda9 ; ret
0x0000020000505123 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050518a ; ret
0x000002000050ae30 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050ae99 ; ret
0x0000020000512eec : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000512f55 ; ret
0x00000200005133f5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051345e ; ret
0x00000200005134e9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000513552 ; ret
0x000002000051a6c9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a732 ; ret
0x000002000051b075 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b0dc ; ret
0x000002000051c150 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051c1b9 ; ret
0x000002000051d5ad : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051d614 ; ret
0x000002000051e641 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051e6aa ; ret
0x00000200005b57b1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b5818 ; ret
0x00000200005b6850 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b68b9 ; ret
0x00000200005c31fb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c3262 ; ret
0x00000200005cafef : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cb03b ; pop rsi ; ret
0x00000200005cdaa8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cdb11 ; ret
0x00000200005ce411 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ce47a ; ret
0x00000200005d37ca : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d3831 ; ret
0x00000200005da0bf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005da128 ; ret
0x00000200005dab25 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dab8c ; ret
0x00000200005e9578 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e95c4 ; pop rsi ; ret
0x00000200005e965f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e96ab ; pop rsi ; ret
0x00000200005e97ac : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e97f8 ; pop rsi ; ret
0x00000200005ecbbc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ecc23 ; ret
0x00000200005eccc3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ecd2a ; ret
0x00000200005eeaf0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005eeb3c ; pop rdi ; ret
0x00000200005f5b84 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f5bed ; ret
0x00000200005f94d0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f9539 ; ret
0x00000200005fbf19 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fbf82 ; ret
0x0000020000603df3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000603e5c ; ret
0x000002000060568a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006056f3 ; ret
0x00000200006065ba : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000606623 ; ret
0x000002000061bb62 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061bbc9 ; ret
0x000002000061e284 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061e2eb ; ret
0x0000020000625160 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006251c7 ; ret
0x000002000062acfa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062ad63 ; ret
0x0000020000633a93 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000633afa ; ret
0x00000200006347e7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634833 ; pop rsi ; ret
0x0000020000643f3a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000643f86 ; pop rdi ; ret
0x00000200006470e1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000647148 ; ret
0x0000020000648b36 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000648b9d ; ret
0x000002000064c080 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c0e9 ; ret
0x000002000064d1df : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d248 ; ret
0x000002000068d195 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068d1fe ; ret
0x00000200006f8373 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f83dc ; ret
0x00000200007055f5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070565c ; ret
0x0000020000706906 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070696d ; ret
0x0000020000717408 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000071746f ; ret
0x0000020000717b40 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000717ba7 ; ret
0x000002000072a1c3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072a22a ; ret
0x00000200001b9d2d : and byte ptr [rcx - 0x75], cl ; ret
0x00000200000aaaf4 : and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x0000020000642137 : and byte ptr [rcx - 0x75], cl ; ret 0x48c3
0x00000200006421cc : and byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200005d47c8 : and byte ptr [rcx - 0x77], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x000002000065ac4d : and byte ptr [rcx - 0x77], cl ; jl 0x2000065ac22 ; adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000586573 : and byte ptr [rcx - 0x78], al ; or cl, byte ptr [rcx - 1] ; ret 0x8b4c
0x00000200006d0d09 : and byte ptr [rcx - 0x7d], al ; ret
0x000002000050d76b : and byte ptr [rcx - 0x7d], cl ; ret
0x00000200004aceed : and byte ptr [rcx - 0x7d], cl ; ret 0x4210
0x0000020000140b7b : and byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x00000200001d8769 : and byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x0000020000622dac : and byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000200004e0a20 : and byte ptr [rcx - 0xa], al ; ret 0xf01
0x000002000036ce53 : and byte ptr [rcx - 0xd], ah ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001d7edd : and byte ptr [rcx - 1], al ; ret 0x2b9
0x0000020000141d7a : and byte ptr [rcx - 1], cl ; ret
0x00000200005d8ab4 : and byte ptr [rcx], al ; add al, al ; ret
0x00000200003a3b7d : and byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x000002000068123a : and byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000051eccd : and byte ptr [rcx], al ; call 0x2000014e325
0x000002000037d3ac : and byte ptr [rcx], al ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000022a8c2 : and byte ptr [rcx], bh ; adc esi, dword ptr [rdx - 8] ; jmp 0x2000022a8de
0x00000200005aa0cb : and byte ptr [rcx], bh ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x000002000067282a : and byte ptr [rcx], bl ; ret
0x00000200005aa0ca : and byte ptr [rcx], dil ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x0000020000209287 : and byte ptr [rdi + 0x48], bl ; jmp rax
0x0000020000162431 : and byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200000bf50a : and byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000137674 : and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000013963c : and byte ptr [rdi + 0x5e], bl ; pop rcx ; ret
0x00000200005aa0cd : and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x0000020000096275 : and byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005aa0ce : and byte ptr [rdi + rcx + 0x4c], cl ; ret 0x8348
0x000002000045e2b2 : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000026f46 : and byte ptr [rdi - 0x17], bl ; ret
0x00000200000d5684 : and byte ptr [rdi - 0x3d], bl ; and al, 0xfd ; or al, dl ; jmp 0x200000d5631
0x000002000009a15c : and byte ptr [rdi - 0x3d], bl ; and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x2000009a15c
0x000002000052027d : and byte ptr [rdi - 0x3d], bl ; lea rax, qword ptr [rcx + 2] ; ret
0x00000200000aecaa : and byte ptr [rdi - 0x3d], bl ; xor ecx, ecx ; jmp 0x200000aec79
0x000002000009ac25 : and byte ptr [rdi], cl ; mov dh, 0x4c ; cmp ch, byte ptr [rax - 1] ; ret 0x5489
0x00000200004a98a3 : and byte ptr [rdi], cl ; mov edx, 0x107210e2 ; ret
0x0000020000715739 : and byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200003af7b7 : and byte ptr [rdi], cl ; test ah, ah ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200003f1c7b : and byte ptr [rdi], cl ; test byte ptr [rbx], ah ; xor al, 0x16 ; add byte ptr [rbx], ah ; ret
0x0000020000452180 : and byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret
0x00000200003e6597 : and byte ptr [rdi], cl ; test cl, dl ; ret
0x00000200005fb456 : and byte ptr [rdi], cl ; test dword ptr [rax - 0xa000000], ebp ; ret 0xf08
0x000002000042774c : and byte ptr [rdi], cl ; test dword ptr [rbx - 0x9ffec0f], ecx ; ret
0x00000200000eeb38 : and byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add byte ptr [rbx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000079813 : and byte ptr [rdi], cl ; test dword ptr [rdx], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf40
0x0000020000393ee6 : and byte ptr [rdi], cl ; test ecx, ebx ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000020fd9b : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200005d3c76 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200005703da : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200002112be : and byte ptr [rdi], cl ; xchg eax, edx ; ret 0x3345
0x00000200000b14dc : and byte ptr [rdi], cl ; xchg ecx, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000200001c4d77 : and byte ptr [rdi], cl ; xor byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200001c4d22 : and byte ptr [rdi], cl ; xor byte ptr [rcx - 0x75], al ; rol dword ptr [rcx - 0x75], cl ; ret
0x00000200001c4d66 : and byte ptr [rdi], cl ; xor byte ptr [rcx - 0x75], cl ; ror byte ptr [rcx - 0x75], cl ; ret 0x5b9
0x0000020000369604 : and byte ptr [rdi], cl ; xor byte ptr [rcx - 1], al ; ret
0x000002000020a1d7 : and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x00000200004ac65c : and byte ptr [rdx + 4], bh ; call 0x200000d28e1
0x000002000020c409 : and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x0000020000140251 : and byte ptr [rdx - 0x75], al ; ret
0x0000020000078008 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret 0x521
0x0000020000141308 : and byte ptr [rdx], al ; add byte ptr [rax], al ; jmp 0x200001412d5
0x00000200006cf08f : and byte ptr [rdx], al ; add byte ptr [rax], al ; jmp rax
0x00000200000de597 : and byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200005f8ef2 : and byte ptr [rdx], al ; sbb byte ptr [rax], al ; call 0x20000085107
0x0000020000672846 : and byte ptr [rdx], bl ; ret
0x000002000065a232 : and byte ptr [rip + 0x5e05c766], 0xdb ; ret
0x0000020000513460 : and byte ptr [rip - 0x18000000], al ; salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000002000072b55f : and byte ptr [rsi + 0x2b], ah ; ret
0x00000200004ec821 : and byte ptr [rsi + rdx - 0x7d], dh ; call qword ptr [rax]
0x000002000037520c : and byte ptr [rsi + rsi*8], ch ; inc dword ptr [rbx - 0x9d3e2f3] ; call qword ptr [rax]
0x000002000050830d : and byte ptr [rsi - 0x77], ah ; pop rsp ; cmp al, 0x20 ; call 0x20000137fed
0x00000200003ac33d : and byte ptr [rsi - 0x7d], ah ; ret 0x6604
0x000002000002e2d4 : and byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000000afb9 : and byte ptr [rsi], cl ; call qword ptr [rdx]
0x000002000009d7a8 : and byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200003fd4c4 : and byte ptr ss:[rbx], al ; add byte ptr [rax], al ; jmp 0x200003fd493
0x000002000001172a : and ch, 0xe4 ; ret 0x394e
0x000002000014dd5a : and ch, al ; add byte ptr [rax], al ; ret
0x000002000014da5a : and ch, bl ; add byte ptr [rax], al ; ret
0x000002000025d308 : and ch, byte ptr [rcx + 0x46] ; add al, ah ; ret 0x25
0x000002000063227f : and ch, byte ptr [rdi + rdi*8 + 0x28c48348] ; ret
0x00000200001e6c7e : and ch, ch ; jmp 0x1ffc3a1b58a
0x00000200001d29e3 : and ch, cl ; adc byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x000002000014dc5a : and ch, cl ; add byte ptr [rax], al ; ret
0x0000020000552232 : and ch, cl ; dec dword ptr [rbp - 0x74be00af] ; ret 0x55e9
0x00000200003d694f : and ch, cl ; ret 0xfffa
0x000002000014db5a : and ch, dl ; add byte ptr [rax], al ; ret
0x0000020000108e60 : and cl, 7 ; cmp cl, 1 ; sete al ; ret
0x00000200003f25c6 : and cl, 7 ; jne 0x200003f25d7 ; mov al, r9b ; ret
0x000002000014f95a : and cl, ah ; add byte ptr [rax], al ; ret
0x000002000014fd5a : and cl, al ; add byte ptr [rax], al ; ret
0x0000020000471bc0 : and cl, al ; push rdi ; add byte ptr [rsi - 0x15ffa83e], al ; ret 0x57
0x000002000014f65a : and cl, bh ; add byte ptr [rax], al ; ret
0x000002000014fa5a : and cl, bl ; add byte ptr [rax], al ; ret
0x000002000014c568 : and cl, bpl ; ret 0
0x0000020000189510 : and cl, bpl ; ret 0xf18f
0x00000200000917ae : and cl, byte ptr [r15] ; xchg eax, ebp ; ret 0xc232
0x000002000008e65f : and cl, byte ptr [rax + 3] ; ret 0x8b41
0x000002000043ca7a : and cl, byte ptr [rax + rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200000b56e7 : and cl, byte ptr [rax - 0x73] ; add eax, 0xaba01 ; ret
0x000002000003d092 : and cl, byte ptr [rax - 0x75] ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000017ef1f : and cl, byte ptr [rax - 0x75] ; ret
0x00000200006f924d : and cl, byte ptr [rax - 0x75] ; ret 0xbb49
0x00000200005b3a6e : and cl, byte ptr [rax - 0x77] ; add edi, edi ; ret
0x000002000070d036 : and cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000200004cc275 : and cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000017e0ed : and cl, byte ptr [rax - 1] ; ret 0x8148
0x00000200000ad0d4 : and cl, byte ptr [rbp + 0x3b] ; ret 0x830f
0x00000200004f825b : and cl, byte ptr [rbp - 0x75] ; and byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000070c5e6 : and cl, byte ptr [rbx + 0x3480843] ; ret
0x0000020000106197 : and cl, byte ptr [rbx + 0xa891] ; add dh, dh ; ret 0x7501
0x00000200000fec92 : and cl, byte ptr [rbx - 0x6b74b739] ; ret
0x000002000028abfd : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22060016], cl ; ret 0xf01b
0x0000020000263ee9 : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22061e06], cl ; ret 0xf01b
0x0000020000095e3e : and cl, byte ptr [rcx + rcx*4] ; ret
0x0000020000492d7a : and cl, byte ptr [rcx - 0x77] ; push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000002000014335d : and cl, byte ptr [rcx - 0x7d] ; ret 0xb908
0x0000020000141da8 : and cl, byte ptr [rcx - 1] ; ret 0x1ba
0x00000200001579fc : and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x00000200000938cc : and cl, byte ptr [rdi] ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x00000200000917af : and cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xc232
0x000002000014f85a : and cl, ch ; add byte ptr [rax], al ; ret
0x000002000059ecac : and cl, ch ; in al, -0x2c ; push rsi ; ret
0x00000200000a0eac : and cl, ch ; ret
0x000002000014c569 : and cl, ch ; ret 0
0x0000020000189511 : and cl, ch ; ret 0xf18f
0x0000020000069551 : and cl, ch ; ret 0xfffd
0x000002000014fc5a : and cl, cl ; add byte ptr [rax], al ; ret
0x000002000014f75a : and cl, dh ; add byte ptr [rax], al ; ret
0x000002000014fb5a : and cl, dl ; add byte ptr [rax], al ; ret
0x00000200000c3e84 : and cl, dl ; mov al, cl ; add rsp, 0x28 ; ret
0x0000020000109fa1 : and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x00000200001a5c6b : and dh, 0x4c ; sbb al, byte ptr [rax] ; add rcx, r8 ; jmp rcx
0x00000200004c56d7 : and dh, ah ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret
0x0000020000501dbe : and dh, bh ; add byte ptr [rax], al ; add al, ch ; cwde ; ret 0xffc4
0x0000020000451243 : and dh, bh ; ret
0x00000200004c7bde : and dh, bl ; jmp qword ptr [rbx]
0x00000200003efcf7 : and dh, byte ptr [rbx] ; dec dword ptr [rbp + rcx*4 + 0x25] ; scasd eax, dword ptr [rdi] ; ret 0x48ff
0x000002000058576e : and dh, byte ptr [rsp + rdx*8] ; jmp qword ptr [rax]
0x000002000005c80c : and dh, dh ; ret
0x000002000017408f : and dh, dh ; ret 0x7402
0x00000200003d2c9c : and dh, dh ; ret 0x7508
0x00000200001ce629 : and dh, dh ; ret 0x750f
0x000002000012e11b : and dh, dh ; ret 0xf01
0x0000020000174074 : and dh, dh ; ret 0xf02
0x00000200000e2f7e : and dh, dh ; ret 0xf0f
0x000002000000a2b5 : and dh, dl ; jmp qword ptr [rcx]
0x00000200001b9bd3 : and dil, dil ; ret 0x3b41
0x00000200001b9b5b : and dil, dil ; ret 0x533b
0x000002000014f15a : and dl, ah ; add byte ptr [rax], al ; ret
0x000002000014f55a : and dl, al ; add byte ptr [rax], al ; ret
0x0000020000671583 : and dl, al ; ret
0x000002000014ee5a : and dl, bh ; add byte ptr [rax], al ; ret
0x000002000017f83e : and dl, bh ; out dx, eax ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000014f25a : and dl, bl ; add byte ptr [rax], al ; ret
0x0000020000003202 : and dl, byte ptr [rbx - 6] ; sahf ; ret
0x000002000043a675 : and dl, byte ptr [rbx] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000006a619
0x000002000009b9f2 : and dl, byte ptr [rsi + 0x2b] ; add byte ptr [rcx - 0x73], al ; pop rsi ; add dword ptr [rbx], edi ; ret
0x000002000014f05a : and dl, ch ; add byte ptr [rax], al ; ret
0x000002000014f45a : and dl, cl ; add byte ptr [rax], al ; ret
0x000002000043318a : and dl, cl ; ret
0x000002000014ef5a : and dl, dh ; add byte ptr [rax], al ; ret
0x000002000057e05c : and dl, dh ; push rsi ; ret
0x000002000014f35a : and dl, dl ; add byte ptr [rax], al ; ret
0x00000200002088d2 : and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000124b3c : and dword ptr [r10], eax ; ret
0x00000200001dfd2a : and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003fd4c1 : and dword ptr [r14 + rsi + 0x320], edi ; jmp 0x200003fd496
0x00000200001ccc7f : and dword ptr [r8 - 0x75], r9d ; ret
0x00000200004043e4 : and dword ptr [r8], 0 ; ret
0x00000200000f0ab5 : and dword ptr [r8], eax ; jmp 0x200000f0a81
0x00000200005f5fd7 : and dword ptr [r8], eax ; ret
0x00000200005d303a : and dword ptr [r9], 0 ; add rsp, 0x18 ; ret
0x00000200001bd61e : and dword ptr [r9], 0 ; ret
0x00000200006715c5 : and dword ptr [rax + 0x10], 0 ; ret
0x000002000000f908 : and dword ptr [rax + 0x746b68], esi ; ret 0xa8b3
0x000002000000d341 : and dword ptr [rax + 0x79], ebp ; ret
0x000002000071e5b7 : and dword ptr [rax + 0xc], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000039be1 : and dword ptr [rax + 0xf], ecx ; mov edx, 0x8b4407f0 ; ret 0x2349
0x000002000002e3d0 : and dword ptr [rax + 0xf], ecx ; mov edx, 0x8b4407f0 ; ret 0x8148
0x000002000008825e : and dword ptr [rax + 8], 0 ; add byte ptr [rax - 0x75], cl ; fnstcw word ptr [rdx] ; ret
0x000002000009bafb : and dword ptr [rax + rdx*8 + 8], eax ; ret
0x00000200004b46ad : and dword ptr [rax - 0x73], ecx ; push rsp ; and al, 0x20 ; mov rcx, rbp ; call rax
0x0000020000030f3e : and dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200001ccc80 : and dword ptr [rax - 0x75], ecx ; ret
0x00000200001294ee : and dword ptr [rax - 0x7d], ecx ; ret
0x00000200003d6bdb : and dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x00000200002067b7 : and dword ptr [rax - 0xa000000], 5 ; ret
0x00000200005ec873 : and dword ptr [rax], 0 ; mov al, r10b ; ret
0x00000200001bbaa7 : and dword ptr [rax], 0 ; ret
0x000002000042a56e : and dword ptr [rax], 0x8b000006 ; ret 0x8b48
0x00000200000dbd39 : and dword ptr [rax], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e01a2 : and dword ptr [rax], eax ; add al, al ; jmp 0x200000e0156
0x000002000066d2a1 : and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000025dd98 : and dword ptr [rax], eax ; add byte ptr [rax], al ; mov esp, 0x9d0046c1 ; ret 0x46
0x00000200001345ae : and dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005d303c : and dword ptr [rax], eax ; add rsp, 0x18 ; ret
0x0000020000157b53 : and dword ptr [rax], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001d8f9d : and dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ea34d : and dword ptr [rax], eax ; and qword ptr [rcx + 0x10], 0 ; ret
0x0000020000666f8c : and dword ptr [rax], eax ; and qword ptr [rcx + 8], 0 ; ret
0x0000020000098364 : and dword ptr [rax], eax ; call 0x20000064584
0x00000200000f0ab6 : and dword ptr [rax], eax ; jmp 0x200000f0a80
0x000002000008a300 : and dword ptr [rax], eax ; mov al, dl ; add rsp, 0x28 ; ret
0x00000200006620c7 : and dword ptr [rax], eax ; mov eax, 0xc00000bb ; ret
0x0000020000122d0d : and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000015e0be : and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000136c99 : and dword ptr [rax], eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001fb15f : and dword ptr [rax], eax ; mov rsi, rcx ; jmp 0x200001fb1cf
0x00000200000967c8 : and dword ptr [rax], eax ; ret
0x0000020000135da2 : and dword ptr [rax], eax ; sete al ; ret
0x00000200001d787b : and dword ptr [rax], edx ; mov eax, 0xc0000001 ; ret
0x00000200001d787a : and dword ptr [rax], r10d ; mov eax, 0xc0000001 ; ret
0x000002000052fd81 : and dword ptr [rbp + 0x48], 0 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000022f40 : and dword ptr [rbp + 0x5a], esi ; ret 0x594d
0x00000200004f1aa3 : and dword ptr [rbp + 0x77], ebx ; call 0x2000006fe27
0x00000200004e6fdc : and dword ptr [rbp + rcx + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x000002000070f2bb : and dword ptr [rbp - 0x10], 0 ; lea rcx, qword ptr [rbp - 0x20] ; call qword ptr [rdi]
0x0000020000166d4b : and dword ptr [rbp - 0x75], eax ; ret 0x8b49
0x000002000013278d : and dword ptr [rbp - 0x75], ecx ; adc byte ptr [r13 - 0x75], al ; ret 0x4366
0x00000200001d8002 : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000235f3f : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004db71a : and dword ptr [rbx + 0x10], 0 ; jmp 0x200004db6e8
0x0000020000674e75 : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000011a0ec : and dword ptr [rbx + 0x28], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fe3a1 : and dword ptr [rbx + 0x30], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004c3ca : and dword ptr [rbx + 0x38], 0x12 ; add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x000002000043d124 : and dword ptr [rbx + 0x50], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009a15f : and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x2000009a159
0x0000020000377b0a : and dword ptr [rbx + 0xf000000], 0xffffffb7 ; ret
0x00000200004db763 : and dword ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a1a5e : and dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000065e1d1 : and dword ptr [rbx + rcx - 1], esi ; ret
0x000002000044cdc5 : and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200003f9931 : and dword ptr [rbx - 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b2108 : and dword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000253b21 : and dword ptr [rbx], ecx ; add byte ptr [rip + 0x2106ca06], cl ; ret 0xf01a
0x000002000025fb5d : and dword ptr [rbx], ecx ; add byte ptr [rip + 0x21167b06], cl ; ret 0xf01a
0x00000200001dfd2b : and dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000730fdb : and dword ptr [rbx], esi ; ret
0x00000200004d5a8e : and dword ptr [rbx], esi ; ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000200000f537a : and dword ptr [rbx], esi ; test byte ptr [rbx - 0x38dcbef9], 0x3b ; ret
0x00000200006ea350 : and dword ptr [rcx + 0x10], 0 ; ret
0x000002000012ee41 : and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001c4a23 : and dword ptr [rcx + 0x18], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c715a : and dword ptr [rcx + 0x20], 0 ; ret
0x00000200000e6dff : and dword ptr [rcx + 0x20], 0xff ; ret
0x00000200004315aa : and dword ptr [rcx + 0x30], 0 ; ret
0x0000020000447039 : and dword ptr [rcx + 0x398], eax ; ret
0x00000200003e44b6 : and dword ptr [rcx + 0x3b], eax ; ret 0x5574
0x00000200006f1e1f : and dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x000002000015e331 : and dword ptr [rcx + 0x3c], 0 ; xor eax, eax ; ret
0x000002000015dff8 : and dword ptr [rcx + 0x5c], 0 ; or dword ptr [rcx + 0x58], 0xffffffff ; ret
0x00000200001c4a43 : and dword ptr [rcx + 0x60], 0 ; ret
0x000002000015e039 : and dword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x000002000015e1e1 : and dword ptr [rcx + 0x68], 0 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000013ef1e : and dword ptr [rcx + 0x6b4], 0xffffffef ; ret
0x00000200001cdc80 : and dword ptr [rcx + 0x70], 0 ; ret
0x0000020000224a3e : and dword ptr [rcx + 0xac8], 0xfffffffe ; ret
0x0000020000520178 : and dword ptr [rcx + 0xc], 0 ; add dword ptr [rcx + 4], eax ; ret
0x000002000010ca20 : and dword ptr [rcx + 4], 0 ; ret
0x000002000015e18f : and dword ptr [rcx + 8], 0 ; ret
0x00000200001d9678 : and dword ptr [rcx + rax*8 + 8], eax ; ret
0x0000020000238739 : and dword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200005ceed8 : and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x000002000063f53f : and dword ptr [rcx - 0x3a7541c3], eax ; call qword ptr [rax]
0x00000200000c0f22 : and dword ptr [rcx - 0x3f], ecx ; call 0x1ffc32f5c43
0x0000020000136393 : and dword ptr [rcx - 0x73], ecx ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x0000020000430da0 : and dword ptr [rcx - 0x75], ecx ; ret
0x0000020000590a16 : and dword ptr [rcx - 0x78], eax ; or cl, byte ptr [rcx - 1] ; ret 0xc883
0x000002000014579f : and dword ptr [rcx - 1], ecx ; ret 0xf45
0x00000200005d303b : and dword ptr [rcx], 0 ; add rsp, 0x18 ; ret
0x00000200001d8f9c : and dword ptr [rcx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ea34c : and dword ptr [rcx], 0 ; and qword ptr [rcx + 0x10], 0 ; ret
0x0000020000666f8b : and dword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x00000200006620c6 : and dword ptr [rcx], 0 ; mov eax, 0xc00000bb ; ret
0x0000020000122d0c : and dword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000015e0bd : and dword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200000967c7 : and dword ptr [rcx], 0 ; ret
0x00000200003ad84c : and dword ptr [rcx], 0xfffffff ; ret
0x00000200002486c5 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x0000020000275bcd : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; cmp eax, dword ptr [rsi] ; sysenter
0x00000200002609b9 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x00000200002874d5 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x00000200000d913c : and dword ptr [rdi], 0 ; call rax
0x0000020000012e89 : and dword ptr [rdi], ecx ; add eax, 0x1ac10510 ; ret
0x00000200000c8ad7 : and dword ptr [rdi], ecx ; test dword ptr [rsi], ecx ; ret
0x0000020000122089 : and dword ptr [rdi], ecx ; test ebx, esp ; ret 8
0x00000200001221be : and dword ptr [rdi], ecx ; test ecx, ecx ; ret 8
0x00000200001ba533 : and dword ptr [rdi], esp ; add byte ptr [rbp - 0xf58740], al ; ret
0x000002000009017e : and dword ptr [rdi], esp ; jmp 0x2000008ff58
0x00000200001028b0 : and dword ptr [rdx + 0x18], 0 ; ret
0x0000020000214323 : and dword ptr [rdx + 8], 0 ; ret
0x0000020000508062 : and dword ptr [rdx + 8], ecx ; ret
0x0000020000207134 : and dword ptr [rdx + rcx + 0x49], esi ; mov ecx, esi ; call 0x200002333b0
0x0000020000110b0d : and dword ptr [rdx - 1], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret 0xd348
0x00000200004043e1 : and dword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x00000200004fc6ea : and dword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x0000020000209118 : and dword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003753fe : and dword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x0000020000520484 : and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200002088d3 : and dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000124b3d : and dword ptr [rdx], eax ; ret
0x000002000024d071 : and dword ptr [rdx], ecx ; add byte ptr [rsi + rax], cl ; ret
0x000002000015e17f : and dword ptr [rip + 0x1511b2], 0 ; ret
0x00000200001c4ca1 : and dword ptr [rip + 0x18c3d1], eax ; ret
0x00000200004cb0ce : and dword ptr [rip + 0x1df633], 0 ; xor eax, eax ; ret
0x000002000066ec9b : and dword ptr [rip + 0x2240a], 0 ; ret
0x00000200001d7038 : and dword ptr [rip + 0xf000017], 0xffffffb6 ; ret
0x000002000052010d : and dword ptr [rip - 0x24a274], 0 ; ret
0x0000020000730031 : and dword ptr [rip - 0x48ac78], 0 ; ret
0x0000020000192025 : and dword ptr [rsi + 0x10], 0xfffffffe ; jmp 0x200000be29f
0x000002000024d2b8 : and dword ptr [rsi + 0xa], 0 ; nop ; ret 0x24
0x00000200003fd4c2 : and dword ptr [rsi + rsi + 0x320], edi ; jmp 0x200003fd495
0x0000020000093d0b : and dword ptr [rsi], ebx ; sldt word ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200004cff8f : and dword ptr [rsi], ecx ; ret
0x000002000064e351 : and dword ptr [rsp + 0x20], 0 ; call r10
0x0000020000107bb8 : and eax, 0x10001 ; ret
0x00000200003f1188 : and eax, 0x101 ; add rsp, 0x28 ; ret
0x00000200001db603 : and eax, 0x128 ; ret
0x00000200000f9244 : and eax, 0x148b4800 ; ret 0x8b48
0x0000020000140fa1 : and eax, 0x157 ; ret
0x0000020000243595 : and eax, 0x16020024 ; or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x00000200005d5e2c : and eax, 0x188 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200002059ec : and eax, 0x188 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200002059dc : and eax, 0x188 ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000006ad4c : and eax, 0x188 ; ret
0x00000200000e00e3 : and eax, 0x1c5747 ; dec byte ptr [rax - 0x75] ; ret
0x00000200004b192e : and eax, 0x1f ; ret
0x00000200001f13d0 : and eax, 0x20 ; inc eax ; add rsp, 0x28 ; ret
0x00000200000ffbbd : and eax, 0x2c418900 ; ret
0x00000200001c1ccb : and eax, 0x2e44 ; ret
0x00000200004a38e3 : and eax, 0x2e48 ; ret
0x00000200004d811b : and eax, 0x2e4c ; ret
0x000002000066233b : and eax, 0x2f6c ; and eax, 1 ; ret
0x00000200004234c4 : and eax, 0x34c0042 ; leave ; jmp r9
0x000002000000afca : and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200004d61f1 : and eax, 0x3b000c6a ; ret 0x870f
0x000002000002b55b : and eax, 0x41098949 ; mov eax, edx ; ret
0x000002000064821a : and eax, 0x41c00002 ; mov eax, edx ; ret
0x00000200000fe598 : and eax, 0x4750100 ; lock dec dword ptr [rcx] ; ret
0x0000020000144acf : and eax, 0x48000037 ; add esp, 0x38 ; ret
0x000002000045f061 : and eax, 0x48001199 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001d688b : and eax, 0x480049c6 ; add esp, 0x28 ; ret
0x00000200001d6b95 : and eax, 0x48c00002 ; add esp, 0x20 ; pop rdi ; ret
0x00000200000eb1d2 : and eax, 0x48c00002 ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001e0276 : and eax, 0x48c38b00 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004f25e7 : and eax, 0x48ffc568 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000511b4f : and eax, 0x48ffd9da ; test eax, eax ; je 0x20000511b63 ; call rax
0x00000200001d2eeb : and eax, 0x48ffeaf3 ; add esp, 0x38 ; ret
0x000002000012a173 : and eax, 0x5504 ; ret
0x00000200001c1cd7 : and eax, 0x5540 ; ret
0x0000020000114e5c : and eax, 0x5b3d8300 ; ret
0x00000200002438b9 : and eax, 0x608000b ; ret 0x1306
0x000002000023dd11 : and eax, 0x60c000b ; ret 0x1316
0x0000020000288831 : and eax, 0x60c000d ; ret 0x2536
0x000002000024cf11 : and eax, 0x60c000d ; ret 0x2596
0x000002000046bc21 : and eax, 0x74c00002 ; and al, 0x8b ; ret
0x00000200001bf61f : and eax, 0x7500394c ; and bh, bh ; ret 0x8948
0x00000200000f3a73 : and eax, 0x76860f00 ; ret
0x0000020000141608 : and eax, 0x7fff ; ret
0x0000020000141001 : and eax, 0x80 ; ret
0x00000200004d34f6 : and eax, 0x80000005 ; pop r14 ; ret
0x00000200004acd97 : and eax, 0x80000005 ; ret
0x0000020000169967 : and eax, 0x8148ffea ; ret 1
0x000002000040285e : and eax, 0x83000001 ; call qword ptr [rbx]
0x000002000047e622 : and eax, 0x8348c7ff ; ret
0x0000020000214625 : and eax, 0x8348d58b ; ret 0x4802
0x00000200003845d7 : and eax, 0x85ffdc97 ; ror byte ptr [rdi], 0x89 ; jmp rcx
0x00000200004efdf7 : and eax, 0x8affda50 ; ret
0x00000200000d2ef7 : and eax, 0x8b001c1f ; ret
0x0000020000407f33 : and eax, 0x8b068948 ; ret
0x00000200004c55be : and eax, 0x8b44000d ; ret
0x0000020000404414 : and eax, 0x8bc00002 ; ret
0x00000200005f3dcb : and eax, 0x8bffdfaf ; ret
0x00000200000f3a4c : and eax, 0x92840f00 ; ret
0x000002000000e5ef : and eax, 0x9a617b32 ; push rbx ; ret
0x000002000000d651 : and eax, 0x9e0da434 ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200001b841d : and eax, 0xa ; add eax, 0xa ; ret
0x0000020000244e2c : and eax, 0xa7003ceb ; in al, dx ; cmp al, 0 ; ret
0x000002000000b056 : and eax, 0xbc20125c ; call qword ptr [rdx]
0x00000200000f92da : and eax, 0xc0000000 ; cmp eax, ecx ; ja 0x200000f92ed ; ret
0x000002000051c186 : and eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x00000200000dcce2 : and eax, 0xc0000001 ; ret
0x00000200004e64f7 : and eax, 0xc0000004 ; ret
0x00000200005f592e : and eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200005d8f79 : and eax, 0xc000000d ; add rsp, 0x48 ; ret
0x00000200000e61cb : and eax, 0xc000000d ; ret
0x00000200000e2ef0 : and eax, 0xc000000e ; add rsp, 0x28 ; ret
0x0000020000033864 : and eax, 0xc0000022 ; ret
0x00000200001c53dc : and eax, 0xc0000023 ; ret
0x0000020000409766 : and eax, 0xc0000033 ; add rsp, 0x28 ; ret
0x00000200004c2bbc : and eax, 0xc0000034 ; ret
0x00000200005d8ac5 : and eax, 0xc000004b ; ret
0x000002000009c748 : and eax, 0xc00000a4 ; add rsp, 0x48 ; ret
0x00000200003a6354 : and eax, 0xc00000a5 ; ret
0x00000200004af5f0 : and eax, 0xc00000bb ; ret
0x00000200003ee01a : and eax, 0xc00002b9 ; ret
0x00000200004a285f : and eax, 0xc0190001 ; add rsp, 0x28 ; ret
0x00000200004c58b8 : and eax, 0xc033000d ; add rsp, 0x28 ; ret
0x000002000025baf6 : and eax, 0xc140200 ; add byte ptr [rsi + rax], cl ; ret
0x00000200005f3400 : and eax, 0xc3c00002 ; mov qword ptr [rcx], r9 ; ret
0x000002000057dd61 : and eax, 0xc3f6ffd6 ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x000002000000afb6 : and eax, 0xe20125c ; call qword ptr [rdx]
0x000002000055d17f : and eax, 0xe9c00002 ; ret
0x00000200005f28e8 : and eax, 0xe9c00002 ; ret 0
0x00000200003982c9 : and eax, 0xe9c00004 ; ret
0x0000020000220ecf : and eax, 0xe9ffffe6 ; ret
0x0000020000402946 : and eax, 0xebc00002 ; ret
0x000002000022b457 : and eax, 0xf0009d9 ; xchg eax, esp ; ret 0xba0f
0x000002000059b3ca : and eax, 0xf6fff353 ; ret 0x7420
0x000002000043a909 : and eax, 0xf6ffffff ; ret
0x000002000055c5fd : and eax, 0xfcbff41 ; test dword ptr [rsi], esp ; ret
0x00000200003976b9 : and eax, 0xfffeb8 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000015dcc5 : and eax, 0xfffff ; ret
0x0000020000214f03 : and eax, 0xfffff000 ; ret
0x00000200001bda60 : and eax, 0xfffffff0 ; ret
0x000002000012e3c2 : and eax, 0xfffffff8 ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000012ebbb : and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x00000200000de5a1 : and eax, 0xfffffff9 ; ret
0x0000020000095e31 : and eax, 0xfffffffc ; jne 0x20000095e42 ; mov qword ptr [r9], r8 ; ret
0x00000200001513bc : and eax, 0xfffffffc ; or eax, r8d ; wrmsr ; ret
0x00000200001514fd : and eax, 0xfffffffc ; wrmsr ; ret
0x000002000022518a : and eax, 0xfffffffe ; inc eax ; ret
0x000002000010c840 : and eax, 1 ; add eax, dword ptr [rdx + 0x260] ; ret
0x000002000065d919 : and eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000094c6c : and eax, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fc5f5 : and eax, 1 ; add rsp, 0x28 ; ret
0x00000200002278e8 : and eax, 1 ; add rsp, 0x48 ; ret
0x00000200005d6a33 : and eax, 1 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200003dabdc : and eax, 1 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200001f13e8 : and eax, 1 ; or eax, edx ; ret
0x000002000015dd08 : and eax, 1 ; pop rcx ; ret
0x00000200000c00d3 : and eax, 1 ; ret
0x00000200003dae26 : and eax, 1 ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000012e07d : and eax, 2 ; dec eax ; ret
0x0000020000131dda : and eax, 2 ; mov dword ptr [rip + 0x1711a9], eax ; ret
0x0000020000140f81 : and eax, 2 ; ret
0x000002000009c081 : and eax, 4 ; ret
0x0000020000108428 : and eax, 7 ; mov eax, r8d ; ret
0x0000020000140fc1 : and eax, 8 ; ret
0x00000200001bd61a : and eax, dword ptr [rax] ; add al, al ; and dword ptr [r9], 0 ; ret
0x0000020000493cc3 : and eax, dword ptr [rax] ; add al, al ; je 0x20000493c90 ; jmp 0x20000493c9d
0x00000200003e311f : and eax, dword ptr [rax] ; add al, al ; jmp 0x200003df403
0x00000200005b49e1 : and eax, dword ptr [rax] ; add al, al ; jmp 0x2000051d612
0x00000200004e2802 : and eax, dword ptr [rax] ; add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c53dd : and eax, dword ptr [rax] ; add al, al ; ret
0x00000200004754ce : and eax, dword ptr [rax] ; add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x00000200000b2109 : and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f453a : and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011a9c4 : and eax, dword ptr [rax] ; ret
0x000002000023dd0e : and eax, dword ptr [rax] ; sbb ah, byte ptr [rip + 0x60c000b] ; ret 0x1316
0x000002000020844a : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000208db5 : and eax, dword ptr [rbp + 0x3b] ; ret
0x0000020000387ca7 : and eax, dword ptr [rbp + 0x648e0fdb] ; ret 0x1a
0x00000200001666db : and eax, dword ptr [rbp - 0x75] ; ret
0x000002000053d559 : and eax, dword ptr [rbx] ; ret 0x48ff
0x00000200006f39be : and eax, dword ptr [rcx - 0x75] ; ret
0x0000020000590598 : and eax, dword ptr [rcx - 0x75] ; ret 0x341
0x00000200001740ff : and eax, dword ptr [rcx - 0xa] ; ret
0x000002000005e1b5 : and eax, dword ptr [rcx - 0xa] ; ret 0x7502
0x000002000001051d : and eax, dword ptr [rcx] ; ret 0xfa65
0x00000200001d8979 : and eax, dword ptr [rdi + 0x2890017] ; xor eax, eax ; ret
0x00000200000ea24a : and eax, dword ptr [rip + 0x266e50] ; ret
0x000002000027bf02 : and eax, dword ptr [rsi] ; sysenter
0x00000200000f6615 : and eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x000002000043db0a : and eax, eax ; or eax, 5 ; ret
0x0000020000102693 : and eax, eax ; shr eax, 0xe ; ret
0x00000200004dd0ec : and eax, ebp ; sub ch, byte ptr [rdx] ; ret 0x66ff
0x00000200003a51d2 : and eax, ecx ; add dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200000727ac : and eax, ecx ; ret
0x0000020000038ca7 : and eax, ecx ; test r8, r8 ; jne 0x20000038cc0 ; ret
0x0000020000010e76 : and eax, edi ; ret 0xf958
0x000002000010b21e : and eax, edx ; cmp eax, edx ; jne 0x2000010b1e5 ; jmp 0x200001a74f2
0x000002000002a968 : and eax, edx ; cmp rax, r8 ; je 0x2000002a97b ; xor al, al ; ret
0x000002000057cab1 : and eax, edx ; jmp 0x2000057cb20
0x000002000015e088 : and eax, edx ; or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x00000200001f134b : and eax, edx ; ret
0x00000200004f55ad : and eax, esi ; ret
0x00000200005d3073 : and eax, esi ; sar bh, 1 ; add rsp, 0x28 ; ret
0x000002000043db09 : and eax, r8d ; or eax, 5 ; ret
0x0000020000102692 : and eax, r8d ; shr eax, 0xe ; ret
0x0000020000183f99 : and ebp, dword ptr [rax - 0x74b20010] ; ret 0xf1e9
0x0000020000596ce4 : and ebp, dword ptr [rbp - 0x10fcbe01] ; jmp 0x200004c2f7d
0x000002000001f988 : and ebp, dword ptr [rsi + 0x1a7a] ; add byte ptr [rax], al ; ret
0x00000200006f10eb : and ebx, ebx ; mov ebx, 0x58d48ff ; ret 0x9958
0x00000200004a0ed5 : and ebx, edi ; ret 0xb9ff
0x000002000018419f : and ebx, esi ; je 0x200001841ae ; or rax, r10 ; jmp 0x200001841b1
0x00000200000b01b4 : and ecx, 0x3f ; mov eax, ecx ; ret
0x000002000013c2d8 : and ecx, 0x3f ; shl rax, cl ; or qword ptr [r8], rax ; ret
0x0000020000443d82 : and ecx, 0xfffffff8 ; call 0x20000068fd6
0x00000200004e1a6b : and ecx, 0xfffffffc ; mov rax, rcx ; ret
0x000002000002a7a9 : and ecx, 1 ; cmp r8b, cl ; jne 0x2000002a7ef ; ret
0x000002000067258d : and ecx, 1 ; mov eax, ecx ; ret
0x00000200003db472 : and ecx, 1 ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x00000200000e5cde : and ecx, 8 ; je 0x200000e5cd1 ; mov al, 1 ; ret
0x0000020000447737 : and ecx, dword ptr [rax - 0x75] ; iretd ; call 0x2000006a617
0x00000200004fcc72 : and ecx, dword ptr [rax - 0x75] ; or byte ptr [rax - 0x7d], r9b ; ret 0x4828
0x00000200003b259f : and ecx, dword ptr [rax - 0x75] ; ret
0x0000020000366a25 : and ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x0000020000367c3c : and ecx, dword ptr [rax - 0x75] ; ret 0x8d48
0x0000020000473daf : and ecx, dword ptr [rax - 0x75] ; retf ; call 0x2000009d46f
0x0000020000047d73 : and ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004ccd49 : and ecx, dword ptr [rbp + rbx*8 + 0x6e82e8ff] ; ret 0x48ff
0x0000020000374599 : and ecx, dword ptr [rbp] ; add al, ch ; ret 0xff83
0x000002000036554c : and ecx, dword ptr [rbx + 0x1315ffcf] ; ret 0xfff3
0x00000200002629bd : and ecx, dword ptr [rbx] ; add byte ptr [rip + 0x23166006], cl ; ret 0xf01f
0x0000020000439ce9 : and ecx, dword ptr [rcx] ; ret
0x00000200007138db : and ecx, dword ptr [rdx + 1] ; add bh, bh ; ret
0x00000200006800c9 : and ecx, eax ; cmp edx, ecx ; je 0x200006800d9 ; xor eax, eax ; ret
0x00000200004bc271 : and ecx, eax ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x000002000047a8cc : and ecx, eax ; mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x00000200003eddba : and ecx, ecx ; jmp 0x200003edd83
0x0000020000109fa3 : and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x000002000045bed6 : and ecx, edi ; inc dword ptr [rbp - 0x6c77f040] ; ret
0x000002000009bde1 : and ecx, edi ; jmp 0x2000009bd05
0x0000020000109fa2 : and ecx, r9d ; jmp qword ptr [r10 + rax*8]
0x00000200001cd38c : and edi, 0x58b48ff ; ret 0x107d
0x000002000017fcc5 : and edi, 0x8b48ffef ; ret 0xb948
0x0000020000191fc9 : and edi, eax ; jmp 0x200000be20e
0x0000020000538a3f : and edi, ebp ; dec dword ptr [rbx + 0x14e9807d] ; ret
0x000002000023996c : and edi, edi ; ret
0x00000200003b51e1 : and edi, edi ; ret 0xfa83
0x000002000049e6e8 : and edx, 1 ; call rdi
0x000002000060a0fd : and edx, dword ptr [rbp - 0x51] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000ebebf : and edx, dword ptr [rbx] ; or eax, dword ptr [rax] ; mov eax, 0xc0000225 ; ret
0x0000020000379803 : and edx, eax ; call qword ptr [rsi]
0x00000200001e9b07 : and edx, ebp ; call qword ptr [rdi]
0x00000200000a6cc7 : and edx, ebp ; sub rdx, rsi ; call r12
0x0000020000069e2f : and edx, edi ; dec dword ptr [rdi] ; mov esi, 0xbe0f080c ; ret 0xc82b
0x000002000047ef9d : and edx, edi ; ret
0x00000200005b79d1 : and esi, 3 ; call 0x200003a3bf5
0x00000200001f303d : and esi, dword ptr [rax] ; or al, 0 ; ret
0x00000200003f1c7e : and esi, dword ptr [rsi + rdx] ; add byte ptr [rbx], ah ; ret
0x00000200004df1a2 : and esi, edi ; call 0x20000109f7d
0x000002000018d8ce : and esi, edi ; ret 0x600
0x0000020000581667 : and esi, esi ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200005fc22f : and esi, esi ; ret 0x7403
0x00000200005fc2da : and esi, esi ; ret 0x7407
0x0000020000457ff8 : and esi, esi ; ret 0x7503
0x00000200000366ee : and esi, esi ; ret 0x7504
0x00000200004ac931 : and esi, esp ; dec dword ptr [rax - 0x75] ; ret
0x000002000022a8ba : and esp, 0xfffffffe ; jmp 0x2000022a8ca
0x000002000058044f : and esp, ecx ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000027dbf0 : and esp, esi ; jo 0x2000027dbf8 ; ret 0x71d5
0x000002000009bafa : and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x00000200005ec872 : and qword ptr [r8], 0 ; mov al, r10b ; ret
0x00000200001bbaa6 : and qword ptr [r8], 0 ; ret
0x00000200001d969d : and qword ptr [r8], rax ; ret
0x00000200004e6c7c : and qword ptr [r9], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cef62 : and qword ptr [r9], 0 ; ret
0x00000200006715c4 : and qword ptr [rax + 0x10], 0 ; ret
0x00000200004f1aa2 : and qword ptr [rbp + 0x77], rbx ; call 0x2000006fe28
0x00000200004db719 : and qword ptr [rbx + 0x10], 0 ; jmp 0x200004db6e9
0x00000200000a1a5d : and qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b8b42 : and qword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ea34f : and qword ptr [rcx + 0x10], 0 ; ret
0x00000200004c7159 : and qword ptr [rcx + 0x20], 0 ; ret
0x00000200000e6dfe : and qword ptr [rcx + 0x20], 0xff ; ret
0x00000200004315a9 : and qword ptr [rcx + 0x30], 0 ; ret
0x00000200001c4a42 : and qword ptr [rcx + 0x60], 0 ; ret
0x000002000015e038 : and qword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x000002000015e1e0 : and qword ptr [rcx + 0x68], 0 ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200001cdc7f : and qword ptr [rcx + 0x70], 0 ; ret
0x000002000015e18e : and qword ptr [rcx + 8], 0 ; ret
0x00000200001d9677 : and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000238738 : and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200001d8f9b : and qword ptr [rcx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000666f8a : and qword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x0000020000122d0b : and qword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000015e0bc : and qword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200000967c6 : and qword ptr [rcx], 0 ; ret
0x00000200001028af : and qword ptr [rdx + 0x18], 0 ; ret
0x0000020000214322 : and qword ptr [rdx + 8], 0 ; ret
0x00000200004043e0 : and qword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x00000200004fc6e9 : and qword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x0000020000209117 : and qword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003753fd : and qword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x0000020000730030 : and qword ptr [rip - 0x48ac78], 0 ; ret
0x000002000064e350 : and qword ptr [rsp + 0x20], 0 ; call r10
0x000002000003ca6e : and r11b, bpl ; ret 0xc7ff
0x000002000022a8b9 : and r12, 0xfffffffffffffffe ; jmp 0x2000022a8cb
0x00000200004df1a1 : and r14, rdi ; call 0x20000109f7e
0x000002000005c80b : and r14b, r14b ; ret
0x0000020000038ca6 : and r8, rcx ; test r8, r8 ; jne 0x20000038cc1 ; ret
0x0000020000644d9d : and r8b, 1 ; mov al, r8b ; ret
0x000002000041f696 : and r8b, bpl ; ret
0x0000020000446445 : and r8b, bpl ; test byte ptr [rbx], ch ; ret 0x48ff
0x0000020000108427 : and r8d, 7 ; mov eax, r8d ; ret
0x000002000057cab0 : and r8d, edx ; jmp 0x2000057cb21
0x00000200003eddb9 : and r9, rcx ; jmp 0x200003edd84
0x000002000059ecab : and r9b, bpl ; in al, -0x2c ; push rsi ; ret
0x0000020000140fa0 : and rax, 0x157 ; ret
0x0000020000141000 : and rax, 0x80 ; ret
0x0000020000214f02 : and rax, 0xfffff000 ; ret
0x00000200001bda5f : and rax, 0xfffffffffffffff0 ; ret
0x00000200000de5a0 : and rax, 0xfffffffffffffff9 ; ret
0x0000020000095e30 : and rax, 0xfffffffffffffffc ; jne 0x20000095e43 ; mov qword ptr [r9], r8 ; ret
0x0000020000140fe0 : and rax, 1 ; ret
0x0000020000140f80 : and rax, 2 ; ret
0x0000020000140f60 : and rax, 4 ; ret
0x0000020000140fc0 : and rax, 8 ; ret
0x00000200000f6614 : and rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x00000200000727ab : and rax, rcx ; ret
0x00000200001f134a : and rax, rdx ; ret
0x000002000018419e : and rbx, rsi ; je 0x200001841af ; or rax, r10 ; jmp 0x200001841b2
0x0000020000443d81 : and rcx, 0xfffffffffffffff8 ; call 0x20000068fd7
0x00000200004e1a6a : and rcx, 0xfffffffffffffffc ; mov rax, rcx ; ret
0x00000200004bc270 : and rcx, r8 ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x0000020000191fc8 : and rdi, rax ; jmp 0x200000be20f
0x00000200001e9b06 : and rdx, r13 ; call qword ptr [rdi]
0x00000200000a6cc6 : and rdx, r13 ; sub rdx, rsi ; call r12
0x0000020000379802 : and rdx, rax ; call qword ptr [rsi]
0x0000020000508061 : and word ptr [rdx + 8], cx ; ret
0x000002000026483c : andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x00000200001ac645 : bsr ecx, ecx ; jne 0x200001ac656 ; mov eax, r10d ; jmp 0x200001ac65d
0x00000200000960be : bsr edx, eax ; inc dl ; jmp 0x2000009608c
0x00000200000960be : bsr edx, eax ; inc dl ; jmp 0x2000009608e
0x00000200001ac644 : bsr rcx, r9 ; jne 0x200001ac657 ; mov eax, r10d ; jmp 0x200001ac65e
0x0000020000730022 : bswap eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001ae22d : bswap eax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x00000200005801cd : bswap edi ; mov bl, 0xff ; nop ; jmp 0x2000047c452
0x00000200001ae22c : bswap rax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000010fdc9 : bt dword ptr [rax], ecx ; jb 0x2000010fdd8 ; xor eax, eax ; ret
0x0000020000121f1c : bt dword ptr [rax], edx ; setb al ; ret
0x0000020000665627 : bt eax, 0x11 ; jb 0x20000665638 ; mov al, 1 ; ret
0x000002000043aba7 : bt eax, 0xb ; jae 0x2000043abbb ; call 0x20000068fd9
0x00000200003f2637 : bt eax, 9 ; jb 0x200003f2648 ; xor eax, eax ; ret
0x000002000013accb : bt eax, ecx ; setb al ; ret
0x00000200000e3f5f : bt ecx, 0x1b ; jb 0x200000e3f71 ; ret
0x0000020000427320 : bt ecx, 0x1c ; jae 0x20000427321 ; or dword ptr [rdx], eax ; ret
0x000002000014cad2 : bt ecx, eax ; jae 0x2000014cae1 ; mov al, 1 ; ret
0x00000200004a98a4 : bt edx, 0x10 ; jb 0x200004a98c0 ; ret
0x000002000014cad1 : bt rcx, rax ; jae 0x2000014cae2 ; mov al, 1 ; ret
0x000002000023d3e0 : btc dword ptr [rcx], 0 ; cmp eax, 0xbc0039ba ; ret
0x000002000023d3c8 : btc dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x00000200000f6f2b : btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000103734 : btr dword ptr [rax], edx ; ret
0x00000200000fcdc6 : btr eax, 0xd ; ret
0x00000200000fcdc5 : btr rax, 0xd ; ret
0x000002000067281f : bts dword ptr [r8 + 0x20], 0x18 ; ret
0x0000020000672826 : bts dword ptr [r8 + 0x20], 0x19 ; ret
0x0000020000672842 : bts dword ptr [r8 + 0x20], 0x1a ; ret
0x000002000067282d : bts dword ptr [r8 + 0x20], 0x1b ; ret
0x000002000067283b : bts dword ptr [r8 + 0x20], 0x1c ; ret
0x0000020000672834 : bts dword ptr [r8 + 0x20], 0x1d ; ret
0x00000200004a9866 : bts dword ptr [r9], 0x1d ; ret
0x0000020000672820 : bts dword ptr [rax + 0x20], 0x18 ; ret
0x0000020000672827 : bts dword ptr [rax + 0x20], 0x19 ; ret
0x0000020000672843 : bts dword ptr [rax + 0x20], 0x1a ; ret
0x000002000067282e : bts dword ptr [rax + 0x20], 0x1b ; ret
0x000002000067283c : bts dword ptr [rax + 0x20], 0x1c ; ret
0x0000020000672835 : bts dword ptr [rax + 0x20], 0x1d ; ret
0x00000200001bb617 : bts dword ptr [rax + 0x40], 9 ; ret
0x0000020000221ab1 : bts dword ptr [rax], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004babf4 : bts dword ptr [rax], edx ; inc rdx ; jmp 0x200004babc3
0x0000020000103680 : bts dword ptr [rax], edx ; ret
0x00000200004babf3 : bts dword ptr [rax], r10d ; inc rdx ; jmp 0x200004babc4
0x000002000009625b : bts dword ptr [rcx], 0 ; jb 0x20000096268 ; ret
0x0000020000122b64 : bts dword ptr [rcx], 0 ; jb 0x20000122b7a ; mov al, 1 ; ret
0x00000200004a9867 : bts dword ptr [rcx], 0x1d ; ret
0x00000200000ca211 : bts dword ptr [rcx], 0xc ; ret
0x00000200000ca200 : bts dword ptr [rcx], 0xd ; test al, 4 ; jne 0x200000ca218 ; ret
0x00000200000d10c5 : bts dword ptr [rcx], 9 ; ret
0x00000200003f72d1 : bts dword ptr [rdx], 0x18 ; ret
0x00000200004b3b80 : bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x000002000008325c : bts dword ptr [rsp + 0x54], 7 ; jmp 0x2000008322a
0x00000200004a98ba : bts eax, 0xc ; ret
0x00000200003b108a : bts ebx, 0xa ; jmp 0x200003b1058
0x000002000009625a : bts qword ptr [rcx], 0 ; jb 0x20000096269 ; ret
0x0000020000122b63 : bts qword ptr [rcx], 0 ; jb 0x20000122b7b ; mov al, 1 ; ret
0x00000200000ca210 : bts qword ptr [rcx], 0xc ; ret
0x00000200000ca1ff : bts qword ptr [rcx], 0xd ; test al, 4 ; jne 0x200000ca219 ; ret
0x00000200003b1089 : bts rbx, 0xa ; jmp 0x200003b1059
0x000002000013aa1b : call 0x1ff835baa2f
0x00000200003b3c74 : call 0x1ff83833c98
0x0000020000442456 : call 0x1ff838c2561
0x000002000047622e : call 0x1ff838f6325
0x00000200005db69c : call 0x1ff83a5b858
0x000002000057550e : call 0x1ff8419881b
0x0000020000709674 : call 0x1ff858057ba
0x0000020000709673 : call 0x1ff858057bb
0x000002000043ac24 : call 0x1ff86436f24
0x000002000008301a : call 0x1ff8b550ab1
0x000002000040eb2c : call 0x1ff8b8aad36
0x00000200004b9583 : call 0x1ff8b947800
0x00000200001db207 : call 0x1ff8be03d53
0x00000200005389e0 : call 0x1ff915380ed
0x0000020000129673 : call 0x1ffa8d4c9b3
0x000002000072258c : call 0x1ffa971e87d
0x00000200001481ee : call 0x1ffb723c300
0x00000200003fea2c : call 0x1ffb74f2bfa
0x0000020000130b63 : call 0x1ffba225379
0x0000020000557f53 : call 0x1ffc0dac761
0x0000020000213b38 : call 0x1ffc169fdca
0x000002000004a35e : call 0x1ffc207eba6
0x0000020000058d22 : call 0x1ffc208d52f
0x000002000009bab3 : call 0x1ffc20d02c0
0x00000200000c506b : call 0x1ffc20f98b3
0x00000200000735a6 : call 0x1ffc21281b5
0x000002000011c962 : call 0x1ffc215116f
0x000002000011c8cb : call 0x1ffc21511d8
0x000002000011e497 : call 0x1ffc21530df
0x00000200000dec2d : call 0x1ffc219383c
0x00000200001b8f3a : call 0x1ffc21ed747
0x00000200001efad6 : call 0x1ffc222431e
0x00000200001f3209 : call 0x1ffc2227e51
0x0000020000036fa9 : call 0x1ffc226b7bb
0x000002000003af27 : call 0x1ffc226f739
0x0000020000052549 : call 0x1ffc2286d5b
0x00000200000599e6 : call 0x1ffc228e1f8
0x000002000005ba4c : call 0x1ffc229025e
0x000002000006238b : call 0x1ffc2296b9d
0x000002000006239a : call 0x1ffc2296bac
0x000002000006b624 : call 0x1ffc229ff36
0x000002000006b658 : call 0x1ffc229ff6a
0x000002000006b669 : call 0x1ffc229ff7b
0x000002000006ef6f : call 0x1ffc22a387a
0x000002000007784f : call 0x1ffc22ac061
0x0000020000077868 : call 0x1ffc22ac07a
0x0000020000077879 : call 0x1ffc22ac08b
0x00000200000785af : call 0x1ffc22aceba
0x0000020000079559 : call 0x1ffc22ade6e
0x000002000007c672 : call 0x1ffc22b0f87
0x000002000008abc4 : call 0x1ffc22bf3d9
0x000002000008af43 : call 0x1ffc22bf758
0x00000200000993c0 : call 0x1ffc22cdbd2
0x000002000009968d : call 0x1ffc22cde9f
0x000002000009a1cd : call 0x1ffc22ce9e8
0x000002000009aad4 : call 0x1ffc22cf2e9
0x00000200000a049d : call 0x1ffc22d4caf
0x00000200000a06b2 : call 0x1ffc22d4ec4
0x00000200000a5c2f : call 0x1ffc22da441
0x00000200000a5e1c : call 0x1ffc22da72e
0x00000200000b2b33 : call 0x1ffc22e7348
0x00000200000b2cf1 : call 0x1ffc22e7506
0x00000200000b31f1 : call 0x1ffc22e7b06
0x00000200000b3619 : call 0x1ffc22e7f2b
0x00000200000bf937 : call 0x1ffc22f4149
0x00000200000c0f69 : call 0x1ffc22f577b
0x00000200000c1146 : call 0x1ffc22f5958
0x00000200000c8203 : call 0x1ffc22fca15
0x00000200000c9b7b : call 0x1ffc22fe390
0x00000200000ca310 : call 0x1ffc22feb22
0x00000200000d1563 : call 0x1ffc2305d75
0x00000200000d1fff : call 0x1ffc2306914
0x00000200000ea1fc : call 0x1ffc231ea07
0x000002000006c68d : call 0x1ffc23212a2
0x00000200000f668e : call 0x1ffc232aea9
0x00000200000f6742 : call 0x1ffc232af57
0x00000200000fa06c : call 0x1ffc232e981
0x00000200000fc7d8 : call 0x1ffc2330fea
0x00000200001066ab : call 0x1ffc233aebd
0x000002000010e003 : call 0x1ffc2342818
0x000002000010f987 : call 0x1ffc2344199
0x00000200001120c9 : call 0x1ffc23468de
0x000002000011778d : call 0x1ffc234bfa2
0x000002000011d9de : call 0x1ffc23521f0
0x00000200001243cd : call 0x1ffc2358bdf
0x0000020000126649 : call 0x1ffc235ae5b
0x0000020000126bfe : call 0x1ffc235b410
0x000002000013aed8 : call 0x1ffc236f6ed
0x0000020000169c43 : call 0x1ffc239e455
0x0000020000170b51 : call 0x1ffc23a5363
0x000002000017577d : call 0x1ffc23aa092
0x000002000017dd17 : call 0x1ffc23b2529
0x00000200001871a5 : call 0x1ffc23bb9c0
0x000002000018e124 : call 0x1ffc23c2939
0x000002000018e536 : call 0x1ffc23c2e48
0x00000200001b66e0 : call 0x1ffc23eaeeb
0x00000200001b9360 : call 0x1ffc23edb75
0x00000200001dbd44 : call 0x1ffc241064f
0x0000020000060c61 : call 0x1ffc2415476
0x00000200001e2538 : call 0x1ffc2416d4a
0x00000200001e6938 : call 0x1ffc241b14a
0x00000200001e7a90 : call 0x1ffc241c2a2
0x00000200001ea543 : call 0x1ffc241ed55
0x000002000006c3af : call 0x1ffc24204be
0x00000200001ed509 : call 0x1ffc2421d1b
0x00000200001eed82 : call 0x1ffc2423594
0x00000200001f1127 : call 0x1ffc242593c
0x00000200001f260b : call 0x1ffc2426f20
0x00000200001f2745 : call 0x1ffc242705a
0x00000200001f3c29 : call 0x1ffc242843b
0x00000200001f7030 : call 0x1ffc242b94b
0x00000200001f7cc6 : call 0x1ffc242c4d8
0x00000200001f7f42 : call 0x1ffc242c757
0x00000200001f8e87 : call 0x1ffc242d69c
0x00000200001f8f4b : call 0x1ffc242d760
0x00000200001f8fb6 : call 0x1ffc242d7cb
0x00000200001f9821 : call 0x1ffc242e033
0x00000200001f9ce3 : call 0x1ffc242e4f8
0x0000020000385fbf : call 0x1ffc243a7e8
0x00000200000c36eb : call 0x1ffc24783f8
0x000002000048468b : call 0x1ffc24b92d3
0x0000020000105dc7 : call 0x1ffc24ba6e4
0x0000020000490cc2 : call 0x1ffc24c550a
0x000002000013a99b : call 0x1ffc24ef1a6
0x00000200004daf4b : call 0x1ffc250f758
0x00000200003b52dd : call 0x1ffc25e9aef
0x00000200004af8c9 : call 0x1ffc25f841a
0x00000200004af8c8 : call 0x1ffc25f841b
0x00000200003f6c10 : call 0x1ffc262b422
0x00000200004438ee : call 0x1ffc2678100
0x00000200004906ea : call 0x1ffc26c4efc
0x000002000049262a : call 0x1ffc26c6e3c
0x00000200004d1639 : call 0x1ffc2705e44
0x00000200004d20e5 : call 0x1ffc27068f0
0x00000200004d28d3 : call 0x1ffc27070e5
0x00000200004ed3ba : call 0x1ffc2721bcc
0x000002000050c0bc : call 0x1ffc27408c7
0x000002000050e017 : call 0x1ffc2742822
0x00000200004292b0 : call 0x1ffc275dec2
0x000002000042ac3c : call 0x1ffc275f84e
0x000002000054bf8e : call 0x1ffc27808a9
0x000002000045da57 : call 0x1ffc2792667
0x00000200005f8c1f : call 0x1ffc282d431
0x00000200005fa46e : call 0x1ffc282ec80
0x00000200005fbca4 : call 0x1ffc28304b6
0x000002000060239a : call 0x1ffc28364a9
0x00000200000525fc : call 0x1ffc2906a0a
0x00000200000cd95b : call 0x1ffc2911a67
0x00000200000d090a : call 0x1ffc2914a16
0x00000200006f61d4 : call 0x1ffc292a9df
0x00000200006f645e : call 0x1ffc292ac69
0x00000200006f6978 : call 0x1ffc292b18a
0x00000200006f7171 : call 0x1ffc292ba83
0x00000200006f8a5e : call 0x1ffc292d270
0x00000200006f9653 : call 0x1ffc292de65
0x00000200006f9848 : call 0x1ffc292e05a
0x00000200006f9d7c : call 0x1ffc292e58e
0x00000200006f9fb4 : call 0x1ffc292e7c6
0x00000200006fa9d8 : call 0x1ffc292f1ed
0x00000200006fac53 : call 0x1ffc292f465
0x00000200006fac09 : call 0x1ffc292f81b
0x00000200006fb677 : call 0x1ffc292fe89
0x00000200006fbb32 : call 0x1ffc2930344
0x0000020000098a15 : call 0x1ffc294d324
0x000002000010c6c8 : call 0x1ffc29c13d6
0x000002000020c0de : call 0x1ffc2a408eb
0x0000020000082ae8 : call 0x1ffc2c43a39
0x00000200003b7bdd : call 0x1ffc2c6bfe8
0x00000200004874c8 : call 0x1ffc2cd001a
0x00000200004874c7 : call 0x1ffc2cd001b
0x00000200004874e1 : call 0x1ffc2cd0033
0x00000200004874e0 : call 0x1ffc2cd0034
0x000002000066d8c4 : call 0x1ffc2ce0fb5
0x000002000054a5ea : call 0x1ffc2dfeaf2
0x000002000054bcb8 : call 0x1ffc2e005c0
0x000002000054d0f4 : call 0x1ffc2e016fc
0x000002000054d132 : call 0x1ffc2e0173a
0x00000200000ea7f0 : call 0x1ffc2f7a807
0x00000200006d2ce3 : call 0x1ffc2f86df1
0x00000200006d342d : call 0x1ffc2f8753b
0x00000200003c40e7 : call 0x1ffc2f8cc38
0x00000200003c40e6 : call 0x1ffc2f8cc39
0x00000200006e43f3 : call 0x1ffc2f98501
0x000002000009c0ec : call 0x1ffc309c0f8
0x0000020000548d4a : call 0x1ffc30a9d52
0x00000200000a63a0 : call 0x1ffc30b87ad
0x00000200000c622c : call 0x1ffc30d864d
0x00000200000e7b6f : call 0x1ffc30f9f7c
0x00000200000febeb : call 0x1ffc30febf7
0x0000020000100d43 : call 0x1ffc3100d4c
0x0000020000100e2b : call 0x1ffc3100e34
0x00000200000fdc14 : call 0x1ffc3110028
0x0000020000118bf7 : call 0x1ffc3118c00
0x00000200005a4339 : call 0x1ffc3132c41
0x00000200001cb755 : call 0x1ffc31cb76a
0x00000200001cb784 : call 0x1ffc31cb799
0x0000020000032621 : call 0x1ffc3256b2d
0x000002000005986b : call 0x1ffc328e080
0x000002000005ae92 : call 0x1ffc328f7a4
0x000002000005b490 : call 0x1ffc328fda2
0x000002000005b668 : call 0x1ffc328ff7a
0x00000200000798ba : call 0x1ffc32ae0cc
0x0000020000087b35 : call 0x1ffc32bc041
0x00000200000a28b2 : call 0x1ffc32d71c5
0x00000200000a255c : call 0x1ffc32d7271
0x00000200000e460f : call 0x1ffc32e555c
0x00000200000c0f98 : call 0x1ffc32f58b3
0x00000200000c0f25 : call 0x1ffc32f5c40
0x00000200000c53e0 : call 0x1ffc32f9cf2
0x00000200000c5493 : call 0x1ffc32f9da5
0x00000200000d247d : call 0x1ffc3306c92
0x00000200000ec2d1 : call 0x1ffc33103dc
0x00000200000ec301 : call 0x1ffc331040d
0x00000200000f2eaf : call 0x1ffc33276c1
0x0000020000488648 : call 0x1ffc3328615
0x000002000013f965 : call 0x1ffc3374270
0x0000020000103c9a : call 0x1ffc33b89bf
0x00000200001894fe : call 0x1ffc33bde13
0x00000200001db1fd : call 0x1ffc33dc14a
0x00000200001db1fc : call 0x1ffc33dc14b
0x00000200001db84f : call 0x1ffc33dc79c
0x00000200001db84e : call 0x1ffc33dc79d
0x00000200001a8579 : call 0x1ffc33dcd94
0x00000200001ab364 : call 0x1ffc33dfc7f
0x00000200001b8b59 : call 0x1ffc33ed464
0x00000200001b8d6e : call 0x1ffc33ed679
0x00000200001d9c53 : call 0x1ffc3406d52
0x000002000006c0ea : call 0x1ffc34201f9
0x00000200001ef4ac : call 0x1ffc3423cc1
0x00000200001ef546 : call 0x1ffc3423d5b
0x000002000020aa4d : call 0x1ffc343ee5a
0x0000020000441adb : call 0x1ffc345fb67
0x0000020000443a1b : call 0x1ffc3478323
0x0000020000443a1a : call 0x1ffc3478324
0x00000200005086c0 : call 0x1ffc34a1db1
0x00000200005086bf : call 0x1ffc34a1db2
0x0000020000010734 : call 0x1ffc34a6f16
0x00000200004a9aec : call 0x1ffc34bbef9
0x00000200004ad6c1 : call 0x1ffc34bfacd
0x00000200004ca85e : call 0x1ffc34c0f66
0x00000200001137c6 : call 0x1ffc34c7fef
0x00000200004c0c93 : call 0x1ffc34d309e
0x00000200000298e1 : call 0x1ffc34f2432
0x00000200000298e0 : call 0x1ffc34f2433
0x00000200004e7b67 : call 0x1ffc34f9f73
0x00000200001f8a8e : call 0x1ffc35ad29e
0x00000200005ceed0 : call 0x1ffc35e12dc
0x0000020000665602 : call 0x1ffc3677a1a
0x00000200004895a5 : call 0x1ffc36ad6b2
0x00000200004895d8 : call 0x1ffc36ad6e6
0x0000020000718f74 : call 0x1ffc3718f7d
0x000002000043154e : call 0x1ffc37e5d77
0x00000200006d276b : call 0x1ffc3906f7d
0x00000200006d3242 : call 0x1ffc3907a54
0x00000200006f6f7e : call 0x1ffc392b890
0x00000200006f9224 : call 0x1ffc392db36
0x00000200006fb266 : call 0x1ffc392fb78
0x00000200006fb247 : call 0x1ffc392ff59
0x000002000007e9c3 : call 0x1ffc39332d2
0x0000020000118510 : call 0x1ffc394ce21
0x00000200000b3672 : call 0x1ffc3967e83
0x00000200001711d1 : call 0x1ffc39b52e8
0x000002000066e7b7 : call 0x1ffc3a22bcc
0x000002000022beed : call 0x1ffc3ae07f5
0x000002000045bb0f : call 0x1ffc3c9031c
0x000002000049e3b2 : call 0x1ffc3d527c6
0x00000200005f7dc9 : call 0x1ffc3d93e57
0x00000200004ef387 : call 0x1ffc3daf355
0x000002000054b01c : call 0x1ffc3dff924
0x000002000054b064 : call 0x1ffc3dff96c
0x000002000054cc58 : call 0x1ffc3e01960
0x000002000054d46b : call 0x1ffc3e01e73
0x000002000054d0d3 : call 0x1ffc3e01edb
0x0000020000551eb8 : call 0x1ffc3e064c0
0x000002000020c40b : call 0x1ffc3e14f5d
0x00000200005ef81f : call 0x1ffc3e9f829
0x00000200004faf76 : call 0x1ffc3f99067
0x0000020000051fd5 : call 0x1ffc3fb1fef
0x0000020000100ac7 : call 0x1ffc406fb5b
0x0000020000157af5 : call 0x1ffc40bbc0e
0x0000020000617a37 : call 0x1ffc4188981
0x00000200006160a7 : call 0x1ffc42263c0
0x0000020000383e44 : call 0x1ffc42f3e67
0x0000020000381439 : call 0x1ffc437dd75
0x00000200005d13cf : call 0x1ffc4e05cd9
0x00000200005d1564 : call 0x1ffc4e05e6e
0x00000200001122c4 : call 0x1ffc69563de
0x00000200003cc5fd : call 0x1ffc9374b19
0x000002000040d22c : call 0x1ffcad1951b
0x000002000040d22b : call 0x1ffcad1951c
0x0000020000148f4e : call 0x1ffd017d799
0x000002000037d102 : call 0x1ffd03b194d
0x00000200005fa5c4 : call 0x1ffd25f521b
0x000002000019ea76 : call 0x1ffd3192b8e
0x000002000054a7fa : call 0x1ffd3deea06
0x000002000005dd31 : call 0x1ffe0891e44
0x0000020000048057 : call 0x1ffe0c5c984
0x000002000010023c : call 0x1ffe0d28548
0x00000200004b9581 : call 0x1ffe2be7dc9
0x0000020000549419 : call 0x1ffe4d8da24
0x00000200005a64c4 : call 0x1ffe52ff3b8
0x00000200005a64c3 : call 0x1ffe52ff3b9
0x00000200000f5c1d : call 0x1ffe8d11e27
0x000002000038e1e1 : call 0x1ffe8faa3eb
0x00000200003c7c8d : call 0x1ffe8fe3e97
0x00000200004933ec : call 0x1ffe90af5f6
0x0000020000602b86 : call 0x1ffe921ed90
0x000002000067438f : call 0x1ffe92776df
0x000002000067438e : call 0x1ffe92776e0
0x000002000011c2c3 : call 0x1ffe9d44e0c
0x0000020000443f54 : call 0x1ffea440223
0x00000200001d4b50 : call 0x1fff2c85244
0x00000200001d4b4f : call 0x1fff2c85245
0x000002000059b7d4 : call 0x1fff3bcd6c9
0x00000200005bcb2f : call 0x1fffea0cfca
0x000002000043ff19 : call 0x1ffff84e925
0x00000200000780ae : call 0x1ffffc8c8d7
0x0000020000078d87 : call 0x1ffffc8d5b0
0x00000200001f85ee : call 0x1ffffe0ce17
0x00000200000107dc : call 0x1ffffed9c68
0x00000200000107db : call 0x1ffffed9c69
0x000002000005017f : call 0x1fffffd269f
0x0000020000054b56 : call 0x1fffffd7076
0x0000020000054b81 : call 0x1fffffd70aa
0x0000020000059f60 : call 0x1fffffdc480
0x000002000005b4e6 : call 0x1fffffdda0f
0x000002000005b6be : call 0x1fffffddbe7
0x000002000005ddd0 : call 0x1fffffe02f0
0x000002000005ddfd : call 0x1fffffe0326
0x000002000006c8d9 : call 0x1fffffeedf9
0x00000200000a0570 : call 0x20000022a99
0x00000200000a157c : call 0x20000023a9c
0x00000200000a1652 : call 0x20000023b7b
0x00000200000a1775 : call 0x20000023c95
0x00000200000a17a6 : call 0x20000023ccf
0x00000200004da394 : call 0x2000002664e
0x000002000056b8d2 : call 0x20000027bbe
0x00000200003fcb8a : call 0x20000027bbf
0x0000020000635e51 : call 0x20000027bc4
0x0000020000441c1e : call 0x2000002aca7
0x00000200006077d5 : call 0x2000002b787
0x00000200003fd454 : call 0x2000002c2f7
0x0000020000192002 : call 0x2000002e2e2
0x00000200001e3f11 : call 0x20000030172
0x00000200004a497a : call 0x20000030c62
0x0000020000405a6a : call 0x20000030c63
0x00000200004a4d30 : call 0x20000030f72
0x0000020000402121 : call 0x20000030f73
0x00000200004021a6 : call 0x20000031493
0x00000200003c6d7d : call 0x20000032fc2
0x000002000040499e : call 0x20000032fc3
0x000002000018702b : call 0x20000033282
0x0000020000405a88 : call 0x20000033463
0x000002000051355c : call 0x20000033a68
0x000002000047962c : call 0x200000358ce
0x00000200006eb24d : call 0x20000035d77
0x000002000072097c : call 0x20000035d79
0x00000200001e7f82 : call 0x200000386ff
0x0000020000062273 : call 0x20000039e26
0x000002000003b5b5 : call 0x2000003c71c
0x000002000003b5b4 : call 0x2000003c71d
0x000002000036e94f : call 0x2000003c8e7
0x0000020000030e1c : call 0x2000003d06e
0x0000020000030e1b : call 0x2000003d06f
0x0000020000030e1a : call 0x2000003d070
0x0000020000031802 : call 0x2000003d072
0x0000020000419428 : call 0x2000003e013
0x00000200000bf970 : call 0x20000041e90
0x00000200000bf9a1 : call 0x20000041eca
0x0000020000155fbb : call 0x20000042292
0x00000200000c1175 : call 0x20000043695
0x0000020000421143 : call 0x20000043cd7
0x00000200001b921a : call 0x20000045492
0x0000020000418c08 : call 0x20000045493
0x00000200001056bc : call 0x20000045496
0x0000020000560a61 : call 0x20000045498
0x000002000059ba53 : call 0x20000047c72
0x00000200004dbec1 : call 0x20000048192
0x0000020000418c9a : call 0x20000048193
0x000002000041d163 : call 0x2000004861b
0x000002000066e691 : call 0x2000004a8ba
0x000002000066e6a5 : call 0x2000004a8bb
0x000002000066e6a4 : call 0x2000004a8bc
0x00000200000f33dd : call 0x2000004b832
0x00000200001727a1 : call 0x2000004b833
0x00000200005fd297 : call 0x2000004bdb6
0x00000200003b527c : call 0x20000054ce1
0x0000020000054e50 : call 0x20000054ea0
0x00000200003b5eec : call 0x20000055043
0x000002000051c11e : call 0x20000058402
0x00000200002194e1 : call 0x20000058406
0x000002000010c431 : call 0x20000058732
0x00000200003b67e6 : call 0x2000005e287
0x0000020000437962 : call 0x20000063ac3
0x0000020000439342 : call 0x20000063d97
0x0000020000438429 : call 0x20000063dd7
0x0000020000098366 : call 0x20000064582
0x000002000016b3c9 : call 0x20000064589
0x0000020000439b8d : call 0x20000064dd3
0x000002000043959f : call 0x20000065ec3
0x0000020000604f1f : call 0x20000066c26
0x000002000059db32 : call 0x20000066c28
0x000002000039cdb3 : call 0x20000068fd2
0x0000020000439075 : call 0x20000068fd3
0x000002000044617b : call 0x20000068fd4
0x000002000056f55a : call 0x20000068fd6
0x000002000003ce21 : call 0x200000690a2
0x000002000043b0b2 : call 0x200000690a3
0x00000200004a42c9 : call 0x200000690a8
0x00000200003ece76 : call 0x200000690e2
0x0000020000439662 : call 0x200000690e3
0x00000200005ccf3c : call 0x200000691b2
0x000002000043c969 : call 0x200000691b3
0x0000020000070ad5 : call 0x200000691b6
0x000002000049a4d7 : call 0x200000691b7
0x00000200004b9b99 : call 0x200000691b8
0x00000200000fa8c3 : call 0x20000069817
0x000002000045e398 : call 0x2000006a612
0x000002000043a67b : call 0x2000006a613
0x00000200004109db : call 0x2000006a616
0x00000200005c3b23 : call 0x2000006fe22
0x000002000044060a : call 0x2000006fe23
0x00000200004f1aa6 : call 0x2000006fe24
0x00000200005ece62 : call 0x2000006fe27
0x0000020000380352 : call 0x2000006fe28
0x00000200004d9046 : call 0x2000006fe29
0x00000200005d48d4 : call 0x2000006fe65
0x00000200001c3ff3 : call 0x200000702b2
0x000002000044047c : call 0x200000702b3
0x0000020000446f17 : call 0x2000007066f
0x0000020000114635 : call 0x20000070842
0x0000020000442c06 : call 0x20000070843
0x00000200000b27a5 : call 0x20000070846
0x000002000044cd94 : call 0x20000070d73
0x00000200003d36c1 : call 0x200000712d2
0x0000020000176042 : call 0x20000072296
0x0000020000443b94 : call 0x20000072297
0x0000020000071bc8 : call 0x2000007229a
0x000002000044cd57 : call 0x20000072643
0x000002000044cc9b : call 0x2000007264b
0x00000200005fcd4e : call 0x2000007264e
0x00000200003d668f : call 0x20000072906
0x00000200003d3308 : call 0x2000007290a
0x00000200003d5a6c : call 0x20000073893
0x0000020000453225 : call 0x20000074987
0x000002000044a583 : call 0x20000074ecf
0x00000200004536ea : call 0x2000007dff3
0x00000200006f233b : call 0x2000007e612
0x00000200003e505d : call 0x2000008221a
0x00000200004dbd09 : call 0x20000082476
0x00000200005f8ef7 : call 0x20000085102
0x00000200005f8ef7 : call 0x20000085107
0x000002000009a524 : call 0x200000859ab
0x00000200006fa233 : call 0x20000085b03
0x00000200005bdcb5 : call 0x20000085d45
0x00000200001eb26e : call 0x2000008756a
0x00000200001ddf31 : call 0x2000008a162
0x000002000045f6a1 : call 0x2000008a163
0x00000200001f092a : call 0x2000008cc16
0x00000200000c3a8b : call 0x2000008e8cb
0x0000020000177513 : call 0x20000091879
0x0000020000136ee3 : call 0x200000931a2
0x0000020000219366 : call 0x2000009565a
0x000002000019a052 : call 0x200000962c2
0x0000020000687bc1 : call 0x200000962c8
0x000002000009b5ef : call 0x2000009782a
0x00000200001b9f46 : call 0x2000009c0ff
0x00000200001911e8 : call 0x2000009d46a
0x000002000046f3e8 : call 0x2000009d46b
0x0000020000148f2a : call 0x2000009d7db
0x0000020000127298 : call 0x200000a34c6
0x00000200004e73d0 : call 0x200000a36ba
0x00000200001e80be : call 0x200000a4302
0x000002000047e8f0 : call 0x200000a52e3
0x000002000016514d : call 0x200000a52e9
0x000002000047d889 : call 0x200000a8723
0x00000200004dddb7 : call 0x200000a8726
0x00000200004dddb7 : call 0x200000a8728
0x00000200000f0624 : call 0x200000ac78f
0x00000200001c36cf : call 0x200000af90a
0x0000020000129216 : call 0x200000b00f7
0x0000020000164fe7 : call 0x200000b00f9
0x00000200001e70af : call 0x200000b332a
0x0000020000046e70 : call 0x200000b4540
0x0000020000494572 : call 0x200000b48eb
0x0000020000492f3e : call 0x200000b4da7
0x0000020000558b9d : call 0x200000b4de2
0x000002000049465e : call 0x200000b4de3
0x00000200004da89e : call 0x200000b6aae
0x000002000041ac06 : call 0x200000b7287
0x0000020000134e57 : call 0x200000b7377
0x0000020000134e88 : call 0x200000b73b1
0x000002000070b909 : call 0x200000b7b3a
0x000002000063d4b8 : call 0x200000b975a
0x00000200003c91c8 : call 0x200000b975e
0x0000020000533e37 : call 0x200000b9761
0x000002000060d4be : call 0x200000b9776
0x00000200000b9fb8 : call 0x200000b9ff7
0x00000200001df912 : call 0x200000bbb8e
0x000002000048f118 : call 0x200000bc6c7
0x00000200000d89a8 : call 0x200000bc6ca
0x00000200004704c8 : call 0x200000bc772
0x000002000048e3f3 : call 0x200000bc773
0x00000200003b7900 : call 0x200000bc776
0x00000200003f0eaa : call 0x200000bd0e2
0x000002000048eb72 : call 0x200000bd0e3
0x00000200002194cf : call 0x200000bd0e6
0x0000020000492345 : call 0x200000beeff
0x00000200000bf3b7 : call 0x200000bf443
0x00000200005805e8 : call 0x200000bf5b4
0x00000200005f3999 : call 0x200000bfc0a
0x00000200005f398f : call 0x200000bfc7a
0x00000200001e49e5 : call 0x200000c0c16
0x00000200001a55e3 : call 0x200000c18e6
0x00000200001762e1 : call 0x200000c25d6
0x00000200004a0078 : call 0x200000c3933
0x00000200000c4bdb : call 0x200000c5b07
0x00000200004a1086 : call 0x200000c6243
0x000002000009a353 : call 0x200000c889b
0x00000200001674e9 : call 0x200000c94de
0x00000200001ec04d : call 0x200000c94df
0x000002000003a9e6 : call 0x200000ca21f
0x00000200001c2b3b : call 0x200000cedfe
0x00000200004a0ed4 : call 0x200000cedff
0x00000200004a5217 : call 0x200000d120f
0x00000200004ac662 : call 0x200000d28db
0x000002000007221c : call 0x200000d4482
0x0000020000038686 : call 0x200000d4976
0x00000200005cad0f : call 0x200000d6f2a
0x00000200004abd9b : call 0x200000d6f2b
0x0000020000488646 : call 0x200000d6f2e
0x000002000048bac3 : call 0x200000d7dae
0x00000200004ae94e : call 0x200000d7daf
0x00000200000dbb44 : call 0x200000d7dca
0x00000200004ac89c : call 0x200000d89b7
0x00000200000d8cbd : call 0x200000d89ba
0x00000200000dc77a : call 0x200000d9dea
0x0000020000381212 : call 0x200000dd4c6
0x000002000045c8ad : call 0x200000df1ab
0x00000200004856c6 : call 0x200000e19be
0x00000200004b9bf2 : call 0x200000e19bf
0x00000200004b6679 : call 0x200000e1ac3
0x00000200004b6678 : call 0x200000e1ac4
0x00000200004b56bb : call 0x200000e1c0b
0x00000200004b7267 : call 0x200000e1f1f
0x0000020000379cf7 : call 0x200000e3494
0x00000200004c2448 : call 0x200000e3beb
0x00000200000e5682 : call 0x200000e5746
0x000002000047abb4 : call 0x200000e6de6
0x00000200004c6795 : call 0x200000e708f
0x00000200004bc7dc : call 0x200000e7b77
0x000002000070d4cc : call 0x200000e9742
0x0000020000169bb3 : call 0x200000ec0dc
0x00000200004ca257 : call 0x200000ec2c3
0x00000200005d6456 : call 0x200000ed87a
0x000002000016b9f9 : call 0x200000edf22
0x00000200000a5fcb : call 0x200000f21fe
0x0000020000170ab8 : call 0x200000f2fe1
0x0000020000170bb8 : call 0x200000f30e1
0x00000200004cccd4 : call 0x200000f3bd7
0x000002000062299d : call 0x200000f4557
0x00000200004cfbca : call 0x200000f5bef
0x00000200004cfbc9 : call 0x200000f5bf0
0x00000200001736f5 : call 0x200000f5c1e
0x0000020000206cb2 : call 0x200000f5e04
0x000002000049abf1 : call 0x200000f6262
0x00000200004cd19d : call 0x200000f6f13
0x000002000062285c : call 0x200000fbd2b
0x00000200003a7b82 : call 0x200000fe18a
0x00000200004d7956 : call 0x200000ff573
0x0000020000373379 : call 0x200000ff5e2
0x000002000019e351 : call 0x200000ff5e8
0x00000200004dc9f0 : call 0x200000ff627
0x000002000060a0fc : call 0x200000ff62b
0x00000200004dd0ed : call 0x200000ffb1f
0x000002000050a47b : call 0x200001017cb
0x0000020000718272 : call 0x200001017cd
0x000002000017fabc : call 0x20000101fdc
0x000002000017fadf : call 0x20000102008
0x000002000017fc1f : call 0x2000010213f
0x00000200004e02dc : call 0x2000010333b
0x00000200001ebce5 : call 0x20000105bfb
0x000002000037c26a : call 0x20000108512
0x000002000037c16a : call 0x20000108518
0x0000020000186abe : call 0x20000108fde
0x0000020000186ae1 : call 0x2000010900a
0x00000200004df1a4 : call 0x20000109f7b
0x0000020000188e1f : call 0x2000010b348
0x000002000018a18d : call 0x2000010c6ad
0x000002000018a1b0 : call 0x2000010c6d9
0x000002000018a215 : call 0x2000010c735
0x000002000018a238 : call 0x2000010c761
0x000002000018e756 : call 0x20000110c76
0x000002000018e779 : call 0x20000110ca2
0x00000200000780cb : call 0x20000114396
0x00000200001f99a2 : call 0x200001146ff
0x00000200004e7e1e : call 0x20000114977
0x0000020000192a7d : call 0x20000114fa6
0x00000200000f9b35 : call 0x20000115d7e
0x00000200001958cb : call 0x20000117df4
0x00000200004f5d68 : call 0x2000011d887
0x00000200004d56e9 : call 0x2000011f0a2
0x0000020000203ed9 : call 0x20000120142
0x00000200004f707b : call 0x20000120f37
0x00000200004f707a : call 0x20000120f38
0x0000020000367699 : call 0x20000123dd4
0x0000020000379716 : call 0x20000124fcb
0x0000020000379715 : call 0x20000124fcc
0x00000200001a5def : call 0x20000128318
0x0000020000128f12 : call 0x20000128f9f
0x00000200001a8b54 : call 0x2000012b07d
0x00000200001aa921 : call 0x2000012ce41
0x00000200001aa944 : call 0x2000012ce6d
0x00000200001a560c : call 0x2000012d51e
0x00000200001ab385 : call 0x2000012d8ae
0x00000200004ff360 : call 0x2000012e1bb
0x00000200001321e1 : call 0x2000012e48e
0x000002000068c319 : call 0x2000012e6de
0x000002000068d60b : call 0x2000012e8db
0x000002000036ca9b : call 0x2000012f5a3
0x00000200001af33c : call 0x2000013185c
0x0000020000235ef7 : call 0x20000132116
0x00000200001b01bf : call 0x200001326e8
0x000002000013335d : call 0x200001332b6
0x0000020000507b93 : call 0x200001378d3
0x0000020000508313 : call 0x20000137fe7
0x00000200005085f9 : call 0x2000013805f
0x000002000050a4da : call 0x2000013818f
0x000002000050c78d : call 0x200001389ce
0x000002000050c4bb : call 0x200001389cf
0x000002000050c76b : call 0x20000138ac7
0x000002000050ce17 : call 0x20000138ba3
0x000002000050d81b : call 0x20000138f0f
0x000002000050d793 : call 0x20000139037
0x00000200001b6b24 : call 0x20000139044
0x00000200001b6b51 : call 0x2000013907a
0x000002000050e925 : call 0x20000139497
0x000002000050e924 : call 0x20000139498
0x000002000050e9dd : call 0x20000139673
0x000002000050dd5f : call 0x200001396bb
0x000002000050dc33 : call 0x200001396c7
0x000002000050efca : call 0x2000013970f
0x000002000051010f : call 0x2000013971b
0x000002000051104e : call 0x2000013979f
0x000002000051000e : call 0x2000013980f
0x000002000050fffa : call 0x2000013985f
0x000002000050ffe6 : call 0x200001398af
0x000002000050ffd2 : call 0x200001398ff
0x000002000051164f : call 0x20000139a9f
0x0000020000512c96 : call 0x2000013a66f
0x000002000051322e : call 0x2000013a6b3
0x0000020000512ac1 : call 0x2000013a77f
0x0000020000512ff2 : call 0x2000013a8af
0x0000020000513d67 : call 0x2000013acc3
0x00000200005141dd : call 0x2000013acdb
0x00000200005146d8 : call 0x2000013b157
0x00000200005146d7 : call 0x2000013b158
0x00000200005146d6 : call 0x2000013b159
0x0000020000514c95 : call 0x2000013b55b
0x0000020000514e47 : call 0x2000013b6bb
0x0000020000515647 : call 0x2000013b953
0x0000020000516449 : call 0x2000013c0e3
0x0000020000516b8e : call 0x2000013c337
0x0000020000149779 : call 0x2000013d0f7
0x00000200001d107c : call 0x2000013d143
0x000002000051ad5e : call 0x2000013da4b
0x000002000051c07c : call 0x2000013e177
0x000002000051c164 : call 0x2000013e267
0x000002000051c17d : call 0x2000013e34b
0x000002000051ee3e : call 0x2000013f453
0x0000020000374d8d : call 0x200001400f4
0x00000200007200b4 : call 0x20000140115
0x0000020000164158 : call 0x20000140422
0x00000200005947f8 : call 0x20000140aba
0x0000020000510bd7 : call 0x20000140abb
0x00000200004b4f10 : call 0x20000141172
0x00000200005118d5 : call 0x20000141173
0x0000020000516833 : call 0x20000141243
0x0000020000207f0b : call 0x200001441c6
0x00000200006890dd : call 0x2000014534a
0x0000020000689256 : call 0x20000145492
0x000002000008cb94 : call 0x20000148e12
0x00000200005190f4 : call 0x20000148e13
0x00000200001b2f89 : call 0x2000014a978
0x00000200004819b4 : call 0x2000014dc02
0x000002000051ec3f : call 0x2000014dc03
0x000002000051fd83 : call 0x2000014dc04
0x000002000064fe4d : call 0x2000014dc06
0x0000020000401a06 : call 0x2000014dc62
0x000002000051e244 : call 0x2000014dc63
0x00000200006f1a23 : call 0x2000014dce2
0x0000020000501ad4 : call 0x2000014dd02
0x000002000051ec34 : call 0x2000014dd03
0x000002000051f0bf : call 0x2000014ddc3
0x0000020000501dc3 : call 0x2000014e062
0x000002000051e553 : call 0x2000014e0e3
0x00000200004f20b1 : call 0x2000014e322
0x000002000051eccf : call 0x2000014e323
0x000002000051f16b : call 0x2000014e623
0x00000200005abb14 : call 0x2000014e629
0x0000020000664e53 : call 0x20000151082
0x0000020000194e6b : call 0x200001510a2
0x0000020000375d47 : call 0x200001513d7
0x0000020000375d46 : call 0x200001513d8
0x0000020000375d45 : call 0x200001513d9
0x0000020000067c3e : call 0x20000153ec2
0x0000020000537c17 : call 0x20000157d53
0x000002000011d367 : call 0x20000157d57
0x00000200001bc15a : call 0x20000158372
0x00000200001815d6 : call 0x2000015d882
0x00000200005323bf : call 0x2000015d883
0x00000200005c85ea : call 0x2000015d886
0x0000020000382185 : call 0x2000015d887
0x0000020000721f05 : call 0x2000015d888
0x0000020000046a00 : call 0x2000015d889
0x0000020000111925 : call 0x2000015dbc2
0x0000020000533fc3 : call 0x2000015dbc3
0x000002000059a067 : call 0x2000015dbc4
0x000002000013d2ca : call 0x2000015dbc6
0x00000200001cf171 : call 0x2000015dbc8
0x000002000053307c : call 0x2000015dcbf
0x00000200005337fd : call 0x2000015dcc0
0x0000020000532b84 : call 0x2000015dcfb
0x0000020000532f84 : call 0x2000015e23b
0x00000200001e259f : call 0x20000164ac8
0x00000200001e2a08 : call 0x20000164f28
0x00000200001e699f : call 0x20000168ec8
0x00000200001e7af7 : call 0x2000016a020
0x00000200001ea57d : call 0x2000016ca9d
0x00000200001ea5aa : call 0x2000016cad3
0x00000200001eede9 : call 0x20000171312
0x00000200001f3c63 : call 0x20000176183
0x00000200001f3c90 : call 0x200001761b9
0x00000200001f7d2d : call 0x2000017a256
0x00000200001f987e : call 0x2000017bda7
0x000002000056471a : call 0x200001c09e2
0x00000200005964be : call 0x200001c09e3
0x0000020000198cfe : call 0x200001c4fd2
0x00000200001da1fd : call 0x200001c8b13
0x00000200005a7fbc : call 0x200001c9caf
0x00000200005a805e : call 0x200001ca103
0x00000200005a8235 : call 0x200001ca10b
0x00000200005a809c : call 0x200001ca193
0x00000200001dab53 : call 0x200001cbd1f
0x00000200001cbfb0 : call 0x200001cbe3a
0x00000200001ccb54 : call 0x200001cc96a
0x000002000059e4b3 : call 0x200001ccfa3
0x000002000019ce09 : call 0x200001d90de
0x00000200000ea7ee : call 0x200001d90e2
0x00000200000dcef6 : call 0x200001d918e
0x00000200005eee96 : call 0x200001db166
0x00000200001533ad : call 0x200001dbbb0
0x00000200005b5f50 : call 0x200001e4d87
0x00000200005b5a94 : call 0x200001e4e67
0x0000020000050072 : call 0x200001e578a
0x0000020000188099 : call 0x200001f439a
0x00000200001f99b9 : call 0x200001f96ab
0x00000200005d95fb : call 0x20000208a3f
0x00000200005d917b : call 0x20000208abf
0x0000020000216a6f : call 0x20000212cbe
0x0000020000227c07 : call 0x20000213e26
0x000002000021f686 : call 0x20000214180
0x0000020000220ece : call 0x2000021f4fe
0x000002000021920f : call 0x20000223e8a
0x0000020000224433 : call 0x20000224157
0x00000200005fe3d4 : call 0x20000225193
0x0000020000219932 : call 0x20000225c2a
0x000002000066ed08 : call 0x2000022af76
0x000002000066f9f5 : call 0x2000022bc5a
0x000002000066e0cd : call 0x2000022bdab
0x0000020000170c7a : call 0x2000022cf32
0x0000020000233479 : call 0x2000022f732
0x000002000022ffe3 : call 0x2000022fd36
0x000002000060dea1 : call 0x20000232667
0x000002000063317e : call 0x20000232d9f
0x00000200001670ee : call 0x200002333aa
0x00000200006665f2 : call 0x20000233be1
0x0000020000117de1 : call 0x20000294002
0x0000020000664db2 : call 0x20000294003
0x0000020000648c28 : call 0x20000294004
0x0000020000168b48 : call 0x20000294e22
0x0000020000666111 : call 0x20000294e23
0x00000200003e49fd : call 0x20000294e26
0x0000020000139ac7 : call 0x20000294e27
0x00000200000bfc16 : call 0x20000294e28
0x0000020000367fb5 : call 0x2000036424e
0x00000200004ddd07 : call 0x20000364cf0
0x00000200004cc8cc : call 0x20000366557
0x000002000036c941 : call 0x2000036c9a0
0x00000200006ed1ee : call 0x2000036dcbf
0x0000020000114e59 : call 0x200003708ac
0x000002000037952d : call 0x200003794bb
0x00000200003c8fb3 : call 0x20000387c7a
0x000002000018f25d : call 0x2000038b690
0x0000020000393ccb : call 0x2000038fed6
0x000002000056742b : call 0x2000039b776
0x00000200005a433b : call 0x200003a05fa
0x00000200004eb20f : call 0x200003a05fe
0x00000200003a43dd : call 0x200003a0666
0x0000020000707201 : call 0x200003a3456
0x00000200005b79d4 : call 0x200003a3bf2
0x00000200003e0ebc : call 0x200003ad18e
0x0000020000704528 : call 0x200003b076a
0x00000200004a6b74 : call 0x200003b2e62
0x00000200003b46aa : call 0x200003b49c6
0x00000200003b582c : call 0x200003b5ebf
0x00000200003bcbde : call 0x200003b8e52
0x00000200003d1fe3 : call 0x200003be246
0x00000200003f6090 : call 0x200003c2352
0x000002000044394e : call 0x200003c5e77
0x000002000044e32a : call 0x200003ca562
0x000002000048e871 : call 0x200003cab12
0x000002000048e883 : call 0x200003cab13
0x0000020000381f5a : call 0x200003ce242
0x000002000054b84a : call 0x200003d2f06
0x00000200003e95a2 : call 0x200003e584a
0x000002000070780f : call 0x200003f3a5a
0x000002000040e34d : call 0x200003f3a5e
0x0000020000497d16 : call 0x200003f3a5f
0x000002000041581e : call 0x20000401a56
0x000002000040a3f0 : call 0x200004066f6
0x000002000046acac : call 0x20000406f26
0x0000020000408568 : call 0x200004086af
0x0000020000409580 : call 0x200004095b3
0x000002000055d3c2 : call 0x20000409636
0x00000200004e482e : call 0x2000040fc7e
0x00000200004f86fc : call 0x200004149a6
0x00000200005a90b8 : call 0x200004152ea
0x000002000056309e : call 0x20000415b31
0x00000200005dc234 : call 0x200004184e6
0x00000200005ba359 : call 0x200004265ba
0x00000200005ba4e3 : call 0x2000042670a
0x000002000042f9ee : call 0x2000042bc0e
0x00000200005c5bfa : call 0x20000431eca
0x000002000056d2ad : call 0x2000043c8f6
0x000002000048d171 : call 0x2000043c944
0x000002000043f60f : call 0x2000043f462
0x00000200005f3fd6 : call 0x2000044020e
0x00000200000d1a41 : call 0x2000044cb4e
0x00000200000d1a40 : call 0x2000044cb4f
0x0000020000574c89 : call 0x20000450eae
0x00000200004fdfde : call 0x2000045a2ce
0x0000020000604a32 : call 0x2000045e0b7
0x000002000062a6e4 : call 0x20000460aef
0x00000200004e6f16 : call 0x20000469436
0x00000200004e6f41 : call 0x2000046946a
0x00000200000e4108 : call 0x20000470386
0x00000200000e4170 : call 0x2000047045e
0x00000200004e097f : call 0x20000472c4b
0x00000200004736f1 : call 0x20000473713
0x000002000063e555 : call 0x2000047a7fe
0x00000200003de561 : call 0x2000047a822
0x000002000054edee : call 0x2000047b07e
0x00000200006ecf62 : call 0x2000047c578
0x0000020000703b35 : call 0x2000047fd96
0x000002000059d4c6 : call 0x200004997c6
0x00000200003c3035 : call 0x2000049f27e
0x00000200003c3034 : call 0x2000049f27f
0x00000200003c3033 : call 0x2000049f280
0x00000200004e6715 : call 0x200004aa583
0x00000200004f28b3 : call 0x200004aeaf2
0x00000200006fe18e : call 0x200004ba3f6
0x00000200001ee692 : call 0x200004bfaff
0x0000020000505ebb : call 0x200004c21ba
0x0000020000406d7a : call 0x200004c3032
0x00000200000b8fe6 : call 0x200004c366b
0x0000020000542a22 : call 0x200004c4f4b
0x00000200005e76aa : call 0x200004d3956
0x00000200005563dc : call 0x200004d88fc
0x00000200005563ff : call 0x200004d8928
0x00000200006f1848 : call 0x200004dda7e
0x00000200005b1b91 : call 0x200004dde22
0x0000020000444483 : call 0x200004e06da
0x0000020000427745 : call 0x200004e0fb2
0x00000200005ed665 : call 0x200004e9956
0x00000200006449b3 : call 0x200004f0c06
0x00000200004eb638 : call 0x200004f4000
0x00000200006fd9ab : call 0x200004f9bfe
0x00000200004f8513 : call 0x200004f9d9b
0x00000200005004bd : call 0x20000500594
0x000002000058532a : call 0x2000050784a
0x000002000058534d : call 0x20000507876
0x0000020000586652 : call 0x20000508b7b
0x00000200005f3bb8 : call 0x2000050fe62
0x00000200005148cd : call 0x200005149ce
0x00000200005b9c5c : call 0x200005171fb
0x000002000062a679 : call 0x2000051b22f
0x000002000059baba : call 0x2000051dfe3
0x00000200005f22db : call 0x2000051e586
0x0000020000423e84 : call 0x2000052016e
0x0000020000423e7f : call 0x20000520182
0x00000200005a2f7c : call 0x2000052549c
0x00000200005a2f9f : call 0x200005254c8
0x00000200005f8c59 : call 0x2000057b179
0x00000200005f8c86 : call 0x2000057b1af
0x00000200005fa4d5 : call 0x2000057c9fe
0x00000200005fbd0b : call 0x2000057e234
0x00000200005c9674 : call 0x200005c9922
0x00000200001c159d : call 0x200005cd7ca
0x0000020000486ea3 : call 0x200005d315e
0x0000020000486ea2 : call 0x200005d315f
0x00000200005b989d : call 0x200005d5b72
0x000002000055ddfe : call 0x200005f91ca
0x000002000059f717 : call 0x2000060a55d
0x000002000060f3d4 : call 0x2000060d43f
0x00000200001cef10 : call 0x2000060e2de
0x000002000061fe71 : call 0x2000061bb70
0x00000200007258bb : call 0x20000631b62
0x00000200004cace3 : call 0x2000063bb32
0x000002000063db30 : call 0x200006490e5
0x000002000067364f : call 0x200006622dd
0x0000020000669320 : call 0x20000666e75
0x000002000066cb4f : call 0x2000066a6df
0x000002000066e94d : call 0x2000066ac32
0x0000020000674393 : call 0x2000067066e
0x0000020000665f13 : call 0x20000670672
0x0000020000665afb : call 0x20000670673
0x000002000066526a : call 0x2000067147a
0x0000020000673e43 : call 0x20000674021
0x0000020000676942 : call 0x2000067474c
0x0000020000668d03 : call 0x20000674f7a
0x0000020000668d02 : call 0x20000674f7b
0x0000020000666738 : call 0x200006792c6
0x00000200006f8aba : call 0x2000067afe3
0x00000200006f925d : call 0x2000067b77d
0x00000200006f928e : call 0x2000067b7b7
0x00000200006f9678 : call 0x2000067bb98
0x00000200006f96a9 : call 0x2000067bbd2
0x00000200006f9da1 : call 0x2000067c2c1
0x00000200006f9dd2 : call 0x2000067c2fb
0x00000200006f9fd9 : call 0x2000067c4f9
0x00000200006fa00a : call 0x2000067c533
0x0000020000678819 : call 0x2000067d72b
0x00000200006fb6d7 : call 0x2000067dc00
0x000002000067e6a6 : call 0x20000680034
0x000002000012e256 : call 0x2000068a466
0x000002000068ab22 : call 0x2000068a885
0x000002000068c732 : call 0x2000068d7e8
0x0000020000721e52 : call 0x200006a437b
0x00000200007220bc : call 0x200006a45dc
0x00000200007220df : call 0x200006a4608
0x00000200007221cd : call 0x200006a46ed
0x00000200007221f0 : call 0x200006a4719
0x0000020000722bd6 : call 0x200006a50f6
0x0000020000722bf9 : call 0x200006a5122
0x0000020000722efc : call 0x200006a541c
0x0000020000722f1f : call 0x200006a5448
0x0000020000723421 : call 0x200006a594a
0x0000020000674c83 : call 0x20001b7d9cf
0x0000020000674c82 : call 0x20001b7d9d0
0x00000200006d7c84 : call 0x20001f8c492
0x00000200006d9028 : call 0x20001f8d836
0x00000200006da3f6 : call 0x20001f8ec04
0x00000200006db9ae : call 0x20001f901bc
0x00000200006dd2e1 : call 0x20001f91aef
0x00000200006de7fd : call 0x20001f9300b
0x00000200006df641 : call 0x20001f93e4f
0x00000200006e0005 : call 0x20001f94813
0x00000200006e07ac : call 0x20001f94fba
0x00000200006e0ba7 : call 0x20001f953b5
0x00000200006e0faa : call 0x20001f957b8
0x00000200006e13a7 : call 0x20001f95bb5
0x00000200006e17bb : call 0x20001f95fc9
0x00000200006e1bbd : call 0x20001f963cb
0x00000200006e1fdd : call 0x20001f967eb
0x00000200006e23eb : call 0x20001f96bf9
0x00000200006e27c1 : call 0x20001f96fcf
0x00000200006e2be3 : call 0x20001f973f1
0x00000200006e3067 : call 0x20001f97875
0x00000200006e3b4c : call 0x20001f9835a
0x00000200006e4f36 : call 0x20001f99744
0x00000200006e56d4 : call 0x20001f99ee2
0x00000200006e5bad : call 0x20001f9a3bb
0x00000200006e5f56 : call 0x20001f9a764
0x00000200006e63aa : call 0x20001f9abb8
0x00000200006e67d9 : call 0x20001f9afe7
0x00000200006e6c8f : call 0x20001f9b49d
0x00000200006e712b : call 0x20001f9b939
0x00000200006e750a : call 0x20001f9bd18
0x00000200004466ba : call 0x20003075dc1
0x0000020000122898 : call 0x20003124167
0x00000200005f5908 : call 0x20004224f14
0x00000200004e7c2a : call 0x20004dbc743
0x0000020000713882 : call 0x20005fa809d
0x00000200003f94c7 : call 0x20009b85557
0x0000020000120007 : call 0x2000c9f4819
0x000002000005521e : call 0x2000fc78d2c
0x0000020000057f95 : call 0x2000fc7baa3
0x000002000005a635 : call 0x2000fc7e143
0x000002000005a90c : call 0x2000fc7e41a
0x000002000007cc54 : call 0x2000fca0762
0x00000200003b949d : call 0x2000ffdcfed
0x00000200003b949c : call 0x2000ffdcfee
0x00000200003baf86 : call 0x2000ffdead6
0x00000200003baf85 : call 0x2000ffdead7
0x00000200003bb323 : call 0x2000ffdee73
0x00000200003bb322 : call 0x2000ffdee74
0x00000200003bc01e : call 0x2000ffdfb6e
0x00000200003bc01d : call 0x2000ffdfb6f
0x00000200003bdc19 : call 0x2000ffe1769
0x00000200003bdc18 : call 0x2000ffe176a
0x00000200003bdd65 : call 0x2000ffe18b5
0x00000200003bdd64 : call 0x2000ffe18b6
0x00000200003fa8bf : call 0x2001001e40f
0x00000200003fa8be : call 0x2001001e410
0x000002000040633a : call 0x20010029ea8
0x0000020000406339 : call 0x20010029ea9
0x0000020000456ae7 : call 0x2001007a637
0x0000020000456ae6 : call 0x2001007a638
0x0000020000092de7 : call 0x20010092def
0x000002000054c7b6 : call 0x20010304dc1
0x000002000054c7ae : call 0x200104b4db9
0x00000200006cba40 : call 0x20010a0034f
0x00000200006d14cb : call 0x20010a05dda
0x00000200004f4f63 : call 0x2001154dcb6
0x00000200004f4f62 : call 0x2001154dcb7
0x00000200006cc08f : call 0x20011a0099e
0x00000200006e8ad6 : call 0x20011a1d3e5
0x00000200006cd98b : call 0x20013a02299
0x00000200000c08e8 : call 0x200149956fa
0x00000200001b9b8f : call 0x200221b93b2
0x0000020000600721 : call 0x20024b49170
0x000002000054a519 : call 0x20027ddeb23
0x00000200003c3ac9 : call 0x2002f51c81c
0x00000200003c3ac8 : call 0x2002f51c81d
0x00000200006d4798 : call 0x20032a093a6
0x00000200004bcae1 : call 0x200330ecc9c
0x00000200003ec0dd : call 0x200331babf1
0x000002000013e532 : call 0x20033d5e886
0x000002000038c120 : call 0x20033faf431
0x0000020000395310 : call 0x20033fb8621
0x00000200003969bb : call 0x20033fb9ccc
0x000002000039b509 : call 0x20033fbe81a
0x0000020000429384 : call 0x2003404c695
0x00000200002310b0 : call 0x2003be533c4
0x0000020000159f1b : call 0x20041d8ae70
0x0000020000159f1a : call 0x20041d8ae71
0x000002000020a0be : call 0x20041e2a40a
0x0000020000707f23 : call 0x20041ecb897
0x000002000042f75f : call 0x2004204faab
0x00000200005d16fa : call 0x200421f4904
0x000002000059fbaa : call 0x200437688fe
0x00000200005e08ac : call 0x200437a9600
0x00000200005e094e : call 0x200437a96a2
0x00000200005e1346 : call 0x200437aa09a
0x00000200005e1c74 : call 0x200437aa9c8
0x00000200005e206c : call 0x200437aadc0
0x00000200005e2567 : call 0x200437ab2bb
0x000002000072fa03 : call 0x20044d9bc95
0x000002000065d575 : call 0x2004527d8c1
0x000002000065d574 : call 0x2004527d8c2
0x000002000007ce3a : call 0x2004807ce45
0x00000200000797fe : call 0x2004817788d
0x00000200002956bf : call 0x200482956d8
0x000002000009ba83 : call 0x20048cbddd3
0x00000200000e9dbf : call 0x20048d0c10f
0x00000200000ea1e3 : call 0x20048d0c533
0x000002000011856d : call 0x20048d410be
0x0000020000124260 : call 0x20048d445b0
0x0000020000128fd8 : call 0x20048d4bb28
0x000002000013f956 : call 0x20048d61ca7
0x0000020000162ac0 : call 0x20048d83610
0x0000020000162e6a : call 0x20048d839ba
0x00000200001638e0 : call 0x20048d84430
0x0000020000163dd3 : call 0x20048d84923
0x0000020000164410 : call 0x20048d84f60
0x00000200001a8421 : call 0x20048dca771
0x00000200001a849f : call 0x20048dca7ef
0x00000200001b66c7 : call 0x20048dd8a17
0x00000200001b8b4a : call 0x20048ddae9a
0x00000200001b8f03 : call 0x20048ddb253
0x000002000036f09e : call 0x20048f913ee
0x000002000038c0f8 : call 0x20048faf409
0x00000200003952e0 : call 0x20048fb85f1
0x0000020000396a4d : call 0x20048fb9d5e
0x0000020000396df6 : call 0x20048fba107
0x0000020000396e31 : call 0x20048fba142
0x00000200003b4852 : call 0x20048fd83a2
0x00000200003d67e4 : call 0x20048ffa334
0x00000200003daa09 : call 0x20048ffad59
0x00000200003daa98 : call 0x20048ffade8
0x00000200003dab40 : call 0x20048ffae90
0x00000200003dac10 : call 0x20048ffaf60
0x00000200003dad15 : call 0x20048ffb065
0x00000200003dadad : call 0x20048ffb0fd
0x00000200003dae6d : call 0x20048ffb1bd
0x00000200003daf85 : call 0x20048ffb2d5
0x00000200003db089 : call 0x20048ffb3d9
0x00000200003db125 : call 0x20048ffb475
0x00000200003db1c1 : call 0x20048ffb511
0x00000200003db253 : call 0x20048ffb5a3
0x00000200003db2fc : call 0x20048ffb64c
0x00000200003db4b9 : call 0x20048ffb809
0x00000200003db551 : call 0x20048ffb8a1
0x00000200003db5e0 : call 0x20048ffb930
0x00000200003db6a1 : call 0x20048ffb9f1
0x00000200003fb93f : call 0x2004901bc8f
0x00000200003fb93e : call 0x2004901bc90
0x00000200003fbf87 : call 0x2004901c2d7
0x00000200003fbf86 : call 0x2004901c2d8
0x000002000042935c : call 0x2004904c66d
0x000002000043d470 : call 0x2004905d7c0
0x0000020000455d8e : call 0x200490760de
0x0000020000455d8d : call 0x200490760df
0x0000020000458d32 : call 0x20049079082
0x0000020000458d31 : call 0x20049079083
0x000002000045c660 : call 0x2004907c9b0
0x00000200004d1620 : call 0x200490f3970
0x000002000050c0a3 : call 0x2004912e3f3
0x000002000050e1fc : call 0x2004913054c
0x0000020000544bbb : call 0x20049164f0b
0x0000020000544bba : call 0x20049164f0c
0x000002000056c588 : call 0x2004918c8d8
0x000002000056c587 : call 0x2004918c8d9
0x00000200005b9d9d : call 0x200491da0ed
0x000002000011422b : call 0x200492122ba
0x0000020000608df8 : call 0x20049229148
0x0000020000612c14 : call 0x20049232f20
0x000002000067dfdd : call 0x2004929e32d
0x000002000067ec0a : call 0x2004929ef5a
0x000002000067fdbe : call 0x200492a010e
0x000002000067ff1e : call 0x200492a026e
0x000002000067ffb5 : call 0x200492a0305
0x000002000068004e : call 0x200492a039e
0x00000200006d0160 : call 0x200492f04b0
0x00000200006d3fb0 : call 0x200492f4300
0x00000200006d406e : call 0x200492f43be
0x00000200006d448d : call 0x200492f47dd
0x00000200006e9adc : call 0x20049309e2c
0x00000200006ef155 : call 0x2004930f4a5
0x00000200006f6445 : call 0x20049318795
0x000002000071eb1c : call 0x2004933ee6c
0x000002000059e4b4 : call 0x2004959a7a5
0x00000200000538fe : call 0x20049c7c452
0x000002000008622d : call 0x20049caed7e
0x000002000008fc8d : call 0x20049caffe1
0x00000200001dbd2b : call 0x20049dfe07c
0x00000200004b2517 : call 0x2004a0d286b
0x0000020000513714 : call 0x2004a133a68
0x000002000067ecd3 : call 0x2004a29f023
0x0000020000058cfc : call 0x2004cc7b04c
0x000002000011c92e : call 0x2004cd3ec7e
0x00000200000a5827 : call 0x2004d93a03d
0x00000200000ff68e : call 0x2005599b920
0x0000020000549ddb : call 0x20058af87e7
0x0000020000549a5e : call 0x2005c2c846a
0x0000020000397941 : call 0x20069fbac52
0x000002000042ac24 : call 0x2006a04df35
0x00000200001eaee5 : call 0x20073eeea3d
0x0000020000137c4b : call 0x20074d401a0
0x00000200001fda8e : call 0x20074e214ae
0x00000200000c19f4 : call 0x200750dc20f
0x0000020000556da0 : call 0x2007517a8f0
0x0000020000556d9f : call 0x2007517a8f1
0x0000020000556f86 : call 0x2007517aad6
0x0000020000556f85 : call 0x2007517aad7
0x000002000055783c : call 0x2007517b38c
0x000002000055783b : call 0x2007517b38d
0x00000200005f6367 : call 0x20075219eb7
0x00000200005f6366 : call 0x20075219eb8
0x00000200005ded32 : call 0x20075277286
0x00000200005ded31 : call 0x20075277287
0x00000200006ef383 : call 0x20075312e91
0x00000200000a1a4d : call 0x20075cc555b
0x00000200000f9c6d : call 0x20075d1d77b
0x00000200001bf799 : call 0x20075dc7ced
0x000002000021cf88 : call 0x20075e454f6
0x00000200003c03b1 : call 0x20075fe3f01
0x00000200003c03b0 : call 0x20075fe3f02
0x00000200003d1951 : call 0x20075ff54a1
0x00000200003d1950 : call 0x20075ff54a2
0x00000200003fbd47 : call 0x2007601f897
0x00000200003fbd46 : call 0x2007601f898
0x00000200003fc58b : call 0x200760200db
0x00000200003fc58a : call 0x200760200dc
0x00000200003fc651 : call 0x200760201a1
0x00000200003fc650 : call 0x200760201a2
0x00000200003febf6 : call 0x20076022746
0x00000200003febf5 : call 0x20076022747
0x0000020000439f25 : call 0x2007605da75
0x0000020000439f24 : call 0x2007605da76
0x000002000043a26b : call 0x2007605ddbb
0x000002000043a26a : call 0x2007605ddbc
0x00000200004556db : call 0x2007607922b
0x00000200004556da : call 0x2007607922c
0x0000020000459098 : call 0x2007607cbe8
0x0000020000459097 : call 0x2007607cbe9
0x00000200004a9a68 : call 0x200760cd5b8
0x00000200004a9a67 : call 0x200760cd5b9
0x00000200004b9021 : call 0x200760dcb71
0x00000200004b9020 : call 0x200760dcb72
0x0000020000619cd1 : call qword ptr [r10]
0x000002000013c565 : call qword ptr [r11]
0x000002000036bb78 : call qword ptr [r14]
0x000002000021fe42 : call qword ptr [r8]
0x00000200004c763c : call qword ptr [rax + 0x20]
0x0000020000580149 : call qword ptr [rax - 0x103d8117]
0x00000200005801d0 : call qword ptr [rax - 0x103d8b17]
0x00000200005801fe : call qword ptr [rax - 0x103db117]
0x0000020000175d20 : call qword ptr [rax - 0x11333d17]
0x0000020000579a7d : call qword ptr [rax - 0x115e3d17]
0x0000020000574d12 : call qword ptr [rax - 0x123d7917]
0x0000020000565f40 : call qword ptr [rax - 0x14043d17]
0x00000200005567e1 : call qword ptr [rax - 0x15e44417]
0x0000020000554e4a : call qword ptr [rax - 0x163d1517]
0x00000200005520c8 : call qword ptr [rax - 0x173d5e17]
0x0000020000547251 : call qword ptr [rax - 0x1800ea17]
0x0000020000545c32 : call qword ptr [rax - 0x183d2a17]
0x000002000054598f : call qword ptr [rax - 0x18413d17]
0x0000020000544f29 : call qword ptr [rax - 0x18593d17]
0x00000200007240a1 : call qword ptr [rax - 0x23dfd17]
0x000002000071f03d : call qword ptr [rax - 0x33f3d17]
0x000002000012b15e : call qword ptr [rax - 0x3c00be9a]
0x0000020000715175 : call qword ptr [rax - 0x3d]
0x000002000068e724 : call qword ptr [rax - 0x3db717]
0x000002000068e44c : call qword ptr [rax - 0x3dcd17]
0x00000200001b5996 : call qword ptr [rax - 0x84a4317]
0x00000200003729d3 : call qword ptr [rax - 0x8a3d17]
0x00000200005b0fba : call qword ptr [rax - 0x9c91b17]
0x00000200005ae082 : call qword ptr [rax - 0xa3d9317]
0x00000200005aa7fd : call qword ptr [rax - 0xabe3d17]
0x0000020000198603 : call qword ptr [rax - 0xc3d9e17]
0x0000020000596d14 : call qword ptr [rax - 0xd3d4417]
0x0000020000596cfc : call qword ptr [rax - 0xd3d5617]
0x0000020000596cc2 : call qword ptr [rax - 0xd3d6e17]
0x0000020000192006 : call qword ptr [rax - 0xd3da317]
0x0000020000596cac : call qword ptr [rax - 0xd3dfa17]
0x000002000018fd2d : call qword ptr [rax - 0xd78de17]
0x00000200005901c1 : call qword ptr [rax - 0xe3dc617]
0x0000020000585e76 : call qword ptr [rax - 0xf3d2e17]
0x00000200005866ad : call qword ptr [rax - 0xf3dac17]
0x0000020000183db2 : call qword ptr [rax - 0xf6fee17]
0x0000020000060875 : call qword ptr [rax]
0x00000200003fb4d7 : call qword ptr [rbp + 0x73]
0x0000020000022dc8 : call qword ptr [rbx]
0x00000200004ebbc3 : call qword ptr [rcx - 0x3c74fff5]
0x000002000000a39b : call qword ptr [rcx]
0x00000200004fba01 : call qword ptr [rdi + 0x100]
0x00000200001e9c61 : call qword ptr [rdi + 8]
0x0000020000080877 : call qword ptr [rdi]
0x000002000000a1b5 : call qword ptr [rdx]
0x00000200002382c2 : call qword ptr [rip + 0x65d38]
0x0000020000588c29 : call qword ptr [rip + 0xcc201]
0x000002000071888c : call qword ptr [rip - 0x3d26a2]
0x0000020000676e88 : call qword ptr [rip - 0x3d4f86]
0x000002000071f55a : call qword ptr [rip - 0x3d9510]
0x000002000072ab67 : call qword ptr [rip - 0x3d999d]
0x000002000063f8b0 : call qword ptr [rip - 0x7cef8c]
0x000002000036554f : call qword ptr [rip - 0xc3ded]
0x00000200006c5ccf : call qword ptr [rsi + 0x100]
0x00000200001babec : call qword ptr [rsi]
0x0000020000022dc7 : call qword ptr es:[rbx]
0x000002000026dd58 : call qword ptr fs:[rax]
0x000002000001e2b8 : call qword ptr ss:[rcx]
0x00000200000e3db2 : call r10
0x00000200000423c3 : call r11
0x00000200000a6c83 : call r12
0x00000200000b58a4 : call r14
0x00000200000d8a1b : call r15
0x0000020000036233 : call r8
0x000002000008cb35 : call r9
0x00000200000d8c57 : call rax
0x0000020000014457 : call rbx
0x000002000008cb36 : call rcx
0x000002000000d0e1 : call rdi
0x0000020000010c06 : call rdx
0x000002000002a10b : call rsi
0x00000200000a6c84 : call rsp
0x000002000045f062 : cdq ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003b0124 : cdq ; adc dword ptr [rcx], ebx ; add dh, dh ; ret
0x000002000042f52c : cdq ; adc eax, dword ptr [rax] ; ret
0x000002000014ed75 : cdq ; add byte ptr [rax], al ; add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x00000200003e9639 : cdq ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000031a6b : cdq ; add eax, dword ptr [rax] ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x000002000043ff18 : cdq ; call 0x1ffff84e926
0x000002000020a0e3 : cdq ; idiv ecx ; add eax, r9d ; ret
0x00000200001b47ec : cdq ; idiv edi ; mov eax, 0xc00000bb ; ret
0x0000020000408c23 : cdq ; in al, dx ; inc dword ptr [rbx + rcx*4 - 8] ; call 0x20000031499
0x00000200001681a5 : cdq ; in al, dx ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x000002000056a019 : cdq ; in al, dx ; push rsi ; ret
0x000002000065a3e8 : cdq ; insb byte ptr [rdi], dx ; iretd ; jmp qword ptr [rcx]
0x0000020000145a77 : cdq ; int 0xfd
0x000002000000d73d : cdq ; jl 0x2000000d766 ; ret 0x23e8
0x00000200004b4fb7 : cdq ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000043b389 : cdq ; mov rcx, rsi ; call 0x20000063ddb
0x00000200007094bb : cdq ; or al, 0xfa ; ljmp ptr [rax - 0x207af0fe] ; ret 1
0x00000200005801fc : cdq ; out -1, eax ; nop ; jmp 0x2000047c459
0x0000020000435173 : cdq ; push rsp ; ret
0x000002000000d90e : cdq ; ret
0x000002000053ddf3 : cdq ; ret 0x16
0x000002000037e747 : cdq ; ret 0x1ae8
0x00000200000e3173 : cdq ; ret 0x1c
0x00000200004a17a3 : cdq ; ret 0x48ff
0x000002000037f682 : cdq ; ret 0x8b48
0x000002000050ffd4 : cdq ; ret 0x8bff
0x00000200001755d5 : cdq ; ret 0xffee
0x0000020000207f27 : cdq ; ret 0xfff3
0x0000020000201beb : cdq ; ror byte ptr [rdx], cl ; add dh, dh ; ret
0x000002000070b6aa : cdq ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200001bcd73 : cdq ; sar al, 0xff ; add rsp, 0x68 ; ret
0x000002000068d4a5 : cdq ; sar edi, -3 ; add rsp, 0x28 ; ret
0x000002000044b885 : cdq ; test al, 4 ; add byte ptr [rax], al ; jne 0x2000044b8d6 ; ret
0x0000020000007587 : cdqe ; movsxd rdi, esi ; ret
0x000002000010b314 : cdqe ; or rax, r9 ; or rax, rcx ; ret
0x00000200006fb070 : clc ; adc byte ptr [rax + 0x2b], cl ; ret 0x349
0x000002000005771b : clc ; adc byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200003f6ca1 : clc ; adc byte ptr [rcx - 0x7d], cl ; ret
0x0000020000141606 : clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000003a1ec : clc ; adc dword ptr [rsp + rdx - 0x75], esi ; ret
0x00000200006d45e7 : clc ; add al, 0 ; add byte ptr [rdx], bh ; ret
0x000002000054d389 : clc ; add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x000002000067b248 : clc ; add al, 0x7e ; mov eax, 1 ; ret
0x000002000059280c : clc ; add al, 0xd1 ; dec dword ptr [rax + 0xf] ; ret 0x15eb
0x00000200003dea18 : clc ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000044f9e9 : clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x00000200004b8ea6 : clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000044bf20 : clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000051d0e4 : clc ; add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000200000c3bb6 : clc ; add byte ptr [rax + rax], al ; add byte ptr [rbx + 3], dh ; xor eax, eax ; ret
0x0000020000164154 : clc ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001c5641 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200000cf3da : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200003b11e9 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7af0c706], al ; ret 0
0x00000200001c1236 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000050ce46 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8928
0x00000200000a4dc7 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200000eaab5 : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; ret
0x00000200003b841a : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x49f0b3b8], cl ; ret 0xe8d1
0x00000200001d1fc4 : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000046644a : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005767a2 : clc ; add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x000002000014f955 : clc ; add byte ptr [rax], al ; add cl, ch ; and cl, ah ; add byte ptr [rax], al ; ret
0x00000200001c617a : clc ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jb 0x200001c616f ; xor eax, eax ; ret
0x00000200000fae44 : clc ; add byte ptr [rsi], bl ; add al, ch ; ret
0x000002000039ef86 : clc ; add cl, byte ptr [rdi] ; xchg bl, bl ; ret 0x19
0x000002000039e63f : clc ; add cl, byte ptr [rdi] ; xchg byte ptr [rcx], ch ; ret 0x19
0x0000020000553bee : clc ; add cl, byte ptr [rdi] ; xor esp, 0x5b ; jmp 0x1fffd183401
0x0000020000025587 : clc ; add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f4542 : clc ; add dh, byte ptr [rbx + 1] ; ret
0x00000200001cdcb2 : clc ; add dh, byte ptr [rsp + rbx*8 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200003e113d : clc ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200000e7bb5 : clc ; add dword ptr [rdi], ecx ; mov ds, word ptr [rax - 0x74fff4bf] ; ret
0x00000200003faf73 : clc ; add dword ptr [rdi], ecx ; test byte ptr [rcx], ch ; ret
0x0000020000114d4d : clc ; add dword ptr [rdx + rdx - 1], esi ; ret
0x00000200004e014e : clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x0000020000130300 : clc ; add dword ptr [rsi + rcx*2 + 0x48], esi ; add esi, 8 ; jmp 0x200001302d6
0x0000020000670e9e : clc ; add eax, 0x83480673 ; ret
0x0000020000637f6a : clc ; add eax, 0xb70fc477 ; ret 0xe883
0x0000020000637ec6 : clc ; add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x00000200005fc34c : clc ; add eax, 0xe6760000 ; xor eax, eax ; ret
0x000002000070e843 : clc ; add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x0000020000617b7d : clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200000f1be4 : clc ; add eax, dword ptr [rcx + 3] ; ret
0x00000200000d3fa5 : clc ; add ecx, dword ptr [rax + 0x3b] ; ret 0x4f72
0x00000200000610c6 : clc ; add ecx, dword ptr [rax + 0x3b] ; ret 0x820f
0x000002000013ad96 : clc ; add ecx, dword ptr [rax + 3] ; ret 0x8948
0x00000200006f8d7c : clc ; add ecx, dword ptr [rbp + 0x23] ; ret
0x000002000010a6da : clc ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200003faf5b : clc ; add ecx, dword ptr [rdi] ; test byte ptr [rsi], ah ; ret
0x00000200003e4630 : clc ; add ecx, dword ptr [rdi] ; test dword ptr [rdx], esp ; fcom qword ptr [rsi] ; add dh, dh ; ret 0xf38
0x000002000012692f : clc ; add edi, dword ptr [rbx] ; ret 0x470f
0x000002000067b27e : clc ; add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x0000020000154b6e : clc ; add rsp, 0x138 ; sti ; ret
0x0000020000408c28 : clc ; call 0x20000031494
0x00000200004413e3 : clc ; call 0x20000068fd4
0x0000020000611219 : clc ; call 0x20000068fd7
0x0000020000136ee2 : clc ; call 0x200000931a3
0x0000020000136ee1 : clc ; call 0x200000931a4
0x0000020000175d1f : clc ; call qword ptr [rax - 0x11333d17]
0x000002000056a5ac : clc ; call qword ptr [rbx]
0x0000020000676e87 : clc ; call qword ptr [rip - 0x3d4f86]
0x00000200005064c5 : clc ; call r15
0x0000020000611024 : clc ; call rbx
0x0000020000010c05 : clc ; call rdx
0x00000200001fb1a4 : clc ; cmp byte ptr [rdx], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001b7fa1 : clc ; dec dword ptr [rax + 0x3b] ; ret
0x00000200003c2feb : clc ; dec dword ptr [rax + 0x3b] ; ret 0x5777
0x00000200004dbf2f : clc ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0xc2b
0x0000020000596949 : clc ; dec dword ptr [rax - 0x7d] ; ret 0xe838
0x00000200003ccd34 : clc ; dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x0000020000129219 : clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200000dca4f : clc ; dec dword ptr [rbx - 0x74bbdba4] ; ret
0x00000200003faea9 : clc ; dec dword ptr [rdi] ; test ch, bl ; ret 0x15
0x00000200003ca7cf : clc ; dec dword ptr [rdi] ; test ecx, ecx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200001cabc2 : clc ; dec esp ; xor al, al ; add rsp, 0x38 ; ret
0x0000020000142028 : clc ; dec rax ; ret
0x00000200004f9931 : clc ; emms ; sal byte ptr [rdx], 0xc0 ; ret
0x0000020000402d64 : clc ; in al, dx ; push qword ptr [rdx - 0x1dfd16ff] ; ret 0xccff
0x000002000013d243 : clc ; inc dword ptr [rax + rax*8 - 0x7eb6ec8c] ; ret
0x00000200001ba36c : clc ; inc dword ptr [rbp + 0x23] ; ret
0x000002000037061f : clc ; inc dword ptr [rcx] ; ret
0x00000200000bd101 : clc ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000673037 : clc ; jb 0x20000673035 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000714630 : clc ; jb 0x2000071460c ; ret
0x000002000001026f : clc ; jbe 0x200000102e1 ; popfq ; ret
0x0000020000222bc0 : clc ; jg 0x20000222bf9 ; ret 0xd233
0x0000020000025c1d : clc ; jmp 0x20000025e23
0x00000200000889c9 : clc ; jmp 0x2000008858d
0x0000020000191fca : clc ; jmp 0x200000be20d
0x0000020000105a90 : clc ; jmp 0x20000105a58
0x0000020000211bf2 : clc ; jmp 0x20000211bfe
0x0000020000211d0a : clc ; jmp 0x20000211d16
0x00000200002129b9 : clc ; jmp 0x200002129c5
0x0000020000212ad9 : clc ; jmp 0x20000212ae5
0x0000020000212c63 : clc ; jmp 0x20000212c6f
0x0000020000212e2b : clc ; jmp 0x20000212e37
0x0000020000214287 : clc ; jmp 0x20000214293
0x000002000021443b : clc ; jmp 0x20000214447
0x000002000022a8c6 : clc ; jmp 0x2000022a8da
0x0000020000540d29 : clc ; jmp 0x200003ae8e8
0x0000020000540d28 : clc ; jmp 0x200003ae8e9
0x00000200004d359b : clc ; jmp 0x200004d3450
0x00000200004d359a : clc ; jmp 0x200004d3451
0x00000200001b9b91 : clc ; jmp qword ptr [rcx]
0x0000020000281028 : clc ; jmp qword ptr [rdi]
0x0000020000159d59 : clc ; jmp rsi
0x0000020000159eb4 : clc ; jne 0x20000159e93 ; ret
0x0000020000159eb3 : clc ; jne 0x20000159e94 ; ret
0x0000020000427316 : clc ; jne 0x2000042731d ; ret
0x000002000043a60d : clc ; jne 0x2000043a5cc ; mov rcx, rsi ; call 0x20000068fd9
0x000002000017fae2 : clc ; lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000a0573 : clc ; lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000054b84 : clc ; lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200006f9291 : clc ; lcall ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200004b303b : clc ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x00000200006c7da5 : clc ; lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r10
0x00000200006d5f6e : clc ; lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x00000200006c6fee : clc ; lea r13, qword ptr [rax + 8] ; mov rcx, r13 ; call r10
0x00000200006c78c3 : clc ; lea rcx, qword ptr [rax + 8] ; call r10
0x000002000066b57e : clc ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x0000020000033655 : clc ; mov dword ptr [rdx + rax*4], r9d ; ret
0x0000020000033610 : clc ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200004413e1 : clc ; mov edi, eax ; call 0x20000068fd6
0x00000200004413e0 : clc ; mov edi, eax ; call 0x20000068fd7
0x0000020000688dbd : clc ; mov edx, 0x8bc3ffff ; ret
0x000002000067169c : clc ; mov rcx, qword ptr [rsi + 8] ; mov rdx, r15 ; call rax
0x000002000044724f : clc ; mov rcx, r13 ; call 0x20000068fd7
0x00000200006c7277 : clc ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006cbfb9 : clc ; mov rdx, qword ptr [rcx] ; call r9
0x00000200006d6c0d : clc ; mov rdx, qword ptr [rcx] ; call rbx
0x0000020000123f30 : clc ; mov rsi, rdx ; call qword ptr [rbx]
0x000002000043be8d : clc ; or al, 0x2b ; ret
0x000002000013dcee : clc ; or al, 0xff ; ret
0x00000200000a347d : clc ; or byte ptr [rdx + rbp + 0x41], dh ; mov eax, eax ; ret
0x00000200001063d5 : clc ; or dword ptr [rax], eax ; ret
0x000002000061ac18 : clc ; or eax, 0x3000000 ; ret
0x000002000066542c : clc ; or eax, 0x83480673 ; ret
0x00000200006e3131 : clc ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000422610 : clc ; pop rsp ; jne 0x2000042260e ; xor al, al ; ret
0x00000200006236cb : clc ; push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x000002000022ee86 : clc ; push rax ; jmp 0x2000022ee50
0x00000200001b7ff4 : clc ; push rsi ; ret
0x00000200001419b6 : clc ; ret
0x00000200003e670c : clc ; ret 0x16
0x000002000044060c : clc ; ret 0x33ff
0x0000020000721837 : clc ; ret 0x44ff
0x00000200007217c0 : clc ; ret 0x48ff
0x0000020000272878 : clc ; ret 0x4d
0x0000020000721774 : clc ; ret 0x66ff
0x000002000043adb9 : clc ; ret 0x85ff
0x00000200000c8b33 : clc ; ret 0xc
0x000002000072187e : clc ; ret 0xe9ff
0x0000020000010e77 : clc ; ret 0xf958
0x00000200005c3b24 : clc ; ret 0xffaa
0x0000020000545bd7 : clc ; ret 0xffe7
0x000002000055c63b : clc ; ret 0xffea
0x0000020000505ebc : clc ; ret 0xfffb
0x0000020000674f94 : clc ; ret 1
0x000002000062df6c : clc ; ret 7
0x00000200004497a7 : clc ; sar edi, -0x75 ; ret
0x00000200001b1ca0 : clc ; sbb dword ptr [rax], eax ; call r8
0x0000020000616b93 : clc ; sbb dword ptr [rdi + 8], esi ; movzx eax, cx ; add eax, r10d ; jmp 0x20000616bab
0x00000200000b62c4 : clc ; scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; ret
0x000002000012e3c4 : clc ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000012ebbd : clc ; shr eax, 3 ; ret
0x0000020000568dc1 : clc ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x000002000018a6e8 : clc ; sldt word ptr [rax] ; jmp 0x200000a69c8
0x000002000011191e : clc ; sldt word ptr [rax] ; mov rbx, rcx ; call 0x2000015dbc9
0x000002000051659f : clc ; std ; ja 0x2000051655e ; jmp 0x200005b2895
0x0000020000643d5e : clc ; sub dword ptr [rdx - 0x15], esi ; or eax, 0xffffffff ; ret
0x0000020000020858 : clc ; sysenter
0x0000020000533fc4 : clc ; wait ; ret 0x33ff
0x0000020000490b80 : clc ; xchg eax, ecx ; ret
0x000002000038a7e5 : clc ; xchg eax, esp ; push 0 ; ret
0x00000200004c61cd : clc ; xor byte ptr [rdi], cl ; test dword ptr [rsi - 0x9fff2e0], esi ; ret 0xf03
0x00000200001e923f : clc ; xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x0000020000055954 : clc ; xor eax, 0x8b480000 ; ret
0x0000020000585798 : clc ; xor edx, esp ; jmp qword ptr [rbx]
0x0000020000216a6c : clc ; xor esi, esi ; call 0x20000212cc1
0x000002000051bbee : clc ; xor rcx, rsp ; call 0x20000148e17
0x000002000051bbed : clc ; xor rcx, rsp ; call 0x20000148e18
0x000002000008cca2 : cld ; adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200006c784e : cld ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200004c0c8e : cld ; add al, byte ptr [rax] ; add al, al ; call 0x1ffc34d30a3
0x00000200000ce8f5 : cld ; add al, byte ptr [rax] ; add bh, bh ; ret 0x5489
0x000002000044fbd0 : cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x000002000059361a : cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x00000200005ee9dd : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200001e3d94 : cld ; add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x00000200004c13e7 : cld ; add rsp, 0x28 ; ret
0x000002000046b8f4 : cld ; call qword ptr [rax]
0x000002000022abdf : cld ; cmp rcx, r8 ; jb 0x2000022abd6 ; ret
0x000002000022abde : cld ; cmp rcx, r8 ; jb 0x2000022abd7 ; ret
0x00000200000ec700 : cld ; dec dword ptr [rax - 0x75] ; je 0x200000ec733 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000e6dc1 : cld ; dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200000e43fc : cld ; dec dword ptr [rax - 0x75] ; ret
0x000002000055cc9e : cld ; dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200000c3a8e : cld ; dec dword ptr [rax - 0x7d] ; ret
0x000002000050c788 : cld ; dec dword ptr [rbx + rcx*4 - 0x39] ; call 0x200001389d3
0x000002000071fe24 : cld ; dec dword ptr [rdi] ; mov edx, 0xc311de2d ; call qword ptr [rcx]
0x000002000038a7e0 : cld ; dec dword ptr [rdx - 0x6b07ef7c] ; push 0 ; ret
0x0000020000491e2a : cld ; dec r9 ; jne 0x20000491e14 ; ret
0x0000020000491e29 : cld ; dec r9 ; jne 0x20000491e15 ; ret
0x00000200006024c0 : cld ; fxch st(0), st(2) ; push rsi ; ret
0x00000200001f414d : cld ; in al, dx ; inc dword ptr [rax + rax*8 - 0x7fbee78b] ; call qword ptr [rcx]
0x000002000051f0c0 : cld ; in al, dx ; ret 0x85ff
0x0000020000662328 : cld ; in eax, dx ; add al, byte ptr [rax] ; ret
0x0000020000439f52 : cld ; inc dword ptr [rax + rax*8 - 0x74b7ed8c] ; ret
0x0000020000514352 : cld ; inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x0000020000556241 : cld ; jmp 0x2000518594a
0x0000020000720317 : cld ; jmp qword ptr [rcx]
0x0000020000095e33 : cld ; jne 0x20000095e40 ; mov qword ptr [r9], r8 ; ret
0x000002000017db65 : cld ; lahf ; out dx, eax ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200004338b0 : cld ; leave ; ret
0x000002000015e286 : cld ; mov eax, 0xf9eb ; mov word ptr [rdx], ax ; ret
0x00000200004e1a6d : cld ; mov rax, rcx ; ret
0x00000200004a6b70 : cld ; mov rcx, rdi ; call 0x200003b2e66
0x00000200004a6b6f : cld ; mov rcx, rdi ; call 0x200003b2e67
0x00000200004f8e44 : cld ; or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001513be : cld ; or eax, r8d ; wrmsr ; ret
0x0000020000122085 : cld ; out dx, eax ; and al, byte ptr [rax] ; and dword ptr [rdi], ecx ; test ebx, esp ; ret 8
0x000002000012ed29 : cld ; ret
0x000002000026d324 : cld ; ret 0x26
0x000002000065f5b4 : cld ; ret 0x4c1f
0x0000020000439312 : cld ; ret 0xe9ff
0x0000020000423e80 : cld ; ret 0xf
0x000002000058baac : cld ; ret 0xffb4
0x000002000055c62d : cld ; ret 0xffea
0x0000020000508315 : cld ; ret 0xfff
0x00000200001a55e4 : cld ; ret 0xfff1
0x000002000025386c : cld ; rol dword ptr [rdx], -0x15 ; ret
0x000002000036ca9c : cld ; sub bl, ah ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000376f5 : cld ; sub byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x000002000001e361 : cld ; test al, 0x92 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000051b954 : cld ; test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001514ff : cld ; wrmsr ; ret
0x0000020000408fa0 : cld ; xchg eax, ebp ; in al, dx ; push qword ptr [rdx + 0x7cb5e801] ; ret 0xe8ff
0x00000200003c9f8c : cld ; xchg eax, esp ; cmp al, 0 ; add rcx, rdx ; jmp rcx
0x0000020000174083 : cld ; xchg eax, esp ; out dx, al ; push rsi ; ret 0x7401
0x00000200003865f6 : cli ; adc al, 0xf ; test byte ptr [rbx - 0x74ffffed], bl ; ret 0x8b48
0x00000200001e6c7b : cli ; adc al, ch ; and ch, ch ; jmp 0x1ffc3a1b58d
0x0000020000602f07 : cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x00000200005efbb8 : cli ; adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x000002000013bc53 : cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x0000020000629b86 : cli ; adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x20000629b8a
0x000002000038598b : cli ; add al, 0 ; add rsp, 0x68 ; ret
0x00000200004ad6ea : cli ; add al, 0 ; or dword ptr [rax], eax ; je 0x200004ad6fd ; xor al, al ; ret
0x000002000020a1ad : cli ; add al, 0x8b ; ret 0xe8c1
0x00000200000ece1a : cli ; add bh, bh ; ret
0x00000200004ce366 : cli ; add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x000002000014f995 : cli ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014f970 ; add byte ptr [rax], al ; ret
0x00000200000b1ce6 : cli ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000067afed : cli ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x2000067b000 ; xor eax, eax ; ret
0x000002000020e8b8 : cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x000002000052013d : cli ; add cl, byte ptr [rdi] ; test byte ptr [rdi + 0x55], ah ; or dword ptr [rax], eax ; ret
0x000002000055c632 : cli ; add cl, byte ptr [rdi] ; test esi, ebx ; ret 0xffea
0x00000200004cbd55 : cli ; add dh, byte ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x00000200004c5f1a : cli ; add dh, byte ptr [rdx - 0x59] ; mov al, 2 ; ret
0x000002000020c7e5 : cli ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x000002000011ee58 : cli ; add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x0000020000198089 : cli ; add dword ptr [rdi], ecx ; test dword ptr [rax], esp ; mov ch, 0xf3 ; push rsi ; ret
0x000002000010a10d : cli ; add dword ptr [rsi + rcx - 0x75], esi ; ret
0x00000200001f0be0 : cli ; add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000048705a : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xa348
0x00000200000305ab : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200006f6baa : cli ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000017e663 : cli ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x00000200000b2d3a : cli ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000002000007f13e : cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200001298d1 : cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004abbca : cli ; add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200004dd38d : cli ; add esi, dword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x000002000044ce3c : cli ; add esi, dword ptr [rdx - 0x10] ; xor eax, eax ; ret
0x000002000071e047 : cli ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000152303 : cli ; add rsp, 0x28 ; ret
0x000002000016308d : cli ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000156245 : cli ; add rsp, 8 ; ret
0x000002000010fb59 : cli ; and qword ptr [rcx], 0 ; ret
0x000002000056a5b2 : cli ; call qword ptr [rbx]
0x00000200000a262a : cli ; cmp dword ptr [rcx], esp ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000026592c : cli ; dec byte ptr [rcx] ; insd dword ptr [rdi], dx ; add byte ptr [rdx], cl ; ret
0x00000200004b9bed : cli ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e19c4
0x000002000010c657 : cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200004590b7 : cli ; dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000061608 : cli ; dec dword ptr [rbx + 0x248b45c8] ; mov ecx, gs ; ret
0x00000200003ef852 : cli ; dec dword ptr [rbx + 0x78c085d8] ; ret
0x0000020000069e30 : cli ; dec dword ptr [rdi] ; mov esi, 0xbe0f080c ; ret 0xc82b
0x00000200003cc600 : cli ; enter 0x17, -0xa ; ret
0x000002000057caae : cli ; inc dword ptr [rbx - 0x3e] ; jmp 0x2000057cb23
0x0000020000555ff0 : cli ; jmp 0x1ffc3e0a4fa
0x000002000055622d : cli ; jmp 0x1ffc3e0af37
0x00000200004cb6bd : cli ; jmp 0x200004cb625
0x00000200007094bd : cli ; ljmp ptr [rax - 0x207af0fe] ; ret 1
0x0000020000609398 : cli ; mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000007951 : cli ; mov byte ptr [rbp - 0x3a], ah ; xchg eax, edi ; ret
0x000002000066e410 : cli ; mov dword ptr [r8], r9d ; ret
0x00000200000e567f : cli ; mov ebx, ecx ; call 0x200000e5749
0x000002000040a3ea : cli ; mov edx, eax ; mov r10d, r9d ; call 0x200004066fc
0x0000020000422780 : cli ; mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x00000200000107d7 : cli ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1ffffed9c6d
0x00000200001ccb1c : cli ; or al, 0x8b ; ret 0xe8c1
0x0000020000155a89 : cli ; or byte ptr [rax + 1], al ; add byte ptr [rax], al ; add ah, ah ; ret 0x4010
0x0000020000381e02 : cli ; or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x000002000004a357 : cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000234a6e : cli ; out -1, eax ; add rsp, 0x28 ; ret
0x0000020000173b1c : cli ; push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x00000200003b0f6d : cli ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000003b120 : cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x00000200004e887e : cli ; push rax ; je 0x200004e8891 ; mov eax, ecx ; ret
0x0000020000646a52 : cli ; push rsi ; out dx, al ; dec dword ptr [rax - 0x7d] ; ret 0x890b
0x00000200007098b4 : cli ; push rsi ; ret
0x0000020000609eba : cli ; push rsi ; retf 0x48ff ; test eax, eax ; je 0x20000609ece ; call rax
0x000002000004b006 : cli ; ret
0x0000020000439664 : cli ; ret 0x44ff
0x00000200005085fb : cli ; ret 0x48ff
0x000002000051e246 : cli ; ret 0x85ff
0x0000020000640472 : cli ; ret 0xffa7
0x0000020000421582 : cli ; ret 0xffd3
0x000002000010c432 : cli ; ret 0xfff4
0x000002000018809a : cli ; ret 6
0x0000020000121e57 : cli ; ret 8
0x0000020000003204 : cli ; sahf ; ret
0x00000200004e9c86 : cli ; sbb al, 0x8b ; ret 0xe8c1
0x000002000000e7bf : cli ; sbb bl, bh ; ret 0xda8
0x0000020000148f47 : cli ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000672c09 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672c26
0x0000020000672cd6 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672cf3
0x0000020000672d8a : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672da7
0x0000020000672e2d : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672e4a
0x0000020000292a65 : clts ; add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x0000020000292935 : clts ; add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x0000020000250a35 : clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x00000200002494d9 : clts ; add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x000002000028b5b9 : clts ; add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000242c29 : clts ; add byte ptr [rdi], cl ; push rsp ; or eax, dword ptr [rax] ; sysenter
0x00000200002723c6 : clts ; sysenter
0x00000200003f5c96 : cmc ; add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000600b07 : cmc ; add al, 0xa0 ; jmp qword ptr [rbx]
0x0000020000064b26 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000038db2b : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000141314 : cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200001ee691 : cmc ; call 0x200004bfb00
0x00000200001ee690 : cmc ; call 0x200004bfb01
0x00000200005866ac : cmc ; call qword ptr [rax - 0xf3dac17]
0x00000200005adaad : cmc ; call rcx
0x0000020000717903 : cmc ; cwde ; ret
0x00000200001a10de : cmc ; dec dword ptr [rax + 0x3b] ; ret 0xc77
0x0000020000148f2d : cmc ; dec dword ptr [rax - 0x39] ; ret
0x00000200005c3b8a : cmc ; dec dword ptr [rax - 0x73] ; and al, 0x48 ; call 0x2000006fe29
0x00000200000f8c29 : cmc ; dec dword ptr [rax - 0x75] ; add eax, 0x25044e ; ret
0x00000200005a9302 : cmc ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200004aff9a : cmc ; dec dword ptr [rax - 0x75] ; je 0x200004affcc ; js 0x200004aff35 ; ret
0x00000200004aff99 : cmc ; dec dword ptr [rax - 0x75] ; je 0x200004affcd ; js 0x200004aff36 ; ret
0x00000200001948f9 : cmc ; dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000019fccb : cmc ; dec dword ptr [rax - 0x75] ; ret
0x000002000019ebf4 : cmc ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000206a70 : cmc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x0000020000497d19 : cmc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001a0f4d : cmc ; dec dword ptr [rcx - 0x75] ; ret 0x2b48
0x00000200004e0046 : cmc ; fdiv st(7), st(0) ; test rax, rax ; je 0x200004e0079 ; call rax
0x00000200003b5870 : cmc ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ab66e : cmc ; inc dword ptr [rcx - 0x7c] ; ret
0x000002000019f8ba : cmc ; inc dword ptr [rsp + rax*4 + 0x2d] ; ret
0x00000200000d66e1 : cmc ; jmp 0x200000d66ca
0x00000200003b116a : cmc ; jmp 0x200003b1185
0x00000200003e3118 : cmc ; jmp 0x200003df3da
0x00000200002036c1 : cmc ; jmp qword ptr [rsi - 0x77]
0x00000200003d330a : cmc ; leave ; push rsi ; ret
0x0000020000500277 : cmc ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000609902 : cmc ; mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004dda6b : cmc ; mov byte ptr [rip - 0x233ad1], r8b ; ret
0x0000020000024a0e : cmc ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000011d72e : cmc ; or byte ptr [rax], al ; xor al, al ; ret
0x00000200001799fd : cmc ; out dx, eax ; inc dword ptr [rbp - 0x75] ; ret
0x00000200004492b7 : cmc ; outsd dx, dword ptr [rsi] ; ret 0x48ff
0x00000200005fcd4f : cmc ; pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; push rsi ; ret
0x00000200001a17af : cmc ; push rsi ; ret
0x00000200001a1b48 : cmc ; push rsi ; ret 0x7410
0x00000200001a1b5b : cmc ; push rsi ; ret 0xf20
0x00000200000e1862 : cmc ; rcr byte ptr [rax + rax], 0 ; jne 0x200000e1871 ; ret
0x00000200000b8357 : cmc ; ret
0x0000020000439a1e : cmc ; ret 0x48ff
0x000002000028a9c0 : cmc ; ret 0x5f
0x0000020000439a0a : cmc ; ret 0xe9ff
0x00000200001eb26f : cmc ; ret 0xffe9
0x000002000017615d : cmc ; shr dh, cl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000824ba : cmc ; sldt word ptr [rcx - 0x75] ; ret
0x00000200004a062b : cmc ; test cl, 0x40 ; jne 0x200004a063c ; xor al, al ; ret
0x000002000010c08e : cmc ; xor eax, eax ; ret
0x00000200001396ac : cmova eax, ecx ; mov dword ptr [rdx + 0x124], eax ; ret
0x00000200000b4f59 : cmova eax, edx ; ret
0x00000200000fcc28 : cmova ecx, eax ; mov eax, ecx ; ret
0x000002000022b32c : cmova ecx, eax ; mov r8, rcx ; mov rax, r8 ; ret
0x000002000008cc04 : cmova ecx, eax ; test ecx, ecx ; jne 0x2000008cc13 ; ret
0x00000200000fe154 : cmova ecx, ecx ; mov rax, r9 ; ret
0x00000200001c2911 : cmova ecx, edx ; mov rax, r9 ; ret
0x000002000008cc03 : cmova ecx, r8d ; test ecx, ecx ; jne 0x2000008cc14 ; ret
0x00000200001c2910 : cmova r9, r10 ; mov rax, r9 ; ret
0x00000200000fe153 : cmova r9, rcx ; mov rax, r9 ; ret
0x00000200000fcc27 : cmova rcx, rax ; mov eax, ecx ; ret
0x0000020000388665 : cmovae eax, edx ; ret
0x00000200006c7901 : cmovae ecx, dword ptr [rbp - 0x36ccd4ec] ; call r9
0x00000200006c7de8 : cmovae ecx, dword ptr [rbp - 0x36cce0ec] ; call r9
0x0000020000388664 : cmovae rax, rdx ; ret
0x0000020000126b8f : cmovb eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000105c45 : cmovb eax, ecx ; mov qword ptr [r9 + 0x20], rax ; ret
0x00000200006cbce3 : cmovb ecx, dword ptr [rbp - 0x36cce1ec] ; call r9
0x00000200006ca30c : cmovb ecx, dword ptr [rbp - 0x36cce4ec] ; call r9
0x0000020000185284 : cmovb ecx, eax ; mov edx, ecx ; jmp 0x20000091574
0x0000020000540d27 : cmovb edi, eax ; jmp 0x200003ae8ea
0x0000020000105c44 : cmovb rax, rcx ; mov qword ptr [r9 + 0x20], rax ; ret
0x000002000018e946 : cmovbe eax, edx ; mov eax, r8d ; ret
0x000002000018e945 : cmovbe r8d, edx ; mov eax, r8d ; ret
0x00000200004dd833 : cmove eax, eax ; mov eax, r8d ; ret
0x000002000002b9c5 : cmove eax, eax ; ret
0x00000200000937c2 : cmove eax, ebx ; mov rax, r8 ; ret
0x00000200005f4a96 : cmove eax, ecx ; add rsp, 0x28 ; ret
0x0000020000141d1a : cmove eax, ecx ; mov rax, r8 ; ret
0x00000200000eb232 : cmove eax, ecx ; ret
0x0000020000435fdc : cmove eax, ecx ; test eax, eax ; cmove eax, r8d ; ret
0x00000200004496d1 : cmove eax, ecx ; test r8, r8 ; jne 0x200004496ca ; ret
0x000002000071e9c3 : cmove eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001c4c9e : cmove eax, edx ; and dword ptr [rip + 0x18c3d1], eax ; ret
0x00000200000d543e : cmove eax, edx ; jmp 0x200000d542b
0x000002000050849d : cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x000002000012e66e : cmove eax, edx ; ret
0x000002000002b9c4 : cmove eax, r8d ; ret
0x00000200001fc235 : cmove ecx, edx ; mov al, cl ; add rsp, 0x48 ; ret
0x0000020000368489 : cmove edx, ebx ; mov al, r10b ; ret
0x00000200000b592f : cmove edx, ecx ; mov rax, rdx ; ret
0x0000020000368488 : cmove r10d, r11d ; mov al, r10b ; ret
0x00000200000937c1 : cmove r8, r11 ; mov rax, r8 ; ret
0x0000020000141d19 : cmove r8, rcx ; mov rax, r8 ; ret
0x00000200004dd832 : cmove r8d, eax ; mov eax, r8d ; ret
0x00000200000d543d : cmove rax, rdx ; jmp 0x200000d542c
0x00000200000b592e : cmove rdx, rcx ; mov rax, rdx ; ret
0x0000020000617b90 : cmovg eax, eax ; ret
0x00000200004fa8d2 : cmovg eax, ecx ; add rsp, 0x28 ; ret
0x0000020000141fc5 : cmovg eax, ecx ; ret
0x00000200000960b1 : cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x0000020000095de7 : cmovg eax, edx ; ret
0x0000020000617b8f : cmovg eax, r8d ; ret
0x00000200000ecea0 : cmovg ebx, eax ; jmp 0x200000ece0c
0x0000020000096110 : cmovg ecx, eax ; cmp cl, byte ptr [rdx] ; jle 0x200000960f0 ; mov byte ptr [rdx], cl ; ret
0x0000020000042675 : cmovge ecx, dword ptr [rbx - 0x74b7f7b8] ; ret 0x2b48
0x000002000002a7e2 : cmovl eax, edx ; jmp 0x2000002a7a5
0x00000200004f3af7 : cmovl ecx, dword ptr [rbp - 0x749fdba4] ; ret
0x00000200004c8aa1 : cmovl ecx, dword ptr [rbx - 0x2d74b63e] ; jmp r11
0x00000200005b9558 : cmovl ecx, dword ptr [rcx - 0x17dfdb9c] ; insd dword ptr [rdi], dx ; jmp rax
0x0000020000132e5a : cmovl edi, dword ptr [rbx] ; ret 0x77e
0x000002000002a7e1 : cmovl r8d, r10d ; jmp 0x2000002a7a6
0x0000020000095558 : cmovle eax, edx ; mov dl, al ; mov al, dl ; ret
0x00000200004f4693 : cmovne eax, ecx ; add rsp, 0x28 ; ret
0x000002000012a343 : cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200000fa0bc : cmovne eax, ecx ; ret
0x00000200004a93db : cmovne eax, edx ; jmp 0x200004a939c
0x0000020000592811 : cmovne eax, edx ; jmp 0x2000059282d
0x00000200003787f9 : cmovne eax, edx ; ret
0x0000020000204a45 : cmovne ecx, eax ; mov eax, ecx ; ret
0x0000020000439a72 : cmovne ecx, esi ; call 0x200000690e6
0x000002000014bf5b : cmovne edx, eax ; mov eax, edx ; ret
0x000002000014bf5a : cmovne edx, r8d ; mov eax, edx ; ret
0x00000200004a93da : cmovne r8d, edx ; jmp 0x200004a939d
0x0000020000592810 : cmovne rax, rdx ; jmp 0x2000059282e
0x0000020000439a71 : cmovne rcx, r14 ; call 0x200000690e7
0x00000200003a1649 : cmovno ecx, dword ptr [rdi] ; mov bh, 0x47 ; add cl, byte ptr [rax + 3] ; ret
0x000002000064a988 : cmovno edi, edi ; ret
0x000002000064c942 : cmovno edi, edi ; ret 0x8349
0x00000200000f081e : cmovno esi, esi ; rol byte ptr [rcx + rax*2], 0x8b ; ret 0x450f
0x00000200005373a4 : cmovno esi, esi ; rol dword ptr [rcx], 0x74 ; or esi, esi ; ret
0x00000200001a51d6 : cmovns eax, ecx ; jmp 0x1ffc2a59605
0x00000200000e05ff : cmovns eax, edx ; jmp 0x200000e05b8
0x00000200005a757e : cmovns ebx, dword ptr [rbp - 0x39] ; jmp 0x200004f3831
0x00000200001e4ce9 : cmovns ecx, dword ptr [rbx + 0x440f480e] ; ret 0x8948
0x0000020000679374 : cmovns ecx, dword ptr [rbx - 0x3774b72a] ; call r15
0x0000020000225214 : cmovns edi, dword ptr [rbx] ; ret
0x0000020000144845 : cmovns edi, edi ; ret
0x000002000022520b : cmovns esp, dword ptr [rbx] ; ret
0x00000200000e05fe : cmovns r8d, edx ; jmp 0x200000e05b9
0x0000020000234b60 : cmovs eax, dword ptr [rbx - 0x74b70f1e] ; ret 0x23e8
0x0000020000616f9e : cmovs eax, dword ptr [rbx - 0x7cb7fd39] ; ret
0x00000200005dd53d : cmovs eax, dword ptr [rbx] ; ret 0x3d48
0x0000020000435693 : cmovs eax, ecx ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064d6fa : cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000043be8a : cmovs eax, ecx ; clc ; or al, 0x2b ; ret
0x000002000000f20b : cmovs ebp, dword ptr [rbx + rbx*8 - 0x41] ; xlatb ; mov cl, 0xbc ; ret
0x000002000068677c : cmovs ecx, dword ptr [rbp + 0x3b480b04] ; ret
0x00000200004b005d : cmovs ecx, dword ptr [rbp - 0x74b3e7b0] ; ret
0x00000200000f7c81 : cmovs ecx, dword ptr [rbp - 0x74b701b6] ; ret 0x49f0
0x000002000036b845 : cmovs ecx, dword ptr [rbp - 0x74bbd1ec] ; ret
0x00000200004accb3 : cmovs ecx, dword ptr [rbp - 0x74be0eaf] ; ret 0x8d4f
0x00000200004543f2 : cmovs ecx, dword ptr [rbx + 0x4108245c] ; mov eax, ebx ; ret
0x000002000020b701 : cmovs ecx, dword ptr [rbx + 0x4118247c] ; mov eax, ebx ; ret
0x000002000049193e : cmovs ecx, dword ptr [rbx + 0x6ce80849] ; ret
0x000002000012966d : cmovs ecx, dword ptr [rbx - 0x173eb73f] ; cmp byte ptr [rbx], dh ; ret 0xfa8
0x0000020000372f26 : cmovs ecx, dword ptr [rbx] ; ret 0x894c
0x00000200001a885a : cmovs ecx, dword ptr [rcx - 0x72b7f8bb] ; ret
0x00000200003bb615 : cmovs ecx, dword ptr [rcx - 0x74b7f7bf] ; ret
0x00000200000b647b : cmovs ecx, edx ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200002252e9 : cmovs edi, dword ptr [rbx] ; ret
0x000002000054204b : cmovs edi, dword ptr [rbx] ; ret 0xa77
0x000002000020d7c5 : cmovs edi, edi ; ret
0x000002000051415b : cmovs edi, edi ; ret 0x3b49
0x00000200002252e1 : cmovs esp, dword ptr [rbx] ; ret
0x0000020000058d30 : cmovs esp, dword ptr [rbx] ; ret 0xba48
0x000002000005545e : cmovs esp, dword ptr [rbx] ; ret 0xba49
0x00000200001a8859 : cmovs r9, qword ptr [r9 - 0x72b7f8bb] ; ret
0x00000200004383d2 : cmp ah, byte ptr [rdx] ; ret
0x000002000051fbf8 : cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200003c9a39 : cmp al, 0 ; add rcx, r8 ; jmp rcx
0x00000200003c9d09 : cmp al, 0 ; add rcx, rdx ; jmp rcx
0x0000020000244e2e : cmp al, 0 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; cmp al, 0 ; ret
0x0000020000244ebe : cmp al, 0 ; mov al, 0xf0 ; cmp al, 0 ; ret
0x0000020000244e32 : cmp al, 0 ; ret
0x000002000015e333 : cmp al, 0 ; xor eax, eax ; ret
0x0000020000061bad : cmp al, 0x11 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000408b0f : cmp al, 0x15 ; add byte ptr [rbp - 0x3d74feaf], cl ; ret
0x00000200001427ce : cmp al, 0x16 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000018d382 : cmp al, 0x1c ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000018d3b2 : cmp al, 0x1c ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x000002000018d39a : cmp al, 0x1c ; add byte ptr [rcx - 0xa], al ; ret 0x7404
0x000002000018d3ca : cmp al, 0x1c ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000020000508311 : cmp al, 0x20 ; call 0x20000137fe9
0x00000200000d4f7a : cmp al, 0x3b ; fmul dword ptr [rdi] ; ret
0x0000020000120c36 : cmp al, 0x3b ; int1 ; jb 0x20000120c86 ; inc edx ; jmp 0x20000120c20
0x000002000020fffc : cmp al, 0x41 ; loop 0x20000210007 ; add rsp, 0x68 ; ret
0x000002000012bada : cmp al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x000002000043a8ff : cmp al, 0x48 ; mov ecx, esi ; call 0x2000006a617
0x0000020000678e28 : cmp al, 0x4e ; ret
0x000002000008eabd : cmp al, 0x8b ; ret 0x8b41
0x00000200001f324a : cmp al, 0x8b ; ret 0x8d4d
0x00000200000cb702 : cmp al, 0x8b ; ret 0xf41
0x0000020000434cff : cmp al, 0x8b ; xchg dword ptr [rax + rax + 0x3480000], edx ; ret 0x3d48
0x00000200004a16c3 : cmp al, 0xc0 ; inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x00000200001a55de : cmp al, 0xc7 ; mov rcx, r15 ; call 0x200000c18eb
0x00000200003e545d : cmp al, 0xc8 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004443c8 : cmp al, 0xc9 ; mov rcx, rdi ; call 0x200000702b8
0x00000200000a7c72 : cmp al, 0xd2 ; add byte ptr [rbx + rsi*8 - 0x75], dh ; ret 0x8b4d
0x0000020000722e80 : cmp al, 0xe7 ; ret 0x48ff
0x00000200002194d1 : cmp al, 0xea ; push rsi ; ret
0x000002000056f8c8 : cmp al, 0xed ; dec dword ptr [rax - 0x75] ; ret
0x00000200004f9930 : cmp al, 0xf ; ja 0x200004f98fc ; xor al, al ; ret
0x00000200001c676b : cmp al, 0xf ; mov bh, 0xc8 ; call r9
0x000002000018d5f2 : cmp al, 0xf2 ; dec dword ptr [rbp - 0x73] ; add dword ptr [rbp + 0x3b], r9d ; ret 0xf4d
0x00000200005d95fc : cmp al, 0xf4 ; ret 0x48ff
0x0000020000050362 : cmp al, 0xf6 ; ret
0x00000200005d917c : cmp al, 0xf9 ; ret 0x48ff
0x00000200000761f4 : cmp al, 1 ; add byte ptr [rax], al ; mov rcx, qword ptr [rdx] ; mov rax, rdx ; jmp 0x2000007626a
0x000002000061cbfc : cmp al, 1 ; jne 0x2000061cc0d ; movzx eax, r10w ; jmp 0x2000061cc7e
0x0000020000664ce0 : cmp al, 1 ; ret
0x000002000014affa : cmp al, 1 ; sete cl ; mov eax, ecx ; ret
0x0000020000238a60 : cmp al, 2 ; jae 0x20000238a6d ; xor eax, eax ; ret
0x0000020000054ce5 : cmp al, 2 ; je 0x20000054cf7 ; mov eax, ecx ; ret
0x00000200000e865a : cmp al, 3 ; jne 0x200000e8679 ; mov rcx, r14 ; call r15
0x0000020000720c80 : cmp al, 8 ; ret
0x000002000043ff00 : cmp al, 9 ; ret
0x0000020000449cd0 : cmp al, 9 ; ret 0xebff
0x0000020000688223 : cmp al, bpl ; ret 0xbb02
0x0000020000140626 : cmp al, byte ptr [rax] ; jne 0x20000140617 ; mov rax, rcx ; ret
0x0000020000140d06 : cmp al, byte ptr [rax] ; jne 0x20000140cf0 ; mov rax, rcx ; ret
0x0000020000101b37 : cmp al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000023e8ba : cmp al, byte ptr [rax] ; ret
0x0000020000647d5b : cmp al, byte ptr [rbp - 0x75] ; pop rdx ; xor byte ptr [rcx - 0xa], al ; ret
0x00000200000b01b3 : cmp al, byte ptr [rbx - 0x3e74c01f] ; ret
0x00000200000c66f4 : cmp al, byte ptr [rdi + rcx + 0x20] ; ret
0x0000020000249b12 : cmp al, byte ptr [rsi] ; sysenter
0x00000200005118f5 : cmp al, ch ; add eax, 0x8affc3c3 ; ret
0x00000200005fa5c2 : cmp al, ch ; call 0x1ffd25f521d
0x00000200003f80a4 : cmp al, ch ; jbe 0x200003f808f ; ret
0x0000020000688dba : cmp al, ch ; loopne 0x20000688dbf ; mov edx, 0x8bc3ffff ; ret
0x00000200003f7e34 : cmp al, ch ; out 0xe5, al ; ret
0x000002000071189b : cmp al, ch ; pop rdi ; ret
0x00000200003bde0f : cmp al, ch ; ret
0x0000020000473304 : cmp al, ch ; ret 0x95
0x000002000060dfc8 : cmp al, ch ; ret 0xa234
0x0000020000688224 : cmp al, ch ; ret 0xbb02
0x000002000047c840 : cmp al, ch ; ret 0xc6aa
0x000002000041ca38 : cmp al, ch ; ret 0xd311
0x0000020000711863 : cmp al, ch ; xchg eax, edi ; ret
0x00000200006180b7 : cmp al, cl ; jae 0x20000618084 ; ret
0x000002000002a7ad : cmp al, cl ; jne 0x2000002a7eb ; ret
0x00000200000a73b7 : cmp al, dl ; je 0x200000a73ca ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141827 : cmp al, dl ; jne 0x20000141836 ; mov rax, rcx ; ret
0x0000020000141826 : cmp al, dl ; jne 0x20000141837 ; mov rax, rcx ; ret
0x00000200001cd77a : cmp al, dl ; jne 0x200001cd7da ; mov r8b, dl ; jmp 0x200001cd7d0
0x000002000060dfc7 : cmp al, r13b ; ret 0xa234
0x00000200006180b6 : cmp al, r9b ; jae 0x20000618085 ; ret
0x00000200001df1c5 : cmp ax, 0x4800 ; add esp, 0x20 ; pop rbx ; ret
0x000002000042260e : cmp ax, 0x5c ; jne 0x20000422610 ; xor al, al ; ret
0x0000020000141f83 : cmp ax, dx ; jne 0x20000141f94 ; mov rax, rcx ; ret
0x000002000000a394 : cmp bh, 0x5c ; pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x00000200002215fa : cmp bh, 7 ; add byte ptr [rbx], al ; ret 0xc123
0x000002000000afce : cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x0000020000620507 : cmp bh, bh ; ret 0x8349
0x000002000015e0e2 : cmp bh, bl ; adc al, 0 ; ret
0x000002000013f037 : cmp bh, byte ptr [rdi - 0x49f0fff9] ; ret
0x000002000045f69b : cmp bh, byte ptr [rdx - 0x3074b701] ; call 0x2000008a169
0x00000200000b1cb3 : cmp bh, dh ; ret 0xfffe
0x00000200000d66dd : cmp bl, 3 ; jne 0x200000d66e0 ; jmp 0x200000d66ce
0x000002000010cb5c : cmp bl, al ; inc r10 ; jmp 0x2000010cb0c
0x00000200000f9298 : cmp bl, al ; xor eax, eax ; ret
0x0000020000388296 : cmp bl, bpl ; sub byte ptr [rcx - 0x75], cl ; ret 0xaaeb
0x000002000045b1d8 : cmp bl, ch ; add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000432572 : cmp bl, ch ; ret
0x0000020000388297 : cmp bl, ch ; sub byte ptr [rcx - 0x75], cl ; ret 0xaaeb
0x0000020000680c3c : cmp bl, cl ; ret 0x41ff
0x00000200006640c2 : cmp bl, dh ; ret
0x00000200001db134 : cmp byte ptr [r10], al ; call r8
0x00000200004ee5a0 : cmp byte ptr [r13 + 5], sil ; add rsp, 0x38 ; ret
0x0000020000042021 : cmp byte ptr [r13 - 0x75], r9b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd80
0x000002000007d154 : cmp byte ptr [r13 - 0x75], r9b ; ret
0x00000200003e671b : cmp byte ptr [r13 - 0x7b], r8b ; sal byte ptr [rcx + rdx*2 + 0x44], 0x3b ; ret
0x0000020000419d00 : cmp byte ptr [r14 + rax + 0x48], sil ; add esp, 0x20 ; pop rbx ; ret
0x000002000020a7f1 : cmp byte ptr [r14 - 0x77], spl ; ret
0x0000020000162f36 : cmp byte ptr [r15 + rcx - 0x51], r8b ; ret 0x40b9
0x0000020000028d9d : cmp byte ptr [r15], cl ; mov dh, 0x73 ; add cl, byte ptr [rcx - 0x75] ; lodsb al, byte ptr [rsi] ; ret 0xd80
0x000002000037b1f2 : cmp byte ptr [r8 - 0x3f], r9b ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000239362 : cmp byte ptr [r8 - 0x75], cl ; ret 0xd233
0x0000020000585482 : cmp byte ptr [r8 - 0x75], r9b ; ret 0x2548
0x0000020000105eb8 : cmp byte ptr [r8 - 0x77], cl ; ret
0x000002000067a4ed : cmp byte ptr [r8 - 0x77], r9b ; imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x00000200005109c7 : cmp byte ptr [r8 - 1], cl ; ret
0x00000200001bbb81 : cmp byte ptr [r9 + 1], dil ; call rax
0x00000200005ceea1 : cmp byte ptr [r9 + rcx*4 + 0x51], cl ; ret
0x0000020000141130 : cmp byte ptr [rax + 0x2b], cl ; ret
0x0000020000433fb4 : cmp byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200003db24a : cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003daa03 : cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200006cee36 : cmp byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200004b22e2 : cmp byte ptr [rax + 0x3b], cl ; enter 0x7175, -0x75 ; ret
0x000002000011e57f : cmp byte ptr [rax + 0x3b], cl ; ret 0x227d
0x00000200001d48be : cmp byte ptr [rax + 0x48000000], 0x8b ; ret 0xccc3
0x00000200005ca70d : cmp byte ptr [rax + 0xb], cl ; ret
0x000002000036aa8f : cmp byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200001d97b3 : cmp byte ptr [rax + 0xf], cl ; ret 0x3345
0x00000200003ad34f : cmp byte ptr [rax + 1], 0xf ; ja 0x200003ad360 ; mov al, cl ; ret
0x00000200004084c3 : cmp byte ptr [rax + 3], cl ; ret
0x000002000044b556 : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7f], ecx ; ret 0x438
0x000002000047cf6c : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006d83c0 : cmp byte ptr [rax + rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6d58 : cmp byte ptr [rax + rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x349
0x0000020000474a73 : cmp byte ptr [rax + rdx + 0x58b4800], dl ; ret 0xe22b
0x0000020000058cf9 : cmp byte ptr [rax - 0x2f], cl ; call 0x2004cc7b04f
0x000002000064a8c3 : cmp byte ptr [rax - 0x3b7cb7f6], cl ; ret
0x000002000037b1f3 : cmp byte ptr [rax - 0x3f], cl ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000068f129 : cmp byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200001fe9e7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x0000020000468112 : cmp byte ptr [rax - 0x73], cl ; ret
0x00000200004d1f02 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7f], cl ; ret 0xb8
0x000002000049a410 : cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2874
0x0000020000662229 : cmp byte ptr [rax - 0x75], cl ; and al, 0x48 ; jmp rax
0x000002000066e6a1 : cmp byte ptr [rax - 0x75], cl ; call 0x2000004a8bf
0x0000020000162a20 : cmp byte ptr [rax - 0x75], cl ; call rax
0x0000020000126863 : cmp byte ptr [rax - 0x75], cl ; pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x00000200001e882e : cmp byte ptr [rax - 0x75], cl ; pop rsi ; and byte ptr [rax - 0x75], cl ; ret
0x00000200000c5997 : cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000585483 : cmp byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000093ddf : cmp byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000239363 : cmp byte ptr [rax - 0x75], cl ; ret 0xd233
0x00000200000dcef2 : cmp byte ptr [rax - 0x75], cl ; retf ; call 0x200001d9192
0x00000200006c8ad2 : cmp byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], r9b ; ret
0x000002000067a4ee : cmp byte ptr [rax - 0x77], cl ; imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x0000020000105eb9 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000200001301e3 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x200001301f4 ; xor al, al ; ret
0x00000200001301e2 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x200001301f5 ; xor al, al ; ret
0x00000200006685e6 : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x00000200006729bc : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x00000200000785df : cmp byte ptr [rax - 0x7bf0fe07], al ; ret 6
0x0000020000474a88 : cmp byte ptr [rax - 0x7d], cl ; jmp 0x1ffd80a3316
0x0000020000474a87 : cmp byte ptr [rax - 0x7d], cl ; jmp 0x1ffd80a3317
0x00000200000dd1b1 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000200005c786f : cmp byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000003df72 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4807
0x00000200005c14e1 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000071f1e1 : cmp byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200005dba03 : cmp byte ptr [rax - 0x7d], cl ; ret 0xe838
0x000002000067a5b1 : cmp byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x4c], 0x8b ; ret
0x00000200004a7767 : cmp byte ptr [rax - 0x7f], cl ; ret
0x0000020000055a66 : cmp byte ptr [rax - 0x7f], cl ; ret 0x110
0x000002000022bce0 : cmp byte ptr [rax - 1], cl ; loopne 0x2000022bd33 ; jmp rax
0x0000020000209897 : cmp byte ptr [rax - 1], cl ; ret
0x0000020000052c6a : cmp byte ptr [rax - 9], cl ; ret
0x00000200000f43fb : cmp byte ptr [rax], 7 ; add byte ptr [rax], al ; ret
0x000002000023a40a : cmp byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000e6193 : cmp byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000239a52 : cmp byte ptr [rax], al ; call qword ptr [rdx]
0x000002000065f278 : cmp byte ptr [rax], al ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000200004ee683 : cmp byte ptr [rax], al ; je 0x200004ee694 ; add rsp, 0x28 ; ret
0x00000200004544c2 : cmp byte ptr [rax], al ; jne 0x200004544d5 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000048956c : cmp byte ptr [rax], al ; jne 0x2000048957f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006688f5 : cmp byte ptr [rax], al ; jne 0x200006688e9 ; xor al, al ; ret
0x000002000023a402 : cmp byte ptr [rax], al ; mov dh, 0x51 ; cmp byte ptr [rax], al ; ret
0x00000200000e2add : cmp byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x000002000023a406 : cmp byte ptr [rax], al ; ret
0x0000020000149a58 : cmp byte ptr [rax], dh ; or cl, byte ptr [rax - 1] ; ret 0x3eb
0x00000200002306f8 : cmp byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], cl ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200000852f0 : cmp byte ptr [rbp + 0x3b411104], cl ; ret
0x00000200006040f4 : cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x0000020000161fe5 : cmp byte ptr [rbp + 0x5b], bl ; ret
0x00000200004ee5a1 : cmp byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000200002382c4 : cmp byte ptr [rbp + 6], bl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000827ae : cmp byte ptr [rbp + rcx*4 + 0x14], cl ; or byte ptr [rcx - 0x75], al ; ret
0x00000200005bd44b : cmp byte ptr [rbp - 0x75], al ; ret
0x0000020000042022 : cmp byte ptr [rbp - 0x75], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd80
0x000002000007d155 : cmp byte ptr [rbp - 0x75], cl ; ret
0x000002000022531c : cmp byte ptr [rbp - 0x75], cl ; ret 0xe183
0x00000200006f39e4 : cmp byte ptr [rbp - 0x75], r8b ; ret
0x00000200003e671c : cmp byte ptr [rbp - 0x7b], al ; sal byte ptr [rcx + rdx*2 + 0x44], 0x3b ; ret
0x00000200001b32a8 : cmp byte ptr [rbp - 0x7f], ch ; jne 0x200001b3273 ; jmp 0x200001b326b
0x00000200001b32a7 : cmp byte ptr [rbp - 0x7f], r13b ; jne 0x200001b3274 ; jmp 0x200001b326c
0x000002000022003a : cmp byte ptr [rbx + 0x8087], cl ; add byte ptr [rdx], bh ; ret
0x000002000050a020 : cmp byte ptr [rbx + r9 + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x000002000050a021 : cmp byte ptr [rbx + rcx + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x000002000017c736 : cmp byte ptr [rbx - 0x347c011d], al ; add ch, cl ; ret 0xef81
0x000002000063713d : cmp byte ptr [rbx - 0x7cafdbac], cl ; ret 0x306
0x00000200003c94a1 : cmp byte ptr [rbx], ah ; ret 0xc23b
0x000002000013f995 : cmp byte ptr [rbx], al ; ror dword ptr [rcx - 1], 1 ; leave ; jne 0x2000013f949 ; mov eax, edx ; ret
0x000002000060d72e : cmp byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x000002000045f6f5 : cmp byte ptr [rbx], dh ; fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x0000020000500088 : cmp byte ptr [rbx], dh ; leave ; call rax
0x000002000010b914 : cmp byte ptr [rbx], dh ; ret 0x8d48
0x0000020000129674 : cmp byte ptr [rbx], dh ; ret 0xfa8
0x00000200005e7a0f : cmp byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200005e7a0e : cmp byte ptr [rbx], r14b ; ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000045f6f4 : cmp byte ptr [rbx], sil ; fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x00000200001d7879 : cmp byte ptr [rcx + 0x10], al ; mov eax, 0xc0000001 ; ret
0x00000200005200d3 : cmp byte ptr [rcx + 0x232], al ; setne al ; ret
0x0000020000172414 : cmp byte ptr [rcx + 0x33], cl ; ret 0x2348
0x0000020000134a7f : cmp byte ptr [rcx + 0x3a], al ; sete al ; ret
0x00000200001d2605 : cmp byte ptr [rcx + 0x41402444], cl ; call rcx
0x00000200004929c2 : cmp byte ptr [rcx + 0x4c], al ; jne 0x2000049298a ; ret
0x000002000049f307 : cmp byte ptr [rcx + 0x4c], cl ; jne 0x2000049f312 ; ret
0x00000200004929c1 : cmp byte ptr [rcx + 0x4c], r8b ; jne 0x2000049298b ; ret
0x000002000049f306 : cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000049f313 ; ret
0x00000200004929b2 : cmp byte ptr [rcx + 0x4f], al ; je 0x200004929cf ; add dword ptr [rdx + 0x18], eax ; ret
0x00000200004929b1 : cmp byte ptr [rcx + 0x4f], r8b ; je 0x200004929d0 ; add dword ptr [rdx + 0x18], eax ; ret
0x0000020000371550 : cmp byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x0000020000136ab8 : cmp byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200004f3200 : cmp byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ece45 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000261ac : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x0000020000453937 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000c48d8 : cmp byte ptr [rcx + 0xf], al ; mov edx, 0x820f1be6 ; ret 3
0x0000020000500095 : cmp byte ptr [rcx + 1], bh ; call r8
0x00000200001bbb82 : cmp byte ptr [rcx + 1], bh ; call rax
0x000002000063c3c2 : cmp byte ptr [rcx + 2], bh ; call rax
0x0000020000087ac8 : cmp byte ptr [rcx + 3], al ; ror dword ptr [rcx + 0x2b], cl ; ret
0x000002000063c3f8 : cmp byte ptr [rcx + 3], bh ; call rax
0x00000200000c16ed : cmp byte ptr [rcx + 3], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x8b18
0x0000020000033911 : cmp byte ptr [rcx + r9*2 + 1], al ; jne 0x2000003392a ; ret
0x0000020000033912 : cmp byte ptr [rcx + rcx*2 + 1], al ; jne 0x20000033929 ; ret
0x00000200001d786d : cmp byte ptr [rcx + rcx*4 + 0x19], al ; mov eax, r10d ; ret
0x00000200004ee69e : cmp byte ptr [rcx + rcx*4 + 0x41], cl ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200005ceea2 : cmp byte ptr [rcx + rcx*4 + 0x51], cl ; ret
0x00000200005996ce : cmp byte ptr [rcx + rdi + 0x35], al ; ret 0xd47f
0x00000200006f6ba7 : cmp byte ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000116c11 : cmp byte ptr [rcx - 0x75], al ; ret
0x0000020000219c72 : cmp byte ptr [rcx - 0x75], al ; ret 0x349
0x00000200000287b1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000028800 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000074659 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000746a8 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000085d30 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000085d7f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000098ffc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000009904b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000b9f8f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000b9fde ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000c288b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000c28d9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000cfc37 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000cfc86 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000d6e60 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000d6eaf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000e7426 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e7474 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000fd48c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fd4db ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000ff03f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ff08e ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000105bbe : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000105c0d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001062e5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106334 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000106dec : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106e3b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010c9b2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010ca01 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010d2d1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010d320 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001113f7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000111445 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000116a64 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000116ab3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011a6e8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011a737 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011bc0f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011bc5e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000121c1b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000121c6a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000123669 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001236b8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001358aa : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001358f9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001bd88e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bd8dc ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200001dac90 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dacdf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001de6fd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001de74b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001eb04f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb09e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ff47f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ff4ce ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200002023bb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000202409 ; pop rsp ; pop rdi ; pop rsi ; ret
0x000002000021f290 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021f2df ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000022f5ae : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022f5fc ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000036d022 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036d071 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003765af : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003765fe ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003857e7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000385836 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003a839b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a83ea ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003c22f0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c233f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003eb110 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003eb15f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004015e7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000401635 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000405e58 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000405ea7 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000040644e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040649d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000407c44 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000407c93 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000414b08 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000414b57 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000416a80 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000416ace ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000419a3e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000419a8d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000436379 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004363c8 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000043e065 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043e0b4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000043e541 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043e58f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000460b84 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000460bd3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004621c0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046220e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000046836a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004683b9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000046ffab : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046fffa ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000472107 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000472156 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000473400 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047344f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047a687 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047a6d5 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000484d28 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000484d77 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000048dcf6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048dd45 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004aa00e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aa05d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004b39df : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b3a2e ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200004ba775 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ba7c4 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004c464c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c469a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c5370 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c53be ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004c5579 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c55c8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c60dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c612a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ca4ae : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ca4fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ca689 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ca6d8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004cff05 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cff54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d0f6f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d0fbd ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004d1155 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d11a3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004d60c8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d6117 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d65a8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d65f7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d74fe : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d754c ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200004d9186 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d91d5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004db44d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004db49b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004ddf30 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ddf7f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e1e8e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e1edd ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e498f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e49de ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ed276 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ed2c5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004efbfa : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004efc49 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f1a75 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f1ac3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f5c3c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f5c8b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004fc00a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fc058 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fe66f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fe6be ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ff655 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ff6a4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000507a00 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000507a4f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005097dd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050982c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005b6efd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b6f4b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c146d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c14bc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c21d1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c2220 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005cbe29 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cbe77 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005cdf36 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cdf84 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005d1d8c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d1ddb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d2fc2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d3011 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d5852 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d58a0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005dbcd2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dbd20 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005dc379 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dc3c8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005de89d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005de8eb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005deaed : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005deb3b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005e3082 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e30d1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005e3fa0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e3fef ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ea1b3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ea202 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200005eb298 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005eb2e6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005f5aba : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f5b09 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005fb209 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fb257 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005fe421 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fe46f ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006001dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060022a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000604fa5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000604ff4 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000060f433 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060f482 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000610fdd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061102c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000619f5c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000619fab ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061aaad : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061aafc ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061ac6f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061acbe ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061b2e8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061b337 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006225e2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000622631 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000062e349 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062e397 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000062f4cb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062f51a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000631e1a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000631e69 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000632005 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000632054 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064865f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006486ad ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064ae58 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064aea7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064c4ff : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c54e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006525e0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065262e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065ae9d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065aeec ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065c8b0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065c8fe ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065dd92 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065dde0 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000065e144 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065e193 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067024d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067029b ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000067c747 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067c795 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006f669f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f66ee ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006ff0e6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ff135 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ffdcf : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ffe1e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000703467 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007034b6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000703b5e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000703bac ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000070424d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070429b ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200007045d1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070461f ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000705e0f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000705e5e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070607a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007060c9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070800b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070805a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000708915 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000708964 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070904d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070909c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070ae23 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070ae71 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000070b433 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070b482 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000070df80 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070dfce ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000711249 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000711298 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007188de : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000071892c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072b4d6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072b525 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000072b7ac : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072b7fa ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072bcfa : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072bd49 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000072fd42 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072fd90 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001d671f : cmp byte ptr [rcx - 0x75], cl ; ret 0x5c89
0x000002000045dfe2 : cmp byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000537f95 : cmp byte ptr [rcx - 0x75], cl ; shr al, cl ; pop rdx ; ret
0x00000200005bc1da : cmp byte ptr [rcx - 0x76], al ; xor byte ptr [rdx], r12b ; ret 0xd8f6
0x0000020000388293 : cmp byte ptr [rcx - 0x77], cl ; cmp bl, bpl ; sub byte ptr [rcx - 0x75], cl ; ret 0xaaeb
0x000002000036ed13 : cmp byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000680814 : cmp byte ptr [rcx - 1], cl ; loope 0x2000068086a ; add esp, 0x38 ; jmp rax
0x0000020000680957 : cmp byte ptr [rcx - 1], cl ; loope 0x200006809ad ; add esp, 0x38 ; jmp rax
0x00000200006809ac : cmp byte ptr [rcx - 1], cl ; loope 0x20000680a02 ; add esp, 0x38 ; jmp rax
0x00000200006809fc : cmp byte ptr [rcx - 1], cl ; loopne 0x20000680a52 ; add esp, 0x38 ; jmp rax
0x00000200001406da : cmp byte ptr [rcx], 0 ; jne 0x200001406da ; ret
0x00000200001bb613 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x000002000007f69f : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rbp ; ret
0x0000020000151949 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000154b72 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x000002000037d338 : cmp byte ptr [rcx], al ; inc dword ptr [rcx] ; ret
0x0000020000723144 : cmp byte ptr [rcx], cl ; ret
0x0000020000141d17 : cmp byte ptr [rcx], dl ; cmove r8, rcx ; mov rax, r8 ; ret
0x0000020000010e9b : cmp byte ptr [rdi + 0x4b20c2e1], ah ; ret
0x0000020000614b76 : cmp byte ptr [rdi + 0x5d], bl ; ret
0x0000020000134dc9 : cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x00000200004c5410 : cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000101710 : cmp byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005efe5e : cmp byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200001fd9f7 : cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000110cdb : cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x0000020000162f37 : cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x0000020000460e04 : cmp byte ptr [rdi - 0x74b7001c], cl ; ret
0x00000200000b62ec : cmp byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000025ee65 : cmp byte ptr [rdi], al ; ret
0x00000200000e7e34 : cmp byte ptr [rdi], cl ; mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000028d9e : cmp byte ptr [rdi], cl ; mov dh, 0x73 ; add cl, byte ptr [rcx - 0x75] ; lodsb al, byte ptr [rsi] ; ret 0xd80
0x00000200003da8f7 : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200003daf24 : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3f ; ret
0x00000200003da9c4 : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x00000200003e6709 : cmp byte ptr [rdi], cl ; test bh, al ; ret 0x16
0x00000200000ab7d5 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x000002000072273b : cmp byte ptr [rdx + rcx*8 + 0xe], bl ; setne al ; ret
0x000002000072273a : cmp byte ptr [rdx + rcx*8 + 0xe], r11b ; setne al ; ret
0x0000020000667543 : cmp byte ptr [rdx - 0x48], 0xe ; je 0x20000667554 ; xor eax, eax ; ret
0x00000200005efcc4 : cmp byte ptr [rdx - 0x77], cl ; ret
0x000002000012a9a1 : cmp byte ptr [rdx - 0x7eb7ffe9], dh ; ret
0x000002000053214f : cmp byte ptr [rdx - 0xcedbb4], cl ; ret
0x0000020000140625 : cmp byte ptr [rdx], 0 ; jne 0x20000140618 ; mov rax, rcx ; ret
0x00000200001d799a : cmp byte ptr [rdx], 0xcc ; sete al ; ret
0x00000200001db135 : cmp byte ptr [rdx], al ; call r8
0x00000200004d1da3 : cmp byte ptr [rdx], bh ; ret 0x820f
0x000002000013fe92 : cmp byte ptr [rdx], bl ; jne 0x2000013fea1 ; mov rax, rcx ; ret
0x00000200001fb1a5 : cmp byte ptr [rdx], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000016a69e : cmp byte ptr [rdx], dh ; ret 0x8688
0x000002000004c3cc : cmp byte ptr [rdx], dl ; add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x000002000013fe91 : cmp byte ptr [rdx], r11b ; jne 0x2000013fea2 ; mov rax, rcx ; ret
0x000002000013a647 : cmp byte ptr [rip + 0x16896b], al ; je 0x2000013a66c ; call rcx
0x00000200000b7270 : cmp byte ptr [rip + 0x1ebe49], 0 ; jne 0x200000b7283 ; ret
0x00000200001a2c3e : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x0000020000380ee8 : cmp byte ptr [rsi + 0xf], ah ; ret 0x8d48
0x0000020000419d01 : cmp byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x0000020000670456 : cmp byte ptr [rsi + rsi*8], dl ; ret
0x000002000020a7f2 : cmp byte ptr [rsi - 0x77], ah ; ret
0x00000200004d2a4c : cmp byte ptr [rsi], cl ; loopne 0x200004d2a53 ; ret
0x000002000040d624 : cmp byte ptr [rsi], dh ; ret 0x48ff
0x00000200004d9018 : cmp byte ptr [rsp + rbp*8 + 0x3bdf8bff], ah ; ret
0x00000200004d405f : cmp ch, al ; ret 0xffb9
0x0000020000507b94 : cmp ch, bh ; ret 0x89ff
0x000002000009ac29 : cmp ch, byte ptr [rax - 1] ; ret 0x5489
0x000002000058e0e4 : cmp ch, byte ptr [rcx - 0xf] ; push rsi ; ret
0x0000020000492b8c : cmp cl, 0x61 ; jge 0x20000492b9d ; mov al, r9b ; ret
0x00000200003787f6 : cmp cl, 0xf ; cmovne eax, edx ; ret
0x0000020000108e63 : cmp cl, 1 ; sete al ; ret
0x00000200001d799b : cmp cl, ah ; sete al ; ret
0x0000020000713aa4 : cmp cl, bl ; ret
0x0000020000134a80 : cmp cl, byte ptr [r8 + 0x48] ; sete al ; ret
0x000002000011e427 : cmp cl, byte ptr [rax + 0x3b] ; ret 0x8876
0x0000020000134a81 : cmp cl, byte ptr [rax + 0x48] ; sete al ; ret
0x0000020000238b1f : cmp cl, byte ptr [rax + 3] ; ret 0x8948
0x00000200004f98f4 : cmp cl, byte ptr [rax - 0x75] ; add cl, byte ptr [rax + 0x3b] ; ret 0x3874
0x00000200001b08c3 : cmp cl, byte ptr [rax - 0x75] ; ret
0x00000200000a6533 : cmp cl, byte ptr [rax - 0x75] ; ret 0x8d49
0x00000200006c89b6 : cmp cl, byte ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], r9b ; ret
0x000002000020c8de : cmp cl, byte ptr [rax - 0x7d] ; ret
0x000002000012d4a2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200005b26f5 : cmp cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x8b48
0x00000200001457ee : cmp cl, byte ptr [rcx - 1] ; ret 0x3b4d
0x000002000014480d : cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x000002000072025a : cmp cl, byte ptr [rdi] ; ret
0x000002000013417b : cmp cl, byte ptr [rdx + 0xf] ; mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x00000200006eedaf : cmp cl, byte ptr [rdx] ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000096113 : cmp cl, byte ptr [rdx] ; jle 0x200000960ed ; mov byte ptr [rdx], cl ; ret
0x00000200004ace5d : cmp cl, byte ptr [rsi] ; add byte ptr [rbx], bh ; ret 0x8b44
0x000002000017f83c : cmp cl, ch ; and dl, bh ; out dx, eax ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000194a2a : cmp cl, ch ; sal dword ptr [rax], -0xd ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x000002000066d5fa : cmp cl, dh ; jmp qword ptr [rcx]
0x000002000003a004 : cmp cl, dh ; xor byte ptr [rax], al ; ret
0x00000200000960af : cmp cl, dl ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x0000020000095de5 : cmp cl, dl ; cmovg eax, edx ; ret
0x0000020000611a3c : cmp cx, 0x41 ; jae 0x20000611a4f ; movzx eax, cx ; ret
0x000002000038fed8 : cmp cx, 0x61 ; jae 0x2000038feeb ; movzx eax, cx ; ret
0x000002000020a066 : cmp cx, ax ; jae 0x2000020a075 ; xor al, al ; ret
0x0000020000143fc5 : cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x00000200003d0175 : cmp dh, byte ptr [rip + 0xfc08500] ; ret 0x8b49
0x000002000002a94e : cmp dh, byte ptr [rip - 0x7b74b700] ; ret 0xd80
0x0000020000231f26 : cmp dh, cl ; adc dword ptr [rax], eax ; mov dword ptr [r8], eax ; ret
0x000002000066d7e0 : cmp dh, cl ; jmp qword ptr [rcx]
0x00000200000b2de4 : cmp dh, dh ; ret
0x0000020000721a24 : cmp dh, dh ; ret 0x48ff
0x00000200006818ba : cmp dh, dh ; ret 0x7408
0x00000200003d3ea4 : cmp dh, dh ; ret 0x7520
0x00000200004c1029 : cmp dh, dh ; ret 0xf01
0x00000200003c403c : cmp dh, dh ; ret 0xf02
0x00000200002714b8 : cmp dl, 0x11 ; add byte ptr [rbx], dh ; call qword ptr [rcx]
0x0000020000672c08 : cmp dl, 0x1b ; ja 0x20000672c1b ; movzx eax, r10b ; jmp 0x20000672c27
0x0000020000672cd5 : cmp dl, 0x1b ; ja 0x20000672ce8 ; movzx eax, r10b ; jmp 0x20000672cf4
0x0000020000672d89 : cmp dl, 0x1b ; ja 0x20000672d9c ; movzx eax, r10b ; jmp 0x20000672da8
0x0000020000672e2c : cmp dl, 0x1b ; ja 0x20000672e3f ; movzx eax, r10b ; jmp 0x20000672e4b
0x000002000007791c : cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200004c5f19 : cmp dl, 2 ; jb 0x200004c5ecc ; mov al, 2 ; ret
0x000002000067c1b8 : cmp dl, al ; jne 0x2000067c1c4 ; xor eax, eax ; ret
0x000002000000f101 : cmp dl, byte ptr [rbx + rax*4 - 0x20] ; mov cl, 0x18 ; pop rax ; ret 0x4609
0x000002000003c904 : cmp dl, byte ptr [rcx + 0xc3] ; jg 0x2000003c915 ; ret
0x00000200001d952f : cmp dword ptr [r8], r10d ; je 0x200001d9540 ; mov eax, r9d ; ret
0x0000020000605032 : cmp dword ptr [r9], r11d ; ja 0x20000604fee ; ret
0x00000200000e7711 : cmp dword ptr [rax + 0x10], ecx ; jne 0x200000e773a ; add rsp, 0x28 ; ret
0x00000200000f27d5 : cmp dword ptr [rax + 0x10], ecx ; jne 0x200000f27e8 ; mov qword ptr [rdx + 8], r8 ; ret
0x0000020000500273 : cmp dword ptr [rax + 0x1a], edx ; jne 0x20000500276 ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200001c19c6 : cmp dword ptr [rax + 0x20], 0 ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200001366e2 : cmp dword ptr [rax + 0x41fffffd], -0x75 ; ret 0xc148
0x0000020000123ef2 : cmp dword ptr [rax + 0x48010018], edi ; add esp, 0x38 ; ret
0x000002000009fab9 : cmp dword ptr [rax + 0x50], ecx ; je 0x2000009fac4 ; ret
0x0000020000717d6f : cmp dword ptr [rax + 0x78c085ff], ebp ; or edi, edi ; ret
0x0000020000441acd : cmp dword ptr [rax + 8], 0 ; je 0x20000441ade ; xor eax, eax ; ret
0x000002000009b539 : cmp dword ptr [rax + 8], edx ; jne 0x2000009b544 ; ret
0x00000200000f2aa9 : cmp dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000070b582 : cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200001b1748 : cmp dword ptr [rax - 0x75], ecx ; ret 0xb849
0x0000020000081544 : cmp dword ptr [rax - 0x75], ecx ; ret 0xc148
0x000002000058d442 : cmp dword ptr [rax - 0x75], ecx ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x0000020000455eb2 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4428
0x00000200006688f4 : cmp dword ptr [rax], 0 ; jne 0x200006688ea ; xor al, al ; ret
0x00000200001ce622 : cmp dword ptr [rax], 0x8b000001 ; push rax ; and dh, dh ; ret 0x750f
0x000002000065f27a : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000002000023d52e : cmp dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; wait ; ret 0x39
0x0000020000398acb : cmp dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x0000020000139a91 : cmp dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000023d3c6 : cmp dword ptr [rax], eax ; btc dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x000002000023d3e2 : cmp dword ptr [rax], eax ; cmp eax, 0xbc0039ba ; ret
0x000002000023d556 : cmp dword ptr [rax], eax ; hlt ; ret
0x000002000002fe1a : cmp dword ptr [rax], eax ; jne 0x2000002fe2d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004da2e : cmp dword ptr [rax], eax ; jne 0x2000004da53 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bd0d5 : cmp dword ptr [rax], eax ; jne 0x200000bd0de ; ret
0x00000200000c9ce6 : cmp dword ptr [rax], eax ; jne 0x200000c9d0b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f048b : cmp dword ptr [rax], eax ; jne 0x200000f049e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f30a2 : cmp dword ptr [rax], eax ; jne 0x200000f30c7 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001092c8 : cmp dword ptr [rax], eax ; jne 0x200001092d4 ; xor eax, eax ; ret
0x0000020000114441 : cmp dword ptr [rax], eax ; jne 0x20000114466 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000125403 : cmp dword ptr [rax], eax ; jne 0x20000125416 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001406db : cmp dword ptr [rax], eax ; jne 0x200001406d9 ; ret
0x000002000038c981 : cmp dword ptr [rax], eax ; jne 0x2000038c9a2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004059ba : cmp dword ptr [rax], eax ; jne 0x20000405a00 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e4041 : cmp dword ptr [rax], eax ; jne 0x200004e4052 ; add rsp, 0x28 ; ret
0x00000200005fa2cd : cmp dword ptr [rax], eax ; jne 0x200005fa2da ; xor eax, eax ; ret
0x00000200006688a9 : cmp dword ptr [rax], eax ; jne 0x2000066889c ; xor al, al ; ret
0x000002000023d3ca : cmp dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x00000200003a00c2 : cmp dword ptr [rax], eax ; or eax, 0x380039ed ; ret 0x39
0x00000200003a00b6 : cmp dword ptr [rax], eax ; out dx, al ; ret 0x39
0x000002000023d27a : cmp dword ptr [rax], eax ; outsd dx, dword ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp dword ptr [rax], eax ; ret 0x23
0x000002000023d32a : cmp dword ptr [rax], eax ; ret
0x000002000023d27e : cmp dword ptr [rax], eax ; ret 0x23
0x000002000023d52a : cmp dword ptr [rax], eax ; wait ; ret 0x39
0x000002000023d526 : cmp dword ptr [rax], eax ; xchg eax, edx ; ret 0x39
0x000002000023d2ba : cmp dword ptr [rax], eax ; xchg eax, esp ; ret 0x23
0x00000200007195fe : cmp dword ptr [rax], ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000014bf58 : cmp dword ptr [rax], edx ; cmovne edx, r8d ; mov eax, edx ; ret
0x00000200001d9530 : cmp dword ptr [rax], edx ; je 0x200001d953f ; mov eax, r9d ; ret
0x0000020000095e3b : cmp dword ptr [rax], edx ; jne 0x20000095e68 ; mov qword ptr [rax], r8 ; ret
0x00000200003b3e52 : cmp dword ptr [rbp + 0x3b], ecx ; ret 0x3973
0x00000200000b04cf : cmp dword ptr [rbp - 0x32], 0xd ; add byte ptr [rcx - 9], al ; ret 0x417
0x00000200001293b3 : cmp dword ptr [rbp - 8], ebp ; dec dword ptr [rax - 0x7f] ; ret
0x000002000000df28 : cmp dword ptr [rbx + 0x69f75db1], esi ; ret
0x000002000006f54a : cmp dword ptr [rbx - 0x1f7cefb9], ecx ; add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x00000200000e44cf : cmp dword ptr [rbx], ebx ; add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000022a8c3 : cmp dword ptr [rbx], edx ; jb 0x2000022a8c7 ; jmp 0x2000022a8dd
0x000002000009db46 : cmp dword ptr [rcx + 0x10], 0 ; jne 0x2000009db79 ; xor al, al ; ret
0x000002000012df04 : cmp dword ptr [rcx + 0x10], 0x73 ; je 0x2000012df15 ; xor eax, eax ; ret
0x00000200001117eb : cmp dword ptr [rcx + 0x10], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000002ba13 : cmp dword ptr [rcx + 0x10], eax ; jne 0x2000002b9fa ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200000f451c : cmp dword ptr [rcx + 0x168], 0 ; jne 0x200000f4533 ; ret
0x00000200004d25a9 : cmp dword ptr [rcx + 0x18], 0 ; jne 0x200004d25b6 ; ret
0x00000200004d25bd : cmp dword ptr [rcx + 0x18], 0 ; jne 0x200004d25ca ; ret
0x00000200000a9105 : cmp dword ptr [rcx + 0x20], 0 ; je 0x200000a911a ; mov rax, rcx ; ret
0x000002000065a01a : cmp dword ptr [rcx + 0x20], 0 ; je 0x2000065a018 ; mov al, 1 ; ret
0x000002000045c70b : cmp dword ptr [rcx + 0x20], eax ; sbb eax, eax ; add eax, 2 ; ret
0x00000200001f8721 : cmp dword ptr [rcx + 0x20], eax ; sbb eax, eax ; ret
0x00000200003705d0 : cmp dword ptr [rcx + 0x24], 0 ; je 0x200003705dd ; ret
0x00000200000b5a82 : cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x000002000010d6e1 : cmp dword ptr [rcx + 0x30], eax ; setne al ; ret
0x00000200000ecb0d : cmp dword ptr [rcx + 0x30], edx ; cmove eax, r8d ; ret
0x000002000008a174 : cmp dword ptr [rcx + 0x50], eax ; jne 0x2000008a185 ; mov al, r8b ; ret
0x00000200000bc4bd : cmp dword ptr [rcx + 0x50], ecx ; jne 0x200000bc4ce ; mov al, r9b ; ret
0x000002000008a173 : cmp dword ptr [rcx + 0x50], r8d ; jne 0x2000008a186 ; mov al, r8b ; ret
0x00000200000bc4bc : cmp dword ptr [rcx + 0x50], r9d ; jne 0x200000bc4cf ; mov al, r9b ; ret
0x00000200004bd1d7 : cmp dword ptr [rcx + 0x68], edx ; jne 0x200004bd1e6 ; xor al, al ; ret
0x00000200004bd1d6 : cmp dword ptr [rcx + 0x68], r10d ; jne 0x200004bd1e7 ; xor al, al ; ret
0x000002000014d805 : cmp dword ptr [rcx + 2], eax ; jae 0x2000014d814 ; xor al, al ; ret
0x0000020000149a4f : cmp dword ptr [rcx + 2], eax ; ret 0xb60f
0x00000200006655d2 : cmp dword ptr [rcx + 4], 0 ; jl 0x200006655e3 ; mov al, 1 ; ret
0x000002000040cc3a : cmp dword ptr [rcx + 4], edx ; jae 0x2000040cc0e ; mov dword ptr [r9 + 4], edx ; ret
0x00000200000b592b : cmp dword ptr [rcx + 8], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x0000020000139cec : cmp dword ptr [rcx + 8], eax ; je 0x200001b86ab ; ret
0x0000020000088e2b : cmp dword ptr [rcx + 8], ecx ; je 0x20000088e01 ; xor eax, eax ; ret
0x00000200004ae540 : cmp dword ptr [rcx + rdx + 0xc], eax ; jne 0x200004ae517 ; inc r10d ; jmp 0x200004ae521
0x000002000068f265 : cmp dword ptr [rcx - 0x75], eax ; ret 0xff41
0x00000200003b242f : cmp dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x00000200004babbd : cmp dword ptr [rcx - 1], eax ; ret 0xff48
0x000002000014481b : cmp dword ptr [rcx - 1], ecx ; ret
0x0000020000398aca : cmp dword ptr [rcx], 0 ; add rcx, rdx ; jmp rcx
0x00000200004e4040 : cmp dword ptr [rcx], 0 ; jne 0x200004e4053 ; add rsp, 0x28 ; ret
0x00000200005fa2cc : cmp dword ptr [rcx], 0 ; jne 0x200005fa2db ; xor eax, eax ; ret
0x00000200006688a8 : cmp dword ptr [rcx], 0 ; jne 0x2000066889d ; xor al, al ; ret
0x0000020000236969 : cmp dword ptr [rcx], eax ; jb 0x20000236976 ; xor al, al ; ret
0x00000200001c2bb7 : cmp dword ptr [rcx], eax ; jne 0x200001c2bc4 ; xor eax, eax ; ret
0x0000020000614bee : cmp dword ptr [rcx], eax ; jne 0x20000614c01 ; mov eax, 1 ; ret
0x0000020000225186 : cmp dword ptr [rcx], eax ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x00000200000de643 : cmp dword ptr [rcx], eax ; sete al ; ret
0x000002000004d969 : cmp dword ptr [rcx], eax ; setne al ; ret
0x0000020000605033 : cmp dword ptr [rcx], ebx ; ja 0x20000604fed ; ret
0x000002000006ad86 : cmp dword ptr [rcx], ecx ; jne 0x2000006ad8f ; ret
0x00000200000de25b : cmp dword ptr [rcx], ecx ; jne 0x200000de26a ; mov rax, rcx ; ret
0x00000200004315bd : cmp dword ptr [rcx], ecx ; jne 0x200004315c6 ; ret
0x0000020000432921 : cmp dword ptr [rcx], ecx ; jne 0x2000043292a ; ret
0x0000020000482c61 : cmp dword ptr [rcx], ecx ; jne 0x20000482c6e ; xor eax, eax ; ret
0x0000020000073e81 : cmp dword ptr [rcx], ecx ; seta al ; ret
0x0000020000142121 : cmp dword ptr [rcx], edx ; cmove r8, rcx ; mov rax, r8 ; ret
0x00000200005e14a8 : cmp dword ptr [rcx], edx ; mov qword ptr [rbp - 0x48], rcx ; jne 0x200005e1479 ; jmp 0x200005e14cf
0x00000200000a262b : cmp dword ptr [rcx], esp ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200003e6802 : cmp dword ptr [rdi + 0x40], edx ; je 0x200003e6793 ; jmp 0x20000552a4b
0x00000200003e6801 : cmp dword ptr [rdi + 0x40], r10d ; je 0x200003e6794 ; jmp 0x20000552a4c
0x00000200004a93d4 : cmp dword ptr [rdi + 0x6f4], esp ; cmovne r8d, edx ; jmp 0x200004a93a3
0x000002000012df0f : cmp dword ptr [rdi + 0x74], edi ; idiv dword ptr [rax + 1] ; ret
0x000002000022fc85 : cmp dword ptr [rdi + rcx + 0x20], eax ; ret
0x00000200001de105 : cmp dword ptr [rdx + 0xf000000], -0x49 ; ret
0x0000020000106035 : cmp dword ptr [rdx + 8], eax ; je 0x200001a5bdb ; ret
0x0000020000406773 : cmp dword ptr [rdx - 0x3f], edx ; inc dword ptr [rbp - 0x75] ; ret 0x1be
0x0000020000140d05 : cmp dword ptr [rdx], 0 ; jne 0x20000140cf1 ; mov rax, rcx ; ret
0x00000200004dd830 : cmp dword ptr [rdx], eax ; cmove r8d, eax ; mov eax, r8d ; ret
0x00000200000f2258 : cmp dword ptr [rdx], eax ; jne 0x200000f226d ; add rsp, 0x28 ; ret
0x0000020000674005 : cmp dword ptr [rdx], eax ; jne 0x20000673ffe ; ret
0x00000200000a56b8 : cmp dword ptr [rdx], ebp ; add dh, dh ; ret
0x0000020000142183 : cmp dword ptr [rdx], ebx ; jne 0x20000142192 ; mov rax, rcx ; ret
0x00000200005cee38 : cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x00000200004493d3 : cmp dword ptr [rdx], edx ; ret 0x48ff
0x0000020000142182 : cmp dword ptr [rdx], r11d ; jne 0x20000142193 ; mov rax, rcx ; ret
0x000002000014415a : cmp dword ptr [rip + 0x15ec20], ecx ; sete al ; ret
0x00000200000e1860 : cmp dword ptr [rip + 0x1cc0f5], 0 ; jne 0x200000e1873 ; ret
0x0000020000135d9e : cmp dword ptr [rip + 0x21b6b0], eax ; sete al ; ret
0x000002000008c836 : cmp dword ptr [rip + 0x2c4a48], eax ; setne al ; ret
0x0000020000662234 : cmp dword ptr [rip - 0x3b48b6], ecx ; jne 0x20000662245 ; ret
0x0000020000718be1 : cmp dword ptr [rip - 0x3c7887], ecx ; je 0x20000718bfe ; ret
0x00000200001775ab : cmp dword ptr [rip - 0x417f0011], ecx ; ret
0x00000200005ad6c4 : cmp dword ptr [rsi - 0x7b], esp ; ret 0x375
0x00000200005901dd : cmp dword ptr [rsi - 0x7d], esp ; stc ; add cl, byte ptr [rdi] ; test ecx, esi ; ret 0xfff1
0x000002000003cc18 : cmp dword ptr [rsi], 3 ; jne 0x2000003cc91 ; mov rcx, rsi ; call rdi
0x000002000065118c : cmp dword ptr [rsp + 8], eax ; jae 0x2000065119f ; or eax, 0xffffffff ; ret
0x0000020000651199 : cmp dword ptr [rsp + 8], eax ; seta cl ; mov eax, ecx ; ret
0x00000200005f6809 : cmp dword ptr [rsp + rcx - 0x18], esi ; ret
0x0000020000158434 : cmp eax, 0 ; jne 0x20000158529 ; ret
0x0000020000103693 : cmp eax, 0x10019 ; add byte ptr [rax], al ; jne 0x200001036d0 ; ret
0x00000200001d6e43 : cmp eax, 0x17a20e ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x00000200001063c9 : cmp eax, 0x1a7851 ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200000e1861 : cmp eax, 0x1cc0f5 ; add byte ptr [rbp + 1], dh ; ret
0x00000200000b7271 : cmp eax, 0x1ebe49 ; add byte ptr [rbp + 1], dh ; ret
0x00000200000f43a3 : cmp eax, 0x20c48348 ; pop rbx ; ret
0x000002000018b8a5 : cmp eax, 0x23058948 ; ret
0x0000020000667532 : cmp eax, 0x250 ; setb al ; ret
0x00000200000e16aa : cmp eax, 0x26fa2c ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x0000020000643d5d : cmp eax, 0x29 ; jb 0x20000643d55 ; or eax, 0xffffffff ; ret
0x00000200001e923e : cmp eax, 0x32 ; jb 0x200001e9219 ; xor eax, eax ; ret
0x0000020000028e24 : cmp eax, 0x3282b2 ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x00000200000286ac : cmp eax, 0x328a2a ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x0000020000548bbb : cmp eax, 0x33ffe843 ; shr al, cl ; pop rdx ; ret 0xffd4
0x000002000072f00b : cmp eax, 0x348ffb7 ; ret
0x00000200001cce47 : cmp eax, 0x3b001082 ; ret
0x000002000071462f : cmp eax, 0x40 ; jb 0x2000071460d ; ret
0x000002000065a009 : cmp eax, 0x4000001f ; je 0x2000065a01c ; xor al, al ; ret
0x00000200000eb867 : cmp eax, 0x48002660 ; cmp edx, eax ; ja 0x200000eb8c0 ; ret
0x0000020000138d89 : cmp eax, 0x48c03300 ; add esp, 0x28 ; ret
0x00000200006fecbb : cmp eax, 0x48ffbd4b ; add esp, 0x28 ; ret
0x000002000013b947 : cmp eax, 0x48ffeec5 ; add esp, 0x38 ; ret
0x00000200005184e7 : cmp eax, 0x48fffb61 ; add esp, 0x28 ; ret
0x000002000063c93b : cmp eax, 0x48ffffff ; add esp, 0x38 ; ret
0x000002000022ee85 : cmp eax, 0x50 ; jmp 0x2000022ee51
0x00000200001dab60 : cmp eax, 0x58bfff5 ; ret 0xc
0x000002000042260f : cmp eax, 0x5c ; jne 0x2000042260f ; xor al, al ; ret
0x0000020000209f83 : cmp eax, 0x6030000 ; je 0x20000209f96 ; xor al, al ; ret
0x0000020000137ea1 : cmp eax, 0x74c08400 ; add bh, bh ; ret
0x0000020000712351 : cmp eax, 0x80 ; jb 0x20000712313 ; ret
0x0000020000191f4f : cmp eax, 0x80000000 ; jne 0x20000191f2b ; jmp 0x200000be1b1
0x0000020000192076 : cmp eax, 0x80000000 ; jne 0x2000019205a ; jmp 0x200000be2ff
0x000002000067d271 : cmp eax, 0x83480001 ; ret
0x00000200004fa828 : cmp eax, 0x83489848 ; ret
0x000002000067d341 : cmp eax, 0x88410001 ; or byte ptr [rax - 9], cl ; ret 0xfffc
0x00000200005d43bf : cmp eax, 0x8affb798 ; ret
0x000002000070f893 : cmp eax, 0x8b000174 ; ret 0x8d48
0x00000200005c79bf : cmp eax, 0x8bffb862 ; ret
0x000002000044b99f : cmp eax, 0x8bffc1d7 ; ret
0x000002000047c9df : cmp eax, 0x8bffe184 ; ret
0x00000200001452d3 : cmp eax, 0x8bfffdd5 ; ret
0x00000200005ae07f : cmp eax, 0x90ffbafb ; jmp 0x2000050a2fc
0x0000020000717900 : cmp eax, 0x98f50589 ; ret
0x00000200005f9fe0 : cmp eax, 0xa ; je 0x200005f9fef ; xor eax, eax ; ret
0x0000020000409e0f : cmp eax, 0xb60fffd5 ; ret
0x000002000023d3e4 : cmp eax, 0xbc0039ba ; ret
0x000002000000de55 : cmp eax, 0xd8511437 ; ret
0x000002000000e7bd : cmp eax, 0xdf1afacc ; ret 0xda8
0x000002000060c378 : cmp eax, 0xe0158d48 ; ret
0x000002000051659e : cmp eax, 0xfd ; ja 0x2000051655f ; jmp 0x200005b2896
0x0000020000037b2d : cmp eax, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0x8348
0x0000020000724124 : cmp eax, 0xffb7ef33 ; jmp 0x20000700385
0x0000020000471dc4 : cmp eax, 0xffe33e77 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000407a0f : cmp eax, 0xffecac7c ; call 0x20000031498
0x000002000065ac6b : cmp eax, 0xfffc875 ; xchg eax, esp ; ret
0x00000200004e014d : cmp eax, 1 ; jbe 0x200004e015d ; xor ecx, ecx ; call rax
0x00000200000f4541 : cmp eax, 2 ; jae 0x200000f454c ; ret
0x00000200000f5865 : cmp eax, 2 ; jl 0x200000f5870 ; ret
0x000002000067b27d : cmp eax, 3 ; jne 0x2000067b253 ; xor eax, eax ; ret
0x000002000070e842 : cmp eax, 5 ; jbe 0x2000070e85a ; movzx eax, r8w ; ret
0x00000200000a347c : cmp eax, 8 ; je 0x200000a34b3 ; mov eax, r8d ; ret
0x00000200000e4371 : cmp eax, dword ptr [rax + rax*8 - 0xb7e18b] ; ret
0x00000200005b75dd : cmp eax, dword ptr [rax + rdi + 0x25] ; ret 0xf2a
0x0000020000240fb6 : cmp eax, dword ptr [rax] ; jl 0x20000240fed ; cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rbx]
0x00000200003a813a : cmp eax, dword ptr [rax] ; jne 0x200003a814d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000240fba : cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rbx]
0x000002000016235c : cmp eax, dword ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000016191c : cmp eax, dword ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000016165c : cmp eax, dword ptr [rax] ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000023fa5e : cmp eax, dword ptr [rax] ; ret
0x0000020000242562 : cmp eax, dword ptr [rax] ; ret 0x3b59
0x00000200001c263f : cmp eax, dword ptr [rbp + rcx*4 + 0x43] ; inc dword ptr [rsi - 0x75] ; ret 0x4504
0x000002000049d60c : cmp eax, dword ptr [rbx + rbp - 0x3f] ; movzx eax, r8w ; ret
0x000002000020a1d5 : cmp eax, dword ptr [rcx + 0x20] ; jb 0x2000020a1e4 ; xor al, al ; ret
0x0000020000666f12 : cmp eax, dword ptr [rcx + 8] ; jbe 0x20000666f24 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002e0cc : cmp eax, dword ptr [rcx - 0x75] ; ret
0x0000020000088062 : cmp eax, dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200003ad4c8 : cmp eax, dword ptr [rcx - 0x76] ; ret 0x8b48
0x000002000014429d : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000138186 : cmp eax, dword ptr [rdx] ; jb 0x20000138176 ; ret
0x0000020000275bd2 : cmp eax, dword ptr [rsi] ; sysenter
0x00000200000937bf : cmp eax, eax ; cmove r8, r11 ; mov rax, r8 ; ret
0x0000020000617b8d : cmp eax, eax ; cmovg eax, r8d ; ret
0x0000020000112a99 : cmp eax, eax ; ja 0x20000112a95 ; sbb eax, eax ; ret
0x00000200001c6268 : cmp eax, eax ; jae 0x200001c6277 ; or eax, 0xffffffff ; ret
0x00000200000bc989 : cmp eax, eax ; jb 0x200000bc974 ; ret
0x000002000020c426 : cmp eax, eax ; jb 0x2000020c41f ; mov al, 1 ; ret
0x00000200004be47e : cmp eax, eax ; jb 0x200004be478 ; xor al, al ; ret
0x00000200003e5998 : cmp eax, eax ; jbe 0x200003e59a9 ; ret
0x0000020000517f30 : cmp eax, eax ; jbe 0x20000517f43 ; mov eax, 1 ; ret
0x000002000002a96b : cmp eax, eax ; je 0x2000002a978 ; xor al, al ; ret
0x00000200000f92ee : cmp eax, eax ; je 0x200000f92e8 ; jmp 0x200000f92bc
0x00000200004d2a66 : cmp eax, eax ; je 0x200004d2a37 ; ret
0x00000200000facfd : cmp eax, eax ; jne 0x200000face0 ; mov eax, r9d ; ret
0x00000200004c380d : cmp eax, eax ; jne 0x200004c37fc ; xor eax, eax ; ret
0x00000200004d2a61 : cmp eax, eax ; jne 0x200004d2a5d ; cmp rax, r8 ; je 0x200004d2a3c ; ret
0x0000020000624bf0 : cmp eax, eax ; jne 0x20000624bce ; xor eax, eax ; ret
0x000002000067d095 : cmp eax, eax ; jne 0x2000067d091 ; xor eax, eax ; ret
0x00000200000d0a69 : cmp eax, ebx ; jne 0x200000d0a76 ; xor al, al ; ret
0x00000200000e2afd : cmp eax, ebx ; jne 0x200000e2b10 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060acf5 : cmp eax, ebx ; jne 0x2000060acd5 ; mov rax, rdx ; ret
0x0000020000388662 : cmp eax, ecx ; cmovae rax, rdx ; ret
0x0000020000185282 : cmp eax, ecx ; cmovb ecx, eax ; mov edx, ecx ; jmp 0x20000091576
0x00000200004fa8d0 : cmp eax, ecx ; cmovg eax, ecx ; add rsp, 0x28 ; ret
0x00000200000a64e3 : cmp eax, ecx ; ja 0x200000a64f6 ; cmp r8, r10 ; sbb eax, eax ; ret
0x00000200000f92df : cmp eax, ecx ; ja 0x200000f92e8 ; ret
0x0000020000112a85 : cmp eax, ecx ; ja 0x20000112a98 ; jae 0x20000112a9e ; or eax, 0xffffffff ; ret
0x000002000012fdde : cmp eax, ecx ; ja 0x2000012fdeb ; sbb eax, eax ; ret
0x00000200000e0534 : cmp eax, ecx ; jae 0x200000e0545 ; add rsp, 0x28 ; ret
0x00000200001d174d : cmp eax, ecx ; jae 0x200001d175a ; mov al, 1 ; ret
0x0000020000209fd6 : cmp eax, ecx ; jae 0x20000209fd1 ; mov rax, rdx ; ret
0x0000020000209fd6 : cmp eax, ecx ; jae 0x20000209fd2 ; mov rax, rdx ; ret
0x0000020000225172 : cmp eax, ecx ; jae 0x20000225181 ; or eax, 0xffffffff ; ret
0x00000200003694ea : cmp eax, ecx ; jae 0x20000369508 ; mov al, 1 ; ret
0x00000200007195c9 : cmp eax, ecx ; jae 0x200007195d8 ; or eax, 0xffffffff ; ret
0x000002000008fe7b : cmp eax, ecx ; jb 0x2000008fe8e ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000008fe95 : cmp eax, ecx ; jb 0x2000008fea8 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000120fad : cmp eax, ecx ; jb 0x20000120fa8 ; mov eax, 1 ; ret
0x00000200001d93b0 : cmp eax, ecx ; jb 0x200001d93a8 ; mov eax, 0xc0000225 ; ret
0x0000020000224149 : cmp eax, ecx ; jb 0x20000224146 ; xor eax, eax ; ret
0x000002000023332e : cmp eax, ecx ; jb 0x20000233311 ; ret
0x000002000049f266 : cmp eax, ecx ; jb 0x2000049f27d ; add rsp, 0x28 ; ret
0x00000200004a8dba : cmp eax, ecx ; jb 0x200004a8da3 ; mov eax, edx ; ret
0x00000200004a8dba : cmp eax, ecx ; jb 0x200004a8da4 ; mov eax, edx ; ret
0x0000020000635b5a : cmp eax, ecx ; jb 0x20000635b23 ; jmp 0x20000635b66
0x000002000051d22c : cmp eax, ecx ; jbe 0x2000051d247 ; mov eax, 1 ; ret
0x00000200001bc8ba : cmp eax, ecx ; jl 0x200001bc8ae ; xor eax, eax ; ret
0x0000020000518d46 : cmp eax, ecx ; jl 0x20000518d37 ; ret
0x000002000022b971 : cmp eax, ecx ; jne 0x2000022b960 ; ret
0x0000020000647d3a : cmp eax, ecx ; jne 0x20000647d2a ; mov eax, 0xc0000225 ; ret
0x00000200000966fa : cmp eax, ecx ; mov rcx, rbx ; je 0x20000096782 ; call rax
0x00000200005b4677 : cmp eax, ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000014122f : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200000c5dc4 : cmp eax, ecx ; seta al ; ret
0x000002000003998e : cmp eax, ecx ; setae al ; ret
0x000002000022517d : cmp eax, ecx ; setne al ; ret
0x000002000002b9c2 : cmp eax, edx ; cmove eax, r8d ; ret
0x0000020000468f68 : cmp eax, edx ; ja 0x20000468f81 ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x00000200005049a4 : cmp eax, edx ; ja 0x200005049b1 ; mov eax, ecx ; ret
0x00000200004cbac2 : cmp eax, edx ; jae 0x200004cbad5 ; mov eax, 0xc0000023 ; ret
0x000002000014034d : cmp eax, edx ; jb 0x2000014033e ; ret
0x0000020000140400 : cmp eax, edx ; jb 0x200001403f0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000141cf7 : cmp eax, edx ; jb 0x20000141cef ; ret
0x00000200001420f9 : cmp eax, edx ; jb 0x200001420ef ; ret
0x00000200004a8e0c : cmp eax, edx ; jb 0x200004a8df9 ; mov dword ptr [rcx + 0x7c], edx ; ret
0x000002000050a184 : cmp eax, edx ; jb 0x2000050a163 ; mov rax, rdx ; ret
0x000002000050a184 : cmp eax, edx ; jb 0x2000050a164 ; mov rax, rdx ; ret
0x00000200005bfdcf : cmp eax, edx ; jb 0x200005bfda5 ; movzx eax, r8w ; ret
0x00000200005f33fb : cmp eax, edx ; jb 0x200005f33f7 ; mov eax, 0xc0000225 ; ret
0x00000200006f45ca : cmp eax, edx ; jb 0x200006f45c2 ; ret
0x00000200000f43a0 : cmp eax, edx ; jbe 0x200000f43ea ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005efb78 : cmp eax, edx ; jbe 0x200005efb8b ; mov eax, 0xc0000023 ; ret
0x00000200000d0bbc : cmp eax, edx ; je 0x200000d0bd1 ; ret
0x0000020000369712 : cmp eax, edx ; je 0x20000369711 ; ret
0x00000200001d9361 : cmp eax, edx ; jl 0x200001d9355 ; or eax, 0xffffffff ; ret
0x0000020000237168 : cmp eax, edx ; jl 0x20000237150 ; ret
0x00000200005b6661 : cmp eax, edx ; jmp 0x200005b6699
0x00000200000339ce : cmp eax, edx ; jne 0x200000339ef ; mov rax, r9 ; ret
0x000002000010b220 : cmp eax, edx ; jne 0x2000010b1e3 ; jmp 0x200001a74f0
0x0000020000141f84 : cmp eax, edx ; jne 0x20000141f93 ; mov rax, rcx ; ret
0x00000200000a64e8 : cmp eax, edx ; sbb eax, eax ; ret
0x00000200004bd271 : cmp eax, edx ; setae al ; ret
0x00000200004d4fa2 : cmp eax, edx ; setbe al ; ret
0x00000200000d0a68 : cmp eax, r11d ; jne 0x200000d0a77 ; xor al, al ; ret
0x0000020000617b8c : cmp eax, r8d ; cmovg eax, r8d ; ret
0x00000200001c6267 : cmp eax, r8d ; jae 0x200001c6278 ; or eax, 0xffffffff ; ret
0x00000200000bc988 : cmp eax, r8d ; jb 0x200000bc975 ; ret
0x00000200004be47d : cmp eax, r8d ; jb 0x200004be479 ; xor al, al ; ret
0x00000200003e5997 : cmp eax, r8d ; jbe 0x200003e59aa ; ret
0x00000200004c380c : cmp eax, r8d ; jne 0x200004c37fd ; xor eax, eax ; ret
0x00000200000462a8 : cmp ebp, 0xf44ffff ; mov dh, 0x83 ; ret
0x000002000000d739 : cmp ebp, dword ptr [rax] ; jne 0x2000000d7b9 ; cdq ; jl 0x2000000d76a ; ret 0x23e8
0x0000020000070181 : cmp ebp, ebx ; ret 0x37e8
0x000002000059fbb8 : cmp ebp, ecx ; ret
0x00000200003f86ee : cmp ebx, 0x10 ; jae 0x200003f8701 ; mov eax, r8d ; jmp 0x200003f86c4
0x0000020000493cc1 : cmp ebx, 0xc0000023 ; je 0x20000493c92 ; jmp 0x20000493c9f
0x00000200007183ee : cmp ebx, dword ptr [rax + 0xd8b48ff] ; js 0x2000071838a ; ret
0x00000200007183ed : cmp ebx, dword ptr [rax + 0xd8b48ff] ; js 0x2000071838b ; ret
0x0000020000217f8d : cmp ebx, dword ptr [rbx + 8] ; jne 0x20000217f9e ; mov eax, r10d ; jmp 0x20000217fa5
0x000002000037fb20 : cmp ebx, dword ptr [rcx + 8] ; jb 0x2000037fa65 ; ret
0x00000200000c2bdd : cmp ebx, dword ptr [rdi] ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000015dce6 : cmp ebx, eax ; mov eax, 5 ; ret
0x000002000051126f : cmp ebx, eax ; sete r9b ; mov eax, r9d ; ret
0x00000200004f4d4c : cmp ebx, ebp ; inc dword ptr [rcx - 0x76] ; salc ; call 0x20000030f78
0x0000020000231eb0 : cmp ebx, ecx ; jae 0x20000231ec3 ; mov eax, 1 ; ret
0x000002000020ad41 : cmp ebx, ecx ; jb 0x2000020ad2e ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c62bf : cmp ebx, ecx ; seta al ; ret
0x00000200001ee290 : cmp ebx, edi ; jne 0x200001ee261 ; jmp 0x200001ee2a5
0x000002000062f8b0 : cmp ebx, edx ; jne 0x2000062f8ad ; jmp 0x2000062f8c2
0x00000200000e1ea2 : cmp ecx, 0x12 ; jae 0x200000e1eb1 ; mov al, 1 ; ret
0x00000200000e1eaa : cmp ecx, 0x14 ; ja 0x200000e1eb9 ; xor al, al ; ret
0x00000200000f3b27 : cmp ecx, 0x1f ; jne 0x200000f3b0a ; xor eax, eax ; ret
0x000002000020c407 : cmp ecx, 0x20 ; jb 0x2000020c3fc ; mov rax, r8 ; ret
0x000002000038a6ef : cmp ecx, 0x30 ; jb 0x2000038a6cc ; mov rax, r8 ; ret
0x0000020000143fc3 : cmp ecx, 0x3a ; jae 0x20000143fd7 ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000611a3d : cmp ecx, 0x41 ; jae 0x20000611a4e ; movzx eax, cx ; ret
0x000002000013f53c : cmp ecx, 0x6030000 ; setbe al ; ret
0x000002000038fed9 : cmp ecx, 0x61 ; jae 0x2000038feea ; movzx eax, cx ; ret
0x00000200000b4f53 : cmp ecx, 0x7ffffffe ; cmova eax, edx ; ret
0x0000020000140f3e : cmp ecx, 0x80 ; setb al ; ret
0x000002000010647b : cmp ecx, 0x8009035d ; je 0x20000106496 ; mov eax, edx ; ret
0x00000200004f994e : cmp ecx, 0xf ; jne 0x200004f995f ; mov rax, r8 ; ret
0x000002000009c4d7 : cmp ecx, 0xfd ; ja 0x2000009c4e6 ; mov al, 1 ; ret
0x0000020000475735 : cmp ecx, 1 ; je 0x20000475740 ; ret
0x0000020000207320 : cmp ecx, 1 ; setle al ; ret
0x000002000058821c : cmp ecx, 2 ; jae 0x20000588218 ; jmp 0x2000049447c
0x0000020000472b8c : cmp ecx, 2 ; jb 0x20000472b72 ; mov al, dl ; ret
0x0000020000472b8c : cmp ecx, 2 ; jb 0x20000472b73 ; mov al, dl ; ret
0x0000020000434659 : cmp ecx, 4 ; jne 0x20000434668 ; xor eax, eax ; ret
0x000002000012e668 : cmp ecx, 5 ; lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200005b6467 : cmp ecx, 6 ; jb 0x200005b63dc ; ret
0x00000200005b6577 : cmp ecx, 6 ; jb 0x200005b6569 ; add rsp, 0x28 ; ret
0x00000200003ef461 : cmp ecx, 6 ; jne 0x200003ef4c5 ; ret
0x000002000010a3ec : cmp ecx, 7 ; jne 0x2000010a419 ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200006c5914 : cmp ecx, 9 ; je 0x200006c5923 ; mov eax, edx ; jmp 0x200006c5972
0x000002000038e2f3 : cmp ecx, dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200003f9f67 : cmp ecx, dword ptr [rax - 0x3f] ; call qword ptr [rcx]
0x000002000043a0bb : cmp ecx, dword ptr [rax - 0x75] ; retf ; call 0x20000068fd7
0x000002000020e074 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005a733f : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4518
0x000002000008e714 : cmp ecx, dword ptr [rbp + 0x63] ; ror byte ptr [rax + 0x63], 1 ; ret 0x8d4e
0x0000020000510ac2 : cmp ecx, dword ptr [rbx + 0x14a6e8d5] ; ret
0x000002000068d133 : cmp ecx, dword ptr [rbx - 0x3f94b33e] ; sbb dword ptr [rcx - 0x75], eax ; ret 0xff41
0x000002000020df7f : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x1c77
0x000002000020ddd1 : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x870f
0x00000200006fd877 : cmp ecx, dword ptr [rcx + rcx*4 + 0x73] ; or byte ptr [rax - 0x75], cl ; ret
0x000002000061663b : cmp ecx, dword ptr [rcx] ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x00000200005ef072 : cmp ecx, dword ptr [rcx] ; sete al ; ret
0x0000020000492338 : cmp ecx, dword ptr [rdi] ; add dh, dh ; ret
0x00000200006687dc : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006687eb ; xor eax, eax ; ret
0x00000200006687db : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006687ec ; xor eax, eax ; ret
0x000002000022fd23 : cmp ecx, dword ptr [rdx + rax*4 + 8] ; jne 0x2000022fd16 ; mov al, 1 ; ret
0x00000200004add21 : cmp ecx, dword ptr [rdx + rax*8 + 0x70] ; jne 0x200004add2e ; ret
0x000002000010a19f : cmp ecx, dword ptr [rip + 0x1cd9d7] ; jae 0x2000010a1b0 ; ret
0x000002000009d489 : cmp ecx, dword ptr [rip + 0x2b3b99] ; sete al ; ret
0x00000200006f76d9 : cmp ecx, dword ptr [rip - 0x3a668f] ; jb 0x200006f76a2 ; ret
0x00000200000fcc25 : cmp ecx, eax ; cmova rcx, rax ; mov eax, ecx ; ret
0x000002000018e943 : cmp ecx, eax ; cmovbe r8d, edx ; mov eax, r8d ; ret
0x00000200004bc274 : cmp ecx, eax ; cmovne eax, edx ; ret
0x00000200000267bf : cmp ecx, eax ; ja 0x200000267ce ; sub rax, rcx ; ret
0x0000020000054fa3 : cmp ecx, eax ; ja 0x20000054fb2 ; sub rax, rcx ; ret
0x00000200000b424b : cmp ecx, eax ; ja 0x200000b425e ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000209082 : cmp ecx, eax ; ja 0x20000209095 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200004ba78f : cmp ecx, eax ; ja 0x200004ba7a2 ; sbb eax, eax ; add eax, 2 ; ret
0x00000200001e5f49 : cmp ecx, eax ; jae 0x200001e5f58 ; or eax, 0xffffffff ; ret
0x000002000020a067 : cmp ecx, eax ; jae 0x2000020a074 ; xor al, al ; ret
0x000002000037ebd0 : cmp ecx, eax ; jae 0x2000037ebe3 ; mov eax, 0xc0000095 ; ret
0x000002000037ee74 : cmp ecx, eax ; jae 0x2000037ee87 ; mov eax, 0xc0000095 ; ret
0x00000200006f9ac4 : cmp ecx, eax ; jae 0x200006f9ad7 ; mov eax, 1 ; ret
0x0000020000103763 : cmp ecx, eax ; jb 0x20000103770 ; xor eax, eax ; ret
0x000002000010b8d7 : cmp ecx, eax ; jb 0x2000010b8e8 ; add rsp, 0x48 ; ret
0x00000200001406c7 : cmp ecx, eax ; jb 0x200001406bb ; mov rax, r10 ; ret
0x0000020000140c80 : cmp ecx, eax ; jb 0x20000140c6d ; mov rax, r10 ; ret
0x0000020000140c80 : cmp ecx, eax ; jb 0x20000140c6e ; mov rax, r10 ; ret
0x000002000022abe1 : cmp ecx, eax ; jb 0x2000022abd4 ; ret
0x00000200004b192a : cmp ecx, eax ; jb 0x200004b1925 ; and eax, 0x1f ; ret
0x0000020000590333 : cmp ecx, eax ; jb 0x200005902fb ; jmp 0x200004ac56e
0x0000020000718486 : cmp ecx, eax ; jb 0x200007184c1 ; add rsp, 0x28 ; ret
0x00000200001ec3a3 : cmp ecx, eax ; jbe 0x200001ec3b6 ; mov eax, 1 ; ret
0x00000200005d36a3 : cmp ecx, eax ; jbe 0x200005d36b0 ; xor eax, eax ; ret
0x0000020000600485 : cmp ecx, eax ; jbe 0x20000600498 ; mov eax, 1 ; ret
0x00000200003d795d : cmp ecx, eax ; je 0x200003d7970 ; mov eax, 1 ; ret
0x00000200000c446b : cmp ecx, eax ; jne 0x200000c447e ; mov eax, 1 ; ret
0x00000200001ed6a0 : cmp ecx, eax ; jne 0x200001ed6af ; mov eax, r10d ; jmp 0x200001ed6b1
0x000002000020a1b9 : cmp ecx, eax ; jne 0x2000020a1cc ; mov eax, 1 ; ret
0x0000020000383471 : cmp ecx, eax ; jne 0x2000038347e ; mov eax, edx ; jmp 0x20000383433
0x000002000057ad58 : cmp ecx, eax ; jne 0x2000057ad40 ; jmp 0x2000046703b
0x00000200005f52f8 : cmp ecx, eax ; jne 0x200005f52ed ; xor eax, eax ; ret
0x00000200004e64f3 : cmp ecx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x00000200000727a6 : cmp ecx, eax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200001e5f54 : cmp ecx, eax ; seta al ; ret
0x000002000051ad58 : cmp ecx, ebx ; dec dword ptr [rax + 3] ; enter -0x1a18, 0x2c ; ret 0x48ff
0x0000020000422161 : cmp ecx, ebx ; jne 0x20000422174 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fe151 : cmp ecx, ecx ; cmova r9, rcx ; mov rax, r9 ; ret
0x00000200003ac3d7 : cmp ecx, ecx ; ja 0x200003ac3e7 ; mov qword ptr [rdx], r9 ; mov al, 1 ; ret
0x00000200000ea2fb : cmp ecx, ecx ; jb 0x200000ea2e1 ; ret
0x00000200006236e3 : cmp ecx, ecx ; jb 0x200006236d1 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000006ce56 : cmp ecx, ecx ; sbb eax, eax ; ret
0x00000200000d267f : cmp ecx, ecx ; setbe dl ; mov eax, edx ; ret
0x00000200000722ed : cmp ecx, edx ; jae 0x20000072317 ; ret
0x0000020000211fc9 : cmp ecx, edx ; jae 0x20000211f91 ; xor eax, eax ; ret
0x0000020000159e67 : cmp ecx, edx ; jb 0x20000159e24 ; ret
0x00000200001ea0bf : cmp ecx, edx ; jb 0x200001ea096 ; ret
0x00000200001f0599 : cmp ecx, edx ; jb 0x200001f0597 ; add rsp, 0x38 ; ret
0x000002000020bb21 : cmp ecx, edx ; jb 0x2000020bb09 ; ret
0x000002000050f8e4 : cmp ecx, edx ; jb 0x2000050f8bd ; mov al, cl ; ret
0x00000200005b5c9e : cmp ecx, edx ; jb 0x200005b5c95 ; ret
0x000002000066e405 : cmp ecx, edx ; jb 0x2000066e3fe ; xor eax, eax ; ret
0x000002000072f4c5 : cmp ecx, edx ; jb 0x2000072f4aa ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036c9ed : cmp ecx, edx ; jbe 0x2000036c9e0 ; ret
0x00000200004b1db1 : cmp ecx, edx ; jl 0x200004b1dc3 ; setle al ; inc eax ; ret
0x00000200001e428e : cmp ecx, edx ; jne 0x200001e428b ; mov qword ptr [r8], rax ; ret
0x00000200003b2ea7 : cmp ecx, edx ; jne 0x200003b2e9b ; add rsp, 0x28 ; ret
0x000002000042f55c : cmp ecx, edx ; jne 0x2000042f569 ; mov al, 1 ; ret
0x00000200007145cc : cmp ecx, edx ; ret
0x000002000043c591 : cmp ecx, edx ; ret 0x48ff
0x0000020000517f49 : cmp ecx, edx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000054c1a : cmp ecx, edx ; seta al ; ret
0x0000020000238aa0 : cmp ecx, edx ; setb r8b ; mov eax, r8d ; ret
0x0000020000616344 : cmp ecx, edx ; sete al ; ret
0x0000020000590332 : cmp ecx, r8d ; jb 0x200005902fc ; jmp 0x200004ac56f
0x00000200001449a1 : cmp edi, 0xff ; jne 0x2000014496c ; jmp 0x20000144989
0x000002000020f17e : cmp edi, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000018a0d4 : cmp edi, dword ptr [rdx - 0x74b6000f] ; ret 0xf748
0x00000200003b1988 : cmp edi, ecx ; inc dword ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x00000200004f58d7 : cmp edi, ecx ; ret 0x48ff
0x000002000014977b : cmp edi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000371928 : cmp edi, edi ; push rsi ; ret
0x00000200001dbb09 : cmp edi, edi ; ret
0x000002000013b9e3 : cmp edi, edx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000725d38 : cmp edi, esi ; push rsi ; ret
0x00000200004ddf6b : cmp edi, esp ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000602f06 : cmp edx, 0x10 ; jb 0x20000602f03 ; xor al, al ; ret
0x000002000011ee57 : cmp edx, 1 ; je 0x2000011ee6a ; add rsp, 0x28 ; ret
0x00000200004cbd54 : cmp edx, 2 ; je 0x200004cbd67 ; add rsp, 0x28 ; ret
0x00000200004ddbd8 : cmp edx, 2 ; je 0x200004ddbe3 ; ret
0x000002000052013c : cmp edx, 2 ; je 0x200005b56b5 ; ret
0x000002000044ce3b : cmp edx, 3 ; jb 0x2000044ce37 ; xor eax, eax ; ret
0x00000200004dd38c : cmp edx, 3 ; je 0x200004dd39f ; add rsp, 0x28 ; ret
0x00000200004dda5c : cmp edx, 3 ; je 0x200004dda67 ; ret
0x000002000011ae9a : cmp edx, 5 ; cmovne eax, ecx ; ret
0x0000020000088ef4 : cmp edx, 7 ; je 0x20000088eff ; ret
0x000002000013b730 : cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000013b717 ; ret
0x000002000013b72f : cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000013b718 ; ret
0x00000200005efbaa : cmp edx, dword ptr [r8] ; jb 0x200005efb8f ; xor eax, eax ; ret
0x000002000013b731 : cmp edx, dword ptr [rax + 0x40] ; jb 0x2000013b716 ; ret
0x00000200000ced07 : cmp edx, dword ptr [rax] ; jae 0x200000ced14 ; mov al, 1 ; ret
0x00000200005efbab : cmp edx, dword ptr [rax] ; jb 0x200005efb8e ; xor eax, eax ; ret
0x0000020000132bde : cmp edx, dword ptr [rbp + 0x58] ; jmp 0x20000132baa
0x00000200001ff975 : cmp edx, dword ptr [rcx + 0x10] ; jbe 0x200001ff987 ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200003e6b06 : cmp edx, dword ptr [rcx + 0x14] ; jb 0x200003e6aec ; ret
0x00000200000eb86c : cmp edx, eax ; ja 0x200000eb8bb ; ret
0x0000020000572f6b : cmp edx, eax ; ja 0x20000572f59 ; ret
0x0000020000054f89 : cmp edx, eax ; jb 0x20000054f88 ; mov rax, r8 ; ret
0x000002000009722a : cmp edx, eax ; jb 0x20000097239 ; mov al, r8b ; ret
0x000002000009c0d4 : cmp edx, eax ; jb 0x2000009c0cc ; ret
0x000002000020c442 : cmp edx, eax ; jb 0x2000020c43f ; mov al, 1 ; ret
0x00000200004b4c10 : cmp edx, eax ; jb 0x200004b4bff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010b6ba : cmp edx, eax ; jbe 0x2000010b6cb ; add rsp, 0x28 ; ret
0x00000200001f327d : cmp edx, eax ; je 0x200001f3290 ; mov eax, 1 ; ret
0x0000020000404046 : cmp edx, eax ; je 0x20000404037 ; sub edx, r8d ; mov eax, edx ; jmp 0x2000040400f
0x000002000061ec49 : cmp edx, eax ; je 0x2000061ec5c ; mov eax, 0xc0000034 ; ret
0x000002000002a933 : cmp edx, eax ; jne 0x2000002a940 ; mov al, 1 ; ret
0x0000020000465356 : cmp edx, eax ; jne 0x20000465350 ; ret
0x00000200005b6696 : cmp edx, eax ; jne 0x200005b66a8 ; xor eax, eax ; ret
0x00000200006f9aed : cmp edx, eax ; jne 0x200006f9add ; xor eax, eax ; ret
0x00000200004e7b50 : cmp edx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x00000200006142ce : cmp edx, eax ; setae al ; ret
0x00000200004ee1d1 : cmp edx, eax ; sete al ; ret
0x000002000008df6c : cmp edx, ecx ; ja 0x2000008df75 ; ret
0x000002000037ec05 : cmp edx, ecx ; jae 0x2000037ec12 ; mov eax, ecx ; ret
0x000002000037eea9 : cmp edx, ecx ; jae 0x2000037eeb6 ; mov eax, ecx ; ret
0x00000200005bca4f : cmp edx, ecx ; jae 0x200005bca5c ; mov al, 1 ; ret
0x00000200000fa9b8 : cmp edx, ecx ; jb 0x200000fa9ae ; mov eax, 0x10 ; ret
0x000002000010ba21 : cmp edx, ecx ; jb 0x2000010ba15 ; xor eax, eax ; ret
0x000002000036dafa : cmp edx, ecx ; jb 0x2000036da92 ; xor al, al ; ret
0x000002000065d0e9 : cmp edx, ecx ; jb 0x2000065d0db ; xor eax, eax ; ret
0x00000200006800cb : cmp edx, ecx ; je 0x200006800d7 ; xor eax, eax ; ret
0x00000200001f34f5 : cmp edx, ecx ; jg 0x200001f3502 ; xor eax, eax ; ret
0x00000200001182da : cmp edx, ecx ; jne 0x200001182d7 ; sub rax, rdx ; ret
0x0000020000482c83 : cmp edx, ecx ; jne 0x20000482c7b ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000126efd : cmp edx, ecx ; seta al ; ret
0x000002000004e1ba : cmp edx, ecx ; setbe al ; ret
0x0000020000024c82 : cmp edx, edx ; jb 0x20000024c6f ; xor eax, eax ; ret
0x0000020000079a4c : cmp edx, edx ; jb 0x20000079a12 ; ret
0x000002000020c485 : cmp edx, edx ; jb 0x2000020c461 ; mov al, 1 ; ret
0x0000020000132bda : cmp edx, edx ; jl 0x20000132bb0 ; cmp edx, dword ptr [rbp + 0x58] ; jmp 0x20000132bae
0x0000020000101834 : cmp edx, edx ; jne 0x20000101847 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065a7dd : cmp edx, edx ; ret
0x0000020000593002 : cmp edx, esi ; dec dword ptr [rcx - 0x75] ; ret
0x00000200005a7cc8 : cmp edx, esp ; hlt ; dec dword ptr [rax - 0x7d] ; ret 0x4138
0x0000020000024c81 : cmp edx, r10d ; jb 0x20000024c70 ; xor eax, eax ; ret
0x0000020000132bd9 : cmp edx, r10d ; jl 0x20000132bb1 ; cmp edx, dword ptr [rbp + 0x58] ; jmp 0x20000132baf
0x000002000009c0d3 : cmp edx, r8d ; jb 0x2000009c0cd ; ret
0x0000020000404045 : cmp edx, r8d ; je 0x20000404038 ; sub edx, r8d ; mov eax, edx ; jmp 0x20000404010
0x000002000010ba20 : cmp edx, r9d ; jb 0x2000010ba16 ; xor eax, eax ; ret
0x000002000010ba1f : cmp edx, r9d ; jb 0x2000010ba17 ; xor eax, eax ; ret
0x000002000065d0e8 : cmp edx, r9d ; jb 0x2000065d0dc ; xor eax, eax ; ret
0x00000200003ba5d6 : cmp esi, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003c7259 : cmp esi, 4 ; je 0x200003c7269 ; call r10
0x000002000017ddaf : cmp esi, dword ptr [rax - 0x74b30011] ; ret
0x0000020000505369 : cmp esi, dword ptr [rbp + rax - 0x7c] ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348
0x00000200006cd684 : cmp esi, dword ptr [rbx] ; leave ; call r9
0x000002000050903f : cmp esi, dword ptr [rdx + rdx - 1] ; ret 0x8966
0x00000200000ac017 : cmp esi, dword ptr [rdx - 0x17] ; ret 0xfffa
0x00000200005903b3 : cmp esi, eax ; jb 0x20000590395 ; jmp 0x200004ac60e
0x000002000065b3e3 : cmp esi, eax ; ret
0x0000020000120c37 : cmp esi, ecx ; jb 0x20000120c85 ; inc edx ; jmp 0x20000120c1f
0x00000200004d5e4b : cmp esi, esi ; ja 0x200004d5db9 ; jmp 0x200004d5e21
0x00000200001471f4 : cmp esi, esi ; ret
0x00000200005a2c23 : cmp esi, esp ; push rsi ; ret
0x000002000013c804 : cmp esp, 0x85000002 ; ret 0x1875
0x00000200005f6dd1 : cmp esp, dword ptr [rax] ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200007258b7 : cmp esp, dword ptr [rcx] ; add byte ptr [rax], al ; call 0x20000631b66
0x0000020000723371 : cmp esp, edx ; ret 0x48ff
0x000002000072204f : cmp esp, esi ; ret 0x75ff
0x00000200000f2257 : cmp qword ptr [r10], r8 ; jne 0x200000f226e ; add rsp, 0x28 ; ret
0x000002000009fab8 : cmp qword ptr [r8 + 0x50], rcx ; je 0x2000009fac5 ; ret
0x0000020000073e80 : cmp qword ptr [r9], rcx ; seta al ; ret
0x0000020000441acc : cmp qword ptr [rax + 8], 0 ; je 0x20000441adf ; xor eax, eax ; ret
0x00000200006688f3 : cmp qword ptr [rax], 0 ; jne 0x200006688eb ; xor al, al ; ret
0x00000200000bd0d4 : cmp qword ptr [rax], rax ; jne 0x200000bd0df ; ret
0x00000200001092c7 : cmp qword ptr [rax], rax ; jne 0x200001092d5 ; xor eax, eax ; ret
0x000002000014bf57 : cmp qword ptr [rax], rdx ; cmovne edx, r8d ; mov eax, edx ; ret
0x0000020000095e3a : cmp qword ptr [rax], rdx ; jne 0x20000095e69 ; mov qword ptr [rax], r8 ; ret
0x000002000009db45 : cmp qword ptr [rcx + 0x10], 0 ; jne 0x2000009db7a ; xor al, al ; ret
0x00000200004d25a8 : cmp qword ptr [rcx + 0x18], 0 ; jne 0x200004d25b7 ; ret
0x00000200004d25bc : cmp qword ptr [rcx + 0x18], 0 ; jne 0x200004d25cb ; ret
0x000002000065a019 : cmp qword ptr [rcx + 0x20], 0 ; je 0x2000065a019 ; mov al, 1 ; ret
0x000002000045c70a : cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; add eax, 2 ; ret
0x00000200001f8720 : cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; ret
0x000002000010d6e0 : cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x00000200000ecb0c : cmp qword ptr [rcx + 0x30], rdx ; cmove eax, r8d ; ret
0x0000020000088e2a : cmp qword ptr [rcx + 8], r9 ; je 0x20000088e02 ; xor eax, eax ; ret
0x00000200006688a7 : cmp qword ptr [rcx], 0 ; jne 0x2000066889e ; xor al, al ; ret
0x00000200001c2bb6 : cmp qword ptr [rcx], r8 ; jne 0x200001c2bc5 ; xor eax, eax ; ret
0x00000200000de642 : cmp qword ptr [rcx], rax ; sete al ; ret
0x000002000004d968 : cmp qword ptr [rcx], rax ; setne al ; ret
0x000002000006ad85 : cmp qword ptr [rcx], rcx ; jne 0x2000006ad90 ; ret
0x00000200000de25a : cmp qword ptr [rcx], rcx ; jne 0x200000de26b ; mov rax, rcx ; ret
0x00000200004315bc : cmp qword ptr [rcx], rcx ; jne 0x200004315c7 ; ret
0x0000020000432920 : cmp qword ptr [rcx], rcx ; jne 0x2000043292b ; ret
0x0000020000482c60 : cmp qword ptr [rcx], rcx ; jne 0x20000482c6f ; xor eax, eax ; ret
0x0000020000674004 : cmp qword ptr [rdx], rax ; jne 0x20000673fff ; ret
0x0000020000672c07 : cmp r10b, 0x1b ; ja 0x20000672c1c ; movzx eax, r10b ; jmp 0x20000672c28
0x0000020000672cd4 : cmp r10b, 0x1b ; ja 0x20000672ce9 ; movzx eax, r10b ; jmp 0x20000672cf5
0x0000020000672d88 : cmp r10b, 0x1b ; ja 0x20000672d9d ; movzx eax, r10b ; jmp 0x20000672da9
0x0000020000672e2b : cmp r10b, 0x1b ; ja 0x20000672e40 ; movzx eax, r10b ; jmp 0x20000672e4c
0x00000200005bca4e : cmp r10d, ecx ; jae 0x200005bca5d ; mov al, 1 ; ret
0x000002000036daf9 : cmp r10d, r9d ; jb 0x2000036da93 ; xor al, al ; ret
0x00000200001c62be : cmp r11d, r9d ; seta al ; ret
0x000002000009ac28 : cmp r13b, byte ptr [rax - 1] ; ret 0x5489
0x000002000020a1d4 : cmp r8, qword ptr [rcx + 0x20] ; jb 0x2000020a1e5 ; xor al, al ; ret
0x000002000014034c : cmp r8, r10 ; jb 0x2000014033f ; ret
0x00000200000a64e7 : cmp r8, r10 ; sbb eax, eax ; ret
0x000002000060acf4 : cmp r8, r11 ; jne 0x2000060acd6 ; mov rax, rdx ; ret
0x000002000020c425 : cmp r8, rax ; jb 0x2000020c420 ; mov al, 1 ; ret
0x00000200000facfc : cmp r8, rax ; jne 0x200000face1 ; mov eax, r9d ; ret
0x00000200007195c8 : cmp r8, rcx ; jae 0x200007195d9 ; or eax, 0xffffffff ; ret
0x000002000022b970 : cmp r8, rcx ; jne 0x2000022b961 ; ret
0x00000200000c5dc3 : cmp r8, rcx ; seta al ; ret
0x000002000003998d : cmp r8, rcx ; setae al ; ret
0x0000020000237167 : cmp r8, rdx ; jl 0x20000237151 ; ret
0x00000200004d4fa1 : cmp r8, rdx ; setbe al ; ret
0x00000200004f992f : cmp r8b, 0xf ; ja 0x200004f98fd ; xor al, al ; ret
0x000002000002a7ac : cmp r8b, cl ; jne 0x2000002a7ec ; ret
0x00000200001cd779 : cmp r8b, dl ; jne 0x200001cd7db ; mov r8b, dl ; jmp 0x200001cd7d1
0x000002000071189a : cmp r8b, r13b ; pop rdi ; ret
0x000002000041ca37 : cmp r8b, r13b ; ret 0xd311
0x00000200001e923d : cmp r8d, 0x32 ; jb 0x200001e921a ; xor eax, eax ; ret
0x00000200000a347b : cmp r8d, 8 ; je 0x200000a34b4 ; mov eax, r8d ; ret
0x0000020000138185 : cmp r8d, dword ptr [rdx] ; jb 0x20000138177 ; ret
0x0000020000112a98 : cmp r8d, eax ; ja 0x20000112a96 ; sbb eax, eax ; ret
0x00000200000f92ed : cmp r8d, eax ; je 0x200000f92e9 ; jmp 0x200000f92bd
0x0000020000225171 : cmp r8d, ecx ; jae 0x20000225182 ; or eax, 0xffffffff ; ret
0x000002000023332d : cmp r8d, ecx ; jb 0x20000233312 ; ret
0x000002000022517c : cmp r8d, ecx ; setne al ; ret
0x00000200004a8e0b : cmp r8d, edx ; jb 0x200004a8dfa ; mov dword ptr [rcx + 0x7c], edx ; ret
0x00000200006f45c9 : cmp r8d, edx ; jb 0x200006f45c3 ; ret
0x00000200005b6660 : cmp r8d, edx ; jmp 0x200005b669a
0x000002000050a183 : cmp r8d, r10d ; jb 0x2000050a164 ; mov rax, rdx ; ret
0x000002000050a183 : cmp r8d, r10d ; jb 0x2000050a165 ; mov rax, rdx ; ret
0x00000200005bfdce : cmp r8d, r10d ; jb 0x200005bfda6 ; movzx eax, r8w ; ret
0x00000200001d174c : cmp r8d, r9d ; jae 0x200001d175b ; mov al, 1 ; ret
0x00000200004a8db9 : cmp r8d, r9d ; jb 0x200004a8da4 ; mov eax, edx ; ret
0x00000200004a8db9 : cmp r8d, r9d ; jb 0x200004a8da5 ; mov eax, edx ; ret
0x0000020000635b59 : cmp r8d, r9d ; jb 0x20000635b24 ; jmp 0x20000635b67
0x00000200001bc8b9 : cmp r8d, r9d ; jl 0x200001bc8af ; xor eax, eax ; ret
0x0000020000138184 : cmp r8w, word ptr [rdx] ; jb 0x20000138178 ; ret
0x0000020000475734 : cmp r9, 1 ; je 0x20000475741 ; ret
0x0000020000211fc8 : cmp r9, r10 ; jae 0x20000211f92 ; xor eax, eax ; ret
0x00000200001ea0be : cmp r9, r10 ; jb 0x200001ea097 ; ret
0x00000200001406c6 : cmp r9, r8 ; jb 0x200001406bc ; mov rax, r10 ; ret
0x0000020000140c7f : cmp r9, r8 ; jb 0x20000140c6e ; mov rax, r10 ; ret
0x0000020000140c7f : cmp r9, r8 ; jb 0x20000140c6f ; mov rax, r10 ; ret
0x00000200000727a5 : cmp r9, rax ; sbb rax, rax ; and rax, rcx ; ret
0x000002000006ce55 : cmp r9, rcx ; sbb eax, eax ; ret
0x000002000058821b : cmp r9d, 2 ; jae 0x20000588219 ; jmp 0x2000049447d
0x0000020000472b8b : cmp r9d, 2 ; jb 0x20000472b73 ; mov al, dl ; ret
0x0000020000472b8b : cmp r9d, 2 ; jb 0x20000472b74 ; mov al, dl ; ret
0x00000200003ef460 : cmp r9d, 6 ; jne 0x200003ef4c6 ; ret
0x000002000022fd22 : cmp r9d, dword ptr [rdx + rax*4 + 8] ; jne 0x2000022fd17 ; mov al, 1 ; ret
0x000002000010a19e : cmp r9d, dword ptr [rip + 0x1cd9d7] ; jae 0x2000010a1b1 ; ret
0x00000200006f76d8 : cmp r9d, dword ptr [rip - 0x3a668f] ; jb 0x200006f76a3 ; ret
0x00000200000ea2fa : cmp r9d, ecx ; jb 0x200000ea2e2 ; ret
0x000002000050f8e3 : cmp r9d, edx ; jb 0x2000050f8be ; mov al, cl ; ret
0x00000200005b5c9d : cmp r9d, edx ; jb 0x200005b5c96 ; ret
0x000002000042f55b : cmp r9d, edx ; jne 0x2000042f56a ; mov al, 1 ; ret
0x000002000066e404 : cmp r9d, r10d ; jb 0x2000066e3ff ; xor eax, eax ; ret
0x000002000050f8e2 : cmp r9w, dx ; jb 0x2000050f8bf ; mov al, cl ; ret
0x0000020000643d5c : cmp rax, 0x29 ; jb 0x20000643d56 ; or eax, 0xffffffff ; ret
0x000002000071462e : cmp rax, 0x40 ; jb 0x2000071460e ; ret
0x0000020000712350 : cmp rax, 0x80 ; jb 0x20000712314 ; ret
0x00000200004e014c : cmp rax, 1 ; jbe 0x200004e015e ; xor ecx, ecx ; call rax
0x00000200000f4540 : cmp rax, 2 ; jae 0x200000f454d ; ret
0x000002000002a96a : cmp rax, r8 ; je 0x2000002a979 ; xor al, al ; ret
0x00000200004d2a65 : cmp rax, r8 ; je 0x200004d2a38 ; ret
0x0000020000624bef : cmp rax, r8 ; jne 0x20000624bcf ; xor eax, eax ; ret
0x000002000067d094 : cmp rax, r8 ; jne 0x2000067d092 ; xor eax, eax ; ret
0x0000020000388661 : cmp rax, rcx ; cmovae rax, rdx ; ret
0x0000020000209fd5 : cmp rax, rcx ; jae 0x20000209fd2 ; mov rax, rdx ; ret
0x0000020000209fd5 : cmp rax, rcx ; jae 0x20000209fd3 ; mov rax, rdx ; ret
0x00000200003694e9 : cmp rax, rcx ; jae 0x20000369509 ; mov al, 1 ; ret
0x00000200003694e8 : cmp rax, rcx ; jae 0x2000036950a ; mov al, 1 ; ret
0x0000020000224148 : cmp rax, rcx ; jb 0x20000224147 ; xor eax, eax ; ret
0x000002000049f265 : cmp rax, rcx ; jb 0x2000049f27e ; add rsp, 0x28 ; ret
0x0000020000518d45 : cmp rax, rcx ; jl 0x20000518d38 ; ret
0x00000200000966f9 : cmp rax, rcx ; mov rcx, rbx ; je 0x20000096783 ; call rax
0x000002000014122e : cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000020000141cf6 : cmp rax, rdx ; jb 0x20000141cf0 ; ret
0x00000200001420f8 : cmp rax, rdx ; jb 0x200001420f0 ; ret
0x00000200000d0bbb : cmp rax, rdx ; je 0x200000d0bd2 ; ret
0x00000200004bd270 : cmp rax, rdx ; setae al ; ret
0x0000020000217f8c : cmp rbx, qword ptr [rbx + 8] ; jne 0x20000217f9f ; mov eax, r10d ; jmp 0x20000217fa6
0x000002000062f8af : cmp rbx, rdx ; jne 0x2000062f8ae ; jmp 0x2000062f8c3
0x00000200000f3b26 : cmp rcx, 0x1f ; jne 0x200000f3b0b ; xor eax, eax ; ret
0x00000200000b4f52 : cmp rcx, 0x7ffffffe ; cmova eax, edx ; ret
0x000002000009c4d6 : cmp rcx, 0xfd ; ja 0x2000009c4e7 ; mov al, 1 ; ret
0x00000200005ef071 : cmp rcx, qword ptr [rcx] ; sete al ; ret
0x00000200004add20 : cmp rcx, qword ptr [rdx + rax*8 + 0x70] ; jne 0x200004add2f ; ret
0x000002000020bb20 : cmp rcx, r10 ; jb 0x2000020bb0a ; ret
0x00000200004bc273 : cmp rcx, r8 ; cmovne eax, edx ; ret
0x00000200001e5f48 : cmp rcx, r8 ; jae 0x200001e5f59 ; or eax, 0xffffffff ; ret
0x000002000022abe0 : cmp rcx, r8 ; jb 0x2000022abd5 ; ret
0x00000200004b1929 : cmp rcx, r8 ; jb 0x200004b1926 ; and eax, 0x1f ; ret
0x00000200001ed69f : cmp rcx, r8 ; jne 0x200001ed6b0 ; mov eax, r10d ; jmp 0x200001ed6b2
0x00000200001e5f53 : cmp rcx, r8 ; seta al ; ret
0x00000200000d267e : cmp rcx, r9 ; setbe dl ; mov eax, edx ; ret
0x00000200000fcc24 : cmp rcx, rax ; cmova rcx, rax ; mov eax, ecx ; ret
0x00000200000267be : cmp rcx, rax ; ja 0x200000267cf ; sub rax, rcx ; ret
0x0000020000054fa2 : cmp rcx, rax ; ja 0x20000054fb3 ; sub rax, rcx ; ret
0x0000020000103762 : cmp rcx, rax ; jb 0x20000103771 ; xor eax, eax ; ret
0x000002000010b8d6 : cmp rcx, rax ; jb 0x2000010b8e9 ; add rsp, 0x48 ; ret
0x0000020000718485 : cmp rcx, rax ; jb 0x200007184c2 ; add rsp, 0x28 ; ret
0x00000200005d36a2 : cmp rcx, rax ; jbe 0x200005d36b1 ; xor eax, eax ; ret
0x0000020000383470 : cmp rcx, rax ; jne 0x2000038347f ; mov eax, edx ; jmp 0x20000383434
0x00000200005f52f7 : cmp rcx, rax ; jne 0x200005f52ee ; xor eax, eax ; ret
0x00000200000722ec : cmp rcx, rdx ; jae 0x20000072318 ; ret
0x0000020000159e66 : cmp rcx, rdx ; jb 0x20000159e25 ; ret
0x00000200001f0598 : cmp rcx, rdx ; jb 0x200001f0598 ; add rsp, 0x38 ; ret
0x000002000036c9ec : cmp rcx, rdx ; jbe 0x2000036c9e1 ; ret
0x00000200001e428d : cmp rcx, rdx ; jne 0x200001e428c ; mov qword ptr [r8], rax ; ret
0x00000200003b2ea6 : cmp rcx, rdx ; jne 0x200003b2e9c ; add rsp, 0x28 ; ret
0x0000020000054c19 : cmp rcx, rdx ; seta al ; ret
0x00000200001449a0 : cmp rdi, 0xff ; jne 0x2000014496d ; jmp 0x2000014498a
0x00000200000ced06 : cmp rdx, qword ptr [r8] ; jae 0x200000ced15 ; mov al, 1 ; ret
0x0000020000079a4b : cmp rdx, r10 ; jb 0x20000079a13 ; ret
0x000002000020c484 : cmp rdx, r10 ; jb 0x2000020c462 ; mov al, 1 ; ret
0x0000020000465355 : cmp rdx, r8 ; jne 0x20000465351 ; ret
0x00000200006f9aec : cmp rdx, r8 ; jne 0x200006f9ade ; xor eax, eax ; ret
0x00000200004ee1d0 : cmp rdx, r8 ; sete al ; ret
0x000002000037ec04 : cmp rdx, r9 ; jae 0x2000037ec13 ; mov eax, ecx ; ret
0x000002000037eea8 : cmp rdx, r9 ; jae 0x2000037eeb7 ; mov eax, ecx ; ret
0x00000200000eb86b : cmp rdx, rax ; ja 0x200000eb8bc ; ret
0x0000020000572f6a : cmp rdx, rax ; ja 0x20000572f5a ; ret
0x0000020000054f88 : cmp rdx, rax ; jb 0x20000054f89 ; mov rax, r8 ; ret
0x0000020000097229 : cmp rdx, rax ; jb 0x2000009723a ; mov al, r8b ; ret
0x000002000020c441 : cmp rdx, rax ; jb 0x2000020c440 ; mov al, 1 ; ret
0x000002000010b6b9 : cmp rdx, rax ; jbe 0x2000010b6cc ; add rsp, 0x28 ; ret
0x000002000002a932 : cmp rdx, rax ; jne 0x2000002a941 ; mov al, 1 ; ret
0x00000200006142cd : cmp rdx, rax ; setae al ; ret
0x00000200001f34f4 : cmp rdx, rcx ; jg 0x200001f3503 ; xor eax, eax ; ret
0x00000200001182d9 : cmp rdx, rcx ; jne 0x200001182d8 ; sub rax, rdx ; ret
0x0000020000482c82 : cmp rdx, rcx ; jne 0x20000482c7c ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000126efc : cmp rdx, rcx ; seta al ; ret
0x000002000004e1b9 : cmp rdx, rcx ; setbe al ; ret
0x00000200001d952e : cmp word ptr [r8], r10w ; je 0x200001d9541 ; mov eax, r9d ; ret
0x000002000014d804 : cmp word ptr [rcx + 2], ax ; jae 0x2000014d815 ; xor al, al ; ret
0x00000200005e14a7 : cmp word ptr [rcx], dx ; mov qword ptr [rbp - 0x48], rcx ; jne 0x200005e147a ; jmp 0x200005e14d0
0x0000020000140d04 : cmp word ptr [rdx], 0 ; jne 0x20000140cf2 ; mov rax, rcx ; ret
0x0000020000142181 : cmp word ptr [rdx], r11w ; jne 0x20000142194 ; mov rax, rcx ; ret
0x000002000003cc17 : cmp word ptr [rsi], 3 ; jne 0x2000003cc92 ; mov rcx, rsi ; call rdi
0x00000200000b8fe8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001fa0b4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006a6d8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000001f99b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x00000200000f73ea : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x00000200006dacf3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbe49
0x00000200006d6f0e : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbf48
0x0000020000028b5b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004f929f : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200005e2976 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and al, 0xcb ; inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200006f66fe : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000722916 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; ret 0x48ff
0x00000200001ead9b : cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, -1 ; add rsp, 0x28 ; ret
0x000002000062e769 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov cl, 0xff ; add rsp, 0x58 ; ret
0x00000200000879e5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, 0xf ; add dh, dh ; ret
0x00000200006f5b54 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ebp, 0x58d48ff ; ret 0xbda5
0x000002000043b42c : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rbx ; call 0x20000063ddb
0x0000020000499ca9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or cl, byte ptr [rdi] ; add dh, dh ; ret 0x7510
0x00000200006e2d50 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x0000020000678bb6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; ret
0x000002000001f7c0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000002000057c376 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffa8
0x00000200001321e2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000020000121ece : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 8
0x000002000038a7f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rax] ; mov al, 6 ; ret
0x000002000065512f : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200001a7418 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax - 0x75], r9b ; salc ; mov rcx, rdi ; call rbx
0x00000200004e3293 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000fe3db : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x3b41
0x000002000014ef35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000038202f : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200003ce243
0x000002000000d0e0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000023d27d : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp dword ptr [rax], eax ; ret 0x23
0x00000200005fcd8e : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rbp - 0x7b] ; div byte ptr [rsi + rdx - 0xa] ; ret
0x000002000049e3fe : cmpsd dword ptr [rsi], dword ptr [rdi] ; fisttp qword ptr [rsi] ; add byte ptr [rbx], dh ; shr al, cl ; movsxd rbx, esp ; ret
0x000002000043b165 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; ret 0x48ff
0x0000020000244e30 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, dx ; cmp al, 0 ; ret
0x00000200005d4ab5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; inc dword ptr [rbp - 0x74eb8b25] ; ret
0x00000200004c5f1d : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov al, 2 ; ret
0x000002000062e6ce : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov cl, 0xff ; add rsp, 0x68 ; ret
0x0000020000381f57 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov ebx, eax ; call 0x200003ce245
0x00000200004e7367 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edx, 0xb60f000b ; ret
0x000002000043b451 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, rbx ; call 0x20000063ddb
0x00000200006f59de : cmpsd dword ptr [rsi], dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc ebx ; xor eax, eax ; ret
0x000002000066acda : cmpsd dword ptr [rsi], dword ptr [rdi] ; movsxd rcx, esi ; jmp qword ptr [rcx]
0x00000200004becc7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0x4c ; mov eax, dword ptr [rbx + 0x28] ; call 0x200000e1ac9
0x00000200002167f8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or byte ptr [rip - 0x74bf0000], al ; ret
0x000002000003d3c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; adc al, byte ptr [rax] ; mov rcx, rsi ; call rbx
0x000002000000d5fa : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x00000200006e31df : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x0000020000487635 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdx ; ret
0x00000200005fcd51 : cmpsd dword ptr [rsi], dword ptr [rdi] ; push rsi ; ret
0x00000200003cc59c : cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000000fe89 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000002000043b365 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x000002000043fe77 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x65ff
0x000002000050efcc : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x89ff
0x0000020000007116 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x9ca6
0x00000200004395ae : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xf6ff
0x000002000017559e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffee
0x000002000059020b : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff1
0x0000020000010e74 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; and eax, edi ; ret 0xf958
0x00000200007139e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; ret
0x00000200005a289c : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor ah, dh ; push rsi ; ret
0x000002000046b1cb : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x000002000038202e : cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x200003ce244
0x0000020000381f56 : cmpsq qword ptr [rsi], qword ptr [rdi] ; mov ebx, eax ; call 0x200003ce246
0x00000200006f59dd : cmpsq qword ptr [rsi], qword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; inc ebx ; xor eax, eax ; ret
0x000002000000d5f9 : cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x000002000046b1ca : cmpsq qword ptr [rsi], qword ptr [rdi] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x00000200000824ad : cmpxchg dword ptr [rax], ecx ; jne 0x2000008249a ; ret
0x0000020000082fe1 : cmpxchg dword ptr [rax], ecx ; jne 0x20000082ff0 ; mov al, 1 ; ret
0x000002000008c743 : cmpxchg dword ptr [rax], ecx ; jne 0x2000008c755 ; mov al, 1 ; ret
0x00000200000bc0f8 : cmpxchg dword ptr [rax], ecx ; jne 0x200000bc0e0 ; mov dl, 1 ; mov al, dl ; ret
0x00000200000f7c14 : cmpxchg dword ptr [rax], ecx ; jne 0x200000f7c23 ; mov al, 1 ; ret
0x00000200000f7c8b : cmpxchg dword ptr [rax], ecx ; jne 0x200000f7c7f ; ret
0x00000200000d6f3f : cmpxchg dword ptr [rax], edx ; mov rcx, rax ; jne 0x200000d6f70 ; ret
0x00000200001a116c : cmpxchg dword ptr [rcx + 0x10], ecx ; jne 0x200001a114e ; ret
0x00000200004b3ff5 : cmpxchg dword ptr [rcx + 0x1c8], ecx ; ret
0x00000200000dbd48 : cmpxchg dword ptr [rcx + 0x20], ebx ; sub rax, r10 ; jmp 0x200000dbd39
0x00000200001c4ded : cmpxchg dword ptr [rcx + rax*8], ecx ; ret
0x000002000002b79b : cmpxchg dword ptr [rcx], eax ; jne 0x2000002b7c3 ; ret
0x0000020000068f23 : cmpxchg dword ptr [rcx], eax ; jne 0x20000068f36 ; ret
0x000002000008d943 : cmpxchg dword ptr [rcx], eax ; jne 0x2000008d920 ; ret
0x00000200000bcb0d : cmpxchg dword ptr [rcx], ecx ; jne 0x200000bcb20 ; add rsp, 0x28 ; ret
0x00000200000f453d : cmpxchg dword ptr [rcx], edx ; cmp rax, 2 ; jae 0x200000f4550 ; ret
0x00000200005cad0a : cmpxchg dword ptr [rcx], edx ; je 0x200005cad1b ; call 0x200000d6f2f
0x000002000062acd0 : cmpxchg dword ptr [rcx], edx ; je 0x2000062ace1 ; call 0x200000d6f2f
0x00000200000b8353 : cmpxchg dword ptr [rcx], edx ; jne 0x200000b8352 ; ret
0x00000200000b977b : cmpxchg dword ptr [rcx], edx ; jne 0x200000b9786 ; ret
0x00000200000d7dbc : cmpxchg dword ptr [rcx], edx ; jne 0x200000d7db9 ; mov al, 1 ; ret
0x00000200000e1890 : cmpxchg dword ptr [rcx], edx ; jne 0x200000e189b ; ret
0x00000200002332cc : cmpxchg dword ptr [rcx], edx ; jne 0x200002332db ; mov al, 1 ; ret
0x000002000049f1ab : cmpxchg dword ptr [rcx], edx ; jne 0x2000049f1b6 ; ret
0x000002000049f1ab : cmpxchg dword ptr [rcx], edx ; jne 0x2000049f1ba ; ret
0x0000020000063e00 : cmpxchg dword ptr [rcx], edx ; mov r8, rax ; jne 0x20000063e4b ; ret
0x00000200002270fe : cmpxchg dword ptr [rdi], ecx ; jne 0x2000022710d ; mov al, dl ; jmp 0x20000227115
0x000002000003647c : cmpxchg dword ptr [rdx + 0x40], edx ; jne 0x20000036496 ; ret
0x00000200000915a9 : cmpxchg dword ptr [rdx], ecx ; jne 0x200000915b7 ; ret
0x00000200000fb669 : cmpxchg dword ptr [rdx], ecx ; jne 0x200000fb674 ; ret
0x00000200000e184e : cmpxchg dword ptr [rdx], ecx ; mov r9, rax ; jne 0x200000e185f ; ret
0x0000020000192f7f : cmpxchg dword ptr [rip + 0x1236f2], ecx ; ret
0x000002000003647b : cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x20000036497 ; ret
0x00000200000e184d : cmpxchg qword ptr [r10], rcx ; mov r9, rax ; jne 0x200000e1860 ; ret
0x00000200000824ac : cmpxchg qword ptr [r8], rcx ; jne 0x2000008249b ; ret
0x0000020000082fe0 : cmpxchg qword ptr [r8], rcx ; jne 0x20000082ff1 ; mov al, 1 ; ret
0x000002000008c742 : cmpxchg qword ptr [r8], rcx ; jne 0x2000008c756 ; mov al, 1 ; ret
0x00000200000f7c13 : cmpxchg qword ptr [r8], rcx ; jne 0x200000f7c24 ; mov al, 1 ; ret
0x00000200000f7c8a : cmpxchg qword ptr [r8], rcx ; jne 0x200000f7c80 ; ret
0x00000200000d6f3e : cmpxchg qword ptr [r8], rdx ; mov rcx, rax ; jne 0x200000d6f71 ; ret
0x00000200001a116b : cmpxchg qword ptr [r9 + 0x10], rcx ; jne 0x200001a114f ; ret
0x00000200001c4dec : cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x000002000002b79a : cmpxchg qword ptr [r9], r8 ; jne 0x2000002b7c4 ; ret
0x0000020000068f22 : cmpxchg qword ptr [r9], r8 ; jne 0x20000068f37 ; ret
0x00000200004b3ff4 : cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x00000200000dbd47 : cmpxchg qword ptr [rcx + 0x20], rbx ; sub rax, r10 ; jmp 0x200000dbd3a
0x000002000008d942 : cmpxchg qword ptr [rcx], r8 ; jne 0x2000008d921 ; ret
0x00000200005cad09 : cmpxchg qword ptr [rcx], rdx ; je 0x200005cad1c ; call 0x200000d6f30
0x000002000062accf : cmpxchg qword ptr [rcx], rdx ; je 0x2000062ace2 ; call 0x200000d6f30
0x00000200000b8352 : cmpxchg qword ptr [rcx], rdx ; jne 0x200000b8353 ; ret
0x00000200000b977a : cmpxchg qword ptr [rcx], rdx ; jne 0x200000b9787 ; ret
0x00000200000d7dbb : cmpxchg qword ptr [rcx], rdx ; jne 0x200000d7dba ; mov al, 1 ; ret
0x00000200000e188f : cmpxchg qword ptr [rcx], rdx ; jne 0x200000e189c ; ret
0x00000200002332cb : cmpxchg qword ptr [rcx], rdx ; jne 0x200002332dc ; mov al, 1 ; ret
0x000002000049f1aa : cmpxchg qword ptr [rcx], rdx ; jne 0x2000049f1b7 ; ret
0x0000020000063dff : cmpxchg qword ptr [rcx], rdx ; mov r8, rax ; jne 0x20000063e4c ; ret
0x00000200002270fd : cmpxchg qword ptr [rdi], rcx ; jne 0x2000022710e ; mov al, dl ; jmp 0x20000227116
0x00000200000915a8 : cmpxchg qword ptr [rdx], rcx ; jne 0x200000915b8 ; ret
0x0000020000157de9 : cmpxchg16b xmmword ptr [r11] ; jne 0x20000157dda ; mov rax, r10 ; pop rbx ; ret
0x0000020000157dea : cmpxchg8b qword ptr [rbx] ; jne 0x20000157dd9 ; mov rax, r10 ; pop rbx ; ret
0x0000020000157dea : cmpxchg8b qword ptr [rbx] ; jne 0x20000157ddb ; mov rax, r10 ; pop rbx ; ret
0x0000020000157d34 : cmpxchg8b qword ptr [rdx] ; jne 0x20000157d22 ; mov rax, r8 ; pop rbx ; ret
0x0000020000157d78 : cmpxchg8b qword ptr [rdx] ; jne 0x20000157d6e ; mov rax, r8 ; pop rbx ; ret
0x00000200007155af : cwde ; adc byte ptr [rdi], dl ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006ce117 : cwde ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200005512d0 : cwde ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200006de9d0 : cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000047554d : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000008f0e2 : cwde ; add byte ptr [rax - 0x75], cl ; ret 0xf748
0x00000200000ce5ca : cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000606a77 : cwde ; add byte ptr [rax], al ; add bh, bh ; ret 0xc148
0x0000020000033a5a : cwde ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000020000086191 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb9
0x00000200000bd0d0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x000002000006ad81 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x0000020000213b32 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc169fdd0
0x0000020000427704 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x00000200001cbd4b : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbd5f ; call rcx
0x000002000020d08d : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003dbdce : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001d159c : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000039e783 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200001f558c : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001971a2 : cwde ; add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x2000019714f
0x00000200000c63fd : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200003ec5a5 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000002d9e2 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001e0eac : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000200006d05d3 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx - 0x74b6c01f], al ; ret 0x3b4d
0x00000200001e7c06 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; ret 0x11b0
0x00000200001287e8 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x0000020000033963 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8948
0x00000200001c68fd : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000515d87 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000002000007e37d : cwde ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5d], bl ; ret
0x000002000049546f : cwde ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000014ed55 : cwde ; add byte ptr [rax], al ; add cl, ch ; and bl, al ; add byte ptr [rax], al ; ret
0x0000020000483cc9 : cwde ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000038572c : cwde ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000002000011a4e6 : cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x00000200003df1e0 : cwde ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000039f7ea : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200000415fb : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; scasd eax, dword ptr [rdi] ; ret
0x0000020000448212 : cwde ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0x00000200003d0717 : cwde ; add eax, 0x89480000 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006d2242 : cwde ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014783c : cwde ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x90e9
0x000002000012d15a : cwde ; add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200002093fd : cwde ; add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x000002000015d72d : cwde ; add rsp, 0x68 ; ret
0x000002000026ddec : cwde ; call qword ptr [rax]
0x000002000072187d : cwde ; clc ; ret 0xe9ff
0x0000020000722e1d : cwde ; dec dword ptr [rax - 0x75] ; ret
0x00000200006fa236 : cwde ; dec dword ptr [rax - 0x7d] ; ret
0x000002000026d31c : cwde ; jb 0x2000026d374 ; add byte ptr [rdi + 0x73], dh ; add spl, r15b ; ret 0x26
0x000002000062f564 : cwde ; mov cl, 0xff ; add rsp, 0x68 ; ret
0x0000020000136ede : cwde ; mov rcx, qword ptr [rbx - 8] ; call 0x200000931a7
0x0000020000007588 : cwde ; movsxd rdi, esi ; ret
0x00000200000b565c : cwde ; or al, byte ptr [rax] ; ret
0x000002000010b315 : cwde ; or rax, r9 ; or rax, rcx ; ret
0x000002000017d288 : cwde ; out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000017d0a7 : cwde ; out dx, eax ; push rsi ; ret
0x00000200004bca6c : cwde ; push rcx ; ret 0x48ff
0x000002000019098d : cwde ; push rsi ; ret
0x000002000039efd8 : cwde ; ret
0x00000200000596c0 : cwde ; ret 0x24
0x0000020000446a56 : cwde ; ret 0x48ff
0x000002000026f298 : cwde ; ret 0x4c
0x0000020000473c20 : cwde ; ret 0x8bff
0x000002000043a56c : cwde ; ret 0xf6ff
0x0000020000501dc4 : cwde ; ret 0xffc4
0x00000200003ca05c : cwde ; ret 0xfff0
0x000002000001249a : cwde ; rol byte ptr [rcx], 1 ; ret 0x30c
0x000002000046d101 : dec byte ptr [r8 - 1] ; ret 0x8d48
0x00000200000a5816 : dec byte ptr [rax + 0x23] ; ret 0x8948
0x00000200001743f3 : dec byte ptr [rax + 0x23] ; ret 0xc148
0x000002000061ce66 : dec byte ptr [rax + 0x3b] ; ret
0x00000200001273aa : dec byte ptr [rax + 0x3b] ; ret 0x840f
0x0000020000127438 : dec byte ptr [rax + 0x3b] ; ror dword ptr [rbp + 0xf], 0x44 ; ret 0x345
0x00000200006d65cc : dec byte ptr [rax + 0xb] ; ret 0x8b48
0x000002000067361c : dec byte ptr [rax - 0x3f] ; loop 0x2000067362d ; call 0x20000294008
0x00000200003bb16b : dec byte ptr [rax - 0x74b71fb1] ; ret
0x0000020000547f34 : dec byte ptr [rax - 0x75] ; add al, 0xc8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000020a7bc : dec byte ptr [rax - 0x75] ; push rcx ; sub byte ptr [rcx - 0x48], al ; jmp qword ptr [rbx]
0x00000200000535b8 : dec byte ptr [rax - 0x75] ; ret
0x00000200000f7c85 : dec byte ptr [rax - 0x75] ; ret 0x49f0
0x00000200001a06b2 : dec byte ptr [rax - 0x77] ; jl 0x200001a06e4 ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000037f3b9 : dec byte ptr [rax - 0x7b] ; leave ; je 0x2000037f3cb ; add dword ptr [rcx], r11d ; ret
0x000002000053d563 : dec byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret
0x000002000002e6ee : dec byte ptr [rax - 0x7d] ; ret
0x000002000046d102 : dec byte ptr [rax - 1] ; ret 0x8d48
0x00000200003b5179 : dec byte ptr [rbp + 3] ; out 0xeb, al ; mov ah, 0x8b ; ret
0x00000200006d4f0f : dec byte ptr [rbp + 3] ; ret 0x894c
0x000002000066f6a0 : dec byte ptr [rbp + rcx*4 + 0x44] ; and al, 0x28 ; mov edx, r15d ; call rdi
0x00000200000bb9ab : dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x000002000017a242 : dec byte ptr [rcx + 0x3b] ; ret
0x0000020000029545 : dec byte ptr [rcx + 0xb] ; ret
0x000002000044c8ec : dec byte ptr [rcx - 0x75] ; iretd ; call 0x200000702b7
0x000002000066642a : dec byte ptr [rcx - 0x75] ; ret 0x894d
0x000002000026592d : dec byte ptr [rcx] ; insd dword ptr [rdi], dx ; add byte ptr [rdx], cl ; ret
0x00000200001b158e : dec byte ptr [rdi] ; mov dh, 0x55 ; fadd dword ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x00000200000b2878 : dec byte ptr [rdi] ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x00000200000fa739 : dec byte ptr [rdi] ; ret 0x4589
0x0000020000046724 : dec byte ptr [rdi] ; test ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000122145 : dec byte ptr [rdi] ; test ebp, eax ; ret 8
0x00000200001214d2 : dec cl ; or byte ptr [rax], al ; ret
0x0000020000091313 : dec dword ptr [r8 + 0x23] ; ret 0x34c
0x00000200000dd6ee : dec dword ptr [r8 + 3] ; ret 0x3b48
0x000002000048b752 : dec dword ptr [r8 - 0x73] ; add al, 0x48 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000048b6f5
0x000002000020e523 : dec dword ptr [r8 - 0x7d] ; ret
0x00000200000f5251 : dec dword ptr [r8] ; ret
0x00000200004a922b : dec dword ptr [r9 + 0x3b] ; ret 0x870f
0x00000200001a7c7e : dec dword ptr [r9 + 3] ; ret 0x2349
0x00000200000b1d1a : dec dword ptr [rax + 0x1e4] ; ret
0x00000200000eb73a : dec dword ptr [rax + 0x1e6] ; ret
0x00000200001f2c5a : dec dword ptr [rax + 0x1f28] ; ret
0x00000200001e9d4a : dec dword ptr [rax + 0x23] ; enter -0x74b8, 0x14 ; adc esi, esi ; ret 0x7401
0x000002000005824c : dec dword ptr [rax + 0x23] ; ret
0x00000200003adb96 : dec dword ptr [rax + 0x23] ; ret 0x348
0x000002000007d587 : dec dword ptr [rax + 0x23] ; ret 0x34c
0x00000200006f9760 : dec dword ptr [rax + 0x23] ; ret 0x8b48
0x000002000005c989 : dec dword ptr [rax + 0x23] ; ret 0xba48
0x00000200006f9be8 : dec dword ptr [rax + 0x23] ; ret 0xc148
0x00000200001f94d8 : dec dword ptr [rax + 0x23] ; ret 0xce8b
0x00000200006902f8 : dec dword ptr [rax + 0x2b] ; ret
0x00000200001894e2 : dec dword ptr [rax + 0x2b] ; ret 0x348
0x000002000007b22c : dec dword ptr [rax + 0x2b] ; ret 0x8b41
0x00000200002087fb : dec dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x4eb
0x00000200000ef096 : dec dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x7f], 1 ; ret 0
0x00000200006d5a7b : dec dword ptr [rax + 0x33] ; adc eax, dword ptr [rbp + 3] ; ret 0x8348
0x00000200001808a6 : dec dword ptr [rax + 0x33] ; ret 0xb70f
0x000002000066f27f : dec dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x000002000044ce2f : dec dword ptr [rax + 0x39] ; or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x000002000009d53c : dec dword ptr [rax + 0x3b] ; ret
0x000002000049f25f : dec dword ptr [rax + 0x3b] ; ret 0x1077
0x00000200000b0f99 : dec dword ptr [rax + 0x3b] ; ret 0x1575
0x000002000067a3e4 : dec dword ptr [rax + 0x3b] ; ret 0x1675
0x0000020000608b5b : dec dword ptr [rax + 0x3b] ; ret 0x1875
0x00000200005f4d11 : dec dword ptr [rax + 0x3b] ; ret 0x2274
0x00000200003c34f5 : dec dword ptr [rax + 0x3b] ; ret 0x5174
0x00000200003c2fec : dec dword ptr [rax + 0x3b] ; ret 0x5777
0x00000200004be65c : dec dword ptr [rax + 0x3b] ; ret 0x6777
0x000002000009b009 : dec dword ptr [rax + 0x3b] ; ret 0x7374
0x000002000038a6ab : dec dword ptr [rax + 0x3b] ; ret 0x8174
0x00000200000c55b0 : dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200001648cb : dec dword ptr [rax + 0x3b] ; ret 0x830f
0x000002000019e0a0 : dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000fa00b : dec dword ptr [rax + 0x3b] ; ret 0x850f
0x0000020000585601 : dec dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000067a3cf : dec dword ptr [rax + 0x3b] ; ret 0x975
0x000002000063450c : dec dword ptr [rax + 0x3b] ; ret 0x977
0x00000200004653b1 : dec dword ptr [rax + 0x3b] ; ret 0xa74
0x0000020000102feb : dec dword ptr [rax + 0x3b] ; ret 0xae76
0x000002000022d8a1 : dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200001a10df : dec dword ptr [rax + 0x3b] ; ret 0xc77
0x00000200000f8571 : dec dword ptr [rax + 0x3b] ; sal byte ptr [rbx + rdx*2 - 0xa], 1 ; ret
0x0000020000572f69 : dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x1a], 1 ; ret
0x0000020000517c86 : dec dword ptr [rax + 0x63] ; ret
0x0000020000717f91 : dec dword ptr [rax + 0x63] ; ret 0x8d49
0x00000200000f7d9b : dec dword ptr [rax + 0x63] ; ret 0xb60f
0x00000200003c9a26 : dec dword ptr [rax + 0x63] ; ret 0xf41
0x00000200000730f9 : dec dword ptr [rax + 0xb] ; ret
0x000002000017e022 : dec dword ptr [rax + 0xb] ; ret 0x22eb
0x000002000005e016 : dec dword ptr [rax + 0xb] ; ret 0x8348
0x0000020000194a2f : dec dword ptr [rax + 0xb] ; ret 0x8948
0x00000200002274d9 : dec dword ptr [rax + 0xb] ; ret 0x8949
0x00000200006d04d3 : dec dword ptr [rax + 0xb] ; ret 0x894c
0x000002000036a362 : dec dword ptr [rax + 0xb] ; ret 0x8b48
0x00000200000646f3 : dec dword ptr [rax + 0xb] ; ret 0x8b4c
0x00000200005b4eb4 : dec dword ptr [rax + 0xb] ; ret 0xc148
0x000002000022044d : dec dword ptr [rax + 0xb] ; ret 0xd233
0x0000020000079281 : dec dword ptr [rax + 0xb] ; shr ebx, 1 ; mov word ptr [rax + 0x23], cs ; ret
0x00000200001438d0 : dec dword ptr [rax + 0xf] ; fmul dword ptr [r8 - 0x75] ; ret
0x00000200001a5d55 : dec dword ptr [rax + 0xf] ; mov edx, 0x830f0be3 ; ret 0
0x00000200000b0c7c : dec dword ptr [rax + 0xf] ; mov edx, 0x8b4809f3 ; ret
0x000002000048dc01 : dec dword ptr [rax + 0xf] ; ret
0x000002000059280f : dec dword ptr [rax + 0xf] ; ret 0x15eb
0x00000200004cf467 : dec dword ptr [rax + 0xf] ; ret 0x8b48
0x000002000051ad5a : dec dword ptr [rax + 3] ; enter -0x1a18, 0x2c ; ret 0x48ff
0x0000020000054f59 : dec dword ptr [rax + 3] ; ret
0x00000200006db396 : dec dword ptr [rax + 3] ; ret 0x344
0x00000200000dd6ef : dec dword ptr [rax + 3] ; ret 0x3b48
0x000002000045fdf8 : dec dword ptr [rax + 3] ; ret 0x3b49
0x000002000065ca49 : dec dword ptr [rax + 3] ; ret 0x8948
0x000002000066f22f : dec dword ptr [rax + 3] ; ret 0x8b4c
0x00000200006d8a79 : dec dword ptr [rax + 3] ; ret 0xff41
0x0000020000049e32 : dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x73], 0xd ; ret
0x0000020000367c4d : dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x7d], 0xbc ; ret 0x4ca8
0x00000200005a31d5 : dec dword ptr [rax + 3] ; shl byte ptr [rcx], 0x74 ; ret 0x4108
0x00000200005a0410 : dec dword ptr [rax - 0x2fa586fb] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000148f2e : dec dword ptr [rax - 0x39] ; ret
0x000002000071317b : dec dword ptr [rax - 0x39] ; ret 0x7400
0x00000200000b3d1e : dec dword ptr [rax - 0x39] ; ret 0xd300
0x000002000008af40 : dec dword ptr [rax - 0x3f] ; call 0x1ffc22bf75b
0x00000200000a5c2c : dec dword ptr [rax - 0x3f] ; call 0x1ffc22da444
0x00000200000f668b : dec dword ptr [rax - 0x3f] ; call 0x1ffc232aeac
0x00000200000c5490 : dec dword ptr [rax - 0x3f] ; call 0x1ffc32f9da8
0x00000200001711ce : dec dword ptr [rax - 0x3f] ; call 0x1ffc39b52eb
0x0000020000078d84 : dec dword ptr [rax - 0x3f] ; call 0x1ffffc8d5b3
0x00000200001f85eb : dec dword ptr [rax - 0x3f] ; call 0x1ffffe0ce1a
0x000002000017f27a : dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200001fb0d4 : dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005503de : dec dword ptr [rax - 0x3f] ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200006f91d9 : dec dword ptr [rax - 0x3f] ; jmp 0x1ffc2fadaf1
0x000002000005f2a4 : dec dword ptr [rax - 0x3f] ; jmp 0x2000005f2bd
0x000002000018a726 : dec dword ptr [rax - 0x3f] ; jmp 0x2000018a73e
0x000002000048b753 : dec dword ptr [rax - 0x73] ; add al, 0x48 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000048b6f4
0x00000200003cab40 : dec dword ptr [rax - 0x73] ; add al, 0x90 ; ret
0x0000020000722229 : dec dword ptr [rax - 0x73] ; add dword ptr [rax - 0x7f], ecx ; ret 0x800
0x000002000016e89f : dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000018ee54 : dec dword ptr [rax - 0x73] ; add eax, 0xfffd0104 ; ret
0x0000020000070a43 : dec dword ptr [rax - 0x73] ; add qword ptr [r8 - 0x75], rcx ; ret
0x00000200005c3b8b : dec dword ptr [rax - 0x73] ; and al, 0x48 ; call 0x2000006fe28
0x00000200001808a2 : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x00000200003c4411 : dec dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200005932be : dec dword ptr [rax - 0x73] ; or r8b, r13b ; xchg eax, esp ; cld ; ret
0x0000020000186f3d : dec dword ptr [rax - 0x73] ; psubsb mm7, qword ptr [r9] ; ret
0x00000200003fb254 : dec dword ptr [rax - 0x73] ; push rdi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000564124 : dec dword ptr [rax - 0x73] ; ret
0x000002000013da61 : dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200006f3398 : dec dword ptr [rax - 0x73] ; sub byte ptr [rax - 0x77], r9b ; add edi, edi ; ret
0x00000200003eca91 : dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x00000200005201cf : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x2b], cl ; ret
0x000002000051ed0f : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200004b4fd6 : dec dword ptr [rax - 0x75] ; add al, 0xc1 ; ret
0x0000020000049bc5 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000af403 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003bb0f2 : dec dword ptr [rax - 0x75] ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x0000020000073d20 : dec dword ptr [rax - 0x75] ; add dword ptr [r9 + 0x23], ecx ; ret
0x00000200000d3398 : dec dword ptr [rax - 0x75] ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x0000020000032d28 : dec dword ptr [rax - 0x75] ; add dword ptr [rax + 0x33], ecx ; ret 0x2349
0x0000020000061667 : dec dword ptr [rax - 0x75] ; add dword ptr [rcx + 0x23], ecx ; ret
0x00000200001012e4 : dec dword ptr [rax - 0x75] ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200004a9202 : dec dword ptr [rax - 0x75] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x870f
0x00000200000f8c2a : dec dword ptr [rax - 0x75] ; add eax, 0x25044e ; ret
0x00000200005ba5f5 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200005f3993 : dec dword ptr [rax - 0x75] ; and al, 0x20 ; call 0x200000bfc10
0x000002000058cd5b : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x20000068fd8
0x00000200004b1cdd : dec dword ptr [rax - 0x75] ; and byte ptr [r11], r15b ; ret
0x0000020000711897 : dec dword ptr [rax - 0x75] ; cmp r8b, r13b ; pop rdi ; ret
0x000002000038202b : dec dword ptr [rax - 0x75] ; cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x200003ce247
0x000002000051ef36 : dec dword ptr [rax - 0x75] ; enter 0x41e8, -0x17 ; ret
0x00000200000f0af5 : dec dword ptr [rax - 0x75] ; fadd dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x000002000063563c : dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x00000200007292b4 : dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x0000020000376621 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x00000200005a9303 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000059ce85 : dec dword ptr [rax - 0x75] ; int 0xe8
0x000002000043a0d9 : dec dword ptr [rax - 0x75] ; iretd ; call 0x20000063d9b
0x000002000048cce4 : dec dword ptr [rax - 0x75] ; iretd ; call 0x20000068fd6
0x000002000043a0cc : dec dword ptr [rax - 0x75] ; iretd ; call 0x20000068fd7
0x000002000043acb5 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000006a617
0x000002000045f69d : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000008a167
0x00000200004b9bee : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e19c3
0x000002000019ce34 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200001d90e2
0x00000200000bbb6d : dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200000ec701 : dec dword ptr [rax - 0x75] ; je 0x200000ec732 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001bf2b3 : dec dword ptr [rax - 0x75] ; je 0x200001bf2e4 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000022c32d : dec dword ptr [rax - 0x75] ; je 0x2000022c35e ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000022c32c : dec dword ptr [rax - 0x75] ; je 0x2000022c35f ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000036c794 : dec dword ptr [rax - 0x75] ; je 0x2000036c7c5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004aff9b : dec dword ptr [rax - 0x75] ; je 0x200004affcb ; js 0x200004aff34 ; ret
0x00000200004c877e : dec dword ptr [rax - 0x75] ; je 0x200004c87af ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004df97d : dec dword ptr [rax - 0x75] ; je 0x200004df9ad ; js 0x200004df916 ; ret
0x000002000059e473 : dec dword ptr [rax - 0x75] ; je 0x2000059e4a4 ; sub cl, ch ; leave ; ret
0x0000020000424278 : dec dword ptr [rax - 0x75] ; jl 0x200004242a8 ; js 0x20000424211 ; ret
0x000002000051d071 : dec dword ptr [rax - 0x75] ; jl 0x2000051d0a1 ; js 0x2000051d00a ; ret
0x00000200003e139c : dec dword ptr [rax - 0x75] ; lea ebp, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003e12c5 : dec dword ptr [rax - 0x75] ; lea ebx, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003e1212 : dec dword ptr [rax - 0x75] ; lea ecx, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003aa652 : dec dword ptr [rax - 0x75] ; mov byte ptr [r11], r14b ; shr al, cl ; ret 0xeea7
0x00000200003f91f9 : dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x2b], r9b ; ret
0x00000200001948fa : dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200003667ca : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x75], cl ; ret 0x7eb
0x00000200005b9fb8 : dec dword ptr [rax - 0x75] ; or eax, 0xffce8ee0 ; call rax
0x0000020000234e29 : dec dword ptr [rax - 0x75] ; or r11b, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000622857 : dec dword ptr [rax - 0x75] ; or r8b, bpl ; ret
0x00000200001952af : dec dword ptr [rax - 0x75] ; pop rcx ; and byte ptr [rax - 0x75], cl ; ret
0x00000200001aa5f2 : dec dword ptr [rax - 0x75] ; pop rsi ; and byte ptr [rax - 0x75], cl ; ret
0x000002000072c09d : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x2000072c06f
0x000002000072d0a9 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; xor eax, eax ; ret
0x000002000054b603 : dec dword ptr [rax - 0x75] ; push rax ; adc dh, dh ; ret 0x413f
0x00000200000a6f4b : dec dword ptr [rax - 0x75] ; push rax ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000e6dc2 : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200004e2a47 : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x40 ; jmp 0x200004e2a19
0x00000200005ef339 : dec dword ptr [rax - 0x75] ; pushfq ; ret
0x00000200000296fd : dec dword ptr [rax - 0x75] ; ret
0x00000200001e7c0b : dec dword ptr [rax - 0x75] ; ret 0x11b0
0x000002000018419a : dec dword ptr [rax - 0x75] ; ret 0x2348
0x0000020000046b98 : dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200000ad768 : dec dword ptr [rax - 0x75] ; ret 0x3349
0x00000200000fc9b6 : dec dword ptr [rax - 0x75] ; ret 0x349
0x000002000003322d : dec dword ptr [rax - 0x75] ; ret 0x48f0
0x000002000007b289 : dec dword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000597499 : dec dword ptr [rax - 0x75] ; ret 0x4cf0
0x000002000006035b : dec dword ptr [rax - 0x75] ; ret 0x63e9
0x00000200000c556e : dec dword ptr [rax - 0x75] ; ret 0x8348
0x0000020000031f52 : dec dword ptr [rax - 0x75] ; ret 0x8349
0x000002000019ebf5 : dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000087609 : dec dword ptr [rax - 0x75] ; ret 0x8941
0x0000020000185331 : dec dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000015de99 : dec dword ptr [rax - 0x75] ; ret 0xb48
0x00000200003bdc9d : dec dword ptr [rax - 0x75] ; ret 0xb49
0x000002000017fa7d : dec dword ptr [rax - 0x75] ; ret 0xb849
0x0000020000174392 : dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000722156 : dec dword ptr [rax - 0x75] ; ret 0xb949
0x0000020000169c33 : dec dword ptr [rax - 0x75] ; ret 0xba48
0x000002000008809d : dec dword ptr [rax - 0x75] ; ret 0xbb48
0x000002000005bffa : dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000110b11 : dec dword ptr [rax - 0x75] ; ret 0xd348
0x00000200006454de : dec dword ptr [rax - 0x75] ; ret 0xff48
0x00000200004040fc : dec dword ptr [rax - 0x75] ; ret 0xffc3
0x0000020000438425 : dec dword ptr [rax - 0x75] ; retf ; call 0x20000063ddb
0x000002000043c5b1 : dec dword ptr [rax - 0x75] ; retf ; call 0x20000068fd7
0x00000200005ba355 : dec dword ptr [rax - 0x75] ; retf ; call 0x200004265be
0x00000200005ba354 : dec dword ptr [rax - 0x75] ; retf ; call 0x200004265bf
0x00000200001ddcd6 : dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200004b48a6 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200004ee9c5 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000049012d : dec dword ptr [rax - 0x75] ; ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x000002000048e888 : dec dword ptr [rax - 0x75] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4810
0x0000020000546f44 : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call 0x200005d3165
0x0000020000070ade : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000040a165 : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200006dc58e : dec dword ptr [rax - 0x75] ; salc ; mov rcx, rbx ; call r12
0x00000200005bae5b : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200004344e6 : dec dword ptr [rax - 0x75] ; shr al, 1 ; push rcx ; ret
0x00000200005674f9 : dec dword ptr [rax - 0x75] ; shr al, 1 ; ret 0xb551
0x0000020000596d7f : dec dword ptr [rax - 0x75] ; sti ; jmp 0x200004c2ff3
0x00000200001b16c6 : dec dword ptr [rax - 0x75] ; sub byte ptr [rcx + 0x23], cl ; ret
0x0000020000463fb0 : dec dword ptr [rax - 0x75] ; xlatb ; call 0x2000008a167
0x00000200004704c4 : dec dword ptr [rax - 0x75] ; xlatb ; call 0x200000bc776
0x00000200000d8c50 : dec dword ptr [rax - 0x75] ; xlatb ; mov rcx, r14 ; call rax
0x000002000037b999 : dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], r9b ; ret
0x000002000017252e : dec dword ptr [rax - 0x75] ; xor byte ptr [rbp - 0x75], al ; ret
0x00000200000362fa : dec dword ptr [rax - 0x75] ; xor cl, bpl ; ret 0xfffe
0x000002000048e2eb : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000502151 : dec dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x000002000071833a : dec dword ptr [rax - 0x77] ; add eax, 0xffbc762e ; ret
0x00000200005a8096 : dec dword ptr [rax - 0x77] ; and al, 0x38 ; call 0x200001ca199
0x0000020000161c47 : dec dword ptr [rax - 0x77] ; jmp 0x20000161c14
0x00000200004a89f8 : dec dword ptr [rax - 0x77] ; or byte ptr [rax - 0x7f], cl ; ret
0x0000020000718c99 : dec dword ptr [rax - 0x77] ; or eax, 0xffb96c7f ; ret
0x00000200000b61f8 : dec dword ptr [rax - 0x77] ; or r11b, bpl ; ret 0x48cc
0x0000020000627850 : dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200004590b8 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x3b], r9b ; ret
0x00000200006f8b8e : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x75], cl ; ret 0x8b48
0x0000020000442414 : dec dword ptr [rax - 0x7b] ; leave ; je 0x20000442430 ; call 0x20000068fd9
0x00000200004f1541 : dec dword ptr [rax - 0x7b] ; leave ; je 0x200004f1557 ; ret
0x0000020000532d18 : dec dword ptr [rax - 0x7b] ; ret
0x0000020000059297 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000200003c11d5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000516b6a : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x9be
0x00000200004beaeb : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xd65
0x00000200001eb12a : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x0000020000721633 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xb5e9
0x00000200006206e4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000664107 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x000002000043df43 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000064fdb6 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x0000020000206a71 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x000002000003864b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rax - 0x18], 0x1e ; ret
0x00000200006f0ea9 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x0000020000671333 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x00000200004d5f6c : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*4 + 0x44], 0x8b ; ret
0x00000200006eb6a0 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0x339
0x00000200004dbf30 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0xc2b
0x00000200000e274b : dec dword ptr [rax - 0x7d] ; in al, dx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000004404e : dec dword ptr [rax - 0x7d] ; ret
0x000002000006f2d9 : dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000002000055e4fd : dec dword ptr [rax - 0x7d] ; ret 0x4110
0x00000200004c31cb : dec dword ptr [rax - 0x7d] ; ret 0x4120
0x00000200005a7ccb : dec dword ptr [rax - 0x7d] ; ret 0x4138
0x00000200006812be : dec dword ptr [rax - 0x7d] ; ret 0x4158
0x000002000004eb07 : dec dword ptr [rax - 0x7d] ; ret 0x4504
0x0000020000041b6c : dec dword ptr [rax - 0x7d] ; ret 0x45b0
0x000002000005acd5 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000002000054a81e : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000200000a3f84 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200000313af : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000020000421ac2 : dec dword ptr [rax - 0x7d] ; ret 0x4838
0x00000200000ccf6e : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200001f08c3 : dec dword ptr [rax - 0x7d] ; ret 0x4910
0x0000020000646b37 : dec dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000200006f5d23 : dec dword ptr [rax - 0x7d] ; ret 0x4c50
0x0000020000514faa : dec dword ptr [rax - 0x7d] ; ret 0x6602
0x00000200005665bf : dec dword ptr [rax - 0x7d] ; ret 0x6608
0x0000020000646a55 : dec dword ptr [rax - 0x7d] ; ret 0x890b
0x0000020000711e0a : dec dword ptr [rax - 0x7d] ; ret 0xe80c
0x000002000059694a : dec dword ptr [rax - 0x7d] ; ret 0xe838
0x00000200005d2dbe : dec dword ptr [rax - 0x7d] ; ret 0xe904
0x000002000045e922 : dec dword ptr [rax - 0x7d] ; ret 0xe910
0x000002000070d04c : dec dword ptr [rax - 0x7d] ; ret 0xf04
0x000002000067adc0 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xe77c
0x000002000067a14c : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x00000200003ccd35 : dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x0000020000418c95 : dec dword ptr [rax - 0x7d] ; ror dword ptr [rax], -0x18 ; int1 ; hlt ; ret 0x48ff
0x00000200000c6465 : dec dword ptr [rax - 0x7d] ; shr byte ptr [rax], 0x83 ; call qword ptr [rax]
0x00000200000a4910 : dec dword ptr [rax - 0x7f] ; ret
0x00000200003b41d9 : dec dword ptr [rax - 0x7f] ; ret 0
0x0000020000394319 : dec dword ptr [rax - 0x7f] ; ret 0x1000
0x0000020000125639 : dec dword ptr [rax - 0x7f] ; ret 0x610
0x0000020000554e32 : dec dword ptr [rax - 0x7f] ; ret 0xfd30
0x0000020000074866 : dec dword ptr [rax - 0x7f] ; ret 1
0x000002000012860b : dec dword ptr [rax - 1] ; ret
0x0000020000132eb1 : dec dword ptr [rax - 1] ; ret 0x25e9
0x00000200002087f3 : dec dword ptr [rax - 1] ; ret 0x2ce9
0x0000020000145845 : dec dword ptr [rax - 1] ; ret 0x3966
0x00000200001453e7 : dec dword ptr [rax - 1] ; ret 0x3c80
0x000002000043df14 : dec dword ptr [rax - 1] ; ret 0x4466
0x00000200005ad59c : dec dword ptr [rax - 1] ; ret 0x8349
0x00000200003d7517 : dec dword ptr [rax - 1] ; ret 0x8948
0x00000200006662a1 : dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200001e7f86 : dec dword ptr [rax - 9] ; ret
0x00000200004dfff7 : dec dword ptr [rax - 9] ; ret 0xfff
0x00000200000abe64 : dec dword ptr [rax - 9] ; ret 0xffff
0x0000020000366138 : dec dword ptr [rax - 9] ; ror byte ptr [rax + 0x23], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000047a287 : dec dword ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200004fa8b0 : dec dword ptr [rax - 9] ; ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200000f5252 : dec dword ptr [rax] ; ret
0x00000200003b0d87 : dec dword ptr [rbp + 0x21] ; sub byte ptr [rax - 0x75], cl ; ret
0x0000020000296289 : dec dword ptr [rbp + 0x23410142] ; ret 0xd08b
0x000002000051418a : dec dword ptr [rbp + 0x2b] ; ret 0x8b44
0x0000020000082b10 : dec dword ptr [rbp + 0x3b] ; ret
0x0000020000136407 : dec dword ptr [rbp + 0x3b] ; ret 0x830f
0x0000020000047d31 : dec dword ptr [rbp + 0x3b] ; ret 0x850f
0x00000200001b743b : dec dword ptr [rbp + 0x3b] ; ret 0xe573
0x00000200000cc7e7 : dec dword ptr [rbp + 0x440f0458] ; ret
0x00000200000f748b : dec dword ptr [rbp + 0x48bfe43] ; ret 0x86eb
0x00000200000f74fd : dec dword ptr [rbp + 0x48bfe43] ; ret 0xc6e9
0x000002000055c79c : dec dword ptr [rbp + 0x70e9ff51] ; ret
0x00000200005b26f2 : dec dword ptr [rbp + 1] ; cmp cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x8b48
0x000002000006be06 : dec dword ptr [rbp + 3] ; ret 0x3b49
0x0000020000505527 : dec dword ptr [rbp + 3] ; ret 0x4566
0x00000200006e3fe4 : dec dword ptr [rbp + 3] ; ret 0xbe48
0x00000200006d65ae : dec dword ptr [rbp + 3] ; ret 0xff83
0x000002000072336d : dec dword ptr [rbp + rcx*4 + 0x15] ; cmp esp, edx ; ret 0x48ff
0x0000020000028f35 : dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x00000200003d04f5 : dec dword ptr [rbp + rcx*4 + 0x25] ; add ecx, dword ptr [rbx] ; ret
0x00000200003efb3e : dec dword ptr [rbp + rcx*4 + 0x25] ; push 0x50 ; ret 0x85ff
0x00000200003efc8c : dec dword ptr [rbp + rcx*4 + 0x25] ; sbb al, 0x4f ; ret 0x48ff
0x00000200003efcf9 : dec dword ptr [rbp + rcx*4 + 0x25] ; scasd eax, dword ptr [rdi] ; ret 0x48ff
0x00000200003d2af4 : dec dword ptr [rbp + rcx*4 + 0x35] ; add al, 0xe5 ; ret 0xebff
0x00000200003d2401 : dec dword ptr [rbp + rcx*4 + 0x35] ; imul ebx ; ret 0x44ff
0x000002000067e70f : dec dword ptr [rbp + rcx*4 + 0x3d] ; pop rcx ; ret 0x41ff
0x00000200004d2168 : dec dword ptr [rbp + rcx*4 + 0x67] ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000040e8b1 : dec dword ptr [rbp + rcx*4 + 0x71] ; adc al, 0x8b ; ret
0x0000020000720986 : dec dword ptr [rbp + rcx*4 + 5] ; ret 0xbbf0
0x0000020000674a0c : dec dword ptr [rbp - 0x367afeb0] ; cmovne eax, edx ; ret
0x000002000018d5f4 : dec dword ptr [rbp - 0x73] ; add dword ptr [rbp + 0x3b], r9d ; ret 0xf4d
0x00000200004c8980 : dec dword ptr [rbp - 0x74bb02a9] ; ret 0x8b48
0x0000020000552234 : dec dword ptr [rbp - 0x74be00af] ; ret 0x55e9
0x000002000020c3e8 : dec dword ptr [rbp - 0x75] ; add byte ptr [rax + 0xb], cl ; ret 0xc933
0x000002000037ed0f : dec dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xda75
0x000002000037ec93 : dec dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x000002000037ef9c : dec dword ptr [rbp - 0x75] ; add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x000002000067f1dd : dec dword ptr [rbp - 0x75] ; pushfq ; ret 0x8068
0x000002000003d778 : dec dword ptr [rbp - 0x75] ; ret
0x0000020000573900 : dec dword ptr [rbp - 0x75] ; ret 0x8a40
0x0000020000033e88 : dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200000733c6 : dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x000002000050eb68 : dec dword ptr [rbp - 0x75] ; ret 0x98e9
0x000002000017f954 : dec dword ptr [rbp - 0x75] ; ret 0xb70f
0x0000020000183f9c : dec dword ptr [rbp - 0x75] ; ret 0xf1e9
0x00000200005fcd8f : dec dword ptr [rbp - 0x7b] ; div byte ptr [rsi + rdx - 0xa] ; ret
0x00000200006428e5 : dec dword ptr [rbp - 0x7b] ; push qword ptr [rax + rbp - 0x75] ; ret
0x000002000049275a : dec dword ptr [rbp - 0x7b] ; sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x00000200001a1298 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rcx + 0xf], 0x45 ; fsubp st(1) ; ret 0xf582
0x000002000065d29c : dec dword ptr [rbx + 0x148b48c1] ; ret 0x8548
0x0000020000538a41 : dec dword ptr [rbx + 0x14e9807d] ; ret
0x00000200000bb5b2 : dec dword ptr [rbx + 0x152948d5] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x21
0x0000020000465dff : dec dword ptr [rbx + 0x18c87] ; add byte ptr [rbx], ah ; ret
0x000002000059045b : dec dword ptr [rbx + 0x1e6] ; jmp 0x200004ac6eb
0x0000020000125627 : dec dword ptr [rbx + 0x22ba0605] ; add byte ptr [rcx - 1], al ; ret
0x0000020000061609 : dec dword ptr [rbx + 0x248b45c8] ; mov ecx, gs ; ret
0x00000200006fd335 : dec dword ptr [rbx + 0x248d4cc1] ; ret
0x00000200000ece17 : dec dword ptr [rbx + 0x2641fa05] ; add bh, bh ; ret
0x000002000040549c : dec dword ptr [rbx + 0x2718e8d0] ; ret 0xebff
0x000002000059c24f : dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x0000020000198638 : dec dword ptr [rbx + 0x2be9831c] ; ret
0x00000200004408b5 : dec dword ptr [rbx + 0x35cfe8cf] ; ret
0x0000020000708b04 : dec dword ptr [rbx + 0x3b0389c8] ; ret 0x840f
0x00000200000d9fd9 : dec dword ptr [rbx + 0x3bc323c6] ; ret
0x00000200006cef7e : dec dword ptr [rbx + 0x42082] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000046d5ae : dec dword ptr [rbx + 0x48302444] ; add esp, 0x28 ; ret
0x00000200005088f1 : dec dword ptr [rbx + 0x48482444] ; add esp, 0x28 ; ret
0x0000020000106450 : dec dword ptr [rbx + 0x48582444] ; add esp, 0x38 ; ret
0x00000200000a7c90 : dec dword ptr [rbx + 0x48b4dc2] ; ret 0x854d
0x0000020000700b3a : dec dword ptr [rbx + 0x48c28bd0] ; add esp, 0x38 ; ret
0x000002000016d7c9 : dec dword ptr [rbx + 0x531c83] ; add byte ptr [rax + 3], cl ; ret 0x840f
0x0000020000198612 : dec dword ptr [rbx + 0x53e98304] ; ret
0x000002000068e518 : dec dword ptr [rbx + 0x56948cb] ; ret 0xc0fa
0x00000200000a4352 : dec dword ptr [rbx + 0x570482] ; add byte ptr [rbx], bh ; ret
0x00000200000a25e2 : dec dword ptr [rbx + 0x570482] ; add byte ptr [rcx + 0x3b], al ; ret 0x820f
0x00000200004cf03f : dec dword ptr [rbx + 0x5891345] ; ret
0x0000020000184f8d : dec dword ptr [rbx + 0x5c62bc3] ; call rdx
0x0000020000229c0f : dec dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000057e0b1 : dec dword ptr [rbx + 0x73ece9c6] ; out dx, eax ; push rsi ; ret
0x000002000037f0cf : dec dword ptr [rbx + 0x78c085c7] ; int 0x48
0x00000200003ef853 : dec dword ptr [rbx + 0x78c085d8] ; ret
0x00000200003f94c5 : dec dword ptr [rbx + 0x78c085e8] ; or esi, esi ; ret
0x0000020000667fec : dec dword ptr [rbx + 0x78c085e8] ; sbb bh, bh ; ret
0x00000200005f7dc7 : dec dword ptr [rbx + 0x79c085e8] ; ret
0x00000200004d0789 : dec dword ptr [rbx + 0x8896] ; add bh, dh ; ret 0x402
0x00000200001fe2e8 : dec dword ptr [rbx + 0x99b4505] ; add byte ptr [rbx], bh ; ret 0xf74
0x00000200004130aa : dec dword ptr [rbx + 0xfc085d8] ; mov byte ptr [rax], ch ; ret 0x14
0x00000200003fb0e7 : dec dword ptr [rbx + 0xfc085d8] ; mov byte ptr [rdi], dh ; ret 0x15
0x00000200003fb034 : dec dword ptr [rbx + 0xfc085d8] ; mov dl, ch ; ret 0x15
0x00000200003e2c6d : dec dword ptr [rbx + 0xfc085f0] ; mov al, bh ; ret
0x00000200003e2d2d : dec dword ptr [rbx + 0xfc085f0] ; mov byte ptr [rax], bh ; ret
0x00000200003e2d5a : dec dword ptr [rbx + 0xfc085f0] ; mov byte ptr [rbx], cl ; ret
0x0000020000412eba : dec dword ptr [rbx + 0xfc085f8] ; mov bl, bl ; ret 0x14
0x00000200001b5f55 : dec dword ptr [rbx + 0xfc085f8] ; mov cl, dl ; ret 0xfff7
0x00000200005fc031 : dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003eddb5 : dec dword ptr [rbx + rax - 0x36] ; and r9, rcx ; jmp 0x200003edd88
0x00000200004fef75 : dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000200007285ed : dec dword ptr [rbx + rcx*4 + 0x3d] ; jnp 0x20000728585 ; ret 0xebff
0x0000020000678a03 : dec dword ptr [rbx + rcx*4 + 0x3d] ; push rbp ; push rdx ; ret
0x00000200003d1fe7 : dec dword ptr [rbx + rcx*4 + 0x46] ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000039020c : dec dword ptr [rbx + rcx*4 + 0x54] ; and al, 0x48 ; jmp 0x200003901de
0x0000020000573c9c : dec dword ptr [rbx + rcx*4 + 0x74] ; ret
0x00000200004d5f7e : dec dword ptr [rbx + rcx*4 + 5] ; ret 0xe7b2
0x00000200007224af : dec dword ptr [rbx + rcx*4 + 5] ; xor esp, ebp ; ret 0x49ff
0x000002000050c789 : dec dword ptr [rbx + rcx*4 - 0x39] ; call 0x200001389d2
0x000002000045c6cc : dec dword ptr [rbx + rcx*4 - 0x39] ; sub r8, rdx ; jmp 0x2000045c6cb
0x00000200003c3ad0 : dec dword ptr [rbx + rcx*4 - 0x54] ; ret 0xd60
0x0000020000171b85 : dec dword ptr [rbx + rdi + 0x3d] ; ret
0x000002000056a073 : dec dword ptr [rbx - 0x16afdbbc] ; ret 0xec99
0x00000200005903db : dec dword ptr [rbx - 0x16fb3ebc] ; ret 0xfff1
0x0000020000511de8 : dec dword ptr [rbx - 0x1c0c36f3] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000095bf1 : dec dword ptr [rbx - 0x1f7cefbf] ; add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x00000200005b4e04 : dec dword ptr [rbx - 0x21a71738] ; ret
0x00000200003bccd4 : dec dword ptr [rbx - 0x3074b710] ; call 0x20000068fd8
0x00000200003fd62e : dec dword ptr [rbx - 0x3074b730] ; call 0x20000027bc5
0x0000020000014be7 : dec dword ptr [rbx - 0x33fbdbbc] ; ret 4
0x00000200003fcb84 : dec dword ptr [rbx - 0x3474b730] ; call 0x20000027bc5
0x00000200005178c7 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x20000517932 ; ret
0x0000020000667152 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x200006671bd ; ret
0x0000020000508f34 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; pop rbp ; ret
0x0000020000464df5 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200004c220d : dec dword ptr [rbx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x0000020000686a36 : dec dword ptr [rbx - 0x3d8d9ceb] ; jmp qword ptr [rbx]
0x0000020000579c0a : dec dword ptr [rbx - 0x3ef00f3e] ; or byte ptr [rbx], r8b ; ret 0x850f
0x0000020000041413 : dec dword ptr [rbx - 0x50f0be3f] ; ret 0x341
0x000002000053253a : dec dword ptr [rbx - 0x6efa3931] ; ret 0xffd7
0x0000020000492cb2 : dec dword ptr [rbx - 0x74b383aa] ; ret
0x00000200000a72a7 : dec dword ptr [rbx - 0x74b6afab] ; pop rsi ; and dh, dh ; ret
0x00000200000dca50 : dec dword ptr [rbx - 0x74bbdba4] ; ret
0x00000200005be7c9 : dec dword ptr [rbx - 0x74bbe7b0] ; ret
0x00000200000d8dcc : dec dword ptr [rbx - 0x74cbdba4] ; ret
0x00000200005efca5 : dec dword ptr [rbx - 0x76bd6ffc] ; ret
0x00000200001484f0 : dec dword ptr [rbx - 0x77bb3883] ; insd dword ptr [rdi], dx ; ret
0x000002000054dae5 : dec dword ptr [rbx - 0x7a3fcc10] ; test byte ptr [rdi], 0x88 ; ret 0
0x00000200001de997 : dec dword ptr [rbx - 0x7cb7dba7] ; ret
0x000002000009e017 : dec dword ptr [rbx - 0x9a7dbb4] ; ret
0x00000200003b8578 : dec dword ptr [rbx - 0xa7dbac] ; ret 0xc28b
0x000002000050166b : dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x000002000062f448 : dec dword ptr [rbx - 0xcbdbbc] ; ret
0x00000200004a5467 : dec dword ptr [rbx] ; ret
0x00000200005bcb36 : dec dword ptr [rbx] ; ret 0x389
0x0000020000583811 : dec dword ptr [rbx] ; ret 0x4389
0x00000200000b4b6f : dec dword ptr [rbx] ; ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x0000020000118669 : dec dword ptr [rcx + 0x1e4] ; ret
0x0000020000130a39 : dec dword ptr [rcx + 0x23] ; ret
0x00000200004c0fd9 : dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x00000200000f664c : dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x00000200000c1de3 : dec dword ptr [rcx + 0x2b] ; ret
0x000002000011e3e5 : dec dword ptr [rcx + 0x2b] ; ret 0xd3e9
0x00000200000f91bb : dec dword ptr [rcx + 0x33] ; ret 0x2348
0x00000200006103dd : dec dword ptr [rcx + 0x34c] ; xor eax, eax ; ret
0x00000200000ca889 : dec dword ptr [rcx + 0x3b] ; ret 0x1274
0x00000200005f75fc : dec dword ptr [rcx + 0x3b] ; ret 0x7372
0x000002000017db68 : dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200004a922c : dec dword ptr [rcx + 0x3b] ; ret 0x870f
0x0000020000295c10 : dec dword ptr [rcx + 0x4c] ; add rsp, 0x70 ; pop rdi ; ret
0x000002000050c1b4 : dec dword ptr [rcx + 0x58] ; je 0x2000050c1bf ; ret
0x000002000036839b : dec dword ptr [rcx + 0x64] ; ret
0x000002000036d609 : dec dword ptr [rcx + 0x80bb] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000c279f : dec dword ptr [rcx + 0x88b7] ; add bl, ch ; ret 0x8548
0x000002000008ec4e : dec dword ptr [rcx + 0x8c] ; ret
0x0000020000070966 : dec dword ptr [rcx + 0xb484075] ; ret 0xc123
0x0000020000079297 : dec dword ptr [rcx + 0xb] ; ret 0xa1e9
0x00000200001a082e : dec dword ptr [rcx + 0xf] ; ret 0x8b4c
0x00000200000ad8e7 : dec dword ptr [rcx + 3] ; ret
0x00000200001a7c7f : dec dword ptr [rcx + 3] ; ret 0x2349
0x00000200006cb88b : dec dword ptr [rcx + 3] ; ret 0xcaff
0x00000200001fba79 : dec dword ptr [rcx + 8] ; ret
0x000002000048596e : dec dword ptr [rcx + rax*4] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006ec4e5 : dec dword ptr [rcx + rcx*4 + 0x15] ; ret
0x0000020000722b3d : dec dword ptr [rcx + rcx*4 + 0x2d] ; mov bl, 0xe9 ; ret 0xe9ff
0x000002000059fddb : dec dword ptr [rcx + rcx*4 + 0x2d] ; push rbp ; call rax
0x00000200007001a6 : dec dword ptr [rcx + rcx*4 + 0x35] ; ret 0x322
0x00000200004a4c13 : dec dword ptr [rcx - 0x1fe891c3] ; push rsi ; ret
0x0000020000666623 : dec dword ptr [rcx - 0x3b89b9c3] ; jmp qword ptr [rbx]
0x00000200006fb244 : dec dword ptr [rcx - 0x3f] ; call 0x1ffc392ff5c
0x0000020000718377 : dec dword ptr [rcx - 0x4504b9fb] ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f41d9 : dec dword ptr [rcx - 0x73] ; adc r9b, byte ptr [r8 + 3] ; ret
0x00000200000ad8e3 : dec dword ptr [rcx - 0x73] ; dec qword ptr [rcx + 3] ; ret
0x0000020000050977 : dec dword ptr [rcx - 0x74b7d7b9] ; ret
0x00000200004cbd16 : dec dword ptr [rcx - 0x74b7ef85] ; ret
0x00000200004f33c6 : dec dword ptr [rcx - 0x75] ; fimul word ptr [rax - 1] ; ret
0x0000020000439357 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x20000063d9b
0x0000020000439319 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x20000068fd7
0x00000200001a9256 : dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret
0x0000020000057711 : dec dword ptr [rcx - 0x75] ; ret
0x00000200001a0f4e : dec dword ptr [rcx - 0x75] ; ret 0x2b48
0x000002000016ba7b : dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x000002000017bb9f : dec dword ptr [rcx - 0x75] ; ret 0x4df0
0x0000020000108fa8 : dec dword ptr [rcx - 0x75] ; ret 0x62e9
0x000002000003778c : dec dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200002063c9 : dec dword ptr [rcx - 0x75] ; ret 0x83c7
0x00000200004d6ada : dec dword ptr [rcx - 0x75] ; ret 0x8b44
0x000002000013172f : dec dword ptr [rcx - 0x75] ; ret 0xa348
0x000002000018a158 : dec dword ptr [rcx - 0x75] ; ret 0xb948
0x0000020000091405 : dec dword ptr [rcx - 0x75] ; ret 0xba49
0x00000200006f6b33 : dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006f6c55 : dec dword ptr [rcx - 0x75] ; ret 0xd3eb
0x000002000018a0d7 : dec dword ptr [rcx - 0x75] ; ret 0xf748
0x00000200000a0256 : dec dword ptr [rcx - 0x75] ; ret 0xff48
0x00000200006324e0 : dec dword ptr [rcx - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004bec3b : dec dword ptr [rcx - 0x75] ; xor byte ptr [rcx - 1], al ; ret 0x8b49
0x000002000039f4c4 : dec dword ptr [rcx - 0x75] ; xor r8b, r13b ; ret 0xc91f
0x00000200001815da : dec dword ptr [rcx - 0x7d] ; jle 0x200001815f0 ; add byte ptr [rbx + rsi*2 - 0xa], dh ; ret
0x000002000018e1bb : dec dword ptr [rcx - 0x7d] ; ret
0x000002000045bb1c : dec dword ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000192837 : dec dword ptr [rcx - 0x7d] ; ret 0x4804
0x00000200004f69a9 : dec dword ptr [rcx - 0x7d] ; ret 0x4940
0x000002000050d73b : dec dword ptr [rcx - 0x7d] ; ret 0x4ce8
0x000002000050e70a : dec dword ptr [rcx - 0x7d] ; ret 0x4d04
0x000002000037ece8 : dec dword ptr [rcx - 0x7d] ; ret 0x4d48
0x00000200005a0b67 : dec dword ptr [rcx - 0x7d] ; ret 0xe9fd
0x0000020000084c8a : dec dword ptr [rcx - 0x7f] ; ret
0x000002000005035e : dec dword ptr [rcx - 0x9c3db84] ; ret
0x000002000015de93 : dec dword ptr [rcx - 0xbb7f] ; dec dword ptr [rax - 0x75] ; ret 0xb48
0x0000020000079fbf : dec dword ptr [rcx - 1] ; ret
0x0000020000472c44 : dec dword ptr [rcx] ; je 0x20000472c4d ; ret
0x0000020000095cde : dec dword ptr [rcx] ; ret
0x00000200004eb4c4 : dec dword ptr [rdi + rcx + 0x48] ; ret
0x000002000044201a : dec dword ptr [rdi] ; adc byte ptr [rax + 3], r9b ; ret 0x348
0x0000020000055257 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x0000020000089119 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000002eeaa : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200000c5b5a : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000002ad0e : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000127ca2 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc748
0x000002000009f3f6 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008cdfd : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072cc4b : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000002000072296e : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200001e9787 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x3b48
0x00000200000878d9 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret
0x00000200000a722e : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200005fd7b6 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000523e3 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000644d73 : dec dword ptr [rdi] ; add byte ptr [rbp + 0x4e], dh ; xor al, al ; ret
0x000002000018bb85 : dec dword ptr [rdi] ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000380f18 : dec dword ptr [rdi] ; mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000165df5 : dec dword ptr [rdi] ; mov bh, 0x47 ; or byte ptr [rax - 0x75], cl ; ret
0x00000200006821a5 : dec dword ptr [rdi] ; mov bh, 0x5f ; or dh, dh ; ret
0x0000020000393cc7 : dec dword ptr [rdi] ; mov bh, 0xcd ; call 0x2000038feda
0x00000200004b9b30 : dec dword ptr [rdi] ; mov byte ptr [rbp - 0x74fff260], cl ; ret
0x0000020000613da1 : dec dword ptr [rdi] ; mov byte ptr [rbx - 0xfffffe], ah ; ret 0x3b41
0x0000020000412eda : dec dword ptr [rdi] ; mov cl, ch ; ret 0x14
0x0000020000046ecb : dec dword ptr [rdi] ; mov dh, 0x82 ; ret
0x000002000003ffad : dec dword ptr [rdi] ; mov dh, 0x8b ; ret 0
0x0000020000031dbb : dec dword ptr [rdi] ; mov dh, 0xbb ; ret
0x0000020000239911 : dec dword ptr [rdi] ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fa0b8 : dec dword ptr [rdi] ; mov dh, 0xca ; cmovne eax, ecx ; ret
0x0000020000056cd1 : dec dword ptr [rdi] ; mov edx, 0x820f0ce7 ; ret 0xfff9
0x000002000050efda : dec dword ptr [rdi] ; mov edx, 0x820f10e0 ; ret
0x000002000050f521 : dec dword ptr [rdi] ; mov edx, 0x830f10e0 ; ret
0x00000200005088d2 : dec dword ptr [rdi] ; mov edx, 0x8b480a2b ; ret
0x000002000073013c : dec dword ptr [rdi] ; mov edx, 0xb76c6b2d ; call qword ptr [rcx]
0x000002000068f682 : dec dword ptr [rdi] ; mov edx, 0xc0899d35 ; call qword ptr [rax]
0x000002000068f2ef : dec dword ptr [rdi] ; mov edx, 0xc08d3035 ; call qword ptr [rax]
0x000002000071fe25 : dec dword ptr [rdi] ; mov edx, 0xc311de2d ; call qword ptr [rcx]
0x0000020000069e31 : dec dword ptr [rdi] ; mov esi, 0xbe0f080c ; ret 0xc82b
0x00000200003ad850 : dec dword ptr [rdi] ; ret
0x000002000036802d : dec dword ptr [rdi] ; ret 0x4589
0x000002000055485b : dec dword ptr [rdi] ; sbb dword ptr [rsi - 0x65], -0x17 ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200007202d6 : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000002000011e2b7 : dec dword ptr [rdi] ; test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000057774f : dec dword ptr [rdi] ; test byte ptr [rbx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000f1836 : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000002000049eecc : dec dword ptr [rdi] ; test byte ptr [rdi], ch ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000020000387af6 : dec dword ptr [rdi] ; test byte ptr [rdx], al ; ret
0x000002000036982f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x70], al ; add byte ptr [rax], al ; ret
0x0000020000230cd2 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x75000000], bh ; ret
0x0000020000492334 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x9fff0c5], ch ; ret
0x00000200003faeaa : dec dword ptr [rdi] ; test ch, bl ; ret 0x15
0x0000020000102eda : dec dword ptr [rdi] ; test ch, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000579009 : dec dword ptr [rdi] ; test cl, al ; jl 0x20000579006 ; dec dword ptr [rax - 0x75] ; ret
0x000002000008260b : dec dword ptr [rdi] ; test cl, dl ; add eax, 0x8b4c0000 ; ret
0x0000020000387aea : dec dword ptr [rdi] ; test dh, cl ; ret 0x1a
0x00000200001e7ec8 : dec dword ptr [rdi] ; test dword ptr [rax + rax - 0x74b80000], esp ; ret
0x00000200003edf74 : dec dword ptr [rdi] ; test dword ptr [rbp - 0x74ffe999], esi ; ret
0x000002000050afcc : dec dword ptr [rdi] ; test dword ptr [rbx - 0x74fff5ce], ebx ; ret
0x00000200000706b2 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x9ffef5b], edx ; ret 0xf01
0x00000200000bbf92 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x9fff2ad], ecx ; ret 0xf01
0x00000200004d8003 : dec dword ptr [rdi] ; test dword ptr [rdi + rdx*2 - 0x3d74fff4], ebp ; ret
0x00000200004b70ce : dec dword ptr [rdi] ; test dword ptr [rdi - 0x74fff240], edi ; ret
0x000002000051dd16 : dec dword ptr [rdi] ; test dword ptr [rdi - 0x74fff692], edi ; ret
0x00000200004e993f : dec dword ptr [rdi] ; test dword ptr [rsi + rbx*4 + 0xb], ebx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004c2fe6 : dec dword ptr [rdi] ; test dword ptr [rsi - 0x74fff2c3], eax ; ret
0x000002000041533e : dec dword ptr [rdi] ; test dword ptr [rsi - 0x7d000000], edx ; ret
0x000002000055c73e : dec dword ptr [rdi] ; test dword ptr [rsi], ecx ; ret
0x0000020000386b5f : dec dword ptr [rdi] ; test eax, edx ; ret
0x00000200003ca7d0 : dec dword ptr [rdi] ; test ecx, ecx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000020000075e1c : dec dword ptr [rdi] ; test edx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004e67bc : dec dword ptr [rdi] ; test esi, ecx ; ret
0x0000020000093d11 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200005b299e : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x19eb
0x00000200005b29b0 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x7eb
0x00000200001cc879 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200003b198d : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x000002000014b096 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x00000200004c19f3 : dec dword ptr [rdx + 0x10] ; xor eax, eax ; add rsp, 0x18 ; ret
0x000002000017682e : dec dword ptr [rdx + 0x18486] ; add byte ptr [rcx + 0x3a], al ; ret 0x1475
0x000002000065a9ec : dec dword ptr [rdx + 0x2d894cc3] ; ret 0xc938
0x000002000011dda1 : dec dword ptr [rdx + 0x48322444] ; add esp, 0x28 ; ret
0x0000020000497029 : dec dword ptr [rdx - 0x169cdbbc] ; ret 0xfff4
0x000002000020fda3 : dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001d30a5 : dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x0000020000405a3e : dec dword ptr [rdx - 0x4ad5172d] ; ret 0x48ff
0x0000020000405a67 : dec dword ptr [rdx - 0x4e0e172d] ; ret 0xebff
0x0000020000405aaf : dec dword ptr [rdx - 0x4e56172d] ; ret 0xffff
0x0000020000405ac3 : dec dword ptr [rdx - 0x4e6a172d] ; ret 0x48ff
0x0000020000405ad1 : dec dword ptr [rdx - 0x4e78172d] ; ret 0xe9ff
0x000002000038a7e1 : dec dword ptr [rdx - 0x6b07ef7c] ; push 0 ; ret
0x000002000064975e : dec dword ptr [rdx - 0x74bb38bb] ; ret
0x00000200000299a0 : dec dword ptr [rdx - 0x75] ; push rsp ; ret
0x00000200003aba5e : dec dword ptr [rdx - 0x75befeb2] ; ret 0xe180
0x00000200001f303b : dec dword ptr [rip + 0xc3023] ; ret
0x00000200001f301d : dec dword ptr [rip + 0xc303d] ; ret
0x00000200001952ad : dec dword ptr ds:[rax - 0x75] ; pop rcx ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000194f42 : dec dword ptr ds:[rax - 0x75] ; ret
0x00000200004f709f : dec eax ; add rax, rdx ; jmp 0x200004f703d
0x0000020000143f26 : dec eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f5863 : dec eax ; cmp eax, 2 ; jl 0x200000f5872 ; ret
0x00000200005d2db0 : dec eax ; je 0x200005d2dc3 ; mov eax, 0xc00000bb ; ret
0x00000200000ffa84 : dec eax ; jne 0x200000ffa43 ; ret
0x000002000012cfd2 : dec eax ; jne 0x2000012cfce ; mov rax, rcx ; ret
0x000002000012ee3d : dec eax ; jne 0x2000012ee19 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000013903a : dec eax ; jne 0x20000139043 ; ret
0x00000200001411ab : dec eax ; jne 0x200001411a7 ; xor rax, rax ; ret
0x0000020000158529 : dec eax ; jne 0x20000158524 ; ret
0x000002000015dc06 : dec eax ; jne 0x2000015dc04 ; ret
0x000002000015dcb4 : dec eax ; jne 0x2000015dcb2 ; ret
0x00000200001b8248 : dec eax ; jne 0x200001b823e ; ret
0x00000200001b9b8a : dec eax ; jne 0x200001b9b79 ; jmp 0x2000013b783
0x00000200001d69fb : dec eax ; jne 0x200001d69d0 ; ret
0x00000200001ff070 : dec eax ; jne 0x200001ff065 ; ret
0x00000200003ec685 : dec eax ; jne 0x200003ec684 ; mov rax, r9 ; ret
0x0000020000425a09 : dec eax ; jne 0x20000425a01 ; ret
0x000002000050d4d0 : dec eax ; jne 0x2000050d4d0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065d519 : dec eax ; jne 0x2000065d514 ; ret
0x00000200006ed787 : dec eax ; jne 0x200006ed782 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006ed787 : dec eax ; jne 0x200006ed783 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200001d92ec : dec eax ; jns 0x200001d92e5 ; or eax, 0xffffffff ; ret
0x0000020000209fb4 : dec eax ; jns 0x20000209fad ; mov eax, edx ; ret
0x0000020000209fb4 : dec eax ; jns 0x20000209fae ; mov eax, edx ; ret
0x0000020000208a34 : dec eax ; lock or dword ptr [r10], eax ; ret
0x000002000015da68 : dec eax ; mov byte ptr [rcx], al ; jne 0x2000015da69 ; mov rax, r11 ; ret
0x00000200005f5fd2 : dec eax ; not eax ; lock and dword ptr [r8], eax ; ret
0x0000020000220705 : dec eax ; or rax, r8 ; jmp 0x20000220724
0x00000200000ffb23 : dec eax ; ret
0x00000200000e19c4 : dec eax ; test eax, 0xffffff ; je 0x200000e19d7 ; ret
0x0000020000115ce2 : dec eax ; xchg qword ptr [rcx], rax ; ret
0x00000200000ecfb6 : dec ebx ; jmp 0x200000ecd9c
0x0000020000180efd : dec ebx ; jmp 0x20000180e0a
0x000002000008df8a : dec ebx ; jne 0x2000008df85 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f8dba : dec ebx ; jne 0x200000f8d99 ; ret
0x00000200001cbf6e : dec ebx ; jne 0x200001cbf12 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001dc677 : dec ebx ; jne 0x200001dc657 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004b4fb4 : dec ebx ; jne 0x200004b4f5a ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000e1e87 : dec ecx ; je 0x200000e1e50 ; jmp 0x200000e1e84
0x000002000048ab6b : dec ecx ; je 0x2000058388c ; ret
0x00000200006329c9 : dec ecx ; je 0x200006329dc ; mov eax, 0xc000000d ; ret
0x00000200000cfaeb : dec ecx ; jmp 0x200000cfada
0x00000200000c3957 : dec ecx ; jne 0x200000c394a ; ret
0x00000200000e1e1b : dec ecx ; jne 0x200000e1e90 ; mov eax, 2 ; ret
0x00000200000e1e67 : dec ecx ; jne 0x200000e1e96 ; mov eax, 0x10 ; ret
0x00000200000f8b56 : dec ecx ; jne 0x200000f8b52 ; ret
0x000002000010a3de : dec ecx ; jne 0x2000010a3f3 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000010a3fd : dec ecx ; jne 0x2000010a418 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x0000020000132f3a : dec ecx ; jne 0x20000132f28 ; ret
0x0000020000138876 : dec ecx ; jne 0x20000138866 ; mov al, dl ; ret
0x000002000013f999 : dec ecx ; jne 0x2000013f945 ; mov eax, edx ; ret
0x000002000013f999 : dec ecx ; jne 0x2000013f946 ; mov eax, edx ; ret
0x00000200001da4e5 : dec ecx ; jne 0x200001da4e1 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x000002000021039c : dec ecx ; jne 0x2000021038b ; ret
0x0000020000402b28 : dec ecx ; jne 0x20000402b37 ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000402b30 : dec ecx ; jne 0x20000402b3f ; lea eax, dword ptr [rcx + 2] ; ret
0x0000020000402b40 : dec ecx ; jne 0x20000402b5b ; lea eax, dword ptr [rcx + 5] ; ret
0x000002000042bb4a : dec ecx ; jne 0x2000042bb45 ; ret
0x0000020000491e2c : dec ecx ; jne 0x20000491e12 ; ret
0x000002000051de9c : dec ecx ; jne 0x2000051de99 ; ret
0x000002000065d144 : dec ecx ; jne 0x2000065d12e ; ret
0x000002000014034a : dec edx ; cmp r8, r10 ; jb 0x20000140341 ; ret
0x0000020000033710 : dec edx ; je 0x2000003373a ; mov rax, r8 ; ret
0x000002000067256a : dec edx ; je 0x20000672577 ; xor eax, eax ; ret
0x00000200000ece61 : dec edx ; jmp 0x200000eccd1
0x000002000008e74c : dec edx ; jne 0x2000008e741 ; ret
0x00000200001000d0 : dec edx ; jne 0x200001000c0 ; ret
0x000002000010227e : dec edx ; jne 0x2000010227a ; add rsp, 0x28 ; ret
0x000002000014a914 : dec edx ; jne 0x2000014a8ed ; ret
0x0000020000159f27 : dec edx ; jne 0x20000159ed9 ; lock or byte ptr [rsp], 0 ; ret
0x000002000021eaeb : dec edx ; jne 0x2000021ead4 ; ret
0x000002000036dd7c : dec edx ; jne 0x2000036dd6d ; ret
0x000002000041c4b0 : dec edx ; jne 0x2000041c483 ; ret
0x000002000042e830 : dec edx ; jne 0x2000042e825 ; ret
0x00000200004832a1 : dec edx ; jne 0x20000483286 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004a3857 : dec edx ; jne 0x200004a3850 ; ret
0x00000200005b5c7e : dec edx ; jne 0x200005b5c6e ; mov eax, r8d ; ret
0x000002000066edfa : dec edx ; jne 0x2000066edf6 ; xor eax, eax ; ret
0x0000020000674040 : dec edx ; jne 0x20000674028 ; ret
0x0000020000105e76 : dec edx ; mov dword ptr [r8 + 4], r10d ; ret
0x00000200000fdb50 : dec edx ; mov dword ptr [rax + 4], edx ; ret
0x00000200001ddb92 : dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c2b3f : dec esp ; add rsp, 0x28 ; ret
0x0000020000686e11 : dec esp ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001f1e98 : dec esp ; add rsp, 0x38 ; ret
0x0000020000378538 : dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004ffe66 : dec esp ; and qword ptr [rcx], 0 ; ret
0x0000020000574cea : dec esp ; mov eax, 0xc000000d ; jmp 0x20000450fb1
0x0000020000169470 : dec esp ; mov eax, 0xc0000061 ; jmp 0x2000003568d
0x0000020000036096 : dec esp ; mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000360a9 ; ret
0x000002000015e366 : dec esp ; mov eax, dword ptr [rip + 0x55acce] ; ret
0x0000020000727f00 : dec esp ; mov rcx, r11 ; call rbx
0x00000200003d1fde : dec esp ; mov rcx, rbp ; call 0x200003be24b
0x000002000019ce04 : dec esp ; mov rcx, rbx ; call 0x200001d90e3
0x000002000019cee6 : dec esp ; mov rdx, qword ptr [rsp + 0x28] ; call 0x200001d9195
0x0000020000014be3 : dec esp ; ret
0x00000200001cabc3 : dec esp ; xor al, al ; add rsp, 0x38 ; ret
0x000002000021a339 : dec esp ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000082347 : dec qword ptr [r8 - 0x75] ; ret
0x000002000066f27e : dec qword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x00000200000ad767 : dec qword ptr [rax - 0x75] ; ret 0x3349
0x000002000005b06f : dec qword ptr [rax - 0x75] ; ret 0x48f0
0x000002000007b288 : dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200003eddb4 : dec qword ptr [rbx + r8 - 0x36] ; and r9, rcx ; jmp 0x200003edd89
0x0000020000070965 : dec qword ptr [rcx + 0xb484075] ; ret 0xc123
0x00000200000ad8e6 : dec qword ptr [rcx + 3] ; ret
0x0000020000140349 : dec r10 ; cmp r8, r10 ; jb 0x20000140342 ; ret
0x000002000008e74b : dec r10 ; jne 0x2000008e742 ; ret
0x000002000014a913 : dec r10 ; jne 0x2000014a8ee ; ret
0x000002000021eaea : dec r10 ; jne 0x2000021ead5 ; ret
0x000002000041c4af : dec r10 ; jne 0x2000041c484 ; ret
0x000002000067403f : dec r10 ; jne 0x20000674029 ; ret
0x00000200000ece60 : dec r10d ; jmp 0x200000eccd2
0x0000020000105e75 : dec r10d ; mov dword ptr [r8 + 4], r10d ; ret
0x00000200000f8db9 : dec r11 ; jne 0x200000f8d9a ; ret
0x00000200000ecfb5 : dec r11d ; jmp 0x200000ecd9d
0x000002000012ee3c : dec r8 ; jne 0x2000012ee1a ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001411aa : dec r8 ; jne 0x200001411a8 ; xor rax, rax ; ret
0x0000020000158528 : dec r8 ; jne 0x20000158525 ; ret
0x000002000015dc05 : dec r8 ; jne 0x2000015dc05 ; ret
0x000002000015dcb3 : dec r8 ; jne 0x2000015dcb3 ; ret
0x00000200001b9b89 : dec r8 ; jne 0x200001b9b7a ; jmp 0x2000013b784
0x00000200001ff06f : dec r8 ; jne 0x200001ff066 ; ret
0x00000200006ed786 : dec r8 ; jne 0x200006ed783 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200001d69fa : dec r8d ; jne 0x200001d69d1 ; ret
0x000002000065d518 : dec r8d ; jne 0x2000065d515 ; ret
0x00000200001d92eb : dec r8d ; jns 0x200001d92e6 ; or eax, 0xffffffff ; ret
0x0000020000209fb3 : dec r8d ; jns 0x20000209fae ; mov eax, edx ; ret
0x0000020000209fb3 : dec r8d ; jns 0x20000209faf ; mov eax, edx ; ret
0x00000200001d92ea : dec r8w ; jns 0x200001d92e7 ; or eax, 0xffffffff ; ret
0x00000200000c3956 : dec r9 ; jne 0x200000c394b ; ret
0x0000020000132f39 : dec r9 ; jne 0x20000132f29 ; ret
0x0000020000138875 : dec r9 ; jne 0x20000138867 ; mov al, dl ; ret
0x000002000013f998 : dec r9 ; jne 0x2000013f946 ; mov eax, edx ; ret
0x000002000013f998 : dec r9 ; jne 0x2000013f947 ; mov eax, edx ; ret
0x0000020000491e2b : dec r9 ; jne 0x20000491e13 ; ret
0x000002000065d143 : dec r9 ; jne 0x2000065d12f ; ret
0x00000200000cfaea : dec r9d ; jmp 0x200000cfadb
0x00000200004f709e : dec rax ; add rax, rdx ; jmp 0x200004f703e
0x00000200004f709d : dec rax ; add rax, rdx ; jmp 0x200004f703f
0x0000020000143f25 : dec rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ffa83 : dec rax ; jne 0x200000ffa44 ; ret
0x000002000012cfd1 : dec rax ; jne 0x2000012cfcf ; mov rax, rcx ; ret
0x00000200003ec684 : dec rax ; jne 0x200003ec685 ; mov rax, r9 ; ret
0x0000020000425a08 : dec rax ; jne 0x20000425a02 ; ret
0x0000020000142029 : dec rax ; ret
0x0000020000115ce1 : dec rax ; xchg qword ptr [rcx], rax ; ret
0x00000200000f8b55 : dec rcx ; jne 0x200000f8b53 ; ret
0x000002000021039b : dec rcx ; jne 0x2000021038c ; ret
0x000002000051de9b : dec rcx ; jne 0x2000051de9a ; ret
0x00000200001000cf : dec rdx ; jne 0x200001000c1 ; ret
0x000002000010227d : dec rdx ; jne 0x2000010227b ; add rsp, 0x28 ; ret
0x000002000036dd7b : dec rdx ; jne 0x2000036dd6e ; ret
0x000002000042e82f : dec rdx ; jne 0x2000042e826 ; ret
0x00000200004a3856 : dec rdx ; jne 0x200004a3851 ; ret
0x00000200005b5c7d : dec rdx ; jne 0x200005b5c6f ; mov eax, r8d ; ret
0x000002000066edf9 : dec rdx ; jne 0x2000066edf7 ; xor eax, eax ; ret
0x00000200000b1d19 : dec word ptr [rax + 0x1e4] ; ret
0x00000200000eb739 : dec word ptr [rax + 0x1e6] ; ret
0x000002000059045a : dec word ptr [rbx + 0x1e6] ; jmp 0x200004ac6ec
0x0000020000118668 : dec word ptr [rcx + 0x1e4] ; ret
0x0000020000519d16 : div al ; ret 0x48ff
0x00000200003c02df : div bh ; ret 0
0x00000200004c1b83 : div bh ; ret 0xfff0
0x0000020000439787 : div bh ; ret 0xfffe
0x0000020000441641 : div byte ptr [rax + rcx + 0x49] ; mov ecx, esi ; call 0x20000068fd9
0x00000200005fcd33 : div byte ptr [rax + rdi - 0xa] ; ret
0x000002000043933c : div byte ptr [rax + rdx + 0x48] ; mov ecx, esi ; call 0x20000063d9d
0x0000020000553db6 : div byte ptr [rax - 0xa] ; ret
0x000002000027ef09 : div byte ptr [rax] ; ret
0x00000200005fd222 : div byte ptr [rbp + rbx*2 - 0xa] ; ret
0x0000020000141985 : div byte ptr [rbp - 0x47] ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x00000200001418f2 : div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013fe7e : div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x00000200003efc8a : div byte ptr [rbx] ; dec dword ptr [rbp + rcx*4 + 0x25] ; sbb al, 0x4f ; ret 0x48ff
0x0000020000649f60 : div byte ptr [rbx] ; jmp qword ptr [rcx]
0x000002000011b761 : div byte ptr [rdx - 0x75] ; ret
0x00000200003e98b0 : div byte ptr [rdx - 0xa] ; ret
0x0000020000451241 : div byte ptr [rdx - 9] ; ret
0x00000200001ad47b : div byte ptr [rsi + rcx + 0x3b] ; ret 0xe76
0x00000200005fcd92 : div byte ptr [rsi + rdx - 0xa] ; ret
0x0000020000147235 : div byte ptr [rsi + rsi - 0xa] ; ret
0x0000020000382186 : div byte ptr [rsi - 0x7c990023] ; ret
0x00000200001cd999 : div byte ptr [rsp + rax + 0xb] ; ret
0x00000200001e6cbd : div byte ptr [rsp + rdx - 1] ; ret 0xc748
0x000002000012605a : div dh ; ret
0x0000020000074d51 : div dh ; ret 0x7507
0x00000200004fd57c : div dword ptr [rcx + 8] ; ret
0x000002000013c67d : div dword ptr [rdi + rdx] ; add dh, dh ; ret
0x0000020000202669 : div eax ; ret
0x00000200003d3309 : div ebp ; leave ; push rsi ; ret
0x000002000018fe7c : div ecx ; mov rax, rdx ; ret
0x000002000008cc11 : div ecx ; ret
0x00000200000f0af3 : div edi ; dec dword ptr [rax - 0x75] ; fadd dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x0000020000193066 : div edi ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000193067 : div edx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000600732 : div esi ; ret 0x7402
0x0000020000600731 : div r14d ; ret 0x7402
0x0000020000202668 : div r8 ; ret
0x000002000018fe7b : div rcx ; mov rax, rdx ; ret
0x00000200003ad352 : emms ; add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x00000200004f9932 : emms ; sal byte ptr [rdx], 0xc0 ; ret
0x00000200006ed788 : enter -0x108b, -0x3f ; loop 0x200006ed7ad ; or eax, edx ; ret
0x00000200006ed788 : enter -0x108b, -0x3f ; loop 0x200006ed7ae ; or eax, edx ; ret
0x00000200004e9c6a : enter -0x108e, 0x69 ; ret 0xb0a5
0x000002000051e07c : enter -0x118, -9 ; ret
0x00000200001cc42f : enter -0x118b, -0x75 ; ret 0x8b48
0x000002000016962f : enter -0x14, -1 ; ret
0x00000200004a98b6 : enter -0x14f0, -0x16 ; bts eax, 0xc ; ret
0x0000020000383cd0 : enter -0x14fe, -0x34 ; mov eax, 0xc000000d ; ret
0x000002000042a57d : enter -0x1575, 0x33 ; ret 0xd233
0x00000200005903e6 : enter -0x1601, 0x3a ; ret 0xfff1
0x00000200001406c8 : enter -0x168e, 0x49 ; mov eax, edx ; ret
0x0000020000174811 : enter -0x16f8, -0x72 ; scasb al, byte ptr [rdi] ; out dx, al ; push rsi ; ret 0x7401
0x0000020000174eeb : enter -0x16f8, 0x22 ; mov ecx, 0xf641ffee ; ret
0x000002000018a73b : enter -0x16f8, 0x74 ; ret
0x00000200006f22c3 : enter -0x1701, 0x7e ; call rsp
0x000002000043bc74 : enter -0x172c, -1 ; call 0x2000006a617
0x000002000051ad5d : enter -0x1a18, 0x2c ; ret 0x48ff
0x00000200001b9b8b : enter -0x1c8b, -0x17 ; call 0x200221b93b6
0x0000020000140c81 : enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x00000200003f25c5 : enter -0x1e80, 7 ; jne 0x200003f25d8 ; mov al, r9b ; ret
0x0000020000124b36 : enter -0x1f2d, -9 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x0000020000100fd4 : enter -0x218b, -1 ; ret
0x00000200003f4ce7 : enter -0x2418, 0x20 ; ret
0x0000020000443a53 : enter -0x2418, 0xb ; enter 0x48ff, -0x75 ; ret
0x000002000051855a : enter -0x29, -0x75 ; ret
0x00000200005a4d3e : enter -0x298d, -0x17 ; ret
0x000002000015a825 : enter -0x2a18, 0x23 ; add byte ptr [rax], al ; nop ; ret
0x000002000057d6ec : enter -0x2cd9, -1 ; ret
0x00000200007195a9 : enter -0x2e18, 0x42 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f5fd3 : enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x0000020000010c02 : enter -0x31a1, -8 ; call rdx
0x000002000047c561 : enter -0x34, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004f4123 : enter -0x3417, -0x47 ; ret
0x0000020000674c50 : enter -0x3518, 1 ; ret 0x48ff
0x0000020000603a71 : enter -0x36, -0xa ; ret
0x0000020000176849 : enter -0x3875, 0x74 ; add eax, dword ptr [rcx - 0x75] ; ret
0x000002000063aff2 : enter -0x3a, -0x18 ; ret 0x9ecb
0x000002000072f043 : enter -0x3c01, -0x48 ; add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x00000200000e2ae0 : enter -0x3c01, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000643d63 : enter -0x3c01, -0x75 ; ret 0xccc3
0x00000200000b867d : enter -0x3e75, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000045f9e9 : enter -0x3e75, 0x48 ; add esp, 0x28 ; ret
0x0000020000089f1d : enter -0x3eb8, -0x20 ; and byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000017e660 : enter -0x3eb8, -6 ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x0000020000054c16 : enter -0x3fcd, 0x48 ; cmp ecx, edx ; seta al ; ret
0x0000020000073e7d : enter -0x3fcd, 0x49 ; cmp dword ptr [rcx], ecx ; seta al ; ret
0x00000200000ea247 : enter -0x3fe5, 0x23 ; add eax, 0x266e50 ; ret
0x00000200004e64f4 : enter -0x3fe5, 0x25 ; add al, 0 ; add al, al ; ret
0x00000200006f8d44 : enter -0x45bf, 0 ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], cl ; ret
0x0000020000148f37 : enter -0x47b8, 0x7f ; out 0x30, eax ; ret 0x3b88
0x0000020000653ccd : enter -0x48f1, 0x45 ; fbld dword ptr [rsi + 0x23] ; ret 0xb66
0x0000020000052286 : enter -0x48f1, 0x45 ; ret 0xc80b
0x00000200001a21cc : enter -0x48f1, 4 ; ret
0x0000020000070c56 : enter -0x49f1, -0x7f ; ret
0x00000200004e1951 : enter -0x4a18, -0x5f ; ret
0x0000020000014a66 : enter -0x4b0d, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x00000200004d0033 : enter -0x4c18, 0x5b ; ret 0x45ff
0x0000020000432517 : enter -0x4c18, 0x6a ; ret
0x000002000060c53c : enter -0x4d, 0x48 ; add esp, 0x48 ; ret
0x0000020000671343 : enter -0x52, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000e19c5 : enter -0x57, -1 ; inc dword ptr [rax] ; je 0x200000e19d6 ; ret
0x0000020000126e6f : enter -0x6418, -0x17 ; dec dword ptr [rax - 0x75] ; ret
0x00000200006f6e55 : enter -0x66, -0x7b ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001e5f55 : enter -0x68f1, -0x40 ; ret
0x000002000008f0df : enter -0x6980, -0x68 ; add byte ptr [rax - 0x75], cl ; ret 0xf748
0x000002000013accd : enter -0x6df1, -0x40 ; ret
0x00000200005388b5 : enter -0x6f01, -0x17 ; out dx, al ; ret
0x0000020000533fc2 : enter -0x718, -0x65 ; ret 0x33ff
0x000002000059e22a : enter -0x71f1, 0x7e ; ret
0x0000020000427393 : enter -0x72b4, 0x44 ; and al, 0x68 ; xor edx, edx ; call r11
0x000002000048dad9 : enter -0x72b8, 0x1c ; ret 0x8d41
0x00000200000a57af : enter -0x72b8, 0x46 ; js 0x200000a57cb ; xchg eax, esp ; ret 0x8948
0x0000020000514dbd : enter -0x72b8, 0x4f ; pop rcx ; call rax
0x000002000021654b : enter -0x72b8, 0x50 ; adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000547f38 : enter -0x72b8, 4 ; nop ; ret
0x00000200000c2c69 : enter -0x72b8, 4 ; or byte ptr [rax + 0x39], 0x9c ; ret 0x6740
0x00000200000b0536 : enter -0x72b8, 5 ; ret 0xf50a
0x00000200000b8753 : enter -0x72bb, 0x14 ; ret 0x8b49
0x000002000051eeb5 : enter -0x72bc, 0x42 ; xor al, ch ; add ebp, ebp ; ret
0x00000200005d9984 : enter -0x72bf, 0x50 ; add eax, ebp ; ret 0xa966
0x00000200004c220c : enter -0x7401, -0x3d ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006ed1f1 : enter -0x7401, 5 ; ret
0x00000200003d2224 : enter -0x74b4, -0x3e ; mov dl, sil ; call r10
0x000002000022b32e : enter -0x74b4, -0x3f ; mov rax, r8 ; ret
0x0000020000729fa0 : enter -0x74b7, -0x3f ; ret
0x0000020000085a3e : enter -0x74b7, 0x44 ; ret 0x4908
0x00000200003b2811 : enter -0x74b7, 0x58 ; and dh, dh ; ret
0x000002000009b5eb : enter -0x74b8, -0x2a ; call 0x2000009782e
0x00000200004480b7 : enter -0x74b8, -0x31 ; call 0x20000068fd7
0x00000200006535a8 : enter -0x74b8, -0x3f ; add rsp, 0x28 ; ret
0x00000200000ed254 : enter -0x74b8, -0x3f ; add rsp, 0x38 ; ret
0x0000020000207484 : enter -0x74b8, -0x3f ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004ac5ce : enter -0x74b8, -0x3f ; ret
0x00000200001e9d4d : enter -0x74b8, 0x14 ; adc esi, esi ; ret 0x7401
0x00000200001e4a5f : enter -0x74b8, 0x43 ; sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x000002000012d68f : enter -0x74b8, 0x47 ; sub byte ptr [rax + 0x23], cl ; ret 0xb48
0x00000200004935a9 : enter -0x74b8, 0x4d ; mov r8, rdi ; call rax
0x00000200004b0032 : enter -0x74b8, 0x70 ; or byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000158504 : enter -0x74b8, 4 ; adc dword ptr [rax + 0xf], ecx ; ret
0x00000200000eaaec : enter -0x74b8, 4 ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000020000393eaf : enter -0x74b8, 4 ; enter 0x349, -0x3e ; ret
0x0000020000199415 : enter -0x74b8, 5 ; jrcxz 0x200001993a3 ; sbb eax, dword ptr [rax] ; call rax
0x0000020000140f95 : enter -0x74b8, 5 ; ret
0x000002000006160b : enter -0x74bb, 0x24 ; mov ecx, gs ; ret
0x000002000040dd7e : enter -0x74bc, -0x40 ; call rsi
0x00000200003ea585 : enter -0x74bc, 0x44 ; enter 0x4c08, 3 ; ret 0x3b49
0x00000200001c265f : enter -0x74be, 4 ; ret 0x488d
0x00000200000bfe56 : enter -0x74bf, -0x3f ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009d3f9 : enter -0x74bf, -0x3f ; add rsp, 0x38 ; ret
0x00000200001e60b8 : enter -0x74bf, -0x3f ; mov word ptr [r8 + 0xa], cx ; ret
0x0000020000140b98 : enter -0x74bf, -0x3f ; ret
0x00000200000acdf3 : enter -0x75bf, -0x3e ; add rsp, 0x28 ; ret
0x000002000043f6b2 : enter -0x769a, 0x75 ; ret 0xa0e8
0x0000020000538504 : enter -0x76b4, 0x75 ; jo 0x20000538551 ; call qword ptr [rsi]
0x00000200000fdc5e : enter -0x76b5, 0x4c ; ror dword ptr [rax], cl ; ret
0x0000020000197209 : enter -0x76b6, 0x44 ; ret
0x00000200006d1709 : enter -0x76b8, 0x44 ; and al, 0x58 ; call r10
0x00000200006d0dfc : enter -0x76b8, 0x44 ; and al, 0x60 ; call r10
0x00000200000f3d00 : enter -0x76b8, 0x4b ; sub byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000490b7a : enter -0x76b8, 0x58 ; or al, ch ; clc ; xchg eax, ecx ; ret
0x000002000011b0b4 : enter -0x76b8, 0xa ; ret
0x00000200007225ff : enter -0x76b8, 5 ; in al, dx ; ret 0x48ff
0x00000200000f5864 : enter -0x77d, 2 ; jl 0x200000f5871 ; ret
0x0000020000115ce3 : enter -0x78b8, 1 ; ret
0x00000200003e67b0 : enter -0x78f1, -0x5f ; ret 0x16
0x0000020000187ca8 : enter -0x78f1, -0x80 ; int1 ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x00000200003e66e2 : enter -0x78f1, 0x15 ; ret
0x000002000041f584 : enter -0x79f1, 0x31 ; xor edx, dword ptr [rax + rax] ; xor al, al ; ret
0x000002000037e034 : enter -0x7ab8, -0x2e ; jne 0x2000037e047 ; mov eax, r10d ; jmp 0x2000037e050
0x000002000062e12e : enter -0x7ab8, -0x37 ; jne 0x2000062e120 ; mov rax, rcx ; ret
0x00000200003cab28 : enter -0x7af1, -0x19 ; rcl dword ptr [rdi], cl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006f6c24 : enter -0x7af1, -0x39 ; mov al, 2 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000c8c49 : enter -0x7af1, 0x18 ; ret
0x00000200000f1b97 : enter -0x7bf1, -0x36 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x00000200003f9184 : enter -0x7bf1, -0x72 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x349
0x000002000036daec : enter -0x7bf1, -0x75 ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; mov al, 1 ; ret
0x0000020000728a17 : enter -0x7cb8, -0x3e ; or byte ptr [rax + 0x2b], cl ; ret
0x000002000020f156 : enter -0x7cb8, 0x64 ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200005648bf : enter -0x7cbf, -0x3f ; add ecx, dword ptr [rax - 1] ; ret 0x8c88
0x0000020000534af8 : enter -0x7d18, -0x73 ; ret 0x49ff
0x000002000012ae40 : enter -0x7df1, 0x7d ; add al, 0 ; add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x0000020000621c59 : enter -0x901, -0x3d ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x00000200006209aa : enter -0x901, -0x3d ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x0000020000132f38 : enter -0xb7, -0x37 ; jne 0x20000132f2a ; ret
0x000002000012cfd0 : enter -0xb8, -0x38 ; jne 0x2000012cfd0 ; mov rax, rcx ; ret
0x00000200003ec686 : enter -0xb8b, 0x49 ; mov eax, ecx ; ret
0x000002000051fec0 : enter -0xc67, -1 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051c283 : enter -0xc8b, -0x75 ; ret
0x000002000050d4d1 : enter -0xc8b, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000022b3f4 : enter -0xcd9, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012cfd3 : enter -0xe8b, 0x48 ; mov eax, ecx ; ret
0x00000200001411ac : enter -0xe8b, 0x48 ; xor eax, eax ; ret
0x0000020000209fb5 : enter -0xf87, -0x75 ; ret 0x41c3
0x00000200004c3a41 : enter -0xf8b, -0x75 ; ret 0x8b48
0x00000200004b192b : enter -0xf8e, -0x7d ; loopne 0x200004b1956 ; ret
0x00000200000c5dee : enter -9, 0x48 ; add esp, 0x28 ; ret
0x000002000041078f : enter 0, 0 ; call r10
0x0000020000486306 : enter 0, 0 ; inc rdx ; jmp 0x200004862ea
0x0000020000579535 : enter 0, 0 ; jmp 0x200005795b9
0x000002000057f46c : enter 0, 0 ; or ecx, ebp ; ret
0x00000200005007d7 : enter 0, 0 ; ret
0x00000200000e7b6a : enter 0, 0 ; shr al, 4 ; and al, 1 ; ret
0x0000020000223254 : enter 0x12, 0 ; ret
0x000002000028d3e5 : enter 0x14, 1 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; jmp qword ptr [rcx]
0x0000020000713d2e : enter 0x148, 0xd ; sub bl, al ; ret
0x000002000002a840 : enter 0x15ff, -0x6f ; mov eax, 0xb60f0031 ; ret
0x00000200001dcd92 : enter 0x16, -0x18 ; ret
0x00000200005e1f53 : enter 0x1674, -0x75 ; ret
0x00000200003cc601 : enter 0x17, -0xa ; ret
0x000002000015da69 : enter 0x188, 0x75 ; mov rax, r11 ; ret
0x00000200000727a7 : enter 0x1b48, -0x40 ; and rax, rcx ; ret
0x00000200005b5e63 : enter 0x1b9, 0 ; add byte ptr [rax], al ; call rax
0x00000200006d7782 : enter 0x2575, -0x7d ; ret
0x00000200006dcdd4 : enter 0x2675, -0x7d ; ret
0x000002000066e1ba : enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x00000200003dafdb : enter 0x2b45, -0x38 ; mov eax, r9d ; ret
0x0000020000718487 : enter 0x2f72, 0x48 ; add esp, 0x28 ; ret
0x00000200003daa5f : enter 0x3345, -0x38 ; mov eax, r9d ; ret
0x0000020000188095 : enter 0x3345, -0x40 ; call 0x200001f439e
0x00000200001ae22e : enter 0x3349, -0x3f ; mov rcx, rax ; call rdx
0x000002000012e081 : enter 0x33c3, -0x40 ; ret
0x0000020000475603 : enter 0x33e8, -0x14 ; ret
0x0000020000450e35 : enter 0x33ff, -0x40 ; add rsp, 0x28 ; ret
0x00000200006fc3d0 : enter 0x3474, -0x75 ; ret 0x8d48
0x00000200005e165e : enter 0x348, -0x2d ; call 0x2000015d886
0x00000200004f70a0 : enter 0x348, -0x3e ; jmp 0x200004f703c
0x0000020000393eb3 : enter 0x349, -0x3e ; ret
0x0000020000537c16 : enter 0x34e8, 1 ; ret 0x4cff
0x0000020000708b06 : enter 0x389, 0x3b ; ret 0x840f
0x000002000012ae92 : enter 0x394d, 0x6c ; enter 0xf08, -0x7b ; ret
0x00000200004a8db8 : enter 0x3b45, -0x3f ; jb 0x200004a8da5 ; mov eax, edx ; ret
0x00000200004a8db8 : enter 0x3b45, -0x3f ; jb 0x200004a8da6 ; mov eax, edx ; ret
0x00000200000d267d : enter 0x3b49, -0x37 ; setbe dl ; mov eax, edx ; ret
0x00000200004bc272 : enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x000002000006ce54 : enter 0x3b4c, -0x37 ; sbb eax, eax ; ret
0x0000020000634c4d : enter 0x3b4c, 5 ; stosd dword ptr [rdi], eax ; ret
0x00000200004d7eb0 : enter 0x3b9, 0 ; add byte ptr [rax], al ; call 0x200000ff579
0x000002000043c58f : enter 0x3be8, -0x36 ; ret 0x48ff
0x0000020000250844 : enter 0x40e3, 0 ; ret 0x40e4
0x0000020000133fd9 : enter 0x4166, 0x3b ; ret
0x000002000015d8c8 : enter 0x4188, -1 ; jne 0x2000015d8c9 ; mov rax, r11 ; ret
0x000002000051ef39 : enter 0x41e8, -0x17 ; ret
0x0000020000590a1e : enter 0x41ff, -0x78 ; adc cl, byte ptr [rcx - 1] ; ret 0x344
0x0000020000130063 : enter 0x41ff, 0x2b ; ret 0x344
0x000002000051a3c0 : enter 0x428, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000037f168 : enter 0x44ff, -0x76 ; ret
0x000002000071f6eb : enter 0x44ff, 0xf ; mov bh, 5 ; adc ebx, dword ptr [rcx] ; ret
0x00000200004bc275 : enter 0x450f, -0x3e ; ret
0x00000200002154b9 : enter 0x473, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x0000020000383472 : enter 0x475, -0x75 ; ret 0xb5eb
0x00000200000267c0 : enter 0x477, 0x48 ; sub eax, ecx ; ret
0x000002000053d566 : enter 0x4801, -0x7d ; ret
0x00000200000894fd : enter 0x4801, 0x3b ; ret 0x1a74
0x0000020000178661 : enter 0x4803, -9 ; ret 0xfff
0x00000200002147c6 : enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000023509c : enter 0x4808, -1 ; ret
0x000002000065ac51 : enter 0x4810, 0xb ; ret 0x8949
0x0000020000039be0 : enter 0x4821, 0xf ; mov edx, 0x8b4407f0 ; ret 0x2349
0x000002000002e3cf : enter 0x4821, 0xf ; mov edx, 0x8b4407f0 ; ret 0x8148
0x00000200001c0b81 : enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x00000200004a03a6 : enter 0x48cc, -0x73 ; add eax, 0x1b4cf1 ; ret
0x00000200001f1546 : enter 0x48ff, -0x3f ; call qword ptr [rax]
0x00000200001fb0d3 : enter 0x48ff, -0x3f ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003e545e : enter 0x48ff, -0x75 ; ret
0x000002000043c5b0 : enter 0x48ff, -0x75 ; retf ; call 0x20000068fd8
0x00000200004ee9c4 : enter 0x48ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000045c8b0 : enter 0x48ff, -0x7f ; ret
0x000002000065bb9d : enter 0x48ff, -1 ; ret
0x00000200001894e1 : enter 0x48ff, 0x2b ; ret 0x348
0x0000020000079046 : enter 0x4901, 0x3b ; ret
0x00000200006f1e1e : enter 0x4921, 0x3b ; ret 0x830f
0x00000200003ed5ab : enter 0x4925, -0x7d ; ret
0x00000200006324df : enter 0x49ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000050e709 : enter 0x49ff, -0x7d ; ret 0x4d04
0x00000200003ea589 : enter 0x4c08, 3 ; ret 0x3b49
0x000002000045c0b5 : enter 0x4c89, 0x24 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006f70cc : enter 0x4d42, 0x23 ; ret 0x8b49
0x0000020000538367 : enter 0x53e8, 0x58 ; ret 0x4cff
0x00000200001de80a : enter 0x54e8, 0x27 ; dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000010b8d8 : enter 0x572, 0x48 ; add esp, 0x48 ; ret
0x00000200001ed6a1 : enter 0x575, 0x41 ; mov eax, edx ; jmp 0x200001ed6b0
0x00000200001851ee : enter 0x589, 0x7b ; add dl, byte ptr [rdx] ; add byte ptr [rcx + 3], al ; ret
0x00000200003a51e3 : enter 0x58b8, 0 ; add al, al ; ret
0x00000200005b4e06 : enter 0x58e8, -0x22 ; ret
0x00000200006748bc : enter 0x5ee8, 5 ; ret 0x48ff
0x00000200001513a2 : enter 0x6602, -9 ; ret 0x100
0x00000200001392a9 : enter 0x6608, -0x77 ; push rbp ; add bh, bh ; ret 0x8341
0x0000020000157aff : enter 0x6608, 3 ; ret
0x00000200006f9ac5 : enter 0x673, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003d795e : enter 0x674, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000c446c : enter 0x675, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001ec3a4 : enter 0x676, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000b424c : enter 0x677, 0x45 ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x0000020000209083 : enter 0x677, 0x48 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004b22e5 : enter 0x7175, -0x75 ; ret
0x00000200004cca17 : enter 0x7573, -0x75 ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x000002000000eef8 : enter 0x75ca, -0x74 ; ret 0x5e78
0x0000020000674da4 : enter 0x76e8, 0 ; ret 0x48ff
0x0000020000141a7c : enter 0x774, -0xa ; ret 0x7507
0x00000200000f921f : enter 0x775, -0x75 ; add eax, 0x257df0 ; ret
0x000002000051d8de : enter 0x7ce8, 3 ; ret
0x0000020000162819 : enter 0x8b, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x0000020000162d54 : enter 0x8b, 0x48 ; add esp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200001630d5 : enter 0x8b, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000002000024b890 : enter 0x9c1, 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x000002000007289d : enter 0xa74, -9 ; ret 0x700
0x0000020000220706 : enter 0xb49, -0x40 ; jmp 0x20000220723
0x000002000051579f : enter 0xb8, 0x46 ; ret
0x00000200001b4459 : enter 0xc73, -0x75 ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x0000020000236468 : enter 0xdeb, -0xa ; ret 0x7440
0x00000200000a36ea : enter 0xe75, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000476777 : enter 0xf08, -0x7b ; jp 0x20000476787 ; add byte ptr [rax], al ; inc edx ; jmp 0x2000047676e
0x000002000012ae96 : enter 0xf08, -0x7b ; ret
0x00000200004a98a2 : enter 0xf20, -0x46 ; loop 0x200004a98c0 ; jb 0x200004a98c2 ; ret
0x00000200000f0cac : enter 0xf24, 0xa ; ret
0x000002000002a6e1 : enter 0xf41, -0x49 ; ret
0x000002000020abde : enter 0xf41, -0x49 ; ret 0x4166
0x000002000020f5a4 : enter 0xf41, -0x49 ; ret 0xc148
0x00000200005bfe54 : enter 0xf41, -0x49 ; ret 0xc149
0x000002000020abac : enter 0xf41, -0x49 ; ret 0xd166
0x000002000063151d : enter 0xf41, -0x4a ; add cl, byte ptr [rcx - 1] ; ret 0x692d
0x0000020000442955 : enter 0xf41, -0x4a ; or cl, byte ptr [rcx - 1] ; ret 0xe981
0x0000020000442841 : enter 0xf41, -0x4a ; or ecx, dword ptr [rcx - 1] ; ret
0x00000200000fb9bd : enter 0xf41, -0x4a ; ret
0x000002000050e07c : enter 0xf41, -0x4a ; ret 0x420f
0x000002000014265d : enter 0xf41, 0x44 ; fisttp qword ptr [rax + 0x63] ; ret
0x000002000014ae16 : enter 0xf44, -0x49 ; fisttp dword ptr [rax - 0x7d] ; ret 0x8320
0x00000200001d95f1 : enter 0xf44, -0x49 ; ret 0x4166
0x000002000018e944 : enter 0xf44, 0x46 ; ret 0x8b41
0x000002000070a9ea : enter 0xf45, -0x4a ; ret 0x8b41
0x000002000003b775 : enter 0xf45, -0x4a ; rol byte ptr [rcx + 0xf], 0xb6 ; ret 0x3b45
0x0000020000067902 : enter 0xf45, -0x4a ; ror byte ptr [rdi], 0xb6 ; ret 0xca3b
0x0000020000159f07 : enter 0xf48, -0x3d ; ror byte ptr [r8 + 0xf], 1 ; ret
0x000002000061fe64 : enter 0xff, 0x48 ; add esp, 0x40 ; pop rbx ; ret
0x0000020000192f7d : enter 0xff0, -0x4f ; or eax, 0x1236f2 ; ret
0x000002000065ac6d : enter 0xfff, -0x6c ; ret
0x000002000002fdc3 : enter 1, 0 ; add rsp, 0x28 ; ret
0x00000200000ead3d : enter 1, 0 ; ret
0x000002000010266b : enter 3, 0 ; ret
0x000002000015dfef : enter 4, 0 ; ret
0x00000200000fc59a : enter 4, 0x48 ; add esp, 0x70 ; pop rbp ; ret
0x0000020000434b52 : enter 6, 0 ; ret
0x000002000062d849 : enter 7, 0 ; add rsp, 0x48 ; ret
0x0000020000121711 : enter 8, 0x48 ; add esp, 0x38 ; ret
0x0000020000646d82 : fadd dword ptr [r11] ; ret 0xc23b
0x000002000061a786 : fadd dword ptr [rax + rax] ; add byte ptr [rcx + 3], al ; ret 0x8944
0x00000200003d4b78 : fadd dword ptr [rax + rax] ; add dh, dh ; ret
0x0000020000504129 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000200000af9e7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov dl, r12b ; call qword ptr [rax]
0x000002000038c78b : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000706d79 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000064e2e8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004130ac : fadd dword ptr [rbp + 0x28880fc0] ; ret 0x14
0x00000200003fb0e9 : fadd dword ptr [rbp + 0x37880fc0] ; ret 0x15
0x000002000064210b : fadd dword ptr [rbp + 0x3b] ; sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x000002000045bf61 : fadd dword ptr [rbp + 0x56880fc0] ; ret
0x000002000045bf23 : fadd dword ptr [rbp + 0x62880fc0] ; ret
0x00000200004130c7 : fadd dword ptr [rbp + 0xd880fc0] ; ret 0x14
0x00000200006e4797 : fadd dword ptr [rbp + 3] ; ret 0x348
0x00000200003fb036 : fadd dword ptr [rbp - 0x1577f040] ; ret 0x15
0x0000020000510bee : fadd dword ptr [rbp - 0x74578a40] ; ret
0x0000020000513780 : fadd dword ptr [rbp - 0x74d58640] ; ret
0x00000200004dc4a8 : fadd dword ptr [rbp - 0x74f78640] ; ret
0x00000200003e6160 : fadd dword ptr [rbp - 0x75] ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000174e28 : fadd dword ptr [rbp - 0x77] ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x000002000042ed57 : fadd dword ptr [rbx - 0x7bf00008] ; ret 0
0x00000200001ab112 : fadd dword ptr [rbx] ; ret 0x4589
0x0000020000646d83 : fadd dword ptr [rbx] ; ret 0xc23b
0x0000020000511270 : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200006e9273 : fadd dword ptr [rcx + 3] ; fisttp word ptr [rax - 0x7d] ; ret 0x3b10
0x000002000020ad24 : fadd dword ptr [rcx - 0x73] ; add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x00000200003dcc99 : fadd dword ptr [rcx - 0x75] ; ret
0x000002000012b08d : fadd dword ptr [rcx - 0x75] ; ret 0x8b44
0x00000200001f056b : fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x0000020000406743 : fadd dword ptr [rcx - 0x75] ; ret 0x8b4c
0x00000200004c7be2 : fadd dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006d2d24 : fadd dword ptr [rcx - 0x75] ; ret 0xc383
0x0000020000120034 : fadd dword ptr [rcx - 0x76] ; add eax, dword ptr [r9 + 0x32] ; ret
0x0000020000535939 : fadd dword ptr [rcx - 0x7d] ; ret 0xeb08
0x0000020000132912 : fadd dword ptr [rcx - 1] ; ret
0x00000200001027e9 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f0af8 : fadd dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x00000200001b1592 : fadd dword ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x000002000022620a : fadd dword ptr [rdi + rcx + 0x42] ; ret
0x000002000058e9c3 : fadd dword ptr [rip - 0x74b40000] ; ret
0x00000200000f1c1e : fadd qword ptr [r9 + 0x3b] ; ret 0x830f
0x000002000018ba95 : fadd qword ptr [rax - 1] ; ret
0x000002000047c175 : fadd qword ptr [rbp + 0x33] ; idiv bh ; ret
0x00000200006d6f08 : fadd qword ptr [rbp + 0x3b] ; ret 0x840f
0x00000200000f1c1f : fadd qword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200001d1f90 : fadd qword ptr [rcx - 0x75] ; call rcx
0x000002000005e41a : fadd qword ptr [rip - 0x28fcb700] ; jmp rdx
0x0000020000014706 : fadd qword ptr [rsi + rax + 0x46058678] ; ret 0x43ef
0x0000020000273c1c : fadd st(1), st(0) ; add dl, bl ; ret 0x36
0x00000200001fda8c : fadd st(1), st(0) ; call 0x20074e214b0
0x0000020000675166 : fadd st(2) ; call qword ptr [rax]
0x0000020000175738 : fadd st(5) ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200004dff9a : fadd st(7), st(0) ; dec dword ptr [rax - 0x75] ; ret
0x0000020000713a51 : faddp st(3) ; jmp qword ptr [rsi - 0x77]
0x000002000000f49b : faddp st(5) ; ret 0xd4f
0x0000020000653cd0 : fbld dword ptr [r14 + 0x23] ; ret 0xb66
0x000002000009a02d : fbld dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000446eed : fbld dword ptr [rax] ; ret 0x48ff
0x000002000048c6e7 : fbld dword ptr [rcx] ; add dh, dh ; ret
0x0000020000653cd1 : fbld dword ptr [rsi + 0x23] ; ret 0xb66
0x00000200005342ba : fbstp dword ptr [rbp + rcx - 0xa] ; ret
0x00000200001ee291 : fbstp dword ptr [rbp - 0x3b] ; jmp 0x200001ee2a4
0x00000200004e7e18 : fbstp dword ptr [rbx + 0x19] ; mov rcx, rbx ; call 0x2000011497d
0x0000020000408b9d : fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004efdf3 : fbstp dword ptr [rbx] ; shr al, cl ; and eax, 0x8affda50 ; ret
0x000002000000ed32 : fbstp dword ptr [rcx + 0x32188b65] ; ret
0x000002000068b13b : fbstp dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001db0e1 : fbstp dword ptr [rdx + rsi*2 - 0xa] ; ret
0x00000200005f6115 : fbstp dword ptr [rdx] ; int 0xff
0x0000020000671672 : fcmovb st(0), st(2) ; ret
0x0000020000715f7a : fcmovbe st(0), st(0) ; mov eax, 0x200f44ff ; ret 0x2b8
0x00000200000f3a4a : fcmovbe st(0), st(5) ; and eax, 0x92840f00 ; ret
0x00000200003d3846 : fcmove st(0), st(1) ; push rsi ; ret
0x00000200005d7466 : fcmove st(0), st(7) ; push rsi ; ret
0x00000200006902ce : fcmovnb st(0), st(0) ; dec dword ptr [rax - 0x75] ; ret
0x000002000043b420 : fcmovnb st(0), st(2) ; dec dword ptr [rax - 0x75] ; retf ; call 0x20000063ddd
0x000002000060274c : fcmovne st(0), st(2) ; push rsi ; ret
0x0000020000713a81 : fcmovnu st(0), st(5) ; ret
0x00000200005104e2 : fcmovu st(0), st(7) ; ret
0x0000020000204dc1 : fcom dword ptr [rbp] ; add dh, bh ; ret
0x000002000005362c : fcom dword ptr [rcx] ; add byte ptr [rsi + 0x3b], ah ; ret
0x0000020000726ed3 : fcom dword ptr [rsi - 0x7eb70002] ; ret
0x000002000009e85d : fcom qword ptr [rsi + rcx - 0x377cb700] ; add esi, esi ; ret 0xf04
0x00000200003e4635 : fcom qword ptr [rsi] ; add dh, dh ; ret 0xf38
0x000002000051f5c1 : fcomi st(7) ; ret 0
0x00000200004596b8 : fcomi st(7) ; ret 0xffff
0x000002000001d438 : fcomp dword ptr [r10] ; ret 0xa54d
0x00000200005c3134 : fcomp dword ptr [rax + rdi*4 - 1] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000015afa4 : fcomp dword ptr [rbx] ; add byte ptr [rax], al ; nop ; ret
0x0000020000638b2c : fcomp dword ptr [rbx] ; jmp qword ptr [rbx]
0x00000200001b6545 : fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x000002000001d439 : fcomp dword ptr [rdx] ; ret 0xa54d
0x0000020000573c9a : fcomp st(0), st(5) ; dec dword ptr [rbx + rcx*4 + 0x74] ; ret
0x000002000051ad59 : fcos ; add rcx, rax ; call 0x2000013da50
0x00000200003ad8ca : fcos ; add rsp, 0x18 ; ret
0x0000020000511660 : fcos ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000718e2a : fcos ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000714584 : fcos ; add rsp, 0x50 ; pop rbx ; ret
0x000002000050e9db : fcos ; call 0x20000139675
0x000002000050efc8 : fcos ; call 0x20000139711
0x000002000051164d : fcos ; call 0x20000139aa1
0x00000200004a8572 : fcos ; ret 0x1b9
0x0000020000511b51 : fcos ; test rax, rax ; je 0x20000511b61 ; call rax
0x00000200000d201c : fdecstp ; ret
0x00000200004ee941 : fdecstp ; ret 0x7404
0x000002000044640b : fdecstp ; ret 0x7502
0x000002000044d3f6 : fdecstp ; ret 0x7520
0x0000020000127f5f : fdiv dword ptr [r11] ; jmp qword ptr [rcx]
0x000002000044d86f : fdiv dword ptr [rbp + 7] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001faddc : fdiv dword ptr [rbp + rcx - 0xa] ; ret
0x00000200000bf49e : fdiv dword ptr [rbx + rsi + 0x2b] ; ret
0x0000020000127f60 : fdiv dword ptr [rbx] ; jmp qword ptr [rcx]
0x0000020000233aab : fdiv dword ptr [rcx + rdx - 0xa] ; ret
0x000002000062b553 : fdiv dword ptr [rcx - 0x3b7cb701] ; pop rax ; ret
0x00000200000287da : fdiv dword ptr [rcx] ; add bl, ch ; ret 0xdb84
0x000002000027d3c4 : fdiv qword ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200006f7ddc : fdiv qword ptr [rax - 1] ; ret
0x000002000027d3c5 : fdiv qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200001e89ea : fdiv qword ptr [rbp + rcx - 0xa] ; ret
0x00000200006037fc : fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x00000200004b209a : fdiv st(3) ; movq qword ptr [rbp - 0x18], mm0 ; call r14
0x000002000019ce32 : fdiv st(4) ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200001d90e4
0x000002000019cea2 : fdiv st(4) ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200001d90e5
0x00000200003f3d48 : fdiv st(5) ; ret
0x0000020000548570 : fdiv st(6) ; ret
0x000002000003089a : fdiv st(6) ; ret 0x7502
0x000002000010c673 : fdiv st(6) ; ret 0x750e
0x0000020000682a21 : fdiv st(6), st(0) ; dec dword ptr [rax - 0x75] ; ret
0x0000020000510bd8 : fdiv st(6), st(0) ; ret 0x85ff
0x0000020000677f29 : fdiv st(7) ; ret
0x00000200004c75ac : fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c63a1 : fdiv st(7), st(0) ; add rsp, 0x28 ; ret
0x000002000037a8a7 : fdiv st(7), st(0) ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004e02da : fdiv st(7), st(0) ; call 0x2000010333d
0x00000200007001a4 : fdiv st(7), st(0) ; dec dword ptr [rcx + rcx*4 + 0x35] ; ret 0x322
0x000002000039f4c2 : fdiv st(7), st(0) ; dec dword ptr [rcx - 0x75] ; xor r8b, r13b ; ret 0xc91f
0x00000200005dd2ba : fdiv st(7), st(0) ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000039020b : fdiv st(7), st(0) ; mov r10, qword ptr [rsp + 0x48] ; jmp 0x200003901df
0x00000200003f8ca4 : fdiv st(7), st(0) ; ret
0x00000200005fb029 : fdiv st(7), st(0) ; ret 0x8348
0x00000200004e0047 : fdiv st(7), st(0) ; test rax, rax ; je 0x200004e0078 ; call rax
0x00000200004d48cb : fdiv st(7), st(0) ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dbebd : fdiv st(7), st(0) ; xor edx, edx ; call 0x20000048196
0x00000200004bac32 : fdivp st(7) ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060f81b : fdivp st(7) ; add rsp, 0x38 ; ret
0x0000020000100fd6 : fdivp st(7) ; ret
0x00000200005c0304 : fdivr dword ptr [rax + 0x79db85ff] ; add al, 0x8b ; ret
0x00000200003e741b : fdivr dword ptr [rax - 0x74b7ffea] ; ret
0x0000020000499f4a : fdivr dword ptr [rbx] ; ret
0x00000200001843bd : fdivr dword ptr [rbx] ; ret 0x375
0x00000200002025d5 : fdivr dword ptr [rbx] ; ret 0x470f
0x0000020000580d1f : fdivr dword ptr [rbx] ; ret 0x774
0x000002000040ba7c : fdivr dword ptr [rbx] ; ret 0x830f
0x000002000009804f : fdivr dword ptr [rbx] ; ret 0x840f
0x0000020000719271 : fdivr qword ptr [rax + 0x480575ff] ; add esp, 0x58 ; ret
0x0000020000162442 : fdivr qword ptr [rbx] ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000009bee0 : fdivr qword ptr [rcx + 0x20] ; add dh, dh ; ret
0x0000020000609434 : fdivr st(1) ; mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000059fdd9 : fdivr st(3), st(0) ; dec dword ptr [rcx + rcx*4 + 0x2d] ; push rbp ; call rax
0x000002000036802b : fdivr st(3), st(0) ; dec dword ptr [rdi] ; ret 0x4589
0x0000020000198d41 : fdivr st(3), st(0) ; push rsi ; ret
0x00000200003c05d6 : fdivr st(7) ; add rsp, 0x18 ; ret
0x000002000061ef93 : fdivr st(7) ; add rsp, 0x48 ; ret
0x000002000060b586 : fdivr st(7) ; add rsp, 0x50 ; pop rbp ; ret
0x000002000060c663 : fdivr st(7) ; add rsp, 0x58 ; ret
0x000002000061d41a : fdivr st(7) ; add rsp, 0x98 ; ret
0x000002000051fbf6 : fdivr st(7) ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x0000020000049e30 : fdivr st(7) ; dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x73], 0xd ; ret
0x0000020000520293 : fdivr st(7) ; inc eax ; ret
0x000002000051fc4d : fdivr st(7) ; lea ecx, dword ptr [r8 + 0x77] ; call 0x2000014e0e9
0x000002000050d8a1 : fdivr st(7) ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000371d01 : fdivr st(7) ; nop ; jmp 0x200003671fe
0x000002000013fe53 : fdivr st(7) ; ret
0x00000200004c0cb8 : fdivr st(7) ; ret 0xe2c1
0x00000200004a493e : fdivr st(7), st(0) ; ret
0x000002000003cd24 : fdivr st(7), st(0) ; ret 0xff00
0x0000020000382fbd : fdivr st(7), st(0) ; sal esi, cl ; ret
0x00000200004b44aa : fdivrp st(6) ; ret 0x7402
0x0000020000020850 : ffree st(4) ; out dx, eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x00000200006420d5 : fiadd dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200000f7ef3 : fiadd dword ptr [rbx + 0xb4803e0] ; ret 0x8949
0x00000200000248be : fiadd dword ptr [rbx - 0x78f0fe08] ; push rsi ; call qword ptr [rbx]
0x00000200006d1ccf : fiadd dword ptr [rcx + 0x2b] ; fimul dword ptr [rbp + 3] ; ret
0x0000020000648217 : fiadd dword ptr [rcx - 0x46] ; and eax, 0x41c00002 ; mov eax, edx ; ret
0x0000020000709a8b : fiadd dword ptr [rcx - 0x75] ; ret 0x8b4c
0x00000200003fcfa0 : fiadd dword ptr [rcx - 0x75] ; shr eax, cl ; ret
0x0000020000105e00 : fiadd dword ptr [rcx - 0x76] ; ret 0xc985
0x00000200001b758d : fiadd dword ptr [rdi + rcx - 0x4a] ; add ecx, dword ptr [rax - 1] ; ret
0x000002000068aa2e : fiadd dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x00000200000e5454 : fiadd dword ptr [rdx] ; add byte ptr [rax], al ; add eax, ebp ; ret 0xf65c
0x00000200004c0fd6 : fiadd word ptr [rbx] ; jmp 0x1ffc26f59e2
0x000002000023543b : fiadd word ptr [rcx - 1] ; ret
0x000002000013c156 : fiadd word ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000026d429 : ficom dword ptr [rax] ; add al, bh ; ret
0x000002000046e7b9 : ficom word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000071fe29 : ficom word ptr [rcx] ; ret
0x00000200001152a2 : ficomp word ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000000d0ee : ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x00000200006fdb9f : ficomp word ptr [rdx + 2] ; add bh, bh ; ret
0x000002000027d369 : fidiv dword ptr [rax] ; ret
0x000002000062f8b1 : fidiv dword ptr [rbp - 0xf] ; jmp 0x2000062f8c1
0x0000020000144892 : fidiv dword ptr [rbx + 0x2a] ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x200001448ba
0x00000200001841a0 : fidiv word ptr [rbp + rax + 0x49] ; or eax, edx ; jmp 0x200001841b0
0x00000200005d7341 : fidiv word ptr [rbp + rcx - 0xa] ; ret
0x00000200005eafb8 : fidiv word ptr [rbp - 0x3b7cb701] ; pop rbx ; ret
0x00000200001d5532 : fidivr dword ptr [rax] ; idiv edi ; add rsp, 0x58 ; ret
0x000002000012ed69 : fidivr word ptr [rbx] ; ret 0xf41
0x00000200003a00b1 : fidivr word ptr [rcx] ; add byte ptr [rsi], cl ; fidivr word ptr [rcx] ; add dh, ch ; ret 0x39
0x00000200003a00b5 : fidivr word ptr [rcx] ; add dh, ch ; ret 0x39
0x00000200006ff6cb : fidivr word ptr [rdx + 0x158d48ff] ; ret
0x00000200006732df : fidivr word ptr [rdx + 0x6d535442] ; call 0x20000294e29
0x00000200006c9383 : fild dword ptr [rax - 0x49f0fe3e] ; ret 0x3b41
0x00000200001b64a2 : fild dword ptr [rbp + 0x22] ; ret
0x000002000061346c : fild dword ptr [rbp + 0x2b] ; ret
0x000002000045f6f7 : fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x00000200001be086 : fild dword ptr [rbp + 0x33] ; rol byte ptr [rcx + 0x3b], cl ; ret
0x00000200004642f3 : fild dword ptr [rbp + 0x3b] ; ret
0x00000200000e77c8 : fild dword ptr [rbp - 0x74ed8725] ; ret
0x0000020000063fbe : fild dword ptr [rbp - 0x75] ; ret
0x0000020000076b98 : fild dword ptr [rcx + 0x3b] ; ret 0x8076
0x0000020000055c5d : fild dword ptr [rcx + 0x3b] ; ret 0x8577
0x0000020000057e2d : fild dword ptr [rcx + 0x3b] ; ret 0x9177
0x00000200004a493a : fild dword ptr [rcx + 0xf] ; fdivr st(7), st(0) ; ret
0x000002000045dbe1 : fild dword ptr [rcx - 0x73] ; push rcx ; add dword ptr [rcx - 0x75], eax ; ret
0x000002000016ad28 : fild dword ptr [rcx - 0x75] ; ret
0x00000200003d7303 : fild dword ptr [rcx - 0x75] ; ret 0x2b41
0x000002000056e8cd : fild dword ptr [rcx - 0x77] ; jge 0x2000056e8d8 ; jmp 0x2000056e89c
0x00000200004e7a6b : fild dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000002074a : fild dword ptr [rcx] ; ret
0x0000020000237545 : fild dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000020000020749 : fild dword ptr gs:[rcx] ; ret
0x000002000025f7ac : fild qword ptr [rdi + rax*2] ; ret
0x00000200000f5ce5 : fild qword ptr [rdx - 0x74befff6] ; ret 0xf741
0x000002000067e773 : fild word ptr [r9 + 0x3b] ; ret 0x676
0x00000200000870dc : fild word ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200004f04ed : fild word ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000067e774 : fild word ptr [rcx + 0x3b] ; ret 0x676
0x00000200001481eb : fild word ptr [rcx - 0x7d] ; call 0x1ffb723c303
0x00000200004a5730 : fild word ptr [rcx - 0xa] ; ret 0xf01
0x000002000001105a : fild word ptr [rcx - 2] ; ret 0xb87
0x00000200001f309d : fild word ptr [rcx] ; in al, -1 ; add rsp, 0x48 ; ret
0x000002000072a961 : fild word ptr [rdi + rcx - 0x4a] ; ret
0x000002000060c661 : fild word ptr [rdi] ; fdivr st(7) ; add rsp, 0x58 ; ret
0x000002000062f445 : fild word ptr [rsi] ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rbx - 0xcbdbbc] ; ret
0x00000200006d78c0 : fimul dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x0000020000212436 : fimul dword ptr [rax - 0x3f] ; sti ; add cl, byte ptr [rax - 0x75] ; ret
0x0000020000054314 : fimul dword ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000005dc45 : fimul dword ptr [rax - 0x75] ; ret
0x0000020000071b02 : fimul dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200004f5d64 : fimul dword ptr [rax - 0x75] ; retf ; call 0x2000011d88b
0x00000200001008a7 : fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200003d3bff : fimul dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x00000200000f4f68 : fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200004b0ded : fimul dword ptr [rax - 1] ; ret
0x0000020000051ec5 : fimul dword ptr [rax - 9] ; ret
0x00000200000b061d : fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200006d1cd2 : fimul dword ptr [rbp + 3] ; ret
0x00000200000dd659 : fimul dword ptr [rbp - 0x73] ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x000002000020598a : fimul dword ptr [rbp - 0x75] ; add cl, byte ptr [rbp + 0x3b] ; ret 0x3c74
0x000002000070aaac : fimul dword ptr [rbx + rcx*4 - 0x36] ; mov rax, r9 ; ret
0x00000200004c0ddb : fimul dword ptr [rbx - 0x936ccf0] ; ret 0xf01
0x00000200000a2c37 : fimul dword ptr [rcx - 0x3f] ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200006cb917 : fimul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x75] ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000020000149bd8 : fimul dword ptr [rcx - 0x77] ; nop ; add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200007286a0 : fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000673622 : fimul dword ptr [rcx] ; ret 0x48ff
0x00000200000b12da : fimul dword ptr [rdi] ; test byte ptr [rbx], cl ; ret
0x00000200004863c0 : fimul dword ptr [rdi] ; xchg dword ptr [rsi], esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000048f175 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000002000000dba5 : fimul word ptr [r15 - 0x7f] ; jmp qword ptr [rdx]
0x0000020000140e32 : fimul word ptr [r8 - 0x75] ; ret
0x00000200006cc57e : fimul word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200000b55bc : fimul word ptr [rax - 0x75] ; ret
0x0000020000710cf0 : fimul word ptr [rax - 0x75] ; ret 0x2b49
0x00000200003fd450 : fimul word ptr [rax - 0x75] ; retf ; call 0x2000002c2fb
0x000002000066efb6 : fimul word ptr [rax - 0x7d] ; ret
0x00000200006e5d98 : fimul word ptr [rax - 0x7d] ; ret 0x4908
0x0000020000376627 : fimul word ptr [rax - 1] ; ret
0x000002000007ed4c : fimul word ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200006fd875 : fimul word ptr [rcx + 0x73894c3b] ; or byte ptr [rax - 0x75], cl ; ret
0x000002000009fadf : fimul word ptr [rcx - 0x77] ; ret
0x0000020000010518 : fimul word ptr [rdi + 0x33] ; pop r10 ; and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000000dba6 : fimul word ptr [rdi - 0x7f] ; jmp qword ptr [rdx]
0x00000200001f7e7a : fimul word ptr [rdi] ; test byte ptr [rdx + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000389847 : fimul word ptr [rdi] ; test eax, ebx ; or byte ptr [rax], al ; add dh, dh ; ret
0x000002000051e3e3 : fincstp ; ret
0x00000200000728d0 : fincstp ; ret 0x600
0x00000200000697ae : fincstp ; ret 0xfffe
0x0000020000437ffd : fist word ptr [rax] ; ret
0x00000200004747c7 : fistp dword ptr [rax + 0x23] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a3fe5 : fistp dword ptr [rsi - 0x74b3fff2] ; ret 0x8b49
0x0000020000163ebf : fistp dword ptr [rsi] ; add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x000002000009921d : fistp qword ptr [rbp - 0xa] ; inc dword ptr [rcx - 0x75] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004d901d : fistp qword ptr [rbx] ; ret
0x000002000018d399 : fistp qword ptr [rsp + rbx] ; add byte ptr [rcx - 0xa], al ; ret 0x7404
0x000002000040d61d : fistp word ptr [rbx - 0x14] ; push qword ptr [rdx + 0x3638e801] ; ret 0x48ff
0x00000200001b970a : fistp word ptr [rbx] ; clc ; push rsi ; ret
0x000002000021bc79 : fisttp dword ptr [r9 - 0x74bee791] ; ret
0x00000200006c64b6 : fisttp dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200003c34fc : fisttp dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200003b7e20 : fisttp dword ptr [rax + 0x63] ; ret
0x000002000068f769 : fisttp dword ptr [rax + 0xf45ffc0] ; scasd eax, dword ptr [rdi] ; ret 0x344
0x000002000019ebfb : fisttp dword ptr [rax + 0xf] ; ret
0x00000200001a5167 : fisttp dword ptr [rax - 0x75] ; adc dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200006e7c71 : fisttp dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000002000021508c : fisttp dword ptr [rax - 0x75] ; je 0x200002150bd ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005fc4bd : fisttp dword ptr [rax - 0x75] ; ret
0x0000020000404e84 : fisttp dword ptr [rax - 0x75] ; ret 0x8948
0x0000020000668634 : fisttp dword ptr [rax - 0x75dedba4] ; ret
0x000002000066851a : fisttp dword ptr [rax - 0x75dfdba4] ; ret
0x000002000063a651 : fisttp dword ptr [rax - 0x7d] ; ret
0x000002000014ae1a : fisttp dword ptr [rax - 0x7d] ; ret 0x8320
0x00000200000a7b6e : fisttp dword ptr [rax - 1] ; ret 0xede9
0x00000200000c0052 : fisttp dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], 1 ; ret
0x00000200003859e4 : fisttp dword ptr [rbx + 0x358d48f9] ; xchg eax, edx ; ret
0x000002000067a3e1 : fisttp dword ptr [rbx + 0x3b48ff9b] ; ret 0x1675
0x0000020000014a62 : fisttp dword ptr [rbx - 0xc374dca] ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x0000020000443a55 : fisttp dword ptr [rbx] ; enter 0x48ff, -0x75 ; ret
0x0000020000707b72 : fisttp dword ptr [rcx + 3] ; fisttp word ptr [rcx + rdi + 0x35] ; ret
0x000002000021bc7a : fisttp dword ptr [rcx - 0x74bee791] ; ret
0x000002000064369a : fisttp dword ptr [rcx - 0x74dfdba4] ; ret
0x00000200005ddff3 : fisttp dword ptr [rcx - 0x75] ; jmp 0x20049206b49
0x00000200006d88b1 : fisttp dword ptr [rcx - 0x75] ; ret 0x8948
0x0000020000051eda : fisttp dword ptr [rcx - 0x75] ; sbb dh, dh ; ret
0x00000200006d9652 : fisttp dword ptr [rcx - 0x7d] ; ret 0x4808
0x00000200000aa361 : fisttp dword ptr [rcx - 0x7f] ; ret 0
0x000002000018e150 : fisttp dword ptr [rcx - 9] ; ret
0x000002000037e745 : fisttp dword ptr [rdi] ; cdq ; ret 0x1ae8
0x000002000037f680 : fisttp dword ptr [rdi] ; cdq ; ret 0x8b48
0x00000200005c5ea2 : fisttp dword ptr [rdi] ; mov bl, al ; add byte ptr [rax], al ; add al, ch ; ret 0xffd1
0x00000200004d19cd : fisttp dword ptr [rdi] ; mov byte ptr [rax - 0x74fff363], ch ; ret
0x00000200004f36ab : fisttp dword ptr [rdi] ; mov byte ptr [rax - 0x74fff4c2], ah ; ret
0x000002000072fb80 : fisttp dword ptr [rdi] ; mov byte ptr [rax - 0x74fffff9], ah ; ret
0x0000020000149f52 : fisttp dword ptr [rdi] ; mov byte ptr [rbx], dh ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000047eae1 : fisttp dword ptr [rdi] ; mov byte ptr [rsi - 0x75000000], ah ; ret
0x00000200003afdc7 : fisttp dword ptr [rdi] ; mov byte ptr [rsi], dl ; adc al, 0x19 ; add dh, dh ; ret
0x0000020000640719 : fisttp dword ptr [rdi] ; mov ch, dl ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000046a8b5 : fisttp dword ptr [rdi] ; mov dword ptr [rsi - 0x74ffeef3], esp ; ret
0x000002000048dea3 : fisttp dword ptr [rdi] ; mov dword ptr [rsi - 0x74fff09d], ebp ; ret
0x000002000010056b : fisttp dword ptr [rdi] ; ret
0x00000200000778ff : fisttp dword ptr [rdi] ; test ah, bh ; add al, 0 ; add dh, dh ; ret
0x00000200003df22f : fisttp dword ptr [rdi] ; test byte ptr [rax - 0x74ffffc2], bh ; ret
0x000002000070f293 : fisttp dword ptr [rdi] ; test byte ptr [rbx - 0x75000000], bl ; ret
0x00000200003b4c20 : fisttp dword ptr [rdi] ; test byte ptr [rcx - 0x75ffe724], ah ; ret
0x000002000046bb66 : fisttp dword ptr [rdi] ; test byte ptr [rdi], bl ; call qword ptr [rax]
0x00000200003d7dae : fisttp dword ptr [rdi] ; test byte ptr [rsi - 0xa000000], dl ; ret
0x00000200000c1370 : fisttp dword ptr [rdi] ; test cl, bl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000647c5b : fisttp dword ptr [rdi] ; test dword ptr [rax - 0x1000000], eax ; ret
0x00000200000b8d29 : fisttp dword ptr [rdi] ; test dword ptr [rcx], esp ; add al, byte ptr [rax] ; add al, ch ; ret
0x000002000044944c : fisttp dword ptr [rdi] ; xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x00000200006fd2f3 : fisttp qword ptr [rax + 0x2b] ; fmul dword ptr [rax - 0x75] ; ret
0x00000200006c810f : fisttp qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x0000020000142661 : fisttp qword ptr [rax + 0x63] ; ret
0x0000020000689064 : fisttp qword ptr [rax - 0x7d] ; ret
0x00000200006f7b28 : fisttp qword ptr [rax - 0x7f] ; ret 0x610
0x00000200003f5dde : fisttp qword ptr [rax - 1] ; ret
0x00000200006359a9 : fisttp qword ptr [rax - 1] ; ret 0xd2e8
0x0000020000061ab5 : fisttp qword ptr [rax - 9] ; ret
0x00000200000e9476 : fisttp qword ptr [rcx - 0x7d] ; ret 0xbd04
0x000002000020c6e1 : fisttp qword ptr [rdi] ; or dword ptr [rax + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ebfcb : fisttp qword ptr [rdi] ; sbb dword ptr [rsi + 0x48000000], -9 ; ret
0x00000200004af973 : fisttp qword ptr [rdi] ; test esp, ecx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003d2c8c : fisttp qword ptr [rdx + 0x4e8b0156] ; add al, 0xf6 ; ret 0x7502
0x000002000049e3ff : fisttp qword ptr [rsi] ; add byte ptr [rbx], dh ; shr al, cl ; movsxd rbx, esp ; ret
0x00000200000ae3cb : fisttp word ptr [eip + 0xd8b4800] ; ret 0x2294
0x00000200000dfcbb : fisttp word ptr [rax + 0x33] ; ret 0xe083
0x00000200006cddf2 : fisttp word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xcbff
0x00000200006e85dc : fisttp word ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x000002000045199a : fisttp word ptr [rax + 0x39] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200004f69fa : fisttp word ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000fcd90 : fisttp word ptr [rax - 0x75] ; ret
0x0000020000140b3c : fisttp word ptr [rax - 0x75] ; ret 0x8348
0x00000200004b4320 : fisttp word ptr [rax - 0x7d] ; ret
0x00000200006e9276 : fisttp word ptr [rax - 0x7d] ; ret 0x3b10
0x00000200004402a5 : fisttp word ptr [rax - 1] ; ret
0x0000020000377227 : fisttp word ptr [rbp + rcx*4 - 0x7d] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x00000200001b5f9c : fisttp word ptr [rbx + 0xfc085f8] ; mov dword ptr [rcx], edx ; ret
0x00000200000f9039 : fisttp word ptr [rcx + 0x33] ; ret 0x2349
0x0000020000087631 : fisttp word ptr [rcx + 0xb] ; ret
0x0000020000707b75 : fisttp word ptr [rcx + rdi + 0x35] ; ret
0x000002000062c4d3 : fisttp word ptr [rcx - 0x7d] ; ret 0x4104
0x000002000062eaa9 : fisttp word ptr [rcx - 0x7d] ; ret 0x4504
0x00000200006cdbc9 : fisttp word ptr [rcx - 0x7d] ; ret 0x4908
0x00000200000bfc65 : fisttp word ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005dd1ca : fisttp word ptr [rdi] ; ret 0x8b48
0x0000020000167962 : fisttp word ptr [rdi] ; test byte ptr [rsi + rcx*4], dl ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004af989 : fisttp word ptr [rdi] ; test dword ptr [rcx - 0x9ffffff], ecx ; ret
0x000002000000e7c1 : fisttp word ptr [rdx + 0x41] ; ret 0xda8
0x000002000067ce85 : fisttp word ptr [rdx] ; ret
0x00000200000ae3cc : fisttp word ptr [rip + 0xd8b4800] ; ret 0x2294
0x000002000072028d : fisttp word ptr [rsi] ; ret
0x000002000000dfb9 : fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x000002000000d47b : fisub dword ptr [rdx] ; ret 0x3997
0x000002000000d47a : fisub dword ptr gs:[rdx] ; ret 0x3997
0x00000200004d00d7 : fisub word ptr [rsi + 0x2b] ; fsub dword ptr [rsi - 0x7d] ; ret
0x0000020000107fad : fisubr dword ptr [rdi] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000014b94 : fisubr word ptr [rax + 0x63] ; jbe 0x20000014bac ; ret 0x2b84
0x00000200005204d6 : fld dword ptr [rbp + rcx*4 + 0x42] ; and al, ch ; loopne 0x200005204bc ; ret
0x00000200000ca963 : fld dword ptr [rbx + 0x3b4920c3] ; ret 0x830f
0x00000200006673fb : fld dword ptr [rbx + r9*4 - 0x3b] ; call 0x20000294008
0x00000200006673fc : fld dword ptr [rbx + rcx*4 - 0x3b] ; call 0x20000294007
0x00000200000e9315 : fld dword ptr [rcx - 0x75] ; ret
0x000002000070fe76 : fld dword ptr [rcx - 0x75] ; ret 0x8949
0x0000020000400cb7 : fld dword ptr [rcx - 0x7d] ; stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x0000020000507553 : fld dword ptr [rdx] ; ret
0x000002000002128b : fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x000002000068aa32 : fld qword ptr [rcx - 0x75] ; ret
0x000002000044ac97 : fld qword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000044db01 : fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x00000200000a1a4b : fld st(1) ; call 0x20075cc555d
0x0000020000489e91 : fld xword ptr [rax] ; ret
0x0000020000608901 : fld xword ptr [rdi + rbp*4 - 1] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051322d : fld1 ; jge 0x200005132a9 ; ret 0x48ff
0x00000200005964f9 : fld1 ; loope 0x200005964a5 ; ret 0xebff
0x00000200005201ca : fld1 ; mov al, 0xd6 ; ret
0x000002000068a844 : fld1 ; mov dr1, word ptr [rsi] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200000e5681 : fld1 ; mov ecx, 0xf6000000 ; ret
0x000002000051e668 : fld1 ; push rdx ; cmc ; ret
0x00000200005cfb57 : fld1 ; ret
0x0000020000686c94 : fld1 ; ret 0xbb1d
0x00000200004a69dc : fld1 ; ret 0xc0e3
0x00000200006403f4 : fld1 ; ret 0xe9cf
0x00000200004ea9ec : fld1 ; ret 0xf432
0x0000020000605280 : fld1 ; ret 0xfffd
0x0000020000111924 : fld1 ; xchg eax, esi ; ret 4
0x000002000000d0ea : fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x0000020000151700 : fldcw word ptr [rcx] ; ret
0x00000200005d00b3 : fldenv dword ptr [rbx] ; ret
0x0000020000010735 : fldenv dword ptr [rdi + 0x49] ; ret
0x000002000000e22a : fldenv dword ptr [rdx] ; lahf ; mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x000002000020f539 : fldenv dword ptr [rsi + 0x33] ; ret 0x1274
0x0000020000516a54 : fldl2t ; ret 0x9bf
0x00000200003e7eae : fldpi ; push rsi ; ret
0x00000200004a4e4d : fldpi ; ret
0x00000200007229e3 : fldpi ; ret 0x48ff
0x0000020000082433 : fldpi ; ret 0x8b48
0x000002000049456e : fmul dword ptr [r11 + 0x371e8d7] ; ret 0x85ff
0x0000020000159f10 : fmul dword ptr [r8 + 0xf] ; ret
0x000002000062b3dc : fmul dword ptr [r8 - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x000002000004e2dc : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000142dc9 : fmul dword ptr [r8 - 0x75] ; ret
0x000002000008c2e1 : fmul dword ptr [rax + 0x1b] ; rol byte ptr [rbx - 0x74bef71e], cl ; ret
0x0000020000141153 : fmul dword ptr [rax + 0x1b] ; ror byte ptr [rax + 0x23], 0xc1 ; ret
0x0000020000191fc4 : fmul dword ptr [rax + 0x1b] ; ror byte ptr [rax + 0x23], 0xf8 ; jmp 0x200000be213
0x0000020000376624 : fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x000002000009affc : fmul dword ptr [rax + 0x3b] ; ret 0x840f
0x0000020000617040 : fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x0000020000159f11 : fmul dword ptr [rax + 0xf] ; ret
0x0000020000403fe7 : fmul dword ptr [rax + 0xf] ; ret 0x7c80
0x0000020000149329 : fmul dword ptr [rax - 0x2d] ; ret
0x0000020000105dc4 : fmul dword ptr [rax - 0x3f] ; call 0x1ffc24ba6e7
0x0000020000376608 : fmul dword ptr [rax - 0x73] ; dec dword ptr [rax + 3] ; ret
0x000002000062b3dd : fmul dword ptr [rax - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200004bfef9 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000004e2dd : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000039cdad : fmul dword ptr [rax - 0x75] ; and al, 0x78 ; call 0x20000068fd8
0x000002000066b629 : fmul dword ptr [rax - 0x75] ; je 0x2000066b65a ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000066b628 : fmul dword ptr [rax - 0x75] ; je 0x2000066b65b ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004b3e79 : fmul dword ptr [rax - 0x75] ; jl 0x200004b3eab ; jmp 0x200004b3edf
0x00000200003fcde3 : fmul dword ptr [rax - 0x75] ; jmp 0x1ffc26b917d
0x00000200004832a4 : fmul dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200001ea0fb : fmul dword ptr [rax - 0x75] ; push r8 ; add rax, r8 ; ret
0x00000200000a0f4e : fmul dword ptr [rax - 0x75] ; ret
0x000002000041c7d7 : fmul dword ptr [rax - 0x75] ; ret 0x894c
0x00000200001fa478 : fmul dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200000e47a9 : fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200004e5cc0 : fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200001f8473 : fmul dword ptr [rax - 0x7b] ; ret 0xe74
0x00000200003fbcf7 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200006e7c74 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x00000200000e063c : fmul dword ptr [rax - 0x7d] ; ret
0x000002000038e587 : fmul dword ptr [rax - 0x7d] ; ret 0xf02
0x00000200005a72d3 : fmul dword ptr [rax - 1] ; ret
0x000002000020bbd4 : fmul dword ptr [rbp + 0x3b] ; ret
0x00000200006d713a : fmul dword ptr [rbp + rcx*4 + 0x78] ; or byte ptr [rcx - 0x75], cl ; iretd ; call r9
0x00000200002059ba : fmul dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x0000020000140314 : fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x000002000049456f : fmul dword ptr [rbx + 0x371e8d7] ; ret 0x85ff
0x0000020000487e4c : fmul dword ptr [rbx - 0x3b7cb73d] ; js 0x20000487ebc ; pop rbx ; ret
0x00000200000ef571 : fmul dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200004e479a : fmul dword ptr [rbx] ; add byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000542528 : fmul dword ptr [rbx] ; ret 0x8941
0x00000200004f8e4a : fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001c12af : fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x00000200001b649f : fmul dword ptr [rcx + 0xb] ; fild dword ptr [rbp + 0x22] ; ret
0x0000020000057202 : fmul dword ptr [rcx - 0x73] ; push rbp ; sub cl, ch ; ret 0xfff1
0x0000020000149230 : fmul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x75] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200006d7079 : fmul dword ptr [rcx - 0x75] ; ret
0x000002000007e6dd : fmul dword ptr [rcx - 0x75] ; ret 0x2b49
0x00000200006e0d71 : fmul dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000049d45e : fmul dword ptr [rcx - 0x7d] ; ret
0x000002000008eaf5 : fmul dword ptr [rcx - 0x7d] ; ret 0x4d04
0x0000020000123f77 : fmul dword ptr [rcx - 0x7d] ; ret 0xb807
0x0000020000389b91 : fmul dword ptr [rcx - 0x9a7dba4] ; ret
0x0000020000084c77 : fmul dword ptr [rcx - 1] ; ret
0x0000020000080331 : fmul dword ptr [rdi + rcx + 0x42] ; ret
0x00000200003745be : fmul dword ptr [rdi] ; and bl, al ; add rsp, 0x28 ; ret
0x0000020000055db4 : fmul dword ptr [rdi] ; and bl, al ; ret
0x00000200006ef37d : fmul dword ptr [rdi] ; mov dh, 0x41 ; sbb al, cl ; call 0x20075312e97
0x00000200000d4f7c : fmul dword ptr [rdi] ; ret
0x00000200003951dc : fmul dword ptr [rdi] ; test byte ptr [rcx], al ; adc byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x0000020000383e40 : fmul dword ptr [rdi] ; test dword ptr [rdi], eax ; call 0x1ffc42f3e6b
0x00000200003b0c78 : fmul dword ptr [rdi] ; xchg dword ptr [rbx], edx ; or ebx, dword ptr [rcx] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200005ef102 : fmul dword ptr [rdx] ; xor eax, 0xc301b000 ; xor al, al ; ret
0x0000020000057201 : fmul dword ptr gs:[rcx - 0x73] ; push rbp ; sub cl, ch ; ret 0xfff1
0x00000200005ac983 : fmul qword ptr [r15] ; add byte ptr [rcx + rcx*4 + 0x35], cl ; ret 0xfd9
0x000002000022d3f8 : fmul qword ptr [r8 - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200006cd9b5 : fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xcbff
0x000002000022d3f9 : fmul qword ptr [rax - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x0000020000073e51 : fmul qword ptr [rax - 0x75] ; ret
0x00000200004b0c7b : fmul qword ptr [rax - 0x75] ; ret 0xff48
0x00000200005b5e9a : fmul qword ptr [rax - 0x7d] ; in al, dx ; push -0xdfa74b8 ; ret
0x00000200006fa118 : fmul qword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000061ab2 : fmul qword ptr [rcx + 0x2b] ; fisttp qword ptr [rax - 9] ; ret
0x000002000013c0a4 : fmul qword ptr [rcx - 0x7d] ; ret 0x4108
0x0000020000730fd5 : fmul qword ptr [rcx] ; imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x00000200005ac984 : fmul qword ptr [rdi] ; add byte ptr [rcx + rcx*4 + 0x35], cl ; ret 0xfd9
0x000002000016d9d7 : fmul qword ptr [rdi] ; test ah, al ; push rbp ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200003d36c3 : fmul st(1), st(0) ; push rsi ; ret
0x00000200006026a5 : fmul st(2), st(0) ; push rsi ; ret
0x000002000000d5f6 : fmul st(7) ; popfq ; cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x00000200003d5a6e : fmulp st(1) ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001516f0 : fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x00000200001516e0 : fninit ; ret
0x00000200002018e1 : fnsave dword ptr [rbp + rcx - 0xa] ; ret
0x00000200005aa82b : fnsave dword ptr [rcx + rdx - 0xa] ; ret
0x000002000062b052 : fnsave dword ptr [rcx - 0x3b7cb701] ; push rax ; pop rbx ; ret
0x000002000056a1af : fnsave dword ptr [rdx - 0x74b70053] ; ret
0x00000200001516f3 : fnstcw word ptr [rcx] ; ret
0x0000020000088265 : fnstcw word ptr [rdx] ; ret
0x00000200001ddcd3 : fnstenv dword ptr [rax + rbp*8 - 0x3474b701] ; call rdi
0x000002000027d365 : fnstenv dword ptr [rax] ; mov esp, 0x400070da ; ret
0x00000200003f6dd5 : fnstenv dword ptr [rbp + 6] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000632bf8 : fnstenv dword ptr [rbp + rcx - 0xa] ; ret
0x0000020000231eb1 : fnstenv dword ptr [rbx + 6] ; mov eax, 1 ; ret
0x000002000060b508 : fnstenv dword ptr [rbx - 0x3b7cb701] ; push rax ; pop rbx ; ret
0x000002000045082d : fnstenv dword ptr [rbx] ; ret
0x000002000039e897 : fnstenv dword ptr [rdx + rax - 1] ; ret 0xd148
0x000002000020ad42 : fnstenv dword ptr [rdx - 0x20] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004db5df : fnstenv dword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x000002000046c18f : fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x00000200006f23f3 : fnstsw dword ptr [rbp + 0x1d8901ff] ; ret
0x000002000016235b : fnstsw dword ptr [rbx] ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200005af960 : frstor dword ptr [rax - 0x31] ; inc dword ptr [rbx - 0x309ea2f3] ; jmp qword ptr [rax]
0x000002000041a9ea : frstor dword ptr [rsi - 0x7b] ; ret
0x000002000057719c : fst qword ptr [rbx] ; out dx, al ; push rsi ; ret
0x00000200007200bb : fst qword ptr [rcx] ; ret
0x00000200004ddf63 : fst qword ptr [rdx] ; ret
0x0000020000713a2b : fst st(5) ; ret
0x000002000010a1a2 : fstp dword ptr [rax + rax] ; jae 0x2000010a1ad ; ret
0x00000200004dcddb : fstp dword ptr [rax + rax] ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200003b4fd8 : fstp dword ptr [rax] ; add dh, dh ; ret
0x0000020000123cef : fstp dword ptr [rbx] ; add byte ptr [rax], al ; setne al ; ret
0x0000020000577783 : fstp dword ptr [rcx] ; out dx, al ; inc dword ptr [rcx - 0x7b] ; ror dword ptr [rax - 0x75], 1 ; ret
0x000002000000d33b : fstp dword ptr [rdx + rcx + 0x10] ; mov ecx, 0x79682177 ; ret
0x000002000042faaf : fstp qword ptr [rcx] ; sar bh, 0x8b ; ret
0x00000200005f6e2f : fstp qword ptr [rdi] ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200004e594d : fstp st(3), st(0) ; push rsi ; ret
0x00000200004d44c3 : fstp xword ptr [r11] ; ret 0x2374
0x00000200003a4204 : fstp xword ptr [rax - 0x7f] ; jmp 0x200003a41b3
0x0000020000191765 : fstp xword ptr [rbp - 0x33000e] ; ret
0x0000020000196953 : fstp xword ptr [rbp - 0xd] ; push rsi ; ret 0xf03
0x00000200006f10ec : fstp xword ptr [rbx + 0x58d48ff] ; ret 0x9958
0x00000200004d44c4 : fstp xword ptr [rbx] ; ret 0x2374
0x000002000000f20e : fstp xword ptr [rdi + 0x46bcb1d7] ; ret
0x000002000067eaa5 : fstp xword ptr [rdi] ; ret 0x48ff
0x000002000010b133 : fstpnce st(4), st(0) ; add eax, dword ptr [rax] ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000507944 : fsub dword ptr [rbx] ; ret 0xc23b
0x00000200001d6634 : fsub dword ptr [rdi] ; idiv edi ; add rsp, 0x68 ; ret
0x000002000015a924 : fsub dword ptr [rdx] ; add byte ptr [rax], al ; nop ; ret
0x0000020000721a1c : fsub dword ptr [rsi + 0xf] ; ret
0x00000200004ef7e3 : fsub dword ptr [rsi - 0x77] ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001403b8 : fsub dword ptr [rsi - 0x77] ; or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x00000200004d00da : fsub dword ptr [rsi - 0x7d] ; ret
0x0000020000681269 : fsub qword ptr [rax + 0x48c033ff] ; add esp, 0x28 ; ret
0x000002000042260d : fsub qword ptr [rsi - 0x7d] ; clc ; pop rsp ; jne 0x20000422611 ; xor al, al ; ret
0x0000020000713b34 : fsub st(1) ; ret
0x000002000059302b : fsub st(1), st(0) ; cmp edx, esi ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000592fff : fsub st(1), st(0) ; imul edi, dword ptr [rcx], -0xe ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004ae94d : fsubp st(0) ; pop rcx ; xchg eax, esp ; ret 0xe9ff
0x00000200004177e4 : fsubp st(1) ; ret 0x148c
0x00000200001a129f : fsubp st(1) ; ret 0xf582
0x000002000038a7f2 : fsubp st(1) ; sahf ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rax] ; mov al, 6 ; ret
0x00000200003fcd54 : fsubr dword ptr [rbx] ; ret 0x8942
0x000002000059eade : fsubr qword ptr [rsi - 0x75277501] ; ret
0x000002000067ab0e : fsubr st(0) ; adc byte ptr [rax + rax], ch ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000492a54 : fsubr st(0) ; add dword ptr es:[rax], eax ; add byte ptr [rdx], bh ; ret
0x000002000068d3d3 : fsubr st(0) ; call qword ptr [rdx]
0x00000200005617fe : fsubr st(0) ; cld ; ret
0x00000200005c79bd : fsubr st(0) ; cmp eax, 0x8bffb862 ; ret
0x000002000047c9dd : fsubr st(0) ; cmp eax, 0x8bffe184 ; ret
0x0000020000446eeb : fsubr st(0) ; fbld dword ptr [rax] ; ret 0x48ff
0x000002000042a47f : fsubr st(0) ; jmp 0x2000042a44b
0x00000200005c78fb : fsubr st(0) ; jmp qword ptr [rdx - 0x48]
0x0000020000644851 : fsubr st(0) ; lodsd eax, dword ptr [rsi] ; ret
0x0000020000510f45 : fsubr st(0) ; mov ch, 0xcc ; ret
0x000002000068f219 : fsubr st(0) ; mov ecx, 0x8bffa9f4 ; ret
0x00000200000f44bc : fsubr st(0) ; mov esi, 0x3a0039e6 ; ret
0x00000200005f22da : fsubr st(0) ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff2
0x000002000051d4f1 : fsubr st(0) ; or dword ptr [rdi], eax ; ret
0x0000020000662265 : fsubr st(0) ; or eax, 0x8b000000 ; ret
0x00000200006f8883 : fsubr st(0) ; push rbx ; ret
0x00000200001280b7 : fsubr st(0) ; ret
0x0000020000646158 : fsubr st(0) ; ret 0xa29c
0x0000020000710038 : fsubr st(0) ; ret 0xa3db
0x000002000043ca64 : fsubr st(0) ; ret 0xf500
0x0000020000537b00 : fsubr st(0) ; ret 0xf799
0x000002000022bee9 : fsubr st(0) ; retfq ; call 0x1ffc3ae07f9
0x000002000067ab5e : fsubr st(0) ; shr byte ptr [rbx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051f175 : fsubr st(0) ; test ebp, edx ; ret 0x8bff
0x0000020000193064 : fsubr st(1) ; div edi ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001a26d5 : fsubr st(1) ; mov edi, 0xfffff5c6 ; ret
0x000002000057b3c2 : fsubr st(1) ; ret
0x000002000055f151 : fsubr st(1) ; ret 0xeb2b
0x00000200005903b6 : fsubr st(1) ; ret 0xfff1
0x0000020000191ff7 : fsubr st(1) ; ret 0xfff2
0x000002000059e21e : fsubr st(1) ; ret 0xfff3
0x000002000059fb0d : fsubr st(1) ; sbb eax, 0x83fff3d5 ; ret
0x00000200001808ca : fsubr st(1) ; stc ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000192045 : fsubr st(1) ; xchg eax, ebp ; ret 0xfff2
0x00000200003e7fa3 : fsubr st(3) ; push rsi ; ret
0x000002000067f0a0 : fsubr st(5), st(0) ; ret 0xfff
0x00000200001c2f20 : fsubr st(5), st(0) ; sbb byte ptr [rax], al ; call rax
0x0000020000540d91 : fsubr st(6), st(0) ; push rsi ; ret
0x0000020000722996 : fsubrp st(6) ; ret 0xa8ff
0x000002000050f648 : fucomi st(0) ; push 0xa0 ; ret 0xebff
0x000002000001f7ba : fucomi st(1) ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000178319 : fucomi st(1) ; out 0x2c, eax ; out dx, eax ; inc dword ptr [rbp - 0x75] ; ret
0x00000200003b8a7f : fucomi st(1) ; ret
0x0000020000176899 : fucomi st(1) ; ret 0xeeed
0x00000200001709cd : fucomi st(1) ; sahf ; sbb esi, ebp ; push rsi ; ret 0xf07
0x00000200005f7e31 : fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x0000020000111989 : fucomp st(0) ; imul ebp, dword ptr [rdx], 0x8b480000 ; ret
0x0000020000372032 : fucomp st(1) ; ret 0xff56
0x000002000059ce83 : fucomp st(3) ; dec dword ptr [rax - 0x75] ; int 0xe8
0x000002000012efcc : fucomp st(5) ; dec dword ptr [rbp - 0x75] ; ret
0x0000020000068fb1 : fucompi st(1) ; adc byte ptr [rax], al ; ret
0x00000200001322f1 : fucompi st(1) ; ret 0xfffe
0x00000200001d03ed : fucompi st(1) ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x348
0x00000200000e61f1 : fucompi st(3) ; leave ; mov eax, 0xc000000d ; ret
0x0000020000192c24 : fucompp ; adc eax, 0xf6fff2ee ; ret
0x0000020000204fd4 : fucompp ; ret
0x000002000017ea9b : fucompp ; sub al, dl ; out dx, eax ; push rsi ; ret
0x00000200006024c1 : fxch st(0), st(2) ; push rsi ; ret
0x0000020000382029 : fxch st(0), st(6) ; dec dword ptr [rax - 0x75] ; cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x200003ce249
0x000002000060299f : fxch st(2) ; push rsi ; ret
0x0000020000151cd8 : fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000046f47d : fyl2x ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000040ec76 : hlt ; adc al, 0 ; xor eax, eax ; jmp 0x2000040ec45
0x00000200003f3029 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x55e9
0x00000200000e3f6a : hlt ; add eax, 0x18 ; ret
0x00000200005a4338 : hlt ; call 0x1ffc3132c42
0x000002000042603f : hlt ; call qword ptr [rbx]
0x000002000056a018 : hlt ; cdq ; in al, dx ; push rsi ; ret
0x000002000038f4c0 : hlt ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000367c4c : hlt ; dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x7d], 0xbc ; ret 0x4ca8
0x000002000019ce33 : hlt ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200001d90e3
0x000002000036c793 : hlt ; dec dword ptr [rax - 0x75] ; je 0x2000036c7c6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004ac932 : hlt ; dec dword ptr [rax - 0x75] ; ret
0x00000200005a7cca : hlt ; dec dword ptr [rax - 0x7d] ; ret 0x4138
0x0000020000464df4 : hlt ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200000ca888 : hlt ; dec dword ptr [rcx + 0x3b] ; ret 0x1274
0x000002000019ce03 : hlt ; dec esp ; mov rcx, rbx ; call 0x200001d90e4
0x000002000036921d : hlt ; inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004c56d8 : hlt ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret
0x00000200001b0f6d : hlt ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200001997d7 : hlt ; inc dword ptr [rcx - 0x75] ; xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x00000200005a2ffe : hlt ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x00000200005a2ff2 : hlt ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x0000020000011025 : hlt ; insd dword ptr [rdi], dx ; push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x000002000048c662 : hlt ; jbe 0x2000048c67a ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000710bc : hlt ; jmp 0x20000070fa7
0x00000200005323f7 : hlt ; jmp rsp
0x0000020000632f6e : hlt ; lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x000002000003391c : hlt ; mov eax, 1 ; ret
0x00000200000ead17 : hlt ; mov rax, qword ptr [rax + 8] ; ret
0x0000020000054f8c : hlt ; mov rax, r8 ; ret
0x00000200003ec688 : hlt ; mov rax, r9 ; ret
0x000002000007007d : hlt ; mov rax, rcx ; ret
0x00000200006d0185 : hlt ; mov rax, rdx ; jmp 0x200006d0193
0x00000200000e19b3 : hlt ; mov rax, rdx ; ret
0x0000020000141317 : hlt ; mov rdx, rsi ; call r14
0x00000200000ef8b6 : hlt ; or al, byte ptr [rax] ; mov r8, r14 ; mov rcx, rbx ; call rax
0x0000020000553bf2 : hlt ; pop rbx ; jmp 0x1fffd1833fd
0x0000020000249b78 : hlt ; pop rbx ; or dword ptr [rax], eax ; ret
0x000002000024d24c : hlt ; pop rsp ; or al, byte ptr [rax] ; rcr dword ptr [rdi + 0xa], cl ; add byte ptr [rax], ch ; ret 0x24
0x000002000054432c : hlt ; push 0xe7 ; push rsi ; ret
0x0000020000122a5f : hlt ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000122acc ; ret
0x0000020000199f41 : hlt ; push rsi ; ret
0x00000200000e2c3a : hlt ; ret
0x0000020000418c9c : hlt ; ret 0x48ff
0x00000200005d961b : hlt ; ret 0x4cff
0x0000020000722050 : hlt ; ret 0x75ff
0x000002000067e223 : hlt ; ret 0xff
0x000002000013d1a8 : hlt ; rol dword ptr [rdi], cl ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000275de8 : hlt ; ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000027a964 : hlt ; ror dword ptr [rdi], -0x5d ; ret 0x4f
0x0000020000422613 : hlt ; xor al, al ; ret
0x0000020000376b52 : idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d9e05 : idiv bh ; add rsp, 0x28 ; ret
0x00000200001db09c : idiv bh ; add rsp, 0x38 ; ret
0x00000200001db1c2 : idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001de4c8 : idiv bh ; add rsp, 0x58 ; ret
0x0000020000123a3f : idiv bh ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001e6713 : idiv bh ; add rsp, 0x68 ; ret
0x00000200001de5c4 : idiv bh ; add rsp, 0x70 ; pop rbp ; ret
0x00000200006f975e : idiv bh ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x00000200000a5c2a : idiv bh ; dec dword ptr [rax - 0x3f] ; call 0x1ffc22da446
0x00000200000f6689 : idiv bh ; dec dword ptr [rax - 0x3f] ; call 0x1ffc232aeae
0x00000200000c548e : idiv bh ; dec dword ptr [rax - 0x3f] ; call 0x1ffc32f9daa
0x0000020000441dea : idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c556c : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x000002000005bff8 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f664a : idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x00000200006fb242 : idiv bh ; dec dword ptr [rcx - 0x3f] ; call 0x1ffc392ff5e
0x00000200000733a7 : idiv bh ; inc dword ptr [rcx - 0x75] ; ret 0xa3e9
0x000002000006c60a : idiv bh ; inc dword ptr [rcx - 0x75] ; ret 0xe4eb
0x000002000008af20 : idiv bh ; inc dword ptr [rcx - 0xa] ; ret 0x7408
0x0000020000046a99 : idiv bh ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x8b44
0x000002000036982e : idiv bh ; je 0x20000372884 ; ret
0x0000020000369936 : idiv bh ; je 0x200003728ef ; ret
0x00000200000cba8f : idiv bh ; push rsi ; ret
0x00000200003c4998 : idiv bh ; push rsi ; ret 0xf04
0x0000020000414952 : idiv bh ; ret
0x00000200000842e2 : idiv bh ; ror dword ptr [rcx - 0x79], 0x34 ; ret 0x4c89
0x00000200001d20d6 : idiv bh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000002000010571b : idiv bh ; xor eax, eax ; ret
0x00000200004b9b9b : idiv byte ptr [rdx + 0x1d8b48ff] ; ret
0x00000200001d27fb : idiv di ; add rsp, 0x68 ; ret
0x00000200001d2790 : idiv di ; add rsp, 0x70 ; pop rbp ; ret
0x000002000012df12 : idiv dword ptr [rax + 1] ; ret
0x0000020000468f77 : idiv dword ptr [rax - 0x3ffffff3] ; ret
0x0000020000020340 : idiv dword ptr [rax - 0x52] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000168c8a : idiv dword ptr [rbx + 0x6ce9ffec] ; ret 0xffec
0x000002000000d906 : idiv dword ptr [rcx + 0x2bf76cb2] ; cdq ; ret
0x000002000018d381 : idiv dword ptr [rsp + rbx] ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000020a0e4 : idiv ecx ; add eax, r9d ; ret
0x00000200001e9b61 : idiv ecx ; mov rcx, rdi ; mov rdx, rax ; call qword ptr [rdi]
0x00000200000c5def : idiv edi ; add rsp, 0x28 ; ret
0x0000020000110d26 : idiv edi ; add rsp, 0x38 ; ret
0x00000200001d7d58 : idiv edi ; add rsp, 0x48 ; ret
0x00000200001d2d57 : idiv edi ; add rsp, 0x58 ; ret
0x00000200001cc3b2 : idiv edi ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001d27fc : idiv edi ; add rsp, 0x68 ; ret
0x00000200001d2791 : idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x00000200001d67a6 : idiv edi ; add rsp, 0x70 ; pop rbx ; ret
0x00000200001caf84 : idiv edi ; add rsp, 0x78 ; ret
0x00000200001b4845 : idiv edi ; call rax
0x00000200001b5ded : idiv edi ; call rdx
0x00000200001b32a5 : idiv edi ; cmp byte ptr [rbp - 0x7f], r13b ; jne 0x200001b3276 ; jmp 0x200001b326e
0x0000020000049bc3 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000af401 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000366360 : idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x000002000013172d : idiv edi ; dec dword ptr [rcx - 0x75] ; ret 0xa348
0x0000020000091403 : idiv edi ; dec dword ptr [rcx - 0x75] ; ret 0xba49
0x0000020000536cb3 : idiv edi ; inc dword ptr [rax + rdi + 0x15] ; ret
0x000002000036f49d : idiv edi ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000006de87 : idiv edi ; inc dword ptr [rcx - 0x75] ; ret 0x32e9
0x000002000044fc9b : idiv edi ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000015e200 : idiv edi ; inc ebx ; xor eax, eax ; ret
0x00000200001b5fa5 : idiv edi ; jmp 0x200001321f9
0x000002000042d55b : idiv edi ; jmp 0x2000042d524
0x00000200001d30a4 : idiv edi ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001b5283 : idiv edi ; mov eax, 0xc000000d ; ret
0x00000200001b47ed : idiv edi ; mov eax, 0xc00000bb ; ret
0x0000020000089bd7 : idiv edi ; push qword ptr [rbx] ; shr cl, cl ; ret
0x00000200004df117 : idiv edi ; push rax ; inc dword ptr [rax] ; ret
0x00000200001d8093 : idiv edi ; push rsi ; ret
0x00000200000cbf3d : idiv edi ; push rsi ; ret 0xf03
0x000002000008e7e3 : idiv edi ; ret 0x8348
0x00000200005b299d : idiv edi ; setne dl ; jmp 0x200005b29c1
0x0000020000427d88 : idiv edi ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005a90b3 : idiv edi ; xor r8d, r8d ; call 0x200004152ef
0x00000200001e9b60 : idiv rcx ; mov rcx, rdi ; mov rdx, rax ; call qword ptr [rdi]
0x000002000056d2af : imul ah ; push rsi ; ret
0x000002000054d0d2 : imul al ; dec dword ptr [rbp - 0x75] ; ret
0x000002000054d0f3 : imul al ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200005e76a9 : imul al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffee
0x0000020000675f1f : imul al ; ret
0x00000200004d66b8 : imul al ; ret 0xf7dc
0x0000020000216a6e : imul al ; ret 0xffff
0x0000020000581668 : imul bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000070b5c0 : imul bl ; and al, 0xff ; ret
0x000002000066a099 : imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x0000020000438432 : imul bl ; ret 0x4466
0x0000020000436fa4 : imul bl ; ret 0xb841
0x000002000066aae4 : imul byte ptr [rbx] ; ret 0x4779
0x000002000018a75c : imul cl ; insd dword ptr [rdi], dx ; ret
0x000002000000d90b : imul dword ptr [rbx] ; cdq ; ret
0x000002000065f5ad : imul dword ptr [rdx - 0x78f17dba] ; xor al, 0xfc ; ret 0x4c1f
0x00000200004f5854 : imul eax ; out dx, al ; in al, dx ; ret
0x0000020000535250 : imul eax ; push 0x89 ; ret 0x48ff
0x00000200005328d8 : imul eax ; ret 0xb367
0x000002000067a4f1 : imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x000002000011c229 : imul eax, dword ptr [rax + 0x4c], -0x75 ; je 0x2000011c25c ; sub byte ptr [rcx - 0x75], al ; ret
0x0000020000064e8a : imul eax, dword ptr [rax + rax], 0x1d394400 ; xchg eax, edi ; ret
0x000002000014e7b5 : imul eax, dword ptr [rax], 0 ; add cl, ch ; ret 0xdd
0x0000020000024b71 : imul eax, dword ptr [rbp + 0xf], -0x49 ; rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x000002000038b963 : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001507b5 : imul eax, dword ptr [rcx], 0 ; add cl, ch ; ret 0xbd
0x0000020000703bf8 : imul eax, dword ptr [rcx], 0 ; lea rcx, qword ptr [rbp - 0x39] ; call 0x2000006fe29
0x00000200005a397c : imul eax, dword ptr [rcx], 0x8b440000 ; ret
0x000002000053d556 : imul eax, dword ptr [rdx], -0x18 ; and eax, dword ptr [rbx] ; ret 0x48ff
0x00000200000eadeb : imul eax, dword ptr [rdx], 0 ; add bh, bh ; ret 0x5489
0x00000200003698d1 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003697d4 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003697b0 : imul eax, dword ptr [rdx], 0x8b480000 ; ret 0xc148
0x00000200003698ad : imul eax, dword ptr [rdx], 0xb480000 ; ret 0x8949
0x000002000070d211 : imul eax, dword ptr [rsi], -0x5b ; dec dword ptr [rax - 0x75] ; ret
0x00000200002593f2 : imul eax, dword ptr [rsi], 0x8640f ; sysenter
0x000002000020a14b : imul eax, eax, 0x1c ; add eax, 0xac00 ; ret
0x0000020000516684 : imul eax, eax, 9 ; add byte ptr [rcx - 0x75], cl ; add bh, bh ; ret 0x34d
0x00000200003da9c5 : imul eax, ecx ; add eax, r9d ; ret
0x0000020000202665 : imul eax, ecx ; div r8 ; ret
0x00000200003da962 : imul eax, ecx ; ret
0x000002000009bac6 : imul eax, ecx ; shr rax, 0x38 ; ret
0x00000200003da894 : imul eax, ecx ; sub eax, r8d ; ret
0x00000200003daf25 : imul eax, ecx ; xor eax, r9d ; ret
0x000002000013f76e : imul eax, ecx, 0x989680 ; mov qword ptr [rdx], rax ; ret
0x00000200003db3ef : imul eax, edx ; ret
0x000002000059a429 : imul eax, esp, -0x2f ; push rsi ; ret
0x00000200003db3ee : imul eax, r10d ; ret
0x00000200003da961 : imul eax, r9d ; ret
0x00000200003da893 : imul eax, r9d ; sub eax, r8d ; ret
0x00000200002322cf : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004effb1 : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000177cdd : imul ebp, dword ptr [rax], 0xf641ffef ; ret 0x7502
0x000002000011198b : imul ebp, dword ptr [rdx], 0x8b480000 ; ret
0x0000020000517c80 : imul ebp, eax, -0x18 ; sub dword ptr [rip + 0x6348ffb5], edx ; ret
0x00000200004e00a3 : imul ebp, eax, -1 ; add rsp, 0x28 ; ret
0x00000200001cb63f : imul ebp, ebx, -1 ; add rsp, 0x38 ; ret
0x00000200001615d4 : imul ebp, esi, -1 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000117fc : imul ebp, esi, 0x48fca0a ; pop rbp ; ret
0x0000020000171d69 : imul ebp, esp, 0x220f44ff ; ret
0x00000200003d2405 : imul ebx ; ret 0x44ff
0x0000020000159536 : imul ebx, dword ptr [rax], 0x10618b48 ; jmp rdx
0x00000200005cc4a4 : imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x00000200005a90b1 : imul ebx, dword ptr [rbp + 0x3345fff7], -0x40 ; call 0x200004152f1
0x00000200004c6fb1 : imul ebx, eax, 0x45 ; mov eax, ecx ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x0000020000544f33 : imul ecx ; adc byte ptr [rdi - 0x74b30019], ah ; ret
0x0000020000712d27 : imul ecx, dword ptr [rax + 0x44], -0x75 ; ret 0xd233
0x000002000026d235 : imul ecx, dword ptr [rax + rax - 0x7e], 0x4004c69 ; ret 0x26
0x00000200000d01f3 : imul ecx, dword ptr [rax + rax], -0x75 ; ret 0x80eb
0x00000200000d08a4 : imul ecx, dword ptr [rax + rax], -1 ; ret 0x9489
0x000002000072c92d : imul ecx, dword ptr [rax], 0xa ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000713c3f : imul ecx, dword ptr [rbx + rdi*4 - 1], 0xd62d8948 ; push rdi ; ret
0x00000200000f9035 : imul ecx, dword ptr [rdx - 0x75], 0x3349df04 ; ret 0x2349
0x000002000024d315 : imul ecx, dword ptr [rdx], 0 ; in al, dx ; ret 0x24
0x000002000024d311 : imul ecx, dword ptr [rdx], 0xa6b9400 ; add ah, ch ; ret 0x24
0x00000200006301b3 : imul ecx, dword ptr [rsi + rax*8 - 1], 0x28c48348 ; ret
0x00000200000101a9 : imul ecx, dword ptr [rsi], 0x8e976cb9 ; ret
0x00000200000d01f2 : imul ecx, dword ptr fs:[rax + rax], -0x75 ; ret 0x80eb
0x0000020000470061 : imul ecx, ecx, 0x8b480010 ; ret
0x00000200000914f6 : imul ecx, edx ; add r8, r9 ; inc rdx ; jmp 0x20000091498
0x00000200000e7121 : imul ecx, edx, 0xd ; sub r8, rcx ; mov eax, r8d ; ret
0x00000200004c4c7b : imul edi, dword ptr [rax + 1], 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200002023ba : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000416a7f : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000062e348 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001e12a1 : imul edi, dword ptr [rbx - 0xa], -1 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000593001 : imul edi, dword ptr [rcx], -0xe ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004c25af : imul edi, dword ptr [rdx - 0x3b7cb701], 0x38 ; ret
0x0000020000122b4e : imul edi, ebp, 0xc48348ff ; ret
0x000002000040cfc0 : imul edi, edi, -1 ; inc dword ptr [rbp - 0x74db8b13] ; ret
0x000002000045bb19 : imul edi, edi, 0x8349ffff ; ret 0x4102
0x000002000007a8d6 : imul edi, esp, -1 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000f3cba : imul edx, dword ptr [rax], 0xfb820f00 ; ret 0xa
0x00000200004a6548 : imul edx, dword ptr [rax], 0xff411274 ; ret
0x00000200004b04b1 : imul edx, dword ptr [rbx], 0xb70f000e ; ret 0x8b48
0x000002000013faf9 : imul edx, dword ptr [rdi], 0 ; xor eax, eax ; ret
0x000002000044c3d9 : imul edx, dword ptr [rdx], 0 ; ret
0x00000200005cee5b : imul edx, eax, -1 ; ret
0x0000020000712d5e : imul esi, dword ptr [rax + 0x44], -0x75 ; ret 0xd233
0x000002000064227a : imul esi, dword ptr [rax - 0x3b7cb701], 0x48 ; ret
0x00000200004cd1e7 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000025311 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000730fd7 : imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x000002000001e84a : imul esi, dword ptr [rsi], 0 ; ret 0x344d
0x0000020000402da3 : imul esp, dword ptr [rax - 0x2c], 0xc48348ff ; jo 0x20000402e10 ; ret
0x0000020000404f97 : imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000592789 : imul esp, dword ptr [rax], 0x8b44fff2 ; ret 0x95b8
0x000002000066eb14 : imul esp, dword ptr [rdx], 0xd3358d48 ; ret
0x0000020000122b4d : imul r15, r13, -0x3b7cb701 ; ret
0x000002000053524f : imul r8d ; push 0x89 ; ret 0x48ff
0x00000200000914f5 : imul r9, rdx ; add r8, r9 ; inc rdx ; jmp 0x20000091499
0x0000020000202664 : imul rax, rcx ; div r8 ; ret
0x000002000009bac5 : imul rax, rcx ; shr rax, 0x38 ; ret
0x00000200005cee5a : imul rdx, rax, -1 ; ret
0x00000200004417c8 : in al, -0x16 ; ret 0x48ff
0x0000020000137f8e : in al, -0x17 ; push rbp ; inc byte ptr [rdi] ; add bh, bh ; ret
0x0000020000069d3a : in al, -0x17 ; ret
0x00000200000df93a : in al, -0x17 ; ret 0xfffd
0x000002000044cc9a : in al, -0x18 ; test al, 0x59 ; ret 0x41ff
0x00000200004704c2 : in al, -0x1d ; dec dword ptr [rax - 0x75] ; xlatb ; call 0x200000bc778
0x00000200004704c1 : in al, -0x1d ; dec dword ptr [rax - 0x75] ; xlatb ; call 0x200000bc779
0x0000020000713b14 : in al, -0x1f ; ret
0x000002000059ecae : in al, -0x2c ; push rsi ; ret
0x000002000026d3c8 : in al, -0x2f ; adc byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; xlatb ; adc byte ptr [rax], al ; pushfq ; ret
0x00000200000108a4 : in al, -0x37 ; movsxd rax, eax ; ret
0x0000020000722c30 : in al, -0x3e ; inc dword ptr [rcx - 0x73] ; add dword ptr [r11], r12d ; ret 0xd2f7
0x000002000064cc37 : in al, -0x64 ; jmp qword ptr [rcx]
0x000002000007a325 : in al, -0x75 ; ret
0x000002000004f016 : in al, -0x75 ; ret 0x840f
0x00000200000ada3b : in al, -0x75 ; ret 0x8948
0x000002000022608d : in al, -0xa ; ret
0x0000020000446cbf : in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d97c4 : in al, -1 ; add rsp, 0x28 ; ret
0x00000200002265a0 : in al, -1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001ed1c1 : in al, -1 ; add rsp, 0x48 ; ret
0x00000200001fd8fc : in al, -1 ; dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000517640 : in al, -1 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000463faf : in al, -1 ; mov rdx, rdi ; call 0x2000008a168
0x000002000046afd2 : in al, -1 ; ret
0x0000020000202204 : in al, -1 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000520074 : in al, -1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006821a3 : in al, -2 ; dec dword ptr [rdi] ; mov bh, 0x5f ; or dh, dh ; ret
0x000002000022a8bb : in al, -2 ; jmp 0x2000022a8c9
0x00000200006821ec : in al, -2 ; push rsi ; ret
0x000002000050c787 : in al, -4 ; dec dword ptr [rbx + rcx*4 - 0x39] ; call 0x200001389d4
0x00000200000699f3 : in al, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000447728 : in al, 0x2e ; ret 0x33ff
0x000002000022caaa : in al, 0x38 ; xchg eax, ebp ; ret 6
0x0000020000715858 : in al, 0x3f ; ret
0x00000200005b657b : in al, 0x48 ; add esp, 0x28 ; ret
0x0000020000648c23 : in al, 0x48 ; mov dword ptr [rbp - 0x30], edi ; call 0x20000294009
0x00000200000eb88b : in al, 0x48 ; mov dword ptr [rcx + 0x168], eax ; ret
0x0000020000475733 : in al, 0x49 ; cmp ecx, 1 ; je 0x20000475742 ; ret
0x000002000043b7c8 : in al, 0x4a ; ret
0x0000020000678b78 : in al, 0x50 ; ret
0x00000200004eb210 : in al, 0x53 ; jmp 0x200004eb218
0x000002000044cd58 : in al, 0x58 ; ret 0x44ff
0x00000200005aa8d8 : in al, 0x5a ; ret
0x00000200000b7534 : in al, 0x67 ; or eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x000002000006b7cd : in al, 0x74 ; jbe 0x2000006b760 ; ret
0x0000020000028e9e : in al, 0x74 ; ret 0x81f0
0x000002000018272e : in al, 0x74 ; ret 0xb848
0x0000020000715780 : in al, 0x74 ; sub eax, 0xb6158d48 ; ret
0x000002000061389d : in al, 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003a0178 : in al, 0x75 ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000011810 : in al, 0x7d ; ret
0x0000020000675838 : in al, 0x7e ; ret
0x0000020000169342 : in al, 0xf ; test byte ptr [rdi], ah ; ret 0xffec
0x000002000008781f : in al, 0xf ; test byte ptr [rdx - 0x9fffffa], ah ; ret
0x00000200004aa0cb : in al, 0xf ; test ch, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000007e6c2 : in al, 0xf ; test cl, ch ; or al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000045410c : in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x000002000041ad19 : in al, 1 ; add byte ptr [rax], al ; call rdi
0x00000200000b1d1c : in al, 1 ; add byte ptr [rax], al ; ret
0x00000200001ad027 : in al, dx ; adc eax, 0x8b41fff7 ; ret 0x8e9
0x000002000014415d : in al, dx ; adc eax, 0xc0940f00 ; ret
0x000002000011a18e : in al, dx ; add al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000047fcf2 : in al, dx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000046378c : in al, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000aa33a : in al, dx ; add dword ptr [rax + rdx + 0x404], r9d ; ret
0x0000020000040ace : in al, dx ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x00000200006e85a5 : in al, dx ; add ecx, dword ptr [rax + 0x33] ; adc eax, dword ptr [rcx - 0x7d] ; ret
0x0000020000365e82 : in al, dx ; add rsp, 0x80 ; pop rbx ; ret
0x000002000070b57e : in al, dx ; and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200000f4f64 : in al, dx ; and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200006403f0 : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xe9cf
0x00000200004ea9e8 : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xf432
0x00000200000d22e3 : in al, dx ; and byte ptr [rax - 0x75], cl ; jmp 0x20048cfae3b
0x00000200003f997d : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000026f60 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000036a2c : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004ed412 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000096870 : in al, dx ; and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x00000200003fbde1 : in al, dx ; and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000266ef : in al, dx ; and byte ptr [rax - 9], cl ; ret 0xfff
0x00000200000e4cd8 : in al, dx ; and byte ptr [rbx + 0x200f44f9], cl ; ret
0x000002000023935e : in al, dx ; and byte ptr [rbx + rcx*4 + 0x41], al ; cmp byte ptr [rax - 0x75], cl ; ret 0xd233
0x0000020000618f5f : in al, dx ; and byte ptr [rbx - 0x74afdb8c], cl ; ret 0x3345
0x00000200004bceec : in al, dx ; and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x000002000010f07b : in al, dx ; and byte ptr [rbx - 0x74b7d797], cl ; ret 0x8b4c
0x00000200000e47a5 : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200004e5cbc : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x0000020000096274 : in al, dx ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000141307 : in al, dx ; and byte ptr [rdx], al ; add byte ptr [rax], al ; jmp 0x200001412d6
0x00000200000107df : in al, dx ; call qword ptr [rax]
0x0000020000244e31 : in al, dx ; cmp al, 0 ; ret
0x00000200000b1cb2 : in al, dx ; cmp bh, dh ; ret 0xfffe
0x0000020000093dde : in al, dx ; cmp byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000110cda : in al, dx ; cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x00000200001e7c05 : in al, dx ; cwde ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; ret 0x11b0
0x0000020000722e1c : in al, dx ; cwde ; dec dword ptr [rax - 0x75] ; ret
0x00000200001648ca : in al, dx ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000167967 : in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000169c32 : in al, dx ; dec dword ptr [rax - 0x75] ; ret 0xba48
0x00000200004040fb : in al, dx ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x00000200005665be : in al, dx ; dec dword ptr [rax - 0x7d] ; ret 0x6608
0x000002000040549b : in al, dx ; dec dword ptr [rbx + 0x2718e8d0] ; ret 0xebff
0x000002000056a072 : in al, dx ; dec dword ptr [rbx - 0x16afdbbc] ; ret 0xec99
0x000002000016ba7a : in al, dx ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x000002000016a4c5 : in al, dx ; dec dword ptr [rcx - 0x75] ; ret 0x8348
0x0000020000165df4 : in al, dx ; dec dword ptr [rdi] ; mov bh, 0x47 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000405a3d : in al, dx ; dec dword ptr [rdx - 0x4ad5172d] ; ret 0x48ff
0x0000020000405a66 : in al, dx ; dec dword ptr [rdx - 0x4e0e172d] ; ret 0xebff
0x0000020000405aae : in al, dx ; dec dword ptr [rdx - 0x4e56172d] ; ret 0xffff
0x0000020000405ac2 : in al, dx ; dec dword ptr [rdx - 0x4e6a172d] ; ret 0x48ff
0x0000020000405ad0 : in al, dx ; dec dword ptr [rdx - 0x4e78172d] ; ret 0xe9ff
0x000002000005e419 : in al, dx ; fadd qword ptr [rip - 0x28fcb700] ; jmp rdx
0x000002000013faf8 : in al, dx ; imul edx, dword ptr [rdi], 0 ; xor eax, eax ; ret
0x00000200001f414e : in al, dx ; inc dword ptr [rax + rax*8 - 0x7fbee78b] ; call qword ptr [rcx]
0x0000020000567848 : in al, dx ; inc dword ptr [rax + rdi + 0x2d] ; sti ; call rdx
0x0000020000408c24 : in al, dx ; inc dword ptr [rbx + rcx*4 - 8] ; call 0x20000031498
0x000002000016a41c : in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x0000020000171d6a : in al, dx ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200001681a6 : in al, dx ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x000002000057e0b5 : in al, dx ; jae 0x2000057e0ac ; push rsi ; ret
0x00000200004da3e0 : in al, dx ; jmp 0x200004da3a0
0x00000200004d5172 : in al, dx ; jo 0x200004d5103 ; ret 0x8b48
0x00000200005d2cee : in al, dx ; jo 0x200005d2c7f ; ret 0x8b48
0x0000020000482c86 : in al, dx ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000043113f : in al, dx ; mov al, 1 ; ret
0x00000200003eeab0 : in al, dx ; mov bh, 0x2b ; add dh, dh ; ret
0x000002000060a1e6 : in al, dx ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000011725 : in al, dx ; mov dword ptr [rbx - 0x1b1a7fb8], ebp ; ret 0x394e
0x00000200004c2d59 : in al, dx ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000265a40 : in al, dx ; or byte ptr [rdx], cl ; ret
0x000002000008a157 : in al, dx ; or eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000181052 : in al, dx ; or eax, esi ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000635ffb : in al, dx ; push -0x6bfa74b8 ; ret 0xffc6
0x00000200004367ef : in al, dx ; push -0x7c00ccbb ; ret 0x4d20
0x00000200005b5e9d : in al, dx ; push -0xdfa74b8 ; ret
0x000002000040d61f : in al, dx ; push qword ptr [rdx + 0x3638e801] ; ret 0x48ff
0x0000020000408fa2 : in al, dx ; push qword ptr [rdx + 0x7cb5e801] ; ret 0xe8ff
0x0000020000402d65 : in al, dx ; push qword ptr [rdx - 0x1dfd16ff] ; ret 0xccff
0x0000020000407acd : in al, dx ; push qword ptr [rdx - 0x6b6516ff] ; ret 0xccff
0x0000020000407a99 : in al, dx ; push qword ptr [rdx - 0x6e4116ff] ; ret 0xccff
0x000002000068d609 : in al, dx ; push rax ; call 0x2000012e8dd
0x00000200004a1c38 : in al, dx ; push rdx ; ret
0x000002000056a01a : in al, dx ; push rsi ; ret
0x0000020000567c39 : in al, dx ; push rsi ; ret 0x7401
0x000002000056a42e : in al, dx ; push rsi ; ret 0xf20
0x0000020000065e04 : in al, dx ; ret
0x000002000024d318 : in al, dx ; ret 0x24
0x00000200004f4e9b : in al, dx ; ret 0x48ff
0x00000200007224b4 : in al, dx ; ret 0x49ff
0x00000200003d23ce : in al, dx ; ret 0x4cff
0x000002000051f0c1 : in al, dx ; ret 0x85ff
0x0000020000294d88 : in al, dx ; ret 0xb
0x000002000019ce9c : in al, dx ; ret 3
0x00000200004a0076 : in al, dx ; sub al, ch ; mov bl, 0x38 ; ret 0x85ff
0x00000200004b4972 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200004b11a2 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000bcaca : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000049d754 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x00000200000e274e : in al, dx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x0000020000097802 : in al, dx ; sub byte ptr [rbp - 0x75], al ; ror dword ptr [rax - 0x75], 1 ; ret 0x8b44
0x00000200004cc796 : in al, dx ; sub byte ptr [rbx], dh ; ror byte ptr [rbp + 0x72e8034a], cl ; ret
0x0000020000686c90 : in al, dx ; xor byte ptr [rax - 0x75], cl ; fld1 ; ret 0xbb1d
0x00000200004ff35b : in al, dx ; xor byte ptr [rax - 0x75], cl ; int1 ; call 0x2000012e1c0
0x00000200003e3e59 : in al, dx ; xor byte ptr [rbp - 0x75], cl ; loope 0x200003e3def ; ret 0x8b4c
0x00000200000e4d62 : in al, dx ; xor byte ptr [rbx + rcx*4 + 0x3d], al ; lodsd eax, dword ptr [rsi] ; ret 0x26
0x00000200004c4b14 : in al, dx ; xor byte ptr [rbx + rcx*4 + 0x4a], cl ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200004ad9d2 : in al, dx ; xor byte ptr [rcx - 0x7d], cl ; movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000680690 : in al, dx ; xor byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000039774 : in al, dx ; xor eax, eax ; ret
0x000002000072224b : in eax, -0x13 ; ret 0x8bff
0x0000020000509051 : in eax, -0x15 ; adc al, 0x8b ; ret 0x348
0x000002000001172b : in eax, -0x1c ; ret 0x394e
0x000002000067f0a1 : in eax, -0x3e ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000f0d8a : in eax, -0x41 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd233
0x00000200005f9a9b : in eax, -0x44 ; mov esi, 0xc48348ff ; pop rax ; ret
0x00000200000b56d7 : in eax, -0x46 ; or al, byte ptr [rax] ; ret
0x000002000022fd28 : in eax, -0x50 ; add ebx, eax ; xor al, al ; ret
0x0000020000136c97 : in eax, -0x50 ; and dword ptr [rax], eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000051dd27 : in eax, -0x50 ; ret 0x48ff
0x000002000046342a : in eax, -0x75 ; ret
0x00000200004021a7 : in eax, -0xe ; ret 0x65ff
0x00000200001e5864 : in eax, -1 ; add rsp, 0x28 ; ret
0x000002000022ce32 : in eax, -1 ; add rsp, 0x38 ; ret
0x000002000022e7d1 : in eax, -1 ; add rsp, 0x48 ; ret
0x000002000061ddff : in eax, -1 ; add rsp, 0x98 ; ret
0x000002000044d011 : in eax, -1 ; call 0x200000702b5
0x000002000044d164 : in eax, -1 ; call 0x20000070845
0x0000020000532f82 : in eax, -1 ; call 0x2000015e23d
0x00000200003a0040 : in eax, -1 ; inc dword ptr [rbp - 0x75] ; ret 0x1e9
0x0000020000538003 : in eax, -1 ; mov rcx, r10 ; call r8
0x000002000053563d : in eax, -1 ; mov rcx, rdi ; call rax
0x0000020000132abd : in eax, -1 ; ret
0x00000200004f47bb : in eax, -1 ; test al, 4 ; jne 0x200004f47cc ; mov al, 1 ; ret
0x0000020000376a1b : in eax, -1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001b6d32 : in eax, -9 ; push rsi ; ret 0x7503
0x000002000064f1be : in eax, 0 ; add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000023794a : in eax, 0x11 ; add dh, dh ; ret
0x0000020000077fbb : in eax, 0x23 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000024f569 : in eax, 0x24 ; add byte ptr [rdx], al ; sbb cl, byte ptr [rax + rax] ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x000002000051ad5f : in eax, 0x2c ; ret 0x48ff
0x00000200001c6180 : in eax, 0x33 ; rol bl, 0x48 ; mov eax, edx ; ret
0x00000200003a00c1 : in eax, 0x39 ; add byte ptr [rip + 0x380039ed], cl ; ret 0x39
0x0000020000233e94 : in eax, 0x41 ; add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200005b5c81 : in eax, 0x41 ; mov eax, eax ; ret
0x0000020000404049 : in eax, 0x41 ; sub edx, eax ; mov eax, edx ; jmp 0x2000040400c
0x0000020000678dca : in eax, 0x4e ; ret
0x0000020000142062 : in eax, 0x66 ; mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x000002000000edef : in eax, 0xa ; ret
0x000002000009a355 : in eax, 2 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000016ad23 : in eax, 7 ; add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x0000020000662329 : in eax, dx ; add al, byte ptr [rax] ; ret
0x000002000005f2c2 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200002312fb : in eax, dx ; add byte ptr cs:[rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200001a79e7 : in eax, dx ; add eax, dword ptr [rcx - 0xa] ; ret 0x7507
0x0000020000216a6a : in eax, dx ; add edi, eax ; xor esi, esi ; call 0x20000212cc3
0x0000020000118d78 : in eax, dx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048d170 : in eax, dx ; call 0x2000043c945
0x000002000018fd2c : in eax, dx ; call qword ptr [rax - 0xd78de17]
0x0000020000572f68 : in eax, dx ; dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x1a], 1 ; ret
0x000002000016e89e : in eax, dx ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000016d9dc : in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200001727a4 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000012efcd : in eax, dx ; dec dword ptr [rbp - 0x75] ; ret
0x00000200005738ff : in eax, dx ; dec dword ptr [rbp - 0x75] ; ret 0x8a40
0x0000020000130a38 : in eax, dx ; dec dword ptr [rcx + 0x23] ; ret
0x000002000016fc3b : in eax, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8a40
0x0000020000570722 : in eax, dx ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000043a579 : in eax, dx ; je 0x2000043a595 ; mov rcx, rbp ; call 0x20000063d9d
0x000002000043a631 : in eax, dx ; je 0x2000043a645 ; mov rcx, rbp ; call 0x20000068fd9
0x0000020000447d73 : in eax, dx ; je 0x20000447d87 ; mov rcx, rdx ; call 0x20000068fd9
0x00000200001e6c7f : in eax, dx ; jmp 0x1ffc3a1b589
0x000002000007d0d9 : in eax, dx ; jmp 0x2000007cd02
0x00000200005c12c7 : in eax, dx ; jmp rsi
0x00000200001ddf2e : in eax, dx ; jrcxz 0x200001ddf35 ; call 0x2000008a165
0x000002000013cdb2 : in eax, dx ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x00000200003ef4bf : in eax, dx ; mov eax, 0xc000000d ; ret
0x00000200004799e2 : in eax, dx ; mov eax, 1 ; ret
0x00000200004add2f : in eax, dx ; mov qword ptr [rdx + r9*8 + 0x70], rcx ; inc dword ptr [rdx + 0x6c] ; ret
0x00000200000e44be : in eax, dx ; mov rax, rdx ; ret
0x000002000000e6d8 : in eax, dx ; mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000060a416 : in eax, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200002373df : in eax, dx ; or al, 0 ; ret
0x000002000006c709 : in eax, dx ; or bh, bh ; int 0x75
0x0000020000011895 : in eax, dx ; pop qword ptr [rcx + 0x6a] ; sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x0000020000574ba9 : in eax, dx ; push rdi ; ret
0x000002000056ec1a : in eax, dx ; push rsi ; ret
0x000002000057054f : in eax, dx ; push rsi ; ret 0xf04
0x000002000016e9ce : in eax, dx ; push rsi ; rol dword ptr [rcx], 0x75 ; or dword ptr [rcx + 0x3b], eax ; ret
0x000002000008e74f : in eax, dx ; ret
0x0000020000104d17 : in eax, dx ; ret 0x24
0x000002000072225c : in eax, dx ; ret 0x41ff
0x00000200003d2275 : in eax, dx ; ret 0x48ff
0x000002000043b856 : in eax, dx ; ret 0x4cff
0x000002000072224c : in eax, dx ; ret 0x8bff
0x00000200006660d1 : in eax, dx ; ret 0xe9ff
0x0000020000666113 : in eax, dx ; ret 0xebff
0x000002000068aa4f : in eax, dx ; ret 0xffc1
0x00000200005f5316 : in eax, dx ; ret 0xffce
0x0000020000219367 : in eax, dx ; ret 0xffe7
0x00000200004356bf : in eax, dx ; stosd dword ptr [rdi], eax ; ret
0x0000020000442213 : in eax, dx ; sub bh, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000238bf9 : in eax, dx ; sub byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000000ede8 : in eax, dx ; xchg eax, esi ; add eax, 0x274b5945 ; in eax, 0xa ; ret
0x000002000019ae1c : in eax, dx ; xor ah, 0xff ; mov eax, 0xc00000bb ; ret
0x000002000044cc97 : in eax, dx ; xor r12d, r12d ; call 0x2000007264f
0x000002000009d307 : inc ax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000135e1f : inc ax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x0000020000141992 : inc bl ; lea rax, qword ptr [rcx + rax - 3] ; ret
0x0000020000488d74 : inc byte ptr [r13 + 3] ; ret 0xf41
0x000002000013e2c8 : inc byte ptr [r9 + 0x3b] ; ret
0x0000020000501dbf : inc byte ptr [rax] ; add byte ptr [rax], al ; call 0x2000014e066
0x0000020000488d75 : inc byte ptr [rbp + 3] ; ret 0xf41
0x0000020000412ed8 : inc byte ptr [rbp - 0x1677f001] ; ret 0x14
0x00000200000c42e2 : inc byte ptr [rbp - 0x49f0be40] ; ret 0xf44
0x00000200000cb8f1 : inc byte ptr [rcx + 0x3a] ; ret 0x840f
0x000002000013e2c9 : inc byte ptr [rcx + 0x3b] ; ret
0x000002000050b262 : inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x000002000010c785 : inc byte ptr [rcx - 0x75] ; ret
0x0000020000373e65 : inc byte ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000020000137f91 : inc byte ptr [rdi] ; add bh, bh ; ret
0x0000020000148a9a : inc byte ptr [rsi + 0xf] ; ret
0x00000200000960c1 : inc dl ; jmp 0x20000096089
0x00000200000960c1 : inc dl ; jmp 0x2000009608b
0x00000200001c1cc9 : inc dword ptr [0x2e44] ; ret
0x00000200004a38e1 : inc dword ptr [0x2e48] ; ret
0x00000200004d8119 : inc dword ptr [0x2e4c] ; ret
0x000002000012a171 : inc dword ptr [0x5504] ; ret
0x00000200001c1cd5 : inc dword ptr [0x5540] ; ret
0x00000200001c0a1e : inc dword ptr [r10 + 0xc] ; ret
0x00000200001c0a55 : inc dword ptr [r10 + 8] ; ret
0x000002000051659c : inc dword ptr [r11 - 0x4a880208] ; jmp 0x200005b2898
0x0000020000563ed4 : inc dword ptr [r11 - 0x79f0fe08] ; ret 0xebef
0x00000200000f76fc : inc dword ptr [r11] ; ret 0xc0ff
0x00000200001c2642 : inc dword ptr [r14 - 0x75] ; ret 0x4504
0x00000200003f0e16 : inc dword ptr [r8 + 0x10] ; xor eax, eax ; ret
0x000002000051ec00 : inc dword ptr [r8 + 2] ; add byte ptr [rax], al ; call 0x2000014dc69
0x000002000014707f : inc dword ptr [r8] ; ret
0x000002000061bc5c : inc dword ptr [r9 + 3] ; ret 0x4489
0x000002000004c2fc : inc dword ptr [r9 + 3] ; ret 0x789
0x0000020000500279 : inc dword ptr [rax + 0x10] ; ret
0x00000200003f0e17 : inc dword ptr [rax + 0x10] ; xor eax, eax ; ret
0x000002000067a582 : inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001f2c53 : inc dword ptr [rax + 0x1f28] ; ret
0x000002000012941a : inc dword ptr [rax + 0x200] ; ret
0x0000020000127b8a : inc dword ptr [rax + 0x8d8e] ; add byte ptr [rax - 0x17], al ; ret
0x00000200001d48bd : inc dword ptr [rax + 0xb8] ; mov rax, rdx ; ret
0x000002000051ec01 : inc dword ptr [rax + 2] ; add byte ptr [rax], al ; call 0x2000014dc68
0x000002000040502d : inc dword ptr [rax + 8] ; mov rcx, rbp ; call 0x20000031499
0x00000200005c42c1 : inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x000002000070d129 : inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x0000020000439f53 : inc dword ptr [rax + rax*8 - 0x74b7ed8c] ; ret
0x000002000061ebad : inc dword ptr [rax + rax*8 - 0x7cb7da8b] ; ret
0x000002000013d244 : inc dword ptr [rax + rax*8 - 0x7eb6ec8c] ; ret
0x00000200001f414f : inc dword ptr [rax + rax*8 - 0x7fbee78b] ; call qword ptr [rcx]
0x00000200001d1274 : inc dword ptr [rax + rax*8 - 0xbef78c] ; ret
0x000002000065a7f0 : inc dword ptr [rax + rcx*4 + 0x2d] ; and al, 0xd2 ; ret
0x0000020000722794 : inc dword ptr [rax + rcx*4 + 0x2d] ; sub edx, ebp ; ret 0x44ff
0x000002000004026d : inc dword ptr [rax + rcx*4 - 0x55] ; ret 0
0x0000020000536cb5 : inc dword ptr [rax + rdi + 0x15] ; ret
0x000002000065a3ad : inc dword ptr [rax + rdi + 0x2d] ; add ebx, edx ; ret
0x000002000019e355 : inc dword ptr [rax + rdi + 0x2d] ; ret
0x0000020000567849 : inc dword ptr [rax + rdi + 0x2d] ; sti ; call rdx
0x000002000009077a : inc dword ptr [rax + rdi - 0x42] ; ret
0x000002000011a514 : inc dword ptr [rax - 0x4a] ; add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000065a93f : inc dword ptr [rax - 0x76] ; jmp 0x2000065a995
0x0000020000372422 : inc dword ptr [rax - 0x7af0fcc1] ; ret
0x0000020000553db3 : inc dword ptr [rax - 0x7c] ; div byte ptr [rax - 0xa] ; ret
0x000002000003ba43 : inc dword ptr [rax - 0x80] ; call qword ptr [rax]
0x00000200001ec05e : inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x000002000010e032 : inc dword ptr [rax - 0x9dfe5b1] ; ret
0x000002000004f960 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3348
0x000002000017e03c : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8348
0x00000200000995d5 : inc dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000039bbe : inc dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x000002000006fe48 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x8966
0x00000200003976bc : inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000045ea8c : inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4918
0x0000020000426038 : inc dword ptr [rax] ; add byte ptr [rax], al ; add dword ptr [rdi], ecx ; test esi, esp ; call qword ptr [rbx]
0x00000200006792b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000e6e02 : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200004aa274 : inc dword ptr [rax] ; add byte ptr [rbp + 0x1c], dh ; mov eax, r9d ; ret
0x0000020000722d08 : inc dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006f1dd6 : inc dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; or cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200004ade36 : inc dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000228744 : inc dword ptr [rax] ; add byte ptr [rbx], dh ; ret 0x8d48
0x000002000054bedb : inc dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0xb849
0x00000200002278cf : inc dword ptr [rax] ; add byte ptr [rcx + 0x33], al ; ret 0x4489
0x00000200000ed1e4 : inc dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 9], cl ; mov eax, r8d ; ret
0x000002000041a9e4 : inc dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x0000020000622079 : inc dword ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200007157b8 : inc dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000062fc33 : inc dword ptr [rax] ; add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x00000200005ad6ee : inc dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; ret 0x8966
0x00000200001ad454 : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x475
0x000002000003ace8 : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200000f5f7d : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x0000020000514353 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200004bad18 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x000002000009607e : inc dword ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ret 0x3377
0x0000020000380606 : inc dword ptr [rax] ; add cl, al ; jmp 0x1ffc1fa111e
0x000002000071dff0 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000068c759 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036ce56 : inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004dce37 : inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000036921e : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000e19c9 : inc dword ptr [rax] ; je 0x200000e19d2 ; ret
0x00000200004decf5 : inc dword ptr [rax] ; je 0x200004ded02 ; xor al, al ; ret
0x00000200005efbcb : inc dword ptr [rax] ; je 0x200005efbde ; mov eax, 0xc0000303 ; ret
0x00000200003c6d79 : inc dword ptr [rax] ; jne 0x200003c6d8a ; call 0x20000032fc6
0x0000020000600ffe : inc dword ptr [rax] ; jne 0x2000060100e ; and qword ptr [r8], 0 ; ret
0x00000200006869b6 : inc dword ptr [rax] ; jne 0x200006869c9 ; mov eax, 0xc00000bb ; ret
0x000002000068c5d1 : inc dword ptr [rax] ; jne 0x2000068c5e4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051f534 : inc dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000671586 : inc dword ptr [rax] ; mov rdx, rcx ; jne 0x20000671599 ; xor eax, eax ; ret
0x0000020000147080 : inc dword ptr [rax] ; ret
0x0000020000605ecf : inc dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000055c6d0 : inc dword ptr [rbp + 0x14840fc0] ; ret
0x0000020000164db5 : inc dword ptr [rbp + 0x14] ; add al, ch ; ret 0xeff7
0x000002000054c7af : inc dword ptr [rbp + 0x15850ff6] ; ret 0xffe8
0x00000200001ba36d : inc dword ptr [rbp + 0x23] ; ret
0x000002000021d770 : inc dword ptr [rbp + 0x2b] ; ret 0x3b44
0x00000200003baaf1 : inc dword ptr [rbp + 0x33] ; dec dword ptr [rax - 0x75] ; ret
0x000002000009f8b9 : inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x00000200004c56d9 : inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret
0x000002000022608a : inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x000002000056bc80 : inc dword ptr [rbp + 0x33] ; leave ; jmp 0x20000437ee4
0x000002000056bca5 : inc dword ptr [rbp + 0x33] ; leave ; mov rdi, r9 ; jmp 0x20000437ef0
0x000002000041d15d : inc dword ptr [rbp + 0x33] ; leave ; xor edx, edx ; call 0x20000048621
0x000002000055f4c4 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x73], 0x50 ; xor ebp, eax ; ret
0x000002000048729c : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4489
0x000002000051f8a4 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200005e2979 : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200005a90b4 : inc dword ptr [rbp + 0x33] ; shr al, 0x2b ; ret 0xffe6
0x0000020000192014 : inc dword ptr [rbp + 0x33] ; shr cl, 0x5d ; ret 0xfff2
0x000002000065e45a : inc dword ptr [rbp + 0x391275c0] ; ret
0x00000200001ad479 : inc dword ptr [rbp + 0x3b0e74f6] ; ret 0xe76
0x00000200001a6fb0 : inc dword ptr [rbp + 0x3b] ; ret
0x00000200001a6fb9 : inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x000002000064dc55 : inc dword ptr [rbp + 0x480575c0] ; add esp, 0x28 ; ret
0x0000020000191af0 : inc dword ptr [rbp + 0x5890fc0] ; ret 0xfff2
0x000002000043d65b : inc dword ptr [rbp + 0x70840fc0] ; call qword ptr [rdx]
0x000002000018a74a : inc dword ptr [rbp + 0x9840fd2] ; ret
0x000002000054c7b7 : inc dword ptr [rbp + 0xd850fdb] ; ret 0xffe8
0x0000020000405337 : inc dword ptr [rbp + 0xf0c7fc0] ; cdq ; ret
0x000002000068f76c : inc dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x344
0x00000200004f93f8 : inc dword ptr [rbp + 3] ; ret
0x00000200004ab04a : inc dword ptr [rbp + 3] ; ret 0x8b48
0x00000200003fafe0 : inc dword ptr [rbp - 0x1b7af040] ; ret 0x15
0x0000020000580218 : inc dword ptr [rbp - 0x2277f040] ; ret
0x00000200006f52e7 : inc dword ptr [rbp - 0x247bf040] ; ret 2
0x000002000070939f : inc dword ptr [rbp - 0x3877f040] ; ret
0x00000200000eb22f : inc dword ptr [rbp - 0x3ebbf040] ; ret
0x0000020000596dc7 : inc dword ptr [rbp - 0x5f7af001] ; ret
0x0000020000471ddb : inc dword ptr [rbp - 0x6af0be40] ; ret 0x3d83
0x000002000045bed8 : inc dword ptr [rbp - 0x6c77f040] ; ret
0x00000200004ab430 : inc dword ptr [rbp - 0x74a68725] ; ret
0x000002000040cfc3 : inc dword ptr [rbp - 0x74db8b13] ; ret
0x000002000049a44e : inc dword ptr [rbp - 0x74dc8a25] ; ret
0x00000200004058c2 : inc dword ptr [rbp - 0x74dd8725] ; ret
0x000002000043dd2d : inc dword ptr [rbp - 0x74e58640] ; ret
0x00000200005d4ab6 : inc dword ptr [rbp - 0x74eb8b25] ; ret
0x000002000065d450 : inc dword ptr [rbp - 0x74f38740] ; ret
0x00000200005c0306 : inc dword ptr [rbp - 0x74fb8625] ; ret
0x000002000017831e : inc dword ptr [rbp - 0x75] ; ret
0x0000020000406776 : inc dword ptr [rbp - 0x75] ; ret 0x1be
0x00000200003a0042 : inc dword ptr [rbp - 0x75] ; ret 0x1e9
0x000002000017e701 : inc dword ptr [rbp - 0x75] ; ret 0x5ba
0x000002000016fc3c : inc dword ptr [rbp - 0x75] ; ret 0x8a40
0x000002000054d0f5 : inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x000002000007d1da : inc dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200000a324e : inc dword ptr [rbp - 0x75] ; ret 0xd08b
0x00000200004ab485 : inc dword ptr [rbp - 0x76] ; ret 0x28e9
0x000002000058795e : inc dword ptr [rbp - 0x777f040] ; ret
0x0000020000391edd : inc dword ptr [rbp - 0x7ae78b40] ; ret
0x00000200005b668f : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x00000200003b198a : inc dword ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x0000020000454109 : inc dword ptr [rbp - 0x7c] ; in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x00000200004a16c5 : inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x00000200004ef31a : inc dword ptr [rbp - 0x848b40] ; ret
0x00000200003b7e1a : inc dword ptr [rbp - 0x8e58125] ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200005f3dad : inc dword ptr [rbp - 0xde8b40] ; ret
0x00000200005ef19e : inc dword ptr [rbp - 0xe58740] ; ret
0x00000200004fefd3 : inc dword ptr [rbp - 0xe88740] ; ret
0x0000020000717d72 : inc dword ptr [rbp - 0xf68740] ; ret
0x00000200006f452e : inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200007103c7 : inc dword ptr [rbp - 0xf88740] ; ret
0x0000020000552558 : inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x00000200004fce94 : inc dword ptr [rbx + 0x18] ; xor r8d, r8d ; jmp 0x200004fce66
0x00000200005903e4 : inc dword ptr [rbx + 0x3ae9ffc8] ; ret 0xfff1
0x0000020000030e19 : inc dword ptr [rbx + 0x4c] ; call 0x2000003d071
0x00000200003fb4f9 : inc dword ptr [rbx + 0xc8a07e0] ; or dh, dh ; ret 0x7401
0x0000020000410161 : inc dword ptr [rbx + 8] ; mov rcx, r15 ; call 0x20000031499
0x000002000040556c : inc dword ptr [rbx + 8] ; mov rcx, rsi ; call 0x20000031499
0x0000020000722247 : inc dword ptr [rbx + rcx*4 + 0x1d] ; in eax, -0x13 ; ret 0x8bff
0x00000200000c366a : inc dword ptr [rbx + rcx*4 + 0xd] ; ret 0x28d9
0x000002000007386d : inc dword ptr [rbx + rcx*4 - 0x3e] ; jmp 0x200000737f7
0x00000200000def10 : inc dword ptr [rbx + rcx*4 - 0x3e] ; jmp 0x200000dee99
0x0000020000408c25 : inc dword ptr [rbx + rcx*4 - 8] ; call 0x20000031497
0x00000200005af963 : inc dword ptr [rbx - 0x309ea2f3] ; jmp qword ptr [rax]
0x00000200005af999 : inc dword ptr [rbx - 0x309ed8f3] ; call qword ptr [rax]
0x000002000057caaf : inc dword ptr [rbx - 0x3e] ; jmp 0x2000057cb22
0x000002000072441a : inc dword ptr [rbx - 0x44c5edf3] ; jmp qword ptr [rax]
0x000002000072852d : inc dword ptr [rbx - 0x450700f3] ; call qword ptr [rax]
0x000002000051659d : inc dword ptr [rbx - 0x4a880208] ; jmp 0x200005b2897
0x00000200001a99df : inc dword ptr [rbx - 0x74ffdc9b] ; ret 0x8d48
0x000002000062799d : inc dword ptr [rbx - 0x78f0f708] ; ret
0x0000020000563ed5 : inc dword ptr [rbx - 0x79f0fe08] ; ret 0xebef
0x000002000054c77c : inc dword ptr [rbx - 0x7af0ef05] ; ret 0xffe8
0x000002000054c773 : inc dword ptr [rbx - 0x7af0fb02] ; push rax ; ret 0xffe8
0x000002000055c630 : inc dword ptr [rbx - 0x7af0fd06] ; ret 0xffea
0x000002000055ba78 : inc dword ptr [rbx - 0x7bf0fd16] ; ret 0
0x00000200005826e8 : inc dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000599e1c : inc dword ptr [rbx - 0x7df0ef06] ; ret 0xfffc
0x000002000037520f : inc dword ptr [rbx - 0x9d3e2f3] ; call qword ptr [rax]
0x0000020000143e23 : inc dword ptr [rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000072869e : inc dword ptr [rbx] ; fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x00000200005829cf : inc dword ptr [rbx] ; ret
0x00000200000f76fd : inc dword ptr [rbx] ; ret 0xc0ff
0x00000200005f2d3c : inc dword ptr [rbx] ; ret 0xe083
0x000002000011b5d4 : inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x2000011b5cd
0x000002000015e211 : inc dword ptr [rcx + 0x10] ; ret
0x00000200006dfe40 : inc dword ptr [rcx + 0x23] ; ret
0x00000200006e845a : inc dword ptr [rcx + 0x23] ; ret 0x2345
0x00000200006e48a4 : inc dword ptr [rcx + 0x23] ; ret 0xe0c1
0x00000200002076dc : inc dword ptr [rcx + 0x244] ; ret
0x00000200002076cf : inc dword ptr [rcx + 0x248] ; ret
0x000002000015dcf9 : inc dword ptr [rcx + 0x24] ; ret
0x00000200002076c8 : inc dword ptr [rcx + 0x24c] ; ret
0x0000020000130064 : inc dword ptr [rcx + 0x2b] ; ret 0x344
0x00000200004c5c19 : inc dword ptr [rcx + 0x344] ; xor eax, eax ; ret
0x0000020000189669 : inc dword ptr [rcx + 0x3a] ; ret
0x0000020000227eca : inc dword ptr [rcx + 0x3a] ; ret 0xb77
0x00000200001a5e94 : inc dword ptr [rcx + 0x3b] ; ret
0x00000200001942c1 : inc dword ptr [rcx + 0x3b] ; rol dword ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x000002000005915a : inc dword ptr [rcx + 0x3b] ; rol dword ptr [rcx - 0x75], cl ; ret
0x000002000037d3ae : inc dword ptr [rcx + 0x3c] ; ret
0x00000200005dba48 : inc dword ptr [rcx + 0x58] ; ret
0x0000020000411960 : inc dword ptr [rcx + 0x5a8] ; ret
0x0000020000504d49 : inc dword ptr [rcx + 0x5f] ; pop r14 ; pop r12 ; ret
0x000002000015e32e : inc dword ptr [rcx + 0x70] ; and dword ptr [rcx + 0x3c], 0 ; xor eax, eax ; ret
0x00000200004c6f65 : inc dword ptr [rcx + 0x750] ; ret
0x00000200006ea7c5 : inc dword ptr [rcx + 0xb] ; ret
0x0000020000520183 : inc dword ptr [rcx + 0xc] ; ret
0x0000020000383ffd : inc dword ptr [rcx + 0xf] ; mov edx, 0x820f11e0 ; ret
0x0000020000596ce6 : inc dword ptr [rcx + 3] ; out dx, eax ; jmp 0x200004c2f7b
0x000002000006cb04 : inc dword ptr [rcx + 3] ; ret
0x000002000061bc5d : inc dword ptr [rcx + 3] ; ret 0x4489
0x000002000036f48d : inc dword ptr [rcx + 3] ; ret 0x588
0x000002000004c2fd : inc dword ptr [rcx + 3] ; ret 0x789
0x000002000036f49f : inc dword ptr [rcx + 3] ; ret 0xc0a3
0x00000200001fba89 : inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001fba81 : inc dword ptr [rcx + 4] ; ret
0x00000200004d9fe8 : inc dword ptr [rcx + 4] ; xor eax, eax ; ret
0x00000200001fba8d : inc dword ptr [rcx + 8] ; ret
0x000002000020864b : inc dword ptr [rcx + rcx*4 + 0x1f] ; mov eax, r10d ; jmp 0x20000208679
0x0000020000722838 : inc dword ptr [rcx + rcx*4 + 5] ; jmp 0x20000722807
0x000002000007732c : inc dword ptr [rcx + rcx*8 - 0x49f0f08b] ; ret 0xe083
0x000002000062df68 : inc dword ptr [rcx + rdi + 0x2d] ; clc ; ret 7
0x0000020000449ae2 : inc dword ptr [rcx - 0x42] ; mov ebx, 0xf6c00000 ; ret
0x0000020000585edd : inc dword ptr [rcx - 0x47] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x200004921ed
0x00000200001bc153 : inc dword ptr [rcx - 0x48] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000158379
0x00000200003e9b66 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000070d4c6 : inc dword ptr [rcx - 0x50] ; add dword ptr [rbx], esi ; shr al, cl ; outsd dx, dword ptr [rsi] ; ret 0xff9d
0x000002000070d525 : inc dword ptr [rcx - 0x50] ; add eax, ebp ; pop rsi ; ret
0x00000200006ed533 : inc dword ptr [rcx - 0x50] ; add eax, ebp ; push rax ; ret
0x0000020000722c32 : inc dword ptr [rcx - 0x73] ; add dword ptr [r11], r12d ; ret 0xd2f7
0x00000200001a7b36 : inc dword ptr [rcx - 0x73] ; call rbx
0x000002000051fc4e : inc dword ptr [rcx - 0x73] ; ja 0x2000051fc44 ; mov ah, ah ; ret 0x85ff
0x00000200000cb754 : inc dword ptr [rcx - 0x75] ; add al, 0x2b ; ret
0x00000200003e3115 : inc dword ptr [rcx - 0x75] ; cmc ; jmp 0x200003df3dd
0x0000020000099220 : inc dword ptr [rcx - 0x75] ; dec dword ptr [rax - 0x75] ; ret
0x000002000009b5e8 : inc dword ptr [rcx - 0x75] ; enter -0x74b8, -0x2a ; call 0x20000097831
0x000002000005c743 : inc dword ptr [rcx - 0x75] ; ret
0x00000200006164ad : inc dword ptr [rcx - 0x75] ; ret 0x2b41
0x000002000006de89 : inc dword ptr [rcx - 0x75] ; ret 0x32e9
0x00000200003f33e4 : inc dword ptr [rcx - 0x75] ; ret 0x35e9
0x00000200005b23bb : inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x000002000017f420 : inc dword ptr [rcx - 0x75] ; ret 0x4489
0x0000020000552237 : inc dword ptr [rcx - 0x75] ; ret 0x55e9
0x00000200004f9448 : inc dword ptr [rcx - 0x75] ; ret 0x5be9
0x00000200004acda2 : inc dword ptr [rcx - 0x75] ; ret 0x8545
0x0000020000213f62 : inc dword ptr [rcx - 0x75] ; ret 0x894d
0x000002000021e2a6 : inc dword ptr [rcx - 0x75] ; ret 0x8b4d
0x00000200001ad02a : inc dword ptr [rcx - 0x75] ; ret 0x8e9
0x00000200000f9f2e : inc dword ptr [rcx - 0x75] ; ret 0x950f
0x00000200000733a9 : inc dword ptr [rcx - 0x75] ; ret 0xa3e9
0x0000020000082f76 : inc dword ptr [rcx - 0x75] ; ret 0xaae9
0x0000020000086929 : inc dword ptr [rcx - 0x75] ; ret 0xb7e9
0x00000200001366e6 : inc dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000116ffb : inc dword ptr [rcx - 0x75] ; ret 0xd7e9
0x000002000006c60c : inc dword ptr [rcx - 0x75] ; ret 0xe4eb
0x00000200000733dc : inc dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200005b1e5f : inc dword ptr [rcx - 0x75] ; ret 0xff0
0x000002000050a166 : inc dword ptr [rcx - 0x75] ; ror byte ptr [rbp - 0x75], 0x1c ; ret
0x00000200004d8343 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000050e75 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rbp - 0x75], 0x1c ; ret 0x894c
0x00000200001997d8 : inc dword ptr [rcx - 0x75] ; xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x000002000044dafe : inc dword ptr [rcx - 0x76] ; fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x000002000037202f : inc dword ptr [rcx - 0x76] ; fucomp st(1) ; ret 0xff56
0x00000200000b870f : inc dword ptr [rcx - 0x76] ; or ecx, dword ptr [rcx - 1] ; ret
0x000002000006f68b : inc dword ptr [rcx - 0x76] ; ret 0x3241
0x00000200004d4eb2 : inc dword ptr [rcx - 0x76] ; ret 0x34e9
0x00000200003bf88f : inc dword ptr [rcx - 0x76] ; ret 0x3ee9
0x000002000011523b : inc dword ptr [rcx - 0x76] ; ret 0x7ce9
0x00000200004f4d4e : inc dword ptr [rcx - 0x76] ; salc ; call 0x20000030f76
0x000002000053da22 : inc dword ptr [rcx - 0x76] ; xor byte ptr [r10], r12b ; ret 0xd8f6
0x00000200006d8f53 : inc dword ptr [rcx - 0x78] ; adc byte ptr [rbp + 3], cl ; ret
0x0000020000590a1f : inc dword ptr [rcx - 0x78] ; adc cl, byte ptr [rcx - 1] ; ret 0x344
0x000002000045bd74 : inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x0000020000577786 : inc dword ptr [rcx - 0x7b] ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200005342b7 : inc dword ptr [rcx - 0x7c] ; fbstp dword ptr [rbp + rcx - 0xa] ; ret
0x00000200006037f9 : inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x00000200005f2e19 : inc dword ptr [rcx - 0x7c] ; fnsave dword ptr [rbp + rcx - 0xa] ; ret
0x00000200005aa828 : inc dword ptr [rcx - 0x7c] ; fnsave dword ptr [rcx + rdx - 0xa] ; ret
0x00000200000f5b05 : inc dword ptr [rcx - 0x7c] ; out dx, al ; je 0x200000f5a92 ; jmp 0x200000f5ad7
0x0000020000195954 : inc dword ptr [rcx - 0x7c] ; ret
0x00000200001f05ce : inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x0000020000064d27 : inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005797ae : inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0x000002000057ce33 : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x0000020000208557 : inc dword ptr [rcx - 0x7d] ; ret
0x00000200004d6fa4 : inc dword ptr [rcx - 0x7d] ; ret 0x4118
0x00000200004ad4b1 : inc dword ptr [rcx - 0x7d] ; ret 0x4520
0x00000200000f1c33 : inc dword ptr [rcx - 0x7d] ; ret 0xfc0
0x000002000058821a : inc dword ptr [rcx - 0x7d] ; stc ; add dh, byte ptr [rbx - 0x10] ; jmp 0x2000049447e
0x000002000039f958 : inc dword ptr [rcx - 0x7d] ; std ; or byte ptr [rdi], cl ; test dword ptr [rdx], esi ; ret 0x19
0x00000200001f4224 : inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200000594f5 : inc dword ptr [rcx - 0xa] ; ret
0x000002000063b154 : inc dword ptr [rcx - 0xa] ; ret 0x7403
0x000002000008af22 : inc dword ptr [rcx - 0xa] ; ret 0x7408
0x000002000016a41d : inc dword ptr [rcx - 0xa] ; ret 0x7502
0x00000200000378ff : inc dword ptr [rcx - 0xa] ; ret 0xf02
0x000002000005d730 : inc dword ptr [rcx - 0xa] ; ret 0xf08
0x00000200001c6a5c : inc dword ptr [rcx - 1] ; ret
0x000002000055e4f7 : inc dword ptr [rcx - 1] ; ret 0x3345
0x000002000041f3db : inc dword ptr [rcx - 1] ; ret 0x3b45
0x00000200005d237f : inc dword ptr [rcx - 1] ; ret 0x8948
0x00000200005a2fff : inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x00000200005a2ff3 : inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x000002000071e80a : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004f4af0 : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050a4ee : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070440e : inc dword ptr [rcx] ; add rsp, 0x38 ; ret
0x00000200006ef09c : inc dword ptr [rcx] ; ja 0x200006ef0af ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000600ed4 : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x0000020000600f7b : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x0000020000508cd2 : inc dword ptr [rcx] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000370620 : inc dword ptr [rcx] ; ret
0x00000200006fee42 : inc dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000719187 : inc dword ptr [rcx] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200007186fb : inc dword ptr [rcx] ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000052038d : inc dword ptr [rcx] ; xor eax, eax ; ret
0x0000020000229bed : inc dword ptr [rdi + 0x78] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000403dcd : inc dword ptr [rdi + 8] ; mov rcx, rbx ; call 0x20000031499
0x0000020000037a33 : inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000548d0e : inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x0000020000715f7d : inc dword ptr [rdi + rcx + 0x20] ; ret 0x2b8
0x00000200000c9f13 : inc dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x0000020000232dbb : inc dword ptr [rdi + rcx + 0x20] ; ret 0xf44
0x000002000067756f : inc dword ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x00000200000bd102 : inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200000671bc : inc dword ptr [rdi + rcx - 0x42] ; lodsd eax, dword ptr [rsi] ; ret
0x00000200000417c7 : inc dword ptr [rdi + rcx - 0x42] ; scasd eax, dword ptr [rdi] ; ret
0x0000020000085d0c : inc dword ptr [rdi + rcx - 0x44] ; ret
0x000002000020e386 : inc dword ptr [rdi + rcx - 0x49] ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000002000017f841 : inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200001681a7 : inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x0000020000046a9b : inc dword ptr [rdi + rcx - 0x4a] ; ret 0x8b44
0x000002000020e369 : inc dword ptr [rdi + rcx - 0x4a] ; xor ecx, dword ptr [rax - 1] ; ret
0x00000200002215fb : inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x00000200006fa231 : inc dword ptr [rdi] ; call 0x20000085b05
0x00000200002608f5 : inc dword ptr [rdi] ; ret
0x00000200004add35 : inc dword ptr [rdx + 0x6c] ; ret
0x000002000067ea32 : inc dword ptr [rdx + 0x8060] ; ret
0x00000200001c0a1f : inc dword ptr [rdx + 0xc] ; ret
0x00000200001c0a56 : inc dword ptr [rdx + 8] ; ret
0x00000200001967ee : inc dword ptr [rdx + rcx*4 + 0x52] ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x00000200006e5ddc : inc dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rbx
0x00000200005d5e19 : inc dword ptr [rdx] ; jb 0x200005d5e2c ; mov eax, 0xc0000189 ; ret
0x000002000063861d : inc dword ptr [rdx] ; je 0x20000638630 ; mov eax, 0xc0000002 ; ret
0x000002000063863d : inc dword ptr [rdx] ; je 0x20000638650 ; mov eax, 0xc0000002 ; ret
0x00000200006399f9 : inc dword ptr [rdx] ; je 0x20000639a0c ; mov eax, 0xc0000002 ; ret
0x0000020000639a15 : inc dword ptr [rdx] ; je 0x20000639a28 ; mov eax, 0xc0000002 ; ret
0x0000020000674aa0 : inc dword ptr [rip + 0x1c866] ; xor eax, eax ; ret
0x00000200001d79a4 : inc dword ptr [rip + 0xf8816] ; ret
0x000002000040f424 : inc dword ptr [rsi + 0xc] ; mov rcx, rbp ; call 0x20000031499
0x00000200001c2643 : inc dword ptr [rsi - 0x75] ; ret 0x4504
0x0000020000471bed : inc dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; ret
0x00000200006fec35 : inc dword ptr [rsi] ; mov dword ptr [rip - 0x42b2a1], ecx ; ret
0x000002000019f8bb : inc dword ptr [rsp + rax*4 + 0x2d] ; ret
0x00000200001c1cc8 : inc dword ptr gs:[0x2e44] ; ret
0x00000200004a38e0 : inc dword ptr gs:[0x2e48] ; ret
0x00000200004d8118 : inc dword ptr gs:[0x2e4c] ; ret
0x000002000012a170 : inc dword ptr gs:[0x5504] ; ret
0x00000200001c1cd4 : inc dword ptr gs:[0x5540] ; ret
0x0000020000196e22 : inc dx ; jmp 0x20000196e2f
0x00000200001f13d3 : inc eax ; add rsp, 0x28 ; ret
0x0000020000403fc6 : inc eax ; add rsp, 0x38 ; ret
0x0000020000237165 : inc eax ; cmp r8, rdx ; jl 0x20000237153 ; ret
0x00000200006f45c7 : inc eax ; cmp r8d, edx ; jb 0x200006f45c5 ; ret
0x000002000050a181 : inc eax ; cmp r8d, r10d ; jb 0x2000050a166 ; mov rax, rdx ; ret
0x00000200001bc8b7 : inc eax ; cmp r8d, r9d ; jl 0x200001bc8b1 ; xor eax, eax ; ret
0x000002000071462c : inc eax ; cmp rax, 0x40 ; jb 0x20000714610 ; ret
0x000002000066edf7 : inc eax ; dec rdx ; jne 0x2000066edf9 ; xor eax, eax ; ret
0x000002000068d86b : inc eax ; mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x000002000009d308 : inc eax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000135e20 : inc eax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x000002000012ed0a : inc eax ; ret
0x0000020000115cb9 : inc eax ; sub r8b, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x000002000041407b : inc ebx ; add rax, 0x10 ; ret
0x000002000041aa77 : inc ebx ; add rax, 0x20 ; ret
0x000002000014707d : inc ebx ; inc dword ptr [r8] ; ret
0x00000200001c626e : inc ebx ; jbe 0x200001c6281 ; mov eax, 1 ; ret
0x000002000014198c : inc ebx ; lea rax, qword ptr [rcx + rax - 2] ; ret
0x00000200006f59d0 : inc ebx ; lea rax, qword ptr [rip - 0x59d3f9] ; ret
0x00000200006f59d8 : inc ebx ; lea rax, qword ptr [rip - 0x5b58b1] ; ret
0x00000200006f59c0 : inc ebx ; lea rax, qword ptr [rip - 0x626bcd] ; ret
0x00000200006f59c8 : inc ebx ; lea rax, qword ptr [rip - 0x627671] ; ret
0x00000200006f59ac : inc ebx ; lea rax, qword ptr [rip - 0x629279] ; ret
0x0000020000379aa2 : inc ebx ; lea rax, qword ptr [rip - 0x908b] ; ret
0x0000020000379aaa : inc ebx ; lea rax, qword ptr [rip - 0x90a3] ; ret
0x0000020000379ab2 : inc ebx ; lea rax, qword ptr [rip - 0x90bb] ; ret
0x0000020000379aba : inc ebx ; lea rax, qword ptr [rip - 0x90d3] ; ret
0x0000020000379ac2 : inc ebx ; lea rax, qword ptr [rip - 0x90eb] ; ret
0x0000020000379aca : inc ebx ; lea rax, qword ptr [rip - 0x9103] ; ret
0x0000020000379ad2 : inc ebx ; lea rax, qword ptr [rip - 0x911b] ; ret
0x0000020000605993 : inc ebx ; lea rax, qword ptr [rip - 0xdf83c] ; ret
0x000002000060599b : inc ebx ; lea rax, qword ptr [rip - 0xdf854] ; ret
0x00000200006059a3 : inc ebx ; lea rax, qword ptr [rip - 0xdf86c] ; ret
0x00000200006059ab : inc ebx ; lea rax, qword ptr [rip - 0xdf884] ; ret
0x00000200006059b3 : inc ebx ; lea rax, qword ptr [rip - 0xdf89c] ; ret
0x00000200006059bb : inc ebx ; lea rax, qword ptr [rip - 0xdf8b4] ; ret
0x00000200006059c3 : inc ebx ; lea rax, qword ptr [rip - 0xdf8cc] ; ret
0x000002000015e37a : inc ebx ; lock or dword ptr [rip + 0x1f2cf9], ecx ; ret
0x00000200004dda72 : inc ebx ; mov byte ptr [rip - 0x233ad9], 1 ; ret
0x000002000060b601 : inc ebx ; mov dword ptr [rip - 0x368f19], edx ; ret
0x00000200006684fa : inc ebx ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006684ce
0x000002000072f044 : inc ebx ; mov eax, 0x2000 ; ret
0x00000200004cb5ad : inc ebx ; mov eax, 0xc000000d ; ret
0x00000200000e2ae1 : inc ebx ; mov eax, 1 ; ret
0x0000020000200494 : inc ebx ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000643d64 : inc ebx ; mov eax, edx ; ret
0x0000020000517f3e : inc ebx ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x00000200001418c1 : inc ebx ; xor eax, eax ; ret
0x00000200001406d8 : inc ecx ; cmp byte ptr [rcx], 0 ; jne 0x200001406dc ; ret
0x0000020000590330 : inc ecx ; cmp ecx, r8d ; jb 0x200005902fe ; jmp 0x200004ac571
0x0000020000141cf4 : inc ecx ; cmp rax, rdx ; jb 0x20000141cf2 ; ret
0x0000020000158526 : inc ecx ; dec r8 ; jne 0x20000158527 ; ret
0x00000200000cd16c : inc ecx ; jmp 0x200000ccf0b
0x00000200000cec8e : inc ecx ; jmp 0x200000cea1f
0x0000020000109873 : inc ecx ; mov eax, ecx ; ret
0x000002000036d8d4 : inc ecx ; shr r9, 1 ; jne 0x2000036d8a6 ; ret
0x000002000036d912 : inc ecx ; shr rdx, 1 ; jne 0x2000036d8fd ; ret
0x0000020000140690 : inc ecx ; test r8, r8 ; jne 0x2000014068c ; ret
0x000002000020d6d8 : inc edi ; inc rdx ; jmp 0x2000020d710
0x000002000036f6b6 : inc edx ; add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x00000200003e6b04 : inc edx ; cmp edx, dword ptr [rcx + 0x14] ; jb 0x200003e6aee ; ret
0x000002000036daf7 : inc edx ; cmp r10d, r9d ; jb 0x2000036da95 ; xor al, al ; ret
0x000002000065d516 : inc edx ; dec r8d ; jne 0x2000065d517 ; ret
0x00000200000914fd : inc edx ; jmp 0x20000091491
0x00000200000e77b5 : inc edx ; jmp 0x200000e77a6
0x000002000010cb5f : inc edx ; jmp 0x2000010cb09
0x000002000011b5da : inc edx ; jmp 0x2000011b5c7
0x000002000011f094 : inc edx ; jmp 0x2000011f028
0x0000020000120c3b : inc edx ; jmp 0x20000120c1b
0x000002000014489a : inc edx ; jmp 0x200001448b2
0x0000020000149a5c : inc edx ; jmp 0x20000149a64
0x0000020000186e75 : inc edx ; jmp 0x20000186e5f
0x0000020000196e23 : inc edx ; jmp 0x20000196e2e
0x00000200001971a8 : inc edx ; jmp 0x20000197149
0x000002000020d6db : inc edx ; jmp 0x2000020d70d
0x00000200003b2465 : inc edx ; jmp 0x200003b2452
0x0000020000402348 : inc edx ; jmp 0x20000402324
0x0000020000408b95 : inc edx ; jmp 0x20000408b7e
0x0000020000472438 : inc edx ; jmp 0x200004723fa
0x000002000047677f : inc edx ; jmp 0x20000476766
0x000002000048630b : inc edx ; jmp 0x200004862e5
0x00000200004a13fe : inc edx ; jmp 0x200004a13da
0x00000200004ae547 : inc edx ; jmp 0x200004ae51a
0x00000200004b873a : inc edx ; jmp 0x200004b86f5
0x00000200004b8739 : inc edx ; jmp 0x200004b86f6
0x00000200004babf8 : inc edx ; jmp 0x200004babbf
0x00000200004fb8c4 : inc edx ; jmp 0x200004fb8a8
0x000002000051639d : inc edx ; jmp 0x20000516388
0x0000020000598d90 : inc edx ; jmp 0x20000598d60
0x00000200005d0540 : inc edx ; jmp 0x200005d055a
0x0000020000629b8e : inc edx ; jmp 0x20000629b82
0x000002000062cdf8 : inc edx ; jmp 0x2000062cdea
0x000002000063bc14 : inc edx ; jmp 0x2000063bbe5
0x00000200004ce36a : inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x00000200001ccc7c : inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x00000200005903b1 : inc esi ; cmp esi, eax ; jb 0x20000590397 ; jmp 0x200004ac610
0x0000020000128889 : inc esi ; jmp 0x20000128874
0x00000200004c7cff : inc qword ptr [r13 - 0x75] ; ret
0x00000200005d237e : inc qword ptr [rcx - 1] ; ret 0x8948
0x000002000010cb5e : inc r10 ; jmp 0x2000010cb0a
0x000002000011f093 : inc r10 ; jmp 0x2000011f029
0x0000020000144899 : inc r10 ; jmp 0x200001448b3
0x0000020000144898 : inc r10 ; jmp 0x200001448b4
0x0000020000186e74 : inc r10 ; jmp 0x20000186e60
0x0000020000120c3a : inc r10d ; jmp 0x20000120c1c
0x0000020000408b94 : inc r10d ; jmp 0x20000408b7f
0x00000200004ae546 : inc r10d ; jmp 0x200004ae51b
0x00000200006684f9 : inc r11d ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006684cf
0x00000200006f45c6 : inc r8d ; cmp r8d, edx ; jb 0x200006f45c6 ; ret
0x000002000036d911 : inc r9d ; shr rdx, 1 ; jne 0x2000036d8fe ; ret
0x000002000071462b : inc rax ; cmp rax, 0x40 ; jb 0x20000714611 ; ret
0x00000200001406d7 : inc rcx ; cmp byte ptr [rcx], 0 ; jne 0x200001406dd ; ret
0x0000020000141cf3 : inc rcx ; cmp rax, rdx ; jb 0x20000141cf3 ; ret
0x0000020000158525 : inc rcx ; dec r8 ; jne 0x20000158528 ; ret
0x00000200000cd16b : inc rcx ; jmp 0x200000ccf0c
0x00000200000cec8d : inc rcx ; jmp 0x200000cea20
0x000002000014068f : inc rcx ; test r8, r8 ; jne 0x2000014068d ; ret
0x000002000020d6d7 : inc rdi ; inc rdx ; jmp 0x2000020d711
0x000002000065d515 : inc rdx ; dec r8d ; jne 0x2000065d518 ; ret
0x00000200000914fc : inc rdx ; jmp 0x20000091492
0x0000020000149a5b : inc rdx ; jmp 0x20000149a65
0x00000200001971a7 : inc rdx ; jmp 0x2000019714a
0x000002000020d6da : inc rdx ; jmp 0x2000020d70e
0x000002000048630a : inc rdx ; jmp 0x200004862e6
0x00000200004babf7 : inc rdx ; jmp 0x200004babc0
0x00000200004fb8c3 : inc rdx ; jmp 0x200004fb8a9
0x000002000051639c : inc rdx ; jmp 0x20000516389
0x0000020000128888 : inc rsi ; jmp 0x20000128875
0x00000200003698e3 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003697e6 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000b22ea : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add dh, dh ; ret 0xff0
0x000002000041f353 : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000d5fad : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000049e6e5 : insb byte ptr [rdi], dx ; and al, 0x20 ; and edx, 1 ; call rdi
0x00000200000f9b32 : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x20000115d81
0x000002000051104b : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x200001397a2
0x00000200004f20ae : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x2000014e325
0x000002000059d4c3 : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x200004997c9
0x0000020000567703 : insb byte ptr [rdi], dx ; and al, 0x20 ; call r10
0x00000200004028c6 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rax
0x000002000064958a : insb byte ptr [rdi], dx ; and al, 0x20 ; call rdi
0x0000020000633156 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov dword ptr [rsp + 0x20], edi ; call r14
0x0000020000567910 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200005676fe : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200003a6653 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000042793c : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000593b80 : insb byte ptr [rdi], dx ; and al, 0x30 ; mov dword ptr [rsp + 0x38], esi ; call rax
0x0000020000096604 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000a55a2 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b1504 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000418fd7 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000480f88 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200001ca380 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001ce5dd : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c1894 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004dfdd5 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000063a1e : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001ef236 : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000506f8b : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f677e : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000649d9 : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200000e4346 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001cd4e7 : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200000909f2 : insb byte ptr [rdi], dx ; and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003bcbdb : insb byte ptr [rdi], dx ; and al, 0x78 ; call 0x200003b8e55
0x00000200006f22c2 : insb byte ptr [rdi], dx ; enter -0x1701, 0x7e ; call rsp
0x000002000012ae95 : insb byte ptr [rdi], dx ; enter 0xf08, -0x7b ; ret
0x000002000050efc7 : insb byte ptr [rdi], dx ; fcos ; call 0x20000139712
0x000002000000f20d : insb byte ptr [rdi], dx ; fstp xword ptr [rdi + 0x46bcb1d7] ; ret
0x000002000038f4bf : insb byte ptr [rdi], dx ; hlt ; dec dword ptr [rax + 0x3b] ; ret
0x000002000000d90a : insb byte ptr [rdi], dx ; imul dword ptr [rbx] ; cdq ; ret
0x00000200001360c0 : insb byte ptr [rdi], dx ; in eax, dx ; dec dword ptr [rbp - 0x75] ; ret
0x00000200005706cb : insb byte ptr [rdi], dx ; in eax, dx ; push rsi ; ret
0x000002000065a3e9 : insb byte ptr [rdi], dx ; iretd ; jmp qword ptr [rcx]
0x000002000000e286 : insb byte ptr [rdi], dx ; jae 0x2000000e276 ; ret
0x0000020000439cbd : insb byte ptr [rdi], dx ; jo 0x20000439d29 ; call 0x200000690e6
0x0000020000439cbc : insb byte ptr [rdi], dx ; jo 0x20000439d2a ; call 0x200000690e7
0x00000200000b5677 : insb byte ptr [rdi], dx ; lea rax, qword ptr [rip + 0xaba51] ; ret
0x000002000059648d : insb byte ptr [rdi], dx ; mov dl, 0xff ; nop ; jmp 0x200004c138c
0x0000020000718c64 : insb byte ptr [rdi], dx ; mov ecx, 0x58948ff ; ret 0xb96c
0x00000200004baa04 : insb byte ptr [rdi], dx ; mov ecx, 0xc48348ff ; ret
0x00000200004da898 : insb byte ptr [rdi], dx ; mov edx, 0x313 ; call 0x200000b6ab4
0x0000020000722704 : insb byte ptr [rdi], dx ; mov edx, 0x8b4910ff ; ret 0x86e9
0x00000200004a39bc : insb byte ptr [rdi], dx ; mov esp, 0x768b49ff ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000003cc1c : insb byte ptr [rdi], dx ; mov rcx, rsi ; call rdi
0x00000200000a570e : insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add dh, dh ; ret
0x00000200000b96fb : insb byte ptr [rdi], dx ; or eax, 0x4801b000 ; add esp, 0x28 ; ret
0x00000200000d3168 : insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200000ea955 : insb byte ptr [rdi], dx ; push rax ; add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000010af89 : insb byte ptr [rdi], dx ; push rax ; add byte ptr [rax], al ; ret
0x000002000066d716 : insb byte ptr [rdi], dx ; push rsi ; call 0x20000294005
0x00000200000c0388 : insb byte ptr [rdi], dx ; ret
0x00000200001bae78 : insb byte ptr [rdi], dx ; ret 0x4878
0x000002000060e195 : insb byte ptr [rdi], dx ; ret 0x7508
0x0000020000168c8f : insb byte ptr [rdi], dx ; ret 0xffec
0x00000200005ae085 : insb byte ptr [rdi], dx ; ret 0xfff5
0x0000020000723351 : insb byte ptr [rdi], dx ; xchg eax, ecx ; dec dword ptr [rax - 0x75] ; ret
0x000002000059d4bf : insd dword ptr [rdi], dx ; adc byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x20 ; call 0x200004997cd
0x00000200003698f5 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003697f8 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200002025dc : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x0000020000265930 : insd dword ptr [rdi], dx ; add byte ptr [rdx], cl ; ret
0x000002000026d2c5 : insd dword ptr [rdi], dx ; add byte ptr [rip - 0x5bffb390], r8b ; ret 0x26
0x00000200000ea263 : insd dword ptr [rdi], dx ; add byte ptr es:[rbp + 1], dh ; ret
0x0000020000148aa3 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x00000200005f7d7c : insd dword ptr [rdi], dx ; and byte ptr [rax], ah ; call 0x20000294005
0x00000200005f7d7b : insd dword ptr [rdi], dx ; and byte ptr [rax], ah ; call 0x20000294006
0x000002000053ea11 : insd dword ptr [rdi], dx ; and byte ptr [rcx + 3], al ; ret
0x000002000011a9d3 : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; ret
0x0000020000673231 : insd dword ptr [rdi], dx ; call 0x20000294004
0x00000200006732e4 : insd dword ptr [rdi], dx ; call 0x20000294e24
0x00000200001293b4 : insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004d405e : insd dword ptr [rdi], dx ; cmp ch, al ; ret 0xffb9
0x0000020000510ac1 : insd dword ptr [rdi], dx ; cmp ecx, dword ptr [rbx + 0x14a6e8d5] ; ret
0x0000020000570721 : insd dword ptr [rdi], dx ; in eax, dx ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000057070a : insd dword ptr [rdi], dx ; in eax, dx ; push rsi ; ret
0x0000020000188078 : insd dword ptr [rdi], dx ; int1 ; push rsi ; ret 0xba01
0x000002000060cdeb : insd dword ptr [rdi], dx ; jmp 0x1ff83a9cdb5
0x00000200000c948f : insd dword ptr [rdi], dx ; jmp qword ptr [rdi]
0x00000200005b955f : insd dword ptr [rdi], dx ; jmp rax
0x0000020000627e6b : insd dword ptr [rdi], dx ; mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x00000200005372ff : insd dword ptr [rdi], dx ; mov eax, 0x20428d44 ; call 0x2000015dbc9
0x00000200004d9048 : insd dword ptr [rdi], dx ; mov ecx, 0x158b48ff ; ret
0x0000020000025af7 : insd dword ptr [rdi], dx ; mov esi, 0x8b480032 ; add al, 0xc1 ; ret
0x0000020000081de6 : insd dword ptr [rdi], dx ; or bh, bh ; ret
0x00000200004da2ee : insd dword ptr [rdi], dx ; out -1, eax ; call r9
0x00000200003793fa : insd dword ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; movsxd rbp, eax ; ret 0xdabb
0x000002000066ce4b : insd dword ptr [rdi], dx ; pop rbx ; ret
0x0000020000011026 : insd dword ptr [rdi], dx ; push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x00000200003ece70 : insd dword ptr [rdi], dx ; push rax ; mov rcx, rdi ; call 0x200000690e8
0x00000200003ece6f : insd dword ptr [rdi], dx ; push rax ; mov rcx, rdi ; call 0x200000690e9
0x00000200004c0cb1 : insd dword ptr [rdi], dx ; push rax ; push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x00000200003f7da0 : insd dword ptr [rdi], dx ; push rbx ; movsxd rbp, eax ; pop rax ; ret 0xffe9
0x0000020000195ed0 : insd dword ptr [rdi], dx ; push rsi ; ret 0x7503
0x00000200001484f6 : insd dword ptr [rdi], dx ; ret
0x000002000012284e : insd dword ptr [rdi], dx ; ret 0x18
0x00000200005fe3d6 : insd dword ptr [rdi], dx ; ret 0x44ff
0x000002000067b4cf : insd dword ptr [rdi], dx ; ret 0x48ff
0x0000020000262acc : insd dword ptr [rdi], dx ; ret 0xe
0x00000200005613b7 : insd dword ptr [rdi], dx ; ret 0xffab
0x0000020000668baf : insd dword ptr [rdi], dx ; ret 0xffc2
0x000002000055d3c3 : insd dword ptr [rdi], dx ; ret 0xffea
0x00000200003bcbdf : insd dword ptr [rdi], dx ; ret 0xffff
0x00000200006fcc6b : insd dword ptr [rdi], dx ; stc ; jmp qword ptr [rax]
0x00000200000fa742 : insd dword ptr [rdi], dx ; xchg eax, edi ; jmp 0x200000fa67a
0x000002000042ae28 : int 0x13
0x000002000016d726 : int 0x29
0x0000020000290c78 : int 0x31
0x000002000021ed13 : int 0x3b
0x0000020000220498 : int 0x41
0x000002000037f0d5 : int 0x48
0x00000200005ddc67 : int 0x72
0x000002000006c70c : int 0x75
0x000002000002a7d5 : int 0x80
0x000002000053c21f : int 0xb2
0x0000020000246a2c : int 0xc2
0x00000200001d69fe : int 0xc3
0x000002000013b783 : int 0xe8
0x00000200005ae298 : int 0xf5
0x0000020000078d76 : int 0xf8
0x0000020000145a78 : int 0xfd
0x0000020000073a1c : int 0xfe
0x00000200000c96fa : int 0xff
0x0000020000231f27 : int1 ; adc dword ptr [rax], eax ; mov dword ptr [r8], eax ; ret
0x000002000026ce55 : int1 ; adc eax, dword ptr [rax] ; add al, 0 ; add byte ptr [rax], al ; clc ; ret
0x000002000024a449 : int1 ; adc eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000023b969 : int1 ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; in eax, dx ; ret
0x000002000024b515 : int1 ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rsp ; ret
0x0000020000268c45 : int1 ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1036
0x0000020000257fb9 : int1 ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0xc
0x000002000023be09 : int1 ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000261d01 : int1 ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4872
0x00000200000ac353 : int1 ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001ebe2b : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200001361d1 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x000002000014f875 : int1 ; add byte ptr [rax], al ; add cl, ch ; add cl, ch ; add byte ptr [rax], al ; ret
0x0000020000162d36 : int1 ; add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x0000020000064860 : int1 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000137e9f : int1 ; add edi, dword ptr [rip + 0x74c08400] ; add bh, bh ; ret
0x000002000067303a : int1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cda84 : int1 ; add rsp, 0x28 ; ret
0x00000200004ff35f : int1 ; call 0x2000012e1bc
0x00000200004f4d4b : int1 ; cmp ebx, ebp ; inc dword ptr [rcx - 0x76] ; salc ; call 0x20000030f79
0x000002000043850c : int1 ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x0000020000187cad : int1 ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x000002000018a725 : int1 ; dec dword ptr [rax - 0x3f] ; jmp 0x2000018a73f
0x0000020000186f3c : int1 ; dec dword ptr [rax - 0x73] ; psubsb mm7, qword ptr [r9] ; ret
0x000002000018719e : int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001ebce8 : int1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001f08c2 : int1 ; dec dword ptr [rax - 0x7d] ; ret 0x4910
0x00000200005903da : int1 ; dec dword ptr [rbx - 0x16fb3ebc] ; ret 0xfff1
0x00000200000b4b6e : int1 ; dec dword ptr [rbx] ; ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x000002000018a157 : int1 ; dec dword ptr [rcx - 0x75] ; ret 0xb948
0x000002000018a0d6 : int1 ; dec dword ptr [rcx - 0x75] ; ret 0xf748
0x00000200004bac31 : int1 ; fdivp st(7) ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000418c9b : int1 ; hlt ; ret 0x48ff
0x000002000058bc3f : int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000391edc : int1 ; inc dword ptr [rbp - 0x7ae78b40] ; ret
0x00000200005903e3 : int1 ; inc dword ptr [rbx + 0x3ae9ffc8] ; ret 0xfff1
0x00000200001ccc7b : int1 ; inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x0000020000120c38 : int1 ; jb 0x20000120c84 ; inc edx ; jmp 0x20000120c1e
0x00000200000f92f1 : int1 ; jmp 0x200000f92b9
0x00000200001fb163 : int1 ; jmp 0x200001fb1cb
0x000002000062f8b3 : int1 ; jmp 0x2000062f8bf
0x00000200003b5eee : int1 ; leave ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000d7dc0 : int1 ; mov al, 1 ; ret
0x0000020000621961 : int1 ; mov dl, 0xff ; add rsp, 0x50 ; pop rbp ; ret
0x000002000048bbe2 : int1 ; mov eax, 0xc000000d ; ret
0x0000020000074d56 : int1 ; mov eax, 1 ; ret
0x00000200004e7b1f : int1 ; mov eax, dword ptr [rcx + 0xc4] ; ret
0x000002000010372f : int1 ; mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000012cfd5 : int1 ; mov rax, rcx ; ret
0x0000020000157dad : int1 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x00000200000e7a2f : int1 ; mov rax, rdx ; ret
0x00000200001646cb : int1 ; or byte ptr [rax - 0xd7eab4], cl ; ret 0x5589
0x000002000013d2cb : int1 ; or byte ptr [rdx], al ; add dh, dh ; ret
0x0000020000163576 : int1 ; or dword ptr [rax - 0xd7eab4], ecx ; ret 0x5589
0x00000200000dfaac : int1 ; or eax, 0xca034800 ; jmp rcx
0x0000020000191f89 : int1 ; push qword ptr [rbx] ; leave ; jmp 0x200000be1c9
0x000002000046f47e : int1 ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000058e14e : int1 ; push rdi ; ret
0x0000020000187838 : int1 ; push rsi ; ret
0x0000020000188079 : int1 ; push rsi ; ret 0xba01
0x000002000018a823 : int1 ; push rsi ; ret 0xf01
0x0000020000188070 : int1 ; push rsi ; ret 0xf04
0x000002000000e4ee : int1 ; ret
0x0000020000219933 : int1 ; ret 0
0x00000200003e6727 : int1 ; ret 0x16
0x0000020000387aed : int1 ; ret 0x1a
0x000002000043b4c8 : int1 ; ret 0x48ff
0x000002000043b44d : int1 ; ret 0xebff
0x000002000068aa6b : int1 ; ret 0xffc1
0x00000200004856c7 : int1 ; ret 0xffc5
0x00000200003bccdb : int1 ; ret 0xffca
0x000002000014683b : int1 ; ret 0xffeb
0x0000020000022679 : int1 ; sbb bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x00000200004a03ab : int1 ; sbb r8, qword ptr [rax] ; ret
0x00000200000a9f68 : int1 ; sti ; dec dword ptr [rax - 0x75] ; ret
0x000002000013e31b : int1 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044e3db : int1 ; stosd dword ptr [rdi], eax ; sar edi, -0x75 ; ret
0x00000200001d4712 : int1 ; verw ax ; ret 0x49
0x0000020000602f0a : int1 ; xor al, al ; ret
0x000002000003a005 : int1 ; xor byte ptr [rax], al ; ret
0x000002000011832b : int1 ; xor dword ptr [rcx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004653c0 : int1 ; xor eax, eax ; ret
0x00000200000e416a : int1 ; xor ecx, ecx ; mov rbx, rdx ; call 0x20000470464
0x00000200001411ae : int1 ; xor rax, rax ; ret
0x000002000027befd : invd ; add byte ptr [rsi + rax], al ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c23d : invd ; add byte ptr [rsi + rax], al ; clts ; sysenter
0x0000020000251525 : invd ; add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x0000020000287669 : invd ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x000002000015dce4 : invlpg byte ptr [rcx] ; ret
0x00000200005323bb : iretd ; add r8, r8 ; call 0x2000015d887
0x00000200004f7090 : iretd ; add rsi, rax ; call 0x20000120f3b
0x00000200003fd633 : iretd ; call 0x20000027bc0
0x000002000040ca46 : iretd ; call 0x20000030f74
0x000002000040cb14 : iretd ; call 0x20000031494
0x0000020000421142 : iretd ; call 0x20000043cd8
0x000002000059ba52 : iretd ; call 0x20000047c73
0x00000200000f33dc : iretd ; call 0x2000004b833
0x0000020000054e4f : iretd ; call 0x20000054ea1
0x000002000043935a : iretd ; call 0x20000063d98
0x00000200003bccd9 : iretd ; call 0x20000068fd3
0x000002000043931c : iretd ; call 0x20000068fd4
0x0000020000442a64 : iretd ; call 0x200000690a4
0x00000200003ece75 : iretd ; call 0x200000690e3
0x000002000045e397 : iretd ; call 0x2000006a613
0x000002000043a67a : iretd ; call 0x2000006a614
0x0000020000380351 : iretd ; call 0x2000006fe29
0x0000020000573fe9 : iretd ; call 0x200000702b3
0x00000200004441b6 : iretd ; call 0x200000702b4
0x0000020000114634 : iretd ; call 0x20000070843
0x00000200004444ec : iretd ; call 0x20000070844
0x00000200000b27a4 : iretd ; call 0x20000070847
0x000002000044cd56 : iretd ; call 0x20000072644
0x00000200003d668e : iretd ; call 0x20000072907
0x000002000045f6a0 : iretd ; call 0x2000008a164
0x0000020000687bc0 : iretd ; call 0x200000962c9
0x000002000060d4bd : iretd ; call 0x200000b9777
0x000002000048f117 : iretd ; call 0x200000bc6c8
0x0000020000489e8f : iretd ; call 0x200000bc777
0x00000200001a55e2 : iretd ; call 0x200000c18e7
0x00000200000d8cbc : iretd ; call 0x200000d89bb
0x00000200000dc779 : iretd ; call 0x200000d9deb
0x00000200004b9bf1 : iretd ; call 0x200000e19c0
0x00000200004b56ba : iretd ; call 0x200000e1c0c
0x000002000062299c : iretd ; call 0x200000f4558
0x00000200000780ca : iretd ; call 0x20000114397
0x00000200004fa0c0 : iretd ; call 0x20000120f38
0x000002000013335c : iretd ; call 0x200001332b7
0x000002000051010e : iretd ; call 0x2000013971c
0x00000200005947f7 : iretd ; call 0x20000140abb
0x00000200003a15f5 : iretd ; call 0x2000015d883
0x000002000053307b : iretd ; call 0x2000015dcc0
0x0000020000198cfd : iretd ; call 0x200001c4fd3
0x000002000019ce37 : iretd ; call 0x200001d90df
0x000002000019cec9 : iretd ; call 0x200001d918f
0x0000020000224432 : iretd ; call 0x20000224158
0x00000200006674bf : iretd ; call 0x20000294e24
0x00000200003c8fb2 : iretd ; call 0x20000387c7b
0x00000200004a6b73 : iretd ; call 0x200003b2e63
0x000002000055d3c1 : iretd ; call 0x20000409637
0x00000200005c5bf9 : iretd ; call 0x20000431ecb
0x000002000043f60e : iretd ; call 0x2000043f463
0x00000200000d21e8 : iretd ; call 0x2000044cb4f
0x00000200004fdfdd : iretd ; call 0x2000045a2cf
0x00000200006ecf61 : iretd ; call 0x2000047c579
0x00000200005f3bb7 : iretd ; call 0x2000050fe63
0x00000200005c9673 : iretd ; call 0x200005c9923
0x0000020000546f4a : iretd ; call 0x200005d315f
0x000002000066cb4e : iretd ; call 0x2000066a6e0
0x0000020000665f12 : iretd ; call 0x20000670673
0x00000200005005bd : iretd ; call qword ptr [rax]
0x00000200004fba00 : iretd ; call qword ptr [rdi + 0x100]
0x00000200002382c1 : iretd ; call qword ptr [rip + 0x65d38]
0x000002000036554e : iretd ; call qword ptr [rip - 0xc3ded]
0x00000200004be413 : iretd ; call r10
0x00000200000a6c82 : iretd ; call r12
0x00000200000b58a3 : iretd ; call r14
0x0000020000141585 : iretd ; call r15
0x000002000021b148 : iretd ; call r9
0x00000200000bbb70 : iretd ; call rax
0x000002000010af3a : iretd ; call rbx
0x000002000010b203 : iretd ; call rsi
0x0000020000596d7e : iretd ; dec dword ptr [rax - 0x75] ; sti ; jmp 0x200004c2ff4
0x00000200005af962 : iretd ; inc dword ptr [rbx - 0x309ea2f3] ; jmp qword ptr [rax]
0x000002000009bde2 : iretd ; jmp 0x2000009bd04
0x00000200004c7fc4 : iretd ; jmp 0x200004c7e0d
0x00000200006f5319 : iretd ; jmp 0x200007215e5
0x00000200005af968 : iretd ; jmp qword ptr [rax]
0x000002000065a3ea : iretd ; jmp qword ptr [rcx]
0x00000200000f7db0 : iretd ; jmp rcx
0x00000200005a8059 : iretd ; lea edx, dword ptr [r9 - 3] ; call 0x200001ca108
0x0000020000564715 : iretd ; lea r8d, dword ptr [rdx + 6] ; call 0x200001c09e7
0x0000020000580147 : iretd ; mov bl, 0xff ; nop ; jmp 0x2000047c3d4
0x00000200005801ce : iretd ; mov bl, 0xff ; nop ; jmp 0x2000047c451
0x000002000009db19 : iretd ; mov bl, al ; call rsi
0x00000200001ab5ca : iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200005901bf : iretd ; mov dl, 0xff ; nop ; jmp 0x200004ac407
0x00000200005086bc : iretd ; mov dword ptr [r11 - 0x18], r8d ; call 0x20000138064
0x00000200004216a0 : iretd ; mov dword ptr [rdi + 0x30], ebx ; call 0x20000043cdb
0x0000020000409e66 : iretd ; mov dword ptr [rsp + 0x20], 1 ; call rdi
0x000002000040ac25 : iretd ; mov dword ptr [rsp + 0x20], 1 ; call rsi
0x000002000055cc23 : iretd ; mov dword ptr [rsp + 0x20], 2 ; call rdi
0x000002000055d107 : iretd ; mov dword ptr [rsp + 0x20], 2 ; call rsi
0x0000020000467852 : iretd ; mov dword ptr [rsp + 0x20], esi ; call r14
0x0000020000649587 : iretd ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000469d26 : iretd ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200004bbc7c : iretd ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x000002000046c115 : iretd ; mov dword ptr [rsp + 0x40], esi ; call rax
0x0000020000203ed2 : iretd ; mov qword ptr [rbx + 0x10], rax ; mov dword ptr [rbx], esi ; call 0x20000120149
0x00000200000e3dac : iretd ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000055dc68 : iretd ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000040dcf8 : iretd ; mov r14b, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000050ce13 : iretd ; mov r8, rdi ; call 0x20000138ba7
0x0000020000672954 : iretd ; mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x0000020000614f5d : iretd ; mov r8d, r14d ; call 0x20000141176
0x000002000040dd7b : iretd ; mov r9d, eax ; mov r8d, eax ; call rsi
0x00000200001cdf16 : iretd ; mov rax, qword ptr [rip + 0x1835e2] ; call rax
0x00000200000fd907 : iretd ; mov rax, qword ptr [rip + 0x253bf1] ; call rax
0x00000200000d9b49 : iretd ; mov rax, qword ptr [rip + 0x2779af] ; call rax
0x00000200000d9abd : iretd ; mov rax, qword ptr [rip + 0x277a3b] ; call rax
0x00000200001d0d6d : iretd ; mov rax, qword ptr [rip + 0xd09e3] ; call rax
0x00000200001d0692 : iretd ; mov rax, qword ptr [rip + 0xd2976] ; call rax
0x00000200001d06a3 : iretd ; mov rax, qword ptr [rip + 0xd2995] ; call rax
0x000002000067810e : iretd ; mov rbx, rax ; call rsi
0x000002000066b384 : iretd ; mov rcx, r13 ; mov rdx, r12 ; call rax
0x00000200001321dd : iretd ; mov rcx, rbx ; call 0x2000012e492
0x00000200004bba02 : iretd ; mov rdx, r12 ; call rdi
0x00000200001e9b65 : iretd ; mov rdx, rax ; call qword ptr [rdi]
0x000002000066c09f : iretd ; mov rsi, rax ; call rbx
0x000002000021803a : iretd ; mov word ptr [rbp - 0x3d], ax ; call r9
0x00000200004015a2 : iretd ; mov word ptr [rsi + 2], ax ; call 0x2000015d887
0x000002000065c68f : iretq ; jmp qword ptr [rcx]
0x000002000000e23e : ja 0x2000000e1ec ; push rcx ; ret 0xcce4
0x000002000000ec30 : ja 0x2000000ec5d ; ret
0x0000020000011717 : ja 0x20000011731 ; ret
0x0000020000022dc6 : ja 0x20000022df0 ; call qword ptr [rbx]
0x00000200000267c1 : ja 0x200000267cc ; sub rax, rcx ; ret
0x0000020000052029 : ja 0x20000052063 ; add byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000054fa5 : ja 0x20000054fb0 ; sub rax, rcx ; ret
0x0000020000074864 : ja 0x20000074864 ; dec dword ptr [rax - 0x7f] ; ret 1
0x000002000008df6e : ja 0x2000008df73 ; ret
0x000002000009c4da : ja 0x2000009c4e3 ; mov al, 1 ; ret
0x00000200000a64e5 : ja 0x200000a64f4 ; cmp r8, r10 ; sbb eax, eax ; ret
0x00000200000a6c7b : ja 0x200000a6c32 ; mov rdx, rbx ; mov rcx, r15 ; call r12
0x00000200000b1b87 : ja 0x200000b1b16 ; ret
0x00000200000b424d : ja 0x200000b425c ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200000ce8f2 : ja 0x200000ce90b ; xchg ah, bh ; add al, byte ptr [rax] ; add bh, bh ; ret 0x5489
0x00000200000dbcf1 : ja 0x200000dbcfc ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200000e1e36 : ja 0x200000e1e5a ; mov eax, 4 ; ret
0x00000200000e1e4b : ja 0x200000e1e78 ; mov eax, 1 ; ret
0x00000200000e1e56 : ja 0x200000e1e78 ; mov eax, 8 ; ret
0x00000200000e1ead : ja 0x200000e1eb6 ; xor al, al ; ret
0x00000200000eb88a : ja 0x200000eb879 ; mov qword ptr [rcx + 0x168], rax ; ret
0x00000200000eb86e : ja 0x200000eb8b9 ; ret
0x00000200000f4423 : ja 0x200000f43e8 ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200000f92e1 : ja 0x200000f92e6 ; ret
0x0000020000112a9b : ja 0x20000112a93 ; sbb eax, eax ; ret
0x0000020000112a87 : ja 0x20000112a96 ; jae 0x20000112a9c ; or eax, 0xffffffff ; ret
0x000002000012fde0 : ja 0x2000012fde9 ; sbb eax, eax ; ret
0x00000200001413f6 : ja 0x2000014140e ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000015855b : ja 0x20000158552 ; ret
0x000002000015855a : ja 0x20000158553 ; ret
0x000002000017bb9d : ja 0x2000017bb93 ; dec dword ptr [rcx - 0x75] ; ret 0x4df0
0x00000200001a1050 : ja 0x200001a1069 ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200001a104f : ja 0x200001a106a ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000209084 : ja 0x20000209093 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x000002000024d40d : ja 0x2000024d41d ; add al, bl ; ret
0x000002000024d40c : ja 0x2000024d41e ; add al, bl ; ret
0x000002000024d439 : ja 0x2000024d449 ; add al, bl ; ret
0x000002000024d438 : ja 0x2000024d44a ; add al, bl ; ret
0x000002000024d44d : ja 0x2000024d45d ; add al, bl ; ret
0x000002000024d44c : ja 0x2000024d45e ; add al, bl ; ret
0x000002000024d479 : ja 0x2000024d489 ; add al, bl ; ret
0x000002000024d478 : ja 0x2000024d48a ; add al, bl ; ret
0x000002000024d4a1 : ja 0x2000024d4b1 ; add al, bl ; ret
0x000002000024d4a0 : ja 0x2000024d4b2 ; add al, bl ; ret
0x000002000024d4cd : ja 0x2000024d4dd ; add al, bl ; ret
0x000002000024d4cc : ja 0x2000024d4de ; add al, bl ; ret
0x000002000024d4dd : ja 0x2000024d4ed ; add al, bl ; ret
0x000002000024d4dc : ja 0x2000024d4ee ; add al, bl ; ret
0x000002000026d320 : ja 0x2000026d39a ; add spl, r15b ; ret 0x26
0x000002000026d3f1 : ja 0x2000026d443 ; add ah, dl ; ret
0x000002000026d3ed : ja 0x2000026d443 ; add byte ptr [rdx - 0x2bffb389], dl ; ret
0x000002000026d3ec : ja 0x2000026d444 ; add byte ptr [rdx - 0x2bffb389], dl ; ret
0x000002000027d319 : ja 0x2000027d373 ; add byte ptr [rdi + 0x5078], bl ; ret
0x0000020000364e6a : ja 0x20000364e72 ; add byte ptr [rax + 0x3b], cl ; ret 0x8b4c
0x0000020000364ee4 : ja 0x20000364f27 ; mov rdx, r10 ; mov rcx, rsi ; call r11
0x00000200003ac3d9 : ja 0x200003ac3e5 ; mov qword ptr [rdx], r9 ; mov al, 1 ; ret
0x00000200003ad353 : ja 0x200003ad35c ; mov al, cl ; ret
0x0000020000401166 : ja 0x20000401181 ; add bh, dh ; ret
0x0000020000407a15 : ja 0x200004079b3 ; ret 0x65ff
0x0000020000411a4e : ja 0x20000411a59 ; mov al, r8b ; ret
0x000002000042dca5 : ja 0x2000042dd1d ; out 0xff, al ; jmp 0x2000042dc72
0x0000020000439669 : ja 0x2000043969b ; jmp 0x20000439099
0x000002000043b67e : ja 0x2000043b6af ; je 0x2000043b696 ; call 0x20000068fd7
0x000002000044eb35 : ja 0x2000044eb50 ; ret 0xf0ff
0x0000020000468f6a : ja 0x20000468f7f ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x0000020000471dc5 : ja 0x20000471e0c ; jrcxz 0x20000471dcf ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000479916 : ja 0x20000479929 ; lea eax, dword ptr [rcx*4 + 8] ; ret
0x000002000048bbce : ja 0x2000048bbeb ; test edx, edx ; jne 0x2000048bbe4 ; xor eax, eax ; ret
0x00000200004ba791 : ja 0x200004ba7a0 ; sbb eax, eax ; add eax, 2 ; ret
0x00000200004d4f9f : ja 0x200004d4fb0 ; cmp r8, rdx ; setbe al ; ret
0x00000200004d5e4d : ja 0x200004d5db7 ; jmp 0x200004d5e1f
0x00000200004f9933 : ja 0x200004f98f9 ; xor al, al ; ret
0x00000200005049a6 : ja 0x200005049af ; mov eax, ecx ; ret
0x0000020000512c92 : ja 0x20000512ca3 ; mov ecx, esi ; call 0x2000013a673
0x00000200005146d9 : ja 0x20000514747 ; ret 0x4cff
0x0000020000516397 : ja 0x20000516322 ; mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000051638e
0x00000200005165a1 : ja 0x2000051655c ; jmp 0x200005b2893
0x000002000051d895 : ja 0x2000051d84e ; ret 0x48ff
0x000002000051f7e6 : ja 0x2000051f7f7 ; mov dword ptr [rip - 0x279c16], ecx ; ret
0x000002000051fbef : ja 0x2000051fbf4 ; ret
0x000002000051fc52 : ja 0x2000051fc40 ; mov ah, ah ; ret 0x85ff
0x000002000051fc51 : ja 0x2000051fc41 ; mov ah, ah ; ret 0x85ff
0x000002000051fd85 : ja 0x2000051fd67 ; ret 0x33ff
0x000002000054598d : ja 0x2000054594b ; call qword ptr [rax - 0x18413d17]
0x000002000044c3d6 : ja 0x20000572f4a ; ret
0x0000020000572f6d : ja 0x20000572f57 ; ret
0x0000020000583914 : ja 0x2000058390a ; push rsi ; ret
0x00000200005f6f95 : ja 0x200005f6fbd ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x0000020000605035 : ja 0x20000604feb ; ret
0x000002000060f819 : ja 0x2000060f83c ; fdivp st(7) ; add rsp, 0x38 ; ret
0x0000020000611a4b : ja 0x20000611a5e ; movzx eax, r9w ; add eax, 0x20 ; ret
0x0000020000616b95 : ja 0x20000616ba6 ; movzx eax, cx ; add eax, r10d ; jmp 0x20000616ba9
0x00000200006564c2 : ja 0x200006564ce ; push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x000002000066e18d : ja 0x2000066e19e ; sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x0000020000672c0b : ja 0x20000672c18 ; movzx eax, r10b ; jmp 0x20000672c24
0x0000020000672cd8 : ja 0x20000672ce5 ; movzx eax, r10b ; jmp 0x20000672cf1
0x0000020000672d8c : ja 0x20000672d99 ; movzx eax, r10b ; jmp 0x20000672da5
0x0000020000672e2f : ja 0x20000672e3c ; movzx eax, r10b ; jmp 0x20000672e48
0x0000020000679b0a : ja 0x20000679b84 ; int 0xff
0x0000020000680bfc : ja 0x20000680bcb ; ret 0xff
0x00000200006ef09e : ja 0x200006ef0ad ; add rsp, 0x20 ; pop rbx ; ret
0x000002000071518d : ja 0x20000715159 ; ret
0x00000200007202b5 : ja 0x200007202c8 ; ret
0x0000020000729f29 : ja 0x20000729fa0 ; ret 0x48ff
0x000002000005b17c : jae 0x1ff8614b382 ; ret 3
0x000002000000dc8a : jae 0x2000000dcd5 ; or ebx, dword ptr [rdi - 0x6b] ; ret
0x000002000000e287 : jae 0x2000000e275 ; ret
0x0000020000022f3c : jae 0x20000022f87 ; add edi, dword ptr [rsi + 0x21] ; je 0x20000022ef0 ; pop rdx ; ret 0x594d
0x0000020000033604 : jae 0x20000033615 ; mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000033648 : jae 0x2000003365b ; mov eax, r8d ; mov dword ptr [rcx + rax*4], r9d ; ret
0x000002000003db8c : jae 0x2000003dc08 ; add eax, dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8844
0x000002000004a637 : jae 0x2000004a657 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000055010 : jae 0x2000005501b ; mov qword ptr [r8], rax ; ret
0x00000200000722ef : jae 0x20000072315 ; ret
0x00000200000727e5 : jae 0x200000727fb ; mov qword ptr [r10], rdx ; mov rax, r8 ; ret
0x0000020000075aa3 : jae 0x20000075aba ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000075aa2 : jae 0x20000075abb ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008188f : jae 0x200000818a0 ; mov al, dl ; add rsp, 0x28 ; ret
0x0000020000083f35 : jae 0x20000083f5d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000088ff7 : jae 0x20000089006 ; or byte ptr [r8 + 0x1a], 0x10 ; ret
0x000002000008c9bd : jae 0x2000008c9d7 ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x000002000008f88a : jae 0x2000008f8b2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000093155 : jae 0x2000009317d ; mov rsp, r11 ; pop rdi ; ret
0x000002000009c6fe : jae 0x2000009c726 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000a4d67 : jae 0x200000a4d97 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000a7c5a : jae 0x200000a7c82 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000a849f : jae 0x200000a84b6 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000a849e : jae 0x200000a84b7 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000b13a6 : jae 0x200000b1028 ; jmp 0x2000018d613
0x00000200000b8306 : jae 0x200000b832e ; mov rsp, r11 ; pop rdi ; ret
0x00000200000c288a : jae 0x200000c28cd ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000c3bbb : jae 0x200000c3bc4 ; xor eax, eax ; ret
0x00000200000c4794 : jae 0x200000c47c4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000c5dc1 : jae 0x200000c5dd1 ; cmp r8, rcx ; seta al ; ret
0x00000200000cd349 : jae 0x200000cd379 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000ced09 : jae 0x200000ced12 ; mov al, 1 ; ret
0x00000200000cf7b1 : jae 0x200000cf7d1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000d7992 : jae 0x200000d79ba ; mov rsp, r11 ; pop rdi ; ret
0x00000200000df0bd : jae 0x200000df0f8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000e0536 : jae 0x200000e0543 ; add rsp, 0x28 ; ret
0x00000200000e1ea5 : jae 0x200000e1eae ; mov al, 1 ; ret
0x00000200000e26fb : jae 0x200000e272b ; mov rsp, r11 ; pop rbp ; ret
0x00000200000e4215 : jae 0x200000e4245 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000e7425 : jae 0x200000e7468 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000e7945 : jae 0x200000e7978 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ebdea : jae 0x200000ebe1a ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f3b01 : jae 0x200000f3b10 ; mov eax, 1 ; ret
0x00000200000f4544 : jae 0x200000f4549 ; ret
0x00000200000f559e : jae 0x200000f55c6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000fc599 : jae 0x200000fc56c ; add al, 0 ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000ffc70 : jae 0x200000ffceb ; add ecx, dword ptr [rdi] ; xchg eax, edx ; ret 0x5488
0x0000020000100c3c : jae 0x20000100c6d ; mov rsp, r11 ; pop r15 ; ret
0x0000020000106f6a : jae 0x20000106f8a ; mov rsp, r11 ; pop rdi ; ret
0x000002000010a1a5 : jae 0x2000010a1aa ; ret
0x000002000011121d : jae 0x20000111258 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001113f6 : jae 0x20000111439 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000112a89 : jae 0x20000112a9a ; or eax, 0xffffffff ; ret
0x000002000011960a : jae 0x20000119645 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000011cf3a : jae 0x2000011cf6d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000011fd78 : jae 0x2000011fd98 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012280c : jae 0x20000122834 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000123c25 : jae 0x20000123c60 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000012b293 : jae 0x2000012b2a2 ; add byte ptr [rsi - 1], ah ; ret 0xb70f
0x000002000012f4f0 : jae 0x2000012f520 ; mov rsp, r11 ; pop rbp ; ret
0x000002000012fda9 : jae 0x2000012fda1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001300db : jae 0x20000130116 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001338b5 : jae 0x200001338e8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000013734d : jae 0x20000137375 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013a61b : jae 0x2000013a643 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013d75f : jae 0x2000013d787 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001413db : jae 0x200001413f9 ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x0000020000143fc6 : jae 0x20000143fd4 ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000143fc6 : jae 0x20000143fd5 ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000144893 : jae 0x200001448c7 ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x200001448b9
0x0000020000146769 : jae 0x20000146799 ; mov rsp, r11 ; pop rbp ; ret
0x000002000014cad5 : jae 0x2000014cade ; mov al, 1 ; ret
0x000002000014d808 : jae 0x2000014d811 ; xor al, al ; ret
0x00000200001815e1 : jae 0x200001815db ; ret
0x0000020000191aed : jae 0x20000191ab2 ; inc dword ptr [rbp + 0x5890fc0] ; ret 0xfff2
0x00000200001ba4ce : jae 0x200001ba4f1 ; add byte ptr [rbx - 0x74c2892a], cl ; ret 0x8d48
0x00000200001bd88d : jae 0x200001bd8d0 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200001c626a : jae 0x200001c6275 ; or eax, 0xffffffff ; ret
0x00000200001c78c1 : jae 0x200001c78e1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cf263 : jae 0x200001cf296 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001d174f : jae 0x200001d1758 ; mov al, 1 ; ret
0x00000200001d9799 : jae 0x200001d97c9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001de6fc : jae 0x200001de73f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001df90d : jae 0x200001df920 ; mov rcx, r14 ; call 0x200000bbb93
0x00000200001e078f : jae 0x200001e07bf ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e1e7c : jae 0x200001e1eac ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e577b : jae 0x200001e57ab ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e5f4b : jae 0x200001e5f56 ; or eax, 0xffffffff ; ret
0x00000200001eb151 : jae 0x200001eb181 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f4691 : jae 0x200001f46c1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fa30a : jae 0x200001fa33a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fbbb7 : jae 0x200001fbbd7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ff36e : jae 0x200001ff396 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ff908 : jae 0x200001ff938 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002072fe : jae 0x20000207326 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000209fd8 : jae 0x20000209fcf ; mov rax, rdx ; ret
0x0000020000209fd8 : jae 0x20000209fd0 ; mov rax, rdx ; ret
0x000002000020a031 : jae 0x2000020a02a ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x000002000020a069 : jae 0x2000020a072 ; xor al, al ; ret
0x000002000020ad03 : jae 0x2000020ad2b ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f25a : jae 0x2000020f27a ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f387 : jae 0x2000020f3a7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000020f433 : jae 0x2000020f453 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000211fcb : jae 0x20000211f8f ; xor eax, eax ; ret
0x00000200002154ba : jae 0x200002154c8 ; mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200002219d9 : jae 0x20000221a14 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000225174 : jae 0x2000022517f ; or eax, 0xffffffff ; ret
0x0000020000229062 : jae 0x2000022909d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000022f5ad : jae 0x2000022f5f0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000231eb2 : jae 0x20000231ec1 ; mov eax, 1 ; ret
0x0000020000235c4a : jae 0x20000235c85 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000236a32 : jae 0x20000236a62 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000238a62 : jae 0x20000238a6b ; xor eax, eax ; ret
0x000002000026d321 : jae 0x2000026d373 ; add ah, bh ; ret 0x26
0x00000200003694ec : jae 0x20000369506 ; mov al, 1 ; ret
0x000002000036d1b7 : jae 0x2000036d1f2 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000036dc80 : jae 0x2000036dcbb ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000370619 : jae 0x200003705fd ; mov byte ptr [rip - 0x7ff1e], 1 ; ret
0x000002000037583f : jae 0x2000037585f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000379714 : jae 0x20000379783 ; call 0x20000124fcd
0x000002000037ebd2 : jae 0x2000037ebe1 ; mov eax, 0xc0000095 ; ret
0x000002000037ec07 : jae 0x2000037ec10 ; mov eax, ecx ; ret
0x000002000037ee76 : jae 0x2000037ee85 ; mov eax, 0xc0000095 ; ret
0x000002000037eeab : jae 0x2000037eeb4 ; mov eax, ecx ; ret
0x0000020000382715 : jae 0x2000038273d ; mov rsp, r11 ; pop rdi ; ret
0x00000200003887a7 : jae 0x200003887d7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000038fedc : jae 0x2000038fee7 ; movzx eax, cx ; ret
0x00000200003a5831 : jae 0x200003a5851 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003a6206 : jae 0x200003a6237 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003b2dc2 : jae 0x200003b2df3 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003d8e74 : jae 0x200003d8e94 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003d9796 : jae 0x200003d9781 ; jmp 0x200003d970c
0x00000200003e4f50 : jae 0x200003e4f81 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003e7b4d : jae 0x200003e7b7d ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e9f68 : jae 0x200003e9fa3 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003f60c3 : jae 0x200003f60ec ; mov rsp, r11 ; pop r15 ; ret
0x00000200003f729e : jae 0x200003f72c6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f86f1 : jae 0x200003f86fe ; mov eax, r8d ; jmp 0x200003f86c1
0x00000200004015e6 : jae 0x20000401629 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000404cda : jae 0x20000404d0a ; mov rsp, r11 ; pop rbp ; ret
0x000002000040782d : jae 0x20000407855 ; mov rsp, r11 ; pop rdi ; ret
0x000002000040cc3d : jae 0x2000040cc0b ; mov dword ptr [r9 + 4], edx ; ret
0x0000020000412b79 : jae 0x20000412ba9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000041586b : jae 0x2000041589b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000415e1e : jae 0x20000415e59 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000415f4a : jae 0x20000415f85 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004230a4 : jae 0x200004230d7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004266a5 : jae 0x200004266e0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000427324 : jae 0x2000042731d ; or dword ptr [rdx], eax ; ret
0x0000020000433139 : jae 0x2000043310e ; ret
0x00000200004341b7 : jae 0x200004341df ; mov rsp, r11 ; pop rdi ; ret
0x000002000043abab : jae 0x2000043abb7 ; call 0x20000068fd5
0x000002000043c13d : jae 0x2000043c178 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000043cc39 : jae 0x2000043cc4b ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043dbcd : jae 0x2000043dbfd ; mov rsp, r11 ; pop rbp ; ret
0x000002000043f736 : jae 0x2000043f771 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004414cc : jae 0x20000441507 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000442fe8 : jae 0x20000443010 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004431b8 : jae 0x200004431d8 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000447499 : jae 0x200004474ce ; ret 0x8bff
0x00000200004592e2 : jae 0x20000459302 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045a1af : jae 0x2000045a1ea ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000045a2b8 : jae 0x2000045a2e0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045adde : jae 0x2000045ae0e ; mov rsp, r11 ; pop rdi ; ret
0x000002000045af40 : jae 0x2000045af68 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004604d6 : jae 0x20000460507 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004626e7 : jae 0x20000462722 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000046341e : jae 0x2000046343e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000466a9d : jae 0x20000466acd ; mov rsp, r11 ; pop rdi ; ret
0x0000020000466d94 : jae 0x20000466dc4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000467a39 : jae 0x20000467a61 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004684c3 : jae 0x200004684e3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046c12e : jae 0x2000046c156 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046c626 : jae 0x2000046c661 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000046ca12 : jae 0x2000046ca3a ; mov rsp, r11 ; pop rdi ; ret
0x000002000046f25b : jae 0x2000046f296 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004700fc : jae 0x2000047012c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000471ed4 : jae 0x20000471f04 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047a686 : jae 0x2000047a6c9 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000047c9f0 : jae 0x2000047ca10 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047fd8a : jae 0x2000047fdba ; mov rsp, r11 ; pop rdi ; ret
0x00000200004823d8 : jae 0x20000482408 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004856a1 : jae 0x200004856c9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000488c6d : jae 0x20000488c95 ; mov rsp, r11 ; pop rdi ; ret
0x000002000048e53d : jae 0x2000048e5a9 ; str word ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000048f9cc : jae 0x2000048f9f4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000049a04c : jae 0x2000049a059 ; add rsp, 0x38 ; ret
0x000002000049afee : jae 0x2000049b00e ; mov rsp, r11 ; pop rbp ; ret
0x000002000049e3f5 : jae 0x2000049e3d5 ; ret
0x000002000049e651 : jae 0x2000049e671 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a472c : jae 0x200004a474c ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a760a : jae 0x200004a763b ; mov rsp, r11 ; pop r15 ; ret
0x00000200004a8d39 : jae 0x200004a8d61 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004abb1d : jae 0x200004abb3d ; mov rsp, r11 ; pop rdi ; ret
0x00000200004abe4f : jae 0x200004abe6f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ac579 : jae 0x200004ac5a9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b2c92 : jae 0x200004b2cc5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004b3b7e : jae 0x200004b3b8d ; bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x00000200004b4202 : jae 0x200004b4233 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004bc31e : jae 0x200004bc346 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004bdf92 : jae 0x200004bdfc2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004be223 : jae 0x200004be243 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c15fc : jae 0x200004c1624 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c1fac : jae 0x200004c1fdc ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c3351 : jae 0x200004c338c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c3a64 : jae 0x200004c3a94 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c464b : jae 0x200004c468e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c4f20 : jae 0x200004c4f5b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c60db : jae 0x200004c611e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c650f : jae 0x200004c6537 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c7954 : jae 0x200004c797c ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c7a64 : jae 0x200004c7a8c ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c99c8 : jae 0x200004c99f0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cbac4 : jae 0x200004cbad3 ; mov eax, 0xc0000023 ; ret
0x00000200004cda7f : jae 0x200004cdaaf ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cdf66 : jae 0x200004cdf86 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ce51f : jae 0x200004ce547 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004cf179 : jae 0x200004cf1ac ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004cf60b : jae 0x200004cf633 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d0f6e : jae 0x200004d0fb1 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004d1215 : jae 0x200004d1245 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d5215 : jae 0x200004d5235 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d63a5 : jae 0x200004d63d5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d74fd : jae 0x200004d7540 ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004d786b : jae 0x200004d7893 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004da6e0 : jae 0x200004da708 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004df470 : jae 0x200004df490 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004df81d : jae 0x200004df850 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004dfc62 : jae 0x200004dfc9d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004e29a8 : jae 0x200004e29d0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e7e19 : jae 0x200004e7e3c ; mov rcx, rbx ; call 0x2000011497c
0x00000200004ebf3c : jae 0x200004ebf77 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ee1a3 : jae 0x200004ee1c3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ef22e : jae 0x200004ef261 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f1a74 : jae 0x200004f1ab7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f2444 : jae 0x200004f2477 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f3481 : jae 0x200004f3445 ; ret
0x00000200004f36bf : jae 0x200004f36f2 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f8783 : jae 0x200004f87b3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fc009 : jae 0x200004fc04c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004fc451 : jae 0x200004fc471 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000508342 : jae 0x20000508372 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050a47d : jae 0x2000050a443 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000050a47c : jae 0x2000050a444 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000050ae2f : jae 0x2000050ae57 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050d22e : jae 0x2000050d25e ; mov rsp, r11 ; pop rdi ; ret
0x000002000050dad2 : jae 0x2000050db02 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050db9c : jae 0x2000050dbcc ; mov rsp, r11 ; pop rbp ; ret
0x000002000050dd89 : jae 0x2000050ddb9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000512eeb : jae 0x20000512f13 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005133f4 : jae 0x2000051341c ; mov rsp, r11 ; pop rdi ; ret
0x00000200005134e8 : jae 0x20000513510 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005137a9 : jae 0x200005137a6 ; add byte ptr [rax], al ; jmp 0x20000513777
0x0000020000517f3a : jae 0x20000517f4d ; or eax, 0xffffffff ; ret
0x000002000051a6c8 : jae 0x2000051a6f0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051b074 : jae 0x2000051b09c ; mov rsp, r11 ; pop rbp ; ret
0x000002000051c14f : jae 0x2000051c177 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051caaf : jae 0x2000051cabe ; mov eax, 1 ; ret
0x000002000051de7c : jae 0x2000051de9c ; mov rsp, r11 ; pop rdi ; ret
0x000002000051e640 : jae 0x2000051e668 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051ff4a : jae 0x2000051ff7a ; mov rsp, r11 ; pop rbp ; ret
0x000002000042ae25 : jae 0x20000567bb6 ; mov al, 1 ; ret
0x000002000057e0b6 : jae 0x2000057e0ab ; push rsi ; ret
0x000002000058821f : jae 0x20000588215 ; jmp 0x20000494479
0x00000200004dd0a9 : jae 0x2000059fbc6 ; mov al, 1 ; ret
0x00000200005acbdb : jae 0x200005acc0b ; mov rsp, r11 ; pop rbp ; ret
0x000002000051d23e : jae 0x200005b467f ; or eax, 0xffffffff ; ret
0x00000200005b684f : jae 0x200005b6877 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b6efc : jae 0x200005b6f3f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005bca51 : jae 0x200005bca5a ; mov al, 1 ; ret
0x00000200005bf2af : jae 0x200005bf2df ; mov rsp, r11 ; pop rdi ; ret
0x00000200005c1275 : jae 0x200005c12a8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005c6327 : jae 0x200005c6357 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005cdaa7 : jae 0x200005cdacf ; mov rsp, r11 ; pop rdi ; ret
0x00000200005cdf35 : jae 0x200005cdf78 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005ce410 : jae 0x200005ce438 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005ce6a2 : jae 0x200005ce678 ; push rsi ; ret
0x00000200005d0dce : jae 0x200005d0dfe ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d2d94 : jae 0x200005d2db4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d6a02 : jae 0x200005d6a11 ; mov eax, 0xc000000d ; ret
0x00000200005d9ac2 : jae 0x200005d9afd ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005da0be : jae 0x200005da0e6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005da1cd : jae 0x200005da1fd ; mov rsp, r11 ; pop rdi ; ret
0x00000200005de89c : jae 0x200005de8df ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005e97ab : jae 0x200005e97d4 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005eca79 : jae 0x200005ecab4 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200005eeaef : jae 0x200005eeb18 ; mov rsp, r11 ; pop r15 ; ret
0x00000200005efb65 : jae 0x200005efb95 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f5b83 : jae 0x200005f5bab ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f72f7 : jae 0x200005f7327 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f94cf : jae 0x200005f94f7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fbf18 : jae 0x200005fbf40 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000600e4f : jae 0x20000600e5e ; mov eax, 0xc0000095 ; ret
0x0000020000600e5b : jae 0x20000600e6a ; mov eax, 0xc0000004 ; ret
0x0000020000600ef3 : jae 0x20000600f02 ; mov eax, 0xc0000095 ; ret
0x0000020000600eff : jae 0x20000600f0e ; mov eax, 0xc0000004 ; ret
0x0000020000603df2 : jae 0x20000603e1a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000605689 : jae 0x200006056b1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006065b9 : jae 0x200006065e1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060919f : jae 0x200006091cf ; mov rsp, r11 ; pop rbp ; ret
0x000002000060c4fa : jae 0x2000060c52a ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d16c : jae 0x2000060d19c ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d21f : jae 0x2000060d23f ; mov rsp, r11 ; pop rdi ; ret
0x000002000060d427 : jae 0x2000060d447 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000611a40 : jae 0x20000611a4b ; movzx eax, cx ; ret
0x0000020000611a3f : jae 0x20000611a4c ; movzx eax, cx ; ret
0x00000200006180b9 : jae 0x20000618082 ; ret
0x00000200006183e6 : jae 0x20000618416 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061b0a2 : jae 0x2000061b0dd ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000061ba70 : jae 0x2000061baab ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000627da4 : jae 0x20000627ddf ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000629b88 : jae 0x20000629b99 ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x20000629b88
0x0000020000629f37 : jae 0x20000629f23 ; ret
0x000002000062acf9 : jae 0x2000062ad21 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062aeb1 : jae 0x2000062aee1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062cdf0 : jae 0x2000062ce05 ; mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x2000062cdf2
0x000002000062dadb : jae 0x2000062dafb ; mov rsp, r11 ; pop rbp ; ret
0x000002000062dc47 : jae 0x2000062dc82 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000631ade : jae 0x20000631b11 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006347e6 : jae 0x2000063480f ; mov rsp, r11 ; pop r14 ; ret
0x0000020000635fd2 : jae 0x20000636005 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000063666e : jae 0x2000063667f ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000638871 : jae 0x200006388a1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000638a91 : jae 0x20000638ac1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000643f39 : jae 0x20000643f62 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000645840 : jae 0x20000645873 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000064865e : jae 0x200006486a1 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000064b20d : jae 0x2000064b23d ; mov rsp, r11 ; pop rbp ; ret
0x000002000064b2d1 : jae 0x2000064b301 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064c07f : jae 0x2000064c0a7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d1de : jae 0x2000064d206 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000651190 : jae 0x2000065119b ; or eax, 0xffffffff ; ret
0x00000200006525df : jae 0x20000652622 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000652c80 : jae 0x20000652c83 ; ret 0xb70f
0x0000020000654b91 : jae 0x20000654bcc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000065a21f : jae 0x2000065a1fe ; ret
0x000002000065c8af : jae 0x2000065c8f2 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000065dd91 : jae 0x2000065ddd4 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006674f7 : jae 0x20000667506 ; mov eax, 1 ; ret
0x0000020000667bc7 : jae 0x20000667bf7 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000671d9a : jae 0x20000671dca ; mov rsp, r11 ; pop rdi ; ret
0x0000020000671e68 : jae 0x20000671e98 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000673946 : jae 0x20000673976 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000673a16 : jae 0x20000673a46 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006752a9 : jae 0x20000675231 ; ret
0x0000020000675879 : jae 0x200006758fb ; ret
0x0000020000675fba : jae 0x20000675fea ; mov rsp, r11 ; pop rdi ; ret
0x0000020000679285 : jae 0x20000679215 ; ret 0x85ff
0x000002000067c575 : jae 0x2000067c5a5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000067c8d9 : jae 0x2000067c909 ; mov rsp, r11 ; pop rdi ; ret
0x000002000067e552 : jae 0x2000067e585 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000068d194 : jae 0x2000068d1bc ; mov rsp, r11 ; pop rdi ; ret
0x00000200006d0181 : jae 0x200006d0192 ; mov esi, r12d ; mov rax, rdx ; jmp 0x200006d0197
0x00000200006ee31b : jae 0x200006ee356 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006f8372 : jae 0x200006f839a ; mov rsp, r11 ; pop rdi ; ret
0x00000200006f9ac6 : jae 0x200006f9ad5 ; mov eax, 1 ; ret
0x0000020000703b5d : jae 0x20000703ba0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000070424c : jae 0x2000070428f ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007045d0 : jae 0x20000704613 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000704911 : jae 0x20000704941 ; mov edx, 0x5100fff ; ret 2
0x0000020000704d12 : jae 0x20000704d42 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000706905 : jae 0x2000070692d ; mov rsp, r11 ; pop rbp ; ret
0x000002000070ae22 : jae 0x2000070ae65 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000070db62 : jae 0x2000070db92 ; mov rsp, r11 ; pop rbp ; ret
0x000002000070dcde : jae 0x2000070dcfe ; mov rsp, r11 ; pop rbp ; ret
0x000002000070df7f : jae 0x2000070dfc2 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007114cf : jae 0x2000071150a ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000071165b : jae 0x2000071168b ; mov rsp, r11 ; pop rbp ; ret
0x000002000071272c : jae 0x2000071275c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007168be : jae 0x200007168f9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000716ca1 : jae 0x20000716cd1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000716df4 : jae 0x20000716e2f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007188dd : jae 0x20000718920 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000071955b : jae 0x20000719596 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007195cb : jae 0x200007195d6 ; or eax, 0xffffffff ; ret
0x000002000072b39f : jae 0x2000072b3cf ; mov rsp, r11 ; pop rbp ; ret
0x000002000072b7ab : jae 0x2000072b7ee ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000072b9b0 : jae 0x2000072b9e0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000072ef47 : jae 0x2000072ef82 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000072fd41 : jae 0x2000072fd84 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000000eb59 : jb 0x2000000eb60 ; ret
0x000002000001072f : jb 0x20000010760 ; mov cl, 0x69 ; sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x0000020000024c84 : jb 0x20000024c6d ; xor eax, eax ; ret
0x0000020000029565 : jb 0x20000029521 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000002a7e9 : jb 0x2000002a869 ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x0000020000054f8b : jb 0x20000054f86 ; mov rax, r8 ; ret
0x000002000006711a : jb 0x20000067134 ; test byte ptr [rbx - 0x16000002], ch ; call qword ptr [rax]
0x0000020000079a4e : jb 0x20000079a10 ; ret
0x000002000008fe7d : jb 0x2000008fe8c ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000008fe97 : jb 0x2000008fea6 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000009625f : jb 0x20000096264 ; ret
0x0000020000096647 : jb 0x2000009665a ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009722c : jb 0x20000097237 ; mov al, r8b ; ret
0x000002000009c0d6 : jb 0x2000009c0ca ; ret
0x00000200000bc98b : jb 0x200000bc972 ; ret
0x00000200000ced04 : jb 0x200000ced17 ; cmp rdx, qword ptr [r8] ; jae 0x200000ced17 ; mov al, 1 ; ret
0x00000200000e2697 : jb 0x200000e26bb ; add dh, dh ; ret
0x00000200000e3f63 : jb 0x200000e3f6d ; ret
0x00000200000e3f5d : jb 0x200000e3f6e ; bt ecx, 0x1b ; jb 0x200000e3f73 ; ret
0x00000200000ea2fd : jb 0x200000ea2df ; ret
0x00000200000fa9ba : jb 0x200000fa9ac ; mov eax, 0x10 ; ret
0x000002000010316f : jb 0x2000010314e ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000103765 : jb 0x2000010376e ; xor eax, eax ; ret
0x000002000010b8d9 : jb 0x2000010b8e6 ; add rsp, 0x48 ; ret
0x000002000010ba23 : jb 0x2000010ba13 ; xor eax, eax ; ret
0x000002000010fdcc : jb 0x2000010fdd5 ; xor eax, eax ; ret
0x0000020000118d77 : jb 0x20000118d6d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011ec81 : jb 0x2000011ec90 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000011ec80 : jb 0x2000011ec91 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000120c39 : jb 0x20000120c83 ; inc edx ; jmp 0x20000120c1d
0x0000020000120faf : jb 0x20000120fa6 ; mov eax, 1 ; ret
0x0000020000122b68 : jb 0x20000122b76 ; mov al, 1 ; ret
0x0000020000123b62 : jb 0x20000123b89 ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000012d4d6 : jb 0x2000012d49d ; add rsp, 0x38 ; ret
0x0000020000134197 : jb 0x20000134167 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000137d30 : jb 0x20000137cf3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000294008
0x0000020000138188 : jb 0x20000138174 ; ret
0x0000020000139700 : jb 0x200001396eb ; mov eax, dword ptr [rip + 0x217910] ; ret
0x000002000013b734 : jb 0x2000013b713 ; ret
0x000002000013b733 : jb 0x2000013b714 ; ret
0x000002000014034f : jb 0x2000014033c ; ret
0x0000020000140402 : jb 0x200001403ee ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001406c9 : jb 0x200001406b9 ; mov rax, r10 ; ret
0x0000020000140c82 : jb 0x20000140c6b ; mov rax, r10 ; ret
0x0000020000140c82 : jb 0x20000140c6c ; mov rax, r10 ; ret
0x0000020000141cf9 : jb 0x20000141ced ; ret
0x00000200001420fb : jb 0x200001420ed ; ret
0x000002000014413f : jb 0x20000143fd1 ; or eax, 0xffffffff ; ret
0x000002000014a962 : jb 0x2000014a937 ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000159e69 : jb 0x20000159e22 ; ret
0x000002000017b9a7 : jb 0x2000017b99d ; inc dword ptr [rbp - 0x75] ; ret
0x000002000017e65e : jb 0x2000017e5f4 ; enter -0x3eb8, -6 ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x0000020000192032 : jb 0x2000019204e ; or al, byte ptr [rax] ; nop ; jmp 0x200000be2f7
0x00000200001b8405 : jb 0x200001b8414 ; mov eax, 1 ; ret
0x00000200001b8404 : jb 0x200001b8415 ; mov eax, 1 ; ret
0x00000200001b8410 : jb 0x200001b841f ; mov eax, 5 ; ret
0x00000200001c5762 : jb 0x200001c5771 ; mov eax, 0xc000000d ; ret
0x00000200001c617f : jb 0x200001c616a ; xor eax, eax ; ret
0x00000200001d93b2 : jb 0x200001d93a6 ; mov eax, 0xc0000225 ; ret
0x00000200001db0e3 : jb 0x200001db0dd ; ret
0x00000200001e53b4 : jb 0x200001e537c ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001e80b9 : jb 0x200001e8094 ; mov rcx, rbx ; call 0x200000a4307
0x00000200001e9241 : jb 0x200001e9216 ; xor eax, eax ; ret
0x00000200001ea0c1 : jb 0x200001ea094 ; ret
0x00000200001f059b : jb 0x200001f0595 ; add rsp, 0x38 ; ret
0x000002000020a1d8 : jb 0x2000020a1e1 ; xor al, al ; ret
0x000002000020ad43 : jb 0x2000020ad2c ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020bb23 : jb 0x2000020bb07 ; ret
0x000002000020c40a : jb 0x2000020c3f9 ; mov rax, r8 ; ret
0x000002000020c428 : jb 0x2000020c41d ; mov al, 1 ; ret
0x000002000020c444 : jb 0x2000020c43d ; mov al, 1 ; ret
0x000002000020c487 : jb 0x2000020c45f ; mov al, 1 ; ret
0x000002000020c8ce : jb 0x2000020c87b ; jmp 0x2000020c964
0x00000200002195c8 : jb 0x2000021959c ; xor r9d, r9d ; mov rax, r9 ; ret
0x000002000022414b : jb 0x20000224144 ; xor eax, eax ; ret
0x000002000022a8c5 : jb 0x2000022a8c5 ; jmp 0x2000022a8db
0x000002000022abe3 : jb 0x2000022abd2 ; ret
0x000002000022ea26 : jb 0x2000022e9da ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000233330 : jb 0x2000023330f ; ret
0x000002000023696b : jb 0x20000236974 ; xor al, al ; ret
0x000002000025d419 : jb 0x2000025d465 ; add ah, ch ; ret
0x000002000026d31d : jb 0x2000026d373 ; add byte ptr [rdi + 0x73], dh ; add spl, r15b ; ret 0x26
0x0000020000369473 : jb 0x2000036949f ; test dl, 4 ; jne 0x20000369486 ; xor al, al ; ret
0x000002000036d8d2 : jb 0x2000036d8e5 ; inc ecx ; shr r9, 1 ; jne 0x2000036d8a8 ; ret
0x000002000036dafc : jb 0x2000036da90 ; xor al, al ; ret
0x000002000037fb23 : jb 0x2000037fa62 ; ret
0x0000020000381e04 : jb 0x20000381df4 ; mov eax, 0xc0000001 ; ret
0x000002000038a6f2 : jb 0x2000038a6c9 ; mov rax, r8 ; ret
0x00000200003ad84a : jb 0x200003ad865 ; and dword ptr [rcx], 0xfffffff ; ret
0x00000200003d40fd : jb 0x200003d411b ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003e6b09 : jb 0x200003e6ae9 ; ret
0x00000200003e7fa2 : jb 0x200003e7f81 ; jmp 0x200003e7faa
0x00000200003f263b : jb 0x200003f2644 ; xor eax, eax ; ret
0x00000200003fea25 : jb 0x200003fea1a ; mov rax, r8 ; shr rax, 1 ; ret
0x000002000042b69a : jb 0x2000042b68d ; ret
0x000002000043850a : jb 0x2000043851d ; int1 ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x000002000044ce3e : jb 0x2000044ce34 ; xor eax, eax ; ret
0x0000020000472b8f : jb 0x20000472b6f ; mov al, dl ; ret
0x0000020000472b8f : jb 0x20000472b70 ; mov al, dl ; ret
0x00000200004799e1 : jb 0x200004799d7 ; mov eax, 1 ; ret
0x000002000049f1b2 : jb 0x2000049f233 ; ret
0x000002000049f268 : jb 0x2000049f27b ; add rsp, 0x28 ; ret
0x00000200004a8dbc : jb 0x200004a8da1 ; mov eax, edx ; ret
0x00000200004a8dbc : jb 0x200004a8da2 ; mov eax, edx ; ret
0x00000200004a8e0e : jb 0x200004a8df7 ; mov dword ptr [rcx + 0x7c], edx ; ret
0x00000200004a98a8 : jb 0x200004a98bc ; ret
0x00000200004b192c : jb 0x200004b1923 ; and eax, 0x1f ; ret
0x00000200004b1cdb : jb 0x200004b1ca0 ; dec dword ptr [rax - 0x75] ; and byte ptr [r11], r15b ; ret
0x00000200004b4c12 : jb 0x200004b4bfd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004be480 : jb 0x200004be476 ; xor al, al ; ret
0x00000200004c2d58 : jb 0x200004c2d4f ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x00000200004c5f1c : jb 0x200004c5ec9 ; mov al, 2 ; ret
0x00000200004c75aa : jb 0x200004c758d ; fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d2166 : jb 0x200004d2127 ; dec dword ptr [rbp + rcx*4 + 0x67] ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200004dcada : jb 0x200004dcac5 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050a186 : jb 0x2000050a161 ; mov rax, rdx ; ret
0x000002000050a186 : jb 0x2000050a162 ; mov rax, rdx ; ret
0x000002000050f8e6 : jb 0x2000050f8bb ; mov al, cl ; ret
0x0000020000511d8a : jb 0x20000511d4d ; ret
0x000002000054d469 : jb 0x2000054d46c ; call 0x1ffc3e01e75
0x0000020000572f66 : jb 0x20000572f05 ; in eax, dx ; dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x1a], 1 ; ret
0x000002000058e14d : jb 0x2000058e144 ; push rdi ; ret
0x0000020000590335 : jb 0x200005902f9 ; jmp 0x200004ac56c
0x00000200005903b5 : jb 0x20000590393 ; jmp 0x200004ac60c
0x00000200005b5ca0 : jb 0x200005b5c93 ; ret
0x00000200005b646a : jb 0x200005b63d9 ; ret
0x00000200005b657a : jb 0x200005b6566 ; add rsp, 0x28 ; ret
0x00000200005b658a : jb 0x200005b6599 ; mov eax, 0xc000000d ; ret
0x00000200005bfdd1 : jb 0x200005bfda3 ; movzx eax, r8w ; ret
0x00000200005ce51a : jb 0x200005ce50a ; xor al, al ; add rsp, 0x28 ; ret
0x00000200005d055e : jb 0x200005d052b ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200005d5e1b : jb 0x200005d5e2a ; mov eax, 0xc0000189 ; ret
0x00000200005efbad : jb 0x200005efb8c ; xor eax, eax ; ret
0x00000200005f33fd : jb 0x200005f33f5 ; mov eax, 0xc0000225 ; ret
0x0000020000602f09 : jb 0x20000602f00 ; xor al, al ; ret
0x00000200006236e5 : jb 0x200006236cf ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000062e7d8 : jb 0x2000062e767 ; ret
0x0000020000635b5c : jb 0x20000635b21 ; jmp 0x20000635b64
0x0000020000643d60 : jb 0x20000643d52 ; or eax, 0xffffffff ; ret
0x000002000065512e : jb 0x200006550df ; xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x000002000065d0eb : jb 0x2000065d0d9 ; xor eax, eax ; ret
0x00000200006655ff : jb 0x2000066560e ; shr eax, 0xf ; and al, 1 ; ret
0x000002000066562b : jb 0x20000665634 ; mov al, 1 ; ret
0x00000200006687df : jb 0x200006687e8 ; xor eax, eax ; ret
0x0000020000668a2a : jb 0x20000668a3b ; add eax, 0xc4834800 ; ret
0x000002000066caef : jb 0x2000066cb39 ; mov eax, esi ; call rax
0x000002000066e407 : jb 0x2000066e3fc ; xor eax, eax ; ret
0x000002000066ebe2 : jb 0x2000066ec24 ; ret
0x0000020000673039 : jb 0x20000673033 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000673038 : jb 0x20000673034 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000067456a : jb 0x20000674504 ; ret
0x0000020000675ba3 : jb 0x20000675b76 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000675bf3 : jb 0x20000675bc7 ; jmp 0x20000675bae
0x000002000067aff2 : jb 0x2000067affb ; xor eax, eax ; ret
0x000002000067ea20 : jb 0x2000067ea33 ; or dword ptr [rip + 0x125eb], 0x10 ; ret
0x0000020000686a3a : jb 0x200006869ff ; jmp qword ptr [rbx]
0x0000020000686a3a : jb 0x20000686a00 ; jmp qword ptr [rbx]
0x00000200006f45cc : jb 0x200006f45c0 ; ret
0x00000200006f76df : jb 0x200006f769c ; ret
0x00000200007103d1 : jb 0x200007103c8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000712356 : jb 0x2000071230e ; ret
0x0000020000713ab2 : jb 0x20000713a8f ; ret
0x0000020000714632 : jb 0x2000071460a ; ret
0x0000020000714631 : jb 0x2000071460b ; ret
0x0000020000718488 : jb 0x200007184bf ; add rsp, 0x28 ; ret
0x000002000072f4c7 : jb 0x2000072f4a8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000f50e : jbe 0x2000000f529 ; mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x000002000000f50d : jbe 0x2000000f52a ; mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x0000020000010270 : jbe 0x200000102e0 ; popfq ; ret
0x00000200000115c4 : jbe 0x2000001160b ; ret 0xbb54
0x0000020000014b97 : jbe 0x20000014ba9 ; ret 0x2b84
0x0000020000014e0d : jbe 0x20000014de7 ; adc dword ptr [rbp + 0x4fc000cb], ecx ; ret
0x000002000001ee52 : jbe 0x2000001ee0f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000001ee51 : jbe 0x2000001ee10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000267a2 : jbe 0x2000002675d ; jmp 0x20000164fb5
0x000002000006b7cf : jbe 0x2000006b75e ; ret
0x00000200000b5636 : jbe 0x200000b5688 ; lea eax, dword ptr [rip + 0xabb42] ; ret
0x00000200000ccd81 : jbe 0x200000ccd9a ; xchg byte ptr [rax], bh ; add eax, dword ptr [rax] ; add bh, bh ; ret 0x5589
0x00000200000eb8ad : jbe 0x200000eb879 ; mov qword ptr [rcx + 0x168], rax ; ret
0x00000200000ed7b8 : jbe 0x200000ed746 ; ret 0xca8a
0x00000200000f43a2 : jbe 0x200000f43e8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010b6bc : jbe 0x2000010b6c9 ; add rsp, 0x28 ; ret
0x0000020000117dde : jbe 0x20000117d70 ; retf ; call 0x20000294005
0x0000020000117ddd : jbe 0x20000117d71 ; retf ; call 0x20000294006
0x0000020000117ddc : jbe 0x20000117d72 ; retf ; call 0x20000294007
0x0000020000117ddb : jbe 0x20000117d73 ; retf ; call 0x20000294008
0x000002000013cdb1 : jbe 0x2000013cda8 ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x000002000014140b : jbe 0x20000141423 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x0000020000141466 : jbe 0x20000141489 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x0000020000141486 : jbe 0x2000014149e ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000014452a : jbe 0x20000144535 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000014c9d4 : jbe 0x2000014c959 ; xor al, al ; ret
0x0000020000190225 : jbe 0x20000190240 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000f17cc : jbe 0x2000019f6ba ; ret
0x00000200001a9254 : jbe 0x200001a9255 ; dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret
0x000002000013970f : jbe 0x200001b840a ; xor eax, eax ; ret
0x00000200001c02bc : jbe 0x200001c02d7 ; add byte ptr [rax - 0x75], cl ; shr al, 1 ; std ; ret
0x00000200001c6270 : jbe 0x200001c627f ; mov eax, 1 ; ret
0x00000200001d1eac : jbe 0x200001d1e33 ; ret 0x4407
0x00000200001ec3a5 : jbe 0x200001ec3b4 ; mov eax, 1 ; ret
0x00000200001f8714 : jbe 0x200001f8723 ; mov eax, 1 ; ret
0x00000200001ff978 : jbe 0x200001ff984 ; mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000233e93 : jbe 0x20000233e82 ; add dword ptr [r9 + 0x14], edx ; xor eax, eax ; ret
0x000002000036c9ef : jbe 0x2000036c9de ; ret
0x00000200003d7c86 : jbe 0x200003d7c1d ; ret 0x4aff
0x00000200003e599a : jbe 0x200003e59a7 ; ret
0x00000200003f80a6 : jbe 0x200003f808d ; ret
0x000002000040cb16 : jbe 0x2000040cb63 ; ret 0x65ff
0x000002000043041d : jbe 0x20000430432 ; shr edi, 1 ; add edi, r14d ; jmp 0x200004303f1
0x000002000043a696 : jbe 0x2000043a699 ; ret 0xb8ff
0x0000020000442ac9 : jbe 0x20000442af5 ; add dh, dh ; ret
0x000002000045e05b : jbe 0x2000045e06e ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048c663 : jbe 0x2000048c679 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004dd0eb : jbe 0x200004dd113 ; call 0x200000ffb21
0x00000200004e0150 : jbe 0x200004e015a ; xor ecx, ecx ; call rax
0x00000200004f111b : jbe 0x200004f1126 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f111b : jbe 0x200004f1127 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000517f32 : jbe 0x20000517f41 ; mov eax, 1 ; ret
0x000002000051c076 : jbe 0x2000051c0d1 ; jrcxz 0x2000051c082 ; je 0x2000051c08a ; call 0x2000013e17d
0x000002000051d22e : jbe 0x2000051d245 ; mov eax, 1 ; ret
0x000002000051d596 : jbe 0x2000051d552 ; ret 0x4cff
0x000002000054b84c : jbe 0x2000054b83a ; push rsi ; ret
0x000002000041f585 : jbe 0x200005628c4 ; xor al, al ; ret
0x00000200005c8655 : jbe 0x200005c8668 ; test edx, edx ; sete cl ; mov eax, ecx ; ret
0x00000200005d36a5 : jbe 0x200005d36ae ; xor eax, eax ; ret
0x00000200005eaf05 : jbe 0x200005eaf18 ; lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x200005eaf2d
0x00000200005efb7a : jbe 0x200005efb89 ; mov eax, 0xc0000023 ; ret
0x00000200005efbba : jbe 0x200005efbc9 ; mov eax, 0xc000000d ; ret
0x00000200005fc350 : jbe 0x200005fc33c ; xor eax, eax ; ret
0x0000020000600487 : jbe 0x20000600496 ; mov eax, 1 ; ret
0x000002000064cc36 : jbe 0x2000064cc1f ; pushfq ; jmp qword ptr [rcx]
0x000002000065a33e : jbe 0x2000065a31c ; ret
0x0000020000664daf : jbe 0x20000664e26 ; add al, ch ; ret 0x48ff
0x0000020000664dae : jbe 0x20000664e27 ; add al, ch ; ret 0x48ff
0x0000020000666627 : jbe 0x200006665ef ; jmp qword ptr [rbx]
0x0000020000666626 : jbe 0x200006665f0 ; jmp qword ptr [rbx]
0x0000020000666f15 : jbe 0x20000666f21 ; mov qword ptr [rcx + 8], rax ; ret
0x00000200006685a3 : jbe 0x20000668532 ; ret 0x3949
0x0000020000674da6 : jbe 0x20000674daa ; ret 0x48ff
0x00000200006750ec : jbe 0x200006750fd ; mov dword ptr [rip + 0x1bfc0], eax ; ret
0x00000200006799e5 : jbe 0x200006799b6 ; jmp qword ptr [rcx]
0x00000200006869fa : jbe 0x20000686a70 ; ret 0x74ff
0x000002000070e845 : jbe 0x2000070e857 ; movzx eax, r8w ; ret
0x000002000000f90c : je 0x2000000f910 ; ret 0xa8b3
0x0000020000022f41 : je 0x20000022eeb ; pop rdx ; ret 0x594d
0x0000020000024947 : je 0x20000024975 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000024b3d : je 0x20000024b6b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000253b2 : je 0x200000253ca ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000026aa0 : je 0x20000026aab ; mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000026af6 : je 0x20000026b24 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000026daf : je 0x20000026ddd ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002715c : je 0x2000002718b ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000271b4 : je 0x200000271e2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000272f9 : je 0x20000027327 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002789f : je 0x200000278cd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002a96d : je 0x2000002a976 ; xor al, al ; ret
0x000002000002b514 : je 0x2000002b4cf ; add dword ptr [rax + rcx*8 - 0x75beb78c], eax ; ret 0x4db9
0x000002000002b7fc : je 0x2000002b82a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002c347 : je 0x2000002c375 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003013e : je 0x2000003014b ; add rsp, 0x28 ; ret
0x000002000003331c : je 0x200000332fd ; mov al, 1 ; ret
0x00000200000332f7 : je 0x20000033300 ; xor al, al ; ret
0x000002000003349f : je 0x200000334cd ; jo 0x200000334f3 ; add esp, 0x50 ; pop rbx ; ret
0x000002000003358f : je 0x200000335bd ; jo 0x200000335e3 ; add esp, 0x50 ; pop rbx ; ret
0x000002000003370e : je 0x2000003372a ; dec edx ; je 0x2000003373c ; mov rax, r8 ; ret
0x0000020000033712 : je 0x20000033738 ; mov rax, r8 ; ret
0x000002000003391b : je 0x20000033918 ; mov eax, 1 ; ret
0x0000020000033ff1 : je 0x2000003401f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000340f4 : je 0x20000034122 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000168c76 : je 0x2000003488d ; jmp 0x20000034eef
0x0000020000036430 : je 0x20000036435 ; ret
0x0000020000036417 : je 0x20000036445 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000364fe : je 0x2000003652c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000036a18 : je 0x20000036a46 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000036af6 : je 0x20000036b24 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038681 : je 0x20000038692 ; mov rdx, rax ; call 0x200000d497b
0x0000020000038866 : je 0x20000038894 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000038a54 : je 0x20000038a82 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038d7f : je 0x20000038dae ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000038ddc : je 0x20000038e0a ; js 0x20000038e30 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000039d8a : je 0x20000039db8 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003b2e1 : je 0x2000003b30f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003cb32 : je 0x2000003cb60 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003cc76 : je 0x2000003cca4 ; js 0x2000003ccca ; add esp, 0x50 ; pop rdi ; ret
0x000002000003df50 : je 0x2000003df7e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004a975 : je 0x2000004a9a3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004bd4d : je 0x2000004bd7b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004c466 : je 0x2000004c472 ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000053697 : je 0x200000536c5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000054ce3 : je 0x20000054cf4 ; cmp al, 2 ; je 0x20000054cf9 ; mov eax, ecx ; ret
0x0000020000054ce7 : je 0x20000054cf5 ; mov eax, ecx ; ret
0x0000020000059272 : je 0x20000059285 ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000005e2d5 : je 0x2000005e303 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005ed45 : je 0x2000005ed54 ; mov eax, 1 ; ret
0x0000020000175597 : je 0x2000006128a ; jmp 0x20000061851
0x0000020000069008 : je 0x20000069036 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000069069 : je 0x20000069097 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000069118 : je 0x20000069146 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000069179 : je 0x200000691a7 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006c8fa : je 0x2000006c50c ; jmp 0x20000178b95
0x000002000006fec4 : je 0x2000006fef2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000070028 : je 0x20000070056 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000070289 : je 0x200000702a0 ; xor al, al ; add rsp, 0x10 ; pop rbx ; ret
0x000002000007062e : je 0x2000007065d ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000073eeb : je 0x20000073f19 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000074ea6 : je 0x20000074ed4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000075061 : je 0x2000007508f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000082feb : je 0x20000082fdf ; xor al, al ; ret
0x0000020000085b51 : je 0x20000085b7f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000085dd6 : je 0x20000085e04 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000086a82 : je 0x20000086bd7 ; call rax
0x0000020000088e2e : je 0x20000088dfe ; xor eax, eax ; ret
0x0000020000088e55 : je 0x20000088e5a ; ret
0x0000020000088ef7 : je 0x20000088efc ; ret
0x0000020000088feb : je 0x20000088ff0 ; ret
0x000002000008b298 : je 0x2000008b2c6 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000008c750 : je 0x2000008c741 ; xor al, al ; ret
0x000002000008cb30 : je 0x2000008cb41 ; mov rcx, rdx ; call r9
0x000002000008decd : je 0x2000008ded7 ; add eax, dword ptr [rdx + 0x60] ; ret
0x000002000008e0cd : je 0x2000008e0f8 ; and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000008e553 : je 0x2000008e581 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000008e7d9 : je 0x2000008e7e1 ; mov eax, edx ; ret
0x000002000008e7d9 : je 0x2000008e7e2 ; mov eax, edx ; ret
0x0000020000090b5f : je 0x20000090b8d ; push 0x50c48348 ; pop rdi ; ret
0x0000020000093959 : je 0x20000093987 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000096228 : je 0x20000096256 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000966ff : je 0x2000009677d ; call rax
0x0000020000097123 : je 0x20000097151 ; push 0x40c48348 ; pop rdi ; ret
0x00000200000972f9 : je 0x20000097327 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000097423 : je 0x20000097451 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000990b8 : je 0x200000990cb ; mov qword ptr [rcx + 0x590], rdx ; ret
0x000002000009a2cd : je 0x2000009a2fb ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009a437 : je 0x2000009a465 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009b537 : je 0x2000009b545 ; cmp dword ptr [rax + 8], edx ; jne 0x2000009b546 ; ret
0x000002000009b527 : je 0x2000009b555 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009bbf8 : je 0x2000009bc26 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009d3a9 : je 0x2000009d3d8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009d47b : je 0x2000009d486 ; mov eax, dword ptr [rax + 8] ; ret
0x000002000009fabc : je 0x2000009fac1 ; ret
0x00000200000a347f : je 0x200000a34b0 ; mov eax, r8d ; ret
0x00000200000a351c : je 0x200000a354b ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000a499b : je 0x200000a49c9 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000a65bd : je 0x200000a65eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a73b9 : je 0x200000a73c8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a9109 : je 0x200000a9116 ; mov rax, rcx ; ret
0x00000200000a960d : je 0x200000a963b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000a96f2 : je 0x200000a9720 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000a9d55 : je 0x200000a9d83 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000aeca4 : je 0x200000aecd2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b21d2 : je 0x200000b2200 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b2869 : je 0x200000b2897 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b4933 : je 0x200000b4928 ; mov qword ptr [r8], r10 ; ret
0x00000200000b4f70 : je 0x200000b4f69 ; mov eax, 0xc000000d ; ret
0x00000200000b5972 : je 0x200000b597b ; mov eax, ecx ; ret
0x00000200000b5d73 : je 0x200000b5da1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b6366 : je 0x200000b6354 ; mov qword ptr [r8], r10 ; ret
0x00000200000b7001 : je 0x200000b702f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b7265 : je 0x200000b7293 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b7b08 : je 0x200000b7b36 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b83d6 : je 0x200000b8404 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b855b : je 0x200000b8589 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b8961 : je 0x200000b898f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b8bf2 : je 0x200000b8c20 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bc086 : je 0x200000bc0b4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000bc0b0 : je 0x200000bc0de ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000bc705 : je 0x200000bc733 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000bd1fd : je 0x200000bd22b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000c0089 : je 0x200000c0096 ; mov word ptr [rcx], r11w ; ret
0x00000200000c25b1 : je 0x200000c25df ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c28dd : je 0x200000c2864 ; jmp 0x200000c28a7
0x00000200000c2d45 : je 0x200000c2d73 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c3a5d : je 0x200000c3a8b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c4516 : je 0x200000c4544 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c46a1 : je 0x200000c46cf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c5995 : je 0x200000c59c0 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000c59fb : je 0x200000c5a10 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c5a67 : je 0x200000c5a95 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c95ae : je 0x200000c95b7 ; mov al, 1 ; ret
0x00000200000c9e0d : je 0x200000c9e3b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000cabfd : je 0x200000cac2b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000cf730 : je 0x200000cf75e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000d0250 : je 0x200000d027e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d0bbe : je 0x200000d0bcf ; ret
0x00000200000d0c09 : je 0x200000d0c1a ; mov rax, qword ptr [r9 + 0x38] ; mov byte ptr [rax], cl ; ret
0x00000200000d102c : je 0x200000d105a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d2b85 : je 0x200000d2bb3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d3fd6 : je 0x200000d4004 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d49f1 : je 0x200000d4a1f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d4f9a : je 0x200000d4fad ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200000d50c0 : je 0x200000d50ee ; jo 0x200000d5114 ; add esp, 0x50 ; pop rdi ; ret
0x00000200000d567e : je 0x200000d56ac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d831f : je 0x200000d8332 ; sub qword ptr [rip + 0x1ddd50], rdx ; ret
0x00000200000d8a2f : je 0x200000d8a5d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000d8fd2 : je 0x200000d9001 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000dae3e : je 0x200000dae6c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000dc009 : je 0x200000dc016 ; add rsp, 0x28 ; ret
0x00000200000dcca7 : je 0x200000dccd5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000dcd68 : je 0x200000dcd77 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dcff3 : je 0x200000dd000 ; mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200000dd098 : je 0x200000dd0c6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000dd5bd : je 0x200000dd5eb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dda3b : je 0x200000dda69 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dde3f : je 0x200000dde6d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000df614 : je 0x200000df642 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e19cb : je 0x200000e19d0 ; ret
0x00000200000e1d4a : je 0x200000e1d78 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e1e89 : je 0x200000e1e4e ; jmp 0x200000e1e82
0x00000200000e2001 : je 0x200000e200e ; mov word ptr [rcx], r11w ; ret
0x00000200000e2e62 : je 0x200000e2e6c ; mov dword ptr [r8], r9d ; ret
0x00000200000e35dd : je 0x200000e3607 ; jo 0x200000e3570 ; ret
0x00000200000e3f30 : je 0x200000e3f5e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e3fe3 : je 0x200000e4011 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000e4114 : je 0x200000e4142 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000e438b : je 0x200000e43b9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e4720 : je 0x200000e477e ; add dh, al ; add byte ptr [rax], al ; jmp 0x200000e46f2
0x00000200000e4b44 : je 0x200000e4b72 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e55ff : je 0x200000e562d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e5723 : je 0x200000e5751 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e5813 : je 0x200000e5841 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e5ce1 : je 0x200000e5cce ; mov al, 1 ; ret
0x00000200000e5dc9 : je 0x200000e5df7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e77d6 : je 0x200000e7804 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7fb2 : je 0x200000e7fe1 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000ead16 : je 0x200000ead12 ; mov rax, qword ptr [rax + 8] ; ret
0x00000200000eaceb : je 0x200000ead19 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000eb3f0 : je 0x200000eb41e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000eb40e : je 0x200000eb43c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ebc5a : je 0x200000ebc12 ; mov eax, r10d ; jmp 0x200000ebc12
0x00000200000ec0e7 : je 0x200000ec116 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ec704 : je 0x200000ec72f ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000ecbde : je 0x200000ecc0c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ed91e : je 0x200000ed94c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ef5c9 : je 0x200000ef5f7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f0644 : je 0x200000f0672 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f2179 : je 0x200000f21a7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f21ee : je 0x200000f221c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f23bd : je 0x200000f23ec ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f29a9 : je 0x200000f29d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f3d3d : je 0x200000f3cda ; jmp 0x2000019fff5
0x00000200000f5832 : je 0x200000f5860 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f587e : je 0x200000f5871 ; mov eax, 2 ; ret
0x00000200000f5861 : je 0x200000f5889 ; dec eax ; cmp eax, 2 ; jl 0x200000f5874 ; ret
0x00000200000f5b09 : je 0x200000f5a8e ; jmp 0x200000f5ad3
0x00000200000f5bc7 : je 0x200000f5bf5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f6aba : je 0x200000f6ae8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f6cd0 : je 0x200000f6cfe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f6eed : je 0x200000f6f1b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7122 : je 0x200000f7150 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f8803 : je 0x200000f8831 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f8e69 : je 0x200000f8e77 ; mov eax, 1 ; ret
0x00000200000f9086 : je 0x200000f90b4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f92f0 : je 0x200000f92e6 ; jmp 0x200000f92ba
0x00000200000f9490 : je 0x200000f94be ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000fa0a4 : je 0x200000fa0d2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000faaf3 : je 0x200000fab21 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000facb6 : je 0x200000face4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000fb620 : je 0x200000fb64e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fb6dc : je 0x200000fb70a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fb899 : je 0x200000fb8c7 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200000fc50f : je 0x200000fc53e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000fd010 : je 0x200000fd03e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fd315 : je 0x200000fd328 ; movzx eax, al ; mov cr8, rax ; ret
0x00000200000fdc12 : je 0x200000fdbdb ; call 0x1ffc311002a
0x00000200000fdc11 : je 0x200000fdbdc ; call 0x1ffc311002b
0x00000200000fe27d : je 0x200000fe2ab ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fee20 : je 0x200000fee4e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ffbb3 : je 0x200000ffbbe ; mov dword ptr [rcx + 0x2c], edx ; ret
0x0000020000100131 : je 0x2000010015f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010286c : je 0x2000010289a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000102960 : je 0x2000010298e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001029ed : je 0x20000102a1b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001032e7 : je 0x200001032f4 ; mov rax, qword ptr [rax + 0x40] ; ret
0x00000200001037f9 : je 0x20000103827 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000104155 : je 0x20000104183 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001058af : je 0x200001058be ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000106481 : je 0x20000106490 ; mov eax, edx ; ret
0x0000020000106481 : je 0x20000106491 ; mov eax, edx ; ret
0x00000200001078e1 : je 0x2000010790f ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000107a05 : je 0x20000107a33 ; js 0x20000107a59 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000107b88 : je 0x20000107bb7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001089f0 : je 0x20000108a1e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000108b45 : je 0x20000108b73 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000109aa8 : je 0x20000109ab7 ; mov eax, 1 ; ret
0x0000020000109d14 : je 0x20000109d42 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010a3a7 : je 0x2000010a3b4 ; add rsp, 0x28 ; ret
0x000002000010a3dc : je 0x2000010a3ef ; dec ecx ; jne 0x2000010a3f5 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000010a3fb : je 0x2000010a41d ; dec ecx ; jne 0x2000010a41a ; lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000010ad65 : je 0x2000010ad93 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000010af49 : je 0x2000010af77 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000010afde : je 0x2000010b00c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000010ba13 : je 0x2000010ba20 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000010bfdd : je 0x2000010c007 ; js 0x2000010bf70 ; ret
0x000002000010c00a : je 0x2000010c01c ; mov qword ptr [rax + 0x670], rdx ; ret
0x000002000010cf4f : je 0x2000010cf7d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010cfe5 : je 0x2000010d013 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010d10a : je 0x2000010d113 ; mov al, 1 ; ret
0x000002000010d6de : je 0x2000010d6f0 ; cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x000002000010ed2b : je 0x2000010ed59 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010fb58 : je 0x2000010fb5a ; and qword ptr [rcx], 0 ; ret
0x000002000010fb4c : je 0x2000010fb5c ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000010fd6d : je 0x2000010fd9c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000110f51 : je 0x20000110f7f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011105d : je 0x2000011108b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001138b1 : je 0x200001138df ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001146da : je 0x20000114708 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000115038 : je 0x20000115066 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001152ca : je 0x200001152d6 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x000002000011879f : je 0x200001187cd ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000119699 : je 0x200001196c7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011a54a : je 0x2000011a579 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000011a9be : je 0x2000011a9cf ; mov eax, dword ptr [rip + 0x2368c2] ; ret
0x000002000011b550 : je 0x2000011b57e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000011baf2 : je 0x2000011bb0e ; lea rcx, qword ptr [rip + 0x11f3d] ; call rax
0x000002000011bef9 : je 0x2000011bf24 ; sub byte ptr [rcx - 0x75], al ; ret
0x000002000011c22d : je 0x2000011c258 ; sub byte ptr [rcx - 0x75], al ; ret
0x000002000011ca32 : je 0x2000011ca60 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011d7f3 : je 0x2000011d821 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011e54b : je 0x2000011e579 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011e941 : je 0x2000011e96f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011ee5a : je 0x2000011ee67 ; add rsp, 0x28 ; ret
0x000002000011ee82 : je 0x2000011ee94 ; mov qword ptr [rcx], 0 ; ret
0x000002000011f2f7 : je 0x2000011f326 ; push 0x40c48348 ; pop r15 ; ret
0x0000020000120c34 : je 0x20000120c62 ; cmp al, 0x3b ; int1 ; jb 0x20000120c88 ; inc edx ; jmp 0x20000120c22
0x0000020000121a00 : je 0x20000121a2f ; jo 0x20000121a55 ; add esp, 0x50 ; pop r12 ; ret
0x0000020000121e86 : je 0x20000121eb4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000121f94 : je 0x20000121fc2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000122296 : je 0x200001222c4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000122508 : je 0x20000122536 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000122ae8 : je 0x20000122b16 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000122be8 : je 0x20000122c16 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000122e1c : je 0x20000122e4a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012302f : je 0x20000123041 ; mov ecx, dword ptr [rip + 0x182bbd] ; call rax
0x0000020000123043 : je 0x20000123055 ; mov ecx, dword ptr [rip + 0x182bad] ; call rax
0x0000020000123308 : je 0x20000123336 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000123464 : je 0x20000123492 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001238b2 : je 0x200001238e0 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000123ff3 : je 0x20000124021 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001245b9 : je 0x200001245e7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001245e1 : je 0x200001245ed ; xor edx, edx ; call r8
0x0000020000124609 : je 0x2000012460f ; call rdx
0x0000020000124fb2 : je 0x20000124fe0 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001251b4 : je 0x200001251e2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000126b77 : je 0x20000126ba2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000126e7f : je 0x20000126ead ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001292e9 : je 0x20000129317 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000129b24 : je 0x20000129b29 ; ret
0x000002000012a761 : je 0x2000012a78f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012afef : je 0x2000012affe ; add byte ptr [rsi - 1], ah ; ret 0xf44
0x000002000012bad9 : je 0x2000012bb1e ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000012de75 : je 0x2000012dea3 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012df11 : je 0x2000012df11 ; mov eax, 1 ; ret
0x000002000012df08 : je 0x2000012df11 ; xor eax, eax ; ret
0x000002000012df45 : je 0x2000012df56 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012e079 : je 0x2000012e08c ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000012e203 : je 0x2000012e20b ; jmp r8
0x000002000012ed08 : je 0x2000012ed10 ; inc eax ; ret
0x000002000012ed20 : je 0x2000012ed28 ; inc eax ; ret
0x000002000012efe7 : je 0x2000012f015 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012f622 : je 0x2000012f650 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012fff0 : je 0x2000013001e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000130156 : je 0x2000013015c ; call rcx
0x0000020000130302 : je 0x20000130359 ; add rsi, 8 ; jmp 0x200001302d4
0x0000020000130511 : je 0x2000013053f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b5de9 : je 0x20000131614 ; call rdx
0x00000200001319f6 : je 0x20000131a07 ; mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x0000020000131d9c : je 0x20000131da6 ; xor ecx, ecx ; call rdx
0x00000200001330aa : je 0x200001330d8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001332a2 : je 0x200001332d0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000135097 : je 0x200001350c2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001360db : je 0x20000136109 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001378be : je 0x200001378ec ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000137d2f : je 0x20000137dac ; mov ecx, 1 ; call 0x20000294009
0x000002000013a64d : je 0x2000013a666 ; call rcx
0x000002000013c259 : je 0x2000013c287 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013d9b3 : je 0x2000013d9e2 ; push 0x40c48348 ; pop r15 ; ret
0x000002000013e280 : je 0x2000013e286 ; call rax
0x000002000013e876 : je 0x2000013e8a4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013ee0c : je 0x2000013ee3a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013f138 : je 0x2000013f166 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000013f834 : je 0x2000013f862 ; mov rcx, qword ptr [rbx + 0xa0] ; call rax
0x000002000013fe7b : je 0x2000013fe8a ; test dh, dh ; jne 0x2000013fe12 ; xor rax, rax ; ret
0x00000200001405f4 : je 0x200001405cf ; sub r8d, ecx ; mov eax, r8d ; ret
0x000002000014066a : je 0x20000140640 ; sub r9d, ecx ; mov eax, r9d ; ret
0x00000200001410e6 : je 0x20000141114 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001418ef : je 0x200001418fd ; test dh, dh ; jne 0x20000141888 ; xor eax, eax ; ret
0x0000020000141fb4 : je 0x20000141fa8 ; test eax, eax ; jns 0x20000141fc7 ; or eax, 0xffffffff ; ret
0x0000020000143510 : je 0x2000014353e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001443d2 : je 0x20000144400 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001444dd : je 0x2000014450b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014469a : je 0x200001446c8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001447bd : je 0x200001447eb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000144a81 : je 0x20000144aaf ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000145284 : je 0x200001452b2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001464c2 : je 0x200001464f0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000146597 : je 0x200001465c5 ; js 0x200001465eb ; add esp, 0x60 ; pop rdi ; ret
0x00000200001465e8 : je 0x20000146616 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000147078 : je 0x20000147085 ; or dword ptr [r8], 0xffffffff ; ret
0x0000020000149066 : je 0x20000149094 ; js 0x200001490ba ; add esp, 0x50 ; pop rdi ; ret
0x000002000014ab03 : je 0x2000014aad4 ; and bh, bh ; ret 0x3b41
0x000002000014af94 : je 0x2000014afc2 ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000014ca77 : je 0x2000014caa5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001777e0 : je 0x200001777e6 ; call rax
0x0000020000074d42 : je 0x2000017c86e ; xor eax, eax ; ret
0x00000200001841a1 : je 0x200001841ac ; or rax, r10 ; jmp 0x200001841af
0x00000200001841c9 : je 0x200001841d4 ; or rax, r10 ; jmp 0x200001841d7
0x000002000008ee6f : je 0x20000184560 ; ret
0x00000200000b41a7 : je 0x2000018ea86 ; xor eax, eax ; ret
0x00000200000d0410 : je 0x20000196df0 ; xor al, al ; ret
0x0000020000198dad : je 0x20000198dc5 ; mov ecx, r14d ; call 0x200001c4fd7
0x0000020000198dac : je 0x20000198dc6 ; mov ecx, r14d ; call 0x200001c4fd8
0x00000200000f4421 : je 0x200001a01a6 ; xor eax, eax ; ret
0x0000020000106038 : je 0x200001a5bd8 ; ret
0x000002000011b563 : je 0x200001ac208 ; ret
0x00000200001b5dc4 : je 0x200001b5dd9 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x0000020000134944 : je 0x200001b6786 ; mov ecx, edi ; call rax
0x0000020000139cef : je 0x200001b86a8 ; ret
0x00000200001bb6f8 : je 0x200001bb702 ; xor edx, edx ; mov rax, rdx ; ret
0x00000200001bb6f8 : je 0x200001bb703 ; xor edx, edx ; mov rax, rdx ; ret
0x00000200001bb7f7 : je 0x200001bb825 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bbc45 : je 0x200001bbc73 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bbcda : je 0x200001bbd08 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bc04a : je 0x200001bc078 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bc879 : je 0x200001bc888 ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x00000200001bcbdd : je 0x200001bcc07 ; jo 0x200001bcb70 ; ret
0x00000200001bde9f : je 0x200001bdecd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001be9bd : je 0x200001be9ec ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001bf2b6 : je 0x200001bf2e1 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001c18de : je 0x200001c18ea ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001c18e9 : je 0x200001c18f5 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001c230a : je 0x200001c2338 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001c28a8 : je 0x200001c28b2 ; mov dl, 1 ; mov al, dl ; ret
0x00000200001c3ceb : je 0x200001c3d19 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c4dd1 : je 0x200001c4dd7 ; call rdx
0x00000200001c665e : je 0x200001c6666 ; call rax
0x00000200001c785b : je 0x200001c7863 ; call r9
0x00000200001ca184 : je 0x200001ca1b2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001caca6 : je 0x200001cacd1 ; and byte ptr [rax + 0x69], cl ; ret 0x201
0x00000200001cbd2f : je 0x200001cbd35 ; call rcx
0x00000200001cbd52 : je 0x200001cbd58 ; call rcx
0x00000200001cbd73 : je 0x200001cbd79 ; call rax
0x00000200001cbd8f : je 0x200001cbd97 ; jmp rcx
0x00000200001cbdaf : je 0x200001cbdb5 ; call rax
0x00000200001cbdde : je 0x200001cbde6 ; jmp rcx
0x00000200001cbe02 : je 0x200001cbe0a ; jmp rdx
0x00000200001cbe2a : je 0x200001cbe30 ; call rax
0x00000200001cbe4e : je 0x200001cbe54 ; call rcx
0x00000200001cbe6b : je 0x200001cbe73 ; jmp rcx
0x00000200001cbe8b : je 0x200001cbe91 ; call rax
0x00000200001cbea7 : je 0x200001cbeaf ; jmp rdx
0x00000200001cc45d : je 0x200001cc48b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cd07e : je 0x200001cd0ac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cd303 : je 0x200001cd331 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cda5d : je 0x200001cda8b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001cdb38 : je 0x200001cdb67 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cdbad : je 0x200001cdbdb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cdcb4 : je 0x200001cdc99 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cddf0 : je 0x200001cde1f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cde7b : je 0x200001cdea9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ce6a7 : je 0x200001ce6d5 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cec53 : je 0x200001cec81 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cefe6 : je 0x200001cf014 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cf84f : je 0x200001cf87d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d0e90 : je 0x200001d0ebe ; js 0x200001d0ee4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001d0f0d : je 0x200001d0f3b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d1245 : je 0x200001d1270 ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200001d19e6 : je 0x200001d1a14 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d2358 : je 0x200001d2386 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d3d56 : je 0x200001d3d65 ; add rcx, -0x10 ; mov rax, rcx ; ret
0x00000200001d4cec : je 0x200001d4d1a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d5392 : je 0x200001d53c0 ; push 0x40c48348 ; pop rdi ; ret
0x00000200001d619b : je 0x200001d61ef ; mov rcx, qword ptr [rcx + 0x2988] ; call rax
0x00000200001d646e : je 0x200001d649c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d6997 : je 0x200001d69c5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d6dce : je 0x200001d6ddd ; mov eax, 0xc0000354 ; ret
0x00000200001d6e16 : je 0x200001d6e26 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d70ff : je 0x200001d712d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d71f5 : je 0x200001d7223 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d7771 : je 0x200001d779f ; pop rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200001d8028 : je 0x200001d8038 ; mov ecx, 8 ; mov eax, ecx ; ret
0x00000200001d896f : je 0x200001d897e ; mov eax, 0xc0000225 ; ret
0x00000200001d90d0 : je 0x200001d90fe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d9532 : je 0x200001d953d ; mov eax, r9d ; ret
0x00000200001db23c : je 0x200001db26a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001db576 : je 0x200001db5a0 ; jo 0x200001db509 ; ret
0x00000200001dc3e1 : je 0x200001dc40f ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001dc4b4 : je 0x200001dc4e2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dc611 : je 0x200001dc63f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dce28 : je 0x200001dce56 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dceb0 : je 0x200001dcede ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ddf82 : je 0x200001ddfb0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001de2bc : je 0x200001de2ea ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001df88c : je 0x200001df8ba ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e018e : je 0x200001e01bc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e0304 : je 0x200001e0332 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e033b : je 0x200001e034f ; mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x00000200001e03b6 : je 0x200001e03e4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e0c37 : je 0x200001e0c61 ; jo 0x200001e0bca ; ret
0x00000200001e0cbc : je 0x200001e0cea ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e3ac7 : je 0x200001e3af5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e4e5a : je 0x200001e4e88 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e5dc2 : je 0x200001e5df0 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001e6b6b : je 0x200001e6b99 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e6e25 : je 0x200001e6e53 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e70ef : je 0x200001e710a ; xor edx, edx ; mov rcx, rsi ; call 0x200000b3331
0x00000200001e8aff : je 0x200001e8b2d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ea205 : je 0x200001ea233 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ec07c : je 0x200001ec0aa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ed6b2 : je 0x200001ed6e0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f0557 : je 0x200001f0585 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001f17bd : je 0x200001f17eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f1ceb : je 0x200001f1d19 ; jo 0x200001f1d3f ; add esp, 0x50 ; pop rdi ; ret
0x00000200001f2c51 : je 0x200001f2c62 ; inc dword ptr [rax + 0x1f28] ; ret
0x00000200001f3176 : je 0x200001f31a4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f327f : je 0x200001f328e ; mov eax, 1 ; ret
0x00000200001f6594 : je 0x200001f65c2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001f75de : je 0x200001f760c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f7d96 : je 0x200001f7dc4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f91b5 : je 0x200001f91e3 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001f99a0 : je 0x200001f99b0 ; call 0x20000114701
0x00000200001f99b7 : je 0x200001f99c7 ; call 0x200001f96ad
0x00000200001fa9a3 : je 0x200001fa9d1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fb37a : je 0x200001fb3a8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fb7b4 : je 0x200001fb7e2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fbd59 : je 0x200001fbd87 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001fd470 : je 0x200001fd49e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fd55a : je 0x200001fd588 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fdddd : je 0x200001fde0b ; push 0x50c48348 ; pop rdi ; ret
0x00000200001fef0b : je 0x200001fef26 ; mov rdx, rdi ; call rax
0x0000020000200a81 : je 0x20000200aaf ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000200b59 : je 0x20000200b87 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000200f45 : je 0x20000200f16 ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x0000020000205e3f : je 0x20000205e6d ; jo 0x20000205e93 ; add esp, 0x50 ; pop rdi ; ret
0x00000200002063c5 : je 0x200002063d3 ; add byte ptr [rax], al ; dec dword ptr [rcx - 0x75] ; ret 0x83c7
0x0000020000206ada : je 0x20000206b08 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000207135 : je 0x20000207148 ; mov rcx, r14 ; call 0x200002333af
0x000002000020730e : je 0x20000207317 ; xor al, al ; ret
0x000002000020731e : je 0x20000207321 ; cmp ecx, 1 ; setle al ; ret
0x00000200002074a6 : je 0x200002074b5 ; mov eax, 1 ; ret
0x000002000020756c : je 0x2000020757b ; ret 0x1a8
0x000002000020756b : je 0x2000020757c ; ret 0x1a8
0x0000020000208c48 : je 0x20000208c73 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000209f88 : je 0x20000209f91 ; xor al, al ; ret
0x000002000020a2c1 : je 0x2000020a2ef ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a469 : je 0x2000020a497 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a524 : je 0x2000020a552 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a7ad : je 0x2000020a7db ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a89b : je 0x2000020a8c9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a953 : je 0x2000020a907 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000020b73d : je 0x2000020b726 ; xor al, al ; ret
0x000002000020d6d5 : je 0x2000020d6e6 ; inc rdi ; inc rdx ; jmp 0x2000020d713
0x000002000021024e : je 0x2000021027c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002132bb : je 0x200002132e6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000213311 : je 0x2000021333c ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000214561 : je 0x2000021458f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021508f : je 0x200002150ba ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000215386 : je 0x200002153b4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021543e : je 0x2000021546c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000215a55 : je 0x20000215a83 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002171a9 : je 0x200002171d3 ; xor al, 0xff ; ret
0x0000020000217504 : je 0x2000021752e ; jo 0x20000217497 ; ret
0x000002000021858c : je 0x200002185ba ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002194cd : je 0x200002194dc ; call 0x200000bd0e8
0x00000200002198d9 : je 0x200002198e3 ; mov dword ptr [rcx], r10d ; ret
0x000002000021e3ff : je 0x2000021e42e ; push 0x247c8b48 ; js 0x2000021e39c ; ret
0x000002000022380b : je 0x20000223839 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000224b5f : je 0x20000224b8d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022738c : je 0x200002273ba ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022788e : je 0x200002278bc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000229598 : je 0x200002295a7 ; mov eax, 0x30 ; ret
0x0000020000229b6d : je 0x20000229b9c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022a4bc : je 0x2000022a4ea ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000022ac5f : je 0x2000022ac8d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022b642 : je 0x2000022b670 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022ba63 : je 0x2000022ba91 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022c330 : je 0x2000022c35b ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000022c457 : je 0x2000022c485 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022d844 : je 0x2000022d844 ; rol byte ptr [rcx + 0x22], 1 ; rol dword ptr [rcx + 0x22], cl ; ret
0x000002000022d843 : je 0x2000022d845 ; rol byte ptr [rcx + 0x22], 1 ; rol dword ptr [rcx + 0x22], cl ; ret
0x000002000022dea4 : je 0x2000022ded2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022e209 : je 0x2000022e237 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000023000b : je 0x20000230039 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000023037c : je 0x200002303aa ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000232ce0 : je 0x20000232d0e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000232d54 : je 0x20000232d82 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000233d06 : je 0x20000233d34 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000234077 : je 0x200002340a5 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200002350cd : je 0x200002350fb ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002356dd : je 0x20000235707 ; and al, ch ; ret
0x0000020000235ac2 : je 0x20000235acf ; mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x00000200002384c7 : je 0x200002384f5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000239985 : je 0x200002399b3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000025d34c : je 0x2000025d3c1 ; add al, r12b ; push 0x46 ; add byte ptr [rax], ch ; ret
0x0000020000366b42 : je 0x20000366b70 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000366ea7 : je 0x20000366ed5 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003683b9 : je 0x200003683c3 ; mov al, r10b ; ret
0x00000200003683b9 : je 0x200003683c4 ; mov al, r10b ; ret
0x00000200003693be : je 0x200003693ec ; jo 0x20000369412 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000369714 : je 0x2000036970f ; ret
0x0000020000372c25 : je 0x2000036a304 ; call rcx
0x000002000036a8fc : je 0x2000036a92a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036b021 : je 0x2000036b04f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036b82e : je 0x2000036b85c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000036b9c3 : je 0x2000036b9d0 ; add rsp, 0x28 ; ret
0x000002000036c6bc : je 0x2000036c6ea ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036c797 : je 0x2000036c7c2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000036c91a : je 0x2000036c91f ; ret
0x000002000036cb01 : je 0x2000036cb2f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000036d2d1 : je 0x2000036d2ff ; js 0x2000036d325 ; add esp, 0x50 ; pop rbp ; ret
0x000002000036d668 : je 0x2000036d696 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036eb73 : je 0x2000036eba1 ; jo 0x2000036ebc7 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003705d4 : je 0x200003705d9 ; ret
0x0000020000369830 : je 0x20000372882 ; ret
0x0000020000369938 : je 0x200003728ed ; ret
0x0000020000372937 : je 0x2000037293c ; push rsi ; ret
0x0000020000372f04 : je 0x20000372f1b ; mov rcx, r15 ; call rax
0x000002000036daed : je 0x20000374986 ; mov al, 1 ; ret
0x0000020000375298 : je 0x200003752c6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037570b : je 0x2000037573a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000376107 : je 0x20000376135 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000378bbf : je 0x20000378bed ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000379542 : je 0x20000379570 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000379a9a : je 0x20000379aad ; lea rax, qword ptr [rip - 0x9073] ; ret
0x000002000037a624 : je 0x2000037a62a ; call rcx
0x000002000037a62f : je 0x2000037a65d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000037a95e : je 0x2000037a96c ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x000002000037d2c2 : je 0x2000037d2f0 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000037d66d : je 0x2000037d698 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000037e7c3 : je 0x2000037e7f1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037eb1f : je 0x2000037eb4d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037ee16 : je 0x2000037ee44 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037f3bd : je 0x2000037f3c7 ; add dword ptr [rcx], r11d ; ret
0x000002000037f448 : je 0x2000037f454 ; add dword ptr [rcx + 0x40], r11d ; ret
0x000002000037f4cf : je 0x2000037f4fd ; push 0x50c48348 ; pop rdi ; ret
0x000002000038102f : je 0x2000038105d ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000381708 : je 0x20000381736 ; js 0x2000038175c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000382511 : je 0x2000038253b ; jo 0x200003824a4 ; ret
0x0000020000382631 : je 0x2000038265f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000383858 : je 0x20000383886 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000388569 : je 0x20000388597 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000388609 : je 0x20000388637 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000388838 : je 0x20000388866 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000038abe5 : je 0x2000038ac14 ; js 0x2000038ac3a ; add esp, 0x50 ; pop r15 ; ret
0x000002000038ac80 : je 0x2000038acae ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000038ac9a : je 0x2000038acb7 ; call rax
0x000002000038b3b9 : je 0x2000038b3e7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000038bc4e : je 0x2000038bc7c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000535639 : je 0x2000038d294 ; mov rcx, rdi ; call rax
0x000002000038e926 : je 0x2000038e8eb ; jmp 0x2000038e8c7
0x000002000039bcd5 : je 0x2000039bd03 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a209b : je 0x200003a20c9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a4384 : je 0x200003a43b2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a805a : je 0x200003a8088 ; jo 0x200003a80ae ; add esp, 0x50 ; pop rdi ; ret
0x00000200003ac910 : je 0x200003ac8d7 ; add rax, r10 ; jmp 0x200003ac8da
0x00000200003ac8fe : je 0x200003ac921 ; add rax, r10 ; jmp 0x200003ac943
0x00000200003ac8f1 : je 0x200003ac926 ; add rax, r10 ; jmp 0x200003ac8cd
0x00000200003ac930 : je 0x200003ac93b ; add rax, r10 ; jmp 0x200003ac8bf
0x000002000047a543 : je 0x200003acfb4 ; xor al, al ; ret
0x00000200003adbd1 : je 0x200003adbfb ; and bh, bh ; ret
0x00000200003ae0aa : je 0x200003ae0d8 ; jo 0x200003ae0fe ; add esp, 0x50 ; pop rdi ; ret
0x00000200003b0508 : je 0x200003b05e1 ; mov rcx, r14 ; call rax
0x00000200003b101e : je 0x200003b104c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b2de6 : je 0x200003b2e5d ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x00000200003b3ce5 : je 0x200003b3d13 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003be268 : je 0x200003be272 ; call rax
0x0000020000545bd0 : je 0x200003c202f ; jmp 0x200003c1edb
0x00000200003c347d : je 0x200003c34ab ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c725c : je 0x200003c7266 ; call r10
0x00000200003d2ee3 : je 0x200003d2f11 ; jo 0x200003d2f37 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003d795f : je 0x200003d796e ; mov eax, 1 ; ret
0x00000200003d9d1b : je 0x200003d9d49 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e3ed9 : je 0x200003e3ee9 ; mov rcx, r14 ; call r15
0x00000200003e654e : je 0x200003e652f ; xor al, al ; ret
0x00000200003e6544 : je 0x200003e654e ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200003e6805 : je 0x200003e6790 ; jmp 0x20000552a48
0x00000200003e6804 : je 0x200003e6791 ; jmp 0x20000552a49
0x00000200003e782c : je 0x200003e785a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ed18f : je 0x200003ed1bd ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003eed38 : je 0x200003eed45 ; add rax, 0x10 ; ret
0x00000200003ef6ec : je 0x200003ef6f4 ; call r8
0x00000200003ef72b : je 0x200003ef759 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f268c : je 0x200003f262b ; mov eax, 0xc0000022 ; ret
0x00000200003f947e : je 0x200003f94ac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fc565 : je 0x200003fc576 ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200003fc73e : je 0x200003fc74a ; mov rcx, rsi ; call rdx
0x00000200003fd107 : je 0x200003fd136 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003fdc6b : je 0x200003fdc99 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003fdfea : je 0x200003fe018 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ff41f : je 0x200003ff44d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003ff506 : je 0x200003ff534 ; jo 0x200003ff55a ; add esp, 0x50 ; pop rdi ; ret
0x0000020000401d2a : je 0x20000401d55 ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000401db1 : je 0x20000401d9f ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000402b3e : je 0x20000402b57 ; dec ecx ; jne 0x20000402b5d ; lea eax, dword ptr [rcx + 5] ; ret
0x0000020000404048 : je 0x20000404035 ; sub edx, r8d ; mov eax, edx ; jmp 0x2000040400d
0x0000020000404157 : je 0x20000404185 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000405075 : je 0x200004050a4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004070bb : je 0x200004070e9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000408232 : je 0x2000040825c ; js 0x200004081c5 ; ret 0x8348
0x000002000040a207 : je 0x2000040a235 ; jo 0x2000040a25b ; add esp, 0x50 ; pop rdi ; ret
0x000002000040ed93 : je 0x2000040eda6 ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000040f3b2 : je 0x2000040f3e1 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000041004b : je 0x200004100a2 ; mov rcx, rdi ; call 0x20000031498
0x0000020000410091 : je 0x200004100bf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004106bb : je 0x200004106e9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004107aa : je 0x200004107d8 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000410fa7 : je 0x20000410fd6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004115e0 : je 0x2000041160e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000412775 : je 0x200004127a3 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000413001 : je 0x2000041302f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004153d1 : je 0x20000415400 ; js 0x20000415426 ; add esp, 0x50 ; pop r15 ; ret
0x000002000041552d : je 0x20000415557 ; jo 0x200004154c0 ; ret
0x0000020000419d02 : je 0x20000419d11 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041cc6b : je 0x2000041cc99 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000041e4c4 : je 0x2000041e4ef ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000041f558 : je 0x2000041f586 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004200b6 : je 0x200004200e4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004207bd : je 0x200004207eb ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000421047 : je 0x20000421075 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042253f : je 0x2000042256d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004226bb : je 0x200004226e9 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000422834 : je 0x20000422862 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000422c06 : je 0x20000422c34 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000422dd4 : je 0x20000422dfe ; jo 0x20000422d67 ; ret
0x0000020000423e7a : je 0x20000423e90 ; mov rcx, r10 ; call 0x20000520187
0x00000200004245ed : je 0x2000042461c ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000426d85 : je 0x20000426db4 ; push 0x247c8b48 ; jo 0x20000426d21 ; ret
0x0000020000427e6d : je 0x20000427e9b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004288d6 : je 0x20000428900 ; jo 0x20000428950 ; ret
0x0000020000428aa8 : je 0x20000428ad7 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000429062 : je 0x20000429090 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042a5ee : je 0x2000042a61c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042aa85 : je 0x2000042aab4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042ad3f : je 0x2000042ad6d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042afdd : je 0x2000042afce ; mov al, 1 ; ret
0x000002000042bb71 : je 0x2000042bb80 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042bbc3 : je 0x2000042bbf1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042d725 : je 0x2000042d753 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042e8ca : je 0x2000042e8f8 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043112a : je 0x20000431133 ; xor al, al ; ret
0x0000020000431de0 : je 0x20000431d6e ; ret
0x00000200004320f7 : je 0x20000432125 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004322c6 : je 0x200004322f5 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000433fb2 : je 0x20000433fdd ; cmp byte ptr [rax + 0x2b], cl ; ret 0x8948
0x0000020000434acd : je 0x20000434afb ; js 0x20000434b21 ; add esp, 0x60 ; pop rdi ; ret
0x000002000043627a : je 0x200004362a4 ; jo 0x2000043620d ; ret
0x00000200004370ca : je 0x200004370db ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000437126 : je 0x20000437133 ; add rsp, 0x28 ; ret
0x0000020000438bee : je 0x20000438bfd ; xor edx, edx ; call 0x20000294e26
0x0000020000438c13 : je 0x20000438c41 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000439073 : je 0x2000043907f ; call 0x20000068fd5
0x000002000043933d : je 0x20000439357 ; mov rcx, rsi ; call 0x20000063d9c
0x0000020000439a02 : je 0x20000439964 ; call 0x20000068fd9
0x000002000043a07d : je 0x2000043a097 ; mov rcx, rbx ; call 0x20000063d9c
0x000002000043a298 : je 0x2000043a29f ; ret
0x000002000043a565 : je 0x2000043a57f ; mov rcx, rsi ; call 0x20000063d9c
0x000002000043a57a : je 0x2000043a594 ; mov rcx, rbp ; call 0x20000063d9c
0x000002000043a632 : je 0x2000043a644 ; mov rcx, rbp ; call 0x20000068fd8
0x000002000043b235 : je 0x2000043b24f ; mov rcx, rbx ; call 0x20000063d9c
0x000002000043b24a : je 0x2000043b264 ; mov rcx, rdi ; call 0x20000063d9c
0x000002000043b379 : je 0x2000043b354 ; mov rcx, rdi ; call 0x20000068fd8
0x000002000043b36c : je 0x2000043b37e ; mov rcx, rbx ; call 0x20000068fd8
0x000002000043b4dc : je 0x2000043b50a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043b680 : je 0x2000043b694 ; call 0x20000068fd5
0x000002000043b927 : je 0x2000043b93b ; call 0x20000063d99
0x000002000043b939 : je 0x2000043b953 ; mov rcx, rbx ; call 0x20000063d9c
0x000002000043c58b : je 0x2000043c59d ; mov rcx, rax ; call 0x20000068fd8
0x000002000043ce15 : je 0x2000043ce43 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043ced2 : je 0x2000043cf00 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043d1b2 : je 0x2000043d1e0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043d67e : je 0x2000043d6ad ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043de6e : je 0x2000043de9d ; jo 0x2000043dec3 ; add esp, 0x50 ; pop r14 ; ret
0x000002000043ebe0 : je 0x2000043ec0e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043eed8 : je 0x2000043ef06 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044005f : je 0x2000044008d ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000440605 : je 0x200004405fd ; mov rcx, r9 ; call 0x2000006fe28
0x000002000044067f : je 0x200004406ad ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004407a8 : je 0x200004407d6 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000441642 : je 0x20000441654 ; mov rcx, r14 ; call 0x20000068fd8
0x0000020000441ad1 : je 0x20000441ada ; xor eax, eax ; ret
0x0000020000441abc : je 0x20000441aea ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000441c45 : je 0x20000441c58 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000441d73 : je 0x20000441da1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000442418 : je 0x2000044242c ; call 0x20000068fd5
0x0000020000442455 : je 0x20000442447 ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000442b1a : je 0x20000442b26 ; call 0x20000068fd5
0x0000020000442b24 : je 0x20000442b36 ; mov rcx, r14 ; call 0x20000068fd8
0x0000020000442d0b : je 0x20000442d39 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000442d38 : je 0x20000442d45 ; mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x00000200004439b1 : je 0x200004439df ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000443d7f : je 0x20000443d9a ; and rcx, 0xfffffffffffffff8 ; call 0x20000068fd9
0x0000020000444060 : je 0x2000044408e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000444293 : je 0x2000044429f ; call 0x20000068fd5
0x000002000044643a : je 0x20000446468 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004466db : je 0x20000446709 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000447d74 : je 0x20000447d86 ; mov rcx, rdx ; call 0x20000068fd8
0x000002000044bc60 : je 0x2000044bc8e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044dd95 : je 0x2000044ddc3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044e4c6 : je 0x2000044e4f5 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000452c2e : je 0x20000452c5d ; push 0x40c48348 ; pop r15 ; ret
0x00000200004537de : je 0x2000045380c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000455ff6 : je 0x20000456020 ; and al, ch ; ret 0xf5a1
0x00000200004599d3 : je 0x20000459a01 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000045acde : je 0x2000045acba ; mov rcx, qword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x000002000045b723 : je 0x2000045b751 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000045bb64 : je 0x2000045b889 ; jmp 0x20000577e18
0x000002000045dfe0 : je 0x2000045e00b ; cmp byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000461c20 : je 0x20000461c2c ; mov rcx, rbx ; call rax
0x0000020000462058 : je 0x2000046206a ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000462058 : je 0x2000046206b ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000462926 : je 0x20000462954 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000463246 : je 0x20000463274 ; js 0x2000046329a ; add esp, 0x50 ; pop rdi ; ret
0x00000200004634c6 : je 0x200004634f0 ; jo 0x20000463459 ; ret
0x0000020000464267 : je 0x20000464295 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000464b65 : je 0x20000464b93 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004676b1 : je 0x200004676df ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000469c1d : je 0x20000469c47 ; jo 0x20000469bb0 ; ret
0x000002000046bd18 : je 0x2000046bd46 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046c117 : je 0x2000046c140 ; call rax
0x000002000046cd69 : je 0x2000046cd93 ; and al, ch ; ret
0x000002000046e7de : je 0x2000046e80c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046f28d : je 0x2000046f29a ; add rsp, 0x28 ; ret
0x00000200004705cd : je 0x200004705dc ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000471271 : je 0x20000470fb4 ; call rax
0x0000020000471335 : je 0x20000471236 ; mov ecx, eax ; call r9
0x0000020000472435 : je 0x2000047245f ; and al, 0xff ; ret 0xbdeb
0x0000020000472a60 : je 0x20000472a73 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000472bf3 : je 0x20000472c2c ; mov eax, r10d ; ret
0x0000020000472bf3 : je 0x20000472c2d ; mov eax, r10d ; ret
0x0000020000472c46 : je 0x20000472c4b ; ret
0x0000020000473dae : je 0x20000473ddb ; mov rcx, rbx ; call 0x2000009d470
0x00000200004754d1 : je 0x200004754de ; add rsp, 0x28 ; ret
0x0000020000475738 : je 0x2000047573d ; ret
0x000002000047587c : je 0x200004758aa ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000475a3c : je 0x20000475a6a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000475f76 : je 0x20000475fa5 ; js 0x20000475fcb ; add esp, 0x50 ; pop r15 ; ret
0x000002000047745f : je 0x2000047748d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000478981 : je 0x200004789af ; push 0x50c48348 ; pop rdi ; ret
0x000002000047cd94 : je 0x2000047cdc2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000047d902 : je 0x2000047d930 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000047e258 : je 0x2000047e286 ; js 0x2000047e2ac ; add esp, 0x60 ; pop rdi ; ret
0x000002000047fa26 : je 0x2000047fa55 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000047fcd4 : je 0x2000047fd02 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004800b9 : je 0x200004800e7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000482633 : je 0x20000482661 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000485806 : je 0x20000485830 ; js 0x20000485799 ; ret
0x0000020000486cae : je 0x20000486c3b ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000486cad : je 0x20000486c3c ; ror byte ptr [rdi], 0x85 ; ret
0x000002000048b65a : je 0x2000048b667 ; add rax, -0x10 ; ret
0x000002000048baf6 : je 0x2000048bb24 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000048bbe1 : je 0x2000048bbdb ; mov eax, 0xc000000d ; ret
0x000002000048d19f : je 0x2000048d20c ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x000002000048d598 : je 0x2000048d5a5 ; add rsp, 0x28 ; ret
0x000002000048ed4e : je 0x2000048ed7c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000048eebf : je 0x2000048eeea ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000048fc7f : je 0x2000048fcad ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049275e : je 0x20000492766 ; jmp r10
0x00000200004929b5 : je 0x200004929cc ; add dword ptr [rdx + 0x18], eax ; ret
0x00000200004929b4 : je 0x200004929cd ; add dword ptr [rdx + 0x18], eax ; ret
0x00000200004929b3 : je 0x200004929ce ; add dword ptr [rdx + 0x18], eax ; ret
0x0000020000493917 : je 0x20000493945 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000493cc7 : je 0x20000493c8c ; jmp 0x20000493c99
0x0000020000497c15 : je 0x20000497c7e ; mov ebx, r9d ; jmp 0x20000497c6b
0x000002000049a461 : je 0x2000049a48f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049a675 : je 0x2000049a6a3 ; push 0x50c48348 ; pop rdi ; ret
0x000002000049d73f : je 0x2000049d76d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049ddd7 : je 0x2000049de05 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049e06d : je 0x2000049e057 ; ret
0x000002000049ed03 : je 0x2000049ed31 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049f89e : je 0x2000049f8c9 ; and byte ptr [rax - 0x75], cl ; ret
0x00000200004a062a : je 0x200004a062a ; test cl, 0x40 ; jne 0x200004a063d ; xor al, al ; ret
0x00000200004a0af0 : je 0x200004a0b1a ; jo 0x200004a0a83 ; ret
0x00000200004a1584 : je 0x200004a1560 ; ret 0xb9ff
0x00000200004a250d : je 0x200004a2537 ; and al, ch ; jmp rdx
0x00000200004a2dba : je 0x200004a2de8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004a3393 : je 0x200004a33c1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004a63be : je 0x200004a63ed ; push 0x40c48348 ; pop r15 ; ret
0x00000200004a6b0d : je 0x200004a6b37 ; js 0x200004a6a9f ; ret
0x00000200004a9864 : je 0x200004a9872 ; bts dword ptr [r9], 0x1d ; ret
0x00000200004aa23a : je 0x200004aa268 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004aade1 : je 0x200004aae0f ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ab172 : je 0x200004ab183 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004aba1c : je 0x200004aba4a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ac87d : je 0x200004ac8ab ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004aca12 : je 0x200004aca40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ad6ef : je 0x200004ad6f8 ; xor al, al ; ret
0x00000200004ad7f1 : je 0x200004ad81f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004adacd : je 0x200004adafb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ade75 : je 0x200004adea3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004aff9e : je 0x200004affc8 ; js 0x200004aff31 ; ret
0x00000200004b053f : je 0x200004b056d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b05df : je 0x200004b060d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b1219 : je 0x200004b1247 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b1a5b : je 0x200004b1a86 ; and al, ch ; pop rbp ; ret
0x00000200004b1cf4 : je 0x200004b1d22 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b3fe6 : je 0x200004b3ff9 ; xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x00000200004b466c : je 0x200004b469a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b515d : je 0x200004b518b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b525b : je 0x200004b528a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b683c : je 0x200004b67f7 ; mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200004b79c0 : je 0x200004b79ea ; jo 0x200004b7953 ; ret
0x00000200004b7fc1 : je 0x200004b7fd0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b803c : je 0x200004b806a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b8ec4 : je 0x200004b8ef2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b9c15 : je 0x200004b9c43 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ba8f1 : je 0x200004ba91f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004bbb6a : je 0x200004bbb94 ; jo 0x200004bbafd ; ret
0x00000200004bc08f : je 0x200004bc0b9 ; jo 0x200004bc022 ; ret
0x00000200004bc5d0 : je 0x200004bc5fe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004bd3ee : je 0x200004bd41c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004be51f : je 0x200004be54d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004be734 : je 0x200004be763 ; js 0x200004be789 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004be992 : je 0x200004be9c0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004bf343 : je 0x200004bf371 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004bfea7 : je 0x200004bfeb0 ; mov al, 1 ; ret
0x00000200004c0c7d : je 0x200004c0cab ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c19a4 : je 0x200004c19b7 ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200004c441d : je 0x200004c4429 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004c4fed : je 0x200004c4ffc ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c55ea : je 0x200004c5618 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c8472 : je 0x200004c84a1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c8781 : je 0x200004c87ac ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004c8aa0 : je 0x200004c8aba ; mov r8, rdx ; mov rdx, r10 ; jmp r11
0x00000200004c9320 : je 0x200004c92af ; ret
0x00000200004c9a94 : je 0x200004c9ac2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004cbad7 : je 0x200004cbad3 ; mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x00000200004cbd57 : je 0x200004cbd64 ; add rsp, 0x28 ; ret
0x00000200004ccbe8 : je 0x200004ccbee ; call rax
0x00000200004ccc84 : je 0x200004cccb2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cf5e9 : je 0x200004cf5ef ; call rax
0x00000200004cf96a : je 0x200004cf970 ; call rax
0x00000200004cfa34 : je 0x200004cfa62 ; jo 0x200004cfa88 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004d276f : je 0x200004d279d ; push 0x40c48348 ; pop rdi ; ret
0x00000200004d2a68 : je 0x200004d2a35 ; ret
0x00000200004d401e : je 0x200004d404d ; add rsp, 0x20 ; pop r13 ; ret
0x00000200004d539b : je 0x200004d53ca ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200004d6682 : je 0x200004d66b1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d79a4 : je 0x200004d79d2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d7c94 : je 0x200004d7cc2 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004d82b8 : je 0x200004d82e2 ; jo 0x200004d824b ; ret
0x00000200004d8450 : je 0x200004d847e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d84ae : je 0x200004d84dc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d881b : je 0x200004d8846 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004da096 : je 0x200004da0c1 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004db5e0 : je 0x200004db5ef ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dbf91 : je 0x200004dbfbf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dc6ce : je 0x200004dc6fc ; js 0x200004dc722 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004dc7ab : je 0x200004dc7d9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dd38f : je 0x200004dd39c ; add rsp, 0x28 ; ret
0x00000200004dd8a4 : je 0x200004dd8b3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dda5f : je 0x200004dda64 ; ret
0x00000200004ddbdb : je 0x200004ddbe0 ; ret
0x00000200004deb60 : je 0x200004deb6f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004decf7 : je 0x200004ded00 ; xor al, al ; ret
0x00000200004df73a : je 0x200004df768 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004df980 : je 0x200004df9aa ; js 0x200004df913 ; ret
0x00000200004e004c : je 0x200004e0073 ; call rax
0x00000200004e0346 : je 0x200004e0374 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e097d : je 0x200004e098d ; call 0x20000472c4d
0x00000200004e0eed : je 0x200004e0f1c ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e3f72 : je 0x200004e3fa0 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e45f6 : je 0x200004e4625 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200004e639c : je 0x200004e63ca ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e6fdd : je 0x200004e6ff3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005a339b : je 0x200004e8874 ; xor eax, eax ; ret
0x00000200004e8883 : je 0x200004e888c ; mov eax, ecx ; ret
0x00000200004e8882 : je 0x200004e888d ; mov eax, ecx ; ret
0x00000200004e8881 : je 0x200004e888e ; mov eax, ecx ; ret
0x00000200004e8880 : je 0x200004e888f ; mov eax, ecx ; ret
0x00000200004ea9c6 : je 0x200004ea9f4 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ee625 : je 0x200004ee631 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x00000200004ee685 : je 0x200004ee692 ; add rsp, 0x28 ; ret
0x00000200004ef0f4 : je 0x200004ef122 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004efa84 : je 0x200004efab2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f1119 : je 0x200004f112b ; jbe 0x200004f1128 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f1119 : je 0x200004f112c ; jbe 0x200004f1129 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f1545 : je 0x200004f1553 ; ret
0x00000200004f1f88 : je 0x200004f1fb6 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f26fa : je 0x200004f2729 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f3d92 : je 0x200004f3dc0 ; push 0x40c48348 ; pop rdi ; ret
0x00000200004f49c3 : je 0x200004f49f1 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004f4c28 : je 0x200004f4be4 ; ret
0x00000200004f5824 : je 0x200004f5852 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f5cb4 : je 0x200004f5ce2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f7c92 : je 0x200004f7cc0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f7fe2 : je 0x200004f8010 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f828f : je 0x200004f82bd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f84a7 : je 0x200004f84d1 ; js 0x200004f843a ; ret
0x00000200004f852d : je 0x200004f855b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f8eee : je 0x200004f8efd ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004f98ea : je 0x200004f98f3 ; mov al, 1 ; ret
0x00000200004fb772 : je 0x200004fb7a0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fc186 : je 0x200004fc1b4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fc2b6 : je 0x200004fc2e4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fcbee : je 0x200004fcc1d ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004fcd53 : je 0x200004fcd81 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004febf4 : je 0x200004fec22 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000505434 : je 0x20000505488 ; ror byte ptr [rax + 3], 1 ; ret 0xce8b
0x0000020000505f8a : je 0x20000505f96 ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x000002000050c1b7 : je 0x2000050c1bc ; ret
0x000002000050c242 : je 0x2000050c270 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050c3b3 : je 0x2000050c3de ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000050d08e : je 0x2000050d15b ; mov rcx, rbx ; call rax
0x000002000050f723 : je 0x2000050f751 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050fec4 : je 0x2000050fef2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005111eb : je 0x20000511219 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051153b : je 0x20000511569 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000511b56 : je 0x20000511b5c ; call rax
0x0000020000511b6e : je 0x20000511b9c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000513ae0 : je 0x20000513b0e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000514a27 : je 0x20000514a55 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000514aa5 : je 0x20000514ad3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000515a27 : je 0x20000515a55 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000516cd4 : je 0x20000516d00 ; and al, ch ; and al, 0x70 ; ret
0x0000020000517c01 : je 0x20000517c2f ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051988c : je 0x200005198ba ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000519dbe : je 0x20000519dec ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051acae : je 0x2000051acdc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051b21e : je 0x2000051b24c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051c07a : je 0x2000051c086 ; call 0x2000013e179
0x000002000051d66a : je 0x2000051d698 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051e12d : je 0x2000051e14b ; add rsp, 0x28 ; jmp 0x2000013f151
0x000002000051e1e4 : je 0x2000051e212 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051eefc : je 0x2000051ef2a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052002b : je 0x20000520059 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052012a : je 0x2000052012f ; ret
0x0000020000531a0d : je 0x20000531a22 ; mov rax, qword ptr [rip + 0x12342a] ; call rax
0x00000200005415bd : je 0x200005415cd ; mov rcx, r15 ; call rax
0x0000020000545c30 : je 0x20000545bef ; call qword ptr [rax - 0x183d2a17]
0x000002000040ec73 : je 0x2000055e0b4 ; xor eax, eax ; jmp 0x2000040ec48
0x000002000056e060 : je 0x2000056e039 ; push rsi ; ret
0x000002000056e05f : je 0x2000056e03a ; push rsi ; ret
0x0000020000572288 : je 0x20000572219 ; adc esi, esi ; ret 0x4104
0x0000020000574ca7 : je 0x20000574cd5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000454ade : je 0x20000575cf8 ; ret
0x000002000048ab6d : je 0x2000058388a ; ret
0x000002000058cd55 : je 0x2000058cd60 ; call 0x20000068fd4
0x000002000058cdc3 : je 0x2000058cdd5 ; call 0x20000068fd4
0x00000200005903d1 : je 0x200005903e4 ; mov eax, dword ptr [rcx + rax*4 + 4] ; jmp 0x200004ac62f
0x0000020000594e06 : je 0x20000594d95 ; ret 0x8d48
0x00000200004c5439 : je 0x20000597a4c ; xor eax, eax ; ret
0x00000200004c717a : je 0x200005986d2 ; xor eax, eax ; ret
0x000002000059c859 : je 0x2000059c867 ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x000002000059e476 : je 0x2000059e4a1 ; sub cl, ch ; leave ; ret
0x00000200005a822f : je 0x200005a8252 ; test al, 4 ; jne 0x200005a8252 ; call 0x200001ca111
0x0000020000505f7e : je 0x200005ad15c ; xor al, al ; ret
0x00000200005af5c0 : je 0x200005af5e0 ; lea rdx, qword ptr [rsp + 0x50] ; call r8
0x000002000052013f : je 0x200005b56b2 ; ret
0x00000200005b592c : je 0x200005b595a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005b59fd : je 0x200005b5a2b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005b5e8d : je 0x200005b5ebb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005b63b5 : je 0x200005b63e3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005b7ada : je 0x200005b7b08 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005b9a03 : je 0x200005b9a0b ; mov dword ptr [rdx], eax ; ret
0x00000200005ba66e : je 0x200005ba69d ; add rsp, 0x20 ; pop r15 ; ret
0x00000200005bca2c : je 0x200005bca5a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005bf484 : je 0x200005bf4b2 ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005bfac8 : je 0x200005bfaf6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c105b : je 0x200005c1089 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c6cd8 : je 0x200005c6d06 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005c86c5 : je 0x200005c86f3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005c9c43 : je 0x200005c9c71 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005cad0d : je 0x200005cad18 ; call 0x200000d6f2c
0x00000200005cb200 : je 0x200005cb22e ; push 0x50c48348 ; pop rdi ; ret
0x00000200005cb53f : je 0x200005cb56d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005d005e : je 0x200005d0066 ; jmp qword ptr [rax]
0x00000200005d053e : je 0x200005d0547 ; inc edx ; jmp 0x200005d055c
0x00000200005d11c0 : je 0x200005d11ea ; jo 0x200005d1153 ; ret
0x00000200005d1f22 : je 0x200005d1f50 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d2db2 : je 0x200005d2dc1 ; mov eax, 0xc00000bb ; ret
0x00000200005d308a : je 0x200005d3099 ; mov eax, 0xc0000001 ; ret
0x00000200005d5ab1 : je 0x200005d5adf ; push 0x50c48348 ; pop rdi ; ret
0x00000200005d69ae : je 0x200005d69dc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d7a4a : je 0x200005d7a78 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d8ab1 : je 0x200005d8ac0 ; mov eax, 0xc0000120 ; ret
0x00000200005d8f27 : je 0x200005d8f37 ; mov edx, 0xc000000d ; mov eax, edx ; ret
0x00000200005d9b72 : je 0x200005d9ba0 ; jo 0x200005d9bc6 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005db135 : je 0x200005db149 ; mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200005db873 : je 0x200005db8a1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005dd694 : je 0x200005dd6c2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005dda9f : je 0x200005ddace ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005ddb99 : je 0x200005ddbc7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ddfc9 : je 0x200005ddff7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005dfb9f : je 0x200005dfbcd ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005e566c : je 0x200005e569a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e5c57 : je 0x200005e5c85 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e5cff : je 0x200005e5d2d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e686b : je 0x200005e6871 ; call rax
0x00000200005e6a08 : je 0x200005e6a36 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e725d : je 0x200005e728c ; push 0x247c8b48 ; jo 0x200005e71fa ; ret
0x00000200005e75d2 : je 0x200005e764b ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x00000200005e773b : je 0x200005e7769 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005e78f0 : je 0x200005e791a ; js 0x200005e7882 ; ret
0x00000200005e8b06 : je 0x200005e8b34 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ebe8f : je 0x200005ebebd ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005ec612 : je 0x200005ec640 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005ec7da : je 0x200005ec808 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ec870 : je 0x200005ec87e ; and qword ptr [r8], 0 ; mov al, r10b ; ret
0x00000200005ec870 : je 0x200005ec87f ; and qword ptr [r8], 0 ; mov al, r10b ; ret
0x00000200005efbcd : je 0x200005efbdc ; mov eax, 0xc0000303 ; ret
0x00000200005efcfb : je 0x200005efd29 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f0a28 : je 0x200005f0a53 ; sub byte ptr [rcx - 0x75], al ; ret
0x00000200005f0b39 : je 0x200005f0b67 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f1124 : je 0x200005f1152 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f1563 : je 0x200005f1591 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f3d0d : je 0x200005f3d3b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f5cfb : je 0x200005f5d29 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f715a : je 0x200005f7168 ; bts dword ptr [r9], 0x1d ; ret
0x00000200005f919e : je 0x200005f91b9 ; call rax
0x00000200005f9b50 : je 0x200005f9b7e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f9fe3 : je 0x200005f9fec ; xor eax, eax ; ret
0x00000200005f9fde : je 0x200005fa00b ; cmp eax, 0xa ; je 0x200005f9ff1 ; xor eax, eax ; ret
0x00000200005ff55d : je 0x200005ff587 ; and al, ch ; ret
0x00000200005ffc6f : je 0x200005ffc9d ; js 0x200005ffcc3 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000600cfd : je 0x20000600d2c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000602135 : je 0x20000602163 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060220d : je 0x2000060223b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006025ec : je 0x2000060261a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060497c : je 0x200006049aa ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060598b : je 0x2000060599e ; lea rax, qword ptr [rip - 0xdf824] ; ret
0x0000020000607a89 : je 0x20000607ab7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000608afd : je 0x20000608b2b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060985e : je 0x2000060988c ; js 0x200006098b2 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000609ec1 : je 0x20000609ec7 ; call rax
0x0000020000609f5c : je 0x20000609f62 ; call rax
0x000002000060a365 : je 0x2000060a393 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060b5fa : je 0x2000060b60b ; mov dword ptr [rip - 0x368f16], edx ; ret
0x000002000060de5a : je 0x2000060de88 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060f4e5 : je 0x2000060f513 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060f5fd : je 0x2000060f62b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060fba8 : je 0x2000060fbd6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006144e5 : je 0x20000614513 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000614658 : je 0x20000614682 ; sub bh, bh ; ret
0x0000020000614d55 : je 0x20000614d83 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000618239 : je 0x20000618267 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000618cfe : je 0x20000618d2c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061ca0a : je 0x2000061ca38 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061cb39 : je 0x2000061cb67 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061cb60 : je 0x2000061cb98 ; add rax, rdx ; jmp 0x2000061cb6f
0x000002000061cb8b : je 0x2000061cb9c ; test cl, cl ; jne 0x2000061cb9c ; mov al, 1 ; ret
0x000002000061d4ec : je 0x2000061d51a ; push 0x50c48348 ; pop rdi ; ret
0x000002000061ec4b : je 0x2000061ec5a ; mov eax, 0xc0000034 ; ret
0x0000020000620619 : je 0x2000062064d ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000620671 : je 0x2000062067a ; mov al, 1 ; ret
0x0000020000620688 : je 0x200006206a7 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200006212a3 : je 0x200006212d1 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006217a2 : je 0x200006217d0 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006247a1 : je 0x200006247d0 ; push 0x76063b45 ; or edi, edi ; ret
0x00000200006248b0 : je 0x200006248da ; js 0x20000624843 ; ret
0x00000200006252ca : je 0x200006252f8 ; jo 0x2000062531e ; add esp, 0x50 ; pop rdi ; ret
0x000002000062793a : je 0x20000627968 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000629bf3 : je 0x20000629c21 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000062acd3 : je 0x2000062acde ; call 0x200000d6f2c
0x000002000062ce81 : je 0x2000062ceb0 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000062cf26 : je 0x2000062cf54 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000062dd76 : je 0x2000062dda4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000062e14a : je 0x2000062e13c ; xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x000002000063219d : je 0x200006321cb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006329cb : je 0x200006329da ; mov eax, 0xc000000d ; ret
0x000002000063301f : je 0x2000063304d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063392b : je 0x20000633959 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000634158 : je 0x200006341ba ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200006341ea : je 0x20000634218 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000634e3d : je 0x20000634e6b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006376a5 : je 0x200006376cf ; jo 0x20000637638 ; ret
0x000002000063776c : je 0x2000063779a ; js 0x200006377c0 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000637ef5 : je 0x20000637f24 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000063861f : je 0x2000063862e ; mov eax, 0xc0000002 ; ret
0x000002000063863f : je 0x2000063864e ; mov eax, 0xc0000002 ; ret
0x00000200006399fb : je 0x20000639a0a ; mov eax, 0xc0000002 ; ret
0x0000020000639a17 : je 0x20000639a26 ; mov eax, 0xc0000002 ; ret
0x000002000063d2be : je 0x2000063d2ed ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006436a8 : je 0x200006436d6 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000643751 : je 0x2000064377f ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000643834 : je 0x20000643863 ; push 0x40c48348 ; pop r15 ; ret
0x00000200006447a0 : je 0x200006447ce ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000645663 : je 0x20000645691 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006496a1 : je 0x200006496cb ; jo 0x20000649634 ; ret
0x000002000064aefd : je 0x2000064af2b ; mov dword ptr [rsp + 0x54], r10d ; call rax
0x000002000064b10e : je 0x2000064b137 ; call rax
0x000002000064b9f1 : je 0x2000064ba1f ; push 0x50c48348 ; pop rdi ; ret
0x000002000064dc2d : je 0x2000064dc57 ; js 0x2000064dbc0 ; ret
0x000002000064dcf4 : je 0x2000064dd22 ; push 0x50c48348 ; pop rdi ; ret
0x000002000064fd21 : je 0x2000064fd4b ; jo 0x2000064fcb4 ; ret
0x000002000065030b : je 0x20000650335 ; jo 0x2000065029e ; ret
0x000002000065462d : je 0x2000065465b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065a01e : je 0x2000065a014 ; mov al, 1 ; ret
0x000002000065a00e : je 0x2000065a017 ; xor al, al ; ret
0x000002000065a00d : je 0x2000065a018 ; xor al, al ; ret
0x000002000065b32e : je 0x2000065b35c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000065bbb3 : je 0x2000065bbe1 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065cb43 : je 0x2000065cb71 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065d361 : je 0x2000065d38f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065d6d9 : je 0x2000065d707 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000661ce3 : je 0x20000661d11 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000661e45 : je 0x20000661e73 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006621c6 : je 0x200006621f4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000664ebe : je 0x20000664eec ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000665a14 : je 0x20000665a42 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000665f76 : je 0x20000665fa4 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066605d : je 0x2000066608b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066610d : je 0x2000066611f ; mov edx, edi ; call 0x20000294e27
0x0000020000666e62 : je 0x20000666e90 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006674d8 : je 0x20000667506 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000667547 : je 0x20000667550 ; xor eax, eax ; ret
0x000002000066804e : je 0x2000066807c ; push 0x40c48348 ; pop rdi ; ret
0x0000020000668b4b : je 0x20000668b60 ; xor edx, edx ; mov rcx, rbx ; call 0x20000294e29
0x0000020000668ba7 : je 0x20000668bbc ; xor edx, edx ; mov rcx, rbx ; call 0x20000294e29
0x0000020000668e7f : je 0x20000668ead ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000669de6 : je 0x20000669dee ; jmp rax
0x000002000066a86d : je 0x2000066a89b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066a8fc : je 0x2000066a92a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066a989 : je 0x2000066a9b7 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066aa19 : je 0x2000066aa47 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066aab4 : je 0x2000066aae2 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ac27 : je 0x2000066ac55 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ac9c : je 0x2000066acca ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ae40 : je 0x2000066ae6b ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000066af23 : je 0x2000066af4e ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000066b62c : je 0x2000066b657 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000066bd0a : je 0x2000066bd39 ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x000002000066c59a : je 0x2000066c5c9 ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x000002000066caee : je 0x2000066cb67 ; mov r8d, esi ; call rax
0x000002000066cfaa : je 0x2000066cfb6 ; mov cl, r9b ; call rax
0x000002000066da4a : je 0x2000066da5a ; xor edx, edx ; call 0x20000294e27
0x000002000066e3dd : je 0x2000066e40b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066e40f : je 0x2000066e410 ; mov dword ptr [r8], r9d ; ret
0x000002000066e88d : je 0x2000066e8bb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066e947 : je 0x2000066ea80 ; call 0x2000066ac38
0x000002000066ea98 : je 0x2000066eaa3 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000066ea81 : je 0x2000066eaaf ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ec37 : je 0x2000066ec65 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ed89 : je 0x2000066edb7 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066ef40 : je 0x2000066ef6e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000670eaf : je 0x20000670edd ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000671330 : je 0x200006712f8 ; ret
0x0000020000671fb8 : je 0x20000671fe6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006722da : je 0x20000672308 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006723de : je 0x2000067240c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067256c : je 0x20000672575 ; xor eax, eax ; ret
0x0000020000672568 : je 0x2000067257e ; dec edx ; je 0x20000672579 ; xor eax, eax ; ret
0x00000200006727f5 : je 0x20000672823 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006728ac : je 0x200006728c3 ; mov rcx, rbx ; call rax
0x0000020000672914 : je 0x2000067291d ; call rax
0x00000200006729c0 : je 0x200006729d7 ; mov rcx, rdi ; call rax
0x00000200006729dc : je 0x200006729ee ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000672a37 : je 0x20000672a47 ; mov rcx, rbx ; call rax
0x0000020000672a4c : je 0x20000672a5e ; mov edx, edi ; mov rcx, rbx ; call rax
0x0000020000672b47 : je 0x20000672b53 ; mov rcx, rdi ; call rax
0x0000020000672b5f : je 0x20000672b6b ; mov rcx, rdi ; call rax
0x0000020000672bb8 : je 0x20000672bc4 ; mov rcx, rdi ; call rax
0x0000020000672bc9 : je 0x20000672bdb ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000672e6d : je 0x20000672e9b ; sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x0000020000672e91 : je 0x20000672ebf ; sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x0000020000673eb8 : je 0x20000673ee6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006742e8 : je 0x20000674316 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006743b7 : je 0x200006743e5 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006745b3 : je 0x200006745e1 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006750b3 : je 0x200006750c2 ; mov eax, 1 ; ret
0x00000200006761fa : je 0x20000676228 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000676608 : je 0x20000676636 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000676701 : je 0x2000067672f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006767d7 : je 0x20000676805 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000676a66 : je 0x20000676a94 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067747f : je 0x200006774ad ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000677684 : je 0x200006776b2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006781cc : je 0x200006781fa ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000678395 : je 0x200006783c3 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000678833 : je 0x20000678861 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000679667 : je 0x20000679695 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067979e : je 0x200006797cc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000679c6f : je 0x20000679c40 ; jmp qword ptr [rcx]
0x000002000067a3a9 : je 0x2000067a3d7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000067aed0 : je 0x2000067aefe ; push 0x40c48348 ; pop rdi ; ret
0x000002000067af7b : je 0x2000067afa9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067c1b6 : je 0x2000067c1c6 ; cmp dl, al ; jne 0x2000067c1c6 ; xor eax, eax ; ret
0x000002000067d06f : je 0x2000067d09d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067d46f : je 0x2000067d49d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067df24 : je 0x2000067df52 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067f7b4 : je 0x2000067f7bd ; xor eax, eax ; ret
0x00000200006800cd : je 0x200006800d5 ; xor eax, eax ; ret
0x00000200006808fe : je 0x20000680910 ; add rsp, 0x30 ; pop rbx ; jmp r10
0x0000020000680cec : je 0x20000680d1a ; push 0x50c48348 ; pop rdi ; ret
0x0000020000681104 : je 0x20000681132 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000682086 : je 0x200006820b4 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000682164 : je 0x20000682192 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006867c2 : je 0x200006867f0 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000686a9d : je 0x20000686acc ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000068a17b : je 0x2000068a1aa ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000068a44a : je 0x2000068a478 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000068a913 : je 0x2000068a941 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000068a97c : je 0x2000068a9aa ; add rsp, 0x20 ; pop rdi ; ret
0x000002000068c83e : je 0x2000068c86c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000068d4d7 : je 0x2000068d505 ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000068e774 : je 0x2000068e7a2 ; and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x000002000068f093 : je 0x2000068f0c1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068fd51 : je 0x2000068fd62 ; mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x00000200006c5917 : je 0x200006c5920 ; mov eax, edx ; jmp 0x200006c596f
0x00000200006c5912 : je 0x200006c592c ; cmp ecx, 9 ; je 0x200006c5925 ; mov eax, edx ; jmp 0x200006c5974
0x00000200006d6c08 : je 0x200006d6c1e ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d7487 : je 0x200006d749d ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d7d22 : je 0x200006d7d38 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d8866 : je 0x200006d887c ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d90c6 : je 0x200006d90dc ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d9588 : je 0x200006d959e ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006d9c44 : je 0x200006d9c5a ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006da494 : je 0x200006da4aa ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006da945 : je 0x200006da95b ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006db176 : je 0x200006db18c ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006dba4c : je 0x200006dba62 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006dcb1d : je 0x200006dcb33 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006dd37f : je 0x200006dd395 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006ddfd1 : je 0x200006ddfe7 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006de89b : je 0x200006de8b1 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006df25d : je 0x200006df273 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006df6c7 : je 0x200006df6dd ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e1c3e : je 0x200006e1c54 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e205e : je 0x200006e2074 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e246c : je 0x200006e2482 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e2842 : je 0x200006e2858 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e2c62 : je 0x200006e2c78 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e30e8 : je 0x200006e30fe ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e3bce : je 0x200006e3be4 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006e412a : je 0x200006e4140 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006ea02f : je 0x200006ea05d ; js 0x200006ea083 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006ed94c : je 0x200006ed96d ; mov al, 1 ; add rsp, 0x68 ; ret
0x00000200006edac6 : je 0x200006edaf4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006eebfe : je 0x200006eec0f ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006f2f03 : je 0x200006f2f31 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f4729 : je 0x200006f4757 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f4e07 : je 0x200006f4e35 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f55b2 : je 0x200006f55e0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f5962 : je 0x200006f5990 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f7930 : je 0x200006f795e ; push 0x50c48348 ; pop rdi ; ret
0x00000200006f8235 : je 0x200006f8263 ; jo 0x200006f8289 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006f983a : je 0x200006f9868 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006fc948 : je 0x200006fc976 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006fde25 : je 0x200006fde53 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000703b32 : je 0x20000703b5d ; and al, ch ; pop rdx ; ret 0xffd7
0x00000200007080d7 : je 0x20000708105 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000070870b : je 0x20000708739 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070d13d : je 0x2000070d16b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070e000 : je 0x2000070e02e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070ec28 : je 0x2000070ec56 ; push 0x40c48348 ; pop rdi ; ret
0x000002000071026b : je 0x20000710299 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000711746 : je 0x20000711774 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007124a7 : je 0x200007124d5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000712609 : je 0x20000712637 ; js 0x2000071265d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000713c98 : je 0x20000713c6f ; ret
0x000002000071407a : je 0x200007140a8 ; jo 0x200007140ce ; add esp, 0x50 ; pop rdi ; ret
0x0000020000715144 : je 0x20000715172 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007155a0 : je 0x2000071555e ; ret
0x000002000071621c : je 0x20000716214 ; mov ebx, 0xba15ffff ; scasb al, byte ptr [rdi] ; ret
0x0000020000718be7 : je 0x20000718bf8 ; ret
0x0000020000718be7 : je 0x20000718bfd ; ret
0x00000200007201f8 : je 0x2000072020b ; ret
0x0000020000721812 : je 0x20000721858 ; std ; ljmp ptr [rbx] ; ret 0x8489
0x0000020000724940 : je 0x2000072490e ; ret 0xe9ff
0x00000200007252ce : je 0x200007252fc ; and byte ptr [rbp - 0x74bb8eb6], cl ; ret 0xc4e8
0x000002000072b596 : je 0x2000072b5c4 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000072ca94 : je 0x2000072cac2 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000072ec4b : je 0x2000072ec79 ; js 0x2000072ec9f ; add esp, 0x60 ; pop rdi ; ret
0x000002000072f040 : je 0x2000072f051 ; or eax, 0xffffffff ; ret
0x000002000072f8ae : je 0x2000072f8d8 ; jo 0x2000072f841 ; ret
0x000002000000fed2 : jg 0x2000000fef0 ; ret
0x000002000000fed1 : jg 0x2000000fef1 ; ret
0x000002000001fcba : jg 0x2000001fc5e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x000002000001fcb9 : jg 0x2000001fc5f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x000002000003c90a : jg 0x2000003c90f ; ret
0x00000200000609e5 : jg 0x20000060977 ; ror dword ptr [rbp + 0x23], cl ; ret
0x0000020000070894 : jg 0x2000007088e ; ret
0x00000200000b41ec : jg 0x200000b4206 ; mov eax, 1 ; ret
0x00000200000b4f58 : jg 0x200000b4f6c ; ret 0x48c3
0x000002000011a18d : jg 0x2000011a184 ; add al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001214cd : jg 0x200001214fa ; add byte ptr [rdi], cl ; test edi, esi ; leave ; or byte ptr [rax], al ; ret
0x000002000012df10 : jg 0x2000012df8e ; idiv dword ptr [rax + 1] ; ret
0x000002000012fee8 : jg 0x2000012fefc ; ret 0xccc3
0x000002000013704c : jg 0x20000137066 ; xchg dword ptr [rbx], ecx ; or byte ptr [rax], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000140899 : jg 0x20000140893 ; ret
0x000002000014279f : jg 0x20000142799 ; ret
0x00000200001593e4 : jg 0x200001593a6 ; lock add byte ptr [rax], al ; add bl, al ; jmp rax
0x0000020000174066 : jg 0x20000174058 ; nop ; xchg eax, ebx ; out dx, al ; push rsi ; ret 0x7401
0x0000020000197579 : jg 0x20000197509 ; adc eax, dword ptr [rax] ; mov al, 1 ; ret
0x000002000019d200 : jg 0x2000019d206 ; ret
0x00000200001b16c4 : jg 0x200001b16c6 ; dec dword ptr [rax - 0x75] ; sub byte ptr [rcx + 0x23], cl ; ret
0x00000200001cd281 : jg 0x200001cd298 ; add byte ptr [rax - 0x39], cl ; ret 0x6980
0x00000200001f34f7 : jg 0x200001f3500 ; xor eax, eax ; ret
0x0000020000211faf : jg 0x20000211fb8 ; mov eax, 1 ; ret
0x0000020000212ce6 : jg 0x20000212cf1 ; add qword ptr [rdx + 8], -0x18 ; ret
0x0000020000222bc1 : jg 0x20000222bf8 ; ret 0xd233
0x00000200003c9f7d : jg 0x200003c9ff1 ; ret
0x000002000040d22a : jg 0x2000040d275 ; call 0x1ffcad1951d
0x000002000046acaa : jg 0x2000046accc ; call 0x20000406f28
0x00000200004a6401 : jg 0x200004a6409 ; mov eax, r10d ; ret
0x00000200004a6401 : jg 0x200004a640a ; mov eax, r10d ; ret
0x00000200004aac79 : jg 0x200004aacbe ; ret 0x48ff
0x00000200004cc8cd : jg 0x200004cc871 ; jmp 0x1ffc37fb1d9
0x00000200004d5267 : jg 0x200004d526c ; mov eax, edx ; ret
0x00000200004d5267 : jg 0x200004d526d ; mov eax, edx ; ret
0x00000200004e2791 : jg 0x200004e2748 ; jmp qword ptr [rcx]
0x000002000052057a : jg 0x200005205d1 ; add ecx, edx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200005affbd : jg 0x200005affb3 ; ret
0x00000200005bb596 : jg 0x200005bb526 ; push rbp ; ret
0x00000200005dcb2d : jg 0x200005dcafe ; test al, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006104fa : jg 0x2000061050d ; sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000648024 : jg 0x2000064802e ; add rsp, 0x28 ; ret
0x0000020000675703 : jg 0x20000675709 ; ret
0x000002000067589d : jg 0x2000067591f ; ret
0x0000020000720215 : jg 0x20000720228 ; ret
0x000002000072095d : jg 0x2000072096f ; ret
0x0000020000720ccd : jg 0x20000720cdc ; ret
0x000002000072e194 : jg 0x2000072e1e4 ; xor byte ptr [rbx + 0x3480843], cl ; ret
0x000002000039adf5 : jge 0x1ffe2fbac53 ; add al, 0x83 ; ret 0x8918
0x000002000000dfb6 : jge 0x2000000e03b ; scasb al, byte ptr [rdi] ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x000002000000efd5 : jge 0x2000000f003 ; ret
0x00000200000630ec : jge 0x200000630f0 ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000009921e : jge 0x2000009921e ; inc dword ptr [rcx - 0x75] ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f6648 : jge 0x200000f664c ; idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x00000200000f9463 : jge 0x200000f9474 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000100ae0 : jge 0x20000100ae3 ; ret 0x8349
0x0000020000196954 : jge 0x2000019694d ; push rsi ; ret 0xf03
0x00000200001d278f : jge 0x200001d2800 ; idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000207569 : jge 0x200002074fb ; je 0x2000020757e ; ret 0x1a8
0x0000020000214314 : jge 0x2000021437d ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200002144c8 : jge 0x20000214531 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000024d27c : jge 0x2000024d2e6 ; or al, byte ptr [rax] ; pop rax ; ret 0x24
0x00000200002633fa : jge 0x20000263408 ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200003c4ac5 : jge 0x200003c4a4f ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003cfd7f : jge 0x200003cfd95 ; ret
0x00000200003f024b : jge 0x200003f0201 ; ret
0x000002000043862f : jge 0x200004386af ; ret
0x0000020000441de8 : jge 0x20000441dec ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000492b8f : jge 0x20000492b9a ; mov al, r9b ; ret
0x000002000049465f : jge 0x2000049466a ; ret 0x4cff
0x00000200004c639f : jge 0x200004c6393 ; fdiv st(7), st(0) ; add rsp, 0x28 ; ret
0x00000200004dad3b : jge 0x200004dad9a ; ret
0x000002000059fbf4 : jge 0x200004dd0b7 ; xor al, al ; ret
0x000002000050ca43 : jge 0x2000050ca64 ; ret
0x000002000051322f : jge 0x200005132a7 ; ret 0x48ff
0x000002000051df8f : jge 0x2000051df41 ; ret 0x48ff
0x000002000056e8d0 : jge 0x2000056e8d5 ; jmp 0x2000056e899
0x0000020000570cb7 : jge 0x20000570caa ; push rsi ; ret
0x000002000061121c : jge 0x200006111c7 ; push rsi ; ret
0x0000020000646b63 : jge 0x20000646b4f ; ret
0x0000020000648c26 : jge 0x20000648bfe ; call 0x20000294006
0x000002000065b29f : jge 0x2000065b26a ; ret
0x000002000065cd47 : jge 0x2000065cd98 ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x000002000067998a : jge 0x20000679991 ; add al, ch ; ret 0xa633
0x000002000000c02d : jl 0x2000000c0a1 ; ret 0x7298
0x000002000000d73e : jl 0x2000000d765 ; ret 0x23e8
0x000002000001164a : jl 0x20000011693 ; ret
0x000002000001e2b1 : jl 0x2000001e335 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000020341 : jl 0x200000203aa ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000261aa : jl 0x200000261d9 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x0000020000026ec5 : jl 0x20000026ef4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002901c : jl 0x2000002904b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000032f66 : jl 0x20000032f95 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003342b : jl 0x2000003345a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003380e : jl 0x2000003383d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000355d8 : jl 0x20000035603 ; adc byte ptr [rax - 0x75], cl ; ret 0xb8c3
0x0000020000035d66 : jl 0x20000035d95 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000038c19 : jl 0x20000038c48 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000039ead : jl 0x20000039edc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004e2c7 : jl 0x2000004e2f6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000050360 : jl 0x2000005038a ; cmp al, 0xf6 ; ret
0x0000020000054d9b : jl 0x20000054dca ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000550c2 : jl 0x200000550f1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005596c : jl 0x2000005599b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000055d5c : jl 0x20000055d8b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000070dd3 : jl 0x20000070e02 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000072616 : jl 0x20000072645 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000726b4 : jl 0x200000726e3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000729a0 : jl 0x200000729cf ; add rsp, 0x20 ; pop r14 ; ret
0x000002000007416c : jl 0x2000007419b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000007bf52 : jl 0x2000007bf7c ; js 0x2000007bf43 ; ret
0x00000200000829fc : jl 0x20000082a01 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000085aa2 : jl 0x20000085acf ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000008753b : jl 0x2000008756a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000008a4c8 : jl 0x2000008a4f7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008e041 : jl 0x2000008e06c ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000008e5e3 : jl 0x2000008e60d ; js 0x2000008e575 ; ret
0x000002000008e946 : jl 0x2000008e975 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008eab3 : jl 0x2000008eade ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000008ecbb : jl 0x2000008ecea ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000091227 : jl 0x20000091255 ; pop rax ; add rsp, 0x30 ; pop rcx ; ret
0x000002000009332f : jl 0x2000009335e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009370f : jl 0x2000009373e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000009438c : jl 0x200000943bb ; push 0x40c48348 ; pop r15 ; ret
0x0000020000096771 : jl 0x200000967a0 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000096976 : jl 0x200000969a5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000097861 : jl 0x20000097890 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000009b186 : jl 0x2000009b1b5 ; push 0x40c48348 ; pop r14 ; ret
0x000002000009b247 : jl 0x2000009b276 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009bf36 : jl 0x2000009bf65 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009d9d3 : jl 0x2000009da02 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000a0a32 : jl 0x200000a0a61 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ac963 : jl 0x200000ac992 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000b1a84 : jl 0x200000b1ab3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000b4231 : jl 0x200000b4240 ; mov eax, 1 ; ret
0x00000200000b43bc : jl 0x200000b43e7 ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200000b5a21 : jl 0x200000b5a50 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000b5e94 : jl 0x200000b5ebe ; js 0x200000b5e27 ; ret
0x00000200000b5f18 : jl 0x200000b5f43 ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200000b824b : jl 0x200000b827a ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000b9e33 : jl 0x200000b9e62 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000b9ee8 : jl 0x200000b9f16 ; jo 0x200000b9f3c ; add esp, 0x50 ; pop rbp ; ret
0x00000200000bbf3e : jl 0x200000bbf6d ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000c04bf : jl 0x200000c04ee ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c41a9 : jl 0x200000c41d8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c5bab : jl 0x200000c5bda ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c8768 : jl 0x200000c8797 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000c8a05 : jl 0x200000c8995 ; sub byte ptr [rax], al ; add dword ptr [rdi], ecx ; test ecx, eax ; ret
0x00000200000c8e57 : jl 0x200000c8e86 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c9b06 : jl 0x200000c9b35 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000caad4 : jl 0x200000cab03 ; push 0x40c48348 ; pop r14 ; ret
0x00000200000cd415 : jl 0x200000cd444 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000d2d42 : jl 0x200000d2d71 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000d4aa4 : jl 0x200000d4ad3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000d67e5 : jl 0x200000d6814 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000d7893 : jl 0x200000d78c2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000db6f7 : jl 0x200000db726 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000dbe5e : jl 0x200000dbe8d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000dcf54 : jl 0x200000dcf83 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000dd549 : jl 0x200000dd578 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000de0e5 : jl 0x200000de110 ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200000de60e : jl 0x200000de63d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e0a1b : jl 0x200000e0a4a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e477f : jl 0x200000e47ae ; jo 0x200000e47d4 ; add esp, 0x50 ; pop r14 ; ret
0x00000200000e614e : jl 0x200000e617d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000e9388 : jl 0x200000e93b5 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000e943d : jl 0x200000e946a ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000ece43 : jl 0x200000ece72 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000ed348 : jl 0x200000ed373 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200000ef4f8 : jl 0x200000ef527 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f1dd0 : jl 0x200000f1dff ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f2ad1 : jl 0x200000f2b00 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f3b92 : jl 0x200000f3bc1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f3d29 : jl 0x200000f3d58 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f4491 : jl 0x200000f44c0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f4ff5 : jl 0x200000f5020 ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200000f5868 : jl 0x200000f586d ; ret
0x00000200000f6862 : jl 0x200000f6891 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f91cb : jl 0x200000f91fa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fb5bb : jl 0x200000fb5ea ; push 0x40c48348 ; pop r14 ; ret
0x00000200000fd57f : jl 0x200000fd5ae ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fdc06 : jl 0x200000fdc35 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001010b4 : jl 0x200001010e3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001017a7 : jl 0x200001017d6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001023ad : jl 0x200001023d8 ; and byte ptr [rax + 0x3b], cl ; ret 0x3c73
0x0000020000102f64 : jl 0x20000102f8f ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200001033ca : jl 0x200001033f9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000103ae8 : jl 0x20000103b17 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000105828 : jl 0x20000105853 ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000010684e : jl 0x2000010687b ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000106e90 : jl 0x20000106eb9 ; add al, 0 ; add rsp, 0x58 ; ret
0x0000020000108ab5 : jl 0x20000108ae4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000108e0c : jl 0x20000108e3b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010a9e2 : jl 0x2000010aa11 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010ac48 : jl 0x2000010ac77 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010bacc : jl 0x2000010bafb ; push 0x40c48348 ; pop r14 ; ret
0x000002000010c14a : jl 0x2000010c179 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010ca14 : jl 0x2000010ca3f ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000010e069 : jl 0x2000010e098 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000114385 : jl 0x200001143b4 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000114c90 : jl 0x20000114cbf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000116c0f : jl 0x20000116c3a ; cmp byte ptr [rcx - 0x75], al ; ret
0x000002000011821e : jl 0x20000118249 ; xor byte ptr [rcx - 0x76], al ; ret 0x5f41
0x0000020000119311 : jl 0x20000119340 ; push 0x40c48348 ; pop r14 ; ret
0x000002000011a068 : jl 0x2000011a097 ; push 0x40c48348 ; pop r14 ; ret
0x000002000011ba16 : jl 0x2000011ba45 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011e64c : jl 0x2000011e67b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011eddc : jl 0x2000011ee0b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011f843 : jl 0x2000011f872 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000011fa09 : jl 0x2000011fa38 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000120a41 : jl 0x20000120a70 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000122051 : jl 0x20000122080 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000122933 : jl 0x20000122962 ; push 0x50c48348 ; pop r14 ; ret
0x0000020000122fe8 : jl 0x20000123017 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000125672 : jl 0x200001256a0 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x0000020000126c4c : jl 0x20000126c7b ; push 0x40c48348 ; pop r14 ; ret
0x0000020000128043 : jl 0x20000128071 ; js 0x20000128097 ; add esp, 0x60 ; pop rbp ; ret
0x000002000012cdf7 : jl 0x2000012ce26 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012e014 : jl 0x2000012e043 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012edef : jl 0x2000012ee1e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012ef21 : jl 0x2000012ef4f ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200001315ba : jl 0x200001315e9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000132bdc : jl 0x20000132bae ; cmp edx, dword ptr [rbp + 0x58] ; jmp 0x20000132bac
0x0000020000132fa8 : jl 0x20000132fd7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000134aae : jl 0x20000134a9c ; mov qword ptr [rip + 0x19b401], rdx ; ret
0x0000020000134ff1 : jl 0x20000135020 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013545e : jl 0x2000013548c ; js 0x200001354b2 ; add esp, 0x60 ; pop rbp ; ret
0x000002000013643d : jl 0x2000013646a ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000136ab6 : jl 0x20000136ae5 ; cmp byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200001370a5 : jl 0x200001370d0 ; sbb byte ptr [rcx - 0x75], al ; ret 0x44c3
0x0000020000138aa1 : jl 0x20000138ad0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000138b49 : jl 0x20000138b51 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4389
0x0000020000138b48 : jl 0x20000138b52 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4389
0x0000020000138b83 : jl 0x20000138bb2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013900a : jl 0x20000139039 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000013be0c : jl 0x2000013be3b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013c190 : jl 0x2000013c1bb ; xor byte ptr [rcx - 0x75], al ; ret
0x000002000013d200 : jl 0x2000013d22f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013fc31 : jl 0x2000013fc60 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014000e : jl 0x2000014003c ; js 0x20000140062 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000143597 : jl 0x200001435c6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000143ea2 : jl 0x20000143ed1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000145a73 : jl 0x20000145aa2 ; and al, ch ; cdq ; int 0xfd
0x0000020000145b4f : jl 0x20000145b7e ; and al, ch ; mov ebp, 0x8bfffdcc ; ret
0x0000020000146654 : jl 0x20000146683 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014c50e : jl 0x2000014c53c ; adc byte ptr [rbp - 0x77], al ; sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x000002000014cc28 : jl 0x2000014cc57 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001798c0 : jl 0x200001798ec ; add dword ptr [rdi], r9d ; xchg eax, esp ; ret 0xb60f
0x00000200001948f8 : jl 0x200001948f7 ; dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200001a06b5 : jl 0x200001a06e1 ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001a1b46 : jl 0x200001a1ae3 ; cmc ; push rsi ; ret 0x7410
0x00000200001a8348 : jl 0x200001a8377 ; push rax ; jmp 0x2000010e615
0x00000200001bc8bc : jl 0x200001bc8ac ; xor eax, eax ; ret
0x00000200001bdba6 : jl 0x200001bdbd5 ; add rsp, 0x20 ; pop r12 ; ret
0x00000200001bdc44 : jl 0x200001bdc73 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001be499 : jl 0x200001be4c8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c13ae : jl 0x200001c13dd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c23cd : jl 0x200001c23fc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c25d5 : jl 0x200001c2604 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001c40c5 : jl 0x200001c40f4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c6fa3 : jl 0x200001c6fd2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cd0dc : jl 0x200001cd10b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cd89f : jl 0x200001cd8ce ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d04c9 : jl 0x200001d04f8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001d1457 : jl 0x200001d145a ; ret 0x8348
0x00000200001d1456 : jl 0x200001d145b ; ret 0x8348
0x00000200001d3444 : jl 0x200001d3473 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001d41a9 : jl 0x200001d41d8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001d4b0f : jl 0x200001d4b3e ; js 0x200001d4b64 ; add esp, 0x50 ; pop r15 ; ret
0x00000200001d5efb : jl 0x200001d5f2a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d6c92 : jl 0x200001d6cc1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d6db9 : jl 0x200001d6de8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d74d1 : jl 0x200001d7500 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001d80cf : jl 0x200001d80fe ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d8263 : jl 0x200001d8292 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001d9363 : jl 0x200001d9353 ; or eax, 0xffffffff ; ret
0x00000200001db82e : jl 0x200001db85d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001dbcca : jl 0x200001dbcf9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001dc5ae : jl 0x200001dc5d9 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200001e2d34 : jl 0x200001e2d63 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001e438d : jl 0x200001e43bc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e6243 : jl 0x200001e6271 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200001e633a : jl 0x200001e6369 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001e8f57 : jl 0x200001e8f86 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e9dbb : jl 0x200001e9dea ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001ec90f : jl 0x200001ec93e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001ed307 : jl 0x200001ed336 ; js 0x200001ed35c ; add esp, 0x50 ; pop r14 ; ret
0x00000200001ed49d : jl 0x200001ed4cc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001efeea : jl 0x200001eff19 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001f1956 : jl 0x200001f1983 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200001f1de1 : jl 0x200001f1e10 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001f382f : jl 0x200001f385e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f3f2e : jl 0x200001f3f5d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f4860 : jl 0x200001f488f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001f4fe1 : jl 0x200001f5010 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f5ef2 : jl 0x200001f5f21 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001f6724 : jl 0x200001f6753 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001fa8e1 : jl 0x200001fa910 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fc848 : jl 0x200001fc877 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fd809 : jl 0x200001fd838 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000200062 : jl 0x2000020008d ; sbb byte ptr [rcx - 0x76], al ; ret 0xccc3
0x0000020000200d94 : jl 0x20000200dc3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000201c53 : jl 0x20000201c82 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200002053e8 : jl 0x20000205417 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000205ce2 : jl 0x20000205d11 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000206a28 : jl 0x20000206a57 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000206dd3 : jl 0x20000206e02 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020819c : jl 0x200002081cb ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000208eba : jl 0x20000208ee9 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000020aac0 : jl 0x2000020aaeb ; adc byte ptr [rcx - 0x75], al ; ret 0xccc3
0x000002000020affd : jl 0x2000020b02c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020b3e3 : jl 0x2000020b412 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020b704 : jl 0x2000020b72f ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000020c263 : jl 0x2000020c292 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020f164 : jl 0x2000020f178 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; ret
0x000002000020fb90 : jl 0x2000020fbbf ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020fe61 : jl 0x2000020fe8b ; js 0x2000020fdf4 ; ret
0x000002000020ff89 : jl 0x2000020ffb3 ; js 0x2000020ff1c ; ret
0x00000200002100af : jl 0x200002100de ; add rsp, 0x20 ; pop r14 ; ret
0x00000200002102fe : jl 0x2000021032d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000211e6d : jl 0x20000211e9c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200002130f6 : jl 0x20000213125 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000216068 : jl 0x20000216094 ; jo 0x200002160e6 ; or edi, edi ; ret
0x00000200002166f5 : jl 0x20000216724 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021da10 : jl 0x2000021da3b ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000021e404 : jl 0x2000021e42e ; js 0x2000021e397 ; ret
0x000002000021e8dd : jl 0x2000021e907 ; js 0x2000021e870 ; ret
0x000002000021f4b7 : jl 0x2000021f4e5 ; push 0x40c48348 ; pop rbp ; ret
0x0000020000220ce2 : jl 0x20000220d11 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000223cea : jl 0x20000223d14 ; js 0x20000223cf1 ; ret
0x0000020000225dee : jl 0x20000225e1d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200002263ea : jl 0x20000226419 ; js 0x2000022643f ; add esp, 0x50 ; pop r14 ; ret
0x00000200002268c9 : jl 0x200002268f8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200002277fa : jl 0x20000227829 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022bb24 : jl 0x2000022bb53 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022be98 : jl 0x2000022bec7 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000022e3a8 : jl 0x2000022e3d7 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000232c51 : jl 0x20000232c80 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000232f79 : jl 0x20000232fa3 ; jo 0x20000232f0b ; ret
0x0000020000233f41 : jl 0x20000233f70 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000023692e : jl 0x20000236959 ; and byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000023716a : jl 0x2000023714e ; ret
0x0000020000238663 : jl 0x20000238692 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000023980c : jl 0x2000023983b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000240fb8 : jl 0x20000240feb ; cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rbx]
0x0000020000295a56 : jl 0x20000295a84 ; push rax ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000367e55 : jl 0x20000367e84 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000369e68 : jl 0x20000369e97 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000036c878 : jl 0x2000036c87f ; add byte ptr [rax - 0x75], cl ; ret
0x000002000036e98b : jl 0x2000036e9ba ; add rsp, 0x20 ; pop r14 ; ret
0x000002000036ed42 : jl 0x2000036ed71 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000036fb71 : jl 0x2000036fba0 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003761b1 : jl 0x200003761e0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000376963 : jl 0x20000376991 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200003784de : jl 0x2000037850d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000379a75 : jl 0x20000379aa4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037a6a9 : jl 0x2000037a6d8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037fa33 : jl 0x2000037fa62 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000380ee6 : jl 0x20000380f12 ; cmp byte ptr [rsi + 0xf], ah ; ret 0x8d48
0x0000020000385063 : jl 0x20000385092 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000387cc1 : jl 0x20000387cf0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000388ee6 : jl 0x20000388f14 ; js 0x20000388f3a ; add esp, 0x60 ; pop rbp ; ret
0x000002000038b49a : jl 0x2000038b4c9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000038bf82 : jl 0x2000038bfb1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000038c2bc : jl 0x2000038c2eb ; add rsp, 0x20 ; pop r15 ; ret
0x000002000038f54e : jl 0x2000038f57d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000038fff0 : jl 0x2000039001d ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000039b951 : jl 0x2000039b980 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000039bd81 : jl 0x2000039bdb0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003a4517 : jl 0x200003a4546 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a81d2 : jl 0x200003a8201 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ac22a : jl 0x200003ac259 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ad79c : jl 0x200003ad7cb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b2f3c : jl 0x200003b2f6b ; js 0x200003b2f91 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003b346f : jl 0x200003b349e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003b65b0 : jl 0x200003b65df ; jo 0x200003b65a6 ; jmp 0x200003b65bb
0x00000200003d5072 : jl 0x200003d509c ; js 0x200003d5070 ; ret
0x00000200003d95eb : jl 0x200003d961a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003daa28 : jl 0x200003daa53 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003dadcc : jl 0x200003dadf7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003dafa4 : jl 0x200003dafcf ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003db0a8 : jl 0x200003db0d3 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003db144 : jl 0x200003db16f ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003db1e0 : jl 0x200003db20b ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003db570 : jl 0x200003db59b ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003db6c0 : jl 0x200003db6eb ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003e4073 : jl 0x200003e40a2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e53af : jl 0x200003e53de ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003e67d9 : jl 0x200003e6808 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e6b9c : jl 0x200003e6bcb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e77e4 : jl 0x200003e7813 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e92d1 : jl 0x200003e9300 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e9bf8 : jl 0x200003e9c27 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003eba97 : jl 0x200003ebac1 ; js 0x200003eba2a ; ret
0x00000200003ebd29 : jl 0x200003ebd58 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ecd45 : jl 0x200003ecd74 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003efea3 : jl 0x200003efe7f ; or al, 0xff ; ret
0x00000200003f196b : jl 0x200003f199a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fb623 : jl 0x200003fb652 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fc8f4 : jl 0x200003fc923 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003fde91 : jl 0x200003fdec0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003fe07a : jl 0x200003fe0a9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ff6ab : jl 0x200003ff6d5 ; js 0x200003ff63e ; ret
0x00000200003ffae3 : jl 0x200003ffb0d ; js 0x200003ffa76 ; ret
0x0000020000404a71 : jl 0x20000404aa0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004074aa : jl 0x200004074d4 ; js 0x2000040743d ; ret
0x000002000040f848 : jl 0x2000040f872 ; js 0x2000040f7da ; ret
0x000002000041088c : jl 0x200004108bb ; js 0x200004108e1 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000411a1e : jl 0x20000411a4d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000412ce1 : jl 0x20000412d0b ; and al, ch ; ret
0x000002000041568b : jl 0x200004156ba ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000416915 : jl 0x20000416944 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000041a998 : jl 0x2000041a9c6 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x000002000041b3b6 : jl 0x2000041b3e5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000042097c : jl 0x200004209ab ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000420bb7 : jl 0x20000420be6 ; add rsp, 0x20 ; pop r13 ; ret
0x0000020000423507 : jl 0x20000423536 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042427b : jl 0x200004242a5 ; js 0x2000042420e ; ret
0x000002000042690d : jl 0x2000042693c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000426d8a : jl 0x20000426db4 ; jo 0x20000426d1c ; ret
0x000002000042af23 : jl 0x2000042af4d ; xor bh, bh ; ret
0x000002000042b0cd : jl 0x2000042b0fc ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000042b9da : jl 0x2000042ba09 ; push 0x40c48348 ; pop r14 ; ret
0x000002000042e989 : jl 0x2000042e9b8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000431041 : jl 0x20000431070 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000433786 : jl 0x200004337b5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000434300 : jl 0x2000043432f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000435906 : jl 0x20000435930 ; and al, ch ; ret 0xf93b
0x0000020000435f46 : jl 0x20000435f75 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000436ef7 : jl 0x20000436f26 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004399d2 : jl 0x20000439a01 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000043c039 : jl 0x2000043c068 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043e940 : jl 0x2000043e96f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043ec30 : jl 0x2000043ec29 ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x000002000043f0c4 : jl 0x2000043f0f3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043f1a4 : jl 0x2000043f1d3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043f334 : jl 0x2000043f363 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043f3a3 : jl 0x2000043f3d2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043feab : jl 0x2000043feda ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044011f : jl 0x2000044014e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004416a0 : jl 0x200004416ca ; add esi, esi ; ret
0x0000020000441b84 : jl 0x20000441bb3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000442a5f : jl 0x20000442a5a ; or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000690a9
0x0000020000444233 : jl 0x20000444262 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000444430 : jl 0x2000044445f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000444551 : jl 0x20000444580 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000445a9e : jl 0x20000445acd ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000447b62 : jl 0x20000447b91 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000449c94 : jl 0x20000449cc3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044a5d1 : jl 0x2000044a600 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044b2af : jl 0x2000044b2de ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044cd30 : jl 0x2000044cd69 ; ret 0xf0ff
0x000002000044e9f4 : jl 0x2000044ea23 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000451ec9 : jl 0x20000451ef8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000454497 : jl 0x200004544c2 ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000045536f : jl 0x200004552fe ; ret 0x8948
0x00000200004565c0 : jl 0x200004565ef ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000045b7d0 : jl 0x2000045b7ff ; add rsp, 0x20 ; pop r14 ; ret
0x000002000045c806 : jl 0x2000045c835 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000045ee15 : jl 0x2000045ee44 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000045efe3 : jl 0x2000045f012 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000045ffa5 : jl 0x2000045ffd4 ; jo 0x2000045fffa ; add esp, 0x50 ; pop r14 ; ret
0x000002000046227b : jl 0x200004622aa ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000465469 : jl 0x20000465497 ; js 0x200004654bd ; add esp, 0x50 ; pop rbp ; ret
0x0000020000467f93 : jl 0x20000467fbd ; js 0x20000467f26 ; ret
0x0000020000469684 : jl 0x200004696ae ; js 0x20000469617 ; ret
0x000002000046bdb2 : jl 0x2000046bddd ; sbb byte ptr [rcx - 0x75], al ; ret 0x66c3
0x000002000046c8a5 : jl 0x2000046c8d4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046d581 : jl 0x2000046d5b0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046d7de : jl 0x2000046d808 ; js 0x2000046d771 ; ret
0x000002000046de22 : jl 0x2000046de51 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047248c : jl 0x200004724b6 ; sub bh, bh ; ret
0x00000200004724ea : jl 0x20000472519 ; jo 0x2000047253f ; add esp, 0x50 ; pop r14 ; ret
0x0000020000475593 : jl 0x200004755c2 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000476f62 : jl 0x20000476f91 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004797a7 : jl 0x200004797d6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000479b49 : jl 0x20000479b78 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047a51f : jl 0x2000047a54e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000047d541 : jl 0x2000047d570 ; push 0x40c48348 ; pop r14 ; ret
0x000002000047d5c7 : jl 0x2000047d5f6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000047f941 : jl 0x2000047f970 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000481f55 : jl 0x20000481f84 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004822c1 : jl 0x200004822eb ; xor cl, ch ; ret
0x0000020000482503 : jl 0x20000482532 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000482d00 : jl 0x20000482cf8 ; sldt word ptr [rcx - 0x75] ; ret 0x8b48
0x000002000048304b : jl 0x2000048307a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004836ee : jl 0x2000048371d ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000486504 : jl 0x20000486532 ; adc byte ptr [rax - 0x3fffffe9], bh ; ret
0x00000200004894e7 : jl 0x20000489516 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000490488 : jl 0x200004904b5 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200004927d1 : jl 0x20000492800 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000492a41 : jl 0x20000492a70 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049a332 : jl 0x2000049a360 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000049ca87 : jl 0x2000049cab6 ; js 0x2000049cadc ; add esp, 0x50 ; pop r14 ; ret
0x000002000049e147 : jl 0x2000049e176 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049ffeb : jl 0x200004a001a ; js 0x200004a0040 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004a4007 : jl 0x200004a4036 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a715f : jl 0x200004a718e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a7350 : jl 0x200004a737f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a8cbc : jl 0x200004a8ceb ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004a99fb : jl 0x200004a9a2a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ac638 : jl 0x200004ac667 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b00a6 : jl 0x200004b00d5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b1db3 : jl 0x200004b1dc1 ; setle al ; inc eax ; ret
0x00000200004b2d3f : jl 0x200004b2d6a ; adc byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200004b3e7c : jl 0x200004b3ea8 ; jmp 0x200004b3edc
0x00000200004b449a : jl 0x200004b44c9 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004b5e9f : jl 0x200004b5ece ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b704a : jl 0x200004b7079 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b8737 : jl 0x200004b8761 ; inc edx ; jmp 0x200004b86f8
0x00000200004b893b : jl 0x200004b896a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b8be6 : jl 0x200004b8c14 ; adc byte ptr [rcx - 0x75], al ; rol ebx, -1 ; ret 0x8349
0x00000200004b995a : jl 0x200004b9989 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004b9f86 : jl 0x200004b9fb5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004baa5a : jl 0x200004baa89 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004bfae6 : jl 0x200004bfb15 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004c1816 : jl 0x200004c1845 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c2ba6 : jl 0x200004c2bd5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c2ecc : jl 0x200004c2efb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c403b : jl 0x200004c406a ; push 0x40c48348 ; pop r14 ; ret
0x00000200004c40c7 : jl 0x200004c40f6 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004c4b02 : jl 0x200004c4b30 ; jo 0x200004c4b56 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004c6751 : jl 0x200004c6780 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c7010 : jl 0x200004c703f ; js 0x200004c7065 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004c7400 : jl 0x200004c742a ; js 0x200004c7393 ; ret
0x00000200004ca886 : jl 0x200004ca8b5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ce368 : jl 0x200004ce374 ; inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x00000200004d260b : jl 0x200004d263a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d468a : jl 0x200004d46b9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d49d3 : jl 0x200004d4a02 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d5f7c : jl 0x200004d5f4c ; dec dword ptr [rbx + rcx*4 + 5] ; ret 0xe7b2
0x00000200004d5f7b : jl 0x200004d5f4d ; dec dword ptr [rbx + rcx*4 + 5] ; ret 0xe7b2
0x00000200004d5f45 : jl 0x200004d5f74 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d8c9f : jl 0x200004d8cce ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d93f3 : jl 0x200004d9421 ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004d9e3a : jl 0x200004d9e69 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004db5cb : jl 0x200004db5f9 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004dcf0e : jl 0x200004dcf3d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004dd47d : jl 0x200004dd4ac ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e0a7d : jl 0x200004e0aac ; jo 0x200004e0ad2 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004e0cfc : jl 0x200004e0d2b ; and al, ch ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200004e0f8c : jl 0x200004e0fba ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200004e466b : jl 0x200004e469a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e630a : jl 0x200004e6335 ; sub byte ptr [rcx + 0x5f], al ; ret
0x00000200004ea583 : jl 0x200004ea5b2 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004ec531 : jl 0x200004ec560 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ee654 : jl 0x200004ee649 ; mov dword ptr [rip - 0x248d04], eax ; ret
0x00000200004eee40 : jl 0x200004eee6f ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200004f0fef : jl 0x200004f101d ; js 0x200004f1043 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004f3fef : jl 0x200004f401e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f4bb7 : jl 0x200004f4be6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f4db4 : jl 0x200004f4de3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f5ed4 : jl 0x200004f5f03 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f5f85 : jl 0x200004f5fb4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f67ad : jl 0x200004f67dc ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004f6cd0 : jl 0x200004f6cff ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f6d7e : jl 0x200004f6dad ; js 0x200004f6dd3 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004f9a36 : jl 0x200004f9a64 ; jo 0x200004f9a8a ; add esp, 0x50 ; pop rbp ; ret
0x00000200004fc094 : jl 0x200004fc0c3 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004fc657 : jl 0x200004fc686 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000503164 : jl 0x20000503192 ; jo 0x200005031b8 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000503d0d : jl 0x20000503d3c ; push 0x40c48348 ; pop r14 ; ret
0x00000200005046a4 : jl 0x200005046d3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000505e8a : jl 0x20000505eb6 ; and al, ch ; jle 0x20000505ead ; ret
0x000002000050724b : jl 0x2000050727a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005072e1 : jl 0x2000050730c ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000508289 : jl 0x200005082b8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000508439 : jl 0x20000508468 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000508650 : jl 0x2000050867c ; and al, ch ; add al, 0xfa ; ret 0x48ff
0x000002000050f5fc : jl 0x2000050f62b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000513793 : jl 0x200005137c2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000514d6e : jl 0x20000514d9d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000515f01 : jl 0x20000515f30 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000517038 : jl 0x20000517067 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000517d18 : jl 0x20000517d47 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000518056 : jl 0x20000518085 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000518d48 : jl 0x20000518d35 ; ret
0x000002000051c92b : jl 0x2000051c95a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051d074 : jl 0x2000051d09e ; js 0x2000051d007 ; ret
0x000002000051d732 : jl 0x2000051d761 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051d816 : jl 0x2000051d845 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051d8e0 : jl 0x2000051d8e7 ; ret
0x000002000051d9c6 : jl 0x2000051d9f5 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000051fe75 : jl 0x2000051fea4 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005203c6 : jl 0x200005203ec ; add byte ptr [rax], al ; ret
0x00000200005203e0 : jl 0x20000520409 ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x0000020000533076 : jl 0x200005330a5 ; mov rcx, rdi ; call 0x2000015dcc5
0x000002000053563c : jl 0x20000535629 ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000053563b : jl 0x2000053562a ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000053817e : jl 0x200005381ab ; add byte ptr [rdi], cl ; test byte ptr [rbx], bl ; ret
0x000002000057900d : jl 0x20000579002 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000579079 : jl 0x2000057906d ; push rsi ; ret
0x00000200005b2d48 : jl 0x200005b2d72 ; jo 0x200005b2cd3 ; ret 0x4104
0x00000200005b6253 : jl 0x200005b6282 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005b7cd2 : jl 0x200005b7d01 ; push 0x40c48348 ; pop r14 ; ret
0x00000200005b9d52 : jl 0x200005b9d80 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005bc88e : jl 0x200005bc8bd ; push 0x40c48348 ; pop r14 ; ret
0x00000200005bfa08 : jl 0x200005bfa37 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005c6447 : jl 0x200005c6476 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005c860e : jl 0x200005c863d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005cb708 : jl 0x200005cb737 ; jo 0x200005cb75d ; add esp, 0x50 ; pop r15 ; ret
0x00000200005cbca8 : jl 0x200005cbcd7 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005cd090 : jl 0x200005cd0bf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005cddca : jl 0x200005cddf9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005ce5c5 : jl 0x200005ce5f4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d04f5 : jl 0x200005d0520 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200005d16c0 : jl 0x200005d16ee ; sub byte ptr [rax - 0x74befabf], cl ; ret 0x8844
0x00000200005d24e3 : jl 0x200005d2512 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d346a : jl 0x200005d3499 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d368f : jl 0x200005d36be ; pop rax ; add rsp, 0x30 ; pop r12 ; ret
0x00000200005d497d : jl 0x200005d49ab ; js 0x200005d49d1 ; add esp, 0x50 ; pop rbp ; ret
0x00000200005d5b61 : jl 0x200005d5b90 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d5cb5 : jl 0x200005d5ce4 ; js 0x200005d5d0a ; add esp, 0x50 ; pop r14 ; ret
0x00000200005d5f78 : jl 0x200005d5fa7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d688a : jl 0x200005d68b4 ; js 0x200005d681d ; ret
0x00000200005d8e23 : jl 0x200005d8e52 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005da5f7 : jl 0x200005da625 ; push 0x40c48348 ; pop rbp ; ret
0x00000200005dc557 : jl 0x200005dc586 ; js 0x200005dc5ac ; add esp, 0x50 ; pop r14 ; ret
0x00000200005dc739 : jl 0x200005dc768 ; js 0x200005dc78e ; add esp, 0x50 ; pop r14 ; ret
0x00000200005dc97f : jl 0x200005dc9ae ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e4db9 : jl 0x200005e4de8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e54dc : jl 0x200005e550b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e5bc9 : jl 0x200005e5bf8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e7262 : jl 0x200005e728c ; jo 0x200005e71f5 ; ret
0x00000200005e81c7 : jl 0x200005e81f6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005eb198 : jl 0x200005eb1c7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005ef83c : jl 0x200005ef86b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005ef9e3 : jl 0x200005efa12 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f17f3 : jl 0x200005f1822 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f44a3 : jl 0x200005f44d2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005f6b5e : jl 0x200005f6b8d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f9124 : jl 0x200005f9151 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200005fb654 : jl 0x200005fb683 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000600467 : jl 0x20000600496 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000601fa1 : jl 0x20000601fcf ; sub byte ptr [rcx + 0x33402474], cl ; ret 0x8b48
0x00000200006029fc : jl 0x20000602a2b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000605d8b : jl 0x20000605dba ; push 0x40c48348 ; pop r14 ; ret
0x0000020000608880 : jl 0x200006088aa ; js 0x20000608813 ; ret
0x0000020000608a36 : jl 0x20000608a65 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060acaf : jl 0x2000060acde ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060d519 : jl 0x2000060d548 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060d85e : jl 0x2000060d888 ; cmp dh, dh ; ret
0x00000200006118c4 : jl 0x200006118f3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000612e8e : jl 0x20000612ebd ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000614256 : jl 0x20000614285 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006177a9 : jl 0x200006177d4 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200006193c3 : jl 0x200006193f2 ; add rsp, 0x20 ; pop r12 ; ret
0x00000200006195d5 : jl 0x20000619600 ; adc byte ptr [rcx - 0x75], al ; ret 0x48c3
0x000002000061a219 : jl 0x2000061a246 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000061cf7b : jl 0x2000061cfa5 ; sub bh, bh ; ret
0x000002000061d161 : jl 0x2000061d18b ; sub bh, bh ; ret
0x000002000061e5af : jl 0x2000061e5de ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061ebcd : jl 0x2000061ebfc ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000061f807 : jl 0x2000061f836 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061fe26 : jl 0x2000061fe50 ; js 0x2000061fdb9 ; ret
0x0000020000624baa : jl 0x20000624bd9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006273f9 : jl 0x20000627428 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000628082 : jl 0x200006280b1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000062af28 : jl 0x2000062af57 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000062c311 : jl 0x2000062c340 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000062e267 : jl 0x2000062e296 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000062f6a8 : jl 0x2000062f6d7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000632393 : jl 0x200006323c2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006329b1 : jl 0x200006329e0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000063347e : jl 0x200006334ac ; and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x0000020000642135 : jl 0x20000642160 ; and byte ptr [rcx - 0x75], cl ; ret 0x48c3
0x00000200006421ca : jl 0x200006421f5 ; and byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200006427f2 : jl 0x20000642821 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000642d60 : jl 0x20000642d8f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006431d2 : jl 0x20000643201 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000643e22 : jl 0x20000643e51 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006460cd : jl 0x200006460fc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064ca87 : jl 0x2000064cab2 ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000064d0da : jl 0x2000064d105 ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000064d83e : jl 0x2000064d86d ; js 0x2000064d893 ; add esp, 0x50 ; pop r14 ; ret
0x000002000064df3b : jl 0x2000064df6a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064e41f : jl 0x2000064e44e ; push 0x40c48348 ; pop r14 ; ret
0x0000020000653970 : jl 0x2000065399f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065ac50 : jl 0x2000065ac1f ; adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000065c561 : jl 0x2000065c590 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006655d6 : jl 0x200006655df ; mov al, 1 ; ret
0x0000020000665936 : jl 0x20000665965 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000666551 : jl 0x20000666580 ; sbb byte ptr [rcx + rcx*4 + 0x1a], cl ; mov rax, r9 ; ret
0x00000200006668d8 : jl 0x20000666904 ; xor byte ptr [rbp + rcx*4 + 5], cl ; ret 0xbc46
0x0000020000667f1c : jl 0x20000667f4b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066852d : jl 0x2000066855c ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000668647 : jl 0x20000668676 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000668dc5 : jl 0x20000668df4 ; push 0x40c48348 ; pop r14 ; ret
0x000002000066a367 : jl 0x2000066a396 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066a7d4 : jl 0x2000066a803 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000066ad76 : jl 0x2000066ada5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066b87c : jl 0x2000066b8aa ; and byte ptr [rbp + rcx*4 + 0x3d], cl ; mov dl, 0x71 ; ret
0x000002000066bdc5 : jl 0x2000066bdf4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066c255 : jl 0x2000066c284 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066c4e3 : jl 0x2000066c512 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066cb78 : jl 0x2000066cba7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066d67e : jl 0x2000066d6ad ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066d863 : jl 0x2000066d892 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066e2ea : jl 0x2000066e319 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066e831 : jl 0x2000066e860 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066f90f : jl 0x2000066f93e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067203b : jl 0x2000067206a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006726b2 : jl 0x200006726e1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000672d54 : jl 0x20000672d83 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000672dfa : jl 0x20000672e29 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006735db : jl 0x2000067360a ; push 0x50c48348 ; pop r14 ; ret
0x00000200006736a9 : jl 0x200006736d8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000673af8 : jl 0x20000673b27 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006749f1 : jl 0x20000674a20 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000675593 : jl 0x200006755c2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000677947 : jl 0x20000677975 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200006782a4 : jl 0x200006782d3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000067a507 : jl 0x2000067a536 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067d574 : jl 0x2000067d5a3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067d717 : jl 0x2000067d746 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067f2ff : jl 0x2000067f32e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067f385 : jl 0x2000067f3b4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067fb29 : jl 0x2000067fb58 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006805d5 : jl 0x20000680604 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006817c3 : jl 0x200006817f2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000681f8f : jl 0x20000681fbe ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000682435 : jl 0x20000682464 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000068d7cd : jl 0x2000068d7fc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000068daa0 : jl 0x2000068dacf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006cf207 : jl 0x200006cf235 ; push rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200006eb117 : jl 0x200006eb146 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006f73c9 : jl 0x200006f73f8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006f945e : jl 0x200006f942a ; dec dword ptr [rax - 1] ; ret
0x00000200006fff8a : jl 0x200006fffb9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007015eb : jl 0x20000701619 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000070f32c : jl 0x2000070f35a ; js 0x2000070f380 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000710e30 : jl 0x20000710e5b ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000711a67 : jl 0x20000711a95 ; push 0x50c48348 ; pop rbp ; ret
0x0000020000712db0 : jl 0x20000712ddf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000713dd0 : jl 0x20000713da8 ; ret
0x0000020000713efa : jl 0x20000713f29 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000722778 : jl 0x2000072276a ; ret 0x49ff
0x0000020000722b3b : jl 0x20000722b42 ; dec dword ptr [rcx + rcx*4 + 0x2d] ; mov bl, 0xe9 ; ret 0xe9ff
0x0000020000724cec : jl 0x20000724d17 ; and al, ch ; lodsb al, byte ptr [rsi] ; ret
0x0000020000724d07 : jl 0x20000724d32 ; and al, ch ; xchg eax, ecx ; ret
0x0000020000724e4b : jl 0x20000724e76 ; and al, ch ; ret 0xffa2
0x000002000072a44b : jl 0x2000072a47a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000072a835 : jl 0x2000072a864 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000072c1d8 : jl 0x2000072c205 ; and byte ptr [rcx + 0xf], al ; mov bh, 0xc0 ; ret
0x000002000072d2c1 : jl 0x2000072d2f0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000072d59a : jl 0x2000072d5c9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000072efdb : jl 0x2000072f00a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000021da0 : jle 0x20000021d25 ; ret 0x94
0x0000020000022d6d : jle 0x20000022d24 ; or dl, byte ptr [rcx + 0x21] ; ret
0x0000020000022f3f : jle 0x20000022f67 ; je 0x20000022eed ; pop rdx ; ret 0x594d
0x0000020000096115 : jle 0x200000960eb ; mov byte ptr [rdx], cl ; ret
0x0000020000110b93 : jle 0x20000110b98 ; ret
0x00000200001121ab : jle 0x200001121bf ; add byte ptr [rax - 0x75], cl ; push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000015bffe : jle 0x2000015c010 ; add byte ptr [rax], al ; nop ; ret
0x00000200001815dd : jle 0x200001815ed ; add byte ptr [rbx + rsi*2 - 0xa], dh ; ret
0x000002000018bf17 : jle 0x2000018bf34 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001f301a : jle 0x200001f302d ; lock dec dword ptr [rip + 0xc303d] ; ret
0x00000200001f3038 : jle 0x200001f304b ; lock dec dword ptr [rip + 0xc3023] ; ret
0x00000200001f354b : jle 0x200001f3500 ; mov eax, 1 ; ret
0x0000020000222d25 : jle 0x20000222d2f ; add byte ptr [rbx - 0x7bf0fe03], al ; ret
0x0000020000408b0e : jle 0x20000408b54 ; adc eax, 0x1518d00 ; mov eax, edx ; ret
0x0000020000408b0e : jle 0x20000408b55 ; adc eax, 0x1518d00 ; mov eax, edx ; ret
0x000002000042448e : jle 0x200004244e2 ; sar bh, cl ; add rsp, 0x60 ; pop rbx ; ret
0x000002000043162e : jle 0x2000043161e ; ret
0x000002000047d5b3 : jle 0x2000047d542 ; ret
0x000002000049ecbe : jle 0x2000049ece2 ; mov ebp, 0xf694ebff ; ret 0x7504
0x00000200004a157a : jle 0x200004a1556 ; ret 0xb9ff
0x00000200004a33b3 : jle 0x200004a33b8 ; ret
0x00000200004a9200 : jle 0x200004a91f4 ; dec dword ptr [rax - 0x75] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x870f
0x00000200004c3e39 : jle 0x200004c3df7 ; push qword ptr [rbx] ; ror byte ptr [rbp - 0x75], cl ; ret
0x0000020000505e8e : jle 0x20000505ea9 ; ret
0x000002000052039e : jle 0x20000520347 ; sbb byte ptr [rax], al ; ret
0x00000200005381fe : jle 0x20000538258 ; ret 0x45ff
0x0000020000544760 : jle 0x2000054474d ; push rsi ; ret
0x000002000054cc56 : jle 0x2000054cc27 ; call 0x1ffc3e01962
0x000002000065a286 : jle 0x2000065a264 ; ret
0x0000020000669216 : jle 0x200006691aa ; ret
0x0000020000674131 : jle 0x200006740d0 ; ret
0x000002000067b27b : jle 0x2000067b255 ; cmp eax, 3 ; jne 0x2000067b255 ; xor eax, eax ; ret
0x000002000067b24a : jle 0x2000067b289 ; mov eax, 1 ; ret
0x000002000068017b : jle 0x2000068018d ; mov dword ptr [rax + 0x8168], r8d ; ret
0x000002000068f0ae : jle 0x2000068f0b9 ; add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x00000200006f94af : jle 0x200006f947a ; push rsi ; ret
0x000002000072409e : jle 0x200007240b4 ; mov bh, 0xff ; nop ; jmp 0x200007002b1
0x000002000072a70e : jle 0x2000072a6dd ; ret 0x48ff
0x00000200004064a2 : jmp 0x1ff83896496
0x000002000060cdec : jmp 0x1ff83a9cdb4
0x00000200001df90c : jmp 0x1ff8b67038c
0x000002000066edd1 : jmp 0x1ff8bafffc7
0x000002000010a3cd : jmp 0x1ff8d3518f9
0x00000200002008a4 : jmp 0x1ff8d6cdae2
0x00000200005382eb : jmp 0x1ffaf36dee1
0x000002000064d226 : jmp 0x1ffb29a5f7e
0x00000200004da393 : jmp 0x1ffb5105783
0x00000200004832b2 : jmp 0x1ffc190f544
0x000002000038060a : jmp 0x1ffc1fa111a
0x000002000039c281 : jmp 0x1ffc1fc4d9e
0x000002000004215d : jmp 0x1ffc22f6968
0x00000200001b1775 : jmp 0x1ffc23e648a
0x00000200006e4624 : jmp 0x1ffc2477136
0x00000200003fcde6 : jmp 0x1ffc26b917a
0x00000200004c0fd8 : jmp 0x1ffc26f59e0
0x000002000020c06e : jmp 0x1ffc2a4087b
0x00000200001a51d9 : jmp 0x1ffc2a59602
0x00000200001f8356 : jmp 0x1ffc2aac77f
0x000002000039bad1 : jmp 0x1ffc2bd02e3
0x00000200003c1731 : jmp 0x1ffc2c75f6a
0x000002000043654b : jmp 0x1ffc2c87553
0x0000020000554860 : jmp 0x1ffc2d89168
0x0000020000573cd6 : jmp 0x1ffc2e2850f
0x00000200005fd5b1 : jmp 0x1ffc2eb22bd
0x000002000063d8b7 : jmp 0x1ffc2ef20f0
0x000002000070f96f : jmp 0x1ffc2f24184
0x00000200004b728c : jmp 0x1ffc2f7fd7d
0x00000200006e4611 : jmp 0x1ffc2f9871f
0x00000200006e4650 : jmp 0x1ffc2f9875e
0x00000200006f91dc : jmp 0x1ffc2fadaee
0x00000200001894b6 : jmp 0x1ffc317dcc7
0x000002000011ea90 : jmp 0x1ffc32273e6
0x000002000037597d : jmp 0x1ffc33aa588
0x00000200004e3fc5 : jmp 0x1ffc36bcd16
0x00000200004b2cd5 : jmp 0x1ffc36e78e7
0x000002000068fd6d : jmp 0x1ffc37186b7
0x0000020000504c2b : jmp 0x1ffc373fc1c
0x00000200004cc8cf : jmp 0x1ffc37fb1d7
0x0000020000078000 : jmp 0x1ffc392c429
0x0000020000125618 : jmp 0x1ffc3959ea1
0x00000200000b0ac6 : jmp 0x1ffc39652db
0x00000200001e6c80 : jmp 0x1ffc3a1b588
0x0000020000174c56 : jmp 0x1ffc3c651ea
0x000002000018f494 : jmp 0x1ffc3cf049c
0x00000200004abc30 : jmp 0x1ffc3d60938
0x00000200001406ca : jmp 0x1ffc3d6921c
0x00000200004ef212 : jmp 0x1ffc3daf1e0
0x0000020000555ff1 : jmp 0x1ffc3e0a4f9
0x000002000055622e : jmp 0x1ffc3e0af36
0x00000200005ee848 : jmp 0x1ffc3e2f760
0x00000200005e5318 : jmp 0x1ffc3ea52c6
0x00000200001d9364 : jmp 0x1ffc41d5bf0
0x000002000055497b : jmp 0x1ffc44c1683
0x000002000058b779 : jmp 0x1ffc44eb793
0x00000200004ebcfc : jmp 0x1ffc4d20606
0x00000200003f0ea9 : jmp 0x1ffcd014099
0x00000200002295b5 : jmp 0x1ffcd2722cf
0x0000020000627e21 : jmp 0x1ffd06dc23c
0x000002000054e337 : jmp 0x1ffd1582b84
0x00000200004bb10e : jmp 0x1ffd24af315
0x0000020000474a8b : jmp 0x1ffd80a3313
0x00000200000110bb : jmp 0x1ffd98ad2f1
0x000002000070d74f : jmp 0x1ffe1709396
0x00000200003b2ab1 : jmp 0x1ffe1fc72c2
0x000002000038f622 : jmp 0x1ffebc4b8b4
0x00000200001343f7 : jmp 0x1fffad51506
0x000002000006d484 : jmp 0x1fffb989773
0x0000020000553bf4 : jmp 0x1fffd1833fb
0x0000020000204ee8 : jmp 0x1fffd8bd104
0x00000200000dca13 : jmp 0x1ffff0df166
0x0000020000428507 : jmp 0x1ffffaa6e35
0x00000200000b43fe : jmp 0x1ffffd9cf4f
0x00000200000117b4 : jmp 0x200000117c9
0x0000020000025f10 : jmp 0x20000025d63
0x0000020000025c1e : jmp 0x20000025e22
0x000002000038aa64 : jmp 0x20000026d1e
0x000002000052011f : jmp 0x20000026d22
0x00000200004dfff3 : jmp 0x2000002aca7
0x0000020000167cab : jmp 0x20000030afa
0x0000020000031db7 : jmp 0x20000031ab3
0x000002000003249a : jmp 0x2000003206e
0x0000020000032425 : jmp 0x200000320d4
0x0000020000033e47 : jmp 0x20000033e0c
0x0000020000168c7c : jmp 0x20000034ee9
0x0000020000168c8e : jmp 0x20000034f01
0x0000020000169477 : jmp 0x20000035686
0x0000020000037575 : jmp 0x200000373ae
0x000002000003974e : jmp 0x20000039742
0x000002000003992c : jmp 0x200000397e4
0x000002000003bb15 : jmp 0x2000003b64c
0x000002000003c405 : jmp 0x2000003be57
0x000002000003c5cd : jmp 0x2000003c593
0x000002000003e9b4 : jmp 0x2000003e1c4
0x000002000003ffa9 : jmp 0x2000003fe9e
0x0000020000040269 : jmp 0x2000003ff97
0x0000020000040f9b : jmp 0x20000040a51
0x0000020000040eb9 : jmp 0x20000040ab1
0x0000020000041a93 : jmp 0x20000041165
0x0000020000041792 : jmp 0x20000041528
0x0000020000041c23 : jmp 0x200000415e6
0x0000020000044c5d : jmp 0x200000444f4
0x00000200001cd38a : jmp 0x20000045498
0x000002000004650b : jmp 0x200000460c5
0x0000020000046ec7 : jmp 0x200000460c6
0x000002000004644d : jmp 0x2000004611b
0x000002000004738e : jmp 0x2000004666f
0x0000020000047207 : jmp 0x20000046f13
0x0000020000047411 : jmp 0x2000004723e
0x0000020000048c25 : jmp 0x20000048bf2
0x000002000004b4e9 : jmp 0x2000004b233
0x000002000016fb46 : jmp 0x2000004bd9e
0x000002000004bfca : jmp 0x2000004bf8f
0x000002000004d9df : jmp 0x2000004d9a5
0x000002000004dc53 : jmp 0x2000004dac4
0x000002000004eb32 : jmp 0x2000004e750
0x000002000005262d : jmp 0x200000522ce
0x0000020000055c4a : jmp 0x20000055b5f
0x00000200000577cf : jmp 0x20000056c53
0x0000020000171b81 : jmp 0x20000056c55
0x0000020000058e14 : jmp 0x20000058e08
0x00000200000594f1 : jmp 0x2000005942b
0x000002000005a2d7 : jmp 0x2000005a2b4
0x0000020000172daa : jmp 0x2000005a2c7
0x000002000005cf89 : jmp 0x2000005cf12
0x000002000005f2a7 : jmp 0x2000005f2ba
0x0000020000174eed : jmp 0x2000006081b
0x000002000006178b : jmp 0x20000061037
0x000002000017553b : jmp 0x20000061841
0x000002000017559d : jmp 0x2000006184b
0x00000200001755d4 : jmp 0x20000061874
0x0000020000175874 : jmp 0x20000061b5d
0x00000200000667c6 : jmp 0x20000066374
0x0000020000067258 : jmp 0x20000066c97
0x00000200000678a9 : jmp 0x2000006746e
0x0000020000067ccd : jmp 0x20000067a6a
0x0000020000067d14 : jmp 0x20000067c0e
0x0000020000177172 : jmp 0x200000680f0
0x00000200001775aa : jmp 0x200000682ef
0x000002000006871c : jmp 0x2000006858b
0x000002000048cdbe : jmp 0x20000068fd2
0x000002000043b41e : jmp 0x20000068fd3
0x0000020000446610 : jmp 0x2000006a613
0x000002000006baa3 : jmp 0x2000006b83e
0x000002000006f2a7 : jmp 0x2000006e7eb
0x000002000006f65e : jmp 0x2000006f546
0x000002000006fbb2 : jmp 0x2000006fb77
0x0000020000070182 : jmp 0x20000070147
0x00000200000710bd : jmp 0x20000070fa6
0x000002000044cc0f : jmp 0x200000712cf
0x0000020000071dbf : jmp 0x20000071c74
0x000002000017b222 : jmp 0x2000007220e
0x0000020000073a1b : jmp 0x200000738f3
0x000002000017ce56 : jmp 0x20000075afb
0x000002000017cf83 : jmp 0x200000764e3
0x000002000017d0a5 : jmp 0x200000768b8
0x000002000017ea9c : jmp 0x2000007bacf
0x000002000007c6f1 : jmp 0x2000007c305
0x000002000007c807 : jmp 0x2000007c3aa
0x000002000017f50a : jmp 0x2000007cc23
0x000002000017f570 : jmp 0x2000007cc64
0x000002000007d0da : jmp 0x2000007cd01
0x000002000007efa2 : jmp 0x2000007ed78
0x0000020000080e80 : jmp 0x20000080bdf
0x0000020000180f60 : jmp 0x2000008182a
0x0000020000082434 : jmp 0x200000823f9
0x0000020000083262 : jmp 0x20000083224
0x0000020000087082 : jmp 0x20000087047
0x00000200000889ca : jmp 0x2000008858c
0x0000020000088dbb : jmp 0x20000088da2
0x000002000008b1d2 : jmp 0x2000008b04c
0x000002000008c751 : jmp 0x2000008c788
0x000002000008d368 : jmp 0x2000008d266
0x000002000008d527 : jmp 0x2000008d486
0x000002000008e66d : jmp 0x2000008e6d1
0x0000020000090180 : jmp 0x2000008ff56
0x00000200000901c4 : jmp 0x20000090012
0x00000200000904d6 : jmp 0x2000009033a
0x0000020000090776 : jmp 0x200000905fa
0x00000200001850e3 : jmp 0x20000090686
0x00000200001850d8 : jmp 0x20000090833
0x0000020000185289 : jmp 0x2000009156f
0x00000200001854ab : jmp 0x20000091eb9
0x00000200000937f2 : jmp 0x200000937b8
0x0000020000094c3a : jmp 0x20000094c00
0x0000020000095e5f : jmp 0x20000095e24
0x00000200000960c3 : jmp 0x20000096089
0x00000200001861b7 : jmp 0x20000096172
0x0000020000097027 : jmp 0x20000096faf
0x00000200000977ef : jmp 0x20000097502
0x00000200000998f1 : jmp 0x200000998b7
0x000002000009ac39 : jmp 0x2000009aa95
0x000002000009bde3 : jmp 0x2000009bd03
0x0000020000187835 : jmp 0x2000009beb9
0x000002000009d05d : jmp 0x2000009cf65
0x000002000009d3b5 : jmp 0x2000009d347
0x000002000009d55d : jmp 0x2000009d5b2
0x0000020000189851 : jmp 0x200000a3487
0x0000020000189873 : jmp 0x200000a3511
0x00000200000a490c : jmp 0x200000a4855
0x000002000018a637 : jmp 0x200000a6841
0x000002000018a672 : jmp 0x200000a688f
0x000002000018a6d6 : jmp 0x200000a69c4
0x000002000018a722 : jmp 0x200000a69d9
0x00000200000aa893 : jmp 0x200000aa858
0x00000200000ad99d : jmp 0x200000ad6b0
0x00000200000aecaf : jmp 0x200000aec74
0x00000200000b3d0e : jmp 0x200000b3bf6
0x00000200000b4183 : jmp 0x200000b4131
0x000002000018eb92 : jmp 0x200000b4467
0x000002000019098b : jmp 0x200000ba1b6
0x00000200000bc880 : jmp 0x200000bc846
0x0000020000191f56 : jmp 0x200000be1aa
0x0000020000191f1d : jmp 0x200000be1ae
0x0000020000191f8d : jmp 0x200000be1c5
0x0000020000191fa0 : jmp 0x200000be1de
0x0000020000191fcb : jmp 0x200000be20c
0x0000020000191ff8 : jmp 0x200000be247
0x0000020000192008 : jmp 0x200000be26b
0x0000020000192018 : jmp 0x200000be27c
0x0000020000192029 : jmp 0x200000be29b
0x0000020000192046 : jmp 0x200000be2e2
0x0000020000192037 : jmp 0x200000be2f2
0x000002000019207d : jmp 0x200000be2f8
0x00000200000bf0b5 : jmp 0x200000bf07a
0x0000020000192c25 : jmp 0x200000c1a45
0x0000020000192e53 : jmp 0x200000c227d
0x00000200000c27a6 : jmp 0x200000c276b
0x00000200000c28df : jmp 0x200000c28a5
0x00000200000c395a : jmp 0x200000c3920
0x00000200000c4d52 : jmp 0x200000c4d18
0x0000020000194d0e : jmp 0x200000c875f
0x00000200000cba8d : jmp 0x200000cb098
0x00000200000cb8a9 : jmp 0x200000cbb59
0x00000200000cc43f : jmp 0x200000cbe77
0x0000020000195e6e : jmp 0x200000ccb9d
0x0000020000195e20 : jmp 0x200000ccc47
0x00000200000cd16e : jmp 0x200000ccf09
0x00000200001968f5 : jmp 0x200000ce6da
0x00000200001968aa : jmp 0x200000ce813
0x00000200000cec90 : jmp 0x200000cea1d
0x00000200000cfaed : jmp 0x200000cfad8
0x00000200000d0c1a : jmp 0x200000d0c10
0x0000020000197c5d : jmp 0x200000d2851
0x00000200000d2b40 : jmp 0x200000d2a87
0x00000200000d45fd : jmp 0x200000d45c3
0x0000020000198605 : jmp 0x200000d486d
0x00000200000d66e2 : jmp 0x200000d66c9
0x0000020000198d3f : jmp 0x200000d69ee
0x00000200000d7112 : jmp 0x200000d701c
0x00000200000e01a6 : jmp 0x200000e0152
0x000002000019a5e9 : jmp 0x200000e14f9
0x00000200000e2731 : jmp 0x200000e25de
0x00000200000e29db : jmp 0x200000e29a1
0x00000200000e3d64 : jmp 0x200000e3d2a
0x00000200000e43b2 : jmp 0x200000e4377
0x00000200000e4726 : jmp 0x200000e46ec
0x000002000019bc6d : jmp 0x200000e7556
0x00000200000e8ad8 : jmp 0x200000e8a9e
0x00000200000ecaee : jmp 0x200000ecab4
0x00000200000ece63 : jmp 0x200000ecccf
0x00000200000ecfb8 : jmp 0x200000ecd9a
0x00000200000ecea3 : jmp 0x200000ece09
0x00000200000ecfa0 : jmp 0x200000ece38
0x00000200000f0ab8 : jmp 0x200000f0a7e
0x000002000019f8b7 : jmp 0x200000f2005
0x00000200000f278a : jmp 0x200000f2750
0x00000200000f524d : jmp 0x200000f5213
0x00000200000f5b0b : jmp 0x200000f5ad1
0x00000200000f831e : jmp 0x200000f8030
0x00000200000f92f2 : jmp 0x200000f92b8
0x00000200001a17ac : jmp 0x200000fa16d
0x00000200000fa744 : jmp 0x200000fa678
0x00000200000fb493 : jmp 0x200000fb458
0x00000200000fb64e : jmp 0x200000fb613
0x00000200001a4ca6 : jmp 0x20000104441
0x00000200001a4d19 : jmp 0x200001044ba
0x0000020000105a91 : jmp 0x20000105a57
0x00000200001a7d12 : jmp 0x2000010cf11
0x00000200001a834b : jmp 0x2000010e612
0x0000020000110d49 : jmp 0x20000110d0f
0x00000200001a9cf5 : jmp 0x20000111644
0x00000200001127cd : jmp 0x2000011274e
0x00000200001aa20d : jmp 0x20000112a23
0x00000200001144b5 : jmp 0x200001144a8
0x000002000011551c : jmp 0x200001153f7
0x00000200001aae83 : jmp 0x200001161f1
0x00000200001ab6a5 : jmp 0x20000118c76
0x0000020000119f61 : jmp 0x20000119f27
0x000002000011f7ec : jmp 0x2000011f830
0x00000200001206b2 : jmp 0x200001205cc
0x000002000012858e : jmp 0x20000128327
0x0000020000128895 : jmp 0x200001285a2
0x000002000012888b : jmp 0x20000128872
0x00000200001b2a99 : jmp 0x2000012c1f3
0x0000020000130308 : jmp 0x200001302ce
0x0000020000130540 : jmp 0x20000130506
0x00000200001b5fa7 : jmp 0x200001321f7
0x00000200001b5f43 : jmp 0x200001321fb
0x00000200001b5fbe : jmp 0x20000132227
0x00000200001b5fce : jmp 0x20000132231
0x0000020000132be1 : jmp 0x20000132ba7
0x0000020000132f74 : jmp 0x20000132f7c
0x00000200001b7170 : jmp 0x20000135c8f
0x00000200001b77a2 : jmp 0x20000136e48
0x00000200001b7ff1 : jmp 0x20000138a26
0x000002000013a5f4 : jmp 0x2000013a601
0x00000200001b9709 : jmp 0x2000013b2f3
0x00000200001b9b8e : jmp 0x2000013b77f
0x0000020000515e34 : jmp 0x2000013bc6f
0x00000200001ba226 : jmp 0x2000013c67e
0x00000200001bacac : jmp 0x2000013e1e3
0x000002000051e133 : jmp 0x2000013f14b
0x000002000013fbe0 : jmp 0x2000013fba6
0x0000020000140bbc : jmp 0x20000140b82
0x000002000014130c : jmp 0x200001412d1
0x0000020000147269 : jmp 0x200001471ab
0x0000020000147f67 : jmp 0x20000147e32
0x0000020000150299 : jmp 0x2000015c582
0x0000020000161c4b : jmp 0x20000161c10
0x0000020000161c4a : jmp 0x20000161c11
0x00000200000267a4 : jmp 0x20000164fb3
0x000002000016bc5e : jmp 0x2000016bcab
0x000002000016bc9e : jmp 0x2000016bcac
0x000002000016bd8b : jmp 0x2000016bdd3
0x0000020000046f19 : jmp 0x2000016e670
0x000002000016fd46 : jmp 0x2000016fd0c
0x000002000005b3f4 : jmp 0x20000173786
0x0000020000064a13 : jmp 0x2000017668d
0x0000020000067187 : jmp 0x2000017703b
0x0000020000177559 : jmp 0x2000017759d
0x000002000006c900 : jmp 0x20000178b8f
0x00000200000774cc : jmp 0x2000017d570
0x0000020000180eff : jmp 0x20000180e08
0x0000020000081f3a : jmp 0x200001810d5
0x00000200001857bd : jmp 0x2000018580a
0x00000200001857fd : jmp 0x2000018580b
0x0000020000093043 : jmp 0x2000018584c
0x0000020000186680 : jmp 0x20000186646
0x000002000018a729 : jmp 0x2000018a73b
0x00000200000b137c : jmp 0x2000018d5ee
0x00000200000b13ac : jmp 0x2000018d60d
0x00000200000b27bf : jmp 0x2000018dd9c
0x000002000018f60a : jmp 0x2000018f61b
0x000002000019905d : jmp 0x20000199056
0x000002000019905c : jmp 0x20000199057
0x00000200000f3d3f : jmp 0x2000019fff3
0x000002000010b224 : jmp 0x200001a74ec
0x0000020000121de6 : jmp 0x200001ae0c4
0x0000020000121e94 : jmp 0x200001ae13d
0x00000200001b8c95 : jmp 0x200001b8cd2
0x00000200001c922d : jmp 0x200001c91f2
0x00000200001ccfe7 : jmp 0x200001cd009
0x00000200001cd032 : jmp 0x200001cd043
0x00000200001ce934 : jmp 0x200001ceadc
0x00000200001d1378 : jmp 0x200001d138d
0x00000200001d2193 : jmp 0x200001d21a0
0x00000200001d2ff3 : jmp 0x200001d3004
0x00000200001ddeb4 : jmp 0x200001ddec4
0x00000200001e4d20 : jmp 0x200001e4d43
0x00000200001e7f50 : jmp 0x200001e7f63
0x00000200001ee294 : jmp 0x200001ee2a1
0x00000200001fb164 : jmp 0x200001fb1ca
0x00000200001fcced : jmp 0x200001fccb3
0x0000020000204d46 : jmp 0x20000204d7c
0x0000020000205745 : jmp 0x200002058dd
0x000002000020863d : jmp 0x2000020862e
0x000002000020a0b8 : jmp 0x2000020a063
0x000002000020c8dd : jmp 0x2000020c91d
0x000002000020c8d0 : jmp 0x2000020c962
0x000002000020c942 : jmp 0x2000020c964
0x000002000020ca9b : jmp 0x2000020ca8d
0x000002000020d10a : jmp 0x2000020cfd3
0x000002000020d099 : jmp 0x2000020d0d9
0x000002000020d08c : jmp 0x2000020d130
0x000002000020dc74 : jmp 0x2000020dc89
0x000002000020df1c : jmp 0x2000020df31
0x0000020000211bf3 : jmp 0x20000211bfd
0x0000020000211d0b : jmp 0x20000211d15
0x00000200002129ba : jmp 0x200002129c4
0x0000020000212ada : jmp 0x20000212ae4
0x0000020000212c64 : jmp 0x20000212c6e
0x0000020000212e2c : jmp 0x20000212e36
0x0000020000214288 : jmp 0x20000214292
0x000002000021443c : jmp 0x20000214446
0x000002000022070a : jmp 0x2000022071f
0x0000020000225550 : jmp 0x200002255bb
0x000002000022a841 : jmp 0x2000022a84b
0x000002000022a8bd : jmp 0x2000022a8c7
0x000002000022a8c7 : jmp 0x2000022a8d9
0x000002000022ab65 : jmp 0x2000022ab96
0x000002000022abe4 : jmp 0x2000022abaa
0x000002000022c393 : jmp 0x2000022c452
0x000002000022ee88 : jmp 0x2000022ee4e
0x000002000023356c : jmp 0x2000022f7a6
0x00000200002377a3 : jmp 0x200002377d1
0x0000020000253870 : jmp 0x20000253836
0x00000200004b6eb4 : jmp 0x20000294e29
0x00000200003715bd : jmp 0x200003643b7
0x0000020000371799 : jmp 0x20000364ac2
0x0000020000371926 : jmp 0x20000365484
0x0000020000371cab : jmp 0x200003670b4
0x0000020000371d04 : jmp 0x200003671fb
0x0000020000371efe : jmp 0x20000367498
0x0000020000368811 : jmp 0x200003686c3
0x0000020000372935 : jmp 0x20000369dea
0x00000200003729a5 : jmp 0x20000369f4d
0x00000200003729a4 : jmp 0x20000369f4e
0x000002000036c9f0 : jmp 0x2000036c9b6
0x0000020000374674 : jmp 0x2000036ced2
0x0000020000382133 : jmp 0x200003820f9
0x0000020000383e60 : jmp 0x20000383e71
0x00000200003844ce : jmp 0x20000384493
0x00000200005328df : jmp 0x20000384760
0x0000020000532ea9 : jmp 0x20000385f83
0x0000020000533dfa : jmp 0x20000387afd
0x0000020000533e91 : jmp 0x20000387d12
0x000002000053410f : jmp 0x20000388b34
0x000002000038a090 : jmp 0x20000389bb2
0x000002000038b2f3 : jmp 0x2000038af19
0x000002000038b873 : jmp 0x2000038b839
0x000002000038cb1f : jmp 0x2000038cae5
0x00000200005358aa : jmp 0x2000038dbfc
0x00000200005c26ca : jmp 0x2000038e9ba
0x0000020000390212 : jmp 0x200003901d8
0x0000020000390211 : jmp 0x200003901d9
0x0000020000397a35 : jmp 0x200003976d4
0x0000020000397f5c : jmp 0x20000397c9d
0x00000200003993bb : jmp 0x20000398f5a
0x000002000039b9d2 : jmp 0x2000039b8a7
0x00000200003a0ef9 : jmp 0x200003a0e37
0x00000200003a41d2 : jmp 0x200003a411e
0x00000200003a420b : jmp 0x200003a411f
0x00000200003a421c : jmp 0x200003a418c
0x00000200003a421b : jmp 0x200003a418d
0x00000200003a4207 : jmp 0x200003a41b0
0x00000200003a6a69 : jmp 0x200003a6989
0x00000200005406cb : jmp 0x200003abcb1
0x00000200003ac07c : jmp 0x200003abfb0
0x00000200003ac5f2 : jmp 0x200003ac5b8
0x0000020000540cc9 : jmp 0x200003ae6e1
0x0000020000540d2a : jmp 0x200003ae8e7
0x0000020000540d8f : jmp 0x200003aea0a
0x00000200003b0a05 : jmp 0x200003b0959
0x00000200005417a1 : jmp 0x200003b0f48
0x00000200003b108e : jmp 0x200003b1054
0x00000200003b116b : jmp 0x200003b1184
0x00000200003b12b3 : jmp 0x200003b11a3
0x00000200003b29de : jmp 0x200003b293e
0x00000200003b5798 : jmp 0x200003b5737
0x00000200003b65b3 : jmp 0x200003b62a9
0x00000200003b669a : jmp 0x200003b659c
0x00000200003b65b4 : jmp 0x200003b65b7
0x00000200003ba605 : jmp 0x200003ba347
0x00000200003ba5d5 : jmp 0x200003ba464
0x00000200003ba5a8 : jmp 0x200003ba519
0x00000200003baf10 : jmp 0x200003bab56
0x0000020000544125 : jmp 0x200003bb1f0
0x00000200003bb8ad : jmp 0x200003bb87a
0x00000200003bbb82 : jmp 0x200003bba65
0x000002000054475e : jmp 0x200003bc5fb
0x00000200003bc9f4 : jmp 0x200003bc94d
0x00000200003be205 : jmp 0x200003bd5f4
0x00000200003c005f : jmp 0x200003c0038
0x0000020000545bd6 : jmp 0x200003c1ed5
0x0000020000545c34 : jmp 0x200003c1f10
0x00000200003c405a : jmp 0x200003c3e50
0x00000200003c49f1 : jmp 0x200003c48ca
0x00000200003ced6e : jmp 0x200003ced33
0x0000020000549a60 : jmp 0x200003cf642
0x00000200003d03c8 : jmp 0x200003cf643
0x00000200003d1c19 : jmp 0x200003d1a51
0x00000200003d2133 : jmp 0x200003d202c
0x00000200003d2406 : jmp 0x200003d23cb
0x00000200003d2f21 : jmp 0x200003d2f21
0x00000200003d3bb1 : jmp 0x200003d3965
0x00000200003d7568 : jmp 0x200003d7253
0x000002000054c7df : jmp 0x200003d8aa3
0x000002000054c8b9 : jmp 0x200003d8d64
0x00000200003d9798 : jmp 0x200003d970a
0x00000200005520ca : jmp 0x200003de372
0x00000200003e3119 : jmp 0x200003df3d9
0x00000200003e3123 : jmp 0x200003df3ff
0x00000200005520df : jmp 0x200003e384e
0x0000020000552153 : jmp 0x200003e4068
0x00000200003e4a00 : jmp 0x200003e4a04
0x00000200003e4dd2 : jmp 0x200003e4d98
0x00000200005525d3 : jmp 0x200003e57a6
0x00000200005527bc : jmp 0x200003e5c0c
0x0000020000552cdb : jmp 0x200003e745d
0x00000200003e7eaf : jmp 0x200003e7eb3
0x0000020000552ec9 : jmp 0x200003e7f71
0x00000200003e7fa4 : jmp 0x200003e7fa8
0x0000020000553147 : jmp 0x200003e84d3
0x000002000055305a : jmp 0x200003e8585
0x00000200003eb682 : jmp 0x200003eb643
0x00000200003eddbc : jmp 0x200003edd81
0x000002000055489d : jmp 0x200003ee79f
0x00000200003f0d75 : jmp 0x200003f0cc6
0x0000020000554de6 : jmp 0x200003f1006
0x0000020000554e4c : jmp 0x200003f113d
0x00000200003f154e : jmp 0x200003f151c
0x00000200003f5f66 : jmp 0x200003f5e51
0x00000200003f82cf : jmp 0x200003f81b5
0x00000200003f86f6 : jmp 0x200003f86bc
0x00000200003f9a5a : jmp 0x200003f99ac
0x00000200003f9af0 : jmp 0x200003f9a2e
0x00000200003fad16 : jmp 0x200003fad20
0x00000200003fad15 : jmp 0x200003fad21
0x00000200003feb30 : jmp 0x200003fae2e
0x00000200003faead : jmp 0x200003fae72
0x00000200003fd4c9 : jmp 0x200003fd48e
0x00000200003fdbdf : jmp 0x200003fdb3b
0x00000200003fdeaf : jmp 0x200003fde75
0x00000200003fed0a : jmp 0x200003fecd0
0x000002000055838d : jmp 0x200003fed36
0x00000200003fee8e : jmp 0x200003fed84
0x00000200003fee8f : jmp 0x200003fee94
0x00000200003fee8f : jmp 0x200003fee97
0x0000020000401a51 : jmp 0x20000401a17
0x000002000040294a : jmp 0x20000402910
0x000002000055c63a : jmp 0x20000408939
0x000002000040ec7b : jmp 0x2000040ec40
0x0000020000414efb : jmp 0x20000414de0
0x0000020000560731 : jmp 0x2000041875c
0x00000200005627ba : jmp 0x2000041ea89
0x000002000056288b : jmp 0x2000041f29d
0x00000200004212af : jmp 0x20000421274
0x0000020000428509 : jmp 0x2000042847c
0x000002000042a482 : jmp 0x2000042a448
0x000002000042a481 : jmp 0x2000042a449
0x000002000042d55d : jmp 0x2000042d522
0x000002000042dca9 : jmp 0x2000042dc6e
0x0000020000430424 : jmp 0x200004303ea
0x0000020000431729 : jmp 0x200004316ef
0x000002000056a017 : jmp 0x20000433a16
0x000002000056a0d2 : jmp 0x20000433b2e
0x000002000056a59a : jmp 0x20000434c53
0x0000020000436e51 : jmp 0x20000436930
0x0000020000436fa5 : jmp 0x20000436f6a
0x0000020000437271 : jmp 0x20000437262
0x000002000056bc55 : jmp 0x20000437c19
0x000002000056bc84 : jmp 0x20000437ee0
0x000002000056bcac : jmp 0x20000437ee9
0x000002000056bcfc : jmp 0x20000437f18
0x000002000056bdc3 : jmp 0x2000043802f
0x0000020000438433 : jmp 0x200004383f8
0x00000200004388c2 : jmp 0x200004387c3
0x0000020000438a8f : jmp 0x200004389d8
0x000002000056c05f : jmp 0x20000438a5c
0x0000020000438c76 : jmp 0x20000438bef
0x000002000056c157 : jmp 0x20000438da5
0x0000020000438e9b : jmp 0x20000438deb
0x000002000043966b : jmp 0x20000439097
0x000002000056c715 : jmp 0x20000439dc3
0x000002000043a438 : jmp 0x2000043a3a2
0x000002000043a908 : jmp 0x2000043a838
0x000002000043ac69 : jmp 0x2000043a9ff
0x000002000043ff1b : jmp 0x2000043fe66
0x000002000056ec17 : jmp 0x200004404b8
0x00000200004436ab : jmp 0x200004435b6
0x000002000044473b : jmp 0x20000444701
0x00000200005706c9 : jmp 0x20000447312
0x0000020000570708 : jmp 0x20000447468
0x0000020000570cb5 : jmp 0x20000448a11
0x0000020000571323 : jmp 0x20000448e36
0x0000020000570c86 : jmp 0x200004492d0
0x0000020000571982 : jmp 0x2000044939b
0x00000200005731fe : jmp 0x2000044d127
0x000002000044ec27 : jmp 0x2000044ea88
0x00000200004503ce : jmp 0x2000044f04a
0x0000020000574ba6 : jmp 0x2000044f05b
0x000002000044fcc5 : jmp 0x2000044f05c
0x00000200005744e6 : jmp 0x2000044fa46
0x0000020000573bfd : jmp 0x2000045022f
0x0000020000450948 : jmp 0x20000450868
0x0000020000574d14 : jmp 0x20000450fa1
0x0000020000574cf1 : jmp 0x20000450faa
0x0000020000575258 : jmp 0x2000045146c
0x0000020000575257 : jmp 0x2000045146d
0x0000020000451905 : jmp 0x20000451510
0x0000020000451904 : jmp 0x20000451511
0x0000020000455414 : jmp 0x20000455a47
0x0000020000575f46 : jmp 0x20000455c7c
0x00000200005766c6 : jmp 0x200004561ec
0x0000020000576ab4 : jmp 0x2000045720f
0x000002000057719b : jmp 0x20000458583
0x00000200004590f9 : jmp 0x20000458f94
0x0000020000577c59 : jmp 0x2000045ab4e
0x000002000045ebbf : jmp 0x2000045e9af
0x0000020000579077 : jmp 0x20000460d3c
0x000002000057ad5c : jmp 0x20000467037
0x0000020000469ba6 : jmp 0x20000469b6c
0x0000020000469ee8 : jmp 0x20000469eae
0x00000200004706ad : jmp 0x20000470673
0x0000020000472978 : jmp 0x20000472920
0x000002000057e0b4 : jmp 0x200004754ab
0x000002000058014b : jmp 0x2000047c3d0
0x00000200005801d2 : jmp 0x2000047c44d
0x0000020000580200 : jmp 0x2000047c455
0x0000020000580b5a : jmp 0x2000047e6be
0x000002000047f008 : jmp 0x2000047efce
0x000002000058224d : jmp 0x200004844fa
0x0000020000489e95 : jmp 0x20000489c62
0x000002000048ab51 : jmp 0x2000048a9d4
0x000002000048ab47 : jmp 0x2000048aa4b
0x0000020000583912 : jmp 0x2000048b105
0x000002000048b539 : jmp 0x2000048b393
0x000002000048ba3f : jmp 0x2000048b99d
0x0000020000583e29 : jmp 0x2000048c6b1
0x00000200005857b7 : jmp 0x20000490a6b
0x0000020000585e62 : jmp 0x200004920cc
0x0000020000585e78 : jmp 0x20000492150
0x0000020000585ee4 : jmp 0x200004921e6
0x0000020000585ee4 : jmp 0x200004921ea
0x00000200005865f2 : jmp 0x20000492716
0x000002000058669b : jmp 0x200004928d2
0x00000200005866af : jmp 0x20000492909
0x0000020000587bb2 : jmp 0x20000493e20
0x0000020000588221 : jmp 0x20000494477
0x00000200005881fd : jmp 0x200004944e9
0x0000020000588bd6 : jmp 0x200004959cc
0x0000020000497c1a : jmp 0x20000497c66
0x000002000049a0fc : jmp 0x2000049a0c2
0x000002000049c2cc : jmp 0x2000049c292
0x000002000049d5a1 : jmp 0x2000049d567
0x000002000049dcf2 : jmp 0x2000049dbd0
0x000002000049ea7c : jmp 0x2000049e9b1
0x000002000049ec03 : jmp 0x2000049ebc8
0x000002000049ef63 : jmp 0x2000049ef6d
0x00000200004a462e : jmp 0x200004a45a1
0x00000200004a4bf3 : jmp 0x200004a4a28
0x00000200004a4e4e : jmp 0x200004a4e14
0x000002000058e14b : jmp 0x200004a53b5
0x00000200004a625b : jmp 0x200004a6195
0x000002000058e960 : jmp 0x200004a7ca4
0x00000200004a8b39 : jmp 0x200004a8aa8
0x00000200004a9872 : jmp 0x200004a9838
0x00000200004abb3e : jmp 0x200004abb04
0x000002000059013e : jmp 0x200004ac19d
0x000002000058ff90 : jmp 0x200004ac24f
0x00000200005901c3 : jmp 0x200004ac403
0x0000020000590245 : jmp 0x200004ac4c5
0x0000020000590337 : jmp 0x200004ac56a
0x00000200005903b7 : jmp 0x200004ac60a
0x00000200005903d7 : jmp 0x200004ac629
0x0000020000590461 : jmp 0x200004ac6e5
0x00000200004af904 : jmp 0x200004af8e1
0x0000020000591d63 : jmp 0x200004b18ce
0x00000200004b3e7f : jmp 0x200004b3ed9
0x00000200004b3e7e : jmp 0x200004b3eda
0x00000200004b3f19 : jmp 0x200004b3f37
0x00000200004b6ec7 : jmp 0x200004b6e77
0x0000020000594ab5 : jmp 0x200004bd05d
0x00000200004be6e6 : jmp 0x200004be6ab
0x0000020000596491 : jmp 0x200004c1388
0x0000020000596cae : jmp 0x200004c2eba
0x0000020000596cc4 : jmp 0x200004c2f5c
0x0000020000596cea : jmp 0x200004c2f77
0x0000020000596cfe : jmp 0x200004c2fae
0x0000020000596d16 : jmp 0x200004c2fd8
0x0000020000596d6e : jmp 0x200004c2fef
0x00000200004c3570 : jmp 0x200004c3536
0x00000200005974cd : jmp 0x200004c4201
0x00000200004c7fc5 : jmp 0x200004c7e0c
0x00000200004c7f89 : jmp 0x200004c7ec5
0x00000200004c8a7f : jmp 0x200004c8a45
0x00000200004cb1fb : jmp 0x200004cb1c1
0x00000200004cb6be : jmp 0x200004cb624
0x000002000059a601 : jmp 0x200004cc3e8
0x00000200004d359c : jmp 0x200004d344f
0x00000200004d560d : jmp 0x200004d55d3
0x00000200004d5e53 : jmp 0x200004d5e19
0x00000200004da3e1 : jmp 0x200004da39f
0x000002000059e21f : jmp 0x200004da464
0x00000200004da4ac : jmp 0x200004da46a
0x000002000059e1ef : jmp 0x200004da4b3
0x00000200004db71e : jmp 0x200004db6e4
0x000002000059ecad : jmp 0x200004dc19c
0x000002000059fb0e : jmp 0x200004dd036
0x000002000059fdd7 : jmp 0x200004dd9f3
0x000002000059fde3 : jmp 0x200004ddc5f
0x00000200005a109d : jmp 0x200004e0eec
0x00000200004e2a4d : jmp 0x200004e2a13
0x00000200004e2a4c : jmp 0x200004e2a14
0x00000200004e2d70 : jmp 0x200004e2d81
0x00000200005a27b2 : jmp 0x200004e5807
0x00000200005a289b : jmp 0x200004e594d
0x00000200005a2c21 : jmp 0x200004e6755
0x00000200004eb212 : jmp 0x200004eb216
0x00000200004ebf4d : jmp 0x200004ebde9
0x00000200004ec947 : jmp 0x200004ec823
0x00000200004ed0e1 : jmp 0x200004ed0a6
0x00000200004ee55b : jmp 0x200004ee521
0x00000200004ef211 : jmp 0x200004ef201
0x00000200005a7582 : jmp 0x200004f382d
0x00000200004f3a7f : jmp 0x200004f3a45
0x00000200004f3dc2 : jmp 0x200004f3d87
0x00000200004f5ef3 : jmp 0x200004f5eb9
0x00000200004fc3af : jmp 0x200004fc374
0x00000200004fce9a : jmp 0x200004fce60
0x00000200005ab032 : jmp 0x200004fffd0
0x00000200005ab120 : jmp 0x200005001eb
0x0000020000504ee0 : jmp 0x20000504ea6
0x000002000050706a : jmp 0x20000507030
0x00000200005ae084 : jmp 0x2000050a2f7
0x00000200005af675 : jmp 0x200005114ce
0x00000200005137ad : jmp 0x20000513773
0x00000200005b2ce3 : jmp 0x20000517569
0x000002000051a7da : jmp 0x2000051a79f
0x000002000051bc1d : jmp 0x2000051bbe2
0x00000200005b45e4 : jmp 0x2000051cd97
0x00000200005b49e5 : jmp 0x2000051d60e
0x00000200005b4a65 : jmp 0x2000051d7a2
0x00000200005b4ab1 : jmp 0x2000051d894
0x00000200005b4d31 : jmp 0x2000051e8c2
0x000002000051f143 : jmp 0x2000051f108
0x0000020000534dda : jmp 0x200005346ac
0x000002000038a0c0 : jmp 0x20000534960
0x000002000038a3f5 : jmp 0x20000534a66
0x0000020000535741 : jmp 0x20000535763
0x0000020000536cb1 : jmp 0x20000536470
0x00000200003e6807 : jmp 0x20000552a46
0x000002000055ee78 : jmp 0x2000055ee7a
0x0000020000560734 : jmp 0x2000056073a
0x000002000056288e : jmp 0x20000562892
0x00000200005630a1 : jmp 0x200005630a8
0x0000020000565441 : jmp 0x20000565452
0x000002000056e8d2 : jmp 0x2000056e897
0x0000020000442c52 : jmp 0x2000056f6bf
0x00000200005750a6 : jmp 0x200005750b1
0x00000200005754a0 : jmp 0x200005754aa
0x000002000045bb6a : jmp 0x20000577e12
0x00000200005781bc : jmp 0x20000578219
0x0000020000462e40 : jmp 0x200005793dd
0x0000020000579539 : jmp 0x200005795b5
0x0000020000580111 : jmp 0x200005800d7
0x000002000058294e : jmp 0x2000058295e
0x00000200005853ea : jmp 0x200005853fd
0x000002000058590b : jmp 0x2000058591e
0x000002000058595a : jmp 0x2000058596d
0x0000020000588bd7 : jmp 0x20000588bab
0x00000200005a0428 : jmp 0x200005a03f8
0x00000200005a061e : jmp 0x200005a0638
0x00000200005a0ad8 : jmp 0x200005a0a9d
0x00000200005165a3 : jmp 0x200005b2891
0x00000200005b75dc : jmp 0x200005b761e
0x00000200005cceff : jmp 0x200005ccf5e
0x00000200005db455 : jmp 0x200005db41a
0x00000200005f4dd9 : jmp 0x200005f4d9f
0x00000200005f4eb7 : jmp 0x200005f4e7d
0x00000200005f52fb : jmp 0x200005f5333
0x00000200005fcd7e : jmp 0x200005fcd93
0x000002000060d7ff : jmp 0x2000060d8f0
0x000002000061e594 : jmp 0x2000061e548
0x000002000062f8b4 : jmp 0x2000062f8be
0x0000020000640b6e : jmp 0x20000640b34
0x0000020000643d61 : jmp 0x20000643cea
0x0000020000646bdf : jmp 0x20000646c38
0x000002000064bb8a : jmp 0x2000064bb50
0x000002000064be65 : jmp 0x2000064bf58
0x000002000065a7d6 : jmp 0x2000065a26a
0x000002000065a926 : jmp 0x2000065a885
0x000002000065a86a : jmp 0x2000065a8b6
0x000002000065a96a : jmp 0x2000065a986
0x000002000065a942 : jmp 0x2000065a992
0x000002000065e48d : jmp 0x2000065e49a
0x000002000066564d : jmp 0x200006656c7
0x0000020000666b85 : jmp 0x20000666b91
0x0000020000668501 : jmp 0x200006684c7
0x000002000066dca4 : jmp 0x2000066dd22
0x000002000066e952 : jmp 0x2000066ea81
0x00000200006718f3 : jmp 0x20000671901
0x000002000067412d : jmp 0x20000674155
0x0000020000674ef1 : jmp 0x20000674f14
0x0000020000674f46 : jmp 0x20000674f59
0x0000020000674ea8 : jmp 0x20000674f73
0x0000020000675161 : jmp 0x2000067517d
0x0000020000675161 : jmp 0x2000067517e
0x0000020000675248 : jmp 0x2000067526b
0x00000200006752b2 : jmp 0x200006752c5
0x00000200006754e1 : jmp 0x20000675504
0x0000020000675521 : jmp 0x20000675555
0x000002000067556f : jmp 0x20000675581
0x0000020000675634 : jmp 0x20000675657
0x0000020000675675 : jmp 0x200006756b3
0x00000200006756cd : jmp 0x200006756df
0x0000020000675775 : jmp 0x20000675798
0x00000200006757c5 : jmp 0x200006757d7
0x0000020000675841 : jmp 0x20000675864
0x0000020000675897 : jmp 0x200006758a9
0x0000020000675a25 : jmp 0x20000675a48
0x0000020000675a76 : jmp 0x20000675a88
0x0000020000675bf5 : jmp 0x20000675bac
0x0000020000675c61 : jmp 0x20000675c84
0x0000020000675ce0 : jmp 0x20000675cf3
0x0000020000675d35 : jmp 0x20000675d58
0x0000020000675dbb : jmp 0x20000675dcd
0x0000020000678ddc : jmp 0x20000678e4e
0x000002000067b86d : jmp 0x2000067b947
0x000002000067c90f : jmp 0x2000067c932
0x000002000067c99e : jmp 0x2000067c9b1
0x000002000067c9ea : jmp 0x2000067ca0d
0x000002000067ca3f : jmp 0x2000067ca52
0x000002000067cb0a : jmp 0x2000067cb2d
0x000002000067cc60 : jmp 0x2000067cc73
0x000002000067ce80 : jmp 0x2000067ce7b
0x000002000067cfbf : jmp 0x2000067cfe2
0x0000020000688932 : jmp 0x200006889e5
0x000002000068e3fd : jmp 0x2000068a3de
0x000002000068e44e : jmp 0x2000068a687
0x000002000068e726 : jmp 0x2000068a975
0x000002000068ec47 : jmp 0x2000068c7ba
0x00000200006e7e64 : jmp 0x200006e7eba
0x000002000072015f : jmp 0x200006effbd
0x00000200007202ae : jmp 0x200006f01c4
0x0000020000720314 : jmp 0x200006f024a
0x0000020000720314 : jmp 0x200006f024f
0x000002000072051e : jmp 0x200006f080b
0x0000020000720878 : jmp 0x200006f1314
0x00000200006f4213 : jmp 0x200006f41e3
0x00000200006f4400 : jmp 0x200006f43c0
0x00000200006f4d74 : jmp 0x200006f4d57
0x00000200006f58a4 : jmp 0x200006f586a
0x00000200006fb03d : jmp 0x200006fac34
0x00000200006fb03e : jmp 0x200006fb041
0x0000020000722fbb : jmp 0x200006fbf1c
0x00000200006fe1dd : jmp 0x200006fe1a3
0x00000200007240a3 : jmp 0x200007002ac
0x0000020000724129 : jmp 0x20000700380
0x0000020000725d36 : jmp 0x2000070986d
0x000002000070dda7 : jmp 0x2000070dd96
0x000002000070fb17 : jmp 0x2000070fb0e
0x0000020000726ed2 : jmp 0x200007105b6
0x00000200007275ca : jmp 0x20000711bfa
0x0000020000727d3a : jmp 0x200007120e8
0x000002000072829b : jmp 0x200007136ef
0x0000020000713a45 : jmp 0x20000713a57
0x00000200007184b7 : jmp 0x20000718485
0x0000020000718bf5 : jmp 0x20000718bc3
0x0000020000718bf4 : jmp 0x20000718be7
0x00000200006f531a : jmp 0x200007215e4
0x0000020000721738 : jmp 0x200007217aa
0x00000200007224f1 : jmp 0x200007224b6
0x000002000072283d : jmp 0x20000722802
0x000002000072283c : jmp 0x20000722803
0x00000200007229e4 : jmp 0x200007229a9
0x0000020000722a5b : jmp 0x20000722a20
0x000002000072321a : jmp 0x20000723224
0x00000200007244a9 : jmp 0x20000724463
0x00000200007244cb : jmp 0x20000724466
0x000002000072c0a3 : jmp 0x2000072c069
0x000002000072c0a2 : jmp 0x2000072c06a
0x0000020000683d04 : jmp 0x2000092fff3
0x00000200000785de : jmp 0x20002010622
0x00000200000f2cde : jmp 0x2000276ba2e
0x000002000021408d : jmp 0x200036a0225
0x0000020000556242 : jmp 0x20005185949
0x0000020000728f8f : jmp 0x20005fc8f99
0x0000020000408080 : jmp 0x200090303d0
0x00000200005c42c0 : jmp 0x200101cc7cc
0x00000200005867cc : jmp 0x2001021ebe0
0x000002000043b0b3 : jmp 0x20010437399
0x00000200003911b3 : jmp 0x20023fb34d0
0x00000200005925d9 : jmp 0x2003b1bdbf0
0x000002000003be1d : jmp 0x2004003be2c
0x000002000020a085 : jmp 0x20041e32bd1
0x00000200003b559a : jmp 0x20041fde0ea
0x0000020000066e9f : jmp 0x20044066eae
0x0000020000586587 : jmp 0x200451b64d8
0x00000200000964f6 : jmp 0x20048cbf046
0x00000200000a5cc8 : jmp 0x20048cce81c
0x00000200000a5dbf : jmp 0x20048cce913
0x00000200000d22e7 : jmp 0x20048cfae37
0x0000020000101dde : jmp 0x20048d2a906
0x0000020000236a68 : jmp 0x20048e5f5b4
0x000002000045a5a0 : jmp 0x200490830aa
0x000002000048ebb8 : jmp 0x200490b7701
0x00000200005ddff6 : jmp 0x20049206b46
0x0000020000609d4a : jmp 0x20049232896
0x0000020000609d75 : jmp 0x200492328c1
0x0000020000609e36 : jmp 0x20049232982
0x0000020000609e61 : jmp 0x200492329ad
0x0000020000403d83 : jmp 0x2004940005b
0x00000200004f4897 : jmp 0x200494f0ae0
0x000002000050a4bb : jmp 0x20049507ef0
0x000002000059db33 : jmp 0x200495987cf
0x000002000067f08b : jmp 0x2004967b377
0x0000020000056b0d : jmp 0x20049c86a1e
0x000002000005e377 : jmp 0x20049c86ecb
0x000002000045d6fe : jmp 0x2004dcf231a
0x0000020000111b71 : jmp 0x2004dd34ec1
0x00000200004cf927 : jmp 0x2005407e233
0x00000200004b3b2d : jmp 0x2005dd63b46
0x00000200004b3b2c : jmp 0x2005dd63b47
0x000002000020abb3 : jmp 0x20066e2cf21
0x000002000048c0b7 : jmp 0x200750afc08
0x000002000050848d : jmp 0x200751a09de
0x00000200006122cc : jmp 0x200752aa6e0
0x0000020000552557 : jmp 0x2007554ab62
0x0000020000552716 : jmp 0x2007554ad21
0x0000020000109fa5 : jmp qword ptr [r10 + rax*8]
0x000002000064dc6d : jmp qword ptr [r10]
0x0000020000097bc1 : jmp qword ptr [r11]
0x00000200001a88bd : jmp qword ptr [r9]
0x000002000002668a : jmp qword ptr [rax]
0x000002000002d723 : jmp qword ptr [rbx]
0x00000200000967b9 : jmp qword ptr [rcx + 0x20]
0x00000200000c91b0 : jmp qword ptr [rcx + 0x74c00000]
0x000002000000a2b7 : jmp qword ptr [rcx]
0x00000200000c9490 : jmp qword ptr [rdi]
0x0000020000109fa6 : jmp qword ptr [rdx + rax*8]
0x00000200005c78fd : jmp qword ptr [rdx - 0x48]
0x000002000000dba9 : jmp qword ptr [rdx]
0x00000200001fb728 : jmp qword ptr [rip + 0xfff]
0x0000020000713138 : jmp qword ptr [rsi + 0x3b]
0x0000020000032009 : jmp qword ptr [rsi + 0xf]
0x00000200002036c2 : jmp qword ptr [rsi - 0x77]
0x0000020000007149 : jmp qword ptr [rsi]
0x0000020000492760 : jmp r10
0x000002000015c5e1 : jmp r11
0x00000200001d7c6d : jmp r12
0x000002000012e205 : jmp r8
0x0000020000157a66 : jmp r9
0x000002000000d285 : jmp rax
0x00000200000ae14d : jmp rbx
0x00000200000658b9 : jmp rcx
0x000002000000e7d4 : jmp rdi
0x000002000005e420 : jmp rdx
0x00000200000217e0 : jmp rsi
0x000002000013af0c : jmp rsp
0x000002000000d73c : jne 0x2000000d6db ; jl 0x2000000d767 ; ret 0x23e8
0x000002000000d73b : jne 0x2000000d7b7 ; cdq ; jl 0x2000000d768 ; ret 0x23e8
0x000002000000e3d7 : jne 0x2000000e3e4 ; adc eax, 0xd9818709 ; ret
0x000002000000eefa : jne 0x2000000ee8a ; ret 0x5e78
0x0000020000014a46 : jne 0x20000014abe ; movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x000002000001fd19 : jne 0x2000001fcaf ; ret
0x00000200000249f2 : jne 0x200000249e6 ; mov eax, 0xc0000109 ; ret
0x0000020000024a0d : jne 0x20000024a0b ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000025589 : jne 0x20000025573 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002a7af : jne 0x2000002a7e9 ; ret
0x000002000002a81f : jne 0x2000002a82e ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002a935 : jne 0x2000002a93e ; mov al, 1 ; ret
0x000002000002b55a : jne 0x2000002b588 ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x000002000002b55a : jne 0x2000002b589 ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x000002000002b79e : jne 0x2000002b7c0 ; ret
0x000002000002ba16 : jne 0x2000002b9f7 ; lea rax, qword ptr [r9 - 0x10] ; ret
0x000002000002fe1c : jne 0x2000002fe2b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003346d : jne 0x20000033480 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000033678 : jne 0x2000003366d ; mov al, 1 ; ret
0x000002000003390f : jne 0x20000033922 ; cmp byte ptr [rcx + r9*2 + 1], al ; jne 0x2000003392c ; ret
0x0000020000033916 : jne 0x20000033925 ; ret
0x00000200000339af : jne 0x200000339b8 ; xor eax, eax ; ret
0x00000200000339d0 : jne 0x200000339ed ; mov rax, r9 ; ret
0x0000020000168c88 : jne 0x2000003488d ; jmp 0x20000034f07
0x000002000003609d : jne 0x200000360a2 ; ret
0x0000020000036447 : jne 0x20000036454 ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000036480 : jne 0x20000036492 ; ret
0x000002000003647f : jne 0x20000036493 ; ret
0x00000200000366e1 : jne 0x200000366ec ; mov rax, r9 ; ret
0x0000020000038cac : jne 0x20000038cbb ; ret
0x0000020000039ff2 : jne 0x2000003a02d ; ret
0x000002000003cc1b : jne 0x2000003cc8e ; mov rcx, rsi ; call rdi
0x000002000003d0f3 : jne 0x2000003d111 ; add rsp, 0x28 ; ret
0x000002000003da55 : jne 0x2000003da5d ; mov eax, edx ; ret
0x000002000003da55 : jne 0x2000003da5e ; mov eax, edx ; ret
0x0000020000040eb7 : jne 0x20000040ea9 ; jmp 0x20000040ab3
0x000002000004da30 : jne 0x2000004da51 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000051964 : jne 0x20000051969 ; ret
0x0000020000055c48 : jne 0x20000055c39 ; jmp 0x20000055b61
0x0000020000063e06 : jne 0x20000063e45 ; ret
0x00000200000645b5 : jne 0x200000645ba ; ret
0x0000020000065801 : jne 0x20000065806 ; ret
0x000002000006871a : jne 0x2000006870c ; jmp 0x2000006858d
0x0000020000068f26 : jne 0x20000068f33 ; ret
0x000002000006ad88 : jne 0x2000006ad8d ; ret
0x000002000007007c : jne 0x20000070077 ; mov rax, rcx ; ret
0x00000200000728a6 : jne 0x200000728ca ; mov eax, ecx ; ret
0x0000020000074d55 : jne 0x20000074d4f ; mov eax, 1 ; ret
0x000002000007569b : jne 0x200000756b2 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000824b0 : jne 0x20000082497 ; ret
0x0000020000082fe4 : jne 0x20000082fed ; mov al, 1 ; ret
0x000002000008a177 : jne 0x2000008a182 ; mov al, r8b ; ret
0x000002000008c746 : jne 0x2000008c752 ; mov al, 1 ; ret
0x000002000008cc09 : jne 0x2000008cc0e ; ret
0x000002000008d946 : jne 0x2000008d91d ; ret
0x000002000008df8c : jne 0x2000008df83 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008e74e : jne 0x2000008e73f ; ret
0x000002000008ece2 : jne 0x2000008eced ; mov eax, r8d ; ret
0x000002000008f12d : jne 0x2000008f128 ; ret
0x0000020000091514 : jne 0x20000091519 ; ret
0x00000200000915ac : jne 0x200000915b4 ; ret
0x00000200000915a5 : jne 0x200000915b8 ; lock cmpxchg qword ptr [rdx], rcx ; jne 0x200000915bb ; ret
0x0000020000095cdb : jne 0x20000095cf7 ; lock dec dword ptr [rcx] ; ret
0x0000020000095e34 : jne 0x20000095e3f ; mov qword ptr [r9], r8 ; ret
0x0000020000095e3d : jne 0x20000095e66 ; mov qword ptr [rax], r8 ; ret
0x00000200000960e5 : jne 0x200000960ea ; ret
0x00000200000967c3 : jne 0x200000967d2 ; lock and qword ptr [rcx], 0 ; ret
0x000002000009689b : jne 0x200000968ae ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009b53c : jne 0x2000009b541 ; ret
0x000002000009bb0c : jne 0x2000009bb17 ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000009d2e5 : jne 0x2000009d2ea ; ret
0x000002000009db4a : jne 0x2000009db75 ; xor al, al ; ret
0x000002000009de3e : jne 0x2000009de4f ; mov byte ptr [rcx + 0x185], dl ; ret
0x000002000009fade : jne 0x2000009fac4 ; mov qword ptr [r8 + 0x40], rcx ; ret
0x00000200000a36eb : jne 0x200000a3702 ; mov eax, 1 ; ret
0x00000200000a436d : jne 0x200000a4362 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a4e3b : jne 0x200000a4e40 ; ret
0x00000200000a4e5a : jne 0x200000a4e4a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b012d : jne 0x200000b0140 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b21ef : jne 0x200000b21f7 ; xor eax, eax ; ret
0x00000200000b2805 : jne 0x200000b280d ; xor eax, eax ; ret
0x00000200000b41fa : jne 0x200000b4214 ; xor eax, eax ; ret
0x00000200000b55de : jne 0x200000b55e9 ; mov qword ptr [r8], rcx ; ret
0x00000200000b55ff : jne 0x200000b5648 ; lea rax, qword ptr [rip + 0xaba88] ; ret
0x00000200000b5615 : jne 0x200000b5654 ; lea rax, qword ptr [rip + 0xaba12] ; ret
0x00000200000b5641 : jne 0x200000b5679 ; lea rax, qword ptr [rip + 0xaba56] ; ret
0x00000200000b5635 : jne 0x200000b56b6 ; lea rax, qword ptr [rip + 0xabb42] ; ret
0x00000200000b56a3 : jne 0x200000b56cb ; lea rax, qword ptr [rip + 0xabbb4] ; ret
0x00000200000b56b0 : jne 0x200000b56d8 ; lea rax, qword ptr [rip + 0xabae7] ; ret
0x00000200000b5676 : jne 0x200000b56ed ; lea rax, qword ptr [rip + 0xaba51] ; ret
0x00000200000b56c5 : jne 0x200000b56f9 ; lea rax, qword ptr [rip + 0xabb12] ; ret
0x00000200000b56f3 : jne 0x200000b5706 ; lea rax, qword ptr [rip + 0xabb44] ; ret
0x00000200000b56e6 : jne 0x200000b5713 ; lea rax, qword ptr [rip + 0xaba01] ; ret
0x00000200000b56d2 : jne 0x200000b5713 ; lea rax, qword ptr [rip + 0xabae5] ; ret
0x00000200000b5700 : jne 0x200000b5713 ; lea rax, qword ptr [rip + 0xabb07] ; ret
0x00000200000b573f : jne 0x200000b578a ; xor al, al ; ret
0x00000200000b5946 : jne 0x200000b5941 ; mov rax, rcx ; ret
0x00000200000b5cf4 : jne 0x200000b5d07 ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x00000200000b6289 : jne 0x200000b62ac ; lea rax, qword ptr [rip + 0xaaeee] ; ret
0x00000200000b62af : jne 0x200000b62d2 ; lea rax, qword ptr [rip + 0xaac68] ; ret
0x00000200000b62cb : jne 0x200000b62e6 ; lea rax, qword ptr [rip + 0xaaf0c] ; ret
0x00000200000b7277 : jne 0x200000b727c ; ret
0x00000200000b8185 : jne 0x200000b818e ; mov eax, ecx ; ret
0x00000200000b8356 : jne 0x200000b834f ; ret
0x00000200000b8c27 : jne 0x200000b8c33 ; or byte ptr [rcx + 9], 4 ; ret
0x00000200000b977e : jne 0x200000b9783 ; ret
0x00000200000ba921 : jne 0x200000ba919 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bc0fb : jne 0x200000bc0dd ; mov dl, 1 ; mov al, dl ; ret
0x00000200000bc4c0 : jne 0x200000bc4cb ; mov al, r9b ; ret
0x00000200000bcb10 : jne 0x200000bcb1d ; add rsp, 0x28 ; ret
0x00000200000bd0d7 : jne 0x200000bd0dc ; ret
0x00000200000be4dc : jne 0x200000be4ef ; mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000c3959 : jne 0x200000c3948 ; ret
0x00000200000c446d : jne 0x200000c447c ; mov eax, 1 ; ret
0x00000200000c4d42 : jne 0x200000c4d60 ; mov eax, 1 ; ret
0x00000200000c5d26 : jne 0x200000c5d2b ; ret
0x00000200000c6401 : jne 0x200000c6406 ; ret
0x00000200000c9507 : jne 0x200000c9518 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000c9ce8 : jne 0x200000c9d09 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ca206 : jne 0x200000ca212 ; ret
0x00000200000d0a6b : jne 0x200000d0a74 ; xor al, al ; ret
0x00000200000d0bb7 : jne 0x200000d0bca ; xor eax, eax ; cmp rax, rdx ; je 0x200000d0bd6 ; ret
0x00000200000d66e0 : jne 0x200000d66dd ; jmp 0x200000d66cb
0x00000200000d6f45 : jne 0x200000d6f6a ; ret
0x00000200000d7dbf : jne 0x200000d7db6 ; mov al, 1 ; ret
0x00000200000d8a1a : jne 0x200000d8a61 ; call rdi
0x00000200000dc08c : jne 0x200000dc099 ; ret
0x00000200000dc092 : jne 0x200000dc09f ; xor eax, eax ; ret
0x00000200000dc0c7 : jne 0x200000dc0c0 ; test al, dl ; jne 0x200000dc0de ; xor al, al ; ret
0x00000200000dc0bd : jne 0x200000dc0d4 ; mov al, 1 ; ret
0x00000200000dc0cb : jne 0x200000dc0da ; xor al, al ; ret
0x00000200000de1b6 : jne 0x200000de1c7 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000de25d : jne 0x200000de268 ; mov rax, rcx ; ret
0x00000200000de4dd : jne 0x200000de579 ; ret
0x00000200000de592 : jne 0x200000de5ae ; mov rax, qword ptr [rdx + 0x220] ; ret
0x00000200000de5a7 : jne 0x200000de5ba ; mov rax, qword ptr [rdx + 0xb8] ; ret
0x00000200000e0824 : jne 0x200000e083f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e1854 : jne 0x200000e1859 ; ret
0x00000200000e1867 : jne 0x200000e186c ; ret
0x00000200000e1893 : jne 0x200000e1898 ; ret
0x00000200000e1e1d : jne 0x200000e1e8e ; mov eax, 2 ; ret
0x00000200000e1e69 : jne 0x200000e1e94 ; mov eax, 0x10 ; ret
0x00000200000e29d5 : jne 0x200000e287b ; jmp 0x200000e29a7
0x00000200000e29f5 : jne 0x200000e2a20 ; mov rax, rcx ; ret
0x00000200000e2aff : jne 0x200000e2b0e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e2b67 : jne 0x200000e2b7a ; mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x00000200000e2c39 : jne 0x200000e2c31 ; ret
0x00000200000e4103 : jne 0x200000e4114 ; mov rcx, rbx ; call 0x2000047038b
0x00000200000e44bd : jne 0x200000e44b1 ; mov rax, rdx ; ret
0x00000200000e45f6 : jne 0x200000e4605 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e7714 : jne 0x200000e7737 ; add rsp, 0x28 ; ret
0x00000200000e865c : jne 0x200000e8677 ; mov rcx, r14 ; call r15
0x00000200000ea266 : jne 0x200000ea26b ; ret
0x00000200000ea411 : jne 0x200000ea420 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000ea94d : jne 0x200000ea952 ; ret
0x00000200000ead0a : jne 0x200000ead13 ; xor eax, eax ; ret
0x00000200000eb2b8 : jne 0x200000eb2c9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000eb846 : jne 0x200000eb84f ; mov al, 1 ; ret
0x00000200000ec99a : jne 0x200000ec9a9 ; mov eax, 0xc0000001 ; ret
0x00000200000efb64 : jne 0x200000efb77 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x00000200000f048d : jne 0x200000f049c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f04d4 : jne 0x200000f04e3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f225a : jne 0x200000f226b ; add rsp, 0x28 ; ret
0x00000200000f2782 : jne 0x200000f2758 ; mov dword ptr [rbx + 0xd0], edi ; jmp 0x200000f2758
0x00000200000f27d8 : jne 0x200000f27e5 ; mov qword ptr [rdx + 8], r8 ; ret
0x00000200000f30a4 : jne 0x200000f30c5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f3b2a : jne 0x200000f3b07 ; xor eax, eax ; ret
0x00000200000f3c09 : jne 0x200000f3bed ; not r9d ; mov eax, r9d ; ret
0x00000200000f4523 : jne 0x200000f452c ; ret
0x00000200000f4888 : jne 0x200000f4891 ; mov eax, ecx ; ret
0x00000200000f6266 : jne 0x200000f6279 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000f6f28 : jne 0x200000f6f3c ; lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x00000200000f7c17 : jne 0x200000f7c20 ; mov al, 1 ; ret
0x00000200000f7c8e : jne 0x200000f7c7c ; ret
0x00000200000f8b58 : jne 0x200000f8b50 ; ret
0x00000200000f8dbc : jne 0x200000f8d97 ; ret
0x00000200000f9220 : jne 0x200000f9231 ; mov eax, dword ptr [rip + 0x257df0] ; ret
0x00000200000f9c71 : jne 0x200000f9c82 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000f9ed5 : jne 0x200000f9ee4 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200000facff : jne 0x200000facde ; mov eax, r9d ; ret
0x00000200000fb66c : jne 0x200000fb671 ; ret
0x00000200000fcdda : jne 0x200000fcde2 ; xor eax, eax ; ret
0x00000200000fcdc3 : jne 0x200000fcde5 ; btr rax, 0xd ; ret
0x00000200000fce17 : jne 0x200000fce2c ; ret
0x00000200000fdb72 : jne 0x200000fdb77 ; ret
0x00000200000fe59b : jne 0x200000fe5a6 ; lock dec dword ptr [rcx] ; ret
0x00000200000ff4d4 : jne 0x200000ff4e7 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000ff7e5 : jne 0x200000ff7ee ; xor eax, eax ; ret
0x00000200000ffa86 : jne 0x200000ffa41 ; ret
0x00000200001000d2 : jne 0x200001000be ; ret
0x0000020000101836 : jne 0x20000101845 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000102280 : jne 0x20000102278 ; add rsp, 0x28 ; ret
0x000002000010369a : jne 0x200001036c9 ; ret
0x00000200001048fc : jne 0x200001048ea ; ret
0x000002000010640e : jne 0x200001063ff ; mov byte ptr [rip + 0x1d16b0], dl ; ret
0x00000200001063ef : jne 0x20000106400 ; mov byte ptr [rip + 0x1d16cc], dl ; ret
0x00000200001063fb : jne 0x20000106413 ; mov byte ptr [rip + 0x1d16bf], dl ; ret
0x00000200001092ca : jne 0x200001092d2 ; xor eax, eax ; ret
0x00000200001092c5 : jne 0x200001092d5 ; cmp qword ptr [rax], rax ; jne 0x200001092d7 ; xor eax, eax ; ret
0x00000200001098c4 : jne 0x200001098ec ; add rsp, 0x40 ; pop rbx ; ret
0x000002000010a3c6 : jne 0x2000010a3da ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000010a3e0 : jne 0x2000010a3f1 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000010a3cf : jne 0x2000010a3fa ; lea eax, dword ptr [rcx + 6] ; ret
0x000002000010a3ff : jne 0x2000010a416 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000010a3ef : jne 0x2000010a416 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000010af98 : jne 0x2000010afa0 ; mov al, dl ; ret
0x000002000010af98 : jne 0x2000010afa1 ; mov al, dl ; ret
0x000002000010b222 : jne 0x2000010b1e1 ; jmp 0x200001a74ee
0x000002000010b4a9 : jne 0x2000010b4c5 ; add rsp, 0x28 ; ret
0x00000200001118f6 : jne 0x20000111908 ; mov al, byte ptr [r8 + 0xf0] ; ret
0x0000020000112e6c : jne 0x20000112e7b ; add dh, dh ; ret
0x0000020000114443 : jne 0x20000114464 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001144a1 : jne 0x200001144b0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001145c4 : jne 0x20000114560 ; mov rax, r8 ; ret
0x0000020000115280 : jne 0x2000011527f ; mov rcx, r8 ; jmp rdx
0x00000200001182dc : jne 0x200001182d5 ; sub rax, rdx ; ret
0x0000020000118726 : jne 0x200001186b3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011a9ce : jne 0x2000011a9c8 ; mov eax, dword ptr [rip + 0x236dea] ; ret
0x000002000011e59f : jne 0x2000011e5c9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011e97a : jne 0x2000011e994 ; mov eax, r9d ; add rsp, 0x28 ; ret
0x0000020000121de0 : jne 0x20000121d4c ; jmp 0x200001ae0ca
0x00000200001234ef : jne 0x200001234fe ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000123839 : jne 0x20000123841 ; mov eax, edx ; ret
0x0000020000123839 : jne 0x20000123842 ; mov eax, edx ; ret
0x0000020000123835 : jne 0x20000123845 ; test al, al ; jne 0x20000123845 ; mov eax, edx ; ret
0x0000020000123835 : jne 0x20000123846 ; test al, al ; jne 0x20000123846 ; mov eax, edx ; ret
0x0000020000125405 : jne 0x20000125414 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012cfd4 : jne 0x2000012cfcc ; mov rax, rcx ; ret
0x000002000012ee3f : jne 0x2000012ee17 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000012f57f : jne 0x2000012f58e ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000012f92b : jne 0x2000012f93e ; mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000012f996 : jne 0x2000012f9b3 ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200001301e7 : jne 0x200001301f0 ; xor al, al ; ret
0x00000200001315ef : jne 0x200001315f4 ; ret
0x0000020000132f3c : jne 0x20000132f26 ; ret
0x0000020000136c36 : jne 0x20000136c49 ; mov rax, r10 ; add rsp, 0x28 ; ret
0x0000020000138878 : jne 0x20000138864 ; mov al, dl ; ret
0x000002000013903c : jne 0x20000139041 ; ret
0x0000020000139624 : jne 0x20000139646 ; mov rdx, r8 ; call qword ptr [rbx]
0x000002000013c293 : jne 0x2000013c2a2 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013d252 : jne 0x2000013d23d ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013f99b : jne 0x2000013f943 ; mov eax, edx ; ret
0x000002000013f99b : jne 0x2000013f944 ; mov eax, edx ; ret
0x000002000013fe7f : jne 0x2000013fe0e ; xor rax, rax ; ret
0x000002000013fe94 : jne 0x2000013fe9f ; mov rax, rcx ; ret
0x000002000013fed8 : jne 0x2000013feaa ; xor eax, eax ; ret
0x000002000013ff1c : jne 0x2000013ff0d ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000200001400db : jne 0x200001400e4 ; xor eax, eax ; ret
0x000002000014010f : jne 0x20000140118 ; xor eax, eax ; ret
0x0000020000140628 : jne 0x20000140615 ; mov rax, rcx ; ret
0x0000020000140695 : jne 0x20000140687 ; ret
0x00000200001406dd : jne 0x200001406d7 ; ret
0x0000020000140b3b : jne 0x20000140b25 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x0000020000140bbb : jne 0x20000140baa ; ret
0x0000020000140d08 : jne 0x20000140cee ; mov rax, rcx ; ret
0x0000020000140d33 : jne 0x20000140d3c ; xor eax, eax ; ret
0x00000200001411ad : jne 0x200001411a5 ; xor rax, rax ; ret
0x000002000014134a : jne 0x2000014133c ; mov rdx, r15 ; mov rcx, r12 ; call r14
0x0000020000141387 : jne 0x20000141379 ; mov rdx, r15 ; mov rcx, rsi ; call r14
0x0000020000141825 : jne 0x20000141823 ; cmp al, dl ; jne 0x20000141838 ; mov rax, rcx ; ret
0x0000020000141829 : jne 0x20000141834 ; mov rax, rcx ; ret
0x00000200001418f3 : jne 0x20000141884 ; xor eax, eax ; ret
0x0000020000141986 : jne 0x20000141948 ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000141c76 : jne 0x20000141bc1 ; mov rax, r11 ; ret
0x0000020000141f4e : jne 0x20000141f44 ; mov rax, rcx ; ret
0x0000020000141f69 : jne 0x20000141f5f ; mov rax, rcx ; ret
0x0000020000141f86 : jne 0x20000141f91 ; mov rax, rcx ; ret
0x0000020000142008 : jne 0x20000141fe4 ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000142061 : jne 0x20000142051 ; mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x000002000014206f : jne 0x2000014208d ; xor eax, eax ; ret
0x000002000014216c : jne 0x20000142148 ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000142185 : jne 0x20000142190 ; mov rax, rcx ; ret
0x00000200001421d5 : jne 0x2000014219d ; xor eax, eax ; ret
0x00000200001449a4 : jne 0x20000144969 ; jmp 0x20000144986
0x000002000014499e : jne 0x2000014496b ; cmp rdi, 0xff ; jne 0x2000014496f ; jmp 0x2000014498c
0x0000020000148e22 : jne 0x20000148e27 ; ret
0x000002000014a916 : jne 0x2000014a8eb ; ret
0x000002000014c676 : jne 0x2000014c680 ; xor dl, dl ; mov al, dl ; ret
0x000002000014c94b : jne 0x2000014c9e3 ; mov al, r11b ; ret
0x000002000014d85b : jne 0x2000014d82b ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000014d8a4 : jne 0x2000014d87f ; xor eax, eax ; ret
0x0000020000157d37 : jne 0x20000157d1f ; mov rax, r8 ; pop rbx ; ret
0x0000020000157d7b : jne 0x20000157d6b ; mov rax, r8 ; pop rbx ; ret
0x0000020000157dac : jne 0x20000157da7 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x0000020000157ded : jne 0x20000157dd6 ; mov rax, r10 ; pop rbx ; ret
0x0000020000157ded : jne 0x20000157dd8 ; mov rax, r10 ; pop rbx ; ret
0x000002000015852b : jne 0x20000158522 ; ret
0x0000020000158437 : jne 0x20000158526 ; ret
0x0000020000159eb5 : jne 0x20000159e92 ; ret
0x0000020000159f29 : jne 0x20000159ed7 ; lock or byte ptr [rsp], 0 ; ret
0x0000020000159fbe : jne 0x20000159f95 ; sfence ; ret
0x0000020000159fbd : jne 0x20000159f96 ; sfence ; ret
0x000002000015c8aa : jne 0x2000015cb0d ; call r10
0x000002000015d8cc : jne 0x2000015d8c5 ; mov rax, r11 ; ret
0x000002000015da6c : jne 0x2000015da65 ; mov rax, r11 ; ret
0x000002000015dc08 : jne 0x2000015dc02 ; ret
0x000002000015dcb6 : jne 0x2000015dcb0 ; ret
0x0000020000167ca9 : jne 0x20000167c9d ; jmp 0x20000030afc
0x0000020000033847 : jne 0x200001687f4 ; ret
0x000002000003d3c2 : jne 0x2000016c278 ; mov rcx, rsi ; call rbx
0x000002000016fd44 : jne 0x2000016fd20 ; jmp 0x2000016fd0e
0x000002000017279f : jne 0x200001727af ; call 0x2000004b835
0x0000020000068faf : jne 0x2000017799a ; ret
0x000002000017ea9a : jne 0x2000017ea7e ; jmp 0x2000007bad1
0x000002000018a635 : jne 0x2000018a615 ; jmp 0x200000a6843
0x000002000018a6d0 : jne 0x2000018a6ca ; mov dword ptr [rbp + 0x58], r12d ; jmp 0x200000a69ca
0x00000200000b8c11 : jne 0x2000018fe7a ; xor eax, eax ; ret
0x000002000019031a : jne 0x20000190335 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000191f54 : jne 0x20000191f26 ; jmp 0x200000be1ac
0x0000020000191ff6 : jne 0x20000191fd4 ; jmp 0x200000be249
0x000002000019207b : jne 0x20000192055 ; jmp 0x200000be2fa
0x00000200000bf0ad : jne 0x2000019239c ; mov dword ptr [rdi], ebx ; jmp 0x200000bf082
0x00000200000c00ba : jne 0x20000192716 ; ret
0x00000200000c0c1e : jne 0x200001929e8 ; xor eax, eax ; ret
0x0000020000192c23 : jne 0x20000192c07 ; jmp 0x200000c1a47
0x00000200000c977c : jne 0x20000195522 ; ret
0x00000200000d01f0 : jne 0x20000196d61 ; mov eax, edx ; jmp 0x200000d0181
0x00000200000d28fa : jne 0x20000197cad ; mov eax, r9d ; ret
0x00000200001a1170 : jne 0x200001a114a ; ret
0x00000200000f920f : jne 0x200001a114e ; ret
0x00000200000fd26f : jne 0x200001a21c9 ; or eax, 0xffffffff ; ret
0x00000200000ffb6c : jne 0x200001a2be8 ; ret
0x00000200001063d2 : jne 0x200001a5c48 ; ret
0x000002000010ca4c : jne 0x200001a7cac ; xor al, al ; ret
0x00000200001a9d6a : jne 0x200001a9d65 ; mov rax, rcx ; ret
0x0000020000116b36 : jne 0x200001ab252 ; ret
0x00000200001ac648 : jne 0x200001ac653 ; mov eax, r10d ; jmp 0x200001ac65a
0x000002000011d72b : jne 0x200001accc8 ; xor al, al ; ret
0x00000200001214d0 : jne 0x200001adeda ; ret
0x00000200001b32ab : jne 0x200001b3270 ; jmp 0x200001b3268
0x0000020000130538 : jne 0x200001b568d ; mov al, 1 ; jmp 0x2000013050e
0x0000020000131bca : jne 0x200001b5e08 ; ret
0x0000020000134550 : jne 0x200001b6544 ; xor eax, eax ; ret
0x00000200001b824a : jne 0x200001b823c ; ret
0x00000200001b8c91 : jne 0x200001b8ca0 ; mov edi, ebx ; jmp 0x200001b8cd6
0x00000200001b9213 : jne 0x200001b9228 ; xor r8d, r8d ; xor edx, edx ; call 0x20000045499
0x00000200001b9b8c : jne 0x200001b9b77 ; jmp 0x2000013b781
0x000002000013fc83 : jne 0x200001bb616 ; ret
0x00000200001bdacd : jne 0x200001bdadb ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001be410 : jne 0x200001be424 ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001bf2e6 : jne 0x200001bf2d4 ; ret
0x00000200001c0379 : jne 0x200001c0394 ; add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret
0x00000200001c2904 : jne 0x200001c28e2 ; xor eax, eax ; ret
0x00000200001c2b34 : jne 0x200001c2b4a ; mov ecx, 0xc000009a ; call 0x200000cee05
0x00000200001c2b5c : jne 0x200001c2b72 ; mov ecx, 0xc000009a ; call 0x200000cee05
0x00000200001c2b7e : jne 0x200001c2b94 ; mov ecx, 0xc000009a ; call 0x200000cee05
0x00000200001c2b9e : jne 0x200001c2bb4 ; mov ecx, 0xc000009a ; call 0x200000cee05
0x00000200001c2bb9 : jne 0x200001c2bc2 ; xor eax, eax ; ret
0x00000200001c4612 : jne 0x200001c4617 ; ret
0x00000200001c4d8b : jne 0x200001c4d9a ; mov eax, 0xc00000bb ; ret
0x00000200001c5364 : jne 0x200001c5373 ; mov eax, 0xc0000001 ; ret
0x00000200001c5383 : jne 0x200001c5392 ; mov eax, 0xc0000022 ; ret
0x00000200001c538e : jne 0x200001c539d ; mov eax, 0xc000000d ; ret
0x00000200001c5754 : jne 0x200001c5763 ; mov eax, 0xc0000022 ; ret
0x00000200001c57b4 : jne 0x200001c57c3 ; mov eax, 0xc0000022 ; ret
0x00000200001c57e4 : jne 0x200001c57f3 ; mov eax, 0xc0000022 ; ret
0x00000200001cba88 : jne 0x200001cba97 ; mov eax, 0xc0000022 ; ret
0x00000200001cbf70 : jne 0x200001cbf10 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001cd77c : jne 0x200001cd7d8 ; mov r8b, dl ; jmp 0x200001cd7ce
0x00000200001cda83 : jne 0x200001cda7c ; add rsp, 0x28 ; ret
0x00000200001d29e8 : jne 0x200001d29f1 ; xor al, al ; ret
0x00000200001d4c17 : jne 0x200001d4be0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d4d3a : jne 0x200001d4d0c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d69fd : jne 0x200001d69ce ; ret
0x00000200001d898e : jne 0x200001d8999 ; mov dword ptr [r8], eax ; ret
0x00000200001d9321 : jne 0x200001d932c ; or eax, 0xffffffff ; ret
0x00000200001da4e7 : jne 0x200001da4df ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001da4e7 : jne 0x200001da4e0 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001db131 : jne 0x200001db155 ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200001dc679 : jne 0x200001dc655 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001de44d : jne 0x200001de45f ; mov byte ptr [rcx + 0xc1], 0 ; ret
0x00000200001e01af : jne 0x200001e01bd ; mov eax, 1 ; ret
0x00000200001e4290 : jne 0x200001e4289 ; mov qword ptr [r8], rax ; ret
0x00000200001ea0fa : jne 0x200001ea0dd ; mov rax, qword ptr [rcx + 0x50] ; add rax, r8 ; ret
0x00000200001ea6fb : jne 0x200001ea6f2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ed6a2 : jne 0x200001ed6ad ; mov eax, r10d ; jmp 0x200001ed6af
0x00000200001ee292 : jne 0x200001ee25f ; jmp 0x200001ee2a3
0x00000200001f44c2 : jne 0x200001f44a0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001fb9e0 : jne 0x200001fb9f2 ; mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200001ff072 : jne 0x200001ff063 ; ret
0x0000020000202656 : jne 0x2000020265f ; xor eax, eax ; ret
0x0000020000205a29 : jne 0x20000205a3c ; mov rax, qword ptr [r8 + 0x410] ; ret
0x0000020000206eb7 : jne 0x20000206ec6 ; mov eax, 0xc000000d ; ret
0x00000200002076c6 : jne 0x200002076ea ; inc dword ptr [rcx + 0x24c] ; ret
0x00000200002089b6 : jne 0x200002089c9 ; mov dword ptr [r10], 0xffffffff ; ret
0x0000020000208a95 : jne 0x20000208a56 ; ret
0x00000200002091e9 : jne 0x200002091e1 ; ret
0x000002000020a1bb : jne 0x2000020a1ca ; mov eax, 1 ; ret
0x0000020000210315 : jne 0x2000021031a ; ret
0x000002000021036a : jne 0x2000021034d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021039e : jne 0x20000210389 ; ret
0x00000200002129fa : jne 0x20000212a5b ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000212b1a : jne 0x20000212b7b ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000214320 : jne 0x2000021432f ; and qword ptr [rdx + 8], 0 ; ret
0x000002000021793c : jne 0x20000217947 ; mov r8, r10 ; jmp 0x2000021795b
0x0000020000217f90 : jne 0x20000217f9b ; mov eax, r10d ; jmp 0x20000217fa2
0x000002000021b88c : jne 0x2000021b819 ; call r9
0x000002000021c35b : jne 0x2000021c366 ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000021eaed : jne 0x2000021ead2 ; ret
0x0000020000222976 : jne 0x2000022296d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000224a3c : jne 0x20000224a4e ; and dword ptr [rcx + 0xac8], 0xfffffffe ; ret
0x0000020000227101 : jne 0x2000022710a ; mov al, dl ; jmp 0x20000227112
0x000002000022b0bb : jne 0x2000022b0c4 ; xor eax, eax ; ret
0x000002000022b0d7 : jne 0x2000022b0e0 ; xor eax, eax ; ret
0x000002000022b0fc : jne 0x2000022b10f ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022b137 : jne 0x2000022b140 ; xor eax, eax ; ret
0x000002000022b2ea : jne 0x2000022b2f3 ; xor eax, eax ; ret
0x000002000022b973 : jne 0x2000022b95e ; ret
0x000002000022e7cf : jne 0x2000022e84d ; in eax, -1 ; add rsp, 0x48 ; ret
0x000002000022fd27 : jne 0x2000022fd12 ; mov al, 1 ; ret
0x0000020000231ec8 : jne 0x20000231ed3 ; mov byte ptr [rdx + 2], cl ; ret
0x0000020000232471 : jne 0x2000023244d ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200002332cf : jne 0x200002332d8 ; mov al, 1 ; ret
0x0000020000235b01 : jne 0x20000235ae5 ; not r9d ; mov eax, r9d ; ret
0x0000020000369478 : jne 0x20000369481 ; xor al, al ; ret
0x000002000036c913 : jne 0x2000036c925 ; mov rax, qword ptr [rdx] ; test al, 1 ; je 0x2000036c926 ; ret
0x000002000036d89c : jne 0x2000036d8a1 ; ret
0x000002000036d917 : jne 0x2000036d8f8 ; ret
0x000002000036db51 : jne 0x2000036db28 ; mov qword ptr [r8], r10 ; ret
0x000002000036dd7e : jne 0x2000036dd6b ; ret
0x00000200003729a7 : jne 0x200003729ac ; push rsi ; ret
0x0000020000378781 : jne 0x20000378781 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000037e038 : jne 0x2000037e043 ; mov eax, r10d ; jmp 0x2000037e04c
0x0000020000383473 : jne 0x2000038347c ; mov eax, edx ; jmp 0x20000383431
0x0000020000383cba : jne 0x20000383ce1 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000383cb9 : jne 0x20000383ce2 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000038a717 : jne 0x2000038a726 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000038c983 : jne 0x2000038c9a0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003957cb : jne 0x2000039583f ; call qword ptr [rsi]
0x000002000039b2f2 : jne 0x2000039b303 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003a4201 : jne 0x200003a418c ; test bl, bl ; js 0x200003a4191 ; jmp 0x200003a41b6
0x00000200003a813c : jne 0x200003a814b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ac188 : jne 0x200003ac190 ; mov eax, edx ; ret
0x00000200003ac188 : jne 0x200003ac191 ; mov eax, edx ; ret
0x00000200003b07aa : jne 0x200003b07bf ; xor eax, eax ; ret
0x00000200003b1169 : jne 0x200003b1165 ; jmp 0x200003b1186
0x00000200003b2ea9 : jne 0x200003b2e99 ; add rsp, 0x28 ; ret
0x00000200003b50d2 : jne 0x200003b50c8 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c6d7b : jne 0x200003c6d88 ; call 0x20000032fc4
0x00000200003cef60 : jne 0x200003cef6c ; and qword ptr [r9], 0 ; ret
0x00000200003d2d10 : jne 0x200003d2d21 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003e80cf : jne 0x200003e80e2 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ec687 : jne 0x200003ec682 ; mov rax, r9 ; ret
0x00000200003eed04 : jne 0x200003eed13 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ef45e : jne 0x200003ef448 ; cmp r9d, 6 ; jne 0x200003ef4c8 ; ret
0x00000200003ef4be : jne 0x200003ef4b4 ; mov eax, 0xc000000d ; ret
0x00000200003ef464 : jne 0x200003ef4c2 ; ret
0x00000200003ef58d : jne 0x200003ef5ea ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f0ea8 : jne 0x200003f0e97 ; call 0x200000bd0e4
0x00000200003f25c9 : jne 0x200003f25d4 ; mov al, r9b ; ret
0x00000200003f3147 : jne 0x200003f3149 ; ret
0x00000200003f6dd6 : jne 0x200003f6de5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f72ce : jne 0x200003f72d3 ; ret
0x0000020000402943 : jne 0x200004028fa ; mov ebx, 0xc0000225 ; jmp 0x20000402917
0x0000020000402b2a : jne 0x20000402b35 ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000402b32 : jne 0x20000402b3d ; lea eax, dword ptr [rcx + 2] ; ret
0x0000020000402b42 : jne 0x20000402b59 ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200004059bc : jne 0x200004059fe ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004062ee : jne 0x200004062c9 ; mov eax, r10d ; jmp 0x200004062d4
0x0000020000408148 : jne 0x20000408157 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000055c634 : jne 0x20000408935 ; jmp 0x2000040893f
0x000002000040cc00 : jne 0x2000040cc49 ; mov qword ptr [r9], r10 ; ret
0x0000020000414073 : jne 0x20000414086 ; lea rax, qword ptr [rip - 0x14069c] ; ret
0x00000200004149c1 : jne 0x200004149c6 ; ret
0x0000020000415b40 : jne 0x20000415b45 ; ret
0x0000020000416221 : jne 0x2000041622e ; add rsp, 0x28 ; ret
0x00000200004167bf : jne 0x200004167c4 ; ret
0x0000020000416b39 : jne 0x20000416b3e ; ret
0x0000020000416b38 : jne 0x20000416b3f ; ret
0x000002000041aa6f : jne 0x2000041aa82 ; lea rax, qword ptr [rip - 0x147098] ; ret
0x000002000041ac07 : jne 0x2000041abd5 ; leave ; dec dword ptr [rax - 0x7f] ; ret
0x000002000041c4b2 : jne 0x2000041c481 ; ret
0x0000020000422163 : jne 0x20000422172 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000422612 : jne 0x2000042260c ; xor al, al ; ret
0x0000020000425a0b : jne 0x200004259ff ; ret
0x0000020000427317 : jne 0x2000042731c ; ret
0x0000020000427312 : jne 0x20000427336 ; test cl, 0xf8 ; jne 0x20000427321 ; ret
0x000002000042823f : jne 0x2000042824e ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000042899a : jne 0x2000042898e ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000429232 : jne 0x20000429245 ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000042add5 : jne 0x2000042ade8 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042afc8 : jne 0x2000042afd1 ; xor al, al ; ret
0x000002000042bb4c : jne 0x2000042bb43 ; ret
0x000002000042e832 : jne 0x2000042e823 ; ret
0x000002000042f55e : jne 0x2000042f567 ; mov al, 1 ; ret
0x000002000042f559 : jne 0x2000042f56c ; cmp r9d, edx ; jne 0x2000042f56c ; mov al, 1 ; ret
0x000002000043113e : jne 0x20000431130 ; mov al, 1 ; ret
0x000002000043158f : jne 0x20000431594 ; ret
0x00000200004315bf : jne 0x200004315c4 ; ret
0x0000020000432923 : jne 0x20000432928 ; ret
0x000002000043465c : jne 0x20000434665 ; xor eax, eax ; ret
0x000002000043467e : jne 0x20000434690 ; mov al, 1 ; ret
0x0000020000434b4d : jne 0x20000434b60 ; lea rax, qword ptr [rcx + 0x6c8] ; ret
0x0000020000434b59 : jne 0x20000434b6c ; lea rax, qword ptr [rcx + 0x6d0] ; ret
0x0000020000438871 : jne 0x200004388d8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043a0ba : jne 0x2000043a0ff ; mov rcx, rbx ; call 0x20000068fd8
0x000002000043a60e : jne 0x2000043a5cb ; mov rcx, rsi ; call 0x20000068fd8
0x000002000043a8fe : jne 0x2000043a944 ; mov rcx, rsi ; call 0x2000006a618
0x000002000043a8fd : jne 0x2000043a945 ; mov rcx, rsi ; call 0x2000006a619
0x000002000043adb2 : jne 0x2000043ae1d ; mov rcx, r14 ; call 0x2000006a618
0x000002000043b35f : jne 0x2000043b392 ; mov rcx, rsi ; call 0x2000006a618
0x000002000043b35e : jne 0x2000043b393 ; mov rcx, rsi ; call 0x2000006a619
0x000002000043b3d1 : jne 0x2000043b42b ; mov rcx, rbx ; call 0x2000006a618
0x000002000043b3ea : jne 0x2000043b435 ; mov rcx, rbx ; call 0x2000006a618
0x000002000043b3f7 : jne 0x2000043b43f ; mov rcx, rsi ; call 0x20000068fd8
0x000002000043b446 : jne 0x2000043b45a ; mov rcx, rbx ; call 0x2000006a618
0x000002000043b4c1 : jne 0x2000043b4ed ; mov rcx, rsi ; call 0x2000006a618
0x000002000043c2b2 : jne 0x2000043c249 ; call 0x200000690a5
0x000002000043d690 : jne 0x2000043d695 ; ret
0x000002000043dd2b : jne 0x2000043dd32 ; inc dword ptr [rbp - 0x74e58640] ; ret
0x000002000043e981 : jne 0x2000043e9c6 ; mov rcx, r14 ; call 0x2000006a618
0x000002000044006f : jne 0x2000044007c ; add rsp, 0x28 ; ret
0x0000020000442242 : jne 0x20000442238 ; ret
0x0000020000442c28 : jne 0x20000442c56 ; add al, ch ; loopne 0x20000442cad ; ret 0x65ff
0x0000020000444013 : jne 0x20000444095 ; mov rcx, rbp ; call 0x2000006a618
0x0000020000447736 : jne 0x20000447763 ; mov rcx, rdi ; call 0x2000006a618
0x0000020000447722 : jne 0x2000044778f ; mov rcx, rbp ; call 0x2000006a618
0x000002000044807e : jne 0x200004480b5 ; mov rcx, rdi ; call 0x200000690a8
0x00000200004496d7 : jne 0x200004496c4 ; ret
0x0000020000449cca : jne 0x20000449cde ; mov rcx, rbx ; call 0x2000006a618
0x000002000044b88a : jne 0x2000044b8d1 ; ret
0x000002000044ca4a : jne 0x2000044ca69 ; mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000044d870 : jne 0x2000044d881 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000044dba9 : jne 0x2000044dbbc ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000450e01 : jne 0x20000450d98 ; call 0x200000bd0e4
0x00000200004544c4 : jne 0x200004544d3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000045b40a : jne 0x2000045b32a ; xor eax, eax ; pop rbx ; ret
0x000002000046309f : jne 0x200004630ae ; test eax, eax ; setg al ; ret
0x0000020000465358 : jne 0x2000046534e ; ret
0x000002000046536c : jne 0x20000465379 ; add rsp, 0x28 ; ret
0x0000020000467ca7 : jne 0x20000467c94 ; push rbx ; ret
0x000002000046f54c : jne 0x2000046f514 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004751ff : jne 0x2000047517b ; call 0x2000009d471
0x0000020000476779 : jne 0x20000476900 ; inc edx ; jmp 0x2000047676c
0x000002000047b33e : jne 0x2000047b347 ; xor eax, eax ; ret
0x000002000047c5aa : jne 0x2000047c5b3 ; xor eax, eax ; ret
0x0000020000580ddc : jne 0x2000047eae8 ; call 0x200000bd0e8
0x0000020000482027 : jne 0x20000482019 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000482c63 : jne 0x20000482c6c ; xor eax, eax ; ret
0x0000020000482c85 : jne 0x20000482c79 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200004832a3 : jne 0x20000483284 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000484b34 : jne 0x20000484b31 ; mov eax, 1 ; ret
0x0000020000484b28 : jne 0x20000484b31 ; xor eax, eax ; ret
0x000002000048956e : jne 0x2000048957d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004895ac : jne 0x200004895b5 ; xor eax, eax ; ret
0x000002000048bbd2 : jne 0x2000048bbe0 ; xor eax, eax ; ret
0x000002000048dd2b : jne 0x2000048dd3a ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048e382 : jne 0x2000048e3e7 ; mov rcx, rsi ; call 0x2000006a617
0x000002000048e381 : jne 0x2000048e3e8 ; mov rcx, rsi ; call 0x2000006a618
0x000002000048eb6c : jne 0x2000048ea34 ; call 0x200000bd0e9
0x0000020000491e2e : jne 0x20000491e10 ; ret
0x00000200004929c5 : jne 0x20000492987 ; ret
0x00000200004929c4 : jne 0x20000492988 ; ret
0x00000200004929c3 : jne 0x20000492989 ; ret
0x00000200004929bf : jne 0x2000049298d ; cmp byte ptr [rcx + 0x4c], r8b ; jne 0x2000049298d ; ret
0x00000200004929be : jne 0x2000049298e ; cmp byte ptr [rcx + 0x4c], r8b ; jne 0x2000049298e ; ret
0x000002000049ca99 : jne 0x2000049ca79 ; call 0x200000bd0e5
0x000002000049e073 : jne 0x2000049e05d ; mov eax, dword ptr [rcx + 0x110] ; ret
0x000002000049e053 : jne 0x2000049e063 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x000002000049e068 : jne 0x2000049e077 ; test rdx, rdx ; je 0x2000049e05c ; ret
0x000002000049f1ae : jne 0x2000049f1b3 ; ret
0x000002000049f1ae : jne 0x2000049f1b7 ; ret
0x000002000049f2b0 : jne 0x2000049f2b9 ; xor eax, eax ; ret
0x000002000049f30a : jne 0x2000049f30f ; ret
0x000002000049f309 : jne 0x2000049f310 ; ret
0x000002000049f308 : jne 0x2000049f311 ; ret
0x000002000049f304 : jne 0x2000049f315 ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000049f315 ; ret
0x000002000049f303 : jne 0x2000049f316 ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000049f316 ; ret
0x00000200004a061f : jne 0x200004a0624 ; ret
0x00000200004a062f : jne 0x200004a0638 ; xor al, al ; ret
0x00000200004a062e : jne 0x200004a0639 ; xor al, al ; ret
0x00000200004a0648 : jne 0x200004a0650 ; mov al, dl ; ret
0x00000200004a0648 : jne 0x200004a0651 ; mov al, dl ; ret
0x00000200004a13f8 : jne 0x200004a1585 ; inc edx ; jmp 0x200004a13e0
0x00000200004a3859 : jne 0x200004a384e ; ret
0x00000200004a908c : jne 0x200004a909f ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004aa277 : jne 0x200004aa29a ; mov eax, r9d ; ret
0x00000200004ad6aa : jne 0x200004ad6b3 ; mov al, 1 ; ret
0x00000200004add25 : jne 0x200004add2a ; ret
0x00000200004ae544 : jne 0x200004ae513 ; inc r10d ; jmp 0x200004ae51d
0x00000200004b19d2 : jne 0x200004b19b7 ; call 0x2000014dc64
0x00000200004b1ab9 : jne 0x200004b1aa5 ; xor eax, eax ; ret
0x00000200004b1aaf : jne 0x200004b1abe ; mov eax, 1 ; ret
0x00000200004b3f13 : jne 0x200004b3e15 ; jmp 0x200004b3f3d
0x00000200004b4fb6 : jne 0x200004b4f58 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004b7b86 : jne 0x200004b7b97 ; mov r8, rdx ; mov rax, r8 ; ret
0x00000200004b94e2 : jne 0x200004b94ed ; mov al, r9b ; ret
0x00000200004bd1da : jne 0x200004bd1e3 ; xor al, al ; ret
0x00000200004be026 : jne 0x200004be03d ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004bf12a : jne 0x200004bf134 ; xor cl, cl ; mov al, cl ; ret
0x00000200004bf7b0 : jne 0x200004bf7c7 ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200004bfe43 : jne 0x200004bfe50 ; add rsp, 0x28 ; ret
0x00000200004c380f : jne 0x200004c37fa ; xor eax, eax ; ret
0x00000200004c4510 : jne 0x200004c4523 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c6c4b : jne 0x200004c6c58 ; add rsp, 0x58 ; ret
0x00000200004cca19 : jne 0x200004cc9ac ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x00000200004d25ad : jne 0x200004d25b2 ; ret
0x00000200004d25c1 : jne 0x200004d25c6 ; ret
0x00000200004d2a63 : jne 0x200004d2a5b ; cmp rax, r8 ; je 0x200004d2a3a ; ret
0x00000200004d4f4e : jne 0x200004d4f57 ; mov al, 1 ; ret
0x00000200004d7fda : jne 0x200004d7ff5 ; lea rax, qword ptr [rip + 0x5089d] ; ret
0x00000200004d9327 : jne 0x200004d92dd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d9364 : jne 0x200004d9377 ; mov qword ptr [rcx], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x00000200004da897 : jne 0x200004da90e ; mov edx, 0x313 ; call 0x200000b6ab5
0x00000200004daaf4 : jne 0x200004dab03 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004daec2 : jne 0x200004dae9c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004db4a6 : jne 0x200004db4ab ; ret
0x00000200004db4a5 : jne 0x200004db4ac ; ret
0x00000200004dda6a : jne 0x200004dda6a ; mov byte ptr [rip - 0x233ad1], r8b ; ret
0x00000200004e3d6b : jne 0x200004e3d22 ; jmp qword ptr [rcx]
0x00000200004e4043 : jne 0x200004e4050 ; add rsp, 0x28 ; ret
0x00000200004e798e : jne 0x200004e79ca ; mov eax, r8d ; add rsp, 0x28 ; ret
0x00000200004ea35c : jne 0x200004ea365 ; xor eax, eax ; ret
0x00000200004ee5a2 : jne 0x200004ee5af ; add rsp, 0x38 ; ret
0x00000200004f3dbb : jne 0x200004f3dcc ; mov eax, 0xc0000022 ; jmp 0x200004f3d8e
0x00000200004f47bf : jne 0x200004f47c8 ; mov al, 1 ; ret
0x00000200004f9951 : jne 0x200004f995c ; mov rax, r8 ; ret
0x00000200004fb15b : jne 0x200004fb16e ; test cl, 8 ; jne 0x200004fb17a ; xor al, al ; ret
0x00000200004fb160 : jne 0x200004fb175 ; xor al, al ; ret
0x0000020000500276 : jne 0x20000500273 ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000501958 : jne 0x200005018f9 ; mov qword ptr [rbp - 0x61], r14 ; call 0x2000014dc68
0x000002000050195c : jne 0x20000501901 ; call 0x2000014dc64
0x0000020000508e35 : jne 0x20000508e48 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000050a012 : jne 0x2000050a017 ; ret
0x000002000050d4d2 : jne 0x2000050d4ce ; add rsp, 0x30 ; pop rbx ; ret
0x000002000050f645 : jne 0x2000050f657 ; xor bl, bl ; call 0x200001396bf
0x0000020000511f4e : jne 0x20000511f61 ; mov al, r8b ; add rsp, 0x28 ; ret
0x000002000051d487 : jne 0x2000051d493 ; ret
0x000002000051de9e : jne 0x2000051de97 ; ret
0x000002000052010a : jne 0x2000052010f ; ret
0x0000020000532b7f : jne 0x20000532bcc ; mov rcx, rbx ; call 0x2000015dd00
0x0000020000538507 : jne 0x2000053857c ; call qword ptr [r14]
0x000002000053982a : jne 0x20000539844 ; call 0x2000039b778
0x0000020000540eb0 : jne 0x20000540def ; call 0x200000bd0e8
0x00000200003d9449 : jne 0x2000054cada ; ret
0x000002000042f529 : jne 0x20000568eec ; ret
0x000002000057ad5a : jne 0x2000057ad3e ; jmp 0x20000467039
0x0000020000587bab : jne 0x20000587bc0 ; mov edi, 0xc000009a ; jmp 0x20000493e27
0x0000020000590dfb : jne 0x20000590e06 ; call 0x200000bd0e4
0x00000200004d8004 : jne 0x2000059d7be ; mov eax, edx ; ret
0x00000200004df02d : jne 0x200005a053f ; ret
0x00000200004edef4 : jne 0x200005a58a8 ; mov al, dl ; ret
0x00000200004f49ee : jne 0x200005a7a0a ; ret
0x00000200005a8233 : jne 0x200005a824e ; call 0x200001ca10d
0x00000200005b5c80 : jne 0x200005b5c6c ; mov eax, r8d ; ret
0x00000200005b6698 : jne 0x200005b66a6 ; xor eax, eax ; ret
0x00000200005ba4de : jne 0x200005ba4b9 ; mov rcx, rbx ; call 0x2000042670f
0x00000200005c0e01 : jne 0x200005c0e0c ; call 0x200000bd0e4
0x00000200005ce6db : jne 0x200005ce6ea ; mov eax, 0xc000000d ; ret
0x00000200005cee25 : jne 0x200005cee30 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200005ceeab : jne 0x200005ceeba ; mov eax, 0xc000000d ; ret
0x00000200005d8ef1 : jne 0x200005d8efa ; xor eax, eax ; ret
0x00000200005db44e : jne 0x200005db462 ; mov ebx, 0xc000009a ; jmp 0x200005db421
0x00000200005db69b : jne 0x200005db68d ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200005ddf22 : jne 0x200005ddf1b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e14ae : jne 0x200005e1473 ; jmp 0x200005e14c9
0x00000200005f52fa : jne 0x200005f52eb ; xor eax, eax ; ret
0x00000200005f637d : jne 0x200005f6352 ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200005f9bb3 : jne 0x200005f9b7d ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200005fa2cf : jne 0x200005fa2d8 ; xor eax, eax ; ret
0x0000020000600a31 : jne 0x20000600a04 ; add rsp, 0x38 ; ret
0x0000020000601000 : jne 0x2000060100c ; and qword ptr [r8], 0 ; ret
0x0000020000602edb : jne 0x20000602ee4 ; mov al, 1 ; ret
0x0000020000609397 : jne 0x2000060939c ; mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000060acf7 : jne 0x2000060acd3 ; mov rax, rdx ; ret
0x00000200006134ce : jne 0x200006134c8 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x00000200006134ce : jne 0x200006134c9 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000614263 : jne 0x2000061426c ; xor al, al ; ret
0x0000020000614bf0 : jne 0x20000614bff ; mov eax, 1 ; ret
0x00000200006160a2 : jne 0x20000616092 ; mov eax, ecx ; shr eax, 0x10 ; add eax, ecx ; ret
0x000002000061663e : jne 0x20000616647 ; xor al, al ; ret
0x0000020000619a8e : jne 0x20000619a9d ; mov eax, 0xc00000bb ; ret
0x000002000061ca4c : jne 0x2000061ca5a ; mov eax, 1 ; ret
0x000002000061cb8f : jne 0x2000061cb98 ; mov al, 1 ; ret
0x000002000061cbfe : jne 0x2000061cc0b ; movzx eax, r10w ; jmp 0x2000061cc7c
0x000002000061cc73 : jne 0x2000061cc7e ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000624bf2 : jne 0x20000624bcc ; xor eax, eax ; ret
0x000002000062a247 : jne 0x2000062a227 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062e132 : jne 0x2000062e11c ; mov rax, rcx ; ret
0x000002000062f8b2 : jne 0x2000062f8ab ; jmp 0x2000062f8c0
0x00000200006321f0 : jne 0x200006321e6 ; add rsp, 0x28 ; ret
0x0000020000644d38 : jne 0x20000644d45 ; mov r8b, 1 ; mov al, r8b ; ret
0x0000020000644dc4 : jne 0x20000644d7c ; mov al, 1 ; ret
0x0000020000644d76 : jne 0x20000644dca ; xor al, al ; ret
0x0000020000644d9b : jne 0x20000644dcf ; and r8b, 1 ; mov al, r8b ; ret
0x0000020000647d3c : jne 0x20000647d28 ; mov eax, 0xc0000225 ; ret
0x000002000064dc58 : jne 0x2000064dc65 ; add rsp, 0x28 ; ret
0x0000020000651fdf : jne 0x20000651f8f ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000065ac6c : jne 0x2000065ac3b ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000002000065d146 : jne 0x2000065d12c ; ret
0x000002000065d51b : jne 0x2000065d512 ; ret
0x000002000066223a : jne 0x2000066223f ; ret
0x0000020000666f25 : jne 0x20000666f2a ; ret
0x0000020000666f6d : jne 0x20000666f7f ; sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000066761f : jne 0x200006675cf ; ret
0x000002000066844c : jne 0x20000668426 ; ret
0x00000200006688ab : jne 0x2000066889a ; xor al, al ; ret
0x00000200006688f7 : jne 0x200006688e7 ; xor al, al ; ret
0x0000020000668f83 : jne 0x20000668f94 ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000066de36 : jne 0x2000066de3f ; xor eax, eax ; ret
0x000002000066edfc : jne 0x2000066edf4 ; xor eax, eax ; ret
0x000002000067158b : jne 0x20000671594 ; xor eax, eax ; ret
0x0000020000671ad9 : jne 0x20000671aeb ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x0000020000672456 : jne 0x20000672443 ; ret
0x000002000067281d : jne 0x20000672850 ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x0000020000673339 : jne 0x20000673348 ; mov eax, 0xc000042a ; ret
0x00000200006733bd : jne 0x200006733cc ; mov eax, 0xc000042a ; ret
0x0000020000674007 : jne 0x20000673ffc ; ret
0x0000020000674042 : jne 0x20000674026 ; ret
0x0000020000674700 : jne 0x200006746fc ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000674c62 : jne 0x20000674c53 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006756fc : jne 0x2000067570f ; movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000676f72 : jne 0x20000676f7a ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200006797f9 : jne 0x200006797f5 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000679b0b : jne 0x20000679adc ; jmp qword ptr [rcx]
0x000002000067a57f : jne 0x2000067a58e ; lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x000002000067b006 : jne 0x2000067b018 ; mov dword ptr [r8], 0x104 ; ret
0x000002000067b280 : jne 0x2000067b250 ; xor eax, eax ; ret
0x000002000067c1ba : jne 0x2000067c1c2 ; xor eax, eax ; ret
0x000002000067d097 : jne 0x2000067d08f ; xor eax, eax ; ret
0x00000200006800aa : jne 0x200006800a4 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006800e7 : jne 0x200006800f6 ; mov eax, 1 ; ret
0x00000200006869b8 : jne 0x200006869c7 ; mov eax, 0xc00000bb ; ret
0x0000020000689155 : jne 0x20000689144 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068c5d3 : jne 0x2000068c5e2 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068f2a6 : jne 0x2000068f267 ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200006d715d : jne 0x200006d7178 ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006d863b : jne 0x200006d864f ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006d9341 : jne 0x200006d9357 ; mov rdx, r14 ; mov rcx, rbx ; call r12
0x00000200006d9a19 : jne 0x200006d9a2d ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006daf4d : jne 0x200006daf61 ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006dc8f4 : jne 0x200006dc908 ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006ddd9e : jne 0x200006dddbc ; mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006df034 : jne 0x200006df048 ; mov edx, esi ; mov rcx, rbx ; call r12
0x00000200006ea283 : jne 0x200006ea278 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200006ed789 : jne 0x200006ed780 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006ed789 : jne 0x200006ed781 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f58a3 : jne 0x200006f5892 ; ret
0x00000200006f59a4 : jne 0x200006f59bf ; lea rax, qword ptr [rip - 0x626951] ; ret
0x00000200006f59b8 : jne 0x200006f59eb ; lea rax, qword ptr [rip - 0x598dc1] ; ret
0x00000200006f9aef : jne 0x200006f9adb ; xor eax, eax ; ret
0x00000200006fa120 : jne 0x200006fa0e9 ; xor eax, eax ; ret
0x00000200006fed36 : jne 0x200006fed49 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006fedba : jne 0x200006fedcd ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000070cd2b : jne 0x2000070cd30 ; ret
0x00000200007135ff : jne 0x200007135de ; ret
0x000002000071755f : jne 0x2000071754b ; ret
0x0000020000719274 : jne 0x20000719281 ; add rsp, 0x58 ; ret
0x00000200007193a7 : jne 0x200007193b4 ; add rsp, 0x28 ; ret
0x0000020000721736 : jne 0x20000721729 ; jmp 0x200007217ac
0x000002000072188f : jne 0x2000072188a ; ret 0x45ff
0x00000200006f8d07 : jne 0x20000722716 ; ret
0x0000020000729f9c : jne 0x20000729f78 ; sub r9, rax ; mov rax, r9 ; ret
0x000002000000df81 : jno 0x2000000dfed ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x0000020000157e15 : jno 0x20000157e1b ; add byte ptr [rax], al ; jmp rdx
0x00000200001c9eda : jno 0x200001c9efb ; add bl, ch ; or dword ptr [rbp - 0x7c], eax ; ret
0x00000200003fafde : jno 0x200003fafb3 ; inc dword ptr [rbp - 0x1b7af040] ; ret 0x15
0x000002000047614d : jno 0x200004760dc ; ret
0x0000020000494573 : jno 0x2000049457a ; ret 0x85ff
0x00000200004ac663 : jno 0x200004ac6c9 ; ret 0x4dff
0x00000200004b22e7 : jno 0x200004b2276 ; ret
0x00000200004b59e0 : jno 0x200004b59f1 ; add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4566
0x00000200004b59df : jno 0x200004b59f2 ; add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4566
0x00000200004fd57d : jno 0x200004fd589 ; ret
0x0000020000552714 : jno 0x20000552752 ; jmp 0x2007554ad23
0x0000020000570720 : jno 0x20000570795 ; in eax, dx ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000020000667923 : jno 0x200006678d0 ; ret
0x0000020000675687 : jno 0x2000067560b ; ret
0x000002000067c9fb : jno 0x2000067ca0e ; ret
0x000002000068a40b : jno 0x2000068a3bf ; sar edi, -0xa ; ret
0x00000200006f66fd : jno 0x200006f66aa ; dec dword ptr [rax - 0x75] ; ret
0x0000020000713ddb : jno 0x20000713db3 ; ret
0x0000020000720d13 : jno 0x20000720d25 ; ret
0x00000200007292b2 : jno 0x20000729274 ; dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x0000020000463fdc : jnp 0x1ffc15630ad ; or byte ptr [r11], al ; ret 0x840f
0x000002000000de60 : jnp 0x2000000dedb ; add cl, bh ; jp 0x2000000de6b ; ret 0x4adb
0x000002000008a2ac : jnp 0x2000008a2cc ; mov rsp, r11 ; pop rbp ; ret
0x000002000008f4f5 : jnp 0x2000008f525 ; mov rsp, r11 ; pop rbp ; ret
0x000002000008fa4c : jnp 0x2000008fa7d ; mov rsp, r11 ; pop r15 ; ret
0x00000200000b6c98 : jnp 0x200000b6cc9 ; mov rsp, r11 ; pop r15 ; ret
0x00000200000bf296 : jnp 0x200000bf2c7 ; mov rsp, r11 ; pop r14 ; ret
0x00000200000c021e : jnp 0x200000c0246 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000e29d3 : jnp 0x200000e2a0a ; jne 0x200000e287d ; jmp 0x200000e29a9
0x00000200000e3799 : jnp 0x200000e37c1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f4612 : jnp 0x200000f463a ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f6232 : jnp 0x200000f625a ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f65ba : jnp 0x200000f65e2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f8d65 : jnp 0x200000f8d96 ; mov rsp, r11 ; pop r12 ; ret
0x00000200000fd68d : jnp 0x200000fd6ad ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ff1a7 : jnp 0x200000ff1cf ; mov rsp, r11 ; pop rbp ; ret
0x000002000010057a : jnp 0x200001005a2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000102bfc : jnp 0x20000102c2d ; mov rsp, r11 ; pop r14 ; ret
0x00000200001030b9 : jnp 0x2000010310c ; sbb al, 0 ; ret
0x000002000010ab4c : jnp 0x2000010ab7c ; mov rsp, r11 ; pop rbp ; ret
0x000002000010f2c0 : jnp 0x2000010f2e8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010f331 : jnp 0x2000010f351 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010fcb0 : jnp 0x2000010fcd8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011115b : jnp 0x20000111183 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000111478 : jnp 0x200001114a0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001169b9 : jnp 0x200001169d9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011944b : jnp 0x20000119473 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011a2c4 : jnp 0x2000011a2f4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ab4b : jnp 0x2000011ab73 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000122ea8 : jnp 0x20000122ec8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000129ac3 : jnp 0x20000129af3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000135f7e : jnp 0x20000135fae ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ac3e : jnp 0x2000013ac6e ; mov rsp, r11 ; pop rbp ; ret
0x000002000013d0e8 : jnp 0x2000013d118 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ebe1 : jnp 0x2000013ec01 ; mov rsp, r11 ; pop rbp ; ret
0x000002000014786a : jnp 0x200001478e9 ; sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x00000200001b0f6c : jnp 0x200001b0f67 ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200001c4c89 : jnp 0x200001c4cb9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d2f01 : jnp 0x200001d2ef9 ; adc byte ptr [rax], al ; ret
0x00000200001d522a : jnp 0x200001d525a ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d5757 : jnp 0x200001d5777 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001da97d : jnp 0x200001da9ad ; mov rsp, r11 ; pop rbp ; ret
0x00000200001dd508 : jnp 0x200001dd538 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb7b0 : jnp 0x200001eb7e1 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001ee6c2 : jnp 0x200001ee6f2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001efcfc : jnp 0x200001efd24 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fb48c : jnp 0x200001fb4bd ; mov rsp, r11 ; pop r14 ; ret
0x0000020000202bc5 : jnp 0x20000202bf6 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000202f07 : jnp 0x20000202f37 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000203169 : jnp 0x20000203199 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000203916 : jnp 0x20000203946 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204485 : jnp 0x200002044ad ; mov rsp, r11 ; pop rbp ; ret
0x000002000020457b : jnp 0x200002045a3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204946 : jnp 0x20000204976 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022af44 : jnp 0x2000022af6c ; mov rsp, r11 ; pop rbp ; ret
0x000002000022fafd : jnp 0x2000022fb25 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000235030 : jnp 0x20000235058 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000368ae8 : jnp 0x20000368b19 ; mov rsp, r11 ; pop r14 ; ret
0x000002000036d5ba : jnp 0x2000036d5e2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000036d778 : jnp 0x2000036d7a8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000037a81e : jnp 0x2000037a84e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000384912 : jnp 0x2000038493b ; mov rsp, r11 ; pop r14 ; ret
0x000002000038603d : jnp 0x2000038606e ; mov rsp, r11 ; pop r14 ; ret
0x000002000038adb5 : jnp 0x2000038ade5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a0fa7 : jnp 0x200003a0fd8 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003b0c25 : jnp 0x200003b0c55 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b263c : jnp 0x200003b2665 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003c5181 : jnp 0x200003c5143 ; ret
0x00000200003e7dab : jnp 0x200003e7dcb ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e9991 : jnp 0x200003e99c2 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003ef6c5 : jnp 0x200003ef6ee ; mov rsp, r11 ; pop r14 ; ret
0x00000200003f115d : jnp 0x200003f1186 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003f7a07 : jnp 0x200003f7a01 ; ret 0xf10
0x00000200003f8011 : jnp 0x200003f7fa9 ; ret
0x0000020000405196 : jnp 0x200004051c6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000040a07e : jnp 0x2000040a0af ; mov rsp, r11 ; pop r14 ; ret
0x000002000040ab21 : jnp 0x2000040ab52 ; mov rsp, r11 ; pop r14 ; ret
0x000002000041c428 : jnp 0x2000041c451 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004241f3 : jnp 0x20000424223 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004261be : jnp 0x200004261e6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000044cf73 : jnp 0x2000044cf9c ; mov rsp, r11 ; pop r14 ; ret
0x0000020000450c96 : jnp 0x20000450cc7 ; mov rsp, r11 ; pop r14 ; ret
0x000002000045f6c8 : jnp 0x2000045f6f0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000460625 : jnp 0x20000460656 ; mov rsp, r11 ; pop r14 ; ret
0x000002000046993f : jnp 0x20000469968 ; mov rsp, r11 ; pop r14 ; ret
0x000002000046c08d : jnp 0x2000046c0be ; mov rsp, r11 ; pop r14 ; ret
0x000002000046d6b5 : jnp 0x2000046d6e6 ; mov rsp, r11 ; pop r14 ; ret
0x000002000046f133 : jnp 0x2000046f164 ; mov rsp, r11 ; pop r14 ; ret
0x000002000046f3e9 : jnp 0x2000046f3cd ; ret 0x32ff
0x0000020000477629 : jnp 0x20000477651 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000483176 : jnp 0x2000048319f ; mov rsp, r11 ; pop r14 ; ret
0x0000020000484aee : jnp 0x20000484b16 ; mov rsp, r11 ; pop rbp ; ret
0x000002000048a021 : jnp 0x2000048a03c ; add esi, dword ptr [rbp + rcx*2 - 0x75] ; sbb byte ptr [r11], spl ; ret 0xc084
0x000002000048d500 : jnp 0x2000048d530 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004920d9 : jnp 0x20000492102 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000495c28 : jnp 0x20000495c48 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000499797 : jnp 0x200004997bf ; mov rsp, r11 ; pop rbp ; ret
0x000002000049aaa2 : jnp 0x2000049aad2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049ad10 : jnp 0x2000049ad40 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049e30f : jnp 0x2000049e340 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004a2485 : jnp 0x200004a24ad ; mov rsp, r11 ; pop rbp ; ret
0x00000200004a41f0 : jnp 0x200004a4221 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004a590d : jnp 0x200004a592e ; mov rsp, r11 ; pop r14 ; ret
0x00000200004a9814 : jnp 0x200004a983d ; mov rsp, r11 ; pop r14 ; ret
0x00000200004c15ae : jnp 0x200004c159e ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200004c2cb2 : jnp 0x200004c2cda ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c34d4 : jnp 0x200004c34fc ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c3652 : jnp 0x200004c3682 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c5c0d : jnp 0x200004c5c2d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7215 : jnp 0x200004c723d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7347 : jnp 0x200004c7377 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c749a : jnp 0x200004c74ca ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7a16 : jnp 0x200004c7a06 ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200004c9287 : jnp 0x200004c92af ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c9c57 : jnp 0x200004c9c87 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cba03 : jnp 0x200004cba23 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cd049 : jnp 0x200004cd071 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cfb15 : jnp 0x200004cfb45 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d0213 : jnp 0x200004d0243 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d1728 : jnp 0x200004d1759 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004d1f2f : jnp 0x200004d1f5f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d6295 : jnp 0x200004d62c6 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004d68df : jnp 0x200004d6907 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d69a0 : jnp 0x200004d69d0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d7bf7 : jnp 0x200004d7c03 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x00000200004d8b74 : jnp 0x200004d8b9c ; mov rsp, r11 ; pop rbp ; ret
0x00000200004df56b : jnp 0x200004df593 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004df65c : jnp 0x200004df684 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e2e5f : jnp 0x200004e2e90 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004e3a81 : jnp 0x200004e3ab1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e6b5e : jnp 0x200004e6b8e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ee010 : jnp 0x200004ee040 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ef31e : jnp 0x200004ef321 ; ret
0x00000200004f2040 : jnp 0x200004f2060 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f22d7 : jnp 0x200004f2307 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f2cdc : jnp 0x200004f2d04 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f3b05 : jnp 0x200004f3b2d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f9498 : jnp 0x200004f94a1 ; test byte ptr [rcx + 0xf], al ; ret
0x00000200004fdd41 : jnp 0x200004fdd69 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000500396 : jnp 0x200005003c6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005032a2 : jnp 0x200005032c2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000505122 : jnp 0x2000050514a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005051c7 : jnp 0x200005051e7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050e9d9 : jnp 0x2000050e9fb ; fcos ; call 0x20000139677
0x0000020000510f70 : jnp 0x20000510fa0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051191e : jnp 0x2000051194e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000511a50 : jnp 0x20000511a80 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000514bfc : jnp 0x20000514c2c ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a4fe : jnp 0x2000051a52e ; mov rsp, r11 ; pop rbp ; ret
0x000002000051bc09 : jnp 0x2000051bc39 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051c462 : jnp 0x2000051c482 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051cdbe : jnp 0x2000051cd9c ; push rsi ; ret
0x000002000051d5ac : jnp 0x2000051d5d4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051ed25 : jnp 0x2000051ed55 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051fbc0 : jnp 0x2000051fbf0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000571325 : jnp 0x20000571318 ; push rsi ; ret
0x000002000058bc3d : jnp 0x2000058bc5e ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005b3e21 : jnp 0x200005b3e1e ; dec dword ptr [rax - 0x75] ; ret
0x00000200005b57b0 : jnp 0x200005b57d8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c04a2 : jnp 0x200005c04d2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c31fa : jnp 0x200005c3222 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c9ab1 : jnp 0x200005c9ae2 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005cafee : jnp 0x200005cb017 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005cd37f : jnp 0x200005cd39f ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ce236 : jnp 0x200005ce266 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005cec9d : jnp 0x200005ceca0 ; ret 0x3b41
0x00000200005d37c9 : jnp 0x200005d37f1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005da29b : jnp 0x200005da2cb ; mov rsp, r11 ; pop rbp ; ret
0x00000200005da855 : jnp 0x200005da886 ; mov rsp, r11 ; pop r15 ; ret
0x00000200005dab24 : jnp 0x200005dab4c ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dcd83 : jnp 0x200005dcdb3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005e86fd : jnp 0x200005e872d ; mov rsp, r11 ; pop rbp ; ret
0x00000200005e9577 : jnp 0x200005e95a0 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005e965e : jnp 0x200005e9687 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005ea9bc : jnp 0x200005ea9dc ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ecbbb : jnp 0x200005ecbe3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005eccc2 : jnp 0x200005eccea ; mov rsp, r11 ; pop rbp ; ret
0x00000200005fc6d9 : jnp 0x200005fc70a ; mov rsp, r11 ; pop r14 ; ret
0x00000200005fe519 : jnp 0x200005fe53a ; mov rsp, r11 ; pop r14 ; ret
0x0000020000606dc6 : jnp 0x20000606df7 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000607ece : jnp 0x20000607efe ; mov rsp, r11 ; pop rbp ; ret
0x0000020000609a76 : jnp 0x20000609a96 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000609c4d : jnp 0x20000609c6d ; mov rsp, r11 ; pop rbp ; ret
0x000002000060be3d : jnp 0x2000060be5d ; mov rsp, r11 ; pop rbp ; ret
0x000002000061018d : jnp 0x200006101bd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000619e39 : jnp 0x20000619e6a ; mov rsp, r11 ; pop r14 ; ret
0x000002000061bb61 : jnp 0x2000061bb89 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061bd51 : jnp 0x2000061bd71 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061e283 : jnp 0x2000061e2ab ; mov rsp, r11 ; pop rbp ; ret
0x0000020000621396 : jnp 0x200006213b6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000624375 : jnp 0x200006243a5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062515f : jnp 0x20000625187 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062baf9 : jnp 0x2000062bb29 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062f26c : jnp 0x2000062f29c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000633a92 : jnp 0x20000633aba ; mov rsp, r11 ; pop rbp ; ret
0x0000020000635d3b : jnp 0x20000635d6b ; mov rsp, r11 ; pop rbp ; ret
0x000002000064115e : jnp 0x2000064118e ; mov rsp, r11 ; pop rbp ; ret
0x00000200006461b9 : jnp 0x200006461e9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006470e0 : jnp 0x20000647108 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000648b35 : jnp 0x20000648b5d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000649365 : jnp 0x20000649385 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064995e : jnp 0x2000064998f ; mov rsp, r11 ; pop r14 ; ret
0x000002000064af5d : jnp 0x2000064af8e ; mov rsp, r11 ; pop r14 ; ret
0x000002000064b05c : jnp 0x2000064b08d ; mov rsp, r11 ; pop r14 ; ret
0x000002000064b144 : jnp 0x2000064b175 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000652773 : jnp 0x200006527a4 ; mov rsp, r11 ; pop r15 ; ret
0x000002000065dc37 : jnp 0x2000065dc67 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000664b89 : jnp 0x20000664bb9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000066e089 : jnp 0x2000066e0d6 ; ret
0x00000200006794a1 : jnp 0x20000679472 ; jmp qword ptr [rcx]
0x00000200006797e1 : jnp 0x20000679826 ; ret
0x00000200006eb037 : jnp 0x200006eb068 ; mov rsp, r11 ; pop r12 ; ret
0x00000200006ef089 : jnp 0x200006ef0a9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006fc400 : jnp 0x200006fc420 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006fd6b4 : jnp 0x200006fd6e4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006fe1c9 : jnp 0x200006fe1fa ; mov rsp, r11 ; pop r14 ; ret
0x0000020000701700 : jnp 0x20000701720 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000703e72 : jnp 0x20000703ea2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007050a8 : jnp 0x200007050c8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007055f4 : jnp 0x2000070561c ; mov rsp, r11 ; pop rbp ; ret
0x000002000070b7e3 : jnp 0x2000070b813 ; mov rsp, r11 ; pop rbp ; ret
0x000002000070ce6f : jnp 0x2000070ce8f ; mov rsp, r11 ; pop rbp ; ret
0x000002000070d6e3 : jnp 0x2000070d703 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000712a89 : jnp 0x20000712ab9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717407 : jnp 0x2000071742f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717b3f : jnp 0x20000717b67 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717f1c : jnp 0x20000717f3c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007285f1 : jnp 0x20000728581 ; ret 0xebff
0x000002000072a1c2 : jnp 0x2000072a1ea ; mov rsp, r11 ; pop rbp ; ret
0x000002000072cfdb : jnp 0x2000072d00b ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ef6df : jnp 0x2002b4fff32 ; ret
0x0000020000010751 : jns 0x2000001071b ; ret 0xb0be
0x00000200000211b2 : jns 0x20000021160 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x0000020000021af3 : jns 0x20000021afc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x0000020000021af2 : jns 0x20000021afd ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x0000020000033855 : jns 0x20000033867 ; add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x000002000009bee1 : jns 0x2000009bf07 ; add dh, dh ; ret
0x000002000009c776 : jns 0x2000009c783 ; add rsp, 0x58 ; ret
0x000002000009db47 : jns 0x2000009db60 ; add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x00000200000a9106 : jns 0x200000a9130 ; add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200000b8fe7 : jns 0x200000b8f95 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000cbdbb : jns 0x200000cbdc0 ; ret
0x00000200000cd03c : jns 0x200000cd041 ; ret
0x00000200000cdcc4 : jns 0x200000cdcc9 ; ret
0x00000200000ceb6b : jns 0x200000ceb70 ; ret
0x000002000013004d : jns 0x20000130058 ; mov r8d, r10d ; jmp 0x20000130015
0x00000200001b5fa1 : jns 0x200001322c0 ; jmp 0x200001321fd
0x000002000013f203 : jns 0x2000013f199 ; sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141fb8 : jns 0x20000141fc3 ; or eax, 0xffffffff ; ret
0x0000020000151bd1 : jns 0x20000151c0c ; add rsp, 0x138 ; ret
0x0000020000153f8c : jns 0x20000153fc7 ; add rsp, 0x138 ; ret
0x00000200001541a8 : jns 0x200001541e3 ; add rsp, 0x138 ; ret
0x0000020000156016 : jns 0x20000156051 ; add rsp, 0x138 ; ret
0x000002000015a618 : jns 0x2000015a653 ; add rsp, 0x138 ; ret
0x000002000015bc11 : jns 0x2000015bc4c ; add rsp, 0x138 ; ret
0x000002000015c823 : jns 0x2000015c82d ; add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x0000020000187836 : jns 0x20000187883 ; int1 ; push rsi ; ret
0x0000020000196fc5 : jns 0x20000196fca ; ret
0x00000200001a0f4c : jns 0x200001a0f48 ; dec dword ptr [rcx - 0x75] ; ret 0x2b48
0x00000200001a10dd : jns 0x200001a10d9 ; dec dword ptr [rax + 0x3b] ; ret 0xc77
0x00000200001b2f8b : jns 0x200001b2f88 ; jmp qword ptr [rcx]
0x00000200001cdc7d : jns 0x200001cdc8b ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001d6dfa : jns 0x200001d6e09 ; mov eax, 0xc0000022 ; ret
0x00000200001d92ee : jns 0x200001d92e3 ; or eax, 0xffffffff ; ret
0x00000200001f6e07 : jns 0x200001f6e16 ; mov eax, 1 ; ret
0x0000020000209fb6 : jns 0x20000209fab ; mov eax, edx ; ret
0x0000020000209fb6 : jns 0x20000209fac ; mov eax, edx ; ret
0x0000020000219361 : jns 0x20000219372 ; mov rcx, rsi ; call 0x2000009565f
0x0000020000388a8b : jns 0x20000388aef ; dec dword ptr [rax - 0x75] ; ret
0x00000200003b07b6 : jns 0x200003b07bc ; add al, al ; ret
0x00000200003f154c : jns 0x200003f1519 ; jmp 0x200003f151e
0x000002000040b157 : jns 0x2000040b0e6 ; ret
0x0000020000437f33 : jns 0x20000437eba ; ret
0x0000020000439663 : jns 0x20000439661 ; ret 0x44ff
0x000002000044447e : jns 0x20000444497 ; mov rdx, rbx ; call 0x200004e06df
0x000002000044dafc : jns 0x2000044db05 ; inc dword ptr [rcx - 0x76] ; fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x000002000047a90d : jns 0x2000047a913 ; add al, al ; ret
0x000002000047b355 : jns 0x2000047b35b ; add al, al ; ret
0x000002000047c5c1 : jns 0x2000047c5c7 ; add al, al ; ret
0x00000200004b3fd2 : jns 0x200004b3fdf ; add rsp, 0x28 ; ret
0x00000200004c836c : jns 0x200004c837b ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004d25aa : jns 0x200004d25c9 ; add byte ptr [rbp + 1], dh ; ret
0x00000200004d25be : jns 0x200004d25dd ; add byte ptr [rbp + 1], dh ; ret
0x00000200004dc4ab : jns 0x200004dc4be ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005d481f : jns 0x200005d4834 ; sar bh, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065b877 : jns 0x2000065b806 ; ret
0x000002000066ebc2 : jns 0x2000066ebb3 ; ret
0x0000020000674263 : jns 0x20000674200 ; ret
0x000002000067516f : jns 0x20000675140 ; ret 0x58ff
0x00000200006811fb : jns 0x200006811c4 ; ret 0x48ff
0x0000020000718be3 : jns 0x20000718b6e ; ret
0x000002000072010b : jns 0x20000720122 ; ret
0x0000020000723027 : jns 0x2000072300b ; ret 0xe9ff
0x000002000000e22f : jo 0x2000000e29b ; mov ch, 0x6e ; ret
0x000002000000e22e : jo 0x2000000e29c ; mov ch, 0x6e ; ret
0x00000200000106eb : jo 0x20000010766 ; ret 0x20cc
0x0000020000010f8d : jo 0x20000010ff9 ; pop rsp ; ret 0x2db0
0x00000200000334a1 : jo 0x200000334f1 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000033591 : jo 0x200000335e1 ; add esp, 0x50 ; pop rbx ; ret
0x00000200000374af : jo 0x200000374fb ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000375e2 : jo 0x2000003762e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000037c0a : jo 0x20000037c56 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000003bb13 : jo 0x2000003bb26 ; jmp 0x2000003b64e
0x000002000003c403 : jo 0x2000003c416 ; jmp 0x2000003be59
0x0000020000052734 : jo 0x20000052720 ; ret 0x3fd
0x0000020000059d8a : jo 0x20000059dd5 ; pop rsi ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000007017c : jo 0x2000007018d ; add dword ptr [rcx + rcx*4 + 0x3b], ecx ; jmp 0x2000007014d
0x000002000007f91f : jo 0x2000007f8ae ; ret 0x8944
0x0000020000082242 : jo 0x20000082292 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000084019 : jo 0x2000008406c ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000009db31 : jo 0x2000009db7b ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a2557 : jo 0x200000a2570 ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc32d7276
0x00000200000aa892 : jo 0x200000aa881 ; ret 0x8b44
0x00000200000b9eea : jo 0x200000b9f3a ; add esp, 0x50 ; pop rbp ; ret
0x00000200000bc7f0 : jo 0x200000bc83c ; pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c95aa : jo 0x200000c95b8 ; add al, al ; je 0x200000c95bb ; mov al, 1 ; ret
0x00000200000d50c2 : jo 0x200000d5112 ; add esp, 0x50 ; pop rdi ; ret
0x00000200000de016 : jo 0x200000ddfa4 ; ret
0x00000200000e08b3 : jo 0x200000e0903 ; add esp, 0x60 ; pop rdi ; ret
0x00000200000e35df : jo 0x200000e356e ; ret
0x00000200000e42b1 : jo 0x200000e42c3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000e4781 : jo 0x200000e47d2 ; add esp, 0x50 ; pop r14 ; ret
0x00000200000ec958 : jo 0x200000ec9a4 ; pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000fc5a0 : jo 0x200000fc601 ; ret
0x00000200000ffb6e : jo 0x200000ffba4 ; or al, byte ptr [rax] ; ret
0x0000020000109007 : jo 0x20000109057 ; add esp, 0x60 ; pop rdi ; ret
0x000002000010b13a : jo 0x2000010b19b ; ret
0x000002000010c00f : jo 0x2000010c01b ; add byte ptr [rax], al ; ret
0x000002000010d69c : jo 0x2000010d65d ; add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x000002000010e1b6 : jo 0x2000010e206 ; add esp, 0x60 ; pop rdi ; ret
0x000002000011b09d : jo 0x2000011b0ed ; add esp, 0x28 ; jmp rax
0x0000020000121a02 : jo 0x20000121a53 ; add esp, 0x50 ; pop r12 ; ret
0x0000020000122a66 : jo 0x20000122ac5 ; ret
0x0000020000123ce7 : jo 0x20000123cf3 ; add byte ptr [rax], al ; ret
0x0000020000127ea4 : jo 0x20000127ef4 ; add esp, 0x60 ; pop rbp ; ret
0x000002000012a76f : jo 0x2000012a77b ; add byte ptr [rax], al ; ret
0x00000200001315eb : jo 0x2000013163b ; test eax, eax ; jne 0x200001315f8 ; ret
0x00000200001315ea : jo 0x2000013163c ; test eax, eax ; jne 0x200001315f9 ; ret
0x0000020000131bb5 : jo 0x20000131c05 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000138a5e : jo 0x20000138a7b ; add dh, dh ; ret
0x000002000013f801 : jo 0x2000013f862 ; ret
0x000002000013fac0 : jo 0x2000013fa4b ; adc eax, 0xc28b4100 ; ret
0x000002000013fac0 : jo 0x2000013fa4c ; adc eax, 0xc28b4100 ; ret
0x00000200001400ce : jo 0x2000014011e ; add esp, 0x60 ; pop rdi ; ret
0x0000020000140ab1 : jo 0x20000140b01 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000140e2d : jo 0x20000140dbd ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x0000020000140f2b : jo 0x20000140ebb ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x0000020000149aa1 : jo 0x20000149adf ; leave ; mov qword ptr [rsp + 0x78], rax ; call r11
0x000002000014c424 : jo 0x2000014c3b3 ; ret 0x8b49
0x0000020000151301 : jo 0x2000015131b ; add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x000002000015df1d : jo 0x2000015df28 ; add byte ptr [rax], al ; add rax, 0x40 ; ret
0x00000200001bcbdf : jo 0x200001bcb6e ; ret
0x00000200001bcec0 : jo 0x200001bcf21 ; ret
0x00000200001bf47d : jo 0x200001bf4d0 ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001cd4e9 : jo 0x200001cd539 ; add esp, 0x50 ; pop rsi ; ret
0x00000200001cdc82 : jo 0x200001cdc86 ; ret
0x00000200001d2796 : jo 0x200001d27f7 ; ret
0x00000200001d3ac0 : jo 0x200001d3b21 ; ret
0x00000200001d5d70 : jo 0x200001d5dd3 ; ret
0x00000200001d67ab : jo 0x200001d680a ; ret
0x00000200001db578 : jo 0x200001db507 ; ret
0x00000200001de5c9 : jo 0x200001de62a ; ret
0x00000200001e0c39 : jo 0x200001e0bc8 ; ret
0x00000200001e120c : jo 0x200001e126d ; ret
0x00000200001e179c : jo 0x200001e17fd ; ret
0x00000200001e27f1 : jo 0x200001e27eb ; ret
0x00000200001e9fa1 : jo 0x200001ea004 ; ret
0x00000200001f14d4 : jo 0x200001f1524 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001f1ced : jo 0x200001f1d3d ; add esp, 0x50 ; pop rdi ; ret
0x00000200001fd64b : jo 0x200001fd695 ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001fd73b : jo 0x200001fd785 ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000020086d : jo 0x200002008bf ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002030a3 : jo 0x20000203104 ; ret
0x0000020000203227 : jo 0x20000203288 ; ret
0x00000200002032ea : jo 0x2000020334f ; pop rsi ; pop rbp ; ret
0x0000020000203a23 : jo 0x20000203a84 ; ret
0x0000020000205e41 : jo 0x20000205e91 ; add esp, 0x50 ; pop rdi ; ret
0x000002000020f2e0 : jo 0x2000020f33f ; ret
0x000002000020f7e5 : jo 0x2000020f846 ; ret
0x000002000020f9b9 : jo 0x2000020fa1a ; ret
0x000002000021078e : jo 0x200002107f1 ; ret
0x0000020000214d98 : jo 0x20000214de7 ; mov ecx, esi ; call r9
0x0000020000214de8 : jo 0x20000214e21 ; leave ; call r9
0x000002000021606a : jo 0x200002160e4 ; or edi, edi ; ret
0x0000020000216a68 : jo 0x20000216aa6 ; in eax, dx ; add edi, eax ; xor esi, esi ; call 0x20000212cc5
0x0000020000217506 : jo 0x20000217495 ; ret
0x0000020000221123 : jo 0x2000022116d ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000022557c : jo 0x20000225576 ; ret 0x7401
0x0000020000229c11 : jo 0x20000229c61 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000229c10 : jo 0x20000229c62 ; add esp, 0x20 ; pop rbx ; ret
0x000002000022c665 : jo 0x2000022c6b5 ; add esp, 0x60 ; pop rdi ; ret
0x000002000022d5a8 : jo 0x2000022d5f8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200002322c6 : jo 0x20000232255 ; ret
0x0000020000232f7b : jo 0x20000232f09 ; ret
0x0000020000235fd1 : jo 0x20000235f58 ; ret
0x000002000024824f : jo 0x2000024827c ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; or byte ptr [rax], al ; ret 0x8a2
0x00000200002486c3 : jo 0x200002486e8 ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x0000020000248a77 : jo 0x20000248aa4 ; add byte ptr [rax], al ; add byte ptr [rax - 0x22], bh ; or byte ptr [rax], al ; ret
0x0000020000249b73 : jo 0x20000249ba0 ; add byte ptr [rax], al ; add ah, dh ; pop rbx ; or dword ptr [rax], eax ; ret
0x000002000024a447 : jo 0x2000024a482 ; int1 ; adc eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000025ee5f : jo 0x2000025ee8c ; add byte ptr [rax], al ; add byte ptr [rax], ah ; cmp byte ptr [rdi], al ; ret
0x000002000026ce99 : jo 0x2000026cebd ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, ah ; ret 0x10
0x000002000026d424 : jo 0x2000026d406 ; adc byte ptr [rax], al ; push rbp ; ficom dword ptr [rax] ; add al, bh ; ret
0x000002000027041b : jo 0x20000270445 ; add byte ptr [rax], al ; add al, cl ; ret 0x11
0x000002000027cc06 : jo 0x2000027cc0a ; ret
0x000002000027d366 : jo 0x2000027d36f ; mov esp, 0x400070da ; ret
0x000002000027d36a : jo 0x2000027d36f ; ret
0x000002000027d3c2 : jo 0x2000027d3cb ; fdiv qword ptr [r8] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000002000027d3c6 : jo 0x2000027d3cb ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000002000027d41a : jo 0x2000027d423 ; adc al, 0xe2 ; jo 0x2000027d427 ; clc ; ret
0x000002000027d41e : jo 0x2000027d423 ; clc ; ret
0x000002000027dbee : jo 0x2000027dbf6 ; and esp, esi ; jo 0x2000027dbfa ; ret 0x71d5
0x000002000027dbf2 : jo 0x2000027dbf6 ; ret 0x71d5
0x000002000027ef0a : jo 0x2000027ef0e ; ret
0x000002000028ee57 : jo 0x2000028ee64 ; clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x0000020000292933 : jo 0x2000029293f ; clts ; add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x0000020000295a5c : jo 0x20000295abf ; ret
0x0000020000295c16 : jo 0x20000295c79 ; ret
0x000002000036915f : jo 0x200003691c0 ; ret
0x00000200003693c0 : jo 0x20000369410 ; add esp, 0x50 ; pop rdi ; ret
0x000002000036a16e : jo 0x2000036a1cf ; ret
0x000002000036eb75 : jo 0x2000036ebc5 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003755fb : jo 0x2000037565e ; ret
0x0000020000379736 : jo 0x20000379786 ; add esp, 0x60 ; pop rdi ; ret
0x000002000037d20d : jo 0x2000037d25f ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000382513 : jo 0x200003824a2 ; ret
0x00000200003a805c : jo 0x200003a80ac ; add esp, 0x50 ; pop rdi ; ret
0x00000200003ae0ac : jo 0x200003ae0fc ; add esp, 0x50 ; pop rdi ; ret
0x00000200003b65b2 : jo 0x200003b65a4 ; jmp 0x200003b65b9
0x00000200003be731 : jo 0x200003be784 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003d2ee5 : jo 0x200003d2f35 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003e6fc3 : jo 0x200003e7022 ; ret
0x00000200003ed2cb : jo 0x200003ed317 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003f1e4d : jo 0x200003f1ddb ; ret
0x00000200003fdeac : jo 0x200003fded1 ; add bl, ch ; ret
0x00000200003ff508 : jo 0x200003ff558 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000400f56 : jo 0x20000400ee5 ; ret
0x0000020000402daa : jo 0x20000402e09 ; ret
0x0000020000404b51 : jo 0x20000404ae0 ; ret
0x000002000040a209 : jo 0x2000040a259 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040b060 : jo 0x2000040aff0 ; ret
0x000002000040b9b4 : jo 0x2000040ba05 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000040db13 : jo 0x2000040db63 ; mov dword ptr [rsp + 0x20], eax ; call rsi
0x0000020000411927 : jo 0x2000041197a ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000412b68 : jo 0x20000412af7 ; ret
0x00000200004149be : jo 0x200004149f5 ; add byte ptr [rbp + 1], dh ; ret
0x000002000041552f : jo 0x200004154be ; ret
0x000002000041579a : jo 0x200004157fd ; ret
0x0000020000415b3d : jo 0x20000415b74 ; add byte ptr [rbp + 1], dh ; ret
0x0000020000416f4f : jo 0x20000416fa1 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000417042 : jo 0x20000417094 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000417d57 : jo 0x20000417d82 ; and byte ptr [rcx - 0x179fdba4], cl ; popfq ; ret 0xffe7
0x000002000041fbd2 : jo 0x2000041fc24 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000422dd6 : jo 0x20000422d65 ; ret
0x00000200004233aa : jo 0x2000042340b ; ret
0x0000020000424284 : jo 0x200004242d4 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000426d8c : jo 0x20000426d1a ; ret
0x00000200004288d8 : jo 0x2000042894e ; ret
0x0000020000430335 : jo 0x200004302c4 ; ret
0x000002000043126c : jo 0x200004312bc ; add esp, 0x20 ; pop rbx ; ret
0x000002000043126b : jo 0x200004312bd ; add esp, 0x20 ; pop rbx ; ret
0x0000020000431549 : jo 0x2000043156c ; adc byte ptr [rax - 0x7d], cl ; call 0x1ffc37e5d7c
0x0000020000434b3c : jo 0x20000434b9d ; ret
0x0000020000434c54 : jo 0x20000434ca7 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000435fbd : jo 0x2000043601e ; ret
0x000002000043627c : jo 0x2000043620b ; ret
0x000002000043965c : jo 0x200004396ca ; mov qword ptr [rdi + 0x30], rax ; call 0x200000690e9
0x0000020000439a6f : jo 0x20000439add ; cmovne rcx, r14 ; call 0x200000690e9
0x0000020000439cbe : jo 0x20000439d28 ; call 0x200000690e5
0x000002000043de70 : jo 0x2000043dec1 ; add esp, 0x50 ; pop r14 ; ret
0x000002000043ecbc : jo 0x2000043ec4b ; ret
0x00000200004431af : jo 0x2000044313e ; ret
0x000002000044ad3e : jo 0x2000044ada1 ; ret
0x000002000044b146 : jo 0x2000044b194 ; mov ecx, ebp ; call rsi
0x000002000044b1fa : jo 0x2000044b24d ; lea ecx, dword ptr [rsi - 0x458] ; call r15
0x000002000044ba83 : jo 0x2000044bae6 ; ret
0x000002000045438a : jo 0x200004543da ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000454389 : jo 0x200004543db ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000455071 : jo 0x200004550c1 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004592d9 : jo 0x20000459268 ; ret
0x000002000045ffa7 : jo 0x2000045fff8 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004634c8 : jo 0x20000463457 ; ret
0x0000020000466f29 : jo 0x20000466eb8 ; ret
0x0000020000467ca5 : jo 0x20000467d1f ; jne 0x20000467c96 ; push rbx ; ret
0x000002000046843f : jo 0x2000046849e ; ret
0x0000020000469c1f : jo 0x20000469bae ; ret
0x000002000046a4ee : jo 0x2000046a540 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000046b7fe : jo 0x2000046b84a ; mov eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x000002000046c42a : jo 0x2000046c48f ; pop rsi ; pop rbp ; ret
0x000002000046da8b : jo 0x2000046dad6 ; pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000472432 : jo 0x2000047243f ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x20000472400
0x00000200004724ec : jo 0x2000047253d ; add esp, 0x50 ; pop r14 ; ret
0x000002000047dec5 : jo 0x2000047df17 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000048176a : jo 0x200004817c9 ; ret
0x00000200004849e0 : jo 0x20000484a30 ; add esp, 0x50 ; pop rdi ; ret
0x000002000048788d : jo 0x200004878f0 ; ret
0x000002000048b26e : jo 0x2000048b2d1 ; ret
0x000002000048d0b2 : jo 0x2000048d0a3 ; push -0x74001f83 ; ret
0x0000020000491ae3 : jo 0x20000491a72 ; ret
0x000002000049fd7e : jo 0x2000049fdd1 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004a0af2 : jo 0x200004a0a81 ; ret
0x00000200004a4e48 : jo 0x200004a4e52 ; add byte ptr [rax], al ; or ebx, ecx ; jmp 0x200004a4e1a
0x00000200004a60f4 : jo 0x200004a613f ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004ab5e1 : jo 0x200004ab570 ; ret
0x00000200004abb14 : jo 0x200004abaa3 ; ret
0x00000200004add34 : jo 0x200004add39 ; insb byte ptr [rdi], dx ; ret
0x00000200004aeb69 : jo 0x200004aebb9 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004af65e : jo 0x200004af6bf ; ret
0x00000200004b2305 : jo 0x200004b2310 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004b541e : jo 0x200004b5445 ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x00000200004b5f4c : jo 0x200004b5f9c ; add esp, 0x60 ; pop rdi ; ret
0x00000200004b79c2 : jo 0x200004b7951 ; ret
0x00000200004bbb6c : jo 0x200004bbafb ; ret
0x00000200004bc091 : jo 0x200004bc020 ; ret
0x00000200004c3924 : jo 0x200004c3989 ; pop rsi ; pop rbp ; ret
0x00000200004c4a02 : jo 0x200004c4a65 ; ret
0x00000200004c4b04 : jo 0x200004c4b54 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004c4d7e : jo 0x200004c4ddf ; ret
0x00000200004ca969 : jo 0x200004ca9ce ; pop rsi ; pop rbp ; ret
0x00000200004cedc2 : jo 0x200004cee25 ; ret
0x00000200004cf4e4 : jo 0x200004cf547 ; ret
0x00000200004cfa36 : jo 0x200004cfa86 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004d3a1d : jo 0x200004d3a80 ; ret
0x00000200004d5173 : jo 0x200004d5102 ; ret 0x8b48
0x00000200004d7d09 : jo 0x200004d7d6a ; ret
0x00000200004d7dc1 : jo 0x200004d7e22 ; ret
0x00000200004d82ba : jo 0x200004d8249 ; ret
0x00000200004dedd9 : jo 0x200004dee38 ; ret
0x00000200004df814 : jo 0x200004df7a3 ; ret
0x00000200004e0a7f : jo 0x200004e0ad0 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004e2504 : jo 0x200004e2493 ; ret
0x00000200004e401e : jo 0x200004e405b ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x00000200004ec40a : jo 0x200004ec414 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004ed881 : jo 0x200004ed8c9 ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200004f9a38 : jo 0x200004f9a88 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004fe7e5 : jo 0x200004fe830 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000500354 : jo 0x200005003a4 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000503166 : jo 0x200005031b6 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000506232 : jo 0x2000050625c ; and byte ptr [rcx + rcx*4 + 0x7d], cl ; xor al, ch ; ret 0xd8dd
0x0000020000509ef0 : jo 0x20000509f40 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000513d4b : jo 0x20000513db0 ; pop rbx ; pop rbp ; ret
0x0000020000516b88 : jo 0x20000516bab ; mov qword ptr [rax + 0x20], rdi ; call 0x2000013c33d
0x0000020000516bf3 : jo 0x20000516c16 ; mov qword ptr [rax + 0x20], rdi ; call 0x2000013c33d
0x00000200005178cd : jo 0x2000051792c ; ret
0x0000020000519be2 : jo 0x20000519c45 ; ret
0x000002000051d07d : jo 0x2000051d0cd ; add esp, 0x60 ; pop rbp ; ret
0x000002000051e00f : jo 0x2000051e072 ; ret
0x000002000051e57a : jo 0x2000051e5ca ; add esp, 0x60 ; pop rdi ; ret
0x000002000051fab3 : jo 0x2000051fb03 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000520513 : jo 0x20000520520 ; add byte ptr [rax], al ; ret
0x00000200005302fe : jo 0x2000053035f ; ret
0x0000020000532073 : jo 0x200005320d4 ; ret
0x0000020000538508 : jo 0x2000053854d ; call qword ptr [rsi]
0x0000020000544127 : jo 0x20000544114 ; push rsi ; ret
0x00000200005442cb : jo 0x200005442b8 ; push rsi ; ret
0x00000200005738e1 : jo 0x200005738a0 ; in eax, dx ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005744e5 : jo 0x200005744d7 ; push rbp ; mov ch, 0xed ; push rsi ; ret
0x000002000059e439 : jo 0x2000059e427 ; sti ; ret
0x00000200005b2d4a : jo 0x200005b2cd1 ; ret 0x4104
0x00000200005c0139 : jo 0x200005c018c ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005c2b19 : jo 0x200005c2b7a ; ret
0x00000200005c2ed4 : jo 0x200005c2f35 ; ret
0x00000200005c36bd : jo 0x200005c3722 ; pop rsi ; pop rbp ; ret
0x00000200005cb70a : jo 0x200005cb75b ; add esp, 0x50 ; pop r15 ; ret
0x00000200005cc77b : jo 0x200005cc7e0 ; pop rsi ; pop rbp ; ret
0x00000200005ccdd1 : jo 0x200005cce29 ; mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200005cd944 : jo 0x200005cd997 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005ce927 : jo 0x200005ce8fd ; push rsi ; ret
0x00000200005ceec6 : jo 0x200005cef18 ; xor eax, eax ; ret
0x00000200005d11c2 : jo 0x200005d1151 ; ret
0x00000200005d1470 : jo 0x200005d145c ; ret 0xe817
0x00000200005d2cef : jo 0x200005d2c7e ; ret 0x8b48
0x00000200005d59a2 : jo 0x200005d5a07 ; pop rsi ; pop rbp ; ret
0x00000200005d66fd : jo 0x200005d674d ; add esp, 0x60 ; pop rdi ; ret
0x00000200005d90b3 : jo 0x200005d9103 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005d9177 : jo 0x200005d9181 ; add byte ptr [rax], al ; call 0x20000208ac3
0x00000200005d9b74 : jo 0x200005d9bc4 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005dac05 : jo 0x200005dac51 ; mov eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200005dfe98 : jo 0x200005dfed5 ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200005e1536 : jo 0x200005e15a0 ; movsxd rbp, eax ; ret 0xcb2a
0x00000200005e7264 : jo 0x200005e71f3 ; ret
0x00000200005e956a : jo 0x200005e94f9 ; ret
0x00000200005e979e : jo 0x200005e972d ; ret
0x00000200005f24e5 : jo 0x200005f2537 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005f906f : jo 0x200005f90d0 ; ret
0x00000200006083b9 : jo 0x20000608404 ; pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000060939e : jo 0x200006093ff ; ret
0x000002000060943b : jo 0x2000060949c ; ret
0x000002000060dda3 : jo 0x2000060de04 ; ret
0x000002000061024b : jo 0x2000061029b ; add esp, 0x60 ; pop rdi ; ret
0x0000020000612f62 : jo 0x20000612fb2 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000619e28 : jo 0x20000619db7 ; ret
0x000002000061e172 : jo 0x2000061e1d7 ; pop rsi ; pop rbp ; ret
0x0000020000621b87 : jo 0x20000621bd7 ; add esp, 0x60 ; pop rbp ; ret
0x00000200006252cc : jo 0x2000062531c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000627605 : jo 0x20000627666 ; ret
0x0000020000627776 : jo 0x200006277d7 ; ret
0x000002000062cb16 : jo 0x2000062cb77 ; ret
0x000002000062d026 : jo 0x2000062d076 ; add esp, 0x50 ; pop rdi ; ret
0x000002000062e909 : jo 0x2000062e959 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006331c9 : jo 0x200006331db ; add byte ptr [rbp + rcx*4 + 0x56], al ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x0000020000633f48 : jo 0x20000633f9b ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006376a7 : jo 0x20000637636 ; ret
0x0000020000640208 : jo 0x20000640258 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006405ad : jo 0x200006405f8 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000643635 : jo 0x2000064367f ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000644caf : jo 0x20000644cff ; add esp, 0x50 ; pop rdi ; ret
0x0000020000645459 : jo 0x200006453eb ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200006496a3 : jo 0x20000649632 ; ret
0x000002000064a93d : jo 0x2000064a9a0 ; ret
0x000002000064db03 : jo 0x2000064db56 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000064fd23 : jo 0x2000064fcb2 ; ret
0x000002000065030d : jo 0x2000065029c ; ret
0x0000020000650463 : jo 0x200006504c8 ; pop rsi ; pop rbp ; ret
0x00000200006520c4 : jo 0x20000652053 ; ret
0x000002000065c5cb : jo 0x2000065c55a ; add dword ptr [rbx], ebp ; ret
0x000002000065c623 : jo 0x2000065c5b2 ; add dword ptr [rbx], ebp ; ret
0x00000200006644b1 : jo 0x20000664510 ; ret
0x00000200006670cb : jo 0x2000066712c ; ret
0x0000020000667158 : jo 0x200006671b7 ; ret
0x0000020000671472 : jo 0x200006714ba ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006743ac : jo 0x200006743ba ; ret 0x48ff
0x0000020000674d5e : jo 0x20000674dc1 ; ret
0x0000020000675293 : jo 0x2000067521b ; ret
0x000002000067d1a6 : jo 0x2000067d209 ; ret
0x000002000069030c : jo 0x2000069035f ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006dad9c : jo 0x200006dad2b ; ret
0x00000200006eaf7e : jo 0x200006eafdf ; ret
0x00000200006f24c1 : jo 0x200006f2524 ; ret
0x00000200006f5c1d : jo 0x200006f5c7e ; ret
0x00000200006f7ddd : jo 0x200006f7de0 ; ret
0x00000200006f8237 : jo 0x200006f8287 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006fab37 : jo 0x200006fab90 ; add byte ptr [rax], al ; ret
0x00000200006fda69 : jo 0x200006fd9f8 ; ret
0x00000200006feee0 : jo 0x200006fef3f ; ret
0x0000020000706cb3 : jo 0x20000706d14 ; ret
0x000002000070ab1f : jo 0x2000070ab6f ; add esp, 0x60 ; pop rdi ; ret
0x000002000070d808 : jo 0x2000070d79a ; ror dword ptr [rax - 0x7d], cl ; ret 0xe828
0x000002000071407c : jo 0x200007140cc ; add esp, 0x50 ; pop rdi ; ret
0x000002000071415f : jo 0x200007141c0 ; ret
0x0000020000714231 : jo 0x20000714294 ; ret
0x00000200007179b2 : jo 0x20000717a02 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000718ed2 : jo 0x20000718f31 ; ret
0x0000020000722244 : jo 0x200007222a0 ; std ; inc dword ptr [rbx + rcx*4 + 0x1d] ; in eax, -0x13 ; ret 0x8bff
0x000002000072a69b : jo 0x2000072a6fd ; ret
0x000002000072b99f : jo 0x2000072b92e ; ret
0x000002000072cb3d : jo 0x2000072cb8d ; add esp, 0x60 ; pop rdi ; ret
0x000002000072f8b0 : jo 0x2000072f83f ; ret
0x000002000072fd38 : jo 0x2000072fcc7 ; ret 0x8b49
0x000002000036f487 : jp 0x1fffe544e9b ; inc dword ptr [rcx + 3] ; ret 0x588
0x000002000000d09d : jp 0x2000000d0a6 ; ret
0x000002000000de64 : jp 0x2000000de67 ; ret 0x4adb
0x000002000000dfb7 : jp 0x2000000df6f ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x0000020000010275 : jp 0x20000010258 ; ret
0x0000020000011411 : jp 0x2000001146a ; ret 0x7ec2
0x000002000001e2b2 : jp 0x2000001e2d5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x000002000001f98a : jp 0x2000001f9ac ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000023fcd : jp 0x20000023fd6 ; ret
0x0000020000053a27 : jp 0x20000053a38 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000f1748 : jp 0x200000f1770 ; add byte ptr [rbp + rcx*4 + 4], cl ; add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200001063de : jp 0x200001063ea ; add byte ptr [rax], al ; ret
0x0000020000144252 : jp 0x2000014425c ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000144502 : jp 0x2000014450c ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001a99dd : jp 0x200001a99dd ; inc dword ptr [rbx - 0x74ffdc9b] ; ret 0x8d48
0x00000200001c69f6 : jp 0x200001c69fe ; add byte ptr [rdx + rcx - 0x75], dh ; add al, byte ptr [rcx + 0x23] ; ret
0x000002000021f79c : jp 0x2000021f7a2 ; lodsb al, byte ptr [rsi] ; ret
0x000002000036554b : jp 0x20000365577 ; mov ecx, edi ; call qword ptr [rip - 0xc3ded]
0x0000020000379653 : jp 0x20000379657 ; dec dword ptr [rax - 0x39] ; ret
0x00000200003b67e8 : jp 0x200003b67b9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003d184a : jp 0x200003d17f1 ; ret
0x00000200003ecb5d : jp 0x200003ecb79 ; add dh, dh ; ret
0x0000020000404083 : jp 0x20000404105 ; add eax, 0xebe0c283 ; mov ah, 0x8b ; ret 0xc148
0x000002000043b456 : jp 0x2000043b3e3 ; ret 0xebff
0x0000020000471bbc : jp 0x20000471bcc ; add byte ptr [r8], r12b ; rcl dword ptr [rdi], -0x7a ; ret 0x57
0x000002000047677b : jp 0x20000476783 ; add byte ptr [rax], al ; inc edx ; jmp 0x2000047676a
0x000002000049caaa : jp 0x2000049ca52 ; ret
0x00000200004a72df : jp 0x200004a72d9 ; ret
0x00000200004a72df : jp 0x200004a72dc ; ret
0x00000200004aebbe : jp 0x200004aebf8 ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200004b4396 : jp 0x200004b4383 ; or eax, 0x1894400 ; xor eax, eax ; ret
0x00000200004cc802 : jp 0x200004cc7bf ; add eax, 0x2dd5e800 ; ret
0x000002000051c7be : jp 0x2000051c7f6 ; ret 0x48ff
0x0000020000548568 : jp 0x2000054853a ; push qword ptr [rdx] ; ret
0x0000020000571984 : jp 0x20000571977 ; push rsi ; ret
0x000002000067567a : jp 0x200006755fe ; ret
0x0000020000676e8a : jp 0x20000676e3e ; ret 0x48ff
0x000002000067c9f1 : jp 0x2000067ca04 ; ret
0x0000020000712ec2 : jp 0x20000712f2f ; ret
0x000002000072f3a2 : jp 0x2000072f35d ; call qword ptr [rax]
0x0000020000024c85 : jrcxz 0x20000024cc1 ; rol bl, 0x49 ; mov eax, ecx ; ret
0x0000020000024e2b : jrcxz 0x20000024e75 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000025315 : jrcxz 0x2000002535d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000027097 : jrcxz 0x200000270e3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000287b4 : jrcxz 0x200000287fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000028e92 : jrcxz 0x20000028ede ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000003314b : jrcxz 0x20000033183 ; add byte ptr [rax - 0x75], cl ; ret 0x3348
0x0000020000039ccb : jrcxz 0x20000039d17 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000004a63b : jrcxz 0x2000004a69e ; ret
0x000002000004bf9d : jrcxz 0x2000004bfe9 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000004ce16 : jrcxz 0x2000004ce62 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000004d13f : jrcxz 0x2000004d18b ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000052fb6 : jrcxz 0x20000053002 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000531c4 : jrcxz 0x20000053210 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000058367 : jrcxz 0x200000583b3 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000065adb : jrcxz 0x20000065b25 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000007465c : jrcxz 0x200000746a5 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000083f39 : jrcxz 0x20000083f9a ; ret
0x0000020000085d33 : jrcxz 0x20000085d7c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000008a2b0 : jrcxz 0x2000008a311 ; ret
0x000002000008a360 : jrcxz 0x2000008a3ac ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000008f4f9 : jrcxz 0x2000008f55a ; ret
0x000002000008f88e : jrcxz 0x2000008f8f1 ; ret
0x000002000008fa50 : jrcxz 0x2000008fa96 ; pop rdi ; ret
0x0000020000093159 : jrcxz 0x200000931bc ; ret
0x0000020000093669 : jrcxz 0x200000936b3 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000098fff : jrcxz 0x20000099048 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000009c4ac : jrcxz 0x2000009c4f5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000009c702 : jrcxz 0x2000009c765 ; ret
0x00000200000a053b : jrcxz 0x200000a0585 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000a1639 : jrcxz 0x200000a1685 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000a4d6b : jrcxz 0x200000a4dce ; ret
0x00000200000a7c5e : jrcxz 0x200000a7cc1 ; ret
0x00000200000a9cf1 : jrcxz 0x200000a9cd5 ; and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000aa5db : jrcxz 0x200000aa625 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000acb91 : jrcxz 0x200000acbdd ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000b13a5 : jrcxz 0x200000b13bf ; xor dword ptr [rsp + rdi*8 - 1], 0xffffffff ; jmp 0x2000018d614
0x00000200000b1bf5 : jrcxz 0x200000b1c41 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000b6c9c : jrcxz 0x200000b6ce2 ; pop rdi ; ret
0x00000200000b830a : jrcxz 0x200000b836d ; ret
0x00000200000b9f92 : jrcxz 0x200000b9fdb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000ba314 : jrcxz 0x200000ba360 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000ba82f : jrcxz 0x200000ba878 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000bb9a7 : jrcxz 0x200000bb9b0 ; add byte ptr [rax], al ; dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x00000200000bbbb7 : jrcxz 0x200000bbb46 ; ret
0x00000200000bd620 : jrcxz 0x200000bd668 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000bf29a : jrcxz 0x200000bf2e0 ; pop rsi ; ret
0x00000200000c0222 : jrcxz 0x200000c0283 ; ret
0x00000200000c288e : jrcxz 0x200000c28d6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000c312a : jrcxz 0x200000c3176 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000c4798 : jrcxz 0x200000c47fb ; ret
0x00000200000cd34d : jrcxz 0x200000cd3b0 ; ret
0x00000200000cf7b5 : jrcxz 0x200000cf818 ; ret
0x00000200000cfc3a : jrcxz 0x200000cfc83 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000d12c7 : jrcxz 0x200000d1313 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000d48c4 : jrcxz 0x200000d490e ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000d6e63 : jrcxz 0x200000d6eac ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000d7996 : jrcxz 0x200000d79f9 ; ret
0x00000200000d920f : jrcxz 0x200000d9259 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000dd753 : jrcxz 0x200000dd79d ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000ddb0e : jrcxz 0x200000ddb5a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000df0c1 : jrcxz 0x200000df109 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000e1688 : jrcxz 0x200000e16d4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000e26ff : jrcxz 0x200000e2760 ; ret
0x00000200000e379d : jrcxz 0x200000e37fe ; ret
0x00000200000e4219 : jrcxz 0x200000e427c ; ret
0x00000200000e602a : jrcxz 0x200000e6073 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000e639a : jrcxz 0x200000e63e6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000e7429 : jrcxz 0x200000e7471 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000e7949 : jrcxz 0x200000e7991 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000ebdee : jrcxz 0x200000ebe4f ; ret
0x00000200000f4616 : jrcxz 0x200000f4677 ; ret
0x00000200000f55a2 : jrcxz 0x200000f5605 ; ret
0x00000200000f6236 : jrcxz 0x200000f6297 ; ret
0x00000200000f65be : jrcxz 0x200000f661f ; ret
0x00000200000f8d69 : jrcxz 0x200000f8daf ; pop rsp ; ret
0x00000200000fa8f3 : jrcxz 0x200000fa93c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000fd48f : jrcxz 0x200000fd4d8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000fd691 : jrcxz 0x200000fd6f2 ; ret
0x00000200000ff042 : jrcxz 0x200000ff08b ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200000ff1ab : jrcxz 0x200000ff20c ; ret
0x000002000010057e : jrcxz 0x200001005df ; ret
0x0000020000100c40 : jrcxz 0x20000100c86 ; pop rdi ; ret
0x0000020000102c00 : jrcxz 0x20000102c46 ; pop rsi ; ret
0x000002000010475b : jrcxz 0x200001047a5 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000105bc1 : jrcxz 0x20000105c0a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001062e8 : jrcxz 0x20000106331 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000106b77 : jrcxz 0x20000106bbf ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000106def : jrcxz 0x20000106e38 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000106f6e : jrcxz 0x20000106fd1 ; ret
0x000002000010ab50 : jrcxz 0x2000010abb1 ; ret
0x000002000010c20c : jrcxz 0x2000010c258 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000010c9b5 : jrcxz 0x2000010c9fe ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010d2d4 : jrcxz 0x2000010d31d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010d449 : jrcxz 0x2000010d492 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010f2c4 : jrcxz 0x2000010f325 ; ret
0x000002000010f335 : jrcxz 0x2000010f396 ; ret
0x000002000010fcb4 : jrcxz 0x2000010fd15 ; ret
0x000002000010ffe6 : jrcxz 0x20000110032 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000011115f : jrcxz 0x200001111c0 ; ret
0x0000020000111221 : jrcxz 0x20000111269 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001113fa : jrcxz 0x20000111442 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011147c : jrcxz 0x200001114dd ; ret
0x0000020000115435 : jrcxz 0x200001153c7 ; add al, 0xb ; ret
0x0000020000115482 : jrcxz 0x20000115414 ; add al, 0xb ; ret
0x00000200001169bd : jrcxz 0x20000116a1e ; ret
0x0000020000116a67 : jrcxz 0x20000116ab0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011944f : jrcxz 0x200001194b0 ; ret
0x000002000011960e : jrcxz 0x20000119656 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011991f : jrcxz 0x20000119969 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000011a2c8 : jrcxz 0x2000011a329 ; ret
0x000002000011a6eb : jrcxz 0x2000011a734 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011ab4f : jrcxz 0x2000011abb0 ; ret
0x000002000011bc12 : jrcxz 0x2000011bc5b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011cf3e : jrcxz 0x2000011cf86 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011d62c : jrcxz 0x2000011d674 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011ebdb : jrcxz 0x2000011ec24 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011efb2 : jrcxz 0x2000011effb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011f42a : jrcxz 0x2000011f473 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011fb24 : jrcxz 0x2000011fb70 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000011fd7c : jrcxz 0x2000011fddf ; ret
0x000002000012124c : jrcxz 0x20000121295 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000121c1e : jrcxz 0x20000121c67 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000122810 : jrcxz 0x20000122873 ; ret
0x0000020000122eac : jrcxz 0x20000122f0d ; ret
0x000002000012366c : jrcxz 0x200001236b5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000123c29 : jrcxz 0x20000123c71 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200001244c9 : jrcxz 0x20000124515 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000126201 : jrcxz 0x2000012624d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000012708c : jrcxz 0x200001270d5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000129ac7 : jrcxz 0x20000129b28 ; ret
0x000002000012a137 : jrcxz 0x2000012a181 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000012f4f4 : jrcxz 0x2000012f555 ; ret
0x000002000012fdad : jrcxz 0x2000012fe0e ; ret
0x00000200001300df : jrcxz 0x20000130127 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001338b9 : jrcxz 0x20000133901 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000134aaf : jrcxz 0x20000134b01 ; mov dword ptr [rip + 0x19b401], edx ; ret
0x0000020000134af8 : jrcxz 0x20000134b44 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001358ad : jrcxz 0x200001358f6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000135f82 : jrcxz 0x20000135fe3 ; ret
0x0000020000137351 : jrcxz 0x200001373b4 ; ret
0x000002000013781b : jrcxz 0x20000137867 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001395d3 : jrcxz 0x2000013961e ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000013a352 : jrcxz 0x2000013a39b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000013a61f : jrcxz 0x2000013a682 ; ret
0x000002000013ac42 : jrcxz 0x2000013aca3 ; ret
0x000002000013c4e1 : jrcxz 0x2000013c550 ; ret
0x000002000013d0ec : jrcxz 0x2000013d14d ; ret
0x000002000013d763 : jrcxz 0x2000013d7c6 ; ret
0x000002000013dc97 : jrcxz 0x2000013dce3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000013ebe5 : jrcxz 0x2000013ec46 ; ret
0x0000020000140403 : jrcxz 0x20000140453 ; mov ebx, dword ptr [rsp + 8] ; ret
0x0000020000140c83 : jrcxz 0x20000140cd1 ; mov eax, edx ; ret
0x0000020000140c83 : jrcxz 0x20000140cd2 ; mov eax, edx ; ret
0x000002000014676d : jrcxz 0x200001467ce ; ret
0x0000020000147444 : jrcxz 0x20000147490 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000157dee : jrcxz 0x20000157e3c ; mov eax, edx ; pop rbx ; ret
0x0000020000157dee : jrcxz 0x20000157e3e ; mov eax, edx ; pop rbx ; ret
0x0000020000158439 : jrcxz 0x2000015843f ; add byte ptr [rax], al ; ret
0x0000020000165d8a : jrcxz 0x20000165dd2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000017f952 : jrcxz 0x2000017f948 ; dec dword ptr [rbp - 0x75] ; ret 0xb70f
0x000002000018c49d : jrcxz 0x2000018c469 ; ret
0x00000200001942e4 : jrcxz 0x20000194318 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000199419 : jrcxz 0x2000019939f ; sbb eax, dword ptr [rax] ; call rax
0x00000200001b77f8 : jrcxz 0x200001b7841 ; pop rdi ; pop r13 ; pop rdi ; ret
0x00000200001b9b8d : jrcxz 0x200001b9b7d ; call 0x200221b93b4
0x00000200001bd891 : jrcxz 0x200001bd8d9 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200001c08ca : jrcxz 0x200001c0913 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c4c8d : jrcxz 0x200001c4cee ; ret
0x00000200001c5daf : jrcxz 0x200001c5dfb ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001c78c5 : jrcxz 0x200001c7928 ; ret
0x00000200001c893d : jrcxz 0x200001c8989 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001c8b01 : jrcxz 0x200001c8b4d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001ca0f3 : jrcxz 0x200001ca13f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001cb9b2 : jrcxz 0x200001cb9fe ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rcx ; ret
0x00000200001cbc4a : jrcxz 0x200001cbc96 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001cd717 : jrcxz 0x200001cd761 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200001cf267 : jrcxz 0x200001cf2af ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001d257f : jrcxz 0x200001d25cb ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001d522e : jrcxz 0x200001d528f ; ret
0x00000200001d575b : jrcxz 0x200001d57bc ; ret
0x00000200001d979d : jrcxz 0x200001d9800 ; ret
0x00000200001da981 : jrcxz 0x200001da9e2 ; ret
0x00000200001dac93 : jrcxz 0x200001dacdc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001dd50c : jrcxz 0x200001dd56d ; ret
0x00000200001ddf2f : jrcxz 0x200001ddf34 ; call 0x2000008a164
0x00000200001de1e8 : jrcxz 0x200001de232 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001de700 : jrcxz 0x200001de748 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001e0793 : jrcxz 0x200001e07f6 ; ret
0x00000200001e1e80 : jrcxz 0x200001e1ee1 ; ret
0x00000200001e55b2 : jrcxz 0x200001e55fa ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e577f : jrcxz 0x200001e57e2 ; ret
0x00000200001e5f3d : jrcxz 0x200001e5f86 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e7030 : jrcxz 0x200001e7078 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001eab03 : jrcxz 0x200001eab4e ; pop rdi ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200001eb052 : jrcxz 0x200001eb09b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001eb155 : jrcxz 0x200001eb1b8 ; ret
0x00000200001eb7b4 : jrcxz 0x200001eb7fa ; pop rsi ; ret
0x00000200001ee6c6 : jrcxz 0x200001ee727 ; ret
0x00000200001efd00 : jrcxz 0x200001efd61 ; ret
0x00000200001f0951 : jrcxz 0x200001f099d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001f4695 : jrcxz 0x200001f46f8 ; ret
0x00000200001f4b71 : jrcxz 0x200001f4bbd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001fa30e : jrcxz 0x200001fa371 ; ret
0x00000200001fb490 : jrcxz 0x200001fb4d6 ; pop rsi ; ret
0x00000200001fbbbb : jrcxz 0x200001fbc1e ; ret
0x00000200001fdb7d : jrcxz 0x200001fdbc9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001ff372 : jrcxz 0x200001ff3d5 ; ret
0x00000200001ff482 : jrcxz 0x200001ff4cb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001ff90c : jrcxz 0x200001ff96f ; ret
0x00000200002002fd : jrcxz 0x20000200346 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200002023be : jrcxz 0x20000202406 ; pop rsp ; pop rdi ; pop rsi ; ret
0x0000020000202bc9 : jrcxz 0x20000202c0f ; pop rsi ; ret
0x0000020000202f0b : jrcxz 0x20000202f6c ; ret
0x000002000020316d : jrcxz 0x200002031ce ; ret
0x000002000020391a : jrcxz 0x2000020397b ; ret
0x0000020000204489 : jrcxz 0x200002044ea ; ret
0x000002000020457f : jrcxz 0x200002045e0 ; ret
0x000002000020494a : jrcxz 0x200002049ab ; ret
0x0000020000207302 : jrcxz 0x20000207365 ; ret
0x000002000020ad07 : jrcxz 0x2000020ad6a ; ret
0x000002000020f25e : jrcxz 0x2000020f2c1 ; ret
0x000002000020f38b : jrcxz 0x2000020f3ee ; ret
0x000002000020f437 : jrcxz 0x2000020f49a ; ret
0x0000020000219006 : jrcxz 0x2000021904e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000021a46c : jrcxz 0x2000021a4b8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000021cd4e : jrcxz 0x2000021cd96 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000021f293 : jrcxz 0x2000021f2dc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200002219dd : jrcxz 0x20000221a25 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200002240fa : jrcxz 0x20000224146 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000224a19 : jrcxz 0x20000224a65 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000225ffe : jrcxz 0x2000022604a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000226c1e : jrcxz 0x20000226c6a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000229066 : jrcxz 0x200002290ae ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200002292aa : jrcxz 0x200002292f6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200002299e2 : jrcxz 0x200002299e9 ; add rsp, 0x38 ; ret
0x000002000022af48 : jrcxz 0x2000022afa9 ; ret
0x000002000022b935 : jrcxz 0x2000022b97e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000022c2e4 : jrcxz 0x2000022c330 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000022f5b1 : jrcxz 0x2000022f5f9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000022f9b0 : jrcxz 0x2000022f9f9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000022fb01 : jrcxz 0x2000022fb62 ; ret
0x000002000022fc63 : jrcxz 0x2000022fcad ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200002322d3 : jrcxz 0x2000023231b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200002345fb : jrcxz 0x20000234644 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000234898 : jrcxz 0x200002348e2 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000234a48 : jrcxz 0x20000234a91 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000235034 : jrcxz 0x20000235095 ; ret
0x0000020000235c4e : jrcxz 0x20000235c96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000236a36 : jrcxz 0x20000236a99 ; ret
0x0000020000238a51 : jrcxz 0x20000238a9b ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000027dbec : jrcxz 0x2000027dbdb ; jo 0x2000027dbf8 ; and esp, esi ; jo 0x2000027dbfc ; ret 0x71d5
0x0000020000364946 : jrcxz 0x20000364992 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000365689 : jrcxz 0x200003656d2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000366249 : jrcxz 0x20000366295 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000368aec : jrcxz 0x20000368b32 ; pop rsi ; ret
0x0000020000368cae : jrcxz 0x20000368cf7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003696b0 : jrcxz 0x200003696fc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000036c3e7 : jrcxz 0x2000036c431 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000036ce0c : jrcxz 0x2000036ce58 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000036d025 : jrcxz 0x2000036d06e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036d1bb : jrcxz 0x2000036d203 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000036d5be : jrcxz 0x2000036d61f ; ret
0x000002000036d77c : jrcxz 0x2000036d7dd ; ret
0x000002000036dc84 : jrcxz 0x2000036dccc ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000375843 : jrcxz 0x200003758a6 ; ret
0x00000200003765b2 : jrcxz 0x200003765fb ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000376eaf : jrcxz 0x20000376ef8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000378f14 : jrcxz 0x20000378f5d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000037a822 : jrcxz 0x2000037a883 ; ret
0x000002000037ba80 : jrcxz 0x2000037bacc ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000037fd78 : jrcxz 0x2000037fdc4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000382719 : jrcxz 0x2000038277c ; ret
0x0000020000383bcf : jrcxz 0x20000383c18 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000384916 : jrcxz 0x2000038495c ; pop rsi ; ret
0x00000200003857ea : jrcxz 0x20000385833 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000386041 : jrcxz 0x20000386087 ; pop rsi ; ret
0x0000020000387c33 : jrcxz 0x20000387c7d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003887ab : jrcxz 0x2000038880c ; ret
0x0000020000388993 : jrcxz 0x200003889db ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000038adb9 : jrcxz 0x2000038ae1a ; ret
0x000002000039d19e : jrcxz 0x2000039d1e8 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003a0fab : jrcxz 0x200003a0ff1 ; pop rsi ; ret
0x00000200003a5835 : jrcxz 0x200003a5898 ; ret
0x00000200003a602d : jrcxz 0x200003a6076 ; pop rdi ; pop r14 ; pop rsi ; ret
0x00000200003a620a : jrcxz 0x200003a6250 ; pop rdi ; ret
0x00000200003a839e : jrcxz 0x200003a83e7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003af474 : jrcxz 0x200003af4be ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003b0ba2 : jrcxz 0x200003b0beb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b0c29 : jrcxz 0x200003b0c8a ; ret
0x00000200003b2640 : jrcxz 0x200003b2686 ; pop rsi ; ret
0x00000200003b2dc6 : jrcxz 0x200003b2e0c ; pop rdi ; ret
0x00000200003b35dc : jrcxz 0x200003b3625 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b60be : jrcxz 0x200003b6108 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c0e1a : jrcxz 0x200003c0e64 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c22f3 : jrcxz 0x200003c233c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003c7c87 : jrcxz 0x200003c7c16 ; ret
0x00000200003ce198 : jrcxz 0x200003ce1e2 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003d14ec : jrcxz 0x200003d1536 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003d8406 : jrcxz 0x200003d844f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003d8e78 : jrcxz 0x200003d8edb ; ret
0x00000200003da7a4 : jrcxz 0x200003da7f0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003e4f54 : jrcxz 0x200003e4f9a ; pop rdi ; ret
0x00000200003e5509 : jrcxz 0x200003e5553 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003e7b51 : jrcxz 0x200003e7bb2 ; ret
0x00000200003e7daf : jrcxz 0x200003e7e10 ; ret
0x00000200003e85c9 : jrcxz 0x200003e8613 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003e9405 : jrcxz 0x200003e944e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e9995 : jrcxz 0x200003e99db ; pop rsi ; ret
0x00000200003e9f6c : jrcxz 0x200003e9fb4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003ea28e : jrcxz 0x200003ea2da ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003eb113 : jrcxz 0x200003eb15c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ed4cf : jrcxz 0x200003ed51b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003ef6c9 : jrcxz 0x200003ef70f ; pop rsi ; ret
0x00000200003f1161 : jrcxz 0x200003f11a7 ; pop rsi ; ret
0x00000200003f537d : jrcxz 0x200003f53c7 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003f60c7 : jrcxz 0x200003f610d ; pop rdi ; ret
0x00000200003f72a2 : jrcxz 0x200003f7305 ; ret
0x00000200003f891f : jrcxz 0x200003f8968 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f9a58 : jrcxz 0x200003f9a65 ; jmp 0x200003f99ae
0x00000200003fb85a : jrcxz 0x200003fb8a4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003fdf71 : jrcxz 0x200003fdfb9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003ff0b1 : jrcxz 0x200003ff0fb ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003ffcc5 : jrcxz 0x200003ffd11 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003fffd7 : jrcxz 0x20000400020 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004015ea : jrcxz 0x20000401632 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000401a27 : jrcxz 0x20000401a73 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000401adb : jrcxz 0x20000401b27 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000401db2 : jrcxz 0x20000401dee ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000402bba : jrcxz 0x20000402c04 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000403779 : jrcxz 0x200004037c2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000040392b : jrcxz 0x20000403977 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000404cde : jrcxz 0x20000404d3f ; ret
0x0000020000404f9b : jrcxz 0x20000404ffe ; ret
0x000002000040519a : jrcxz 0x200004051fb ; ret
0x0000020000405499 : jrcxz 0x20000405486 ; in al, dx ; dec dword ptr [rbx + 0x2718e8d0] ; ret 0xebff
0x00000200004058d8 : jrcxz 0x20000405924 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000405e5b : jrcxz 0x20000405ea4 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000406451 : jrcxz 0x2000040649a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000407831 : jrcxz 0x20000407894 ; ret
0x000002000040792a : jrcxz 0x20000407973 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000407c47 : jrcxz 0x20000407c90 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000408af8 : jrcxz 0x20000408b42 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000040a082 : jrcxz 0x2000040a0c8 ; pop rsi ; ret
0x000002000040a62c : jrcxz 0x2000040a675 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040ab25 : jrcxz 0x2000040ab6b ; pop rsi ; ret
0x000002000040da6d : jrcxz 0x2000040dab6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040ff5a : jrcxz 0x2000040ffa3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000412862 : jrcxz 0x200004128ab ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000412a2f : jrcxz 0x20000412a78 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000412b7d : jrcxz 0x20000412bde ; ret
0x0000020000414b0b : jrcxz 0x20000414b54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000041586f : jrcxz 0x200004158d0 ; ret
0x0000020000415e22 : jrcxz 0x20000415e6a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000415f4e : jrcxz 0x20000415f96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000416a83 : jrcxz 0x20000416acb ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000419429 : jrcxz 0x20000419478 ; ret 0x41ff
0x0000020000419a41 : jrcxz 0x20000419a8a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000041b2ef : jrcxz 0x2000041b33b ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000041c42c : jrcxz 0x2000041c472 ; pop rsi ; ret
0x000002000041c5a7 : jrcxz 0x2000041c5f3 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000041e2d7 : jrcxz 0x2000041e320 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004204eb : jrcxz 0x20000420537 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004230a8 : jrcxz 0x200004230f0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000423479 : jrcxz 0x200004234c2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004241f7 : jrcxz 0x20000424258 ; ret
0x00000200004261c2 : jrcxz 0x20000426223 ; ret
0x00000200004266a9 : jrcxz 0x200004266f1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000426ec4 : jrcxz 0x20000426f10 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004341bb : jrcxz 0x2000043421e ; ret
0x0000020000434633 : jrcxz 0x2000043467f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000435a5e : jrcxz 0x20000435aaa ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000043637c : jrcxz 0x200004363c5 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004395ad : jrcxz 0x20000439558 ; ret 0xf6ff
0x000002000043af66 : jrcxz 0x2000043afaf ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000043c141 : jrcxz 0x2000043c189 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000043dbd1 : jrcxz 0x2000043dc32 ; ret
0x000002000043e068 : jrcxz 0x2000043e0b1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000043e288 : jrcxz 0x2000043e2d4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000043e544 : jrcxz 0x2000043e58c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000043eab5 : jrcxz 0x2000043eb01 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000043f73a : jrcxz 0x2000043f782 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004401ea : jrcxz 0x20000440236 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000440a30 : jrcxz 0x20000440a7c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004414d0 : jrcxz 0x20000441518 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000441668 : jrcxz 0x200004416b2 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000442fec : jrcxz 0x2000044304f ; ret
0x00000200004431bc : jrcxz 0x2000044321f ; ret
0x0000020000443aba : jrcxz 0x20000443b02 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044c6ab : jrcxz 0x2000044c6f5 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000044cb3f : jrcxz 0x2000044cb87 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044cf77 : jrcxz 0x2000044cfbd ; pop rsi ; ret
0x0000020000450c9a : jrcxz 0x20000450ce0 ; pop rsi ; ret
0x0000020000457d55 : jrcxz 0x20000457d9f ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000457f03 : jrcxz 0x20000457f4d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004592e6 : jrcxz 0x20000459349 ; ret
0x000002000045a1b3 : jrcxz 0x2000045a1fb ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000045a2bc : jrcxz 0x2000045a31f ; ret
0x000002000045a614 : jrcxz 0x2000045a65d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000045ade2 : jrcxz 0x2000045ae45 ; ret
0x000002000045af44 : jrcxz 0x2000045afa7 ; ret
0x000002000045b04f : jrcxz 0x2000045b098 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000045f6cc : jrcxz 0x2000045f72d ; ret
0x00000200004604da : jrcxz 0x20000460520 ; pop rdi ; ret
0x0000020000460629 : jrcxz 0x2000046066f ; pop rsi ; ret
0x0000020000460940 : jrcxz 0x2000046098a ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000460b87 : jrcxz 0x20000460bd0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004621c3 : jrcxz 0x2000046220b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004626eb : jrcxz 0x20000462733 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000462845 : jrcxz 0x20000462891 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000463422 : jrcxz 0x20000463485 ; ret
0x0000020000466733 : jrcxz 0x2000046677c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000466aa1 : jrcxz 0x20000466b04 ; ret
0x0000020000466d98 : jrcxz 0x20000466df9 ; ret
0x0000020000467650 : jrcxz 0x2000046769c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000467a3d : jrcxz 0x20000467aa0 ; ret
0x000002000046836d : jrcxz 0x200004683b6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004684c7 : jrcxz 0x2000046852a ; ret
0x0000020000469943 : jrcxz 0x20000469989 ; pop rsi ; ret
0x000002000046a739 : jrcxz 0x2000046a783 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000046b23c : jrcxz 0x2000046b288 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000046c091 : jrcxz 0x2000046c0d7 ; pop rsi ; ret
0x000002000046c132 : jrcxz 0x2000046c195 ; ret
0x000002000046c62a : jrcxz 0x2000046c672 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000046ca16 : jrcxz 0x2000046ca79 ; ret
0x000002000046d6b9 : jrcxz 0x2000046d6ff ; pop rsi ; ret
0x000002000046d922 : jrcxz 0x2000046d96b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000046f137 : jrcxz 0x2000046f17d ; pop rsi ; ret
0x000002000046f25f : jrcxz 0x2000046f2a7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000046fa8a : jrcxz 0x2000046fad6 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000046ffae : jrcxz 0x2000046fff7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000470100 : jrcxz 0x20000470161 ; ret
0x00000200004704c3 : jrcxz 0x200004704cb ; mov rdx, rdi ; call 0x200000bc777
0x0000020000470721 : jrcxz 0x20000470729 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000471dc7 : jrcxz 0x20000471dcd ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000471dc6 : jrcxz 0x20000471dce ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000471f2d : jrcxz 0x20000471f30 ; ret
0x0000020000471ed8 : jrcxz 0x20000471f3b ; ret
0x000002000047210a : jrcxz 0x20000472153 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000472330 : jrcxz 0x20000472379 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000473403 : jrcxz 0x2000047344c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004754bc : jrcxz 0x20000475506 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000477315 : jrcxz 0x2000047735f ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000047762d : jrcxz 0x2000047768e ; ret
0x0000020000477c10 : jrcxz 0x20000477c5a ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000047882a : jrcxz 0x20000478874 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000047a68a : jrcxz 0x2000047a6d2 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000047b2fc : jrcxz 0x2000047b346 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000047c4ce : jrcxz 0x2000047c518 ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000047c9f4 : jrcxz 0x2000047ca57 ; ret
0x000002000047d346 : jrcxz 0x2000047d38e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000047d42e : jrcxz 0x2000047d476 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000047f717 : jrcxz 0x2000047f760 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047fd8e : jrcxz 0x2000047fdf1 ; ret
0x00000200004823dc : jrcxz 0x2000048243f ; ret
0x0000020000482831 : jrcxz 0x2000048287d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000482ad8 : jrcxz 0x20000482b21 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000048317a : jrcxz 0x200004831c0 ; pop rsi ; ret
0x0000020000484af2 : jrcxz 0x20000484b53 ; ret
0x0000020000484be6 : jrcxz 0x20000484c32 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000484d2b : jrcxz 0x20000484d74 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004856a5 : jrcxz 0x20000485706 ; ret
0x00000200004877fc : jrcxz 0x20000487844 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004879a6 : jrcxz 0x200004879f2 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000488c71 : jrcxz 0x20000488cd4 ; ret
0x000002000048a30c : jrcxz 0x2000048a355 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000048d504 : jrcxz 0x2000048d565 ; ret
0x000002000048dcf9 : jrcxz 0x2000048dd42 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000048f9d0 : jrcxz 0x2000048fa33 ; ret
0x00000200004919e5 : jrcxz 0x20000491a2e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000491af4 : jrcxz 0x20000491b3d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004920dd : jrcxz 0x20000492123 ; pop rsi ; ret
0x0000020000493bc2 : jrcxz 0x20000493c0e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000494679 : jrcxz 0x200004946c2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000495311 : jrcxz 0x2000049535d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004958bd : jrcxz 0x20000495906 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000495c2c : jrcxz 0x20000495c8d ; ret
0x000002000049979b : jrcxz 0x200004997fc ; ret
0x000002000049aaa6 : jrcxz 0x2000049ab07 ; ret
0x000002000049ad14 : jrcxz 0x2000049ad75 ; ret
0x000002000049aff2 : jrcxz 0x2000049b053 ; ret
0x000002000049c560 : jrcxz 0x2000049c5a9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000049e313 : jrcxz 0x2000049e359 ; pop rsi ; ret
0x000002000049e655 : jrcxz 0x2000049e6b8 ; ret
0x00000200004a006a : jrcxz 0x200004a00b3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004a2489 : jrcxz 0x200004a24ea ; ret
0x00000200004a41f4 : jrcxz 0x200004a423a ; pop rsi ; ret
0x00000200004a445d : jrcxz 0x200004a44a9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004a4730 : jrcxz 0x200004a4793 ; ret
0x00000200004a4978 : jrcxz 0x200004a497d ; call 0x20000030c64
0x00000200004a4d2e : jrcxz 0x200004a4d33 ; call 0x20000030f74
0x00000200004a5215 : jrcxz 0x200004a521b ; call 0x200000d1211
0x00000200004a5911 : jrcxz 0x200004a5957 ; pop rsi ; ret
0x00000200004a6fcb : jrcxz 0x200004a7017 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004a760e : jrcxz 0x200004a7654 ; pop rdi ; ret
0x00000200004a8d3d : jrcxz 0x200004a8da0 ; ret
0x00000200004a970d : jrcxz 0x200004a9756 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004a9818 : jrcxz 0x200004a985e ; pop rsi ; ret
0x00000200004a9e62 : jrcxz 0x200004a9eab ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200004aa011 : jrcxz 0x200004aa05a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004aab55 : jrcxz 0x200004aab9f ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004ab5f2 : jrcxz 0x200004ab63b ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004abb21 : jrcxz 0x200004abb84 ; ret
0x00000200004abe53 : jrcxz 0x200004abeb6 ; ret
0x00000200004ac297 : jrcxz 0x200004ac2e1 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004ac57d : jrcxz 0x200004ac5e0 ; ret
0x00000200004ae2e3 : jrcxz 0x200004ae32c ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004aec32 : jrcxz 0x200004aec7b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004aed21 : jrcxz 0x200004aed6b ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004b13d9 : jrcxz 0x200004b13e8 ; loop 0x200004b13e2 ; mov rax, rdx ; ret
0x00000200004b13d9 : jrcxz 0x200004b13e9 ; loop 0x200004b13e3 ; mov rax, rdx ; ret
0x00000200004b2765 : jrcxz 0x200004b27b1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004b2c96 : jrcxz 0x200004b2cde ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b39e2 : jrcxz 0x200004b3a2b ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200004b3f01 : jrcxz 0x200004b3f4b ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004b4206 : jrcxz 0x200004b424c ; pop rdi ; ret
0x00000200004b4a77 : jrcxz 0x200004b4ac3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b5dda : jrcxz 0x200004b5e26 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b6fb8 : jrcxz 0x200004b7001 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004b88d2 : jrcxz 0x200004b891c ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004b97b8 : jrcxz 0x200004b9802 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004ba1f2 : jrcxz 0x200004ba23c ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004ba3dd : jrcxz 0x200004ba429 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200004ba778 : jrcxz 0x200004ba7c1 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004bc322 : jrcxz 0x200004bc385 ; ret
0x00000200004bc707 : jrcxz 0x200004bc753 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004bdf96 : jrcxz 0x200004bdff9 ; ret
0x00000200004be227 : jrcxz 0x200004be28a ; ret
0x00000200004befad : jrcxz 0x200004beff9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004c1600 : jrcxz 0x200004c1663 ; ret
0x00000200004c1fb0 : jrcxz 0x200004c2013 ; ret
0x00000200004c29da : jrcxz 0x200004c2a23 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c2cb6 : jrcxz 0x200004c2d17 ; ret
0x00000200004c3355 : jrcxz 0x200004c339d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c34d8 : jrcxz 0x200004c3539 ; ret
0x00000200004c3656 : jrcxz 0x200004c36b7 ; ret
0x00000200004c3a68 : jrcxz 0x200004c3acb ; ret
0x00000200004c3ed4 : jrcxz 0x200004c3f1e ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004c464f : jrcxz 0x200004c4697 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c4f24 : jrcxz 0x200004c4f6c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c5373 : jrcxz 0x200004c53bb ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004c557c : jrcxz 0x200004c55c5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c5ac0 : jrcxz 0x200004c5b0c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004c5c11 : jrcxz 0x200004c5c72 ; ret
0x00000200004c60df : jrcxz 0x200004c6127 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c6386 : jrcxz 0x200004c63cf ; pop rdi ; pop r12 ; pop rdi ; ret
0x00000200004c6513 : jrcxz 0x200004c6576 ; ret
0x00000200004c7219 : jrcxz 0x200004c727a ; ret
0x00000200004c734b : jrcxz 0x200004c73ac ; ret
0x00000200004c749e : jrcxz 0x200004c74ff ; ret
0x00000200004c7958 : jrcxz 0x200004c79bb ; ret
0x00000200004c7a68 : jrcxz 0x200004c7acb ; ret
0x00000200004c8aaa : jrcxz 0x200004c8a6a ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004c928b : jrcxz 0x200004c92ec ; ret
0x00000200004c99cc : jrcxz 0x200004c9a2d ; ret
0x00000200004c9c5b : jrcxz 0x200004c9cbc ; ret
0x00000200004c9ee8 : jrcxz 0x200004c9f31 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004ca4b1 : jrcxz 0x200004ca4fa ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ca68c : jrcxz 0x200004ca6d5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004cba07 : jrcxz 0x200004cba68 ; ret
0x00000200004cd04d : jrcxz 0x200004cd0ae ; ret
0x00000200004cd1eb : jrcxz 0x200004cd233 ; pop rsp ; pop rdi ; pop rsi ; ret
0x00000200004cda83 : jrcxz 0x200004cdae4 ; ret
0x00000200004cdf6a : jrcxz 0x200004cdfcb ; ret
0x00000200004ce523 : jrcxz 0x200004ce586 ; ret
0x00000200004cf17d : jrcxz 0x200004cf1c5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004cf60f : jrcxz 0x200004cf672 ; ret
0x00000200004cfb19 : jrcxz 0x200004cfb7a ; ret
0x00000200004cff08 : jrcxz 0x200004cff51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d0217 : jrcxz 0x200004d0278 ; ret
0x00000200004d0f72 : jrcxz 0x200004d0fba ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004d1158 : jrcxz 0x200004d11a0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004d1219 : jrcxz 0x200004d127c ; ret
0x00000200004d172c : jrcxz 0x200004d1772 ; pop rsi ; ret
0x00000200004d1f33 : jrcxz 0x200004d1f94 ; ret
0x00000200004d24c8 : jrcxz 0x200004d2512 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004d47ed : jrcxz 0x200004d4839 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004d5219 : jrcxz 0x200004d527c ; ret
0x00000200004d58c3 : jrcxz 0x200004d590f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004d60cb : jrcxz 0x200004d6114 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d6299 : jrcxz 0x200004d62df ; pop rsi ; ret
0x00000200004d63a9 : jrcxz 0x200004d640c ; ret
0x00000200004d65ab : jrcxz 0x200004d65f4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d68e3 : jrcxz 0x200004d6944 ; ret
0x00000200004d69a4 : jrcxz 0x200004d6a05 ; ret
0x00000200004d7501 : jrcxz 0x200004d7549 ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200004d786f : jrcxz 0x200004d78d2 ; ret
0x00000200004d8b78 : jrcxz 0x200004d8bd9 ; ret
0x00000200004d9189 : jrcxz 0x200004d91d2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d9b44 : jrcxz 0x200004d9b8e ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004d9c9f : jrcxz 0x200004d9ceb ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004da60b : jrcxz 0x200004da653 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004da6e4 : jrcxz 0x200004da747 ; ret
0x00000200004db450 : jrcxz 0x200004db498 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004ddf33 : jrcxz 0x200004ddf7c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004dea7b : jrcxz 0x200004deac4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004df474 : jrcxz 0x200004df4d7 ; ret
0x00000200004df56f : jrcxz 0x200004df5d0 ; ret
0x00000200004df660 : jrcxz 0x200004df6c1 ; ret
0x00000200004df821 : jrcxz 0x200004df869 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004dfc66 : jrcxz 0x200004dfcae ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004e1e91 : jrcxz 0x200004e1eda ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e29ac : jrcxz 0x200004e2a0f ; ret
0x00000200004e2c34 : jrcxz 0x200004e2c80 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004e2e63 : jrcxz 0x200004e2ea9 ; pop rsi ; ret
0x00000200004e38fd : jrcxz 0x200004e3949 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e3a85 : jrcxz 0x200004e3ae6 ; ret
0x00000200004e4992 : jrcxz 0x200004e49db ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e4e2c : jrcxz 0x200004e4e76 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004e4fcc : jrcxz 0x200004e5014 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004e5486 : jrcxz 0x200004e54cf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e5890 : jrcxz 0x200004e58dc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004e64b4 : jrcxz 0x200004e64fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e6b62 : jrcxz 0x200004e6bc3 ; ret
0x00000200004e7516 : jrcxz 0x200004e7562 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004e85d8 : jrcxz 0x200004e8624 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004e9671 : jrcxz 0x200004e96ba ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ebf40 : jrcxz 0x200004ebf88 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ec74b : jrcxz 0x200004ec794 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ed279 : jrcxz 0x200004ed2c2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ee014 : jrcxz 0x200004ee075 ; ret
0x00000200004ee1a7 : jrcxz 0x200004ee20a ; ret
0x00000200004eecd8 : jrcxz 0x200004eed24 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004ef232 : jrcxz 0x200004ef27a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004efbfd : jrcxz 0x200004efc46 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004effb5 : jrcxz 0x200004f0018 ; ret
0x00000200004f02f7 : jrcxz 0x200004f0343 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004f1aa8 : jrcxz 0x200004f1a63 ; jmp qword ptr [rcx]
0x00000200004f1a78 : jrcxz 0x200004f1ac0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f2044 : jrcxz 0x200004f20a5 ; ret
0x00000200004f22db : jrcxz 0x200004f233c ; ret
0x00000200004f2448 : jrcxz 0x200004f2490 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f2ce0 : jrcxz 0x200004f2d41 ; ret
0x00000200004f36c3 : jrcxz 0x200004f370b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f3b09 : jrcxz 0x200004f3b6a ; ret
0x00000200004f3d0d : jrcxz 0x200004f3d59 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004f5c3f : jrcxz 0x200004f5c88 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f8787 : jrcxz 0x200004f87e8 ; ret
0x00000200004fc00d : jrcxz 0x200004fc055 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fc455 : jrcxz 0x200004fc4b8 ; ret
0x00000200004fd78c : jrcxz 0x200004fd7d8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004fdd45 : jrcxz 0x200004fdda6 ; ret
0x00000200004fe180 : jrcxz 0x200004fe1ca ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004fe672 : jrcxz 0x200004fe6bb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fed52 : jrcxz 0x200004fed9e ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004feffe : jrcxz 0x200004ff04a ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004ff658 : jrcxz 0x200004ff6a1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050039a : jrcxz 0x200005003fb ; ret
0x00000200005030af : jrcxz 0x200005030f8 ; pop rdi ; pop r12 ; pop rbp ; ret
0x00000200005032a6 : jrcxz 0x20000503307 ; ret
0x0000020000504a2a : jrcxz 0x20000504a76 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000505126 : jrcxz 0x20000505187 ; ret
0x00000200005051cb : jrcxz 0x2000050522c ; ret
0x0000020000506ef9 : jrcxz 0x20000506f45 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000507a03 : jrcxz 0x20000507a4c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000508346 : jrcxz 0x200005083a9 ; ret
0x00000200005097e0 : jrcxz 0x20000509829 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050ae33 : jrcxz 0x2000050ae96 ; ret
0x000002000050bd74 : jrcxz 0x2000050bdbe ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000050c4eb : jrcxz 0x2000050c533 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000050d14b : jrcxz 0x2000050d194 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050d232 : jrcxz 0x2000050d295 ; ret
0x000002000050dad6 : jrcxz 0x2000050db37 ; ret
0x000002000050dba0 : jrcxz 0x2000050dc01 ; ret
0x000002000050dd8d : jrcxz 0x2000050ddee ; ret
0x000002000050f874 : jrcxz 0x2000050f8bd ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050ffb7 : jrcxz 0x2000050ffff ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000510458 : jrcxz 0x200005104a1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000510f74 : jrcxz 0x20000510fd5 ; ret
0x0000020000511922 : jrcxz 0x20000511983 ; ret
0x0000020000511a54 : jrcxz 0x20000511ab5 ; ret
0x0000020000511af9 : jrcxz 0x20000511ac2 ; ret
0x0000020000512181 : jrcxz 0x200005121ca ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000512eef : jrcxz 0x20000512f52 ; ret
0x00000200005133f8 : jrcxz 0x2000051345b ; ret
0x00000200005134ec : jrcxz 0x2000051354f ; ret
0x00000200005143c8 : jrcxz 0x20000514414 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000514c00 : jrcxz 0x20000514c61 ; ret
0x00000200005156ff : jrcxz 0x2000051574b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000515d35 : jrcxz 0x20000515d81 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000051761e : jrcxz 0x20000517664 ; pop rdi ; ret
0x0000020000517e8d : jrcxz 0x20000517ed9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000518c5c : jrcxz 0x20000518ca5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051a502 : jrcxz 0x2000051a563 ; ret
0x000002000051a6cc : jrcxz 0x2000051a72f ; ret
0x000002000051ad8f : jrcxz 0x2000051addb ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000051b078 : jrcxz 0x2000051b0d9 ; ret
0x000002000051bc0d : jrcxz 0x2000051bc6e ; ret
0x000002000051c078 : jrcxz 0x2000051c080 ; je 0x2000051c088 ; call 0x2000013e17b
0x000002000051c153 : jrcxz 0x2000051c1b6 ; ret
0x000002000051c466 : jrcxz 0x2000051c4c7 ; ret
0x000002000051c65e : jrcxz 0x2000051c6a8 ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000051d5b0 : jrcxz 0x2000051d611 ; ret
0x000002000051de80 : jrcxz 0x2000051dee3 ; ret
0x000002000051e45e : jrcxz 0x2000051e4a7 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000051e644 : jrcxz 0x2000051e6a7 ; ret
0x000002000051ed29 : jrcxz 0x2000051ed8a ; ret
0x000002000051fbc4 : jrcxz 0x2000051fc25 ; ret
0x000002000051ff4e : jrcxz 0x2000051ffaf ; ret
0x00000200005750a4 : jrcxz 0x200005750ab ; jmp 0x200005750b3
0x000002000059a835 : jrcxz 0x2000059a849 ; ret 0xc133
0x000002000059a834 : jrcxz 0x2000059a84a ; ret 0xc133
0x00000200005acbdf : jrcxz 0x200005acc40 ; ret
0x00000200005b57b4 : jrcxz 0x200005b5815 ; ret
0x00000200005b6853 : jrcxz 0x200005b68b6 ; ret
0x00000200005b6f00 : jrcxz 0x200005b6f48 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005b89fd : jrcxz 0x200005b8a49 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005b99e7 : jrcxz 0x200005b9a33 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005ba3ff : jrcxz 0x200005ba448 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200005be7a6 : jrcxz 0x200005be7f2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005bf2b3 : jrcxz 0x200005bf316 ; ret
0x00000200005c04a6 : jrcxz 0x200005c0507 ; ret
0x00000200005c1279 : jrcxz 0x200005c12c1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c1470 : jrcxz 0x200005c14b9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c21d4 : jrcxz 0x200005c221d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c31fe : jrcxz 0x200005c325f ; ret
0x00000200005c3914 : jrcxz 0x200005c3960 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005c5109 : jrcxz 0x200005c5153 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005c5fa1 : jrcxz 0x200005c5fed ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005c632b : jrcxz 0x200005c638e ; ret
0x00000200005c7ccc : jrcxz 0x200005c7d18 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005c9ab5 : jrcxz 0x200005c9afb ; pop rsi ; ret
0x00000200005caff2 : jrcxz 0x200005cb038 ; pop rsi ; ret
0x00000200005cbe2c : jrcxz 0x200005cbe74 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005cc4a8 : jrcxz 0x200005cc50a ; ret
0x00000200005ccf69 : jrcxz 0x200005ccfb2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005cd383 : jrcxz 0x200005cd3e4 ; ret
0x00000200005cdaab : jrcxz 0x200005cdb0e ; ret
0x00000200005cdf39 : jrcxz 0x200005cdf81 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005ce23a : jrcxz 0x200005ce29b ; ret
0x00000200005ce414 : jrcxz 0x200005ce477 ; ret
0x00000200005cf1dc : jrcxz 0x200005cf226 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005d0dd2 : jrcxz 0x200005d0e35 ; ret
0x00000200005d1379 : jrcxz 0x200005d13c5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005d1d8f : jrcxz 0x200005d1dd8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d2d98 : jrcxz 0x200005d2dfb ; ret
0x00000200005d2fc5 : jrcxz 0x200005d300e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d37cd : jrcxz 0x200005d382e ; ret
0x00000200005d51d9 : jrcxz 0x200005d5223 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005d5855 : jrcxz 0x200005d589d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005d6105 : jrcxz 0x200005d6151 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005d6bf0 : jrcxz 0x200005d6c39 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005d79eb : jrcxz 0x200005d7a35 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005d9ac6 : jrcxz 0x200005d9b0e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005da0c2 : jrcxz 0x200005da125 ; ret
0x00000200005da1d1 : jrcxz 0x200005da234 ; ret
0x00000200005da29f : jrcxz 0x200005da300 ; ret
0x00000200005da859 : jrcxz 0x200005da89f ; pop rdi ; ret
0x00000200005dab28 : jrcxz 0x200005dab89 ; ret
0x00000200005dbcd5 : jrcxz 0x200005dbd1d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005dc37c : jrcxz 0x200005dc3c5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005dcd87 : jrcxz 0x200005dcde8 ; ret
0x00000200005ddef5 : jrcxz 0x200005ddefd ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005de8a0 : jrcxz 0x200005de8e8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005deaf0 : jrcxz 0x200005deb38 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005df32d : jrcxz 0x200005df376 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005df425 : jrcxz 0x200005df46e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005df7ed : jrcxz 0x200005df839 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005e1103 : jrcxz 0x200005e114d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005e3085 : jrcxz 0x200005e30ce ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005e3fa3 : jrcxz 0x200005e3fec ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e48df : jrcxz 0x200005e48e9 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e7677 : jrcxz 0x200005e76c0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e7f95 : jrcxz 0x200005e7fde ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e8701 : jrcxz 0x200005e8762 ; ret
0x00000200005e957b : jrcxz 0x200005e95c1 ; pop rsi ; ret
0x00000200005e9662 : jrcxz 0x200005e96a8 ; pop rsi ; ret
0x00000200005e97af : jrcxz 0x200005e97f5 ; pop rsi ; ret
0x00000200005e9b3f : jrcxz 0x200005e9b89 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005ea1b6 : jrcxz 0x200005ea1ff ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200005ea768 : jrcxz 0x200005ea7b1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ea9c0 : jrcxz 0x200005eaa21 ; ret
0x00000200005eb29b : jrcxz 0x200005eb2e3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005eca7d : jrcxz 0x200005ecac5 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200005ecbbf : jrcxz 0x200005ecc20 ; ret
0x00000200005eccc6 : jrcxz 0x200005ecd27 ; ret
0x00000200005eeaf3 : jrcxz 0x200005eeb39 ; pop rdi ; ret
0x00000200005ef1d9 : jrcxz 0x200005ef221 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005efb69 : jrcxz 0x200005efbcc ; ret
0x00000200005f2316 : jrcxz 0x200005f2360 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005f3b89 : jrcxz 0x200005f3bd3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005f4709 : jrcxz 0x200005f4755 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200005f5abd : jrcxz 0x200005f5b06 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f5b87 : jrcxz 0x200005f5bea ; ret
0x00000200005f72fb : jrcxz 0x200005f735e ; ret
0x00000200005f94d3 : jrcxz 0x200005f9536 ; ret
0x00000200005fb20c : jrcxz 0x200005fb254 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005fbf1c : jrcxz 0x200005fbf7f ; ret
0x00000200005fc6dd : jrcxz 0x200005fc723 ; pop rsi ; ret
0x00000200005fe1fb : jrcxz 0x200005fe247 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005fe424 : jrcxz 0x200005fe46c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005fe51d : jrcxz 0x200005fe563 ; pop rsi ; ret
0x00000200005fe780 : jrcxz 0x200005fe7cc ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006001df : jrcxz 0x20000600227 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000601f43 : jrcxz 0x20000601f8b ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000603df6 : jrcxz 0x20000603e59 ; ret
0x0000020000604fa8 : jrcxz 0x20000604ff1 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000060568d : jrcxz 0x200006056f0 ; ret
0x00000200006058ba : jrcxz 0x20000605903 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006065bd : jrcxz 0x20000606620 ; ret
0x0000020000606dca : jrcxz 0x20000606e10 ; pop rsi ; ret
0x00000200006071f6 : jrcxz 0x20000607242 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000607ed2 : jrcxz 0x20000607f33 ; ret
0x00000200006085ad : jrcxz 0x200006085f9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006091a3 : jrcxz 0x20000609204 ; ret
0x0000020000609a7a : jrcxz 0x20000609adb ; ret
0x0000020000609c51 : jrcxz 0x20000609cb2 ; ret
0x000002000060be41 : jrcxz 0x2000060bea2 ; ret
0x000002000060c4fe : jrcxz 0x2000060c561 ; ret
0x000002000060d170 : jrcxz 0x2000060d1d3 ; ret
0x000002000060d223 : jrcxz 0x2000060d286 ; ret
0x000002000060d42b : jrcxz 0x2000060d48e ; ret
0x000002000060e2d1 : jrcxz 0x2000060e31a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060e684 : jrcxz 0x2000060e6ce ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000060eef2 : jrcxz 0x2000060ef3b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060f436 : jrcxz 0x2000060f47f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000610191 : jrcxz 0x200006101f2 ; ret
0x0000020000610fe0 : jrcxz 0x20000611029 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000615912 : jrcxz 0x2000061595b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006183ea : jrcxz 0x2000061844b ; ret
0x0000020000619e3d : jrcxz 0x20000619e83 ; pop rsi ; ret
0x0000020000619f5f : jrcxz 0x20000619fa8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061aab0 : jrcxz 0x2000061aaf9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061ac72 : jrcxz 0x2000061acbb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061b0a6 : jrcxz 0x2000061b0ee ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000061b2eb : jrcxz 0x2000061b334 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061ba74 : jrcxz 0x2000061babc ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000061bb65 : jrcxz 0x2000061bbc6 ; ret
0x000002000061bd55 : jrcxz 0x2000061bdb6 ; ret
0x000002000061c1c3 : jrcxz 0x2000061c20f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061c755 : jrcxz 0x2000061c7a1 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061e287 : jrcxz 0x2000061e2e8 ; ret
0x000002000061f942 : jrcxz 0x2000061f98b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061fd1b : jrcxz 0x2000061fd65 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000062139a : jrcxz 0x200006213fb ; ret
0x00000200006225e5 : jrcxz 0x2000062262e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000622b40 : jrcxz 0x20000622b8c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000624379 : jrcxz 0x200006243da ; ret
0x0000020000625163 : jrcxz 0x200006251c4 ; ret
0x0000020000626c22 : jrcxz 0x20000626c6e ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006270d8 : jrcxz 0x20000627124 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000627da8 : jrcxz 0x20000627df0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006281d1 : jrcxz 0x2000062821d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000628490 : jrcxz 0x200006284d9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006285ac : jrcxz 0x200006285f6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000062acfd : jrcxz 0x2000062ad60 ; ret
0x000002000062aeb5 : jrcxz 0x2000062af18 ; ret
0x000002000062bafd : jrcxz 0x2000062bb5e ; ret
0x000002000062c202 : jrcxz 0x2000062c24b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000062dadf : jrcxz 0x2000062db40 ; ret
0x000002000062dc4b : jrcxz 0x2000062dc93 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000062e133 : jrcxz 0x2000062e181 ; mov eax, ecx ; ret
0x000002000062e34c : jrcxz 0x2000062e394 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000062ed46 : jrcxz 0x2000062ed92 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000062f270 : jrcxz 0x2000062f2d1 ; ret
0x000002000062f4ce : jrcxz 0x2000062f517 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000631630 : jrcxz 0x20000631679 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000631ae2 : jrcxz 0x20000631b2a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000631e1d : jrcxz 0x20000631e66 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000632008 : jrcxz 0x20000632051 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063280e : jrcxz 0x2000063285a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000633a96 : jrcxz 0x20000633af7 ; ret
0x00000200006340d9 : jrcxz 0x20000634122 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006347ea : jrcxz 0x20000634830 ; pop rsi ; ret
0x0000020000634b45 : jrcxz 0x20000634b8e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000635d3f : jrcxz 0x20000635da0 ; ret
0x0000020000635fd6 : jrcxz 0x2000063601e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006383e9 : jrcxz 0x20000638435 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000638875 : jrcxz 0x200006388d8 ; ret
0x0000020000638a95 : jrcxz 0x20000638af8 ; ret
0x000002000063981d : jrcxz 0x20000639867 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000639cbb : jrcxz 0x20000639d04 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063a04a : jrcxz 0x2000063a093 ; pop rdi ; pop r12 ; pop rdi ; ret
0x000002000063a34c : jrcxz 0x2000063a395 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063a87d : jrcxz 0x2000063a8c7 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000063c779 : jrcxz 0x2000063c7c2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063d50c : jrcxz 0x2000063d555 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063d69e : jrcxz 0x2000063d6e7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063e378 : jrcxz 0x2000063e3c4 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000064011b : jrcxz 0x20000640164 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000641162 : jrcxz 0x200006411c3 ; ret
0x00000200006412c8 : jrcxz 0x20000641314 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000643f3d : jrcxz 0x20000643f83 ; pop rdi ; ret
0x00000200006444ad : jrcxz 0x200006444f6 ; pop rdi ; pop r13 ; pop rdi ; ret
0x00000200006455b4 : jrcxz 0x20000645600 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000645844 : jrcxz 0x2000064588c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006459bc : jrcxz 0x20000645a08 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000646008 : jrcxz 0x20000646051 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006461bd : jrcxz 0x2000064621e ; ret
0x00000200006470e4 : jrcxz 0x20000647145 ; ret
0x00000200006475a6 : jrcxz 0x200006475f2 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000648662 : jrcxz 0x200006486aa ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000648b39 : jrcxz 0x20000648b9a ; ret
0x0000020000649369 : jrcxz 0x200006493ca ; ret
0x0000020000649962 : jrcxz 0x200006499a8 ; pop rsi ; ret
0x000002000064ae5b : jrcxz 0x2000064aea4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064af61 : jrcxz 0x2000064afa7 ; pop rsi ; ret
0x000002000064b060 : jrcxz 0x2000064b0a6 ; pop rsi ; ret
0x000002000064b148 : jrcxz 0x2000064b18e ; pop rsi ; ret
0x000002000064b211 : jrcxz 0x2000064b272 ; ret
0x000002000064b2d5 : jrcxz 0x2000064b336 ; ret
0x000002000064b41e : jrcxz 0x2000064b467 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064b6e8 : jrcxz 0x2000064b731 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064c083 : jrcxz 0x2000064c0e6 ; ret
0x000002000064c502 : jrcxz 0x2000064c54b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064c687 : jrcxz 0x2000064c6cf ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064d1e2 : jrcxz 0x2000064d245 ; ret
0x000002000064d685 : jrcxz 0x2000064d6cf ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000064ecff : jrcxz 0x2000064ed49 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000064ed9a : jrcxz 0x2000064ede3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000651305 : jrcxz 0x2000065134e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006520d1 : jrcxz 0x2000065211d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006525e3 : jrcxz 0x2000065262b ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000652777 : jrcxz 0x200006527bd ; pop rdi ; ret
0x00000200006528c9 : jrcxz 0x20000652912 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000653139 : jrcxz 0x20000653185 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000654b95 : jrcxz 0x20000654bdd ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065a111 : jrcxz 0x2000065a15a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065aea0 : jrcxz 0x2000065aee9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065c8b3 : jrcxz 0x2000065c8fb ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065dc3b : jrcxz 0x2000065dc9c ; ret
0x000002000065dd95 : jrcxz 0x2000065dddd ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000065e147 : jrcxz 0x2000065e190 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000664b8d : jrcxz 0x20000664bee ; ret
0x0000020000666c07 : jrcxz 0x20000666c50 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000667bcb : jrcxz 0x20000667c2e ; ret
0x000002000066d719 : jrcxz 0x2000066d785 ; ret 0x48ff
0x000002000066e531 : jrcxz 0x2000066e579 ; ret
0x000002000066f41b : jrcxz 0x2000066f467 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006700de : jrcxz 0x20000670126 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000670250 : jrcxz 0x20000670298 ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000670434 : jrcxz 0x2000067047e ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000671d9e : jrcxz 0x20000671e01 ; ret
0x0000020000671e6c : jrcxz 0x20000671ecf ; ret
0x000002000067394a : jrcxz 0x200006739ad ; ret
0x0000020000673a1a : jrcxz 0x20000673a7d ; ret
0x0000020000675fbe : jrcxz 0x20000676021 ; ret
0x0000020000679f13 : jrcxz 0x20000679f5c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000067b4a8 : jrcxz 0x2000067b4f4 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000067bd0d : jrcxz 0x2000067bd59 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000067c091 : jrcxz 0x2000067c0dd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000067c579 : jrcxz 0x2000067c5dc ; ret
0x000002000067c74a : jrcxz 0x2000067c792 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000067c8dd : jrcxz 0x2000067c940 ; ret
0x000002000067e556 : jrcxz 0x2000067e59e ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000688a9e : jrcxz 0x20000688aea ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000688b43 : jrcxz 0x20000688b8f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000068d198 : jrcxz 0x2000068d1fb ; ret
0x00000200006eb03b : jrcxz 0x200006eb081 ; pop rsp ; ret
0x00000200006ee0ab : jrcxz 0x200006ee0f7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006ee31f : jrcxz 0x200006ee367 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006ef08d : jrcxz 0x200006ef0ee ; ret
0x00000200006f3059 : jrcxz 0x200006f30a1 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006f33dc : jrcxz 0x200006f3428 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006f50c2 : jrcxz 0x200006f510e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006f66a2 : jrcxz 0x200006f66eb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f8376 : jrcxz 0x200006f83d9 ; ret
0x00000200006fc404 : jrcxz 0x200006fc465 ; ret
0x00000200006fd6b8 : jrcxz 0x200006fd719 ; ret
0x00000200006fda76 : jrcxz 0x200006fdac2 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006fe1cd : jrcxz 0x200006fe213 ; pop rsi ; ret
0x00000200006ff0e9 : jrcxz 0x200006ff132 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ffdd2 : jrcxz 0x200006ffe1b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000701704 : jrcxz 0x20000701765 ; ret
0x000002000070213a : jrcxz 0x20000702186 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000070346a : jrcxz 0x200007034b3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000703b61 : jrcxz 0x20000703ba9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000703e76 : jrcxz 0x20000703ed7 ; ret
0x0000020000704250 : jrcxz 0x20000704298 ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200007045d4 : jrcxz 0x2000070461c ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200007048be : jrcxz 0x2000070490a ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000704d16 : jrcxz 0x20000704d77 ; ret
0x00000200007050ac : jrcxz 0x2000070510d ; ret
0x00000200007055f8 : jrcxz 0x20000705659 ; ret
0x0000020000705e12 : jrcxz 0x20000705e5b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070607d : jrcxz 0x200007060c6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000070679d : jrcxz 0x200007067e9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000706909 : jrcxz 0x2000070696a ; ret
0x0000020000707be1 : jrcxz 0x20000707c2d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000070800e : jrcxz 0x20000708057 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000708918 : jrcxz 0x20000708961 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000709050 : jrcxz 0x20000709099 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000709d0a : jrcxz 0x20000709d53 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000070ae26 : jrcxz 0x2000070ae6e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000070b0c7 : jrcxz 0x2000070b113 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000070b436 : jrcxz 0x2000070b47f ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000070b7e7 : jrcxz 0x2000070b848 ; ret
0x000002000070ce73 : jrcxz 0x2000070ced4 ; ret
0x000002000070d6e7 : jrcxz 0x2000070d748 ; ret
0x000002000070db66 : jrcxz 0x2000070dbc7 ; ret
0x000002000070dce2 : jrcxz 0x2000070dd43 ; ret
0x000002000070df83 : jrcxz 0x2000070dfcb ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000710925 : jrcxz 0x20000710986 ; ret
0x000002000071124c : jrcxz 0x20000711295 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007114d3 : jrcxz 0x2000071151b ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200007114d3 : jrcxz 0x2000071151d ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000071165f : jrcxz 0x200007116c0 ; ret
0x0000020000712730 : jrcxz 0x20000712791 ; ret
0x0000020000712a8d : jrcxz 0x20000712aee ; ret
0x0000020000714887 : jrcxz 0x200007148e8 ; ret
0x00000200007168c2 : jrcxz 0x2000071690a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000716ca5 : jrcxz 0x20000716d06 ; ret
0x0000020000716df8 : jrcxz 0x20000716e40 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000071740b : jrcxz 0x2000071746c ; ret
0x0000020000717b43 : jrcxz 0x20000717ba4 ; ret
0x0000020000717f20 : jrcxz 0x20000717f81 ; ret
0x00000200007188e1 : jrcxz 0x20000718929 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000719431 : jrcxz 0x2000071947b ; pop rsi ; pop r13 ; pop r12 ; ret
0x00000200007194f1 : jrcxz 0x2000071953a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000071955f : jrcxz 0x200007195a7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072a1c6 : jrcxz 0x2000072a227 ; ret
0x000002000072a5a8 : jrcxz 0x2000072a5f4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000072a95c : jrcxz 0x2000072a952 ; add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x000002000072b3a3 : jrcxz 0x2000072b404 ; ret
0x000002000072b4d9 : jrcxz 0x2000072b522 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000072b7af : jrcxz 0x2000072b7f7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072b9b4 : jrcxz 0x2000072ba15 ; ret
0x000002000072bcfd : jrcxz 0x2000072bd46 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000072ce71 : jrcxz 0x2000072cebb ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000072cfdf : jrcxz 0x2000072d040 ; ret
0x000002000072ef4b : jrcxz 0x2000072ef93 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072fd45 : jrcxz 0x2000072fd8d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000001026b : js 0x2000001020f ; loopne 0x200000102d9 ; clc ; jbe 0x200000102e5 ; popfq ; ret
0x000002000001026a : js 0x20000010210 ; loopne 0x200000102da ; clc ; jbe 0x200000102e6 ; popfq ; ret
0x000002000001140c : js 0x2000001143f ; xor edi, edi ; out dx, al ; jp 0x2000001146f ; ret 0x7ec2
0x00000200000115bf : js 0x20000011583 ; rcl bh, 1 ; mov dl, 0x76 ; ret 0xbb54
0x000002000001189b : js 0x2000001190d ; ret
0x000002000001f9a1 : js 0x2000001fa23 ; ret
0x000002000002eae1 : js 0x2000002eb47 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002ed16 : js 0x2000002ed7c ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000038dde : js 0x20000038e2e ; add esp, 0x50 ; pop rbp ; ret
0x000002000003cc78 : js 0x2000003ccc8 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000041ccf : js 0x20000041d22 ; add esp, 0x80 ; pop rbx ; ret
0x000002000006432f : js 0x200000642be ; ret
0x00000200000678a7 : js 0x200000678bc ; jmp 0x20000067470
0x0000020000067ccb : js 0x20000067cda ; jmp 0x20000067a6c
0x000002000007bf54 : js 0x2000007bf41 ; ret
0x000002000008e5e5 : js 0x2000008e573 ; ret
0x0000020000090083 : js 0x2000009008e ; adc byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; scasb al, byte ptr [rdi] ; ret
0x0000020000090695 : js 0x200000906a0 ; adc byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200000909f4 : js 0x20000090a44 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000093be4 : js 0x20000093bfa ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000009b849 : js 0x2000009b8af ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009ec32 : js 0x2000009ec85 ; add esp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000a4f8e : js 0x200000a4fe1 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000a57b3 : js 0x200000a57c7 ; xchg eax, esp ; ret 0x8948
0x00000200000a57b2 : js 0x200000a57c8 ; xchg eax, esp ; ret 0x8948
0x00000200000b4921 : js 0x200000b4932 ; ret
0x00000200000b5e96 : js 0x200000b5e25 ; ret
0x00000200000b634d : js 0x200000b6365 ; ret
0x00000200000cac69 : js 0x200000cac78 ; mov eax, 1 ; ret
0x00000200000d453b : js 0x200000d4544 ; xor eax, eax ; ret
0x00000200000d812b : js 0x200000d8138 ; add rsp, 0x28 ; ret
0x00000200000dd60c : js 0x200000dd604 ; add byte ptr [rdi], cl ; test dword ptr [rbx], ebx ; ret
0x00000200000e19b2 : js 0x200000e19ac ; mov rax, rdx ; ret
0x00000200000e19b2 : js 0x200000e19ad ; mov rax, rdx ; ret
0x00000200000e7a2e : js 0x200000e7a25 ; mov rax, rdx ; ret
0x00000200000e7a2e : js 0x200000e7a26 ; mov rax, rdx ; ret
0x00000200000ecaf7 : js 0x200000ecafc ; ret
0x00000200000f2193 : js 0x200000f219c ; xor al, al ; ret
0x00000200000f5e13 : js 0x200000f5e25 ; mov rax, rdx ; ret
0x00000200000f5e13 : js 0x200000f5e26 ; mov rax, rdx ; ret
0x00000200000f6f2e : js 0x200000f6f38 ; mov al, dl ; ret
0x00000200000f6f2e : js 0x200000f6f39 ; mov al, dl ; ret
0x0000020000107a07 : js 0x20000107a57 ; add esp, 0x50 ; pop rbp ; ret
0x000002000010b885 : js 0x2000010b88c ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x000002000010bfdf : js 0x2000010bf6e ; ret
0x0000020000117cd4 : js 0x20000117d13 ; ret
0x00000200001199a0 : js 0x200001199f0 ; add esp, 0x60 ; pop rdi ; ret
0x000002000011ea81 : js 0x2000011ea99 ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x000002000012044e : js 0x20000120466 ; add byte ptr [rsi + rbp*8 - 1], dh ; ret
0x0000020000123594 : js 0x200001235f6 ; add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000128045 : js 0x20000128095 ; add esp, 0x60 ; pop rbp ; ret
0x000002000012ed03 : js 0x2000012ed16 ; test cl, 0x20 ; je 0x2000012ed15 ; inc eax ; ret
0x000002000012ed1b : js 0x2000012ed2e ; test cl, 0x3f ; je 0x2000012ed2d ; inc eax ; ret
0x00000200001337fb : js 0x2000013384e ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001345ac : js 0x20000134582 ; and dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000135460 : js 0x200001354b0 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000138b46 : js 0x20000138b18 ; jl 0x20000138b54 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4389
0x000002000013fd84 : js 0x2000013fd90 ; add byte ptr [rax], al ; ret
0x0000020000140010 : js 0x20000140060 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000146599 : js 0x200001465e9 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000149068 : js 0x200001490b8 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000149aa8 : js 0x20000149aed ; call rbx
0x0000020000186e6e : js 0x20000186e81 ; add r8, 8 ; inc r10 ; jmp 0x20000186e66
0x0000020000195b25 : js 0x20000195b3d ; mov dh, 0x4c ; pop rsi ; add al, 0x8b ; ret
0x00000200001a8e55 : js 0x200001a8e56 ; dec dword ptr [rax - 0x75] ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x00000200001bba9d : js 0x200001bbaae ; sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x00000200001d0e92 : js 0x200001d0ee2 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001d4b11 : js 0x200001d4b62 ; add esp, 0x50 ; pop r15 ; ret
0x00000200001ed309 : js 0x200001ed35a ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fc573 : js 0x200001fc5bf ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001fc73f : js 0x200001fc78b ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000203c8f : js 0x20000203cdf ; add esp, 0x60 ; pop rbp ; ret
0x0000020000205b23 : js 0x20000205b2f ; add byte ptr [rax], al ; ret
0x0000020000205e5e : js 0x20000205e6d ; mov eax, 0xc00000bb ; ret
0x000002000020fe63 : js 0x2000020fdf2 ; ret
0x000002000020ff8b : js 0x2000020ff1a ; ret
0x000002000021e406 : js 0x2000021e395 ; ret
0x000002000021e8df : js 0x2000021e86e ; ret
0x0000020000223cec : js 0x20000223cef ; ret
0x00000200002263ec : js 0x2000022643d ; add esp, 0x50 ; pop r14 ; ret
0x00000200002270aa : js 0x200002270fd ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000229bef : js 0x20000229c3f ; add esp, 0x20 ; pop rdi ; ret
0x0000020000229bee : js 0x20000229c40 ; add esp, 0x20 ; pop rdi ; ret
0x0000020000248a7c : js 0x20000248a60 ; or byte ptr [rax], al ; ret
0x000002000027d31d : js 0x2000027d373 ; add byte ptr [rax], al ; ret
0x0000020000367c4b : js 0x20000367c4a ; dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x7d], 0xbc ; ret 0x4ca8
0x0000020000368966 : js 0x200003689b6 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000368fda : js 0x2000036902a ; add esp, 0x60 ; pop rdi ; ret
0x0000020000369085 : js 0x200003690d8 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000036d2d3 : js 0x2000036d323 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000372f00 : js 0x20000372f53 ; test eax, eax ; je 0x20000372f1f ; mov rcx, r15 ; call rax
0x000002000038170a : js 0x2000038175a ; add esp, 0x50 ; pop rdi ; ret
0x0000020000532f7e : js 0x200003861e9 ; call 0x2000015e241
0x0000020000388ee8 : js 0x20000388f38 ; add esp, 0x60 ; pop rbp ; ret
0x000002000038abe7 : js 0x2000038ac38 ; add esp, 0x50 ; pop r15 ; ret
0x000002000038b7bc : js 0x2000038b7ef ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000039db07 : js 0x2000039daf3 ; ret
0x000002000039de07 : js 0x2000039ddf3 ; ret
0x000002000039e208 : js 0x2000039e1f4 ; ret 0xccad
0x000002000039e208 : js 0x2000039e1f9 ; ret 0xccad
0x000002000039e80b : js 0x2000039e7fc ; mov edi, 0x8bffcca7 ; ret
0x000002000039ed07 : js 0x2000039ecf3 ; ret
0x000002000039ed07 : js 0x2000039ecf8 ; ret
0x00000200003a4205 : js 0x200003a418d ; jmp 0x200003a41b2
0x00000200003a630a : js 0x200003a6316 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003ade28 : js 0x200003ade78 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003b2f3e : js 0x200003b2f8f ; add esp, 0x50 ; pop r14 ; ret
0x00000200003bcbdd : js 0x200003bcbca ; insd dword ptr [rdi], dx ; ret 0xffff
0x00000200003d5074 : js 0x200003d506e ; ret
0x00000200003eba99 : js 0x200003eba28 ; ret
0x00000200003eed35 : js 0x200003eed68 ; add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x00000200003f0249 : js 0x200003f0237 ; jge 0x200003f0203 ; ret
0x00000200003f0641 : js 0x200003f0691 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003f0640 : js 0x200003f0692 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003f168c : js 0x200003f161b ; ret
0x00000200003f72c9 : js 0x200003f72f6 ; test cl, 8 ; jne 0x200003f72d8 ; ret
0x00000200003ff6ad : js 0x200003ff63c ; ret
0x00000200003ffae5 : js 0x200003ffa74 ; ret
0x0000020000405a64 : js 0x20000405a45 ; in al, dx ; dec dword ptr [rdx - 0x4e0e172d] ; ret 0xebff
0x00000200004068fc : js 0x20000406962 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004074ac : js 0x2000040743b ; ret
0x0000020000408234 : js 0x200004081c3 ; ret 0x8348
0x000002000040f84a : js 0x2000040f7d8 ; ret
0x000002000041088e : js 0x200004108df ; add esp, 0x50 ; pop r14 ; ret
0x0000020000411075 : js 0x200004110c1 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004153d3 : js 0x20000415424 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004153d3 : js 0x20000415426 ; add esp, 0x50 ; pop r15 ; ret
0x000002000042427d : js 0x2000042420c ; ret
0x0000020000424311 : js 0x20000424361 ; add esp, 0x60 ; pop rdi ; ret
0x000002000042d494 : js 0x2000042d469 ; ret
0x0000020000434acf : js 0x20000434b1f ; add esp, 0x60 ; pop rdi ; ret
0x000002000043a234 : js 0x2000043a298 ; ret
0x000002000043df41 : js 0x2000043df13 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000043e671 : js 0x2000043e6c4 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000443a60 : js 0x20000443ab0 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000444014 : js 0x20000444065 ; mov ecx, ebp ; call 0x2000006a617
0x0000020000445434 : js 0x20000445420 ; ret 0xc88a
0x0000020000446ee9 : js 0x20000446e7c ; fsubr st(0) ; fbld dword ptr [rax] ; ret 0x48ff
0x0000020000447254 : js 0x20000447275 ; ret 0x65ff
0x00000200004497a4 : js 0x20000449795 ; clc ; sar edi, -0x75 ; ret
0x000002000045f5a3 : js 0x2000045f532 ; ret
0x0000020000463248 : js 0x20000463298 ; add esp, 0x50 ; pop rdi ; ret
0x000002000046546b : js 0x200004654bb ; add esp, 0x50 ; pop rbp ; ret
0x0000020000467f95 : js 0x20000467f24 ; ret
0x0000020000469686 : js 0x20000469615 ; ret
0x000002000046c2e7 : js 0x2000046c34d ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000046d7e0 : js 0x2000046d76f ; ret
0x0000020000474694 : js 0x20000474635 ; adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000475f78 : js 0x20000475fc9 ; add esp, 0x50 ; pop r15 ; ret
0x000002000047e25a : js 0x2000047e2aa ; add esp, 0x60 ; pop rdi ; ret
0x000002000047ffd0 : js 0x2000047ffd9 ; xor eax, eax ; ret
0x0000020000482d1d : js 0x20000482d26 ; xor eax, eax ; ret
0x0000020000485808 : js 0x20000485797 ; ret
0x0000020000487e52 : js 0x20000487eb6 ; pop rbx ; ret
0x000002000048e3f4 : js 0x2000048e3db ; ret 0xbaff
0x00000200004962f8 : js 0x200004962e4 ; ret 0xcc78
0x00000200004962f7 : js 0x200004962e5 ; ret 0xcc78
0x000002000049ad5e : js 0x2000049ad46 ; dec dword ptr [rax + 0xf] ; ret
0x000002000049ca89 : js 0x2000049cada ; add esp, 0x50 ; pop r14 ; ret
0x000002000049ee67 : js 0x2000049edf4 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x000002000049edec : js 0x2000049ee3c ; add esp, 0x50 ; pop rbx ; ret
0x000002000049f23c : js 0x2000049f28c ; add esp, 0x50 ; pop rbx ; ret
0x000002000049ffed : js 0x200004a003e ; add esp, 0x50 ; pop r14 ; ret
0x00000200004a05e3 : js 0x200004a0570 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x00000200004a38d8 : js 0x200004a3928 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004a6b0f : js 0x200004a6a9d ; ret
0x00000200004affa0 : js 0x200004aff2f ; ret
0x00000200004b42b4 : js 0x200004b42c5 ; sbb al, byte ptr [rax] ; call rax
0x00000200004b68bf : js 0x200004b684c ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x00000200004be736 : js 0x200004be787 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004c144c : js 0x200004c149c ; add esp, 0x50 ; pop rbx ; ret
0x00000200004c4c7c : js 0x200004c4c87 ; setb al ; movzx eax, al ; ret
0x00000200004c7012 : js 0x200004c7063 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004c7402 : js 0x200004c7391 ; ret
0x00000200004dc62e : js 0x200004dc681 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004dc6d0 : js 0x200004dc720 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004df982 : js 0x200004df911 ; ret
0x00000200004e5136 : js 0x200004e5186 ; add esp, 0x60 ; pop rbp ; ret
0x00000200004efd7c : js 0x200004efde2 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004f0ff1 : js 0x200004f1041 ; add esp, 0x50 ; pop rbp ; ret
0x00000200005a7fb6 : js 0x200004f5826 ; call 0x200001c9cb5
0x00000200004f6d80 : js 0x200004f6dd1 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004f84a9 : js 0x200004f8438 ; ret
0x0000020000510109 : js 0x2000051009f ; salc ; mov rcx, rdi ; call 0x20000139721
0x00000200005109c2 : js 0x20000510a42 ; test byte ptr [rax - 0x75], 0x41 ; cmp byte ptr [rax - 1], cl ; ret
0x000002000051185c : js 0x200005118a5 ; add al, byte ptr [rax] ; add al, ch ; cli ; ret
0x0000020000516b8c : js 0x20000516bb3 ; call 0x2000013c339
0x0000020000516bf7 : js 0x20000516c1e ; call 0x2000013c339
0x0000020000517a3e : js 0x200005179cd ; ret 0xd148
0x000002000051d076 : js 0x2000051d005 ; ret
0x000002000051f0b9 : js 0x2000051f10c ; mov dword ptr [rsp + 0x20], ebx ; call 0x2000014ddc9
0x000002000051ffa4 : js 0x2000051fff5 ; xor ecx, esp ; call 0x20000148e17
0x0000020000538a77 : js 0x20000538a65 ; ret
0x000002000053c21c : js 0x2000053c20d ; scasb al, byte ptr [rdi] ; int 0xb2
0x0000020000544f27 : js 0x20000544ee5 ; call qword ptr [rax - 0x18593d17]
0x0000020000544f26 : js 0x20000544ee6 ; call qword ptr [rax - 0x18593d17]
0x0000020000567ac7 : js 0x20000567aca ; ret 0xc148
0x0000020000567ac6 : js 0x20000567acb ; ret 0xc148
0x0000020000567ac5 : js 0x20000567acc ; ret 0xc148
0x0000020000567ac4 : js 0x20000567acd ; ret 0xc148
0x0000020000484b13 : js 0x200005825b5 ; mov al, r8b ; ret
0x00000200005ce307 : js 0x200005ce357 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005d497f : js 0x200005d49cf ; add esp, 0x50 ; pop rbp ; ret
0x00000200005d5cb7 : js 0x200005d5d08 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005d688c : js 0x200005d681b ; ret
0x00000200005dc559 : js 0x200005dc5aa ; add esp, 0x50 ; pop r14 ; ret
0x00000200005dc73b : js 0x200005dc78c ; add esp, 0x50 ; pop r14 ; ret
0x00000200005e78f2 : js 0x200005e7880 ; ret
0x00000200005f08fe : js 0x200005f0951 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005f1151 : js 0x200005f10e0 ; ret
0x00000200005fe3d1 : js 0x200005fe364 ; xlatb ; call 0x20000225196
0x00000200005ffc71 : js 0x200005ffcc1 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000601fdf : js 0x2000060201c ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x000002000060419b : js 0x2000060412a ; ret
0x000002000060419a : js 0x2000060412b ; ret
0x0000020000604304 : js 0x200006042fe ; ret
0x0000020000608882 : js 0x20000608811 ; ret
0x0000020000608d03 : js 0x20000608d53 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000609860 : js 0x200006098b0 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000619974 : js 0x200006199c6 ; leave ; push rsi ; ret
0x000002000061fe28 : js 0x2000061fdb7 ; ret
0x00000200006248b2 : js 0x20000624841 ; ret
0x000002000063776e : js 0x200006377be ; add esp, 0x50 ; pop rdi ; ret
0x000002000063db2e : js 0x2000063db89 ; call 0x200006490e7
0x000002000064d840 : js 0x2000064d891 ; add esp, 0x50 ; pop r14 ; ret
0x000002000064dafc : js 0x2000064da8b ; ret
0x000002000064dc2f : js 0x2000064dbbe ; ret
0x000002000066d8c0 : js 0x2000066d855 ; ror byte ptr [rbx + 0x6736e8e8], 1 ; ret 0x48ff
0x0000020000679843 : js 0x2000067984a ; add dh, dh ; ret
0x00000200006d713d : js 0x200006d714d ; mov rcx, r15 ; call r9
0x00000200006d861b : js 0x200006d862b ; mov rcx, r15 ; call r9
0x00000200006d99f9 : js 0x200006d9a09 ; mov rcx, r15 ; call r9
0x00000200006daf2d : js 0x200006daf3d ; mov rcx, r15 ; call r9
0x00000200006dc222 : js 0x200006dc232 ; mov rcx, r15 ; call r9
0x00000200006dc8d4 : js 0x200006dc8e4 ; mov rcx, r15 ; call r9
0x00000200006ddd7e : js 0x200006ddd8e ; mov rcx, r15 ; call r9
0x00000200006df014 : js 0x200006df024 ; mov rcx, r15 ; call r9
0x00000200006ea031 : js 0x200006ea081 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000707b70 : js 0x20000707bed ; fisttp dword ptr [rcx + 3] ; fisttp word ptr [rcx + rdi + 0x35] ; ret
0x000002000070c253 : js 0x2000070c217 ; push qword ptr [rbx] ; shr al, cl ; ret
0x000002000070cd27 : js 0x2000070cd77 ; test ecx, ecx ; jne 0x2000070cd34 ; ret
0x000002000070cd26 : js 0x2000070cd78 ; test ecx, ecx ; jne 0x2000070cd35 ; ret
0x000002000070f32e : js 0x2000070f37e ; add esp, 0x50 ; pop rbp ; ret
0x000002000071260b : js 0x2000071265b ; add esp, 0x60 ; pop rdi ; ret
0x0000020000714ac4 : js 0x20000714a92 ; ret
0x00000200007182ae : js 0x200007182c7 ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007183f4 : js 0x20000718384 ; ret
0x000002000072ec4d : js 0x2000072ec9d ; add esp, 0x60 ; pop rdi ; ret
0x000002000072f6e0 : js 0x2000072f66f ; ret
0x00000200001e1b25 : lahf ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014ee35 : lahf ; add byte ptr [rax], al ; add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x00000200005dbd32 : lahf ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200004f6232 : lahf ; add byte ptr [rdi], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x000002000007aadb : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0xb948
0x000002000063c557 : lahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x2000063c56c ; ret 0xc13b
0x000002000045bed5 : lahf ; and ecx, edi ; inc dword ptr [rbp - 0x6c77f040] ; ret
0x000002000050195d : lahf ; call 0x2000014dc63
0x00000200005a596e : lahf ; call r15
0x000002000000f100 : lahf ; cmp dl, byte ptr [rbx + rax*4 - 0x20] ; mov cl, 0x18 ; pop rax ; ret 0x4609
0x000002000056a42d : lahf ; in al, dx ; push rsi ; ret 0xf20
0x0000020000573200 : lahf ; in eax, dx ; push rsi ; ret
0x00000200001ebce7 : lahf ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000027d31c : lahf ; js 0x2000027d374 ; add byte ptr [rax], al ; ret
0x000002000062787a : lahf ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006315b5 : lahf ; mov eax, dword ptr [rdi] ; add dh, dh ; ret
0x000002000051526d : lahf ; mov r8, r15 ; mov rdx, rsi ; call rax
0x000002000000e22c : lahf ; mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x000002000047f005 : lahf ; or al, byte ptr [rax] ; jmp 0x2000047efd1
0x000002000017db66 : lahf ; out dx, eax ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200006c7363 : lahf ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006ceb30 : lahf ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006ef031 : lahf ; pop rcx ; loopne 0x200006ef03d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000dd47 : lahf ; push rcx ; sub esi, eax ; ret
0x0000020000672b10 : lahf ; push rsp ; ret 0x2ff
0x000002000000dadf : lahf ; ret
0x000002000072aa8d : lahf ; ret 0xa8ff
0x0000020000559dde : lahf ; ret 0xefe9
0x000002000019ce39 : lahf ; ret 3
0x000002000000f736 : lahf ; sbb ah, al ; ret
0x000002000068a035 : lahf ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000067dd5d : lahf ; xor al, byte ptr [rcx] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200004b8921 : lahf ; xor bh, bh ; ret
0x00000200001b4967 : lahf ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000000a395 : lcall ptr [rbx + rbx*2 + 0x12] ; add esi, edx ; call qword ptr [rcx]
0x000002000048eeed : lcall ptr [rbx - 0x3fcc0043] ; ret
0x00000200003ffa8d : lcall ptr [rcx] ; ret
0x000002000044e8ad : lcall ptr [rcx] ; ret 0x4cff
0x000002000017fae3 : lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000a0574 : lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000054b85 : lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200006178eb : lcall ptr [rdi] ; add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200006f9292 : lcall ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000736e6 : lds r8d, ptr [r11] ; ret
0x0000020000666eea : lea eax, dword ptr [r11 + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000482c87 : lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000209fbb : lea eax, dword ptr [r8 + 1] ; ret
0x00000200004c5d7e : lea eax, dword ptr [r8 + r8] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200003dab0a : lea eax, dword ptr [r8 + r9] ; ret
0x0000020000033652 : lea eax, dword ptr [r8 - 8] ; mov dword ptr [rdx + rax*4], r9d ; ret
0x000002000003360d : lea eax, dword ptr [r8 - 8] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200001c4da9 : lea eax, dword ptr [r9 + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200003daec1 : lea eax, dword ptr [r9 + r10] ; ret
0x00000200005eaf07 : lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x200005eaf2b
0x000002000051de98 : lea eax, dword ptr [rax + 0x18] ; dec rcx ; jne 0x2000051de9d ; ret
0x0000020000482c88 : lea eax, dword ptr [rax + 0x48] ; ret
0x0000020000209fbc : lea eax, dword ptr [rax + 1] ; ret
0x00000200000f8b52 : lea eax, dword ptr [rax + 4] ; dec rcx ; jne 0x200000f8b56 ; ret
0x000002000048b755 : lea eax, dword ptr [rax + 4] ; lea rax, qword ptr [rdx + rax*8] ; jmp 0x2000048b6f2
0x00000200000f8db6 : lea eax, dword ptr [rax + 8] ; dec r11 ; jne 0x200000f8d9d ; ret
0x00000200004c5d7f : lea eax, dword ptr [rax + rax] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000064b51c : lea eax, dword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000064b530
0x00000200000a90be : lea eax, dword ptr [rax + rcx*8] ; ret
0x00000200003dab0b : lea eax, dword ptr [rax + rcx] ; ret
0x00000200003cab42 : lea eax, dword ptr [rax + rdx*4] ; ret
0x000002000008e8b1 : lea eax, dword ptr [rax + rdx*8] ; ret
0x0000020000453d5f : lea eax, dword ptr [rax - 0x30] ; mov rax, r8 ; ret
0x00000200001de756 : lea eax, dword ptr [rax - 0x90] ; mov rax, r8 ; ret
0x0000020000033653 : lea eax, dword ptr [rax - 8] ; mov dword ptr [rdx + rax*4], r9d ; ret
0x000002000003360e : lea eax, dword ptr [rax - 8] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200000358d0 : lea eax, dword ptr [rax*4 + 8] ; ret
0x00000200000a65df : lea eax, dword ptr [rax*8 + 0x30] ; ret
0x00000200006c54d9 : lea eax, dword ptr [rbp + 0x148] ; xor ecx, ecx ; call r9
0x00000200005ed660 : lea eax, dword ptr [rbp + 0x38] ; xor edx, edx ; call 0x200004e995b
0x0000020000401a00 : lea eax, dword ptr [rbp - 0x30] ; mov edx, r14d ; call 0x2000014dc68
0x00000200005589cb : lea eax, dword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x0000020000404cb9 : lea eax, dword ptr [rbp - 0x40] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000127291 : lea eax, dword ptr [rbp - 0x7d] ; mov byte ptr [rsp + 0x20], al ; call 0x200000a34cd
0x0000020000155fb8 : lea eax, dword ptr [rbp - 0x80] ; call 0x20000042295
0x0000020000377229 : lea eax, dword ptr [rbx + 0x1000] ; call rax
0x0000020000123805 : lea eax, dword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000666eeb : lea eax, dword ptr [rbx + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000040533f : lea eax, dword ptr [rbx - 1] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f748c : lea eax, dword ptr [rbx - 2] ; mov eax, dword ptr [rdx + rax*8] ; jmp 0x200000f741f
0x00000200000dea8f : lea eax, dword ptr [rcx + 0x18] ; mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x00000200001c4daa : lea eax, dword ptr [rcx + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000010d5dd : lea eax, dword ptr [rcx + 0x38] ; ret
0x0000020000102661 : lea eax, dword ptr [rcx + 0x438] ; ret
0x00000200001bc1c9 : lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x0000020000434b50 : lea eax, dword ptr [rcx + 0x6c8] ; ret
0x0000020000434b5c : lea eax, dword ptr [rcx + 0x6d0] ; ret
0x000002000010a401 : lea eax, dword ptr [rcx + 0xb] ; ret
0x00000200004538a8 : lea eax, dword ptr [rcx + 1] ; call 0x2000007dff6
0x0000020000686802 : lea eax, dword ptr [rcx + 1] ; cmovne ecx, eax ; mov eax, ecx ; ret
0x00000200000c4d4b : lea eax, dword ptr [rcx + 1] ; mov qword ptr [rdx + 8], rax ; jmp 0x200000c4d1f
0x00000200004bbc11 : lea eax, dword ptr [rcx + 1] ; mov rcx, r15 ; call rsi
0x00000200000336f5 : lea eax, dword ptr [rcx + 1] ; ret
0x00000200004bbf26 : lea eax, dword ptr [rcx + 2] ; mov rcx, r15 ; call rsi
0x0000020000402b34 : lea eax, dword ptr [rcx + 2] ; ret
0x000002000068cf99 : lea eax, dword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x000002000010a3e2 : lea eax, dword ptr [rcx + 4] ; ret
0x0000020000402b44 : lea eax, dword ptr [rcx + 5] ; ret
0x000002000010a3d1 : lea eax, dword ptr [rcx + 6] ; ret
0x000002000012ebb8 : lea eax, dword ptr [rcx + 7] ; and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x0000020000141989 : lea eax, dword ptr [rcx + rax - 1] ; ret
0x000002000014198f : lea eax, dword ptr [rcx + rax - 2] ; ret
0x0000020000141995 : lea eax, dword ptr [rcx + rax - 3] ; ret
0x000002000014199b : lea eax, dword ptr [rcx + rax - 4] ; ret
0x00000200001419a1 : lea eax, dword ptr [rcx + rax - 5] ; ret
0x00000200001419a7 : lea eax, dword ptr [rcx + rax - 6] ; ret
0x00000200001419ad : lea eax, dword ptr [rcx + rax - 7] ; ret
0x00000200001419b3 : lea eax, dword ptr [rcx + rax - 8] ; ret
0x0000020000033a6b : lea eax, dword ptr [rcx + rax*4] ; ret
0x0000020000632f70 : lea eax, dword ptr [rcx + rcx*4] ; add rsp, 0x28 ; ret
0x00000200005049a1 : lea eax, dword ptr [rcx + rdx] ; cmp eax, edx ; ja 0x200005049b4 ; mov eax, ecx ; ret
0x00000200003daec2 : lea eax, dword ptr [rcx + rdx] ; ret
0x00000200001f2ba3 : lea eax, dword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x000002000002ba19 : lea eax, dword ptr [rcx - 0x10] ; ret
0x00000200005eaf08 : lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x200005eaf2a
0x00000200004a6b6e : lea eax, dword ptr [rcx - 4] ; mov rcx, rdi ; call 0x200003b2e68
0x0000020000479918 : lea eax, dword ptr [rcx*4 + 8] ; ret
0x00000200002295b7 : lea eax, dword ptr [rcx*8 + 0x60] ; ret
0x00000200002519c1 : lea eax, dword ptr [rcx] ; ret
0x0000020000209638 : lea eax, dword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013476c : lea eax, dword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x000002000059a064 : lea eax, dword ptr [rdx + 0x10] ; call 0x2000015dbc7
0x000002000068b065 : lea eax, dword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x0000020000534504 : lea eax, dword ptr [rdx + 0x20] ; call 0x2000015dbc6
0x00000200005c15c9 : lea eax, dword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x00000200006f2338 : lea eax, dword ptr [rdx + 1] ; call 0x2000007e615
0x00000200005cee27 : lea eax, dword ptr [rdx + 1] ; ret
0x00000200004f111d : lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200005964bb : lea eax, dword ptr [rdx + 5] ; call 0x200001c09e6
0x0000020000564717 : lea eax, dword ptr [rdx + 6] ; call 0x200001c09e5
0x00000200003ee3bb : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200003ee38b
0x000002000048b759 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000048b6ee
0x000002000015840b : lea eax, dword ptr [rdx*4] ; pop rdi ; ret
0x000002000015e1ed : lea eax, dword ptr [rip + 0x157f6d] ; ret
0x0000020000505f95 : lea eax, dword ptr [rip + 0x1a565d] ; ret
0x00000200004a03a9 : lea eax, dword ptr [rip + 0x1b4cf1] ; ret
0x00000200004d7fe5 : lea eax, dword ptr [rip + 0x50835] ; ret
0x00000200004d7ff5 : lea eax, dword ptr [rip + 0x50855] ; ret
0x00000200004d7fdd : lea eax, dword ptr [rip + 0x5089d] ; ret
0x00000200004d7fed : lea eax, dword ptr [rip + 0x508bd] ; ret
0x00000200000b629c : lea eax, dword ptr [rip + 0xa8cbe] ; ret
0x00000200000b5659 : lea eax, dword ptr [rip + 0xa9831] ; ret
0x000002000047f002 : lea eax, dword ptr [rip + 0xa9fe8] ; jmp 0x2000047efd4
0x00000200000b62b2 : lea eax, dword ptr [rip + 0xaac68] ; ret
0x00000200000b6294 : lea eax, dword ptr [rip + 0xaaec6] ; ret
0x00000200000b62ba : lea eax, dword ptr [rip + 0xaaee0] ; ret
0x00000200000b628c : lea eax, dword ptr [rip + 0xaaeee] ; ret
0x00000200000b62c2 : lea eax, dword ptr [rip + 0xaaef8] ; ret
0x00000200000b62ce : lea eax, dword ptr [rip + 0xaaf0c] ; ret
0x00000200000b62d6 : lea eax, dword ptr [rip + 0xaafa4] ; ret
0x00000200000b56dd : lea eax, dword ptr [rip + 0xab83d] ; ret
0x00000200000b5689 : lea eax, dword ptr [rip + 0xab981] ; ret
0x00000200000b56bb : lea eax, dword ptr [rip + 0xab9af] ; ret
0x00000200000b5681 : lea eax, dword ptr [rip + 0xab9c9] ; ret
0x00000200000b56e9 : lea eax, dword ptr [rip + 0xaba01] ; ret
0x00000200000b5618 : lea eax, dword ptr [rip + 0xaba12] ; ret
0x00000200000b5699 : lea eax, dword ptr [rip + 0xaba21] ; ret
0x00000200000b5679 : lea eax, dword ptr [rip + 0xaba51] ; ret
0x00000200000b5644 : lea eax, dword ptr [rip + 0xaba56] ; ret
0x00000200000b5602 : lea eax, dword ptr [rip + 0xaba88] ; ret
0x00000200000b5691 : lea eax, dword ptr [rip + 0xabaa9] ; ret
0x00000200000b5669 : lea eax, dword ptr [rip + 0xabab1] ; ret
0x00000200000b56d5 : lea eax, dword ptr [rip + 0xabae5] ; ret
0x00000200000b56b3 : lea eax, dword ptr [rip + 0xabae7] ; ret
0x00000200000b5661 : lea eax, dword ptr [rip + 0xabaf9] ; ret
0x00000200000b5703 : lea eax, dword ptr [rip + 0xabb07] ; ret
0x00000200000b56c8 : lea eax, dword ptr [rip + 0xabb12] ; ret
0x00000200000b5638 : lea eax, dword ptr [rip + 0xabb42] ; ret
0x00000200000b56f6 : lea eax, dword ptr [rip + 0xabb44] ; ret
0x00000200000b56a6 : lea eax, dword ptr [rip + 0xabbb4] ; ret
0x000002000040cbb7 : lea eax, dword ptr [rip - 0x13affd] ; mov rax, r8 ; ret
0x0000020000414076 : lea eax, dword ptr [rip - 0x14069c] ; ret
0x000002000041aa72 : lea eax, dword ptr [rip - 0x147098] ; ret
0x00000200001bb72e : lea eax, dword ptr [rip - 0x19f6f4] ; mov qword ptr [rcx], rax ; ret
0x000002000018ee56 : lea eax, dword ptr [rip - 0x2fefc] ; ret
0x00000200006f59bb : lea eax, dword ptr [rip - 0x598dc1] ; ret
0x00000200006f59d3 : lea eax, dword ptr [rip - 0x59d3f9] ; ret
0x00000200006f59db : lea eax, dword ptr [rip - 0x5b58b1] ; ret
0x00000200006f59a7 : lea eax, dword ptr [rip - 0x626951] ; ret
0x00000200006f59c3 : lea eax, dword ptr [rip - 0x626bcd] ; ret
0x00000200006f59cb : lea eax, dword ptr [rip - 0x627671] ; ret
0x00000200006f59af : lea eax, dword ptr [rip - 0x629279] ; ret
0x0000020000379a9d : lea eax, dword ptr [rip - 0x9073] ; ret
0x0000020000379aa5 : lea eax, dword ptr [rip - 0x908b] ; ret
0x0000020000379aad : lea eax, dword ptr [rip - 0x90a3] ; ret
0x0000020000379ab5 : lea eax, dword ptr [rip - 0x90bb] ; ret
0x0000020000379abd : lea eax, dword ptr [rip - 0x90d3] ; ret
0x0000020000379ac5 : lea eax, dword ptr [rip - 0x90eb] ; ret
0x0000020000379acd : lea eax, dword ptr [rip - 0x9103] ; ret
0x0000020000379ad5 : lea eax, dword ptr [rip - 0x911b] ; ret
0x0000020000207f20 : lea eax, dword ptr [rip - 0xa7ea6] ; call 0x200001441cc
0x000002000060598e : lea eax, dword ptr [rip - 0xdf824] ; ret
0x0000020000605996 : lea eax, dword ptr [rip - 0xdf83c] ; ret
0x000002000060599e : lea eax, dword ptr [rip - 0xdf854] ; ret
0x00000200006059a6 : lea eax, dword ptr [rip - 0xdf86c] ; ret
0x00000200006059ae : lea eax, dword ptr [rip - 0xdf884] ; ret
0x00000200006059b6 : lea eax, dword ptr [rip - 0xdf89c] ; ret
0x00000200006059be : lea eax, dword ptr [rip - 0xdf8b4] ; ret
0x00000200006059c6 : lea eax, dword ptr [rip - 0xdf8cc] ; ret
0x000002000053573b : lea eax, dword ptr [rsi + 0x6a0] ; jmp 0x20000535769
0x000002000038e91e : lea eax, dword ptr [rsi + rsi] ; mov dword ptr [rcx], eax ; test rdi, rdi ; je 0x2000038e8f3 ; jmp 0x2000038e8cf
0x000002000066f6a2 : lea eax, dword ptr [rsp + 0x28] ; mov edx, r15d ; call rdi
0x000002000008086f : lea eax, dword ptr [rsp + 0x28] ; movzx edx, bpl ; call qword ptr [rdi]
0x00000200004c678f : lea eax, dword ptr [rsp + 0x30] ; xor ecx, ecx ; call 0x200000e7095
0x0000020000139647 : lea eax, dword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x00000200006f567c : lea eax, dword ptr [rsp + 0x40] ; movzx ecx, bx ; call rax
0x0000020000227c00 : lea eax, dword ptr [rsp + 0x50] ; mov rcx, r13 ; call 0x20000213e2d
0x00000200003ffe82 : lea eax, dword ptr [rsp + 0x58] ; call rax
0x00000200000f50a3 : lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x0000020000427395 : lea eax, dword ptr [rsp + 0x68] ; xor edx, edx ; call r11
0x00000200001c5927 : lea eax, dword ptr [rsp + 0x88] ; call r9
0x00000200001516d1 : lea eax, dword ptr [rsp + 8] ; ret
0x00000200000ecaeb : lea eax, dword ptr [rsp] ; jmp 0x200000ecab7
0x00000200006c6ff0 : lea ebp, dword ptr [rax + 8] ; mov rcx, r13 ; call r10
0x00000200006d931f : lea ebp, dword ptr [rax + 8] ; mov rcx, r13 ; call r9
0x000002000055146d : lea ebp, dword ptr [rax - 0xfffffe] ; ret
0x00000200003df390 : lea ebp, dword ptr [rax - 0xffffff] ; ret
0x00000200003e139f : lea ebp, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000061a7eb : lea ebp, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8944
0x00000200003e0075 : lea ebp, dword ptr [rax] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200000837d3 : lea ebp, dword ptr [rdx] ; add dh, dh ; ret
0x000002000000f494 : lea ebp, dword ptr [rsi + 0x295fb294] ; faddp st(5) ; ret 0xd4f
0x00000200004e73ca : lea ebp, dword ptr [rsi + 7] ; mov rcx, rbp ; call 0x200000a36c0
0x000002000066743a : lea ebx, dword ptr [rax + 0x14] ; mov edx, ebx ; call 0x20000294008
0x00000200000ce5c9 : lea ebx, dword ptr [rax - 0x1000000] ; ret
0x00000200001965d5 : lea ebx, dword ptr [rax - 0x75000000] ; ret
0x00000200005512cf : lea ebx, dword ptr [rax - 0xfffffe] ; ret
0x00000200003df1df : lea ebx, dword ptr [rax - 0xffffff] ; ret
0x00000200003e12c8 : lea ebx, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003dffab : lea ebx, dword ptr [rax] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000015dc7a : lea ebx, dword ptr [rbx + rcx*4] ; jmp r11
0x0000020000211bf0 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000211c00
0x0000020000211d08 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000211d18
0x00000200002129b7 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200002129c7
0x0000020000212ad7 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000212ae7
0x0000020000212c61 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000212c71
0x0000020000212e29 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000212e39
0x0000020000214285 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000214295
0x0000020000214439 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000214449
0x000002000015c5db : lea ebx, dword ptr [rip + 0x15d] ; jmp r11
0x000002000051fc4f : lea ecx, dword ptr [r8 + 0x77] ; call 0x2000014e0e7
0x0000020000664e4f : lea ecx, dword ptr [r9 + 0x35] ; call 0x20000151086
0x00000200003a27ee : lea ecx, dword ptr [rax + 0x1c] ; call r10
0x000002000020ee02 : lea ecx, dword ptr [rax + 0x55f] ; mov eax, ecx ; ret
0x000002000051fc50 : lea ecx, dword ptr [rax + 0x77] ; call 0x2000014e0e6
0x00000200000fb665 : lea ecx, dword ptr [rax + 1] ; lock cmpxchg dword ptr [rdx], ecx ; jne 0x200000fb678 ; ret
0x00000200006c78c5 : lea ecx, dword ptr [rax + 8] ; call r10
0x00000200006e2a01 : lea ecx, dword ptr [rax + 8] ; call r9
0x00000200001a5609 : lea ecx, dword ptr [rax + rdi] ; call 0x2000012d521
0x00000200005ff581 : lea ecx, dword ptr [rax + rsi] ; call 0x2000012d521
0x00000200003bb343 : lea ecx, dword ptr [rax - 0x18000000] ; ret
0x00000200004a1922 : lea ecx, dword ptr [rax - 0x180] ; call 0x2000015dbc8
0x00000200005509b6 : lea ecx, dword ptr [rax - 0xfffffe] ; ret
0x00000200006d6c0b : lea ecx, dword ptr [rax - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200003e1215 : lea ecx, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000047991a : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x00000200003deaec : lea ecx, dword ptr [rax] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000054ede8 : lea ecx, dword ptr [rbp + 0x1210] ; call 0x2000047b084
0x00000200005d9175 : lea ecx, dword ptr [rbp + 0x170] ; call 0x20000208ac5
0x00000200001a2abf : lea ecx, dword ptr [rbp + 0x18] ; call rbx
0x000002000050e44e : lea ecx, dword ptr [rbp + 0x20] ; call 0x200001396ca
0x0000020000187028 : lea ecx, dword ptr [rbp + 0x27] ; call 0x20000033285
0x00000200004d00be : lea ecx, dword ptr [rbp + 0x30] ; call 0x200000f5bf2
0x0000020000175871 : lea ecx, dword ptr [rbp + 0x30] ; jmp 0x20000061b60
0x000002000043a0ed : lea ecx, dword ptr [rbp - 0x10] ; call 0x20000063dda
0x000002000070f2c0 : lea ecx, dword ptr [rbp - 0x20] ; call qword ptr [rdi]
0x0000020000718889 : lea ecx, dword ptr [rbp - 0x20] ; call qword ptr [rip - 0x3d26a2]
0x00000200005064c1 : lea ecx, dword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x000002000049456d : lea ecx, dword ptr [rbp - 0x28] ; mov edx, edi ; call 0x200000b48f0
0x000002000050dc30 : lea ecx, dword ptr [rbp - 0x30] ; call 0x200001396ca
0x0000020000703bfc : lea ecx, dword ptr [rbp - 0x39] ; call 0x2000006fe25
0x0000020000653bff : lea ecx, dword ptr [rbp - 0x41] ; mov word ptr [rbp - 0x55], ax ; call 0x2000006fe29
0x000002000046b1c9 : lea ecx, dword ptr [rbp - 0x59] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x00000200001b4965 : lea ecx, dword ptr [rbp - 0x61] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200003eca93 : lea ecx, dword ptr [rbp - 0x69] ; call qword ptr [rax]
0x000002000040e34a : lea ecx, dword ptr [rbp - 0x71] ; call 0x200003f3a61
0x0000020000505eb8 : lea ecx, dword ptr [rbp - 0x80] ; call 0x200004c21bd
0x000002000047e8ed : lea ecx, dword ptr [rbp - 1] ; call 0x200000a52e6
0x00000200004fb4f2 : lea ecx, dword ptr [rbp - 9] ; mov rdx, rsi ; call r12
0x000002000043b190 : lea ecx, dword ptr [rbx + 0x148] ; call 0x20000063ddd
0x000002000043b101 : lea ecx, dword ptr [rbx + 0x148] ; call 0x2000006a619
0x00000200003ecfb7 : lea ecx, dword ptr [rbx + rdx*2] ; mov rax, r9 ; ret
0x0000020000439530 : lea ecx, dword ptr [rbx - 0x10] ; call 0x20000063dda
0x00000200006e008e : lea ecx, dword ptr [rbx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x0000020000664e50 : lea ecx, dword ptr [rcx + 0x35] ; call 0x20000151085
0x000002000042e82c : lea ecx, dword ptr [rcx + 2] ; dec rdx ; jne 0x2000042e829 ; ret
0x00000200001ff06c : lea ecx, dword ptr [rcx + 8] ; dec r8 ; jne 0x200001ff069 ; ret
0x00000200001d69f7 : lea ecx, dword ptr [rcx + 8] ; dec r8d ; jne 0x200001d69d4 ; ret
0x000002000036dd78 : lea ecx, dword ptr [rcx + 8] ; dec rdx ; jne 0x2000036dd71 ; ret
0x00000200003fd8b6 : lea ecx, dword ptr [rcx + rcx*2] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000157a63 : lea ecx, dword ptr [rcx + rdx*4] ; jmp r9
0x00000200006c7275 : lea ecx, dword ptr [rcx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x0000020000449309 : lea ecx, dword ptr [rdi + 0x3e0] ; call 0x2000006a619
0x0000020000514dbf : lea ecx, dword ptr [rdi + 0x59] ; call rax
0x00000200004ac899 : lea ecx, dword ptr [rdi - 0x20] ; call 0x200000d89ba
0x00000200001cc659 : lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000554e73 : lea ecx, dword ptr [rdx + 0x27] ; call 0x200001510a5
0x0000020000439e08 : lea ecx, dword ptr [rdx + 1] ; mov r8d, edx ; call 0x20000065ec9
0x000002000067438d : lea ecx, dword ptr [rdx - 0x18] ; xor r8d, r8d ; call 0x20000670674
0x00000200006673fa : lea ecx, dword ptr [rdx - 0x27] ; mov r8d, ebp ; call 0x20000294009
0x00000200006e4fba : lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006cbfb7 : lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x00000200001ccf74 : lea ecx, dword ptr [rip + 0x1082f6] ; call 0x200001d9194
0x000002000019a04c : lea ecx, dword ptr [rip + 0x10b7fe] ; call 0x200000962c8
0x000002000011baf5 : lea ecx, dword ptr [rip + 0x11f3d] ; call rax
0x00000200001d9335 : lea ecx, dword ptr [rip + 0x17b755] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000098360 : lea ecx, dword ptr [rip + 0x211052] ; call 0x20000064588
0x0000020000449baa : lea ecx, dword ptr [rip + 0x260c38] ; call 0x2000006a619
0x00000200004499b9 : lea ecx, dword ptr [rip + 0x260e29] ; call 0x2000006a619
0x0000020000442c25 : lea ecx, dword ptr [rip + 0x26752d] ; call 0x2000006a619
0x0000020000442ad6 : lea ecx, dword ptr [rip + 0x26767c] ; call 0x2000006a619
0x0000020000442ab8 : lea ecx, dword ptr [rip + 0x2678b2] ; call 0x2000006a619
0x000002000015492c : lea ecx, dword ptr [rip + 0x7f89] ; jmp rcx
0x0000020000402c02 : lea ecx, dword ptr [rip - 0x130668] ; call 0x20000031499
0x0000020000402cd4 : lea ecx, dword ptr [rip - 0x1306ba] ; call 0x20000031499
0x0000020000405989 : lea ecx, dword ptr [rip - 0x1329af] ; call 0x20000031499
0x00000200004059c9 : lea ecx, dword ptr [rip - 0x1329ef] ; call 0x20000031499
0x0000020000405a82 : lea ecx, dword ptr [rip - 0x132aa8] ; call 0x20000033469
0x0000020000405a96 : lea ecx, dword ptr [rip - 0x132abc] ; call 0x20000031499
0x000002000040702a : lea ecx, dword ptr [rip - 0x134a10] ; call 0x20000031499
0x000002000040706a : lea ecx, dword ptr [rip - 0x134ad0] ; call 0x20000031499
0x0000020000408d86 : lea ecx, dword ptr [rip - 0x1367ec] ; call 0x20000031499
0x0000020000409018 : lea ecx, dword ptr [rip - 0x1369fe] ; call 0x20000031499
0x000002000040d83f : lea ecx, dword ptr [rip - 0x13a645] ; call 0x20000031499
0x0000020000439b87 : lea ecx, dword ptr [rip - 0x15eccd] ; call 0x20000064dd9
0x000002000043bc72 : lea ecx, dword ptr [rip - 0x172b38] ; call 0x2000006a619
0x000002000044d00d : lea ecx, dword ptr [rip - 0x1a6b63] ; call 0x200000702b9
0x000002000044d160 : lea ecx, dword ptr [rip - 0x1a6cb6] ; call 0x20000070849
0x000002000044e8a6 : lea ecx, dword ptr [rip - 0x1a83fc] ; call 0x200000702b9
0x00000200004abd95 : lea ecx, dword ptr [rip - 0x1d5abb] ; call 0x200000d6f31
0x00000200004e02d6 : lea ecx, dword ptr [rip - 0x238a3c] ; call 0x20000103341
0x000002000058baa5 : lea ecx, dword ptr [rip - 0x2b57cb] ; call 0x200000d7db4
0x000002000063d4b2 : lea ecx, dword ptr [rip - 0x396498] ; call 0x200000b9760
0x00000200004914ad : lea ecx, dword ptr [rip - 0x48557b] ; mov al, byte ptr [rdx + rcx] ; ret
0x000002000057caaa : lea ecx, dword ptr [rip - 0x54700] ; and r8d, edx ; jmp 0x2000057cb27
0x0000020000670cad : lea ecx, dword ptr [rip - 0x555c67] ; jmp rax
0x0000020000670fe9 : lea ecx, dword ptr [rip - 0x555fa3] ; jmp rax
0x00000200005b29ab : lea ecx, dword ptr [rip - 0x8aea1] ; setne dl ; jmp 0x200005b29c5
0x00000200005b2999 : lea ecx, dword ptr [rip - 0x8aecf] ; setne dl ; jmp 0x200005b29c5
0x000002000066ed1a : lea ecx, dword ptr [rip - 0xbca0] ; call 0x2000022af7c
0x000002000066ed0e : lea ecx, dword ptr [rip - 0xbca4] ; call 0x2000022af7c
0x000002000066ed5f : lea ecx, dword ptr [rip - 0xbcd5] ; call 0x2000022af7c
0x000002000066ed02 : lea ecx, dword ptr [rip - 0xbce8] ; call 0x2000022af7c
0x0000020000446b14 : lea ecx, dword ptr [rsi + 0x148] ; call 0x2000006a619
0x00000200004becfc : lea ecx, dword ptr [rsi + rdi] ; call 0x200000e1ac6
0x000002000050d790 : lea ecx, dword ptr [rsi - 0x10] ; call 0x2000013903a
0x000002000044b1fc : lea ecx, dword ptr [rsi - 0x458] ; call r15
0x000002000037c263 : lea ecx, dword ptr [rsp + 0x100] ; call 0x20000108519
0x00000200004a195c : lea ecx, dword ptr [rsp + 0x194] ; call 0x2000015dbc9
0x000002000051c11a : lea ecx, dword ptr [rsp + 0x20] ; call 0x20000058406
0x0000020000668392 : lea ecx, dword ptr [rsp + 0x20] ; call r8
0x00000200000f509e : lea ecx, dword ptr [rsp + 0x20] ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x0000020000718e9e : lea ecx, dword ptr [rsp + 0x28] ; call rax
0x000002000012badc : lea ecx, dword ptr [rsp + 0x30] ; call rax
0x00000200006fe187 : lea ecx, dword ptr [rsp + 0x30] ; mov rdx, rdi ; call 0x200004ba3fd
0x00000200005c3b1f : lea ecx, dword ptr [rsp + 0x48] ; call 0x2000006fe26
0x00000200004cfbc6 : lea ecx, dword ptr [rsp + 0x48] ; call 0x200000f5bf3
0x0000020000707808 : lea ecx, dword ptr [rsp + 0x58] ; add r13d, ebx ; call 0x200003f3a61
0x0000020000139642 : lea ecx, dword ptr [rsp + 0x58] ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x00000200004028c0 : lea ecx, dword ptr [rsp + 0x68] ; mov qword ptr [rsp + 0x20], r13 ; call rax
0x00000200003e959b : lea ecx, dword ptr [rsp + 0x88] ; call 0x200003e5851
0x00000200006d713c : lea edi, dword ptr [rax + 8] ; mov rcx, r15 ; call r9
0x00000200003e05fb : lea edi, dword ptr [rax - 0xfffffe] ; ret
0x00000200003df469 : lea edi, dword ptr [rax - 0xffffff] ; ret
0x00000200003dd440 : lea edi, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000000c548 : lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x00000200004443c7 : lea edi, dword ptr [rcx + rcx*8] ; mov rcx, rdi ; call 0x200000702b9
0x00000200001a55dd : lea edi, dword ptr [rdi + rax*8] ; mov rcx, r15 ; call 0x200000c18ec
0x000002000036554a : lea edi, dword ptr [rdx + 0x23] ; mov ecx, edi ; call qword ptr [rip - 0xc3ded]
0x00000200006e2a49 : lea edx, dword ptr [r10 + rsi] ; xor ecx, ecx ; call rbx
0x00000200006c7902 : lea edx, dword ptr [r11 + r13] ; xor ecx, ecx ; call r9
0x00000200006d7b11 : lea edx, dword ptr [r14 + r10] ; xor ecx, ecx ; call rbx
0x00000200006e79f1 : lea edx, dword ptr [r14 + rsi] ; xor ecx, ecx ; call rbx
0x00000200006c7de9 : lea edx, dword ptr [r15 + r11] ; xor ecx, ecx ; call r9
0x00000200003a8c92 : lea edx, dword ptr [r8 + 3] ; mov rcx, r13 ; call r10
0x0000020000554e6f : lea edx, dword ptr [r9 + 2] ; lea ecx, dword ptr [rdx + 0x27] ; call 0x200001510a9
0x00000200005a805a : lea edx, dword ptr [r9 - 3] ; call 0x200001ca107
0x000002000020fd5e : lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x000002000012e66b : lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200004b303c : lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000674a0d : lea edx, dword ptr [rax + 1] ; test ecx, ecx ; cmovne eax, edx ; ret
0x00000200003a8c93 : lea edx, dword ptr [rax + 3] ; mov rcx, r13 ; call r10
0x00000200001048f6 : lea edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x200001048f0 ; ret
0x000002000068f99d : lea edx, dword ptr [rax - 1] ; ret
0x00000200001cc8b3 : lea edx, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200007200e3 : lea edx, dword ptr [rax] ; ret
0x0000020000689250 : lea edx, dword ptr [rbp + 1] ; mov rcx, rax ; call 0x20000145498
0x00000200005160fe : lea edx, dword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x00000200004d002e : lea edx, dword ptr [rbp - 0x10] ; mov rcx, r8 ; call 0x200000f5bf5
0x00000200001321db : lea edx, dword ptr [rbp - 0x31] ; mov rcx, rbx ; call 0x2000012e494
0x00000200004ca254 : lea edx, dword ptr [rbp - 0x4b] ; call 0x200000ec2c6
0x00000200004aaffc : lea edx, dword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x0000020000505eb4 : lea edx, dword ptr [rbp - 0x60] ; lea rcx, qword ptr [rbp - 0x80] ; call 0x200004c21c1
0x0000020000031bae : lea edx, dword ptr [rbp - 0x69] ; call 0x2000003d075
0x00000200004faf4d : lea edx, dword ptr [rbp - 0x69] ; mov rcx, r13 ; call 0x20000120f3d
0x000002000045acff : lea edx, dword ptr [rbx + 0x18] ; call rax
0x00000200006e9bce : lea edx, dword ptr [rbx + 0x20] ; mov ecx, 0x200 ; call r9
0x00000200006ccc0b : lea edx, dword ptr [rbx + 0x600] ; xor ecx, ecx ; call r9
0x00000200006ca30d : lea edx, dword ptr [rbx + r11] ; xor ecx, ecx ; call r9
0x00000200006c702d : lea edx, dword ptr [rbx + r13] ; xor ecx, ecx ; call r9
0x00000200006cd681 : lea edx, dword ptr [rbx + r15] ; xor ecx, ecx ; call r9
0x00000200006c702e : lea edx, dword ptr [rbx + rbp] ; xor ecx, ecx ; call r9
0x00000200006ca30e : lea edx, dword ptr [rbx + rbx] ; xor ecx, ecx ; call r9
0x00000200006cd682 : lea edx, dword ptr [rbx + rdi] ; xor ecx, ecx ; call r9
0x000002000043c963 : lea edx, dword ptr [rcx + 0x12] ; xor r8d, r8d ; call 0x200000691b9
0x000002000017f507 : lea edx, dword ptr [rcx + 1] ; jmp 0x2000007cc26
0x0000020000408b12 : lea edx, dword ptr [rcx + 1] ; mov eax, edx ; ret
0x0000020000554e70 : lea edx, dword ptr [rcx + 2] ; lea ecx, dword ptr [rdx + 0x27] ; call 0x200001510a8
0x00000200005a805b : lea edx, dword ptr [rcx - 3] ; call 0x200001ca106
0x00000200000bd0ff : lea edx, dword ptr [rcx - 8] ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200001beb95 : lea edx, dword ptr [rcx] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000036230 : lea edx, dword ptr [rdi + 0x10] ; call r8
0x00000200006d4915 : lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d4b47 : lea edx, dword ptr [rdi + 0x202] ; call rbx
0x00000200006d508c : lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54eb : lea edx, dword ptr [rdi + 0x50] ; call rbx
0x000002000021f90f : lea edx, dword ptr [rdi + 0x58] ; call 0x20000214183
0x00000200006d528e : lea edx, dword ptr [rdi + 0x58] ; call rbx
0x00000200006d4e58 : lea edx, dword ptr [rdi + 0x88] ; call rbx
0x00000200006d6113 : lea edx, dword ptr [rdi + r10] ; xor ecx, ecx ; call rbx
0x00000200006d174c : lea edx, dword ptr [rdi + r11] ; xor ecx, ecx ; call r9
0x00000200006d64ab : lea edx, dword ptr [rdi + r12] ; xor ecx, ecx ; call rbx
0x00000200006e4902 : lea edx, dword ptr [rdi + r13] ; xor ecx, ecx ; call rbx
0x00000200006e025f : lea edx, dword ptr [rdi + r14] ; xor ecx, ecx ; call rbx
0x00000200006dc25e : lea edx, dword ptr [rdi + r15] ; xor ecx, ecx ; call rbx
0x00000200006e4903 : lea edx, dword ptr [rdi + rbp] ; xor ecx, ecx ; call rbx
0x00000200006c7dea : lea edx, dword ptr [rdi + rbx] ; xor ecx, ecx ; call r9
0x00000200006dc25f : lea edx, dword ptr [rdi + rdi] ; xor ecx, ecx ; call rbx
0x00000200006d6114 : lea edx, dword ptr [rdi + rdx] ; xor ecx, ecx ; call rbx
0x00000200006df051 : lea edx, dword ptr [rdi + rsi] ; xor ecx, ecx ; call rbx
0x00000200006d64ac : lea edx, dword ptr [rdi] ; xor ecx, ecx ; call rbx
0x000002000042bb47 : lea edx, dword ptr [rdx + 4] ; dec ecx ; jne 0x2000042bb48 ; ret
0x00000200006e2a4a : lea edx, dword ptr [rdx + rsi] ; xor ecx, ecx ; call rbx
0x0000020000686cc7 : lea edx, dword ptr [rdx] ; ret 0x85ff
0x000002000019d245 : lea edx, dword ptr [rip + 0x10ad35] ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000019d268
0x000002000023004f : lea edx, dword ptr [rip + 0x121d2b] ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x20000230067
0x0000020000157e13 : lea edx, dword ptr [rip + 0x71] ; jmp rdx
0x00000200005137a7 : lea edx, dword ptr [rip + 0xf673] ; jmp 0x20000513779
0x0000020000110d43 : lea edx, dword ptr [rip - 0x10dc39] ; jmp 0x20000110d15
0x00000200004040f7 : lea edx, dword ptr [rip - 0x131fbd] ; mov rax, rdx ; ret
0x00000200001ddf2b : lea edx, dword ptr [rip - 0x1c1249] ; call 0x2000008a168
0x00000200004b13d7 : lea edx, dword ptr [rip - 0x1df81d] ; mov rax, rdx ; ret
0x000002000059280a : lea edx, dword ptr [rip - 0x2efb08] ; cmovne rax, rdx ; jmp 0x20000592834
0x00000200004dde74 : lea edx, dword ptr [rip - 0x4da7a2] ; call 0x2000008a168
0x00000200005adf29 : lea edx, dword ptr [rip - 0x591287] ; call 0x2000008a168
0x00000200005adeec : lea edx, dword ptr [rip - 0x59128a] ; call 0x2000008a168
0x00000200006e7cb3 : lea edx, dword ptr [rsi + 0x110] ; xor ecx, ecx ; call rbx
0x00000200006e8256 : lea edx, dword ptr [rsi + 0x600] ; xor ecx, ecx ; call rbx
0x00000200006d7fae : lea edx, dword ptr [rsi + r10] ; xor ecx, ecx ; call rbx
0x00000200006cbce4 : lea edx, dword ptr [rsi + r11] ; xor ecx, ecx ; call r9
0x00000200006df9ac : lea edx, dword ptr [rsi + r12] ; xor ecx, ecx ; call rbx
0x00000200006d9361 : lea edx, dword ptr [rsi + r13] ; xor ecx, ecx ; call rbx
0x00000200006d9362 : lea edx, dword ptr [rsi + rbp] ; xor ecx, ecx ; call rbx
0x00000200006cbce5 : lea edx, dword ptr [rsi + rbx] ; xor ecx, ecx ; call r9
0x00000200006d7b12 : lea edx, dword ptr [rsi + rdx] ; xor ecx, ecx ; call rbx
0x00000200006e79f2 : lea edx, dword ptr [rsi + rsi] ; xor ecx, ecx ; call rbx
0x00000200006df9ad : lea edx, dword ptr [rsi] ; xor ecx, ecx ; call rbx
0x00000200003a0ea1 : lea edx, dword ptr [rsp + 0x100] ; mov cl, 0x12 ; call rax
0x000002000059155a : lea edx, dword ptr [rsp + 0x110] ; mov cl, 0x13 ; call rax
0x00000200003a3b7a : lea edx, dword ptr [rsp + 0x120] ; mov cl, 0xe ; call rax
0x0000020000390c5b : lea edx, dword ptr [rsp + 0x128] ; mov cl, 0x11 ; call rax
0x0000020000546022 : lea edx, dword ptr [rsp + 0x150] ; mov cl, 0xb ; call rax
0x00000200003991e7 : lea edx, dword ptr [rsp + 0x200] ; mov cl, 0xd ; call rax
0x000002000051e54f : lea edx, dword ptr [rsp + 0x20] ; call 0x2000014e0e7
0x00000200000809cb : lea edx, dword ptr [rsp + 0x20] ; call qword ptr [rdi]
0x0000020000718e99 : lea edx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rsp + 0x28] ; call rax
0x00000200004f329b : lea edx, dword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200004b46af : lea edx, dword ptr [rsp + 0x20] ; mov rcx, rbp ; call rax
0x0000020000399d46 : lea edx, dword ptr [rsp + 0x250] ; mov cl, 0x10 ; call rax
0x00000200001cc375 : lea edx, dword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x000002000012e2fe : lea edx, dword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x00000200001c6768 : lea edx, dword ptr [rsp + 0x3c] ; movzx ecx, ax ; call r9
0x00000200004f7077 : lea edx, dword ptr [rsp + 0x40] ; call 0x20000120f3b
0x000002000050e921 : lea edx, dword ptr [rsp + 0x48] ; call 0x2000013949b
0x00000200004ac162 : lea edx, dword ptr [rsp + 0x50] ; call 0x20000158376
0x00000200005af5c3 : lea edx, dword ptr [rsp + 0x50] ; call r8
0x00000200003b1939 : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rbx ; call r15
0x000002000063415b : lea edx, dword ptr [rsp + 0x58] ; call rax
0x00000200004aaaf1 : lea edx, dword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x00000200003c65bb : lea edx, dword ptr [rsp + 0x60] ; mov rcx, rdi ; call r15
0x00000200001c6795 : lea edx, dword ptr [rsp + 0x90] ; call r8
0x00000200003a137b : lea edx, dword ptr [rsp + 0xe0] ; mov cl, 0x14 ; call rax
0x0000020000567248 : lea edx, dword ptr [rsp + 0xf0] ; mov cl, 0xf ; call rax
0x00000200005d9176 : lea esi, dword ptr [rax + 1] ; add byte ptr [rax], al ; call 0x20000208ac4
0x00000200000275a2 : lea esi, dword ptr [rax + rax + 0x63480000] ; ret 0x8b41
0x0000020000218644 : lea esi, dword ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; ret 0xf3f6
0x000002000025b3b4 : lea esi, dword ptr [rbp + rax*2] ; ret
0x00000200004df101 : lea esi, dword ptr [rdi + rdi*8 + 0x38c48348] ; ret
0x000002000072c09b : lea esi, dword ptr [rsi + 0x5c8b48ff] ; and al, 0x40 ; jmp 0x2000072c071
0x000002000018a6e6 : lea esi, dword ptr [rsi + 0xff8] ; jmp 0x200000a69ca
0x00000200003e0eb5 : lea esp, dword ptr [rax + 0x11] ; add byte ptr [rax], al ; mov bl, al ; call 0x200003ad195
0x000002000008f1b6 : lea esp, dword ptr [rax + 0x41000000] ; mov edx, edi ; call rax
0x00000200003be202 : lea esp, dword ptr [rax + 7] ; jmp 0x200003bd5f7
0x00000200006c7da7 : lea esp, dword ptr [rax + 8] ; mov rcx, r12 ; call r10
0x00000200006d5f70 : lea esp, dword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x00000200001d8847 : lea esp, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000009d7a7 : lea esp, dword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000065cd4a : lea esp, dword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000211c44 : lea esp, dword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200002129fd : lea esp, dword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000214317 : lea esp, dword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000010c42e : lea esp, dword ptr [rbp + 1] ; call 0x20000058735
0x000002000015dc79 : lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x000002000015c5da : lea r11, qword ptr [rip + 0x15d] ; jmp r11
0x00000200006c7da6 : lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r10
0x00000200006d5f6f : lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x000002000010c42d : lea r12d, dword ptr [r13 + 1] ; call 0x20000058736
0x00000200006c6fef : lea r13, qword ptr [rax + 8] ; mov rcx, r13 ; call r10
0x00000200006d931e : lea r13, qword ptr [rax + 8] ; mov rcx, r13 ; call r9
0x00000200006d713b : lea r15, qword ptr [rax + 8] ; mov rcx, r15 ; call r9
0x00000200001a55dc : lea r15, qword ptr [rdi + rax*8] ; mov rcx, r15 ; call 0x200000c18ed
0x000002000000c547 : lea r15d, dword ptr [rcx + r11*4 + 0xb] ; ret
0x00000200000f8b51 : lea r8, qword ptr [r8 + 4] ; dec rcx ; jne 0x200000f8b57 ; ret
0x00000200000f8db5 : lea r8, qword ptr [r8 + 8] ; dec r11 ; jne 0x200000f8d9e ; ret
0x000002000064b51b : lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000064b531
0x0000020000453d5e : lea r8, qword ptr [rax - 0x30] ; mov rax, r8 ; ret
0x00000200005ed65f : lea r8, qword ptr [rbp + 0x38] ; xor edx, edx ; call 0x200004e995c
0x00000200004019ff : lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call 0x2000014dc69
0x00000200005589ca : lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x0000020000155fb7 : lea r8, qword ptr [rbp - 0x80] ; call 0x20000042296
0x0000020000377228 : lea r8, qword ptr [rbx + 0x1000] ; call rax
0x00000200003ee3ba : lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003ee38c
0x000002000047f001 : lea r8, qword ptr [rip + 0xa9fe8] ; jmp 0x2000047efd5
0x0000020000207f1f : lea r8, qword ptr [rip - 0xa7ea6] ; call 0x200001441cd
0x000002000066f6a1 : lea r8, qword ptr [rsp + 0x28] ; mov edx, r15d ; call rdi
0x000002000008086e : lea r8, qword ptr [rsp + 0x28] ; movzx edx, bpl ; call qword ptr [rdi]
0x0000020000139646 : lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x00000200006f567b : lea r8, qword ptr [rsp + 0x40] ; movzx ecx, bx ; call rax
0x00000200003ffe81 : lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200000f50a2 : lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x0000020000427394 : lea r8, qword ptr [rsp + 0x68] ; xor edx, edx ; call r11
0x00000200001c5926 : lea r8, qword ptr [rsp + 0x88] ; call r9
0x00000200000ecaea : lea r8, qword ptr [rsp] ; jmp 0x200000ecab8
0x00000200004538a7 : lea r8d, dword ptr [r9 + 1] ; call 0x2000007dff7
0x00000200004bbc10 : lea r8d, dword ptr [r9 + 1] ; mov rcx, r15 ; call rsi
0x00000200004bbf25 : lea r8d, dword ptr [r9 + 2] ; mov rcx, r15 ; call rsi
0x00000200004a6b6d : lea r8d, dword ptr [r9 - 4] ; mov rcx, rdi ; call 0x200003b2e69
0x000002000059a063 : lea r8d, dword ptr [rdx + 0x10] ; call 0x2000015dbc8
0x0000020000534503 : lea r8d, dword ptr [rdx + 0x20] ; call 0x2000015dbc7
0x00000200006f2337 : lea r8d, dword ptr [rdx + 1] ; call 0x2000007e616
0x00000200005964ba : lea r8d, dword ptr [rdx + 5] ; call 0x200001c09e7
0x0000020000564716 : lea r8d, dword ptr [rdx + 6] ; call 0x200001c09e6
0x00000200003ecfb6 : lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x00000200001d69f6 : lea r9, qword ptr [r9 + 8] ; dec r8d ; jne 0x200001d69d5 ; ret
0x0000020000157a62 : lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x0000020000670cac : lea r9, qword ptr [rip - 0x555c67] ; jmp rax
0x0000020000670fe8 : lea r9, qword ptr [rip - 0x555fa3] ; jmp rax
0x00000200003cab46 : lea rax, qword ptr [r8 + rdx*4] ; ret
0x000002000002ba18 : lea rax, qword ptr [r9 - 0x10] ; ret
0x000002000051de97 : lea rax, qword ptr [rax + 0x18] ; dec rcx ; jne 0x2000051de9e ; ret
0x000002000048b754 : lea rax, qword ptr [rax + 4] ; lea rax, qword ptr [rdx + rax*8] ; jmp 0x2000048b6f3
0x00000200000a90bd : lea rax, qword ptr [rax + r9*8] ; ret
0x00000200003fd8b9 : lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200003cab41 : lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000008e8b0 : lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200000a65de : lea rax, qword ptr [rax*8 + 0x30] ; ret
0x0000020000123804 : lea rax, qword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000010d5dc : lea rax, qword ptr [rcx + 0x38] ; ret
0x0000020000102660 : lea rax, qword ptr [rcx + 0x438] ; ret
0x00000200001bc1c8 : lea rax, qword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x0000020000434b4f : lea rax, qword ptr [rcx + 0x6c8] ; ret
0x0000020000434b5b : lea rax, qword ptr [rcx + 0x6d0] ; ret
0x00000200000c4d4a : lea rax, qword ptr [rcx + 1] ; mov qword ptr [rdx + 8], rax ; jmp 0x200000c4d20
0x00000200000336f4 : lea rax, qword ptr [rcx + 1] ; ret
0x0000020000520280 : lea rax, qword ptr [rcx + 2] ; ret
0x000002000068cf98 : lea rax, qword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x0000020000632f6f : lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x0000020000141988 : lea rax, qword ptr [rcx + rax - 1] ; ret
0x000002000014198e : lea rax, qword ptr [rcx + rax - 2] ; ret
0x0000020000141994 : lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000014199a : lea rax, qword ptr [rcx + rax - 4] ; ret
0x00000200001419a0 : lea rax, qword ptr [rcx + rax - 5] ; ret
0x00000200001419a6 : lea rax, qword ptr [rcx + rax - 6] ; ret
0x00000200001419ac : lea rax, qword ptr [rcx + rax - 7] ; ret
0x00000200001419b2 : lea rax, qword ptr [rcx + rax - 8] ; ret
0x0000020000033a6a : lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200001f2ba2 : lea rax, qword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x00000200005f52ff : lea rax, qword ptr [rcx - 0x10] ; ret
0x0000020000209637 : lea rax, qword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013476b : lea rax, qword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x000002000068b064 : lea rax, qword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x00000200005c15c8 : lea rax, qword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x000002000048b758 : lea rax, qword ptr [rdx + rax*8] ; jmp 0x2000048b6ef
0x000002000015840a : lea rax, qword ptr [rdx*4] ; pop rdi ; ret
0x000002000015e1ec : lea rax, qword ptr [rip + 0x157f6d] ; ret
0x0000020000505f94 : lea rax, qword ptr [rip + 0x1a565d] ; ret
0x00000200004a03a8 : lea rax, qword ptr [rip + 0x1b4cf1] ; ret
0x00000200004d7fe4 : lea rax, qword ptr [rip + 0x50835] ; ret
0x00000200004d7ff4 : lea rax, qword ptr [rip + 0x50855] ; ret
0x00000200004d7fdc : lea rax, qword ptr [rip + 0x5089d] ; ret
0x00000200004d7fec : lea rax, qword ptr [rip + 0x508bd] ; ret
0x00000200000b629b : lea rax, qword ptr [rip + 0xa8cbe] ; ret
0x00000200000b5658 : lea rax, qword ptr [rip + 0xa9831] ; ret
0x00000200000b62b1 : lea rax, qword ptr [rip + 0xaac68] ; ret
0x00000200000b6293 : lea rax, qword ptr [rip + 0xaaec6] ; ret
0x00000200000b62b9 : lea rax, qword ptr [rip + 0xaaee0] ; ret
0x00000200000b628b : lea rax, qword ptr [rip + 0xaaeee] ; ret
0x00000200000b62c1 : lea rax, qword ptr [rip + 0xaaef8] ; ret
0x00000200000b62cd : lea rax, qword ptr [rip + 0xaaf0c] ; ret
0x00000200000b62d5 : lea rax, qword ptr [rip + 0xaafa4] ; ret
0x00000200000b56dc : lea rax, qword ptr [rip + 0xab83d] ; ret
0x00000200000b5688 : lea rax, qword ptr [rip + 0xab981] ; ret
0x00000200000b56ba : lea rax, qword ptr [rip + 0xab9af] ; ret
0x00000200000b5680 : lea rax, qword ptr [rip + 0xab9c9] ; ret
0x00000200000b56e8 : lea rax, qword ptr [rip + 0xaba01] ; ret
0x00000200000b5617 : lea rax, qword ptr [rip + 0xaba12] ; ret
0x00000200000b5698 : lea rax, qword ptr [rip + 0xaba21] ; ret
0x00000200000b5678 : lea rax, qword ptr [rip + 0xaba51] ; ret
0x00000200000b5643 : lea rax, qword ptr [rip + 0xaba56] ; ret
0x00000200000b5601 : lea rax, qword ptr [rip + 0xaba88] ; ret
0x00000200000b5690 : lea rax, qword ptr [rip + 0xabaa9] ; ret
0x00000200000b5668 : lea rax, qword ptr [rip + 0xabab1] ; ret
0x00000200000b56d4 : lea rax, qword ptr [rip + 0xabae5] ; ret
0x00000200000b56b2 : lea rax, qword ptr [rip + 0xabae7] ; ret
0x00000200000b5660 : lea rax, qword ptr [rip + 0xabaf9] ; ret
0x00000200000b5702 : lea rax, qword ptr [rip + 0xabb07] ; ret
0x00000200000b56c7 : lea rax, qword ptr [rip + 0xabb12] ; ret
0x00000200000b5637 : lea rax, qword ptr [rip + 0xabb42] ; ret
0x00000200000b56f5 : lea rax, qword ptr [rip + 0xabb44] ; ret
0x00000200000b56a5 : lea rax, qword ptr [rip + 0xabbb4] ; ret
0x0000020000414075 : lea rax, qword ptr [rip - 0x14069c] ; ret
0x000002000041aa71 : lea rax, qword ptr [rip - 0x147098] ; ret
0x000002000018ee55 : lea rax, qword ptr [rip - 0x2fefc] ; ret
0x00000200006f59ba : lea rax, qword ptr [rip - 0x598dc1] ; ret
0x00000200006f59d2 : lea rax, qword ptr [rip - 0x59d3f9] ; ret
0x00000200006f59da : lea rax, qword ptr [rip - 0x5b58b1] ; ret
0x00000200006f59a6 : lea rax, qword ptr [rip - 0x626951] ; ret
0x00000200006f59c2 : lea rax, qword ptr [rip - 0x626bcd] ; ret
0x00000200006f59ca : lea rax, qword ptr [rip - 0x627671] ; ret
0x00000200006f59ae : lea rax, qword ptr [rip - 0x629279] ; ret
0x0000020000379a9c : lea rax, qword ptr [rip - 0x9073] ; ret
0x0000020000379aa4 : lea rax, qword ptr [rip - 0x908b] ; ret
0x0000020000379aac : lea rax, qword ptr [rip - 0x90a3] ; ret
0x0000020000379ab4 : lea rax, qword ptr [rip - 0x90bb] ; ret
0x0000020000379abc : lea rax, qword ptr [rip - 0x90d3] ; ret
0x0000020000379ac4 : lea rax, qword ptr [rip - 0x90eb] ; ret
0x0000020000379acc : lea rax, qword ptr [rip - 0x9103] ; ret
0x0000020000379ad4 : lea rax, qword ptr [rip - 0x911b] ; ret
0x000002000060598d : lea rax, qword ptr [rip - 0xdf824] ; ret
0x0000020000605995 : lea rax, qword ptr [rip - 0xdf83c] ; ret
0x000002000060599d : lea rax, qword ptr [rip - 0xdf854] ; ret
0x00000200006059a5 : lea rax, qword ptr [rip - 0xdf86c] ; ret
0x00000200006059ad : lea rax, qword ptr [rip - 0xdf884] ; ret
0x00000200006059b5 : lea rax, qword ptr [rip - 0xdf89c] ; ret
0x00000200006059bd : lea rax, qword ptr [rip - 0xdf8b4] ; ret
0x00000200006059c5 : lea rax, qword ptr [rip - 0xdf8cc] ; ret
0x00000200001516d0 : lea rax, qword ptr [rsp + 8] ; ret
0x00000200000b5600 : lea rax, qword ptr ds:[rip + 0xaba88] ; ret
0x00000200000b56d3 : lea rax, qword ptr ss:[rip + 0xabae5] ; ret
0x00000200004e73c9 : lea rbp, qword ptr [rsi + 7] ; mov rcx, rbp ; call 0x200000a36c1
0x0000020000211bef : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000211c01
0x0000020000211d07 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000211d19
0x00000200002129b6 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200002129c8
0x0000020000212ad6 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000212ae8
0x0000020000212c60 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000212c72
0x0000020000212e28 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000212e3a
0x0000020000214284 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000214296
0x0000020000214438 : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000021444a
0x0000020000175870 : lea rcx, qword ptr [r13 + 0x30] ; jmp 0x20000061b61
0x00000200004becfb : lea rcx, qword ptr [r14 + rdi] ; call 0x200000e1ac7
0x000002000050d78f : lea rcx, qword ptr [r14 - 0x10] ; call 0x2000013903b
0x00000200006d6c0a : lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rbx
0x00000200006c7274 : lea rcx, qword ptr [r9 - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006c78c4 : lea rcx, qword ptr [rax + 8] ; call r10
0x00000200006e2a00 : lea rcx, qword ptr [rax + 8] ; call r9
0x00000200004a1921 : lea rcx, qword ptr [rax - 0x180] ; call 0x2000015dbc9
0x000002000054ede7 : lea rcx, qword ptr [rbp + 0x1210] ; call 0x2000047b085
0x00000200001a2abe : lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x000002000050e44d : lea rcx, qword ptr [rbp + 0x20] ; call 0x200001396cb
0x0000020000187027 : lea rcx, qword ptr [rbp + 0x27] ; call 0x20000033286
0x00000200004d00bd : lea rcx, qword ptr [rbp + 0x30] ; call 0x200000f5bf3
0x000002000043a0ec : lea rcx, qword ptr [rbp - 0x10] ; call 0x20000063ddb
0x000002000070f2bf : lea rcx, qword ptr [rbp - 0x20] ; call qword ptr [rdi]
0x0000020000718888 : lea rcx, qword ptr [rbp - 0x20] ; call qword ptr [rip - 0x3d26a2]
0x00000200005064c0 : lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x000002000049456c : lea rcx, qword ptr [rbp - 0x28] ; mov edx, edi ; call 0x200000b48f1
0x000002000050dc2f : lea rcx, qword ptr [rbp - 0x30] ; call 0x200001396cb
0x0000020000703bfb : lea rcx, qword ptr [rbp - 0x39] ; call 0x2000006fe26
0x000002000046b1c8 : lea rcx, qword ptr [rbp - 0x59] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x00000200003eca92 : lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000505eb7 : lea rcx, qword ptr [rbp - 0x80] ; call 0x200004c21be
0x000002000047e8ec : lea rcx, qword ptr [rbp - 1] ; call 0x200000a52e7
0x00000200004fb4f1 : lea rcx, qword ptr [rbp - 9] ; mov rdx, rsi ; call r12
0x000002000043952f : lea rcx, qword ptr [rbx - 0x10] ; call 0x20000063ddb
0x00000200006e008d : lea rcx, qword ptr [rbx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x000002000042e82b : lea rcx, qword ptr [rcx + 2] ; dec rdx ; jne 0x2000042e82a ; ret
0x00000200001ff06b : lea rcx, qword ptr [rcx + 8] ; dec r8 ; jne 0x200001ff06a ; ret
0x000002000036dd77 : lea rcx, qword ptr [rcx + 8] ; dec rdx ; jne 0x2000036dd72 ; ret
0x00000200003fd8b5 : lea rcx, qword ptr [rcx + rcx*2] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000514dbe : lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200004ac898 : lea rcx, qword ptr [rdi - 0x20] ; call 0x200000d89bb
0x00000200006e4fb9 : lea rcx, qword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006cbfb6 : lea rcx, qword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x00000200001ccf73 : lea rcx, qword ptr [rip + 0x1082f6] ; call 0x200001d9195
0x000002000019a04b : lea rcx, qword ptr [rip + 0x10b7fe] ; call 0x200000962c9
0x000002000011baf4 : lea rcx, qword ptr [rip + 0x11f3d] ; call rax
0x000002000009835f : lea rcx, qword ptr [rip + 0x211052] ; call 0x20000064589
0x000002000015492b : lea rcx, qword ptr [rip + 0x7f89] ; jmp rcx
0x000002000058baa4 : lea rcx, qword ptr [rip - 0x2b57cb] ; call 0x200000d7db5
0x000002000063d4b1 : lea rcx, qword ptr [rip - 0x396498] ; call 0x200000b9761
0x000002000057caa9 : lea rcx, qword ptr [rip - 0x54700] ; and r8d, edx ; jmp 0x2000057cb28
0x00000200005b29aa : lea rcx, qword ptr [rip - 0x8aea1] ; setne dl ; jmp 0x200005b29c6
0x00000200005b2998 : lea rcx, qword ptr [rip - 0x8aecf] ; setne dl ; jmp 0x200005b29c6
0x000002000066ed19 : lea rcx, qword ptr [rip - 0xbca0] ; call 0x2000022af7d
0x000002000066ed0d : lea rcx, qword ptr [rip - 0xbca4] ; call 0x2000022af7d
0x000002000066ed5e : lea rcx, qword ptr [rip - 0xbcd5] ; call 0x2000022af7d
0x000002000066ed01 : lea rcx, qword ptr [rip - 0xbce8] ; call 0x2000022af7d
0x000002000044b1fb : lea rcx, qword ptr [rsi - 0x458] ; call r15
0x000002000051c119 : lea rcx, qword ptr [rsp + 0x20] ; call 0x20000058407
0x0000020000668391 : lea rcx, qword ptr [rsp + 0x20] ; call r8
0x0000020000718e9d : lea rcx, qword ptr [rsp + 0x28] ; call rax
0x000002000012badb : lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200005c3b1e : lea rcx, qword ptr [rsp + 0x48] ; call 0x2000006fe27
0x00000200004cfbc5 : lea rcx, qword ptr [rsp + 0x48] ; call 0x200000f5bf4
0x000002000020fd5d : lea rdx, qword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x00000200001048f5 : lea rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x200001048f1 ; ret
0x000002000068924f : lea rdx, qword ptr [rbp + 1] ; mov rcx, rax ; call 0x20000145499
0x00000200005160fd : lea rdx, qword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x00000200001321da : lea rdx, qword ptr [rbp - 0x31] ; mov rcx, rbx ; call 0x2000012e495
0x00000200004ca253 : lea rdx, qword ptr [rbp - 0x4b] ; call 0x200000ec2c7
0x00000200004aaffb : lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000045acfe : lea rdx, qword ptr [rbx + 0x18] ; call rax
0x000002000003622f : lea rdx, qword ptr [rdi + 0x10] ; call r8
0x000002000021f90e : lea rdx, qword ptr [rdi + 0x58] ; call 0x20000214184
0x000002000021f90d : lea rdx, qword ptr [rdi + 0x58] ; call 0x20000214185
0x000002000042bb46 : lea rdx, qword ptr [rdx + 4] ; dec ecx ; jne 0x2000042bb49 ; ret
0x0000020000157e12 : lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x00000200005137a6 : lea rdx, qword ptr [rip + 0xf673] ; jmp 0x2000051377a
0x0000020000110d42 : lea rdx, qword ptr [rip - 0x10dc39] ; jmp 0x20000110d16
0x00000200004040f6 : lea rdx, qword ptr [rip - 0x131fbd] ; mov rax, rdx ; ret
0x00000200001ddf2a : lea rdx, qword ptr [rip - 0x1c1249] ; call 0x2000008a169
0x00000200004b13d6 : lea rdx, qword ptr [rip - 0x1df81d] ; mov rax, rdx ; ret
0x00000200004dde73 : lea rdx, qword ptr [rip - 0x4da7a2] ; call 0x2000008a169
0x00000200005adf28 : lea rdx, qword ptr [rip - 0x591287] ; call 0x2000008a169
0x00000200005adeeb : lea rdx, qword ptr [rip - 0x59128a] ; call 0x2000008a169
0x000002000051e54e : lea rdx, qword ptr [rsp + 0x20] ; call 0x2000014e0e8
0x00000200000809ca : lea rdx, qword ptr [rsp + 0x20] ; call qword ptr [rdi]
0x00000200004f329a : lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200004b46ae : lea rdx, qword ptr [rsp + 0x20] ; mov rcx, rbp ; call rax
0x00000200001cc374 : lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x000002000012e2fd : lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x00000200001c6767 : lea rdx, qword ptr [rsp + 0x3c] ; movzx ecx, ax ; call r9
0x00000200004f7076 : lea rdx, qword ptr [rsp + 0x40] ; call 0x20000120f3c
0x000002000050e920 : lea rdx, qword ptr [rsp + 0x48] ; call 0x2000013949c
0x00000200004ac161 : lea rdx, qword ptr [rsp + 0x50] ; call 0x20000158377
0x00000200005af5c2 : lea rdx, qword ptr [rsp + 0x50] ; call r8
0x00000200003b1938 : lea rdx, qword ptr [rsp + 0x50] ; mov rcx, rbx ; call r15
0x000002000063415a : lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200004aaaf0 : lea rdx, qword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x00000200003c65ba : lea rdx, qword ptr [rsp + 0x60] ; mov rcx, rdi ; call r15
0x00000200001c6794 : lea rdx, qword ptr [rsp + 0x90] ; call r8
0x000002000018a6e5 : lea rsi, qword ptr [r14 + 0xff8] ; jmp 0x200000a69cb
0x000002000009d7a6 : lea rsp, qword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000065cd49 : lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000211c43 : lea rsp, qword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200002129fc : lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000214316 : lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000157af0 : leave ; adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x0000020000200f46 : leave ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x000002000003b3fc : leave ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ca7d3 : leave ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000020000147ec5 : leave ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x0000020000157a12 : leave ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x000002000014f375 : leave ; add byte ptr [rax], al ; add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x000002000014fb9b : leave ; add byte ptr [rax], al ; ret
0x00000200003fdc47 : leave ; add dword ptr [rax - 0x77], ecx ; or byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x000002000060432f : leave ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200006d0dcc : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d0e11 ; ret 0x8948
0x00000200006d16d9 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d171e ; ret 0x8948
0x00000200006d1bab : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1bf0 ; ret 0x8948
0x00000200006d201f : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2064 ; ret 0x8948
0x00000200006d2db4 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2df9 ; ret 0x8948
0x00000200006d5f47 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d5f8c ; ret 0x8948
0x00000200006d60a8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d60ed ; ret 0x8948
0x00000200006d68d6 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d691b ; ret 0x8948
0x00000200006d7115 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d715a ; ret 0x8948
0x00000200006d7aae : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7af3 ; ret 0x8948
0x00000200006d7f4b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7f90 ; ret 0x8948
0x00000200006d85f2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d8637 ; ret 0x8948
0x00000200006d8e46 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d8e8b ; ret 0x8948
0x00000200006d92f6 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d933b ; ret 0x8948
0x00000200006d99d0 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d9a15 ; ret 0x8948
0x00000200006da21e : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da263 ; ret 0x8948
0x00000200006da6c2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da707 ; ret 0x8948
0x00000200006daf04 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006daf49 ; ret 0x8948
0x00000200006db77e : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006db7c3 ; ret 0x8948
0x00000200006dbc78 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dbcbd ; ret 0x8948
0x00000200006dc1f9 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc23e ; ret 0x8948
0x00000200006dc8ac : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc8f1 ; ret 0x8948
0x00000200006dd119 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd15e ; ret 0x8948
0x00000200006ddd56 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006ddd9b ; ret 0x8948
0x00000200006de5d9 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006de61e ; ret 0x8948
0x00000200006deac4 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006deb09 ; ret 0x8948
0x00000200006defec : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df031 ; ret 0x8948
0x00000200006df469 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df4ae ; ret 0x8948
0x00000200006df93a : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df97f ; ret 0x8948
0x00000200006dfe2d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dfe72 ; ret 0x8948
0x00000200006e01f7 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e023c ; ret 0x8948
0x00000200006e05c9 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e060e ; ret 0x8948
0x00000200006e09c1 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0a06 ; ret 0x8948
0x00000200006e0dc4 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0e09 ; ret 0x8948
0x00000200006e11c1 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1206 ; ret 0x8948
0x00000200006e15d5 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e161a ; ret 0x8948
0x00000200006e19d7 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1a1c ; ret 0x8948
0x00000200006e1df7 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1e3c ; ret 0x8948
0x00000200006e2205 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e224a ; ret 0x8948
0x00000200006e25d6 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e261b ; ret 0x8948
0x00000200006e29d8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2a1d ; ret 0x8948
0x00000200006e2e71 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2eb6 ; ret 0x8948
0x00000200006e335b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e33a0 ; ret 0x8948
0x00000200006e3ec5 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3f0a ; ret 0x8948
0x00000200006e4891 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e48d6 ; ret 0x8948
0x00000200006e4d46 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e4d8b ; ret 0x8948
0x00000200006e5320 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5365 ; ret 0x8948
0x00000200006e54f2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5537 ; ret 0x8948
0x00000200006e59b0 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e59f5 ; ret 0x8948
0x00000200006e61c9 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e620e ; ret 0x8948
0x00000200006e65f8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e663d ; ret 0x8948
0x00000200006e6aae : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6af3 ; ret 0x8948
0x00000200006e731b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7360 ; ret 0x8948
0x00000200006e78e2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7927 ; ret 0x8948
0x00000200006e7c3b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7c80 ; ret 0x8948
0x00000200006e7f18 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e7f5d ; ret 0xbd83
0x00000200006e81df : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e8224 ; ret 0x8948
0x00000200006cf051 : leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200000bc7c0 : leave ; add esi, esi ; ret
0x00000200001ea0ba : leave ; add rax, rcx ; cmp r9, r10 ; jb 0x200001ea09b ; ret
0x00000200003a15f2 : leave ; add rcx, r15 ; call 0x2000015d886
0x00000200001d4d3b : leave ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047a902 : leave ; and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x000002000017408e : leave ; and dh, dh ; ret 0x7402
0x0000020000174073 : leave ; and dh, dh ; ret 0xf02
0x0000020000038ca5 : leave ; and r8, rcx ; test r8, r8 ; jne 0x20000038cc2 ; ret
0x000002000054cc57 : leave ; call 0x1ffc3e01961
0x000002000016605e : leave ; call 0x20000042293
0x0000020000604f1e : leave ; call 0x20000066c27
0x000002000059db31 : leave ; call 0x20000066c29
0x0000020000440609 : leave ; call 0x2000006fe24
0x000002000070b908 : leave ; call 0x200000b7b3b
0x00000200004c6794 : leave ; call 0x200000e7090
0x000002000050f61f : leave ; call 0x20000139674
0x0000020000516448 : leave ; call 0x2000013c0e4
0x00000200005333c3 : leave ; call 0x2000015d884
0x00000200001da1fc : leave ; call 0x200001c8b14
0x0000020000666e0f : leave ; call 0x20000294004
0x000002000048e870 : leave ; call 0x200003cab13
0x00000200005b1b90 : leave ; call 0x200004dde23
0x00000200001b4810 : leave ; call qword ptr [rax]
0x0000020000214dea : leave ; call r9
0x000002000012e303 : leave ; call rax
0x00000200006d6118 : leave ; call rbx
0x0000020000131d9f : leave ; call rdx
0x0000020000556240 : leave ; cld ; jmp 0x2000518594b
0x00000200000fe152 : leave ; cmova r9, rcx ; mov rax, r9 ; ret
0x00000200000d543c : leave ; cmove rax, rdx ; jmp 0x200000d542d
0x000002000012a342 : leave ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x0000020000674a11 : leave ; cmovne eax, edx ; ret
0x000002000064d6f9 : leave ; cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000061bac : leave ; cmp al, 0x11 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000722739 : leave ; cmp byte ptr [rdx + rcx*8 + 0xe], r11b ; setne al ; ret
0x000002000009fab7 : leave ; cmp qword ptr [r8 + 0x50], rcx ; je 0x2000009fac6 ; ret
0x00000200004f992e : leave ; cmp r8b, 0xf ; ja 0x200004f98fe ; xor al, al ; ret
0x000002000014122d : leave ; cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200005a31d4 : leave ; dec dword ptr [rax + 3] ; shl byte ptr [rcx], 0x74 ; ret 0x4108
0x000002000043ac8c : leave ; dec dword ptr [rax - 0x75] ; ret
0x000002000040a164 : leave ; dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200003b5eef : leave ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000616c65 : leave ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000002000041ac09 : leave ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000607306 : leave ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200004cbd15 : leave ; dec dword ptr [rcx - 0x74b7ef85] ; ret
0x000002000012efcb : leave ; fucomp st(5) ; dec dword ptr [rbp - 0x75] ; ret
0x00000200003da892 : leave ; imul eax, r9d ; sub eax, r8d ; ret
0x000002000056c061 : leave ; in al, dx ; push rsi ; ret
0x0000020000605ece : leave ; inc dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000070939e : leave ; inc dword ptr [rbp - 0x3877f040] ; ret
0x00000200000eb22e : leave ; inc dword ptr [rbp - 0x3ebbf040] ; ret
0x00000200006e3b0a : leave ; inc dword ptr [rcx - 0x78] ; adc byte ptr [rbp + 3], cl ; ret
0x0000020000612ac6 : leave ; inc dword ptr [rcx - 0x78] ; adc cl, byte ptr [rcx - 1] ; ret 0x344
0x000002000060b600 : leave ; inc ebx ; mov dword ptr [rip - 0x368f19], edx ; ret
0x00000200004ae545 : leave ; inc r10d ; jmp 0x200004ae51c
0x000002000018a822 : leave ; int1 ; push rsi ; ret 0xf01
0x00000200003ac3d8 : leave ; ja 0x200003ac3e6 ; mov qword ptr [rdx], r9 ; mov al, 1 ; ret
0x00000200000ea2fc : leave ; jb 0x200000ea2e0 ; ret
0x00000200006236e4 : leave ; jb 0x200006236d0 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000013cdb0 : leave ; jbe 0x2000013cda9 ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x000002000003013d : leave ; je 0x2000003014c ; add rsp, 0x28 ; ret
0x000002000008cb2f : leave ; je 0x2000008cb42 ; mov rcx, rdx ; call r9
0x00000200000e1e88 : leave ; je 0x200000e1e4f ; jmp 0x200000e1e83
0x000002000010fb57 : leave ; je 0x2000010fb5b ; and qword ptr [rcx], 0 ; ret
0x000002000010fb4b : leave ; je 0x2000010fb5d ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x0000020000130155 : leave ; je 0x2000013015d ; call rcx
0x0000020000140669 : leave ; je 0x20000140641 ; sub r9d, ecx ; mov eax, r9d ; ret
0x00000200001c18dd : leave ; je 0x200001c18eb ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001c18e8 : leave ; je 0x200001c18f6 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001c785a : leave ; je 0x200001c7864 ; call r9
0x00000200001cbd2e : leave ; je 0x200001cbd36 ; call rcx
0x00000200001cbd51 : leave ; je 0x200001cbd59 ; call rcx
0x00000200001cbd8e : leave ; je 0x200001cbd98 ; jmp rcx
0x00000200001cbddd : leave ; je 0x200001cbde7 ; jmp rcx
0x00000200001cbe4d : leave ; je 0x200001cbe55 ; call rcx
0x00000200001cbe6a : leave ; je 0x200001cbe74 ; jmp rcx
0x00000200001d6e15 : leave ; je 0x200001d6e27 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d896e : leave ; je 0x200001d897f ; mov eax, 0xc0000225 ; ret
0x000002000020a952 : leave ; je 0x2000020a908 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200002198d8 : leave ; je 0x200002198e4 ; mov dword ptr [rcx], r10d ; ret
0x00000200003683b8 : leave ; je 0x200003683c4 ; mov al, r10b ; ret
0x00000200003683b8 : leave ; je 0x200003683c5 ; mov al, r10b ; ret
0x0000020000372c24 : leave ; je 0x2000036a305 ; call rcx
0x000002000037a623 : leave ; je 0x2000037a62b ; call rcx
0x000002000037f3bc : leave ; je 0x2000037f3c8 ; add dword ptr [rcx], r11d ; ret
0x0000020000438bed : leave ; je 0x20000438bfe ; xor edx, edx ; call 0x20000294e27
0x000002000043b926 : leave ; je 0x2000043b93c ; call 0x20000063d9a
0x0000020000442417 : leave ; je 0x2000044242d ; call 0x20000068fd6
0x0000020000442b19 : leave ; je 0x20000442b27 ; call 0x20000068fd6
0x0000020000444292 : leave ; je 0x200004442a0 ; call 0x20000068fd6
0x0000020000472bf2 : leave ; je 0x20000472c2d ; mov eax, r10d ; ret
0x0000020000472bf2 : leave ; je 0x20000472c2e ; mov eax, r10d ; ret
0x00000200004c441c : leave ; je 0x200004c442a ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004f1544 : leave ; je 0x200004f1554 ; ret
0x000002000048ab6c : leave ; je 0x2000058388b ; ret
0x000002000058cd54 : leave ; je 0x2000058cd61 ; call 0x20000068fd5
0x000002000058cdc2 : leave ; je 0x2000058cdd6 ; call 0x20000068fd5
0x000002000060b5f9 : leave ; je 0x2000060b60c ; mov dword ptr [rip - 0x368f16], edx ; ret
0x00000200006329ca : leave ; je 0x200006329db ; mov eax, 0xc000000d ; ret
0x000002000066da49 : leave ; je 0x2000066da5b ; xor edx, edx ; call 0x20000294e28
0x0000020000048c24 : leave ; jmp 0x20000048bf3
0x00000200000aecae : leave ; jmp 0x200000aec75
0x0000020000191f8c : leave ; jmp 0x200000be1c6
0x0000020000191f9f : leave ; jmp 0x200000be1df
0x00000200000cfaec : leave ; jmp 0x200000cfad9
0x00000200003eddbb : leave ; jmp 0x200003edd82
0x000002000056bc83 : leave ; jmp 0x20000437ee1
0x0000020000675bf4 : leave ; jmp 0x20000675bad
0x0000020000109fa4 : leave ; jmp qword ptr [r10 + rax*8]
0x00000200004234c9 : leave ; jmp r9
0x0000020000619a97 : leave ; jmp rax
0x0000020000651621 : leave ; jmp rcx
0x00000200005bade3 : leave ; jmp rsi
0x00000200000249f1 : leave ; jne 0x200000249e7 ; mov eax, 0xc0000109 ; ret
0x00000200000339ae : leave ; jne 0x200000339b9 ; xor eax, eax ; ret
0x00000200000366e0 : leave ; jne 0x200000366ed ; mov rax, r9 ; ret
0x0000020000051963 : leave ; jne 0x2000005196a ; ret
0x000002000008cc08 : leave ; jne 0x2000008cc0f ; ret
0x000002000009bb0b : leave ; jne 0x2000009bb18 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000a4e3a : leave ; jne 0x200000a4e41 ; ret
0x00000200000c3958 : leave ; jne 0x200000c3949 ; ret
0x00000200000c5d25 : leave ; jne 0x200000c5d2c ; ret
0x00000200000c9506 : leave ; jne 0x200000c9519 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000e1e1c : leave ; jne 0x200000e1e8f ; mov eax, 2 ; ret
0x00000200000e1e68 : leave ; jne 0x200000e1e95 ; mov eax, 0x10 ; ret
0x00000200000e2c38 : leave ; jne 0x200000e2c32 ; ret
0x00000200000e44bc : leave ; jne 0x200000e44b2 ; mov rax, rdx ; ret
0x00000200000f8b57 : leave ; jne 0x200000f8b51 ; ret
0x00000200000f9ed4 : leave ; jne 0x200000f9ee5 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000010a3df : leave ; jne 0x2000010a3f2 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000010a3fe : leave ; jne 0x2000010a417 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x00000200001145c3 : leave ; jne 0x20000114561 ; mov rax, r8 ; ret
0x0000020000123834 : leave ; jne 0x20000123846 ; test al, al ; jne 0x20000123846 ; mov eax, edx ; ret
0x0000020000123834 : leave ; jne 0x20000123847 ; test al, al ; jne 0x20000123847 ; mov eax, edx ; ret
0x00000200001301e6 : leave ; jne 0x200001301f1 ; xor al, al ; ret
0x0000020000132f3b : leave ; jne 0x20000132f27 ; ret
0x0000020000138877 : leave ; jne 0x20000138865 ; mov al, dl ; ret
0x000002000013f99a : leave ; jne 0x2000013f944 ; mov eax, edx ; ret
0x000002000013f99a : leave ; jne 0x2000013f945 ; mov eax, edx ; ret
0x00000200001400da : leave ; jne 0x200001400e5 ; xor eax, eax ; ret
0x000002000014010e : leave ; jne 0x20000140119 ; xor eax, eax ; ret
0x0000020000140d32 : leave ; jne 0x20000140d3d ; xor eax, eax ; ret
0x0000020000033846 : leave ; jne 0x200001687f5 ; ret
0x000002000010ca4b : leave ; jne 0x200001a7cad ; xor al, al ; ret
0x00000200001ac647 : leave ; jne 0x200001ac654 ; mov eax, r10d ; jmp 0x200001ac65b
0x00000200001c2903 : leave ; jne 0x200001c28e3 ; xor eax, eax ; ret
0x00000200001c538d : leave ; jne 0x200001c539e ; mov eax, 0xc000000d ; ret
0x00000200001d9320 : leave ; jne 0x200001d932d ; or eax, 0xffffffff ; ret
0x00000200001da4e6 : leave ; jne 0x200001da4e0 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001da4e6 : leave ; jne 0x200001da4e1 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000206eb6 : leave ; jne 0x20000206ec7 ; mov eax, 0xc000000d ; ret
0x00000200002091e8 : leave ; jne 0x200002091e2 ; ret
0x000002000021039d : leave ; jne 0x2000021038a ; ret
0x000002000036d89b : leave ; jne 0x2000036d8a2 ; ret
0x000002000038a716 : leave ; jne 0x2000038a727 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003b07a9 : leave ; jne 0x200003b07c0 ; xor eax, eax ; ret
0x00000200003b1168 : leave ; jne 0x200003b1166 ; jmp 0x200003b1187
0x00000200003eed03 : leave ; jne 0x200003eed14 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000402b29 : leave ; jne 0x20000402b36 ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000402b31 : leave ; jne 0x20000402b3e ; lea eax, dword ptr [rcx + 2] ; ret
0x0000020000402b41 : leave ; jne 0x20000402b5a ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200004062ed : leave ; jne 0x200004062ca ; mov eax, r10d ; jmp 0x200004062d5
0x0000020000416220 : leave ; jne 0x2000041622f ; add rsp, 0x28 ; ret
0x00000200004167be : leave ; jne 0x200004167c5 ; ret
0x000002000042bb4b : leave ; jne 0x2000042bb44 ; ret
0x0000020000438870 : leave ; jne 0x200004388d9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044006e : leave ; jne 0x2000044007d ; add rsp, 0x28 ; ret
0x000002000048dd2a : leave ; jne 0x2000048dd3b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000491e2d : leave ; jne 0x20000491e11 ; ret
0x00000200004b7b85 : leave ; jne 0x200004b7b98 ; mov r8, rdx ; mov rax, r8 ; ret
0x00000200004bfe42 : leave ; jne 0x200004bfe51 ; add rsp, 0x28 ; ret
0x00000200004d4f4d : leave ; jne 0x200004d4f58 ; mov al, 1 ; ret
0x00000200004daaf3 : leave ; jne 0x200004dab04 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051de9d : leave ; jne 0x2000051de98 ; ret
0x00000200005ba4dd : leave ; jne 0x200005ba4ba ; mov rcx, rbx ; call 0x20000426710
0x00000200005ce6da : leave ; jne 0x200005ce6eb ; mov eax, 0xc000000d ; ret
0x00000200005ceeaa : leave ; jne 0x200005ceebb ; mov eax, 0xc000000d ; ret
0x00000200005d8ef0 : leave ; jne 0x200005d8efb ; xor eax, eax ; ret
0x0000020000614262 : leave ; jne 0x2000061426d ; xor al, al ; ret
0x000002000061ca4b : leave ; jne 0x2000061ca5b ; mov eax, 1 ; ret
0x000002000061cb8e : leave ; jne 0x2000061cb99 ; mov al, 1 ; ret
0x000002000062e131 : leave ; jne 0x2000062e11d ; mov rax, rcx ; ret
0x000002000065d145 : leave ; jne 0x2000065d12d ; ret
0x000002000068f2a5 : leave ; jne 0x2000068f268 ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200006ea282 : leave ; jne 0x200006ea279 ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000070cd2a : leave ; jne 0x2000070cd31 ; ret
0x000002000071755e : leave ; jne 0x2000071754c ; ret
0x00000200004b3fd1 : leave ; jns 0x200004b3fe0 ; add rsp, 0x28 ; ret
0x00000200000f5e12 : leave ; js 0x200000f5e26 ; mov rax, rdx ; ret
0x00000200000f5e12 : leave ; js 0x200000f5e27 ; mov rax, rdx ; ret
0x00000200003f72c8 : leave ; js 0x200003f72f7 ; test cl, 8 ; jne 0x200003f72d9 ; ret
0x00000200003daec0 : leave ; lea eax, dword ptr [r9 + r10] ; ret
0x000002000067438c : leave ; lea ecx, dword ptr [rdx - 0x18] ; xor r8d, r8d ; call 0x20000670675
0x00000200001f2ba1 : leave ; lea rax, qword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x00000200001c4dea : leave ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x0000020000586740 : leave ; mov al, byte ptr [rcx + rax] ; ret
0x00000200000fcc6f : leave ; mov al, cl ; ret
0x0000020000605914 : leave ; mov al, r9b ; ret
0x00000200004cb1f8 : leave ; mov ch, 0xff ; jmp 0x200004cb1c4
0x00000200000b28f6 : leave ; mov cr8, rcx ; ret
0x000002000021548c : leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000041b89d : leave ; mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x00000200001d1762 : leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200000e61f3 : leave ; mov eax, 0xc000000d ; ret
0x00000200006687ed : leave ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000014066e : leave ; mov eax, r9d ; ret
0x00000200004ed0db : leave ; mov ebx, 0xc0000001 ; jmp 0x200004ed0ac
0x000002000051a7d4 : leave ; mov ebx, 0xc000000d ; jmp 0x2000051a7a5
0x00000200003844c8 : leave ; mov ebx, 0xc000008a ; jmp 0x20000384499
0x00000200001b4809 : leave ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x00000200005f8e21 : leave ; mov esi, 0xc48348ff ; pop rax ; ret
0x00000200000998ec : leave ; mov qword ptr [rbp - 0x48], rax ; jmp 0x200000998bc
0x000002000058a687 : leave ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x0000020000149aa3 : leave ; mov qword ptr [rsp + 0x78], rax ; call r11
0x0000020000704522 : leave ; mov r8, rbx ; mov dl, 1 ; call 0x200003b0770
0x000002000053d966 : leave ; mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000053d5fb : leave ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200003a27ea : leave ; mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x0000020000367faf : leave ; mov r8d, ebx ; xor edx, edx ; call 0x20000364254
0x0000020000514db9 : leave ; mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200000fe156 : leave ; mov rax, r9 ; ret
0x00000200006236e8 : leave ; mov rax, rcx ; ret
0x00000200000e416c : leave ; mov rbx, rdx ; call 0x20000470462
0x00000200004443c9 : leave ; mov rcx, rdi ; call 0x200000702b7
0x000002000056bca8 : leave ; mov rdi, r9 ; jmp 0x20000437eed
0x00000200002373c0 : leave ; mov word ptr [r10], cx ; ret
0x00000200000108a5 : leave ; movsxd rax, eax ; ret
0x000002000038ff1d : leave ; movzx eax, cx ; ret
0x0000020000140af4 : leave ; movzx eax, r8w ; sub eax, ecx ; ret
0x0000020000617b01 : leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000109870 : leave ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200000bc4a7 : leave ; or byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001214d3 : leave ; or byte ptr [rax], al ; ret
0x00000200005efba8 : leave ; or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x0000020000138182 : leave ; or byte ptr [rsi + 0x44], ah ; cmp eax, dword ptr [rdx] ; jb 0x2000013817a ; ret
0x0000020000138181 : leave ; or byte ptr [rsi + 0x44], ah ; cmp eax, dword ptr [rdx] ; jb 0x2000013817b ; ret
0x0000020000073e43 : leave ; or rax, 0xc4834800 ; pop rbx ; ret
0x0000020000139a8f : leave ; pop rax ; cmp dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003d330b : leave ; push rsi ; ret
0x000002000054a81b : leave ; rcl ch, cl ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000200000bdad3 : leave ; ret
0x000002000001fd00 : leave ; ret 0x21d1
0x000002000051c451 : leave ; ret 0x4cff
0x00000200004395a1 : leave ; ret 0xe9ff
0x00000200005eee97 : leave ; ret 0xffbe
0x0000020000668b53 : leave ; ret 0xffc2
0x00000200005c5bfb : leave ; ret 0xffe6
0x00000200001221c1 : leave ; ret 8
0x0000020000231ee6 : leave ; ror byte ptr [rax + 0x4a880242], 1 ; ret
0x0000020000492caf : leave ; salc ; lock dec dword ptr [rbx - 0x74b383aa] ; ret
0x000002000006ce57 : leave ; sbb eax, eax ; ret
0x000002000010986e : leave ; sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200000d2680 : leave ; setbe dl ; mov eax, edx ; ret
0x000002000009d2c6 : leave ; sete al ; ret
0x000002000052dd94 : leave ; setne al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000052dea9 : leave ; setne al ; add rsp, 0x30 ; pop rbp ; ret
0x000002000052de0e : leave ; setne al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000052dc59 : leave ; setne al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000052fdbb : leave ; setne al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000053206c : leave ; setne al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000531aad : leave ; setne al ; pop rbp ; ret
0x00000200004da38f : leave ; shr r9d, 1 ; call 0x20000026653
0x00000200001c0bd5 : leave ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200003db50c : leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x0000020000140b95 : leave ; sub r9d, eax ; mov eax, r9d ; ret
0x0000020000531ad7 : leave ; test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200003ac92d : leave ; test eax, eax ; je 0x200003ac93e ; add rax, r10 ; jmp 0x200003ac8c2
0x000002000066de32 : leave ; test r8d, r8d ; jne 0x2000066de43 ; xor eax, eax ; ret
0x000002000036d898 : leave ; test r9, r9 ; jne 0x2000036d8a5 ; ret
0x0000020000666f21 : leave ; test rax, rax ; jne 0x20000666f2e ; ret
0x00000200005f0a62 : leave ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x0000020000675ba4 : leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000041d160 : leave ; xor edx, edx ; call 0x2000004861e
0x00000200003dad68 : leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000162c7f : leave ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000048bef3 : les r9d, ptr [rcx - 0x74b72fbb] ; ret
0x0000020000707914 : ljmp ptr [r10] ; ret
0x00000200005389e9 : ljmp ptr [rax + 0x38840f02] ; ret
0x000002000036b9c0 : ljmp ptr [rax + 0x4805743f] ; add esp, 0x28 ; ret
0x0000020000538a49 : ljmp ptr [rax + 0x5f840f04] ; ret
0x00000200007094be : ljmp ptr [rax - 0x207af0fe] ; ret 1
0x00000200004df14d : ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x00000200000a3094 : ljmp ptr [rbx] ; ret
0x000002000015e27d : ljmp ptr [rbx] ; ret 0x42c6
0x0000020000721815 : ljmp ptr [rbx] ; ret 0x8489
0x00000200005aa0e7 : ljmp ptr [rbx] ; ret 0x8b4c
0x0000020000707915 : ljmp ptr [rdx] ; ret
0x000002000019bc6a : lldt word ptr [rax - 0xb472117] ; push rsi ; ret
0x000002000048815d : lock add byte ptr [rax - 0x75], cl ; ret
0x00000200004ad9d7 : lock add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000045bab1 : lock add byte ptr [rax - 0x7d], cl ; ret
0x00000200001593e6 : lock add byte ptr [rax], al ; add bl, al ; jmp rax
0x00000200000e4c88 : lock add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200003f50ad : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004414e : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200003786b7 : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200001fb9e4 : lock add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200003e9ecf : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000014f855 : lock add byte ptr [rax], al ; add cl, ch ; and cl, ch ; add byte ptr [rax], al ; ret
0x0000020000585e5e : lock add byte ptr [rax], al ; shr cl, 0x63 ; ret 0xfff0
0x00000200000dd60d : lock add byte ptr [rdi], cl ; test dword ptr [rbx], ebx ; ret
0x000002000048815c : lock add byte ptr gs:[rax - 0x75], cl ; ret
0x000002000005dc3f : lock add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; fimul dword ptr [rax - 0x75] ; ret
0x0000020000570a62 : lock add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000192023 : lock and dword ptr [esi + 0x10], 0xfffffffe ; jmp 0x200000be2a1
0x0000020000192022 : lock and dword ptr [esi + 0x10], 0xfffffffe ; jmp 0x200000be2a2
0x00000200002088d1 : lock and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000124b3b : lock and dword ptr [r10], eax ; ret
0x00000200000f0ab4 : lock and dword ptr [r8], eax ; jmp 0x200000f0a82
0x00000200005f5fd6 : lock and dword ptr [r8], eax ; ret
0x000002000013ef1d : lock and dword ptr [rcx + 0x6b4], 0xffffffef ; ret
0x0000020000192024 : lock and dword ptr [rsi + 0x10], 0xfffffffe ; jmp 0x200000be2a0
0x00000200000967c5 : lock and qword ptr [rcx], 0 ; ret
0x00000200000f6f2a : lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x00000200000d10c4 : lock bts dword ptr [rcx], 9 ; ret
0x0000020000096259 : lock bts qword ptr [rcx], 0 ; jb 0x2000009626a ; ret
0x00000200000fb668 : lock cmpxchg dword ptr [rdx], ecx ; jne 0x200000fb675 ; ret
0x0000020000192f7e : lock cmpxchg dword ptr [rip + 0x1236f2], ecx ; ret
0x000002000003647a : lock cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x20000036498 ; ret
0x00000200000824ab : lock cmpxchg qword ptr [r8], rcx ; jne 0x2000008249c ; ret
0x0000020000082fdf : lock cmpxchg qword ptr [r8], rcx ; jne 0x20000082ff2 ; mov al, 1 ; ret
0x000002000008c741 : lock cmpxchg qword ptr [r8], rcx ; jne 0x2000008c757 ; mov al, 1 ; ret
0x00000200000f7c12 : lock cmpxchg qword ptr [r8], rcx ; jne 0x200000f7c25 ; mov al, 1 ; ret
0x00000200000f7c89 : lock cmpxchg qword ptr [r8], rcx ; jne 0x200000f7c81 ; ret
0x00000200001a116a : lock cmpxchg qword ptr [r9 + 0x10], rcx ; jne 0x200001a1150 ; ret
0x00000200001c4deb : lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x000002000002b799 : lock cmpxchg qword ptr [r9], r8 ; jne 0x2000002b7c5 ; ret
0x0000020000068f21 : lock cmpxchg qword ptr [r9], r8 ; jne 0x20000068f38 ; ret
0x00000200004b3ff3 : lock cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x00000200000dbd46 : lock cmpxchg qword ptr [rcx + 0x20], rbx ; sub rax, r10 ; jmp 0x200000dbd3b
0x000002000008d941 : lock cmpxchg qword ptr [rcx], r8 ; jne 0x2000008d922 ; ret
0x00000200005cad08 : lock cmpxchg qword ptr [rcx], rdx ; je 0x200005cad1d ; call 0x200000d6f31
0x000002000062acce : lock cmpxchg qword ptr [rcx], rdx ; je 0x2000062ace3 ; call 0x200000d6f31
0x00000200000b8351 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000b8354 ; ret
0x00000200000b9779 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000b9788 ; ret
0x00000200000d7dba : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000d7dbb ; mov al, 1 ; ret
0x00000200000e188e : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000e189d ; ret
0x00000200002332ca : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200002332dd ; mov al, 1 ; ret
0x000002000049f1a9 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000049f1b8 ; ret
0x00000200002270fc : lock cmpxchg qword ptr [rdi], rcx ; jne 0x2000022710f ; mov al, dl ; jmp 0x20000227117
0x00000200000915a7 : lock cmpxchg qword ptr [rdx], rcx ; jne 0x200000915b9 ; ret
0x0000020000157de8 : lock cmpxchg16b xmmword ptr [r11] ; jne 0x20000157ddb ; mov rax, r10 ; pop rbx ; ret
0x00000200000f5250 : lock dec dword ptr [r8] ; ret
0x000002000022d8a0 : lock dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200000f7d9a : lock dec dword ptr [rax + 0x63] ; ret 0xb60f
0x0000020000583c00 : lock dec dword ptr [rax - 0x75] ; ret
0x0000020000185330 : lock dec dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200001851ac : lock dec dword ptr [rbp - 0x75] ; ret 0xb70f
0x0000020000183f9b : lock dec dword ptr [rbp - 0x75] ; ret 0xf1e9
0x0000020000184f8c : lock dec dword ptr [rbx + 0x5c62bc3] ; call rdx
0x0000020000229c0e : lock dec dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005fc030 : lock dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000492cb1 : lock dec dword ptr [rbx - 0x74b383aa] ; ret
0x0000020000583810 : lock dec dword ptr [rbx] ; ret 0x4389
0x0000020000295c0f : lock dec dword ptr [rcx + 0x4c] ; add rsp, 0x70 ; pop rdi ; ret
0x000002000008ec4d : lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200001fba78 : lock dec dword ptr [rcx + 8] ; ret
0x0000020000182a6a : lock dec dword ptr [rcx - 0x75] ; ret
0x0000020000095cdd : lock dec dword ptr [rcx] ; ret
0x00000200001f303a : lock dec dword ptr [rip + 0xc3023] ; ret
0x00000200001f301c : lock dec dword ptr [rip + 0xc303d] ; ret
0x0000020000182a69 : lock dec dword ptr cs:[rcx - 0x75] ; ret
0x0000020000369728 : lock inc dword ptr [r8] ; ret
0x0000020000500278 : lock inc dword ptr [rax + 0x10] ; ret
0x000002000067a581 : lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x0000020000129419 : lock inc dword ptr [rax + 0x200] ; ret
0x00000200004df11a : lock inc dword ptr [rax] ; ret
0x000002000058795d : lock inc dword ptr [rbp - 0x777f040] ; ret
0x00000200005826e7 : lock inc dword ptr [rbx - 0x7cb70740] ; ret
0x00000200005829ce : lock inc dword ptr [rbx] ; ret
0x000002000011b5d3 : lock inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x2000011b5ce
0x000002000015e210 : lock inc dword ptr [rcx + 0x10] ; ret
0x000002000015dcf8 : lock inc dword ptr [rcx + 0x24] ; ret
0x00000200004c6f64 : lock inc dword ptr [rcx + 0x750] ; ret
0x00000200001fba88 : lock inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001fba80 : lock inc dword ptr [rcx + 4] ; ret
0x00000200001fba8c : lock inc dword ptr [rcx + 8] ; ret
0x0000020000181054 : lock inc dword ptr [rcx - 0x75] ; ret
0x00000200005826e6 : lock inc dword ptr es:[rbx - 0x7cb70740] ; ret
0x0000020000442a60 : lock or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000690a8
0x0000020000159f2b : lock or byte ptr [rsp], 0 ; ret
0x0000020000208981 : lock or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000208a36 : lock or dword ptr [r10], eax ; ret
0x00000200003d57c4 : lock or dword ptr [rbx], ecx ; ret
0x000002000013ef14 : lock or dword ptr [rcx + 0x6b4], 0x10 ; ret
0x000002000015e1cc : lock or dword ptr [rip + 0x14013d], ecx ; ret
0x000002000015e37c : lock or dword ptr [rip + 0x1f2cf9], ecx ; ret
0x000002000015e39a : lock or dword ptr [rsp], 0 ; ret
0x00000200005b1b8a : lock or dword ptr [rsp], 0 ; xor ecx, ecx ; call 0x200004dde29
0x00000200000b9bd3 : lock sub qword ptr [rip + 0x20f355], rax ; ret
0x00000200000fce2a : lock xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200000fdb75 : lock xadd qword ptr [rax + 0x5948], rdx ; ret
0x000002000015dfea : lock xadd qword ptr [rdx + 0x4c8], rax ; ret
0x0000020000039fff : lock xadd qword ptr [rip + 0x30f138], rdx ; ret
0x000002000002a7e7 : lock xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x00000200001b5281 : lodsb al, byte ptr [esi] ; idiv edi ; mov eax, 0xc000000d ; ret
0x000002000044824d : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x0000020000506e31 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; mov dl, 0x12 ; ret
0x000002000066a89a : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000449a39 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000020a150 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001ab4b6 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000c70b6 : lodsb al, byte ptr [rsi] ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4789
0x0000020000049b9a : lodsb al, byte ptr [rsi] ; and al, 0xb9 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005fa5c6 : lodsb al, byte ptr [rsi] ; call rcx
0x00000200005f3992 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; and al, 0x20 ; call 0x200000bfc11
0x00000200005f4bd4 : lodsb al, byte ptr [rsi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000686e10 : lodsb al, byte ptr [rsi] ; dec esp ; add rsp, 0x30 ; pop rbx ; ret
0x000002000047c560 : lodsb al, byte ptr [rsi] ; enter -0x34, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001b5282 : lodsb al, byte ptr [rsi] ; idiv edi ; mov eax, 0xc000000d ; ret
0x000002000000e285 : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; jae 0x2000000e277 ; ret
0x000002000066ea97 : lodsb al, byte ptr [rsi] ; je 0x2000066eaa4 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000000de5f : lodsb al, byte ptr [rsi] ; jnp 0x2000000dedc ; add cl, bh ; jp 0x2000000de6c ; ret 0x4adb
0x000002000000de5e : lodsb al, byte ptr [rsi] ; jnp 0x2000000dedd ; add cl, bh ; jp 0x2000000de6d ; ret 0x4adb
0x00000200001f354c : lodsb al, byte ptr [rsi] ; mov eax, 1 ; ret
0x00000200006670c4 : lodsb al, byte ptr [rsi] ; mov esp, 0xc48348ff ; jo 0x20000667133 ; ret
0x00000200000a6c7c : lodsb al, byte ptr [rsi] ; mov rdx, rbx ; mov rcx, r15 ; call r12
0x00000200005005b5 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x00000200000b62b5 : lodsb al, byte ptr [rsi] ; or al, byte ptr [rax] ; ret
0x00000200001ed05e : lodsb al, byte ptr [rsi] ; or eax, 0x200f4400 ; ret
0x0000020000431300 : lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x000002000001fd12 : lodsb al, byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200005f8b8d : lodsb al, byte ptr [rsi] ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e29
0x00000200004d8006 : lodsb al, byte ptr [rsi] ; push rdi ; or al, 0 ; mov eax, edx ; ret
0x000002000001d461 : lodsb al, byte ptr [rsi] ; ret
0x00000200004b728f : lodsb al, byte ptr [rsi] ; ret 0x41ff
0x000002000050e9df : lodsb al, byte ptr [rsi] ; ret 0x44ff
0x00000200004b7269 : lodsb al, byte ptr [rsi] ; ret 0x4cff
0x00000200000b0221 : lodsb al, byte ptr [rsi] ; ret 0x508
0x0000020000721b3e : lodsb al, byte ptr [rsi] ; ret 0x8840
0x000002000053307e : lodsb al, byte ptr [rsi] ; ret 0x89ff
0x00000200003c3ad3 : lodsb al, byte ptr [rsi] ; ret 0xd60
0x000002000002861a : lodsb al, byte ptr [rsi] ; ret 0xd80
0x0000020000532524 : lodsb al, byte ptr [rsi] ; ret 0xffd7
0x000002000024b894 : lodsb al, byte ptr [rsi] ; ret 9
0x0000020000026818 : lodsb al, byte ptr [rsi] ; xor al, byte ptr [rax] ; sub rax, rcx ; ret
0x000002000019d248 : lodsd eax, dword ptr [rsi] ; adc byte ptr [rax], al ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000019d265
0x0000020000721f5f : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x1d], al ; push rdx ; ret 0x48ff
0x00000200004d9328 : lodsd eax, dword ptr [rsi] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000585e75 : lodsd eax, dword ptr [rsi] ; call qword ptr [rax - 0xf3d2e17]
0x00000200003b586f : lodsd eax, dword ptr [rsi] ; cmc ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000023d329 : lodsd eax, dword ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000002000058cd5a : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x20000068fd9
0x000002000056a18f : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000062285f : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000062f447 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rbx - 0xcbdbbc] ; ret
0x00000200006f23f2 : lodsd eax, dword ptr [rsi] ; fnstsw dword ptr [rbp + 0x1d8901ff] ; ret
0x0000020000596ce5 : lodsd eax, dword ptr [rsi] ; inc dword ptr [rcx + 3] ; out dx, eax ; jmp 0x200004c2f7c
0x0000020000195951 : lodsd eax, dword ptr [rsi] ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200001f99a4 : lodsd eax, dword ptr [rsi] ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000545c2f : lodsd eax, dword ptr [rsi] ; je 0x20000545bf0 ; call qword ptr [rax - 0x183d2a17]
0x000002000049d0fb : lodsd eax, dword ptr [rsi] ; lodsb al, byte ptr [rsi] ; ret
0x000002000000c545 : lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x0000020000402944 : lodsd eax, dword ptr [rsi] ; mov ebx, 0xc0000225 ; jmp 0x20000402916
0x000002000010d091 : lodsd eax, dword ptr [rsi] ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000051844f : lodsd eax, dword ptr [rsi] ; push rdi ; ret
0x0000020000066ea6 : lodsd eax, dword ptr [rsi] ; ret
0x00000200003e67a7 : lodsd eax, dword ptr [rsi] ; ret 0x16
0x00000200000e4d67 : lodsd eax, dword ptr [rsi] ; ret 0x26
0x00000200005371cf : lodsd eax, dword ptr [rsi] ; ret 0x49ff
0x00000200004df1a6 : lodsd eax, dword ptr [rsi] ; ret 0x85ff
0x00000200000f3d40 : lodsd eax, dword ptr [rsi] ; ret 0xa
0x000002000000d656 : lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x0000020000449dff : lodsd eax, dword ptr [rsi] ; ret 0xf0ff
0x000002000053cd1f : lodsd eax, dword ptr [rsi] ; ret 0xffb2
0x0000020000381213 : lodsd eax, dword ptr [rsi] ; ret 0xffd5
0x000002000068a40c : lodsd eax, dword ptr [rsi] ; sar edi, -0xa ; ret
0x00000200001244e5 : lodsd eax, dword ptr [rsi] ; scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000114bf7 : lodsd eax, dword ptr [rsi] ; stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000436e4e : lodsd eax, dword ptr [rsi] ; xor eax, eax ; jmp 0x20000436933
0x000002000000dadb : loop 0x2000000db0d ; adc dword ptr [rdx], ebp ; lahf ; ret
0x000002000007b320 : loop 0x2000007b328 ; add al, 0 ; add byte ptr [rbx], dh ; ret 0x8348
0x000002000008295d : loop 0x200000828ef ; ret 0x2b48
0x0000020000088ff5 : loop 0x2000008900a ; jae 0x20000089008 ; or byte ptr [r8 + 0x1a], 0x10 ; ret
0x00000200000ac019 : loop 0x200000ac006 ; ret 0xfffa
0x00000200000d19a8 : loop 0x200000d19a2 ; ret 0xf15
0x00000200000d2253 : loop 0x200000d224d ; ret 0xf15
0x00000200000f17ce : loop 0x200000f17b2 ; or al, byte ptr [rax] ; ret
0x000002000010c7a5 : loop 0x2000010c7a5 ; rol byte ptr [rcx + 0x23], 1 ; add dword ptr [rbx], ecx ; ret 0x8941
0x000002000010c809 : loop 0x2000010c818 ; ret 0x8941
0x0000020000112e4c : loop 0x20000112e46 ; ret 0xf55
0x000002000013e16d : loop 0x2000013e1c0 ; or dword ptr [rax + rcx*8 + 8], edx ; ret
0x000002000014da9a : loop 0x2000014da8a ; add byte ptr [rax], al ; ret
0x000002000014db9a : loop 0x2000014db89 ; add byte ptr [rax], al ; ret
0x000002000014dc9a : loop 0x2000014dc88 ; add byte ptr [rax], al ; ret
0x000002000014dd9a : loop 0x2000014dd87 ; add byte ptr [rax], al ; ret
0x000002000014de9a : loop 0x2000014de86 ; add byte ptr [rax], al ; ret
0x000002000014df9a : loop 0x2000014df85 ; add byte ptr [rax], al ; ret
0x000002000014e09a : loop 0x2000014e084 ; add byte ptr [rax], al ; ret
0x000002000014e19a : loop 0x2000014e183 ; add byte ptr [rax], al ; ret
0x000002000014e29a : loop 0x2000014e282 ; add byte ptr [rax], al ; ret
0x000002000014e39a : loop 0x2000014e381 ; add byte ptr [rax], al ; ret
0x000002000014e49a : loop 0x2000014e480 ; add byte ptr [rax], al ; ret
0x000002000014e59a : loop 0x2000014e57f ; add byte ptr [rax], al ; ret
0x000002000014e69a : loop 0x2000014e67e ; add byte ptr [rax], al ; ret
0x000002000014e79a : loop 0x2000014e77d ; add byte ptr [rax], al ; ret
0x000002000014e89a : loop 0x2000014e87c ; add byte ptr [rax], al ; ret
0x000002000014e99a : loop 0x2000014e97b ; add byte ptr [rax], al ; ret
0x000002000014ea9a : loop 0x2000014ea7a ; add byte ptr [rax], al ; ret
0x000002000014eb9a : loop 0x2000014eb79 ; add byte ptr [rax], al ; ret
0x000002000014ec9a : loop 0x2000014ec78 ; add byte ptr [rax], al ; ret
0x000002000014ed9a : loop 0x2000014ed77 ; add byte ptr [rax], al ; ret
0x000002000014ee9a : loop 0x2000014ee76 ; add byte ptr [rax], al ; ret
0x000002000014ef9a : loop 0x2000014ef75 ; add byte ptr [rax], al ; ret
0x000002000014f09a : loop 0x2000014f074 ; add byte ptr [rax], al ; ret
0x000002000014f19a : loop 0x2000014f173 ; add byte ptr [rax], al ; ret
0x000002000014f29a : loop 0x2000014f272 ; add byte ptr [rax], al ; ret
0x000002000014f39a : loop 0x2000014f371 ; add byte ptr [rax], al ; ret
0x000002000014f49a : loop 0x2000014f470 ; add byte ptr [rax], al ; ret
0x000002000014f59a : loop 0x2000014f56f ; add byte ptr [rax], al ; ret
0x000002000014f69a : loop 0x2000014f66e ; add byte ptr [rax], al ; ret
0x000002000014f79a : loop 0x2000014f76d ; add byte ptr [rax], al ; ret
0x000002000014f89a : loop 0x2000014f86c ; add byte ptr [rax], al ; ret
0x000002000014f99a : loop 0x2000014f96b ; add byte ptr [rax], al ; ret
0x000002000014fa9a : loop 0x2000014fa6a ; add byte ptr [rax], al ; ret
0x000002000014fb9a : loop 0x2000014fb69 ; add byte ptr [rax], al ; ret
0x000002000014fc9a : loop 0x2000014fc68 ; add byte ptr [rax], al ; ret
0x000002000014fd9a : loop 0x2000014fd67 ; add byte ptr [rax], al ; ret
0x000002000014fe9a : loop 0x2000014fe66 ; add byte ptr [rax], al ; ret
0x000002000014ff9a : loop 0x2000014ff65 ; add byte ptr [rax], al ; ret
0x000002000015009a : loop 0x20000150064 ; add byte ptr [rax], al ; ret
0x000002000015019a : loop 0x20000150163 ; add byte ptr [rax], al ; ret
0x000002000015029a : loop 0x20000150262 ; add byte ptr [rax], al ; ret
0x000002000015039a : loop 0x20000150361 ; add byte ptr [rax], al ; ret
0x000002000015049a : loop 0x20000150460 ; add byte ptr [rax], al ; ret
0x000002000015059a : loop 0x2000015055f ; add byte ptr [rax], al ; ret
0x000002000015069a : loop 0x2000015065e ; add byte ptr [rax], al ; ret
0x000002000015079a : loop 0x2000015075d ; add byte ptr [rax], al ; ret
0x000002000015089a : loop 0x2000015085c ; add byte ptr [rax], al ; ret
0x000002000015099a : loop 0x2000015095b ; add byte ptr [rax], al ; ret
0x0000020000150a9a : loop 0x20000150a5a ; add byte ptr [rax], al ; ret
0x0000020000150b9a : loop 0x20000150b59 ; add byte ptr [rax], al ; ret
0x0000020000150c9a : loop 0x20000150c58 ; add byte ptr [rax], al ; ret
0x0000020000150d9a : loop 0x20000150d57 ; add byte ptr [rax], al ; ret
0x0000020000150e9a : loop 0x20000150e56 ; add byte ptr [rax], al ; ret
0x0000020000150f9a : loop 0x20000150f55 ; add byte ptr [rax], al ; ret
0x00000200001516f1 : loop 0x20000151692 ; fnstcw word ptr [rcx] ; ret
0x000002000015798f : loop 0x200001579b5 ; or rax, rdx ; pop rdi ; ret
0x000002000015798f : loop 0x200001579b7 ; or rax, rdx ; pop rdi ; ret
0x0000020000157e1a : loop 0x20000157e77 ; ret
0x000002000015dd14 : loop 0x2000015dd3b ; or rax, rdx ; ret
0x00000200001c783f : loop 0x200001c7868 ; or rdx, rax ; mov rax, rdx ; ret
0x00000200001c783f : loop 0x200001c7869 ; or rdx, rax ; mov rax, rdx ; ret
0x00000200001cdf1a : loop 0x200001cdf55 ; sbb byte ptr [rax], al ; call rax
0x00000200001e01d9 : loop 0x200001e01ff ; or rax, rdx ; ret
0x00000200001e01d9 : loop 0x200001e0200 ; or rax, rdx ; ret
0x00000200001e06f0 : loop 0x200001e0706 ; add byte ptr [rax - 0x75], cl ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001e7887 : loop 0x200001e7881 ; ret 0x7455
0x00000200001f13e4 : loop 0x200001f13fe ; add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x000002000020fda2 : loop 0x2000020fdac ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000020fffe : loop 0x20000210005 ; add rsp, 0x68 ; ret
0x000002000020fffd : loop 0x20000210006 ; add rsp, 0x68 ; ret
0x0000020000217189 : loop 0x20000217118 ; ret 0xd0f7
0x00000200002176d9 : loop 0x20000217668 ; ret 0xd0f7
0x00000200002215f9 : loop 0x20000221581 ; inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x000002000022cddc : loop 0x2000022ce07 ; or rax, rdx ; add rsp, 0x28 ; ret
0x000002000027d41d : loop 0x2000027d493 ; add al, bh ; ret
0x000002000037061d : loop 0x20000370624 ; clc ; inc dword ptr [rcx] ; ret
0x000002000038120d : loop 0x2000038121a ; add rdx, r14 ; call 0x200000dd4cb
0x00000200003ac5ef : loop 0x200003ac601 ; add bl, ch ; ret
0x00000200003ac5ee : loop 0x200003ac602 ; add bl, ch ; ret
0x00000200003b1f68 : loop 0x200003b1ef0 ; ret
0x00000200003cea1a : loop 0x200003cea43 ; ret
0x00000200003f828a : loop 0x200003f821a ; ret
0x000002000040549a : loop 0x20000405490 ; dec dword ptr [rbx + 0x2718e8d0] ; ret 0xebff
0x000002000043a939 : loop 0x2000043a92f ; mov edx, 0xe8ce8b48 ; nop ; xchg eax, esp ; ret 0xebff
0x000002000043d63f : loop 0x2000043d63a ; ret 0x3a0
0x000002000047033a : loop 0x200004702c1 ; ret
0x000002000047f3b2 : loop 0x2000047f42f ; ret
0x000002000049a04a : loop 0x2000049a05c ; jae 0x2000049a05b ; add rsp, 0x38 ; ret
0x000002000049e6e9 : loop 0x2000049e6ee ; call rdi
0x00000200004a98a6 : loop 0x200004a98bc ; jb 0x200004a98be ; ret
0x00000200004abd99 : loop 0x200004abd9f ; call 0x200000d6f2d
0x00000200004b13db : loop 0x200004b13e0 ; mov rax, rdx ; ret
0x00000200004b13db : loop 0x200004b13e1 ; mov rax, rdx ; ret
0x00000200004b4397 : loop 0x200004b43ae ; add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x00000200004b4c13 : loop 0x200004b4c63 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004b9bec : loop 0x200004b9bf1 ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e19c5
0x00000200004dcadb : loop 0x200004dcb2b ; add esp, 0x20 ; pop rbx ; ret
0x0000020000515645 : loop 0x2000051565b ; call 0x2000013b955
0x000002000054724f : loop 0x20000547206 ; call qword ptr [rax - 0x1800ea17]
0x000002000054724e : loop 0x20000547207 ; call qword ptr [rax - 0x1800ea17]
0x0000020000568905 : loop 0x200005688f2 ; ret
0x00000200005d01ab : loop 0x200005d01c0 ; or r8d, ecx ; or r8d, edx ; jmp 0x200005d01d4
0x00000200005dd806 : loop 0x200005dd810 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006649b2 : loop 0x2000066498e ; ret
0x000002000066d917 : loop 0x2000066d92a ; call 0x20000294005
0x000002000066d91a : loop 0x2000066d984 ; ret 0x48ff
0x000002000066e959 : loop 0x2000066e94c ; ret
0x000002000067361f : loop 0x2000067362a ; call 0x20000294005
0x0000020000680907 : loop 0x20000680958 ; add esp, 0x30 ; pop rbx ; jmp r8
0x00000200006d0dd3 : loop 0x200006d0e0a ; ret 0x8948
0x00000200006d16e0 : loop 0x200006d1717 ; ret 0x8948
0x00000200006d1bb2 : loop 0x200006d1be9 ; ret 0x8948
0x00000200006d2026 : loop 0x200006d205d ; ret 0x8948
0x00000200006d2dbb : loop 0x200006d2df2 ; ret 0x8948
0x00000200006d5f4e : loop 0x200006d5f85 ; ret 0x8948
0x00000200006d60af : loop 0x200006d60e6 ; ret 0x8948
0x00000200006d68dd : loop 0x200006d6914 ; ret 0x8948
0x00000200006d711c : loop 0x200006d7153 ; ret 0x8948
0x00000200006d7ab5 : loop 0x200006d7aec ; ret 0x8948
0x00000200006d7f52 : loop 0x200006d7f89 ; ret 0x8948
0x00000200006d85f9 : loop 0x200006d8630 ; ret 0x8948
0x00000200006d8e4d : loop 0x200006d8e84 ; ret 0x8948
0x00000200006d92fd : loop 0x200006d9334 ; ret 0x8948
0x00000200006d99d7 : loop 0x200006d9a0e ; ret 0x8948
0x00000200006da225 : loop 0x200006da25c ; ret 0x8948
0x00000200006da6c9 : loop 0x200006da700 ; ret 0x8948
0x00000200006daf0b : loop 0x200006daf42 ; ret 0x8948
0x00000200006db785 : loop 0x200006db7bc ; ret 0x8948
0x00000200006dbc7f : loop 0x200006dbcb6 ; ret 0x8948
0x00000200006dc200 : loop 0x200006dc237 ; ret 0x8948
0x00000200006dc8b3 : loop 0x200006dc8ea ; ret 0x8948
0x00000200006dd120 : loop 0x200006dd157 ; ret 0x8948
0x00000200006ddd5d : loop 0x200006ddd94 ; ret 0x8948
0x00000200006de5e0 : loop 0x200006de617 ; ret 0x8948
0x00000200006deacb : loop 0x200006deb02 ; ret 0x8948
0x00000200006deff3 : loop 0x200006df02a ; ret 0x8948
0x00000200006df470 : loop 0x200006df4a7 ; ret 0x8948
0x00000200006df941 : loop 0x200006df978 ; ret 0x8948
0x00000200006dfe34 : loop 0x200006dfe6b ; ret 0x8948
0x00000200006e01fe : loop 0x200006e0235 ; ret 0x8948
0x00000200006e05d0 : loop 0x200006e0607 ; ret 0x8948
0x00000200006e09c8 : loop 0x200006e09ff ; ret 0x8948
0x00000200006e0dcb : loop 0x200006e0e02 ; ret 0x8948
0x00000200006e11c8 : loop 0x200006e11ff ; ret 0x8948
0x00000200006e15dc : loop 0x200006e1613 ; ret 0x8948
0x00000200006e19de : loop 0x200006e1a15 ; ret 0x8948
0x00000200006e1dfe : loop 0x200006e1e35 ; ret 0x8948
0x00000200006e220c : loop 0x200006e2243 ; ret 0x8948
0x00000200006e25dd : loop 0x200006e2614 ; ret 0x8948
0x00000200006e29df : loop 0x200006e2a16 ; ret 0x8948
0x00000200006e2e78 : loop 0x200006e2eaf ; ret 0x8948
0x00000200006e3362 : loop 0x200006e3399 ; ret 0x8948
0x00000200006e3ecc : loop 0x200006e3f03 ; ret 0x8948
0x00000200006e4898 : loop 0x200006e48cf ; ret 0x8948
0x00000200006e4d4d : loop 0x200006e4d84 ; ret 0x8948
0x00000200006e5327 : loop 0x200006e535e ; ret 0x8948
0x00000200006e54f9 : loop 0x200006e5530 ; ret 0x8948
0x00000200006e59b7 : loop 0x200006e59ee ; ret 0x8948
0x00000200006e61d0 : loop 0x200006e6207 ; ret 0x8948
0x00000200006e65ff : loop 0x200006e6636 ; ret 0x8948
0x00000200006e6ab5 : loop 0x200006e6aec ; ret 0x8948
0x00000200006e7322 : loop 0x200006e7359 ; ret 0x8948
0x00000200006e78e9 : loop 0x200006e7920 ; ret 0x8948
0x00000200006e7c42 : loop 0x200006e7c79 ; ret 0x8948
0x00000200006e7f1f : loop 0x200006e7f56 ; ret 0xbd83
0x00000200006e81e6 : loop 0x200006e821d ; ret 0x8948
0x00000200006ed78c : loop 0x200006ed7a9 ; or eax, edx ; ret
0x00000200006ed78c : loop 0x200006ed7aa ; or eax, edx ; ret
0x00000200006f764d : loop 0x200006f7650 ; ret
0x000002000070f8c0 : loop 0x2000070f910 ; add esp, 0x50 ; pop rbx ; ret
0x000002000071559a : loop 0x20000715565 ; ret
0x0000020000021a59 : loope 0x200000219e5 ; ret
0x000002000002558a : loope 0x200000255da ; add esp, 0x20 ; pop rbx ; ret
0x000002000002a7aa : loope 0x2000002a7b4 ; cmp r8b, cl ; jne 0x2000002a7ee ; ret
0x0000020000033c9b : loope 0x20000033c27 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x0000020000055db0 : loope 0x20000055d7d ; mov rax, cr3 ; mov cr3, rax ; ret
0x00000200000632ca : loope 0x20000063256 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x000002000006e71a : loope 0x2000006e6a6 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x000002000006f950 : loope 0x2000006f8dc ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x00000200000938ba : loope 0x20000093846 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x000002000009652d : loope 0x200000964bc ; ret
0x00000200000ae03d : loope 0x200000ae009 ; ret
0x00000200000b01b5 : loope 0x200000b01fa ; mov eax, ecx ; ret
0x00000200000b23da : loope 0x200000b2366 ; sar byte ptr [rax + 0x18], 0xff ; ret 0x8348
0x00000200000bc293 : loope 0x200000bc21f ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x00000200000bd227 : loope 0x200000bd264 ; add bh, bh ; ret
0x00000200000e3f61 : loope 0x200000e3f82 ; jb 0x200000e3f6f ; ret
0x00000200000e5cdf : loope 0x200000e5cef ; je 0x200000e5cd0 ; mov al, 1 ; ret
0x00000200000f3aff : loope 0x200000f3b14 ; jae 0x200000f3b12 ; mov eax, 1 ; ret
0x00000200000f539b : loope 0x200000f532d ; add al, 0xb ; ret
0x0000020000107e28 : loope 0x20000107de8 ; add al, 0 ; add byte ptr [rax], al ; ret
0x0000020000108e61 : loope 0x20000108e72 ; cmp cl, 1 ; sete al ; ret
0x0000020000139701 : loope 0x20000139695 ; add eax, 0x217910 ; ret
0x000002000013c2d9 : loope 0x2000013c322 ; shl rax, cl ; or qword ptr [r8], rax ; ret
0x000002000017b223 : loope 0x2000017b299 ; out dx, eax ; push rsi ; ret
0x00000200001a922e : loope 0x200001a9231 ; ret 0x973b
0x00000200001b9e97 : loope 0x200001b9e67 ; sldt word ptr [rcx + rax + 0x25] ; ret 0xfc7
0x00000200001cb196 : loope 0x200001cb125 ; ret 0xd8f7
0x00000200001cbde2 : loope 0x200001cbda2 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001dbbfe : loope 0x200001dbbcb ; mov rax, cr3 ; mov cr3, rax ; ret
0x00000200001e082d : loope 0x200001e0840 ; add byte ptr [rax - 0x75], cl ; call qword ptr [rax]
0x00000200001e0899 : loope 0x200001e08ac ; add byte ptr [rax - 0x75], cl ; call qword ptr [rax]
0x00000200001e0898 : loope 0x200001e08ad ; add byte ptr [rax - 0x75], cl ; call qword ptr [rax]
0x00000200001ee28d : loope 0x200001ee290 ; ret
0x0000020000210407 : loope 0x2000021040e ; add rsp, 0x38 ; ret
0x0000020000210406 : loope 0x2000021040f ; add rsp, 0x38 ; ret
0x000002000022bcda : loope 0x2000022bcb0 ; mov rax, qword ptr [rsp + 0x38] ; jmp rax
0x0000020000232068 : loope 0x20000232071 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000237d1c : loope 0x20000237d33 ; add dh, dh ; ret
0x00000200003745b6 : loope 0x20000374605 ; add esp, 0x28 ; ret
0x00000200003db473 : loope 0x200003db47e ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x00000200003e3e5d : loope 0x200003e3deb ; ret 0x8b4c
0x00000200003f25c7 : loope 0x200003f25d7 ; jne 0x200003f25d6 ; mov al, r9b ; ret
0x00000200003f827b : loope 0x200003f8230 ; ret
0x0000020000420bf9 : loope 0x20000420c37 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000427322 : loope 0x20000427346 ; jae 0x2000042731f ; or dword ptr [rdx], eax ; ret
0x00000200004359eb : loope 0x20000435a24 ; ret
0x000002000043a4cb : loope 0x2000043a52c ; ret
0x000002000043a52b : loope 0x2000043a52f ; ret
0x0000020000443d83 : loope 0x20000443d82 ; call 0x20000068fd5
0x0000020000479377 : loope 0x2000047937e ; add rsp, 0x28 ; ret
0x0000020000479392 : loope 0x20000479399 ; add rsp, 0x28 ; ret
0x000002000047a42a : loope 0x2000047a431 ; add rsp, 0x28 ; ret
0x0000020000492759 : loope 0x20000492762 ; test r10, r10 ; je 0x2000049276b ; jmp r10
0x00000200004c2446 : loope 0x200004c244c ; call 0x200000e3bed
0x00000200004dde7b : loope 0x200004dde46 ; mov edx, 0x74c084ff ; ret 0x6483
0x00000200004e1a6c : loope 0x200004e1a6f ; mov rax, rcx ; ret
0x00000200004f98e5 : loope 0x200004f9956 ; test r9d, r10d ; je 0x200004f98f8 ; mov al, 1 ; ret
0x000002000053036d : loope 0x20000530376 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005303cf : loope 0x200005303d8 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000530bf0 : loope 0x20000530bf9 ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000531e05 : loope 0x20000531e0e ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000531e04 : loope 0x20000531e0f ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000531e21 : loope 0x20000531e2a ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000531e20 : loope 0x20000531e2b ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000531e3d : loope 0x20000531e46 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000531e3c : loope 0x20000531e47 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000532089 : loope 0x20000532092 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000532088 : loope 0x20000532093 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005964fb : loope 0x200005964a3 ; ret 0xebff
0x00000200006020dd : loope 0x200006020ad ; push rsi ; ret
0x00000200006021b5 : loope 0x20000602185 ; push rsi ; ret
0x00000200006236e6 : loope 0x20000623721 ; leave ; mov rax, rcx ; ret
0x000002000065c1ab : loope 0x2000065c16a ; ret
0x000002000066498b : loope 0x200006649e2 ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006674f5 : loope 0x2000066751d ; jae 0x20000667508 ; mov eax, 1 ; ret
0x000002000066805a : loope 0x20000668030 ; mov rax, qword ptr [rsp + 0x28] ; jmp rax
0x000002000066ec8b : loope 0x2000066ecb6 ; ret
0x000002000067258e : loope 0x20000672595 ; mov eax, ecx ; ret
0x000002000067501b : loope 0x20000674fa5 ; ret
0x00000200006794a0 : loope 0x20000679520 ; int 0xff
0x0000020000680817 : loope 0x20000680867 ; add esp, 0x38 ; jmp rax
0x000002000068095a : loope 0x200006809aa ; add esp, 0x38 ; jmp rax
0x00000200006809af : loope 0x200006809ff ; add esp, 0x38 ; jmp rax
0x00000200006902f6 : loope 0x200006902a6 ; dec dword ptr [rax + 0x2b] ; ret
0x00000200006c6f81 : loope 0x200006c6f16 ; add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x00000200006c6fcf : loope 0x200006c7006 ; ret 0x8948
0x00000200006c78a4 : loope 0x200006c78db ; ret 0x8948
0x00000200006c7d2f : loope 0x200006c7cc5 ; mov edi, esp ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006c7d85 : loope 0x200006c7dbc ; ret 0x8948
0x00000200006ca2a4 : loope 0x200006ca2db ; ret 0x8948
0x00000200006ca6f1 : loope 0x200006ca687 ; mov dr1, esp ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006ca74e : loope 0x200006ca785 ; ret 0x8948
0x00000200006ca8dc : loope 0x200006ca871 ; add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x00000200006ca92e : loope 0x200006ca965 ; ret 0x8948
0x00000200006cb370 : loope 0x200006cb305 ; add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x00000200006cb3db : loope 0x200006cb412 ; ret 0x8948
0x00000200006cbc82 : loope 0x200006cbcb9 ; ret 0x8948
0x00000200006cc1a2 : loope 0x200006cc138 ; mov dr1, esp ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006cc1f4 : loope 0x200006cc22b ; ret 0x8948
0x00000200006ccb9d : loope 0x200006ccbd4 ; ret 0x8948
0x00000200006cd60c : loope 0x200006cd643 ; ret 0x8948
0x00000200006fa106 : loope 0x200006fa12a ; sar rcx, 0x10 ; mov rax, rcx ; ret
0x0000020000713b15 : loope 0x20000713adc ; call qword ptr [rbx]
0x00000200007184b5 : loope 0x200007184c8 ; jmp 0x20000718487
0x0000020000718a64 : loope 0x20000718a7a ; mov dword ptr [rip - 0x475bdc], ecx ; ret
0x000002000072051f : loope 0x20000720529 ; std ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000722fc3 : loope 0x20000722f88 ; call qword ptr [rax]
0x0000020000722fc3 : loope 0x20000722f89 ; call qword ptr [rax]
0x000002000072cb83 : loope 0x2000072cbcb ; ret 0x45ff
0x000002000000e4ed : loopne 0x2000000e4e2 ; ret
0x000002000000e716 : loopne 0x2000000e714 ; pop rdx ; ret
0x000002000001026d : loopne 0x200000102d7 ; clc ; jbe 0x200000102e3 ; popfq ; ret
0x000002000003362b : loopne 0x20000033636 ; add rax, rcx ; ret
0x000002000003363e : loopne 0x20000033648 ; add rax, rdx ; ret
0x000002000003363e : loopne 0x20000033649 ; add rax, rdx ; ret
0x0000020000033a55 : loopne 0x20000033a64 ; add rax, qword ptr [rcx + 0x98] ; ret
0x0000020000055dad : loopne 0x20000055dc2 ; and ah, cl ; ret
0x000002000005ff8a : loopne 0x2000005ff84 ; ret 0xf01
0x0000020000061027 : loopne 0x20000061021 ; ret
0x000002000008dc2a : loopne 0x2000008dc33 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000094c6d : loopne 0x20000094c77 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000095e32 : loopne 0x20000095e37 ; jne 0x20000095e41 ; mov qword ptr [r9], r8 ; ret
0x00000200000962ef : loopne 0x2000009627e ; ret
0x0000020000097f29 : loopne 0x20000097f33 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000009baf6 : loopne 0x2000009bb49 ; not eax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000009c082 : loopne 0x2000009c08a ; ret
0x00000200000aeb43 : loopne 0x200000aeb47 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b62bc : loopne 0x200000b6270 ; or al, byte ptr [rax] ; ret
0x00000200000b9bd2 : loopne 0x200000b9bcd ; sub qword ptr [rip + 0x20f355], rax ; ret
0x00000200000bf0af : loopne 0x200000bf0ea ; or eax, 0xeb1f8900 ; ret 0x8b48
0x00000200000c00d4 : loopne 0x200000c00d9 ; ret
0x00000200000c4485 : loopne 0x200000c448a ; ret
0x00000200000de5a2 : loopne 0x200000de59f ; ret
0x00000200000e1c7b : loopne 0x200000e1c83 ; add byte ptr [rax], al ; ret
0x00000200000e1e90 : loopne 0x200000e1e85 ; vunpcklps xmm0, xmm8, xmmword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000e84bf : loopne 0x200000e84c4 ; ret
0x00000200000f0ab1 : loopne 0x200000f0ab2 ; sal al, 1 ; and dword ptr [r8], eax ; jmp 0x200000f0a85
0x00000200000f485c : loopne 0x200000f4867 ; add rax, rcx ; ret
0x00000200000f494b : loopne 0x200000f4961 ; mov bh, 5 ; ret
0x00000200000fc5f6 : loopne 0x200000fc5ff ; add rsp, 0x28 ; ret
0x00000200001009eb : loopne 0x200001009f2 ; add byte ptr [rax], al ; pop rbx ; ret
0x000002000010326b : loopne 0x20000103270 ; ret
0x0000020000108429 : loopne 0x20000108437 ; mov eax, r8d ; ret
0x000002000010bb4c : loopne 0x2000010bb58 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000010c7a3 : loopne 0x2000010c781 ; loop 0x2000010c7a7 ; rol byte ptr [rcx + 0x23], 1 ; add dword ptr [rbx], ecx ; ret 0x8941
0x000002000010c841 : loopne 0x2000010c84c ; add eax, dword ptr [rdx + 0x260] ; ret
0x000002000011e4f2 : loopne 0x2000011e541 ; mov dword ptr [rax], eax ; ret
0x00000200001230e4 : loopne 0x200001230eb ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000124b38 : loopne 0x20000124b38 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x00000200001281c2 : loopne 0x200001281cb ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012e07e : loopne 0x2000012e086 ; dec eax ; ret
0x000002000012e207 : loopne 0x2000012e1c7 ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000012e3c3 : loopne 0x2000012e3c5 ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000012ebbc : loopne 0x2000012ebbb ; shr eax, 3 ; ret
0x0000020000131ddb : loopne 0x20000131de7 ; mov dword ptr [rip + 0x1711a9], eax ; ret
0x00000200001375cb : loopne 0x2000013761d ; mov edx, esi ; mov rcx, r15 ; call r14
0x00000200001375ca : loopne 0x2000013761e ; mov edx, esi ; mov rcx, r15 ; call r14
0x000002000013c2dd : loopne 0x2000013c32c ; or dword ptr [rax], eax ; ret
0x000002000013f48b : loopne 0x2000013f490 ; ret
0x0000020000140f62 : loopne 0x20000140f6a ; ret
0x0000020000140f82 : loopne 0x20000140f88 ; ret
0x0000020000140fc2 : loopne 0x20000140fce ; ret
0x0000020000140fe2 : loopne 0x20000140fe7 ; ret
0x0000020000141e6f : loopne 0x20000141e82 ; or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001513bd : loopne 0x200001513c2 ; or eax, r8d ; wrmsr ; ret
0x00000200001514fe : loopne 0x20000151500 ; wrmsr ; ret
0x000002000015156e : loopne 0x20000151573 ; or eax, r8d ; wrmsr ; ret
0x00000200001516b4 : loopne 0x200001516b9 ; or eax, r8d ; wrmsr ; ret
0x0000020000157d38 : loopne 0x20000157d88 ; mov eax, eax ; pop rbx ; ret
0x000002000015dd09 : loopne 0x2000015dd0f ; pop rcx ; ret
0x000002000016d9da : loopne 0x2000016da37 ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000171d66 : loopne 0x20000171d59 ; mov word ptr [rcx - 0x14], gs ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000018a71d : loopne 0x2000018a729 ; sub r14, rax ; jmp 0x200000a69de
0x000002000019cd7a : loopne 0x2000019cd91 ; add al, ch ; pop rdx ; ret
0x00000200001a7b24 : loopne 0x200001a7b33 ; ret 0x348
0x00000200001a7b23 : loopne 0x200001a7b34 ; ret 0x348
0x00000200001b841e : loopne 0x200001b842f ; add eax, 0xa ; ret
0x00000200001bda61 : loopne 0x200001bda55 ; ret
0x00000200001ca3be : loopne 0x200001ca3d2 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001cb6e5 : loopne 0x200001cb6f8 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001cb83e : loopne 0x200001cb851 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001cba77 : loopne 0x200001cba8a ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001d9699 : loopne 0x200001d96ea ; not eax ; and qword ptr [r8], rax ; ret
0x00000200001dbbfb : loopne 0x200001dbc10 ; and ah, cl ; ret
0x00000200001e56a5 : loopne 0x200001e56ae ; or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x00000200001e6ee7 : loopne 0x200001e6f0b ; sar rax, 0x10 ; add rax, rcx ; ret
0x00000200001f13e9 : loopne 0x200001f13f0 ; or eax, edx ; ret
0x00000200001f13d1 : loopne 0x200001f13fb ; inc eax ; add rsp, 0x28 ; ret
0x00000200002059fa : loopne 0x20000205a01 ; add byte ptr [rax], al ; ret
0x0000020000205ee6 : loopne 0x20000205ef1 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000020a017 : loopne 0x2000020a027 ; add eax, ecx ; ret
0x000002000020a0e1 : loopne 0x2000020a0ed ; cdq ; idiv ecx ; add eax, r9d ; ret
0x000002000020ad44 : loopne 0x2000020ad94 ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200002108f9 : loopne 0x200002108fe ; ret
0x00000200002168a8 : loopne 0x200002168ba ; rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000224686 : loopne 0x200002246c5 ; ret 0xf272
0x000002000022518b : loopne 0x2000022518f ; inc eax ; ret
0x0000020000225ada : loopne 0x20000225ae3 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000022724c : loopne 0x20000227253 ; add rsp, 0x38 ; ret
0x00000200002278e9 : loopne 0x200002278f2 ; add rsp, 0x48 ; ret
0x000002000022bce3 : loopne 0x2000022bd30 ; jmp rax
0x000002000022c34d : loopne 0x2000022c352 ; ret
0x0000020000235c2b : loopne 0x20000235c71 ; add bh, bh ; ret
0x000002000023d323 : loopne 0x2000023d350 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; lodsd eax, dword ptr [rsi] ; cmp dword ptr [rax], eax ; ret
0x000002000023eac8 : loopne 0x2000023ead3 ; add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rsp ; ret
0x000002000023fa5c : loopne 0x2000023fa75 ; cmp eax, dword ptr [rax] ; ret
0x0000020000258003 : loopne 0x2000025802d ; add byte ptr [rax], al ; add al, dl ; ret
0x000002000025d350 : loopne 0x2000025d3c1 ; add byte ptr [rax], r13b ; ret
0x000002000026834c : loopne 0x20000268355 ; pop rax ; add byte ptr [rbx], bh ; add byte ptr [rcx], bl ; ret 0x5309
0x0000020000270419 : loopne 0x20000270433 ; jo 0x20000270447 ; add byte ptr [rax], al ; add al, cl ; ret 0x11
0x000002000027d3f1 : loopne 0x2000027d467 ; add ah, cl ; ret
0x000002000027d419 : loopne 0x2000027d493 ; add byte ptr [rdx], dl ; jo 0x2000027d428 ; clc ; ret
0x000002000028882f : loopne 0x2000028883a ; and eax, 0x60c000d ; ret 0x2536
0x000002000036d494 : loopne 0x2000036d49b ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000036defb : loopne 0x2000036df4a ; add esp, 0x28 ; ret
0x00000200003745b3 : loopne 0x200003745cc ; and ah, cl ; add rsp, 0x28 ; ret
0x00000200003787ce : loopne 0x2000037881d ; add esp, 0x28 ; ret
0x000002000037a92c : loopne 0x2000037a91b ; fdiv st(7), st(0) ; add rsp, 0x50 ; pop rbx ; ret
0x000002000038d2b5 : loopne 0x2000038d2bd ; add byte ptr [rax], al ; call rax
0x000002000038dc40 : loopne 0x2000038dc48 ; add byte ptr [rax], al ; call rax
0x000002000038de0e : loopne 0x2000038de19 ; add byte ptr [rax], al ; mov rcx, r15 ; call rax
0x00000200003a137e : loopne 0x200003a1386 ; add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x00000200003a42e0 : loopne 0x200003a4332 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200003a42df : loopne 0x200003a4333 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200003c2fea : loopne 0x200003c2fe9 ; dec dword ptr [rax + 0x3b] ; ret 0x5777
0x00000200003c3d09 : loopne 0x200003c3d03 ; ret 0xf08
0x00000200003d011c : loopne 0x200003d012e ; ret
0x00000200003dabdd : loopne 0x200003dabe8 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200003dae27 : loopne 0x200003dae32 ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x00000200003e61b7 : loopne 0x200003e61f0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003ece3d : loopne 0x200003ece37 ; ret
0x00000200003ef45f : loopne 0x200003ef4a9 ; cmp ecx, 6 ; jne 0x200003ef4c7 ; ret
0x00000200003f2639 : loopne 0x200003f264a ; jb 0x200003f2646 ; xor eax, eax ; ret
0x0000020000404088 : loopne 0x20000404079 ; mov ah, 0x8b ; ret 0xc148
0x00000200004040fa : loopne 0x200004040ed ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x00000200004040f9 : loopne 0x200004040ee ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x000002000041e1e5 : loopne 0x2000041e1f0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000042afd9 : loopne 0x2000042aff3 ; add byte ptr [rax], al ; je 0x2000042afd2 ; mov al, 1 ; ret
0x000002000043aba9 : loopne 0x2000043abbd ; jae 0x2000043abb9 ; call 0x20000068fd7
0x0000020000441add : loopne 0x20000441ae2 ; ret
0x0000020000442c2c : loopne 0x20000442ca9 ; ret 0x65ff
0x00000200004476cc : loopne 0x2000044765b ; ret 0xf0ff
0x000002000044930b : loopne 0x20000449317 ; add byte ptr [rax], al ; call 0x2000006a617
0x00000200004493ce : loopne 0x200004493da ; add byte ptr [rax], al ; call 0x2000006a617
0x0000020000458d9e : loopne 0x20000458d8f ; sub al, 2 ; sar edi, -0x75 ; ret
0x0000020000458d9d : loopne 0x20000458d90 ; sub al, 2 ; sar edi, -0x75 ; ret
0x000002000046f528 : loopne 0x2000046f536 ; add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x00000200004a8dbd : loopne 0x200004a8d4c ; ret 0x48c3
0x00000200004ac89b : loopne 0x200004ac889 ; adc eax, ecx ; ret 0x48ff
0x00000200004ac89a : loopne 0x200004ac88a ; adc eax, ecx ; ret 0x48ff
0x00000200004b192f : loopne 0x200004b1952 ; ret
0x00000200004c6ee9 : loopne 0x200004c6ef2 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004c83b1 : loopne 0x200004c836e ; dec dword ptr [rax - 0x75] ; ret
0x00000200004cd199 : loopne 0x200004cd1a2 ; add byte ptr [rax], al ; call 0x200000f6f17
0x00000200004cd238 : loopne 0x200004cd23f ; add rsp, 0x38 ; ret
0x00000200004d2a4e : loopne 0x200004d2a51 ; ret
0x00000200004f1bf5 : loopne 0x200004f1bfe ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004f2f10 : loopne 0x200004f2f19 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004f4edc : loopne 0x200004f4e96 ; ret
0x00000200004f4fc6 : loopne 0x200004f4fef ; add byte ptr [rax - 0x3ffffe77], bh ; ret
0x00000200004faf78 : loopne 0x200004faf25 ; ret
0x00000200005064c3 : loopne 0x20000506454 ; clc ; call r15
0x00000200005064c2 : loopne 0x20000506455 ; clc ; call r15
0x000002000051699c : loopne 0x200005169be ; ret 0x48ff
0x0000020000517f43 : loopne 0x20000517f4b ; dec eax ; ret
0x0000020000517f4e : loopne 0x20000517f52 ; inc eax ; ret
0x000002000051a1cf : loopne 0x2000051a1d6 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000051d239 : loopne 0x2000051d241 ; dec eax ; ret
0x00000200005204dc : loopne 0x200005204b6 ; ret
0x0000020000535937 : loopne 0x20000535941 ; fadd dword ptr [rcx - 0x7d] ; ret 0xeb08
0x00000200005371cc : loopne 0x200005371d5 ; call 0x2000015d885
0x000002000053cea1 : loopne 0x2000053cea9 ; add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x000002000056f50b : loopne 0x2000056f4f7 ; ret
0x000002000056f50a : loopne 0x2000056f4f8 ; ret
0x000002000056f505 : loopne 0x2000056f583 ; or dword ptr [rax - 0x73], ecx ; loopne 0x2000056f4fd ; ret
0x000002000057781d : loopne 0x20000577836 ; mov edx, 0xf491fe1 ; ret 0x8541
0x0000020000596d7d : loopne 0x20000596d56 ; dec dword ptr [rax - 0x75] ; sti ; jmp 0x200004c2ff5
0x00000200005b467c : loopne 0x200005b4680 ; inc eax ; ret
0x00000200005b7f18 : loopne 0x200005b7f22 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005c2e2c : loopne 0x200005c2e96 ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200005d6a34 : loopne 0x200005d6a3e ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200005da423 : loopne 0x200005da42a ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200005f5fd1 : loopne 0x200005f5fdb ; enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x000002000060f3d6 : loopne 0x2000060f3dc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006162c9 : loopne 0x200006162d0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000063c55e : loopne 0x2000063c565 ; ret 0xc13b
0x0000020000644d9f : loopne 0x20000644da7 ; mov al, r8b ; ret
0x000002000065b761 : loopne 0x2000065b76a ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000065d91a : loopne 0x2000065d924 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000662341 : loopne 0x20000662346 ; ret
0x00000200006655fd : loopne 0x20000665619 ; jb 0x20000665610 ; shr eax, 0xf ; and al, 1 ; ret
0x0000020000665629 : loopne 0x20000665642 ; jb 0x20000665636 ; mov al, 1 ; ret
0x0000020000665704 : loopne 0x200006656d7 ; ret
0x0000020000668063 : loopne 0x200006680b4 ; mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x0000020000669dea : loopne 0x20000669e37 ; jmp rax
0x000002000067414a : loopne 0x2000067419d ; mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200006741d5 : loopne 0x200006741db ; add byte ptr [rax], al ; ret
0x0000020000674521 : loopne 0x2000067452c ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000002000067563b : loopne 0x200006755bf ; ret
0x00000200006809ff : loopne 0x20000680a4f ; add esp, 0x38 ; jmp rax
0x0000020000688dbc : loopne 0x20000688dbd ; mov edx, 0x8bc3ffff ; ret
0x00000200006ca80e : loopne 0x200006ca79d ; ret
0x00000200006cf094 : loopne 0x200006cf0e3 ; add esp, 0x48 ; ret
0x00000200006ef033 : loopne 0x200006ef03b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006fa0ba : loopne 0x200006fa0db ; sar rax, 0x10 ; ret
0x00000200006ff67e : loopne 0x200006ff686 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000718a7a : loopne 0x20000718a98 ; mov dword ptr [rip - 0x475bf2], eax ; ret
0x0000020000719603 : loopne 0x20000719607 ; inc eax ; ret
0x0000020000720273 : loopne 0x20000720284 ; ret
0x00000200007244dc : loopne 0x2000072452e ; ret 0xe8ff
0x000002000072f402 : loopne 0x2000072f405 ; ret
0x000002000072f401 : loopne 0x2000072f406 ; ret
0x00000200001f13e5 : lsl edx, edx ; and eax, 1 ; or eax, edx ; ret
0x000002000011df44 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 9], cl ; ret
0x0000020000570a60 : mov ah, 0x24 ; lock add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000000d0da : mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000018719c : mov ah, 0x2f ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000038f537 : mov ah, 0x31 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fe17e : mov ah, 0x49 ; mov eax, edx ; ret
0x00000200000222b0 : mov ah, 0x5a ; ret
0x000002000001153d : mov ah, 0x78 ; mov esp, 0xe70b3d35 ; ret
0x00000200004489f8 : mov ah, 0x78 ; ret 0x4cff
0x0000020000021398 : mov ah, 0x7f ; movsxd rcx, edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000605a48 : mov ah, 0x81 ; mov ah, 0xff ; add rsp, 0x48 ; ret
0x000002000051bc16 : mov ah, 0x82 ; or dword ptr [rax], eax ; mov qword ptr [rdi], rsi ; jmp 0x2000051bbe9
0x00000200003b517e : mov ah, 0x8b ; ret
0x000002000040408a : mov ah, 0x8b ; ret 0xc148
0x00000200004472f8 : mov ah, 0x8f ; ret 0x48ff
0x00000200006673b4 : mov ah, 0x92 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000016e848 : mov ah, 0x93 ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000534508 : mov ah, 0x96 ; ret 0x48ff
0x00000200004f707c : mov ah, 0x9e ; ret 0x4cff
0x00000200004e7e28 : mov ah, 0xb ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000b56a8 : mov ah, 0xbb ; or al, byte ptr [rax] ; ret
0x00000200000ca4e5 : mov ah, 0xc ; add byte ptr [rbp - 0x7c], al ; ret
0x00000200006f5d21 : mov ah, 0xc5 ; dec dword ptr [rax - 0x7d] ; ret 0x4c50
0x0000020000675c4f : mov ah, 0xcd ; jmp qword ptr [rcx]
0x0000020000014a68 : mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x0000020000432088 : mov ah, 0xe7 ; ret
0x00000200001ddcd4 : mov ah, 0xe8 ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000174995 : mov ah, 0xee ; push rsi ; ret 0xf10
0x00000200000dfaab : mov ah, 0xf1 ; or eax, 0xca034800 ; jmp rcx
0x00000200004908d8 : mov ah, 0xf6 ; ret 0xf07
0x00000200000e4484 : mov ah, 0xfc ; dec dword ptr [rax - 0x75] ; ret
0x000002000009a526 : mov ah, 0xfe ; dec dword ptr [rax - 0x7d] ; ret
0x000002000072829d : mov ah, 0xfe ; dec dword ptr [rax - 9] ; ret
0x00000200004df102 : mov ah, 0xff ; add rsp, 0x38 ; ret
0x0000020000603c52 : mov ah, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000605a4a : mov ah, 0xff ; add rsp, 0x48 ; ret
0x0000020000608110 : mov ah, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005731fb : mov ah, 0xff ; nop ; jmp 0x2000044d12a
0x0000020000574d11 : mov ah, 0xff ; nop ; jmp 0x20000450fa4
0x000002000051e511 : mov ah, 0xff ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000240fe1 : mov ah, 4 ; add al, al ; jmp qword ptr [rbx]
0x000002000053d3c8 : mov ah, 4 ; ret 0x48ff
0x000002000010373a : mov ah, 6 ; add byte ptr [rax], al ; and al, 1 ; ret
0x000002000013ef20 : mov ah, 6 ; add byte ptr [rax], al ; out dx, eax ; ret
0x00000200004e7b62 : mov ah, 6 ; add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x000002000010c535 : mov ah, 9 ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x000002000010c74b : mov ah, 9 ; add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x0000020000554ac9 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c20fc : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000439781 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x000002000051fc54 : mov ah, ah ; ret 0x85ff
0x00000200000376f4 : mov ah, bh ; sub byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x00000200002912c5 : mov ah, byte ptr [rbx] ; ret 0x638c
0x00000200002912c1 : mov ah, byte ptr [rbx] ; stc ; mov ah, byte ptr [rbx] ; ret 0x638c
0x00000200004746f2 : mov ah, byte ptr [rcx + 0x23] ; add byte ptr [rcx - 0x77], al ; or al, 0x8b ; ret
0x0000020000451fdb : mov ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200001c77e4 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fd985 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000162488 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000161a2b : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000022bd38 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x0000020000139036 : mov al, 0 ; add byte ptr [rax], al ; dec eax ; jne 0x20000139047 ; ret
0x000002000005500c : mov al, 0 ; add byte ptr [rax], al ; jae 0x2000005501f ; mov qword ptr [r8], rax ; ret
0x00000200006fe8fa : mov al, 0 ; add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000047e1c3 : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000062413d : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000010b9e2 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000230558 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200004482ee : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000672f3b : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000404edd : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200003787fd : mov al, 0x10 ; ret
0x0000020000136c98 : mov al, 0x21 ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000027c119 : mov al, 0x27 ; add byte ptr [rdx], al ; sbb al, 0xc ; add byte ptr [rsi + rax], cl ; ret
0x00000200001c62bb : mov al, 0x33 ; rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x0000020000097308 : mov al, 0x3b ; ret
0x00000200003c3fad : mov al, 0x3b ; ror dword ptr [rdi], -0x7e ; ret 0xfffd
0x00000200000eb8bf : mov al, 0x48 ; mov dword ptr [rcx + 0x168], eax ; ret
0x00000200004b683d : mov al, 0x48 ; mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x000002000067056c : mov al, 0x48 ; ret 0x45ff
0x000002000067576c : mov al, 0x7f ; ret
0x0000020000473db4 : mov al, 0x96 ; ret 0x41ff
0x000002000054bcb6 : mov al, 0x9e ; call 0x1ffc2e005c2
0x00000200004b7268 : mov al, 0xac ; ret 0x4cff
0x000002000041d164 : mov al, 0xb4 ; ret 0x65ff
0x0000020000135da0 : mov al, 0xb6 ; and dword ptr [rax], eax ; sete al ; ret
0x0000020000446d32 : mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000002000023d3c4 : mov al, 0xb9 ; cmp dword ptr [rax], eax ; btc dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret
0x000002000018a723 : mov al, 0xc2 ; int1 ; dec dword ptr [rax - 0x3f] ; jmp 0x2000018a741
0x000002000028a9b0 : mov al, 0xc8 ; adc al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000026e084 : mov al, 0xc8 ; adc al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x4c9c
0x0000020000010f5f : mov al, 0xc8 ; ret
0x0000020000432dfc : mov al, 0xd4 ; ret
0x00000200005201cc : mov al, 0xd6 ; ret
0x0000020000713a5d : mov al, 0xde ; ret
0x00000200001e082c : mov al, 0xe1 ; or eax, dword ptr [rax] ; mov rsi, rdx ; call qword ptr [rax]
0x00000200003a4d27 : mov al, 0xe8 ; add dh, dh ; rol byte ptr [rcx + 0x22], 1 ; ret
0x000002000043e8e8 : mov al, 0xe8 ; push rsi ; ret
0x00000200001748d7 : mov al, 0xee ; push rsi ; ret 0xf08
0x0000020000244ec0 : mov al, 0xf0 ; cmp al, 0 ; ret
0x000002000051f16c : mov al, 0xf4 ; ret 0x48ff
0x000002000056dc93 : mov al, 0xf6 ; ret
0x00000200004b4caa : mov al, 0xf7 ; ret
0x00000200003ef851 : mov al, 0xfa ; dec dword ptr [rbx + 0x78c085d8] ; ret
0x000002000064227b : mov al, 0xff ; add rsp, 0x48 ; ret
0x000002000063ebd7 : mov al, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000056bc52 : mov al, 0xff ; nop ; jmp 0x20000437c1c
0x000002000056c712 : mov al, 0xff ; nop ; jmp 0x20000439dc6
0x00000200005706c6 : mov al, 0xff ; nop ; jmp 0x20000447315
0x0000020000570705 : mov al, 0xff ; nop ; jmp 0x2000044746b
0x000002000051f4b5 : mov al, 0xff ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013d254 : mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a7aa3 : mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000063aec : mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000be4de : mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000e95f0 : mov al, 1 ; add rsp, 0x38 ; ret
0x000002000009b9bc : mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007189a9 : mov al, 1 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000062f869 : mov al, 1 ; add rsp, 0x68 ; ret
0x00000200006ede7d : mov al, 1 ; add rsp, 0x88 ; ret
0x000002000013053e : mov al, 1 ; jmp 0x20000130508
0x000002000008cb39 : mov al, 1 ; mov al, r8b ; add rsp, 0x28 ; ret
0x00000200001bf0e1 : mov al, 1 ; mov al, r8b ; ret
0x000002000015dd32 : mov al, 1 ; mov byte ptr [r8 + 0x10], 0 ; ret
0x00000200000d857d : mov al, 1 ; mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x0000020000196e34 : mov al, 1 ; mov qword ptr [r8 + 0xf8], rcx ; ret
0x000002000043832c : mov al, 1 ; mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000002a937 : mov al, 1 ; ret
0x000002000070d4c8 : mov al, 1 ; xor edx, edx ; call 0x200000e9746
0x00000200001359f9 : mov al, 2 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200006f6c28 : mov al, 2 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000063e550 : mov al, 2 ; mov rcx, rax ; call 0x2000047a803
0x0000020000378806 : mov al, 2 ; ret
0x000002000010a88f : mov al, 3 ; add byte ptr [rax], al ; ret
0x0000020000378803 : mov al, 4 ; ret
0x000002000000e0d2 : mov al, 6 ; ret
0x0000020000378800 : mov al, 8 ; ret
0x000002000072d9a0 : mov al, al ; add rsp, 0x10 ; pop rbx ; ret
0x0000020000109758 : mov al, al ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008cb3c : mov al, al ; add rsp, 0x28 ; ret
0x000002000068f76a : mov al, al ; inc dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x344
0x00000200004acc5f : mov al, al ; pop r15 ; pop r14 ; ret
0x000002000008a17a : mov al, al ; ret
0x000002000044f9e8 : mov al, bh ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x00000200000d5028 : mov al, bh ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041f6c1 : mov al, bh ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005e77e6 : mov al, bh ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ed344 : mov al, bh ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200003e2c73 : mov al, bh ; ret
0x0000020000568dc0 : mov al, bh ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x0000020000063dc7 : mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000414057 : mov al, bl ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000096649 : mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005be00b : mov al, bl ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000020fda4 : mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000011eff9 : mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000464855 : mov al, bl ; call r12
0x0000020000507068 : mov al, bl ; jmp 0x20000507032
0x000002000014c952 : mov al, bl ; ret
0x00000200001118f8 : mov al, byte ptr [r8 + 0xf0] ; ret
0x0000020000520563 : mov al, byte ptr [r8 + rax] ; ret
0x00000200006180b3 : mov al, byte ptr [r8] ; cmp al, r9b ; jae 0x20000618088 ; ret
0x000002000013fed3 : mov al, byte ptr [r8] ; test al, al ; jne 0x2000013feaf ; xor eax, eax ; ret
0x000002000052057e : mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200000b4945 : mov al, byte ptr [rax + 0x232] ; ret
0x00000200001118f9 : mov al, byte ptr [rax + 0xf0] ; ret
0x00000200000f4883 : mov al, byte ptr [rax + 6] ; test al, 8 ; jne 0x200000f4896 ; mov eax, ecx ; ret
0x0000020000520564 : mov al, byte ptr [rax + rax] ; ret
0x00000200004ad6bc : mov al, byte ptr [rax + rcx + 8] ; shr al, 3 ; and al, 1 ; ret
0x0000020000026aa6 : mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x0000020000026aa2 : mov al, byte ptr [rax + rcx*2] ; ret
0x000002000012e1d1 : mov al, byte ptr [rax + rcx] ; ret
0x0000020000534eae : mov al, byte ptr [rax + rdx + 0x654050] ; ret
0x000002000038a7e2 : mov al, byte ptr [rax + rdx + 0x6a94f8] ; ret
0x00000200003844ca : mov al, byte ptr [rax] ; add al, al ; jmp 0x20000384497
0x000002000036afed : mov al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006180b4 : mov al, byte ptr [rax] ; cmp al, r9b ; jae 0x20000618087 ; ret
0x000002000013fed4 : mov al, byte ptr [rax] ; test al, al ; jne 0x2000013feae ; xor eax, eax ; ret
0x000002000067caf7 : mov al, byte ptr [rbp - 0x33] ; jmp qword ptr [rcx]
0x0000020000719333 : mov al, byte ptr [rcx + 0x1e] ; mov byte ptr [rip - 0x6f0cd], al ; ret
0x00000200000960e0 : mov al, byte ptr [rcx + 0x20] ; test al, 1 ; jne 0x200000960ef ; ret
0x0000020000205a38 : mov al, byte ptr [rcx + 0x447] ; ret
0x0000020000205b21 : mov al, byte ptr [rcx + 0x678] ; ret
0x00000200001063dc : mov al, byte ptr [rcx + 0x67a] ; ret
0x000002000052057f : mov al, byte ptr [rcx + rax - 0x80] ; ret
0x0000020000586741 : mov al, byte ptr [rcx + rax] ; ret
0x00000200005ceecc : mov al, byte ptr [rcx - 0x18] ; shr al, 3 ; and al, 1 ; ret
0x00000200004a9ae8 : mov al, byte ptr [rcx - 0x18] ; shr al, 4 ; and al, 1 ; ret
0x000002000020b724 : mov al, byte ptr [rcx] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x49f0
0x000002000015e1b8 : mov al, byte ptr [rcx] ; mov byte ptr [rip + 0x150d80], al ; ret
0x000002000015e38c : mov al, byte ptr [rcx] ; ret
0x00000200004914b3 : mov al, byte ptr [rdx + rcx] ; ret
0x000002000015e298 : mov al, byte ptr [rip + 0x144cf2] ; ret
0x00000200004c7420 : mov al, byte ptr [rip + 0x1e2d52] ; ret
0x000002000015e208 : mov al, byte ptr [rip + 0x1f3616] ; ret
0x000002000012f944 : mov al, byte ptr [rip + 0x2218a2] ; ret
0x0000020000178356 : mov al, byte ptr [rip - 0x74bb0000] ; ret 0x8348
0x00000200000e9160 : mov al, byte ptr [rip - 0x79f10000] ; sysenter
0x0000020000182728 : mov al, byte ptr [rip - 0x7ab30000] ; in al, 0x74 ; ret 0xb848
0x000002000036a174 : mov al, byte ptr [rip - 0xc4d10] ; ret
0x00000200000b786b : mov al, byte ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000011dda2 : mov al, byte ptr [rsp + 0x32] ; add rsp, 0x28 ; ret
0x0000020000432506 : mov al, byte ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000063f543 : mov al, ch ; call qword ptr [rax]
0x000002000056d2ac : mov al, ch ; imul ah ; push rsi ; ret
0x000002000020a125 : mov al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c9337 : mov al, cl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c3e86 : mov al, cl ; add rsp, 0x28 ; ret
0x000002000008fcc7 : mov al, cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200002318da : mov al, cl ; add rsp, 0x38 ; ret
0x00000200001fc238 : mov al, cl ; add rsp, 0x48 ; ret
0x000002000008a5be : mov al, cl ; ret
0x000002000020b182 : mov al, dh ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000151d46 : mov al, dh ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000583e2b : mov al, dh ; push rsi ; ret
0x00000200000d5027 : mov al, dil ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041f6c0 : mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006e849a : mov al, dl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x000002000004d457 : mov al, dl ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022fce7 : mov al, dl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009d666 : mov al, dl ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000081891 : mov al, dl ; add rsp, 0x28 ; ret
0x000002000008e072 : mov al, dl ; add rsp, 0x30 ; pop r14 ; ret
0x000002000072f0b4 : mov al, dl ; add rsp, 0x38 ; ret
0x0000020000402ff1 : mov al, dl ; add rsp, 0x58 ; ret
0x00000200007285eb : mov al, dl ; dec dword ptr [rbx + rcx*4 + 0x3d] ; jnp 0x20000728587 ; ret 0xebff
0x000002000002a804 : mov al, dl ; jmp 0x2000002a7a4
0x00000200001cd77f : mov al, dl ; jmp 0x200001cd7cb
0x0000020000227103 : mov al, dl ; jmp 0x20000227110
0x000002000015e390 : mov al, dl ; movzx edx, cx ; out dx, al ; ret
0x0000020000118222 : mov al, dl ; pop r15 ; pop r14 ; ret
0x000002000008e4ea : mov al, dl ; ret
0x000002000022fce6 : mov al, r10b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000acdf4 : mov al, r10b ; add rsp, 0x28 ; ret
0x000002000008e071 : mov al, r10b ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000402ff0 : mov al, r10b ; add rsp, 0x58 ; ret
0x0000020000118221 : mov al, r10b ; pop r15 ; pop r14 ; ret
0x00000200000f9f7e : mov al, r10b ; ret
0x0000020000094b92 : mov al, r11b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000414056 : mov al, r11b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000507067 : mov al, r11b ; jmp 0x20000507033
0x000002000014c951 : mov al, r11b ; ret
0x000002000020b181 : mov al, r14b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000072d99f : mov al, r8b ; add rsp, 0x10 ; pop rbx ; ret
0x0000020000109757 : mov al, r8b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008cb3b : mov al, r8b ; add rsp, 0x28 ; ret
0x00000200004acc5e : mov al, r8b ; pop r15 ; pop r14 ; ret
0x000002000008a179 : mov al, r8b ; ret
0x00000200004c9336 : mov al, r9b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001da6dc : mov al, r9b ; add rsp, 0x28 ; ret
0x000002000008fcc6 : mov al, r9b ; add rsp, 0x30 ; pop rbx ; ret
0x00000200002318d9 : mov al, r9b ; add rsp, 0x38 ; ret
0x000002000008a5bd : mov al, r9b ; ret
0x0000020000151d45 : mov al, sil ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006685fa : mov ax, word ptr [rdx] ; add byte ptr [rcx - 1], al ; ret
0x000002000039300b : mov bh, 0 ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x00000200001421d0 : mov bh, 0 ; test ax, ax ; jne 0x200001421a2 ; xor eax, eax ; ret
0x000002000062a2e2 : mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x000002000040edeb : mov bh, 0x14 ; or al, byte ptr [rbp + 0x3b] ; ret 0x1174
0x0000020000511649 : mov bh, 0x15 ; adc dword ptr [rdx], ebx ; fcos ; call 0x20000139aa5
0x00000200006712f9 : mov bh, 0x16 ; ret
0x00000200001d930c : mov bh, 0x17 ; add byte ptr [rbx], al ; ret 0x48b
0x00000200006004dd : mov bh, 0x28 ; ret
0x00000200003eeab1 : mov bh, 0x2b ; add dh, dh ; ret
0x000002000072188d : mov bh, 0x3d ; jne 0x2000072188c ; ret 0x45ff
0x00000200000b4511 : mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x0000020000027539 : mov bh, 0x40 ; adc ch, cl ; ret
0x00000200003ac179 : mov bh, 0x40 ; add al, byte ptr [rbx + 0x234103c0] ; ret
0x000002000036ed04 : mov bh, 0x40 ; add al, byte ptr [rcx + 0x3b] ; ret
0x00000200003aae76 : mov bh, 0x40 ; add al, byte ptr [rcx - 1] ; ret 0x34c
0x000002000049792d : mov bh, 0x40 ; sub byte ptr [rbx], al ; ret 0x518d
0x00000200000339ea : mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x34c
0x00000200001c5411 : mov bh, 0x41 ; or al, 0x66 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000653573 : mov bh, 0x41 ; or bh, bh ; ret 0x341
0x00000200006ed9f3 : mov bh, 0x41 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200000f500d : mov bh, 0x41 ; ret
0x00000200000eb161 : mov bh, 0x42 ; adc byte ptr [rcx + 0x3b], al ; ret 0x6873
0x000002000047a80f : mov bh, 0x42 ; add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x00000200000e61e2 : mov bh, 0x42 ; add bh, bh ; ret 0x349
0x00000200004a6381 : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000053566d : mov bh, 0x42 ; or byte ptr [rbx + rcx*4 - 0x7c], cl ; ret
0x00000200005b2ffb : mov bh, 0x42 ; sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x00000200005d718c : mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200001364d7 : mov bh, 0x43 ; add al, byte ptr [rdi + rcx - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200003ab313 : mov bh, 0x43 ; add bh, bh ; ret 0x348
0x00000200005404f4 : mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200001bc7b6 : mov bh, 0x43 ; or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x000002000043f59f : mov bh, 0x44 ; and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000019906e : mov bh, 0x44 ; ret
0x000002000020eff5 : mov bh, 0x44 ; ret 0x410c
0x0000020000207432 : mov bh, 0x44 ; ret 0xeb0c
0x000002000065319e : mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x0000020000380f1a : mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000653ccf : mov bh, 0x45 ; fbld dword ptr [rsi + 0x23] ; ret 0xb66
0x0000020000052288 : mov bh, 0x45 ; ret 0xc80b
0x000002000002dee4 : mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200004da594 : mov bh, 0x46 ; add cl, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x000002000002c5fc : mov bh, 0x47 ; add ah, byte ptr [rsi - 0x7b] ; ret 0x840f
0x00000200003ab4d4 : mov bh, 0x47 ; add cl, byte ptr [rax + 0x2b] ; ret
0x00000200003a164c : mov bh, 0x47 ; add cl, byte ptr [rax + 3] ; ret
0x000002000002a394 : mov bh, 0x47 ; or byte ptr [rax - 0x4b], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x0000020000165df7 : mov bh, 0x47 ; or byte ptr [rax - 0x75], cl ; ret
0x000002000002999b : mov bh, 0x47 ; or byte ptr [rbp + 0x33], al ; dec dword ptr [rdx - 0x75] ; push rsp ; ret
0x0000020000133090 : mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x000002000053e1c8 : mov bh, 0x48 ; add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x00000200003a99fe : mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200005160fc : mov bh, 0x48 ; lea edx, dword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x0000020000218037 : mov bh, 0x49 ; mov ecx, edi ; mov word ptr [rbp - 0x3d], ax ; call r9
0x000002000061eca8 : mov bh, 0x4a ; add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x00000200004b7559 : mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x0000020000564298 : mov bh, 0x4b ; add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x0000020000547789 : mov bh, 0x4c ; add byte ptr [r9 - 0x75], r8b ; ret 0xe8c1
0x000002000053e5b1 : mov bh, 0x50 ; add dh, dh ; ret 0x7404
0x00000200004419f4 : mov bh, 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200001356d4 : mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x00000200000f5ec2 : mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200001b29f1 : mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x000002000059a09f : mov bh, 0x51 ; sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x00000200005d7188 : mov bh, 0x53 ; add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200000e4bc8 : mov bh, 0x53 ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x00000200004b7555 : mov bh, 0x53 ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200005dd517 : mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000063c55c : mov bh, 0x55 ; loopne 0x2000063c567 ; ret 0xc13b
0x000002000037daf6 : mov bh, 0x56 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x000002000037da77 : mov bh, 0x56 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x000002000053eede : mov bh, 0x57 ; add dh, dh ; ret 0xf10
0x00000200001fd9f5 : mov bh, 0x57 ; cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200006e509b : mov bh, 0x58 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200000c0130 : mov bh, 0x5d ; rol byte ptr [rbp + 0x33], 1 ; ror byte ptr [rax - 0x73], 0x3d ; ret
0x0000020000121b86 : mov bh, 0x5d ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x00000200003a3dd3 : mov bh, 0x5e ; add al, byte ptr [rcx - 0x7d] ; ret
0x00000200006821a7 : mov bh, 0x5f ; or dh, dh ; ret
0x00000200001d2d55 : mov bh, 0x60 ; idiv edi ; add rsp, 0x58 ; ret
0x0000020000713acd : mov bh, 0x67 ; ret
0x00000200005fe3d5 : mov bh, 0x6d ; ret 0x44ff
0x0000020000142351 : mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200005767a0 : mov bh, 0x82 ; clc ; add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x00000200003b0eb6 : mov bh, 0x84 ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4950
0x00000200000e9b79 : mov bh, 0x84 ; xchg eax, edi ; ret 0x56
0x00000200003f3443 : mov bh, 0x86 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x00000200000c27a1 : mov bh, 0x88 ; add byte ptr [rax], al ; add bl, ch ; ret 0x8548
0x000002000068f2a7 : mov bh, 0x8b ; ret 0x8348
0x000002000012e5fb : mov bh, 0x8b ; ret 0xf18b
0x0000020000588c23 : mov bh, 0x8f ; adc al, byte ptr [rcx] ; add byte ptr [rax], al ; call qword ptr [rip + 0xcc201]
0x0000020000728351 : mov bh, 0x94 ; ret 0xe9ff
0x000002000042f52b : mov bh, 0x99 ; adc eax, dword ptr [rax] ; ret
0x0000020000142092 : mov bh, 0xa ; sub eax, ecx ; ret
0x00000200005333c5 : mov bh, 0xa4 ; ret 0x44ff
0x000002000038212d : mov bh, 0xb ; mov word ptr [r15], cx ; jmp 0x200003820ff
0x0000020000506aed : mov bh, 0xb ; ret
0x0000020000030494 : mov bh, 0xc ; ret 0x8b44
0x0000020000035479 : mov bh, 0xc ; ret 0xc1ff
0x0000020000109f9f : mov bh, 0xc0 ; and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x000002000022ee83 : mov bh, 0xc0 ; cmp eax, 0x50 ; jmp 0x2000022ee53
0x00000200001481f2 : mov bh, 0xc0 ; ret
0x00000200000960ba : mov bh, 0xc0 ; shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x20000096090
0x0000020000140af7 : mov bh, 0xc0 ; sub eax, ecx ; ret
0x0000020000611a4f : mov bh, 0xc1 ; add eax, 0x20 ; ret
0x0000020000616b98 : mov bh, 0xc1 ; add eax, r10d ; jmp 0x20000616ba6
0x00000200001441a3 : mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x000002000038fedf : mov bh, 0xc1 ; ret
0x000002000038ff24 : mov bh, 0xc1 ; sub eax, 0x20 ; ret
0x0000020000143fc9 : mov bh, 0xc1 ; sub eax, edx ; ret
0x000002000061cc02 : mov bh, 0xc2 ; jmp 0x2000061cc78
0x00000200001d965e : mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x000002000013fd16 : mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000482d19 : mov bh, 0xc2 ; test eax, eax ; js 0x20000482d2a ; xor eax, eax ; ret
0x0000020000141e98 : mov bh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000662237 : mov bh, 0xc4 ; push qword ptr [rbp + 1] ; ret
0x000002000019eb4a : mov bh, 0xc6 ; call r10
0x00000200000e7e36 : mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d04fc : mov bh, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c676d : mov bh, 0xc8 ; call r9
0x00000200000b4cd5 : mov bh, 0xc8 ; sub dword ptr [rax], eax ; call rax
0x000002000058673f : mov bh, 0xc9 ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000140af3 : mov bh, 0xc9 ; movzx eax, r8w ; sub eax, ecx ; ret
0x0000020000617b00 : mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000140b94 : mov bh, 0xc9 ; sub r9d, eax ; mov eax, r9d ; ret
0x0000020000142b4d : mov bh, 0xca ; and eax, ecx ; ret
0x00000200006f5681 : mov bh, 0xcb ; call rax
0x00000200004b42af : mov bh, 0xcb ; mov rax, qword ptr [rip + 0x1a0b78] ; call rax
0x0000020000393cc9 : mov bh, 0xcd ; call 0x2000038fed8
0x000002000072c3dc : mov bh, 0xd ; ret 0x8bff
0x000002000015e385 : mov bh, 0xd1 ; in al, dx ; ret
0x000002000015e393 : mov bh, 0xd1 ; out dx, al ; ret
0x0000020000235ef0 : mov bh, 0xd3 ; mov qword ptr [rsp + 0x20], rax ; call 0x2000013211d
0x0000020000713a65 : mov bh, 0xde ; ret
0x000002000043b115 : mov bh, 0xde ; ret 0x33ff
0x00000200000d32ed : mov bh, 0xe8 ; add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x00000200005738fe : mov bh, 0xed ; dec dword ptr [rbp - 0x75] ; ret 0x8a40
0x00000200005738e2 : mov bh, 0xed ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001ddf2d : mov bh, 0xed ; jrcxz 0x200001ddf36 ; call 0x2000008a166
0x000002000043b855 : mov bh, 0xed ; ret 0x4cff
0x00000200005cc5a6 : mov bh, 0xff ; add rsp, 0x148 ; ret
0x00000200004b4986 : mov bh, 0xff ; add rsp, 0x28 ; ret
0x00000200004b6ec5 : mov bh, 0xff ; jmp 0x200004b6e79
0x0000020000724127 : mov bh, 0xff ; jmp 0x20000700382
0x000002000050dc2d : mov bh, 0xff ; lea rcx, qword ptr [rbp - 0x30] ; call 0x200001396cd
0x00000200004914b1 : mov bh, 0xff ; mov al, byte ptr [rdx + rcx] ; ret
0x00000200005d5dc8 : mov bh, 0xff ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000545c31 : mov bh, 0xff ; nop ; jmp 0x200003c1f13
0x0000020000554e49 : mov bh, 0xff ; nop ; jmp 0x200003f1140
0x00000200007240a0 : mov bh, 0xff ; nop ; jmp 0x200007002af
0x00000200001e0546 : mov bh, 0xff ; ret
0x0000020000147986 : mov bh, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x200001479b4
0x000002000014208f : mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x000002000014d89f : mov bh, 1 ; test ax, ax ; jne 0x2000014d884 ; xor eax, eax ; ret
0x00000200001815d1 : mov bh, 2 ; mov rcx, r14 ; call 0x2000015d887
0x000002000046c17f : mov bh, 2 ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x0000020000241005 : mov bh, 4 ; add al, ch ; jmp qword ptr [rbx]
0x0000020000140f9e : mov bh, 4 ; and rax, 0x157 ; ret
0x0000020000140ffe : mov bh, 4 ; and rax, 0x80 ; ret
0x0000020000140fde : mov bh, 4 ; and rax, 1 ; ret
0x0000020000140f7e : mov bh, 4 ; and rax, 2 ; ret
0x0000020000140f5e : mov bh, 4 ; and rax, 4 ; ret
0x0000020000140fbe : mov bh, 4 ; and rax, 8 ; ret
0x00000200005ad6c2 : mov bh, 4 ; cmp dword ptr [rsi - 0x7b], esp ; ret 0x375
0x00000200003db3eb : mov bh, 4 ; imul eax, r10d ; ret
0x00000200003da95e : mov bh, 4 ; imul eax, r9d ; ret
0x0000020000142b49 : mov bh, 4 ; movzx rcx, dx ; and eax, ecx ; ret
0x00000200001a21ce : mov bh, 4 ; ret
0x0000020000215532 : mov bh, 4 ; sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000071f6ef : mov bh, 5 ; adc ebx, dword ptr [rcx] ; ret
0x00000200000ea260 : mov bh, 5 ; out dx, al ; insd dword ptr [rdi], dx ; add byte ptr es:[rbp + 1], dh ; ret
0x00000200000f494d : mov bh, 5 ; ret
0x0000020000721771 : mov bh, 5 ; xchg eax, ecx ; clc ; ret 0x66ff
0x000002000022950f : mov bh, 7 ; add dh, dh ; ret
0x000002000038346e : mov bh, 7 ; cmp rcx, rax ; jne 0x20000383481 ; mov eax, edx ; jmp 0x20000383436
0x00000200007093a3 : mov bh, al ; ret
0x00000200000e6124 : mov bh, bh ; ret
0x00000200004481ff : mov bh, byte ptr [rsi - 0x9e97401] ; ret 0xf01
0x0000020000586699 : mov bh, dh ; jmp 0x200004928d4
0x000002000006e72c : mov bl, 0x10 ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret
0x0000020000103735 : mov bl, 0x10 ; ret
0x0000020000139ac9 : mov bl, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003ffdd9 : mov bl, 0x16 ; ret
0x0000020000095cd7 : mov bl, 0x2b ; add byte ptr [rcx], al ; jne 0x20000095cfb ; lock dec dword ptr [rcx] ; ret
0x0000020000105f59 : mov bl, 0x2e ; add al, 0 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004a0079 : mov bl, 0x38 ; ret 0x85ff
0x000002000000d738 : mov bl, 0x3b ; sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x2000000d76b ; ret 0x23e8
0x000002000000f510 : mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x00000200006792c8 : mov bl, 0x46 ; ret
0x0000020000029566 : mov bl, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000043a60f : mov bl, 0x48 ; mov ecx, esi ; call 0x20000068fd7
0x0000020000443a19 : mov bl, 0x4e ; call 0x1ffc3478325
0x00000200006cac74 : mov bl, 0x58 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200004d0035 : mov bl, 0x5b ; ret 0x45ff
0x000002000000d0de : mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x0000020000722791 : mov bl, 0x66 ; std ; inc dword ptr [rax + rcx*4 + 0x2d] ; sub edx, ebp ; ret 0x44ff
0x00000200005d053b : mov bl, 0x6a ; add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x0000020000432519 : mov bl, 0x6a ; ret
0x0000020000439a89 : mov bl, 0x6d ; ret
0x0000020000675c68 : mov bl, 0x7a ; ret
0x000002000072957d : mov bl, 0x7a ; ret 0x41ff
0x00000200001542d7 : mov bl, 0x8c ; ret 0x110
0x0000020000728395 : mov bl, 0x8d ; ret 0xe9ff
0x00000200001d159b : mov bl, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000020000667ae1 : mov bl, 0xa7 ; ret
0x00000200001de411 : mov bl, 0xb0 ; add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200006754ce : mov bl, 0xbb ; int 0xff
0x00000200006750fd : mov bl, 0xbf ; add dword ptr [rax], eax ; ret
0x0000020000648c2a : mov bl, 0xc4 ; jmp qword ptr [rcx]
0x0000020000014a49 : mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x00000200006712f0 : mov bl, 0xc4 ; ret
0x0000020000675d23 : mov bl, 0xcd ; jmp qword ptr [rcx]
0x00000200000b2523 : mov bl, 0xd ; add byte ptr [rbx - 0x7bf0f807], al ; ret
0x000002000065a1e9 : mov bl, 0xd9 ; ret
0x00000200007229c1 : mov bl, 0xe6 ; ret 0xa8ff
0x0000020000722b41 : mov bl, 0xe9 ; ret 0xe9ff
0x0000020000722771 : mov bl, 0xf1 ; ret 0x48ff
0x00000200001aae85 : mov bl, 0xf6 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000049f436 : mov bl, 0xf6 ; ret 0x7520
0x000002000060bb6e : mov bl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x000002000060c53d : mov bl, 0xff ; add rsp, 0x48 ; ret
0x0000020000608f6a : mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000609903 : mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000609399 : mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000060d067 : mov bl, 0xff ; add rsp, 0x78 ; ret
0x000002000060d301 : mov bl, 0xff ; add rsp, 0xc8 ; ret
0x000002000052e247 : mov bl, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000053087c : mov bl, 0xff ; nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000530795 : mov bl, 0xff ; nop ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200005328dc : mov bl, 0xff ; nop ; jmp 0x20000384763
0x0000020000580148 : mov bl, 0xff ; nop ; jmp 0x2000047c3d3
0x00000200005801cf : mov bl, 0xff ; nop ; jmp 0x2000047c450
0x000002000011eff7 : mov bl, 1 ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000240fdd : mov bl, 4 ; add byte ptr [rbx], ah ; mov ah, 4 ; add al, al ; jmp qword ptr [rbx]
0x000002000055de00 : mov bl, 9 ; add dh, dh ; ret
0x00000200005c5ea4 : mov bl, al ; add byte ptr [rax], al ; add al, ch ; ret 0xffd1
0x00000200003e0eba : mov bl, al ; call 0x200003ad190
0x000002000009db1a : mov bl, al ; call rsi
0x00000200006733fc : mov bl, al ; mov eax, 0xc0000002 ; ret
0x0000020000208555 : mov bl, bh ; inc dword ptr [rcx - 0x7d] ; ret
0x000002000051e554 : mov bl, bh ; ret 0x85ff
0x0000020000412ec0 : mov bl, bl ; ret 0x14
0x00000200006fd3e0 : mov bl, byte ptr [rdi + 2] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000580110 : mov bl, ch ; ret
0x00000200001d77c6 : mov bl, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001caf82 : mov bl, dh ; idiv edi ; add rsp, 0x78 ; ret
0x000002000050a00c : mov byte ptr [r10 + 0x10], r8b ; test dl, dl ; jne 0x2000050a01d ; ret
0x000002000050a03b : mov byte ptr [r10 + 0x30], dl ; ret
0x000002000011d284 : mov byte ptr [r10 + 0x5f], r11b ; ret
0x00000200004c5ef9 : mov byte ptr [r10 + rcx*2 + 0x2a84a0], r11b ; mov al, dl ; ret
0x0000020000235494 : mov byte ptr [r10], 0x2e ; call r10
0x0000020000144895 : mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x200001448b7
0x00000200000fcd46 : mov byte ptr [r11 + 0xc9], al ; ret
0x00000200003aa655 : mov byte ptr [r11], r14b ; shr al, cl ; ret 0xeea7
0x000002000015dd34 : mov byte ptr [r8 + 0x10], 0 ; ret
0x00000200000d7da7 : mov byte ptr [r8 + 4], r9b ; ret
0x00000200003da4e5 : mov byte ptr [r8 - 0x3f], r9b ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000042693e : mov byte ptr [r8], al ; xor eax, eax ; ret
0x000002000052054e : mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x000002000050702c : mov byte ptr [r8], r9b ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001ab2a0 : mov byte ptr [r9 + 0x31], dl ; ret
0x0000020000520551 : mov byte ptr [r9], al ; ret
0x00000200000ec306 : mov byte ptr [r9], al ; xor eax, eax ; ret
0x000002000015dd35 : mov byte ptr [rax + 0x10], 0 ; ret
0x00000200000d5456 : mov byte ptr [rax + 0x289], cl ; mov rax, rdx ; jmp 0x200000d53eb
0x0000020000520477 : mov byte ptr [rax + 0xd0], 0 ; xor eax, eax ; ret
0x00000200001fb9e2 : mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200001fdbb7 : mov byte ptr [rax + 3], cl ; mov qword ptr [rax + 0x28], r9 ; ret
0x00000200001fdbb6 : mov byte ptr [rax + 3], r9b ; mov qword ptr [rax + 0x28], r9 ; ret
0x00000200000d7da8 : mov byte ptr [rax + 4], cl ; ret
0x00000200000f5007 : mov byte ptr [rax + 6], al ; add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x44] ; ret
0x0000020000035e7f : mov byte ptr [rax + 6], ch ; add byte ptr [rax], al ; ret
0x000002000044efdc : mov byte ptr [rax + rax], al ; add byte ptr [rcx - 0x76], dh ; ret 0xe8c0
0x00000200001005b1 : mov byte ptr [rax + rax], al ; add rsp, 0x68 ; ret
0x0000020000043fcc : mov byte ptr [rax + rax], ch ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000002000015dc01 : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x2000015dc09 ; ret
0x000002000015dcaf : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x2000015dcb7 ; ret
0x0000020000643c2a : mov byte ptr [rax + rcx*2], 0x63 ; ret
0x00000200006cc0e5 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000200004a1923 : mov byte ptr [rax - 0x17000002], al ; xchg eax, ebx ; ret 0xffcb
0x0000020000473c19 : mov byte ptr [rax - 0x18000000], bh ; cwde ; ret 0x8bff
0x000002000057fe0f : mov byte ptr [rax - 0x18000000], bh ; ret
0x000002000047199c : mov byte ptr [rax - 0x18000000], bh ; ret 0xc2ba
0x0000020000471211 : mov byte ptr [rax - 0x18000000], bh ; ret 0xffc2
0x00000200003da4e6 : mov byte ptr [rax - 0x3f], cl ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000011e42c : mov byte ptr [rax - 0x73], cl ; dec dword ptr [r8 + 3] ; ret 0x3b48
0x00000200004d19cf : mov byte ptr [rax - 0x74fff363], ch ; ret
0x00000200004f36ad : mov byte ptr [rax - 0x74fff4c2], ah ; ret
0x000002000072fb82 : mov byte ptr [rax - 0x74fffff9], ah ; ret
0x00000200003b3a8c : mov byte ptr [rax - 0x74ffffff], dl ; ret
0x00000200001e053f : mov byte ptr [rax - 0x75000000], al ; mov r15b, 0xff ; ret
0x000002000038f4f0 : mov byte ptr [rax - 0x75], cl ; ret
0x0000020000442b16 : mov byte ptr [rax - 0x7b], cl ; leave ; je 0x20000442b2a ; call 0x20000068fd9
0x00000200003a8616 : mov byte ptr [rax - 0x7f], cl ; ret
0x00000200004d3434 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000e4723 : mov byte ptr [rax], 0 ; jmp 0x200000e46ef
0x000002000014fe9b : mov byte ptr [rax], 0 ; ret
0x000002000061ccbb : mov byte ptr [rax], 1 ; ret
0x00000200001c12da : mov byte ptr [rax], al ; adc al, 0 ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x0000020000145738 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001d5d69 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000453221 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000007498b
0x00000200003e959e : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200003e584e
0x00000200001c592a : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r9
0x000002000009ba35 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000200006d4e5a : mov byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000002000065d13f : mov byte ptr [rax], al ; add byte ptr [rax], al ; dec r9 ; jne 0x2000065d133 ; ret
0x00000200000c27a2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x200000c276f
0x000002000036f5b7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop r14 ; ret
0x0000020000045724 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x00000200001e0f71 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000200005d9e1b : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002c2ef : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000015e353 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200005198de : mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000452622 : mov byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x000002000042693f : mov byte ptr [rax], al ; xor eax, eax ; ret
0x00000200003e2d33 : mov byte ptr [rax], bh ; ret
0x0000020000486c53 : mov byte ptr [rax], bl ; ret
0x00000200004130b0 : mov byte ptr [rax], ch ; ret 0x14
0x00000200000d66d5 : mov byte ptr [rax], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052054f : mov byte ptr [rax], cl ; mov byte ptr [r9], al ; ret
0x000002000050702d : mov byte ptr [rax], cl ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000d0c0f : mov byte ptr [rax], cl ; ret
0x00000200004538f8 : mov byte ptr [rax], dl ; ret 0x49ff
0x00000200001baca9 : mov byte ptr [rbp + 0x1f], al ; jmp 0x2000013e1e6
0x00000200004d405d : mov byte ptr [rbp + 0x3a], ch ; call 0x200000702b5
0x00000200004d405c : mov byte ptr [rbp + 0x3a], r13b ; call 0x200000702b6
0x00000200000a386a : mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200002948de : mov byte ptr [rbp + 0xf], 0x22 ; ret 0x41f0
0x00000200000a090a : mov byte ptr [rbp + 0xf], 0x22 ; ret 0xed33
0x000002000013435c : mov byte ptr [rbp + 0xf], 0xaf ; ret 0xf741
0x000002000070c969 : mov byte ptr [rbp + rbx*4 - 0x74bbffff], dl ; ret
0x0000020000007952 : mov byte ptr [rbp - 0x3a], ah ; xchg eax, edi ; ret
0x00000200004ea8ae : mov byte ptr [rbp - 0x74b7fff5], dl ; ret 0x8b48
0x00000200004b9b32 : mov byte ptr [rbp - 0x74fff260], cl ; ret
0x0000020000048c26 : mov byte ptr [rbp - 0x76], 0x88 ; ret
0x00000200001b2a96 : mov byte ptr [rbp - 0x7e], cl ; jmp 0x2000012c1f6
0x00000200001b2a95 : mov byte ptr [rbp - 0x7e], r9b ; jmp 0x2000012c1f7
0x00000200003c4ac4 : mov byte ptr [rbp - 0x80], bh ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000008e508 : mov byte ptr [rbx + 0x18], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ed1f1 : mov byte ptr [rbx + 0x1a], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f8fd4 : mov byte ptr [rbx + 0x1b], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fa987 : mov byte ptr [rbx + 0x1f], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001144b2 : mov byte ptr [rbx + 0x1f], al ; jmp 0x200001144ab
0x00000200001db133 : mov byte ptr [rbx + 0x38], 2 ; call r8
0x0000020000484b14 : mov byte ptr [rbx + 0x41000fda], dl ; mov al, al ; ret
0x00000200001ab5cb : mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200001ab5cc : mov byte ptr [rbx + 0x45], ch ; call rsi
0x000002000041571a : mov byte ptr [rbx + 0x480014a4], dl ; add esp, 0x38 ; ret
0x00000200000fcd47 : mov byte ptr [rbx + 0xc9], al ; ret
0x00000200000b8a59 : mov byte ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ff565 : mov byte ptr [rbx + 8], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014d85c : mov byte ptr [rbx + rbp - 0x38], 0x41 ; mov eax, ecx ; ret
0x0000020000397981 : mov byte ptr [rbx + rcx*4 + 0x45], cl ; adc byte ptr [rcx - 1], al ; ret 0x8349
0x000002000062f5f2 : mov byte ptr [rbx + rcx*4 - 0x32], 0x8b ; ret
0x00000200004fef57 : mov byte ptr [rbx - 0x1000000], dl ; ret
0x0000020000730033 : mov byte ptr [rbx - 0x49], dl ; inc dword ptr [rax] ; ret
0x0000020000613da3 : mov byte ptr [rbx - 0xfffffe], ah ; ret 0x3b41
0x0000020000575242 : mov byte ptr [rbx], ah ; ret 0xffed
0x00000200000e7e53 : mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011d71a : mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003fff1a : mov byte ptr [rbx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000248e8 : mov byte ptr [rbx], bh ; call qword ptr [rbx]
0x000002000000d283 : mov byte ptr [rbx], bh ; jmp rax
0x00000200004a6a92 : mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003e2d60 : mov byte ptr [rbx], cl ; ret
0x00000200000687eb : mov byte ptr [rbx], cl ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000149f54 : mov byte ptr [rbx], dh ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x00000200003aa656 : mov byte ptr [rbx], dh ; shr al, cl ; ret 0xeea7
0x000002000010adc5 : mov byte ptr [rcx + 0x10], al ; mov dword ptr [rcx + 0x58], eax ; ret
0x000002000009de40 : mov byte ptr [rcx + 0x185], dl ; ret
0x00000200001ab2a1 : mov byte ptr [rcx + 0x31], dl ; ret
0x00000200005d1700 : mov byte ptr [rcx + 0x32], 0xc0 ; mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x0000020000627e6d : mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x0000020000205a98 : mov byte ptr [rcx + 0x447], dl ; ret
0x00000200000d5457 : mov byte ptr [rcx + 0x48000002], cl ; mov eax, edx ; jmp 0x200000d53ea
0x00000200004ee6a3 : mov byte ptr [rcx + 0x48], 0 ; ret
0x000002000004c925 : mov byte ptr [rcx + 0x52], dl ; ret
0x000002000015e168 : mov byte ptr [rcx + 0x54c8], 0 ; xor eax, eax ; ret
0x000002000015e0fb : mov byte ptr [rcx + 0x54d0], 0 ; xor eax, eax ; ret
0x000002000015e2ee : mov byte ptr [rcx + 0x58], 1 ; xor eax, eax ; ret
0x000002000009de99 : mov byte ptr [rcx + 0x58a], 6 ; ret
0x000002000015e02c : mov byte ptr [rcx + 0x88], 1 ; ret
0x00000200000a4e8e : mov byte ptr [rcx + 0x8e], al ; ret
0x00000200001de44f : mov byte ptr [rcx + 0xc1], 0 ; ret
0x00000200003ae0da : mov byte ptr [rcx + 1], al ; mov dword ptr [rcx + 4], eax ; ret
0x0000020000122af4 : mov byte ptr [rcx + 1], dl ; ret
0x000002000009bb27 : mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200005d6a36 : mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200001bdad1 : mov byte ptr [rcx + 4], al ; ret
0x00000200005d1704 : mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x00000200006d91f1 : mov byte ptr [rcx + rcx*2], 0x83 ; ret
0x000002000022f799 : mov byte ptr [rcx + rdx + 0x1c], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000141a88 : mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x0000020000062517 : mov byte ptr [rcx - 0x1000000], al ; ret 0x8348
0x0000020000557769 : mov byte ptr [rcx - 0x16], cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ff6c6 : mov byte ptr [rcx - 0x73], 0x55 ; add dword ptr [rdi + rcx + 0x22], eax ; ret 0xff0
0x0000020000440d8a : mov byte ptr [rcx - 0x74bbffee], dh ; ret
0x000002000002961b : mov byte ptr [rcx - 0x75], 0xc2 ; jmp 0x200000295fb
0x000002000011f7d8 : mov byte ptr [rcx - 0x7d], 0xc2 ; add al, 0xff ; ret 0x5489
0x000002000015d8c9 : mov byte ptr [rcx - 1], al ; jne 0x2000015d8c8 ; mov rax, r11 ; ret
0x00000200001319f8 : mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x00000200001da4e9 : mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200000778ad : mov byte ptr [rcx], 0xf ; test dword ptr [rdi - 0xfffff9], esi ; ret
0x00000200001356dc : mov byte ptr [rcx], 3 ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200005d5e2d : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200002059ed : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200002059dd : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200003de580 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000047a829
0x000002000049305e : mov byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000006ad4d : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000015da6a : mov byte ptr [rcx], al ; jne 0x2000015da67 ; mov rax, r11 ; ret
0x0000020000520552 : mov byte ptr [rcx], al ; ret
0x00000200000ec307 : mov byte ptr [rcx], al ; xor eax, eax ; ret
0x00000200001d61a0 : mov byte ptr [rcx], ch ; add byte ptr [rax], al ; call rax
0x00000200001d5c29 : mov byte ptr [rcx], ch ; add byte ptr [rax], al ; mov r8, rbx ; call rdi
0x000002000067cfdc : mov byte ptr [rcx], cl ; ret
0x00000200001bf029 : mov byte ptr [rcx], dl ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000005a890 : mov byte ptr [rcx], dl ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000015e398 : mov byte ptr [rcx], dl ; lock or dword ptr [rsp], 0 ; ret
0x00000200004704ae : mov byte ptr [rdi + 0x1f], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008d365 : mov byte ptr [rdi + 0x1f], al ; jmp 0x2000008d269
0x00000200001b716d : mov byte ptr [rdi + 0x1f], al ; jmp 0x20000135c92
0x00000200005525d0 : mov byte ptr [rdi + 0x1f], al ; jmp 0x200003e57a9
0x00000200005b45e1 : mov byte ptr [rdi + 0x1f], al ; jmp 0x2000051cd9a
0x000002000020ee03 : mov byte ptr [rdi + 5], bl ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200001c9228 : mov byte ptr [rdi + rcx + 0x22], 0xc0 ; jmp 0x200001c91f7
0x00000200003dc7ab : mov byte ptr [rdi - 0x74ffff9a], dl ; ret 0x2b41
0x000002000063188c : mov byte ptr [rdi], al ; add dh, dh ; ret
0x00000200003fb0ed : mov byte ptr [rdi], dh ; ret 0x15
0x000002000070392d : mov byte ptr [rdi], dl ; adc byte ptr [rdx], al ; add bh, bh ; ret
0x000002000050a00d : mov byte ptr [rdx + 0x10], al ; test dl, dl ; jne 0x2000050a01c ; ret
0x00000200003d6688 : mov byte ptr [rdx + 0x17], bl ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000007290d
0x000002000072c11d : mov byte ptr [rdx + 0x200f44ff], bl ; ret
0x000002000050a03c : mov byte ptr [rdx + 0x30], dl ; ret
0x000002000025d418 : mov byte ptr [rdx + 0x46], dh ; add ah, ch ; ret
0x000002000011d285 : mov byte ptr [rdx + 0x5f], bl ; ret
0x0000020000235490 : mov byte ptr [rdx + 1], 0x48 ; mov byte ptr [r10], 0x2e ; call r10
0x0000020000231f0d : mov byte ptr [rdx + 1], al ; ret
0x0000020000231eeb : mov byte ptr [rdx + 1], cl ; ret
0x0000020000231ee8 : mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x0000020000231eca : mov byte ptr [rdx + 2], cl ; ret
0x000002000043ec32 : mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x000002000006bfec : mov byte ptr [rdx + rax], al ; add byte ptr [rbp - 0x75], cl ; xchg eax, esp ; int 0x80
0x00000200000628a3 : mov byte ptr [rdx + rax], dl ; add bh, bh ; ret 0x8348
0x00000200004c5efa : mov byte ptr [rdx + rcx*2 + 0x2a84a0], bl ; mov al, dl ; ret
0x00000200000cdaf6 : mov byte ptr [rdx], 0 ; add bh, bh ; ret 0x9489
0x0000020000235495 : mov byte ptr [rdx], 0x2e ; call r10
0x0000020000144896 : mov byte ptr [rdx], 0x2e ; inc r10 ; jmp 0x200001448b6
0x0000020000497c5a : mov byte ptr [rdx], 0xff ; ret
0x0000020000049c75 : mov byte ptr [rdx], ah ; add eax, 0xb60f0000 ; ret
0x00000200004895aa : mov byte ptr [rdx], al ; jne 0x200004895b7 ; xor eax, eax ; ret
0x00000200000960de : mov byte ptr [rdx], al ; mov al, byte ptr [rcx + 0x20] ; test al, 1 ; jne 0x200000960f1 ; ret
0x0000020000205b1f : mov byte ptr [rdx], al ; mov al, byte ptr [rcx + 0x678] ; ret
0x0000020000115cc0 : mov byte ptr [rdx], al ; ret
0x0000020000383931 : mov byte ptr [rdx], al ; xor eax, eax ; ret
0x00000200004be6e4 : mov byte ptr [rdx], bl ; jmp 0x200004be6ad
0x000002000064a8c4 : mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x000002000042627d : mov byte ptr [rdx], cl ; call qword ptr [rbx]
0x0000020000231f0b : mov byte ptr [rdx], cl ; mov byte ptr [rdx + 1], al ; ret
0x0000020000096117 : mov byte ptr [rdx], cl ; ret
0x000002000051639a : mov byte ptr [rdx], dl ; inc rdx ; jmp 0x2000051638b
0x0000020000516399 : mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000051638c
0x0000020000115cbf : mov byte ptr [rdx], r8b ; ret
0x000002000015e1a5 : mov byte ptr [rip + 0x14fd45], al ; ret
0x000002000015e1ba : mov byte ptr [rip + 0x150d80], al ; ret
0x000002000013f9b8 : mov byte ptr [rip + 0x1667ef], dl ; ret
0x0000020000106417 : mov byte ptr [rip + 0x1d16a7], dl ; ret
0x0000020000106410 : mov byte ptr [rip + 0x1d16b0], dl ; ret
0x0000020000106404 : mov byte ptr [rip + 0x1d16bb], dl ; ret
0x00000200001063fd : mov byte ptr [rip + 0x1d16bf], dl ; ret
0x00000200001063f1 : mov byte ptr [rip + 0x1d16cc], dl ; ret
0x00000200000aa8b1 : mov byte ptr [rip + 0x1f85b0], 1 ; mov r8, r10 ; jmp 0x200000aa888
0x000002000009290e : mov byte ptr [rip + 0x3b490000], al ; ret 0xa275
0x00000200001cbdbe : mov byte ptr [rip + 0xd7174], cl ; ret
0x0000020000180947 : mov byte ptr [rip - 0x1312d01], 0x3d ; call rdx
0x0000020000587955 : mov byte ptr [rip - 0x16000f3c], al ; xlatb ; ret
0x00000200004dda6d : mov byte ptr [rip - 0x233ad1], al ; ret
0x00000200004dda6c : mov byte ptr [rip - 0x233ad1], r8b ; ret
0x00000200004dda74 : mov byte ptr [rip - 0x233ad9], 1 ; ret
0x00000200004f428a : mov byte ptr [rip - 0x2514ce], 1 ; ret
0x0000020000520388 : mov byte ptr [rip - 0x27d307], 1 ; xor eax, eax ; ret
0x0000020000719618 : mov byte ptr [rip - 0x3c84e7], cl ; ret
0x0000020000717533 : mov byte ptr [rip - 0x467f11], dl ; ret
0x0000020000719097 : mov byte ptr [rip - 0x4736d6], 1 ; ret
0x0000020000719336 : mov byte ptr [rip - 0x6f0cd], al ; ret
0x00000200006e45ff : mov byte ptr [rip - 0x74bf0000], cl ; ret 0x3344
0x000002000062c035 : mov byte ptr [rip - 0x7eb80000], al ; ret
0x000002000037061b : mov byte ptr [rip - 0x7ff1e], 1 ; ret
0x000002000007c804 : mov byte ptr [rsi + 0x1b], al ; jmp 0x2000007c3ad
0x000002000008d524 : mov byte ptr [rsi + 0x1f], al ; jmp 0x2000008d489
0x00000200003bb8aa : mov byte ptr [rsi + 0x1f], al ; jmp 0x200003bb87d
0x000002000060d4b8 : mov byte ptr [rsi + 0x1f], dl ; mov rcx, rdi ; call 0x200000b977c
0x00000200005146d5 : mov byte ptr [rsi + 0x41], al ; call 0x2000013b15a
0x0000020000374671 : mov byte ptr [rsi + 4], ch ; jmp 0x2000036ced5
0x00000200006f6b30 : mov byte ptr [rsi - 0x74b6003b], ah ; ret 0xc148
0x000002000047eae3 : mov byte ptr [rsi - 0x75000000], ah ; ret
0x0000020000036eb4 : mov byte ptr [rsi - 0x9ffecd5], bh ; ret
0x0000020000499ca8 : mov byte ptr [rsi - 0x9fff0f6], ah ; ret 0x7510
0x00000200006f01f3 : mov byte ptr [rsi], bh ; add dword ptr [rbx], eax ; add bh, bh ; ret
0x00000200003afdc9 : mov byte ptr [rsi], dl ; adc al, 0x19 ; add dh, dh ; ret
0x000002000011f7e7 : mov byte ptr [rsp + 0x20], 0 ; jmp 0x2000011f835
0x000002000051ecca : mov byte ptr [rsp + 0x20], 1 ; call 0x2000014e328
0x0000020000127294 : mov byte ptr [rsp + 0x20], al ; call 0x200000a34ca
0x00000200004f20ad : mov byte ptr [rsp + 0x20], ch ; call 0x2000014e326
0x000002000066f848 : mov byte ptr [rsp + 0x20], dh ; call r15
0x000002000066b580 : mov byte ptr [rsp + 0x20], dl ; call rbx
0x000002000066b57f : mov byte ptr [rsp + 0x20], r10b ; call rbx
0x00000200004f20ac : mov byte ptr [rsp + 0x20], r13b ; call 0x2000014e327
0x000002000066f847 : mov byte ptr [rsp + 0x20], r14b ; call r15
0x000002000072bdfa : mov byte ptr [rsp + 0x30], bh ; call r12
0x000002000072bdf9 : mov byte ptr [rsp + 0x30], dil ; call r12
0x00000200003f79fe : mov byte ptr [rsp + rbp*8 + 0x15], ch ; add dh, dh ; ret 0x7520
0x0000020000567845 : mov byte ptr [rsp + rbp], dl ; in al, dx ; inc dword ptr [rax + rdi + 0x2d] ; sti ; call rdx
0x000002000022529b : mov ch, 0 ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000132408 : mov ch, 0 ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x00000200003cda6d : mov ch, 0x17 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000662147 : mov ch, 0x1e ; ret
0x00000200004fe2e8 : mov ch, 0x48 ; mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000655135 : mov ch, 0x49 ; ret
0x0000020000678baf : mov ch, 0x50 ; ret
0x00000200004a1087 : mov ch, 0x51 ; ret 0x48ff
0x0000020000072857 : mov ch, 0x65 ; or eax, 0xc4834800 ; pop rbx ; ret
0x000002000000e231 : mov ch, 0x6e ; ret
0x00000200003de042 : mov ch, 0x70 ; add eax, 0xb60f0000 ; ret
0x00000200004d7eb7 : mov ch, 0x76 ; ret 0x48ff
0x0000020000512ff3 : mov ch, 0x78 ; ret 0x85ff
0x0000020000517893 : mov ch, 0x7c ; ret 0x4dff
0x0000020000408fa7 : mov ch, 0x7c ; ret 0xe8ff
0x000002000061a75d : mov ch, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x00000200004e1953 : mov ch, 0xa1 ; ret
0x000002000047b753 : mov ch, 0xab ; ret
0x000002000000f793 : mov ch, 0xb1 ; ret 0xbe8d
0x000002000000df87 : mov ch, 0xb5 ; ret
0x0000020000714644 : mov ch, 0xb9 ; call qword ptr [rbx]
0x0000020000512387 : mov ch, 0xbd ; ret
0x00000200003bf050 : mov ch, 0xca ; dec dword ptr [rax - 0x75] ; ret
0x0000020000510f47 : mov ch, 0xcc ; ret
0x00000200000b230c : mov ch, 0xd ; add bh, dh ; ret 0x700
0x00000200000b27c1 : mov ch, 0xd ; add dh, dh ; ret
0x0000020000713a57 : mov ch, 0xde ; ret
0x00000200007202df : mov ch, 0xe ; ret
0x00000200005406cd : mov ch, 0xe6 ; push rsi ; ret
0x00000200005744e8 : mov ch, 0xed ; push rsi ; ret
0x000002000019808e : mov ch, 0xf3 ; push rsi ; ret
0x00000200001d1fc3 : mov ch, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000055622c : mov ch, 0xfa ; jmp 0x1ffc3e0af38
0x00000200005b0043 : mov ch, 0xfa ; ret
0x00000200000e43fb : mov ch, 0xfc ; dec dword ptr [rax - 0x75] ; ret
0x00000200005eafb9 : mov ch, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005f6d79 : mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200004cb1f9 : mov ch, 0xff ; jmp 0x200004cb1c3
0x00000200004ee18f : mov ch, 0xff ; ret
0x000002000056bc7f : mov ch, 0xff ; xor r9d, r9d ; jmp 0x20000437ee5
0x000002000060f204 : mov ch, 9 ; add byte ptr [rax + 0x2d0], bh ; ret
0x000002000026dd30 : mov ch, bh ; adc byte ptr [rax], al ; ret
0x000002000036c876 : mov ch, bl ; jl 0x2000036c881 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000058021c : mov ch, bl ; ret
0x00000200004e69af : mov ch, bl ; ret 0xb
0x00000200007228e1 : mov ch, byte ptr [rdx - 0x46] ; call qword ptr [rdx]
0x00000200003d2274 : mov ch, ch ; ret 0x48ff
0x000002000064071b : mov ch, dl ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x0000020000232bd6 : mov cl, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x0000020000399d4d : mov cl, 0x10 ; call rax
0x00000200000d6f40 : mov cl, 0x10 ; mov rcx, rax ; jne 0x200000d6f6f ; ret
0x000002000005732e : mov cl, 0x11 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000390c62 : mov cl, 0x11 ; call rax
0x00000200000f453e : mov cl, 0x11 ; cmp rax, 2 ; jae 0x200000f454f ; ret
0x00000200005cad0b : mov cl, 0x11 ; je 0x200005cad1a ; call 0x200000d6f2e
0x000002000062acd1 : mov cl, 0x11 ; je 0x2000062ace0 ; call 0x200000d6f2e
0x00000200000b8354 : mov cl, 0x11 ; jne 0x200000b8351 ; ret
0x00000200000b977c : mov cl, 0x11 ; jne 0x200000b9785 ; ret
0x00000200000d7dbd : mov cl, 0x11 ; jne 0x200000d7db8 ; mov al, 1 ; ret
0x00000200000e1891 : mov cl, 0x11 ; jne 0x200000e189a ; ret
0x00000200002332cd : mov cl, 0x11 ; jne 0x200002332da ; mov al, 1 ; ret
0x000002000049f1ac : mov cl, 0x11 ; jne 0x2000049f1b5 ; ret
0x000002000049f1ac : mov cl, 0x11 ; jne 0x2000049f1b9 ; ret
0x0000020000063e01 : mov cl, 0x11 ; mov r8, rax ; jne 0x20000063e4a ; ret
0x0000020000104993 : mov cl, 0x11 ; sete al ; add rsp, 0x38 ; ret
0x00000200003a0ea8 : mov cl, 0x12 ; call rax
0x00000200005915de : mov cl, 0x13 ; call r10
0x0000020000591561 : mov cl, 0x13 ; call rax
0x00000200000e0822 : mov cl, 0x13 ; jne 0x200000e0841 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a1382 : mov cl, 0x14 ; call rax
0x0000020000435a18 : mov cl, 0x15 ; ret 0xea08
0x000002000000f105 : mov cl, 0x18 ; pop rax ; ret 0x4609
0x00000200005bdd01 : mov cl, 0x1a ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200005f5365 : mov cl, 0x1d ; popfq ; ret 0xffce
0x0000020000025570 : mov cl, 0x1d ; ret 0x288f
0x0000020000545bff : mov cl, 0x28 ; mov edx, 0xfc084ff ; test bl, al ; ret 0xffe7
0x000002000048e380 : mov cl, 0x2e ; jne 0x2000048e3e9 ; mov rcx, rsi ; call 0x2000006a619
0x00000200000d1a43 : mov cl, 0x37 ; add dh, dh ; ret
0x0000020000472e98 : mov cl, 0x3d ; ret 0xe3ca
0x0000020000456ae5 : mov cl, 0x48 ; call 0x2001007a639
0x00000200005f6365 : mov cl, 0x48 ; call 0x20075219eb9
0x00000200003fc589 : mov cl, 0x48 ; call 0x200760200dd
0x00000200001a116d : mov cl, 0x49 ; adc byte ptr [rbp - 0x2a], dh ; ret
0x00000200004a9a66 : mov cl, 0x4b ; call 0x200760cd5ba
0x00000200003d194f : mov cl, 0x4d ; call 0x20075ff54a3
0x00000200004556d9 : mov cl, 0x4d ; call 0x2007607922d
0x000002000043aaa9 : mov cl, 0x4d ; sbb byte ptr [rax + 0x3b], cl ; ret 0xe575
0x00000200003b949b : mov cl, 0x4e ; call 0x2000ffdcfef
0x00000200003bc01c : mov cl, 0x4e ; call 0x2000ffdfb70
0x00000200003fa8bd : mov cl, 0x4e ; call 0x2001001e411
0x0000020000556f84 : mov cl, 0x4e ; call 0x2007517aad8
0x0000020000439f23 : mov cl, 0x4e ; call 0x2007605da77
0x00000200003fdad6 : mov cl, 0x4e ; sbb byte ptr [rax + 0x3b], cl ; ret 0xe575
0x00000200003baf84 : mov cl, 0x4f ; call 0x2000ffdead8
0x00000200003bb321 : mov cl, 0x4f ; call 0x2000ffdee75
0x00000200003bdc17 : mov cl, 0x4f ; call 0x2000ffe176b
0x00000200003bdd63 : mov cl, 0x4f ; call 0x2000ffe18b7
0x0000020000556d9e : mov cl, 0x4f ; call 0x2007517a8f2
0x000002000055783a : mov cl, 0x4f ; call 0x2007517b38e
0x00000200003c03af : mov cl, 0x4f ; call 0x20075fe3f03
0x00000200003fbd45 : mov cl, 0x4f ; call 0x2007601f899
0x00000200003fc64f : mov cl, 0x4f ; call 0x200760201a3
0x00000200003febf4 : mov cl, 0x4f ; call 0x20076022748
0x000002000043a269 : mov cl, 0x4f ; call 0x2007605ddbd
0x0000020000459096 : mov cl, 0x4f ; call 0x2007607cbea
0x00000200004b901f : mov cl, 0x4f ; call 0x200760dcb73
0x00000200003d1a7c : mov cl, 0x4f ; sbb byte ptr [rax + 0x3b], cl ; ret 0xe575
0x00000200000f92ea : mov cl, 0x51 ; xor byte ptr [rbx + rdi - 0x40], al ; je 0x200000f92ec ; jmp 0x200000f92c0
0x000002000003647d : mov cl, 0x52 ; jne 0x20000036495 ; ret
0x00000200000dbd49 : mov cl, 0x59 ; and byte ptr [rcx + 0x2b], cl ; ret 0xe2eb
0x0000020000010731 : mov cl, 0x69 ; sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x000002000044241b : mov cl, 0x6b ; ret 0x48ff
0x000002000061121b : mov cl, 0x7d ; movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x000002000044f9e7 : mov cl, 0x88 ; clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x000002000044fbce : mov cl, 0x89 ; cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x00000200004b3ff6 : mov cl, 0x89 ; enter 1, 0 ; ret
0x000002000070e7ea : mov cl, 0x8a ; ret
0x0000020000426224 : mov cl, 0x8b ; or eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test ecx, esi ; call qword ptr [rbx]
0x00000200004b8ea4 : mov cl, 0x8e ; clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000044bf1e : mov cl, 0x8e ; clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x0000020000593618 : mov cl, 0x8e ; cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x000002000044824b : mov cl, 0x8f ; lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x000002000067475b : mov cl, 0x8f ; ret
0x000002000049d0e9 : mov cl, 0xa ; call r10
0x00000200000915aa : mov cl, 0xa ; jne 0x200000915b6 ; ret
0x00000200000fb66a : mov cl, 0xa ; jne 0x200000fb673 ; ret
0x00000200000e184f : mov cl, 0xa ; mov r9, rax ; jne 0x200000e185e ; ret
0x00000200005fd2ab : mov cl, 0xa5 ; push rsi ; ret
0x00000200001eb62e : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x0000020000669226 : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000068d16b : mov cl, 0xae ; sar bh, 0xff ; ret 0x3b41
0x00000200003c3983 : mov cl, 0xb ; call r10
0x0000020000546029 : mov cl, 0xb ; call rax
0x00000200000b566b : mov cl, 0xba ; or al, byte ptr [rax] ; ret
0x000002000000f211 : mov cl, 0xbc ; ret
0x000002000072495b : mov cl, 0xc7 ; ret 0x48ff
0x0000020000192f80 : mov cl, 0xd ; adc al, byte ptr ss:[rax] ; ret
0x00000200003991ee : mov cl, 0xd ; call rax
0x00000200004735fc : mov cl, 0xd ; pop rsi ; ret
0x00000200001a58c7 : mov cl, 0xd ; ret
0x000002000059ac74 : mov cl, 0xd ; ret 0xd6b2
0x0000020000436547 : mov cl, 0xd ; xchg eax, ebx ; std ; jmp 0x1ffc2c87557
0x0000020000664ee3 : mov cl, 0xd3 ; ret
0x00000200003a3b81 : mov cl, 0xe ; call rax
0x00000200005348ad : mov cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x0000020000712e73 : mov cl, 0xe3 ; ret
0x00000200005c0dfc : mov cl, 0xe6 ; add dword ptr [rax], eax ; add byte ptr [rbp + 5], dh ; call 0x200000bd0e9
0x0000020000402cdb : mov cl, 0xe7 ; ret 0x65ff
0x0000020000433ad8 : mov cl, 0xe8 ; add al, 0x23 ; ret
0x00000200003e66b8 : mov cl, 0xe8 ; add al, 0x3b ; ror byte ptr [rdi], 1 ; xchg dword ptr [rax], esi ; ret
0x000002000056724f : mov cl, 0xf ; call rax
0x00000200002270ff : mov cl, 0xf ; jne 0x2000022710c ; mov al, dl ; jmp 0x20000227114
0x0000020000626d08 : mov cl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000630814 : mov cl, 0xff ; add rsp, 0x28 ; ret
0x000002000062b053 : mov cl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000062b554 : mov cl, 0xff ; add rsp, 0x58 ; ret
0x000002000062b4ea : mov cl, 0xff ; add rsp, 0x68 ; ret
0x000002000062cb11 : mov cl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000063487f : mov cl, 0xff ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005303b3 : mov cl, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000530b65 : mov cl, 0xff ; nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200005520dc : mov cl, 0xff ; nop ; jmp 0x200003e3851
0x0000020000552ec6 : mov cl, 0xff ; nop ; jmp 0x200003e7f74
0x000002000055489a : mov cl, 0xff ; nop ; jmp 0x200003ee7a2
0x00000200004f1540 : mov cl, 0xff ; test rcx, rcx ; je 0x200004f1558 ; ret
0x000002000014029d : mov cl, 1 ; add r8, r15 ; call r8
0x000002000002b79c : mov cl, 1 ; jne 0x2000002b7c2 ; ret
0x0000020000068f24 : mov cl, 1 ; jne 0x20000068f35 ; ret
0x000002000008d944 : mov cl, 1 ; jne 0x2000008d91f ; ret
0x0000020000553541 : mov cl, 1 ; mov rax, qword ptr [rip - 0x2b1df2] ; call rax
0x000002000062c4d1 : mov cl, 3 ; fisttp word ptr [rcx - 0x7d] ; ret 0x4104
0x0000020000240f79 : mov cl, 4 ; add byte ptr [rdi + 0x600004b2], ch ; jmp qword ptr [rbx]
0x000002000015c44b : mov cl, 7 ; add byte ptr [rax], al ; nop ; ret
0x00000200000824ae : mov cl, 8 ; jne 0x20000082499 ; ret
0x0000020000082fe2 : mov cl, 8 ; jne 0x20000082fef ; mov al, 1 ; ret
0x000002000008c744 : mov cl, 8 ; jne 0x2000008c754 ; mov al, 1 ; ret
0x00000200000bc0f9 : mov cl, 8 ; jne 0x200000bc0df ; mov dl, 1 ; mov al, dl ; ret
0x00000200000f7c15 : mov cl, 8 ; jne 0x200000f7c22 ; mov al, 1 ; ret
0x00000200000f7c8c : mov cl, 8 ; jne 0x200000f7c7e ; ret
0x00000200000bcb0e : mov cl, 9 ; jne 0x200000bcb1f ; add rsp, 0x28 ; ret
0x00000200001d0d6c : mov cl, bh ; mov rax, qword ptr [rip + 0xd09e3] ; call rax
0x00000200001d06a2 : mov cl, bh ; mov rax, qword ptr [rip + 0xd2995] ; call rax
0x000002000067810d : mov cl, bh ; mov rbx, rax ; call rsi
0x000002000000e0a8 : mov cl, bh ; or r12b, byte ptr [r15 - 0x7f] ; ret
0x00000200001cc379 : mov cl, bl ; call rax
0x0000020000205196 : mov cl, bl ; mov al, cl ; ret
0x0000020000676e83 : mov cl, bl ; mov rdi, rax ; call qword ptr [rip - 0x3d4f86]
0x00000200004c7b56 : mov cl, bpl ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x000002000036f5b6 : mov cl, byte ptr [rax + 0x41000000] ; pop rsi ; ret
0x00000200001d5c28 : mov cl, byte ptr [rax + 0x4c000029] ; mov eax, ebx ; call rdi
0x0000020000149a56 : mov cl, byte ptr [rax + rdi] ; xor byte ptr [rdx], cl ; inc rdx ; jmp 0x20000149a6a
0x000002000047111a : mov cl, byte ptr [rsi] ; call rax
0x000002000056a956 : mov cl, ch ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004c7b57 : mov cl, ch ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x0000020000412edc : mov cl, ch ; ret 0x14
0x00000200003aa667 : mov cl, ch ; ret 0xfff7
0x000002000066cfad : mov cl, cl ; call rax
0x000002000067810c : mov cl, dil ; mov rbx, rax ; call rsi
0x00000200001b5f5b : mov cl, dl ; ret 0xfff7
0x0000020000205195 : mov cl, r11b ; mov al, cl ; ret
0x000002000056a955 : mov cl, r13b ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000066cfac : mov cl, r9b ; call rax
0x00000200000332c0 : mov cr0, rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f1ca0 : mov cr0, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c922a : mov cr0, rax ; jmp 0x200001c91f5
0x00000200001dc744 : mov cr0, rax ; mov eax, r10d ; ret
0x0000020000443c0c : mov cr0, rax ; mov rcx, rbp ; call 0x2000006a619
0x000002000045e392 : mov cr0, rax ; mov rcx, rdi ; call 0x2000006a618
0x000002000003335c : mov cr0, rax ; ret
0x00000200000bd104 : mov cr0, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000096046 : mov cr0, rcx ; mov rcx, rax ; call rdx
0x00000200000967de : mov cr0, rcx ; ret
0x000002000045e3e3 : mov cr0, rdx ; mov rcx, rdi ; call 0x2000006a618
0x00000200003745bf : mov cr3, rax ; add rsp, 0x28 ; ret
0x0000020000055db5 : mov cr3, rax ; ret
0x00000200003787cc : mov cr4, rax ; add rsp, 0x28 ; ret
0x0000020000055dab : mov cr4, rax ; mov cr4, rcx ; ret
0x00000200003745b4 : mov cr4, rcx ; add rsp, 0x28 ; ret
0x0000020000055dae : mov cr4, rcx ; ret
0x00000200000332bf : mov cr8, rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f1c9f : mov cr8, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c9229 : mov cr8, rax ; jmp 0x200001c91f6
0x00000200001dc743 : mov cr8, rax ; mov eax, r10d ; ret
0x000002000045e391 : mov cr8, rax ; mov rcx, rdi ; call 0x2000006a619
0x000002000003335b : mov cr8, rax ; ret
0x00000200000bd103 : mov cr8, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000096045 : mov cr8, rcx ; mov rcx, rax ; call rdx
0x00000200000967dd : mov cr8, rcx ; ret
0x000002000045e3e2 : mov cr8, rdx ; mov rcx, rdi ; call 0x2000006a619
0x0000020000678260 : mov cs, ebp ; jmp qword ptr [rcx]
0x0000020000446b15 : mov cs, word ptr [rax + 1] ; add byte ptr [rax], al ; call 0x2000006a618
0x000002000051d06e : mov cs, word ptr [rbx] ; ret
0x00000200005a2ffc : mov cs, word ptr [rcx - 0xc] ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000010397a : mov cs, word ptr [rdx + rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001d7d56 : mov dh, 0x10 ; idiv edi ; add rsp, 0x48 ; ret
0x00000200005ad133 : mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x0000020000191f9a : mov dh, 0x15 ; or al, byte ptr [rax] ; xor ecx, ecx ; jmp 0x200000be1e4
0x000002000040e508 : mov dh, 0x1c ; adc byte ptr [rbp + 0x2b], al ; ret
0x000002000044c6f6 : mov dh, 0x3b ; ret 0x48ff
0x00000200003c40e5 : mov dh, 0x40 ; call 0x1ffc2f8cc3a
0x000002000013fb18 : mov dh, 0x40 ; ret
0x00000200003b4810 : mov dh, 0x40 ; xadd eax, esp ; rdpmc ; ret 0x25
0x0000020000441ad7 : mov dh, 0x41 ; adc cl, dl ; call 0x1ffc345fb6b
0x00000200006201a9 : mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x0000020000453a71 : mov dh, 0x41 ; add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x000002000057550a : mov dh, 0x41 ; add eax, ecx ; call 0x1ff8419881f
0x000002000049f338 : mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200004af8c7 : mov dh, 0x41 ; call 0x1ffc25f841c
0x000002000013e2c7 : mov dh, 0x41 ; inc byte ptr [rcx + 0x3b] ; ret
0x00000200006ef37f : mov dh, 0x41 ; sbb al, cl ; call 0x20075312e95
0x00000200004874c6 : mov dh, 0x43 ; call 0x1ffc2cd001c
0x00000200004874df : mov dh, 0x43 ; call 0x1ffc2cd0035
0x000002000006c3ab : mov dh, 0x43 ; sbb al, cl ; call 0x1ffc24204c2
0x000002000014786f : mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x00000200003c3ac7 : mov dh, 0x45 ; call 0x2002f51c81e
0x000002000017586d : mov dh, 0x45 ; outsd dx, dword ptr [rsi] ; lea rcx, qword ptr [r13 + 0x30] ; jmp 0x20000061b64
0x00000200000d07eb : mov dh, 0x46 ; add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x0000020000453c70 : mov dh, 0x46 ; add eax, dword ptr [rcx + 0xb] ; ret 0x8841
0x000002000047ce2a : mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x00000200007178fe : mov dh, 0x47 ; cmp eax, 0x98f50589 ; ret
0x00000200003c517b : mov dh, 0x47 ; sbb cl, byte ptr [rbp + rcx*4 + 0xd] ; jnp 0x200003c5149 ; ret
0x000002000038e20e : mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x00000200004b2dce : mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x000002000010cc46 : mov dh, 0x48 ; and al, 0 ; call rax
0x00000200001ab28a : mov dh, 0x49 ; xor eax, dword ptr [rcx - 0x75] ; ret 0xeac1
0x000002000009ac27 : mov dh, 0x4c ; cmp ch, byte ptr [rax - 1] ; ret 0x5489
0x0000020000195b27 : mov dh, 0x4c ; pop rsi ; add al, 0x8b ; ret
0x00000200005008bc : mov dh, 0x4f ; add dword ptr [rax - 0x7d], ecx ; ret 0x8d08
0x00000200001f0566 : mov dh, 0x50 ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x0000020000511405 : mov dh, 0x51 ; add cl, byte ptr [rdi] ; mov dh, 5 ; ret
0x000002000023a404 : mov dh, 0x51 ; cmp byte ptr [rax], al ; ret
0x00000200003d31e5 : mov dh, 0x52 ; and byte ptr [rbx + rcx*4 + 0x5a], al ; sbb byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000035d31 : mov dh, 0x54 ; add dword ptr [rbx + rcx*4], 0x8bc7ffcf ; ret 0xd349
0x00000200001b1590 : mov dh, 0x55 ; fadd dword ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x0000020000051fe3 : mov dh, 0x55 ; sbb dh, dh ; ret 0xf20
0x000002000044cdc3 : mov dh, 0x57 ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200006c8b35 : mov dh, 0x58 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x0000020000021908 : mov dh, 0x59 ; ret
0x0000020000537306 : mov dh, 0x68 ; ret 0x48ff
0x0000020000516ca6 : mov dh, 0x6f ; ret
0x0000020000028da0 : mov dh, 0x73 ; add cl, byte ptr [rcx - 0x75] ; lodsb al, byte ptr [rsi] ; ret 0xd80
0x0000020000028615 : mov dh, 0x77 ; add cl, byte ptr [rcx - 0x75] ; lodsb al, byte ptr [rsi] ; ret 0xd80
0x000002000021edf4 : mov dh, 0x78 ; add eax, dword ptr [rax] ; add al, ch ; ret 0xf3ed
0x0000020000512ac2 : mov dh, 0x7c ; ret 0x44ff
0x00000200000950f0 : mov dh, 0x80 ; ret
0x0000020000026ffc : mov dh, 0x81 ; ret
0x00000200000b8587 : mov dh, 0x82 ; add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0x7c], cl ; ret 0x248
0x0000020000046ecd : mov dh, 0x82 ; ret
0x00000200000462ae : mov dh, 0x83 ; ret
0x000002000011ef86 : mov dh, 0x83 ; ret 1
0x0000020000128655 : mov dh, 0x84 ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x000002000003ea4f : mov dh, 0x84 ; and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000208e9a : mov dh, 0x84 ; sbb byte ptr [rax + 0x2e], ah ; add dword ptr [rax], eax ; add eax, r10d ; jmp 0x20000208eb2
0x0000020000066dda : mov dh, 0x87 ; ret
0x0000020000031fec : mov dh, 0x88 ; ret
0x00000200001a17ad : mov dh, 0x89 ; cmc ; push rsi ; ret
0x00000200000c33d9 : mov dh, 0x8a ; ret 0x2a41
0x0000020000110f63 : mov dh, 0x8a ; ret 0x624
0x0000020000047231 : mov dh, 0x8b ; ret
0x000002000003e13f : mov dh, 0x8b ; ret 0
0x00000200004babce : mov dh, 0x8b ; xor al, 0x33 ; ret 0xc148
0x0000020000040ad3 : mov dh, 0x8e ; ret
0x000002000006666b : mov dh, 0x90 ; ret
0x0000020000041243 : mov dh, 0x91 ; ret
0x00000200000319cf : mov dh, 0x93 ; ret
0x00000200000416fc : mov dh, 0x97 ; ret
0x00000200000461ed : mov dh, 0xab ; ret
0x0000020000066ea5 : mov dh, 0xad ; ret
0x00000200001747d9 : mov dh, 0xae ; out dx, al ; inc dword ptr [rcx - 0xa] ; ret 0xf08
0x0000020000041601 : mov dh, 0xaf ; ret
0x00000200000de462 : mov dh, 0xb ; add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x0000020000031dbd : mov dh, 0xbb ; ret
0x00000200006fd333 : mov dh, 0xbc ; dec dword ptr [rbx + 0x248d4cc1] ; ret
0x00000200004b1920 : mov dh, 0xc ; or edi, edi ; ret 0xc103
0x000002000043db07 : mov dh, 0xc0 ; and eax, r8d ; or eax, 5 ; ret
0x000002000002a7df : mov dh, 0xc0 ; cmovl r8d, r10d ; jmp 0x2000002a7a8
0x0000020000095556 : mov dh, 0xc0 ; cmovle eax, edx ; mov dl, al ; mov al, dl ; ret
0x0000020000149a54 : mov dh, 0xc0 ; mov cl, byte ptr [rax + rdi] ; xor byte ptr [rdx], cl ; inc rdx ; jmp 0x20000149a6c
0x00000200000fd318 : mov dh, 0xc0 ; mov cr8, rax ; ret
0x00000200004507a1 : mov dh, 0xc0 ; ret
0x000002000009c07c : mov dh, 0xc0 ; shr eax, 3 ; and eax, 4 ; ret
0x0000020000033359 : mov dh, 0xc1 ; mov cr8, rax ; ret
0x0000020000672c0f : mov dh, 0xc2 ; jmp 0x20000672c20
0x0000020000672cdc : mov dh, 0xc2 ; jmp 0x20000672ced
0x0000020000672d90 : mov dh, 0xc2 ; jmp 0x20000672da1
0x0000020000672e33 : mov dh, 0xc2 ; jmp 0x20000672e44
0x00000200001dc741 : mov dh, 0xc2 ; mov cr8, rax ; mov eax, r10d ; ret
0x00000200000b287a : mov dh, 0xc2 ; mov cr8, rax ; ret
0x0000020000096295 : mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000051bcf : mov dh, 0xc6 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001c9227 : mov dh, 0xc6 ; mov cr8, rax ; jmp 0x200001c91f8
0x00000200001b480b : mov dh, 0xc6 ; push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x0000020000121710 : mov dh, 0xc8 ; or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000b28f5 : mov dh, 0xc9 ; mov cr8, rcx ; ret
0x00000200000fa0ba : mov dh, 0xca ; cmovne eax, ecx ; ret
0x0000020000675a13 : mov dh, 0xcd ; jmp qword ptr [rcx]
0x0000020000368486 : mov dh, 0xd2 ; cmove r10d, r11d ; mov al, r10b ; ret
0x0000020000080875 : mov dh, 0xd5 ; call qword ptr [rdi]
0x0000020000375d49 : mov dh, 0xdd ; dec dword ptr [rax - 0x7f] ; ret
0x000002000008a156 : mov dh, 0xec ; or eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000018a6e7 : mov dh, 0xf8 ; sldt word ptr [rax] ; jmp 0x200000a69c9
0x00000200000f8ba4 : mov dh, 0xfb ; sbb al, 0 ; add rsp, 0x28 ; ret
0x000002000050615c : mov dh, 0xff ; add rsp, 0x38 ; ret
0x00000200005dd31f : mov dh, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004c378c : mov dh, 0xff ; add rsp, 0x88 ; ret
0x000002000066dca2 : mov dh, 0xff ; jmp 0x2000066dd24
0x000002000072c09c : mov dh, 0xff ; mov rbx, qword ptr [rsp + 0x40] ; jmp 0x2000072c070
0x00000200005527b9 : mov dh, 0xff ; nop ; jmp 0x200003e5c0f
0x0000020000552cd8 : mov dh, 0xff ; nop ; jmp 0x200003e7460
0x00000200003751ac : mov dh, 0xff ; push rsi ; ret 0xf04
0x00000200001b480c : mov dh, 0xff ; xor ecx, ecx ; call qword ptr [rax]
0x00000200000339cc : mov dh, 1 ; cmp eax, edx ; jne 0x200000339f1 ; mov rax, r9 ; ret
0x000002000040dcfa : mov dh, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x00000200004ac5c9 : mov dh, 4 ; adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000036e58 : mov dh, 4 ; ret 0x1ba
0x00000200001ab535 : mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000193d61 : mov dh, 4 ; shr dword ptr [rax + 0x484a7401], -0x75 ; ret 0xb948
0x0000020000057147 : mov dh, 4 ; shr dword ptr [rax + 0x49427401], -0x75 ; ret
0x0000020000174e6c : mov dh, 5 ; push rsp ; ret
0x0000020000511409 : mov dh, 5 ; ret
0x000002000067cfb6 : mov dh, 9 ; ret
0x00000200003fb364 : mov dh, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000437df6 : mov dh, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000594ab3 : mov dh, al ; jmp 0x200004bd05f
0x00000200001aa20f : mov dh, dh ; push rsi ; ret
0x0000020000662236 : mov dil, 0xc4 ; push qword ptr [rbp + 1] ; ret
0x0000020000506e36 : mov dl, 0x12 ; ret
0x00000200003fc852 : mov dl, 0x15 ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf02
0x000002000012a9a2 : mov dl, 0x17 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000448a5a : mov dl, 0x1b ; ret 0x48ff
0x00000200000ebc5b : mov dl, 0x41 ; mov eax, edx ; jmp 0x200000ebc11
0x0000020000514c5a : mov dl, 0x41 ; ret
0x000002000000c546 : mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x0000020000104793 : mov dl, 0x48 ; mov eax, dword ptr [rcx + 0x2d0] ; ret
0x000002000000d909 : mov dl, 0x6c ; imul dword ptr [rbx] ; cdq ; ret
0x000002000066b882 : mov dl, 0x71 ; ret
0x00000200000115c3 : mov dl, 0x76 ; ret 0xbb54
0x000002000043275a : mov dl, 0x7e ; ret
0x0000020000028e25 : mov dl, 0x82 ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x000002000043f96c : mov dl, 0x8b ; ret
0x000002000050f85a : mov dl, 0x95 ; ret
0x000002000043a0de : mov dl, 0x9c ; ret 0xf6ff
0x000002000056a18e : mov dl, 0xad ; dec dword ptr [rax - 0x75] ; ret
0x00000200006428e3 : mov dl, 0xb1 ; dec dword ptr [rbp - 0x7b] ; push qword ptr [rax + rbp - 0x75] ; ret
0x0000020000717f8f : mov dl, 0xbb ; dec dword ptr [rax + 0x63] ; ret 0x8d49
0x0000020000014a65 : mov dl, 0xc8 ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x00000200005117aa : mov dl, 0xc8 ; ret
0x0000020000492346 : mov dl, 0xcb ; ret 0x48ff
0x00000200003c434a : mov dl, 0xcc ; ret
0x000002000064d22a : mov dl, 0xdc ; pushfq ; jmp qword ptr [rcx]
0x0000020000596c9d : mov dl, 0xe6 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test dword ptr [rax], edx ; ret 0xfff2
0x000002000017e22f : mov dl, 0xef ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000879e6 : mov dl, 0xf ; add dh, dh ; ret
0x00000200005857b9 : mov dl, 0xf0 ; push rsi ; ret
0x00000200005ba353 : mov dl, 0xf2 ; dec dword ptr [rax - 0x75] ; retf ; call 0x200004265c0
0x0000020000621962 : mov dl, 0xff ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000627663 : mov dl, 0xff ; add rsp, 0x58 ; ret
0x00000200006276e5 : mov dl, 0xff ; add rsp, 0x68 ; ret
0x0000020000627600 : mov dl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x00000200004dde78 : mov dl, 0xff ; call 0x2000008a164
0x0000020000504ede : mov dl, 0xff ; jmp 0x20000504ea8
0x000002000052df8b : mov dl, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000532ea6 : mov dl, 0xff ; nop ; jmp 0x20000385f86
0x0000020000540cc6 : mov dl, 0xff ; nop ; jmp 0x200003ae6e4
0x0000020000540d8c : mov dl, 0xff ; nop ; jmp 0x200003aea0d
0x0000020000544122 : mov dl, 0xff ; nop ; jmp 0x200003bb1f3
0x000002000054c8b6 : mov dl, 0xff ; nop ; jmp 0x200003d8d67
0x00000200005901c0 : mov dl, 0xff ; nop ; jmp 0x200004ac406
0x000002000059648e : mov dl, 0xff ; nop ; jmp 0x200004c138b
0x0000020000596cab : mov dl, 0xff ; nop ; jmp 0x200004c2ebd
0x0000020000596caa : mov dl, 0xff ; nop ; jmp 0x200004c2ebe
0x0000020000596cc1 : mov dl, 0xff ; nop ; jmp 0x200004c2f5f
0x0000020000596d13 : mov dl, 0xff ; nop ; jmp 0x200004c2fdb
0x000002000063d2fb : mov dl, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000408fa4 : mov dl, 1 ; call 0x20000030c65
0x0000020000704526 : mov dl, 1 ; call 0x200003b076c
0x00000200000bc0fd : mov dl, 1 ; mov al, dl ; ret
0x00000200000f9f79 : mov dl, 1 ; mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x00000200000d9136 : mov dl, 1 ; mov rax, qword ptr [rip + 0x2783c1] ; call rax
0x00000200000d90d4 : mov dl, 1 ; mov rax, qword ptr [rip + 0x278423] ; call rax
0x00000200003cd00a : mov dl, 1 ; mov rcx, r15 ; call r12
0x00000200003cc9f7 : mov dl, 1 ; mov rcx, r15 ; call rsi
0x0000020000403d7d : mov dl, 1 ; mov rcx, rbx ; call 0x20000030f78
0x00000200003caf3f : mov dl, 1 ; mov rcx, rsi ; call r12
0x00000200000af9ec : mov dl, ah ; call qword ptr [rax]
0x00000200003cc7ff : mov dl, ah ; ret
0x0000020000138873 : mov dl, al ; dec r9 ; jne 0x20000138869 ; mov al, dl ; ret
0x000002000009555b : mov dl, al ; mov al, dl ; ret
0x0000020000402fee : mov dl, al ; mov al, r10b ; add rsp, 0x58 ; ret
0x000002000010cc94 : mov dl, bh ; mov rax, qword ptr [rip + 0x244863] ; call rax
0x000002000010cc41 : mov dl, bh ; mov rax, qword ptr [rip + 0x2448b6] ; call rax
0x0000020000155a88 : mov dl, bh ; or byte ptr [rax + 1], al ; add byte ptr [rax], al ; add ah, ah ; ret 0x4010
0x0000020000405a68 : mov dl, bl ; call 0x20000030c65
0x0000020000405a3f : mov dl, bl ; call 0x20000030f75
0x00000200000da4cc : mov dl, bl ; mov rax, qword ptr [rip + 0x27702b] ; call rax
0x00000200003cc71e : mov dl, bl ; ret
0x00000200000ecaf0 : mov dl, byte ptr [rcx + 0x1a] ; xor al, al ; test dl, dl ; js 0x200000ecb03 ; ret
0x0000020000471117 : mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x00000200000db9fb : mov dl, ch ; mov rax, qword ptr [rip + 0x275afc] ; call rax
0x00000200000da7c6 : mov dl, ch ; mov rax, qword ptr [rip + 0x276d31] ; call rax
0x00000200000da717 : mov dl, ch ; mov rax, qword ptr [rip + 0x276de0] ; call rax
0x00000200000da666 : mov dl, ch ; mov rax, qword ptr [rip + 0x276e91] ; call rax
0x00000200000da5b7 : mov dl, ch ; mov rax, qword ptr [rip + 0x276f40] ; call rax
0x00000200000da482 : mov dl, ch ; mov rax, qword ptr [rip + 0x277075] ; call rax
0x00000200003fae95 : mov dl, ch ; ret 0x15
0x000002000040d065 : mov dl, cl ; mov rcx, r14 ; call 0x20000030c68
0x00000200004f4d50 : mov dl, dh ; call 0x20000030f74
0x00000200003d2229 : mov dl, dh ; call r10
0x000002000011913a : mov dl, dh ; mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000040ca42 : mov dl, dh ; mov rcx, r15 ; call 0x20000030f78
0x00000200000af9eb : mov dl, r12b ; call qword ptr [rax]
0x00000200004f4d4f : mov dl, r14b ; call 0x20000030f75
0x0000020000119139 : mov dl, r14b ; mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000040ca41 : mov dl, r14b ; mov rcx, r15 ; call 0x20000030f79
0x00000200003d2228 : mov dl, sil ; call r10
0x0000020000574c44 : mov dr0, word ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 5], cl ; clc ; ret
0x00000200004b8ea5 : mov dr1, eax ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000044bf1f : mov dr1, eax ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000003974a : mov dr1, ecx ; sbb dword ptr [rax], eax ; jmp 0x20000039746
0x00000200006ca6f3 : mov dr1, esp ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000593619 : mov dr1, esp ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x00000200006c658f : mov dr1, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c48de : mov dr1, word ptr [rbx] ; sbb ebx, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000006e70a : mov dr1, word ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret
0x000002000067eaee : mov dr1, word ptr [rdi] ; ret 0x48ff
0x000002000068a846 : mov dr1, word ptr [rsi] ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000059e484 : mov ds, ebp ; ret
0x00000200000b0531 : mov ds, word ptr [r15] ; add byte ptr [rbx + 0x58d48c8], cl ; ret 0xf50a
0x00000200006c952a : mov ds, word ptr [rax + 4] ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006c953d
0x00000200006d7597 : mov ds, word ptr [rax + 4] ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d75aa
0x00000200006d894d : mov ds, word ptr [rax + 4] ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8960
0x00000200006df33e : mov ds, word ptr [rax + 4] ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df351
0x00000200000e7bb8 : mov ds, word ptr [rax - 0x74fff4bf] ; ret
0x00000200000670a0 : mov ds, word ptr [rbp + rdi*8 + 0x3ce9ffff] ; call qword ptr [rax]
0x00000200000b0532 : mov ds, word ptr [rdi] ; add byte ptr [rbx + 0x58d48c8], cl ; ret 0xf50a
0x000002000013cdb3 : mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x000002000020a393 : mov dword ptr [r10 + 0x48], 0x8b410000 ; ret
0x000002000036f5b4 : mov dword ptr [r10 + 0x88], r9d ; pop r14 ; ret
0x000002000042e7ed : mov dword ptr [r10 + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047a8cf : mov dword ptr [r10 + 2], ecx ; xor eax, eax ; ret
0x000002000010878b : mov dword ptr [r10 + 2], r8d ; ret
0x00000200001c0a1a : mov dword ptr [r10 + rcx*4], eax ; inc dword ptr [r10 + 0xc] ; ret
0x00000200001c0a51 : mov dword ptr [r10 + rcx*4], eax ; inc dword ptr [r10 + 8] ; ret
0x0000020000124b9e : mov dword ptr [r10], 0 ; ret
0x00000200002089b8 : mov dword ptr [r10], 0xffffffff ; ret
0x00000200006cf1fa : mov dword ptr [r10], eax ; call r10
0x00000200006e9e55 : mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x00000200002373c2 : mov dword ptr [r10], ecx ; ret
0x0000020000616644 : mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x00000200005086bd : mov dword ptr [r11 - 0x18], r8d ; call 0x20000138063
0x000002000054c7db : mov dword ptr [r12], eax ; jmp 0x200003d8aa7
0x000002000056e8ce : mov dword ptr [r13], edi ; jmp 0x2000056e89b
0x000002000045fdc1 : mov dword ptr [r14], r9d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000382130 : mov dword ptr [r15], ecx ; jmp 0x200003820fc
0x000002000008f8a9 : mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x00000200001ca3c0 : mov dword ptr [r8 + 0x28], eax ; ret
0x000002000010c2ad : mov dword ptr [r8 + 0x30], ebx ; call r9
0x00000200001bd646 : mov dword ptr [r8 + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x000002000012a346 : mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200001e60bd : mov dword ptr [r8 + 0xa], ecx ; ret
0x000002000052030d : mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x000002000022e9a0 : mov dword ptr [r8 + 0xc], ecx ; mov eax, r9d ; ret
0x0000020000132ffa : mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200000e2112 : mov dword ptr [r8 + 2], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004fd5a1 : mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x0000020000105e78 : mov dword ptr [r8 + 4], r10d ; ret
0x00000200005202dd : mov dword ptr [r8 + 6], eax ; ret
0x000002000052035f : mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x00000200001bf2e0 : mov dword ptr [r8 + 8], edx ; test edx, edx ; jne 0x200001bf2da ; ret
0x000002000067338f : mov dword ptr [r8 + rcx*4], 1 ; ret
0x00000200006733f9 : mov dword ptr [r8 + rcx*4], edx ; ret
0x0000020000491e27 : mov dword ptr [r8 - 4], eax ; dec r9 ; jne 0x20000491e17 ; ret
0x00000200003652e7 : mov dword ptr [r8], 0x1000 ; xor eax, eax ; ret
0x000002000067b008 : mov dword ptr [r8], 0x104 ; ret
0x000002000012fb3f : mov dword ptr [r8], 0x1429 ; xor eax, eax ; ret
0x00000200005db5e8 : mov dword ptr [r8], eax ; add rsp, 0x28 ; ret
0x0000020000505f8c : mov dword ptr [r8], eax ; mov al, 1 ; ret
0x00000200000b4255 : mov dword ptr [r8], eax ; mov eax, 0xc0000095 ; ret
0x0000020000442d3a : mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x00000200000faa1b : mov dword ptr [r8], eax ; ret
0x000002000008fe7f : mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000036f6ba : mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x00000200001152cc : mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x0000020000577db6 : mov dword ptr [r8], ecx ; pop rbx ; ret
0x000002000066e1be : mov dword ptr [r8], ecx ; ret
0x000002000021548d : mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000004c468 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000200001c6658 : mov dword ptr [r8], esi ; test rax, rax ; je 0x200001c666c ; call rax
0x000002000041b89e : mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x00000200000e2e64 : mov dword ptr [r8], r9d ; ret
0x00000200000b424f : mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000158646 : mov dword ptr [r9 + 0x48], r10d ; mov eax, 3 ; ret
0x00000200001de336 : mov dword ptr [r9 + 0x6a], ebx ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x000002000040cc4b : mov dword ptr [r9 + 4], 0x10 ; ret
0x000002000040cc3f : mov dword ptr [r9 + 4], edx ; ret
0x00000200000eca65 : mov dword ptr [r9 + 4], r10d ; ret
0x00000200005d5ea5 : mov dword ptr [r9], 0x28 ; mov eax, ecx ; ret
0x00000200004c92b7 : mov dword ptr [r9], eax ; mov eax, 1 ; ret
0x000002000041f72c : mov dword ptr [r9], eax ; ret
0x000002000010737b : mov dword ptr [r9], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001c57a3 : mov dword ptr [r9], eax ; xor eax, eax ; ret
0x000002000061ec38 : mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x000002000061ecab : mov dword ptr [r9], ecx ; mov eax, r11d ; ret
0x00000200001bd64c : mov dword ptr [r9], ecx ; ret
0x0000020000428241 : mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000051f5ea : mov dword ptr [r9], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000014c511 : mov dword ptr [r9], r11d ; mov eax, r10d ; ret
0x0000020000515d86 : mov dword ptr [rax + 0x1000000], ebx ; ret
0x000002000008f8aa : mov dword ptr [rax + 0x10], eax ; mov al, 1 ; ret
0x00000200000ff4ac : mov dword ptr [rax + 0x10], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066435f : mov dword ptr [rax + 0x10], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003ecbc3 : mov dword ptr [rax + 0x10], ecx ; ret
0x0000020000223252 : mov dword ptr [rax + 0x12c8], ecx ; ret
0x000002000072e7e2 : mov dword ptr [rax + 0x1c], ebx ; call 0x2000015d889
0x0000020000516b8b : mov dword ptr [rax + 0x20], edi ; call 0x2000013c33a
0x000002000005262a : mov dword ptr [rax + 0x20], edx ; jmp 0x200000522d1
0x00000200001ca3c1 : mov dword ptr [rax + 0x28], eax ; ret
0x00000200000c428c : mov dword ptr [rax + 0x28], ebx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001fdbbb : mov dword ptr [rax + 0x28], ecx ; ret
0x000002000010c2ae : mov dword ptr [rax + 0x30], ebx ; call r9
0x00000200001bd647 : mov dword ptr [rax + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x000002000005a79b : mov dword ptr [rax + 0x3480025], edi ; ret 0x3b48
0x000002000009fae1 : mov dword ptr [rax + 0x40], ecx ; ret
0x000002000050c3d7 : mov dword ptr [rax + 0x50], edx ; mov qword ptr [rdx + 0x30], rcx ; ret
0x00000200006f589d : mov dword ptr [rax + 0x58], ecx ; sub rdx, r8 ; jne 0x200006f5898 ; ret
0x00000200006f589c : mov dword ptr [rax + 0x58], r9d ; sub rdx, r8 ; jne 0x200006f5899 ; ret
0x000002000012a347 : mov dword ptr [rax + 0x5c], eax ; ret
0x0000020000149bda : mov dword ptr [rax + 0x600], edx ; ret
0x0000020000035e7e : mov dword ptr [rax + 0x668], ecx ; ret
0x000002000010c00d : mov dword ptr [rax + 0x670], edx ; ret
0x00000200000b62ea : mov dword ptr [rax + 0x738], ecx ; ret
0x000002000068017e : mov dword ptr [rax + 0x8168], eax ; ret
0x000002000068017d : mov dword ptr [rax + 0x8168], r8d ; ret
0x00000200001e60be : mov dword ptr [rax + 0xa], ecx ; ret
0x000002000052030e : mov dword ptr [rax + 0xc], eax ; xor eax, eax ; ret
0x000002000022e9a1 : mov dword ptr [rax + 0xc], ecx ; mov eax, r9d ; ret
0x0000020000132ffb : mov dword ptr [rax + 0xc], ecx ; ret
0x0000020000196e37 : mov dword ptr [rax + 0xf8], ecx ; ret
0x000002000053d3ae : mov dword ptr [rax + 2], eax ; call 0x2000015d886
0x00000200000e2113 : mov dword ptr [rax + 2], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000053d3ad : mov dword ptr [rax + 2], r8d ; call 0x2000015d887
0x00000200000fb64b : mov dword ptr [rax + 4], ecx ; jmp 0x200000fb616
0x000002000066907e : mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x00000200000fdb52 : mov dword ptr [rax + 4], edx ; ret
0x00000200004fd5a2 : mov dword ptr [rax + 4], edx ; xor eax, eax ; ret
0x00000200005202de : mov dword ptr [rax + 6], eax ; ret
0x000002000060502f : mov dword ptr [rax + 8], eax ; cmp dword ptr [r9], r11d ; ja 0x20000604ff1 ; ret
0x0000020000472975 : mov dword ptr [rax + 8], eax ; jmp 0x20000472923
0x000002000015e015 : mov dword ptr [rax + 8], eax ; mov al, 1 ; ret
0x0000020000026d3d : mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x0000020000095e62 : mov dword ptr [rax + 8], eax ; ret
0x000002000049f15f : mov dword ptr [rax + 8], eax ; xor eax, eax ; ret
0x00000200000efbdb : mov dword ptr [rax + 8], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006715c1 : mov dword ptr [rax + 8], ecx ; and qword ptr [rax + 0x10], 0 ; ret
0x00000200001323bf : mov dword ptr [rax + 8], ecx ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x00000200000e2b6a : mov dword ptr [rax + 8], ecx ; mov qword ptr [rdx], rcx ; ret
0x000002000041195d : mov dword ptr [rax + 8], edx ; inc dword ptr [rcx + 0x5a8] ; ret
0x000002000037d333 : mov dword ptr [rax + 8], edx ; or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x00000200001d4310 : mov dword ptr [rax + 8], edx ; ret
0x00000200001bf2e1 : mov dword ptr [rax + 8], edx ; test edx, edx ; jne 0x200001bf2d9 ; ret
0x0000020000673390 : mov dword ptr [rax + rcx*4], 1 ; ret
0x00000200006733fa : mov dword ptr [rax + rcx*4], edx ; ret
0x00000200001c0b7f : mov dword ptr [rax + rcx*8 + 0x28], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000187024 : mov dword ptr [rax + rcx], edx ; lea rcx, qword ptr [rbp + 0x27] ; call 0x20000033289
0x000002000010b189 : mov dword ptr [rax + rdx + 0x400], eax ; ret
0x000002000010b188 : mov dword ptr [rax + rdx + 0x400], r8d ; ret
0x00000200000e77b2 : mov dword ptr [rax + rdx*8], eax ; inc edx ; jmp 0x200000e77a9
0x000002000012ec30 : mov dword ptr [rax - 0x10], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046f3e3 : mov dword ptr [rax - 0x18000000], edi ; jnp 0x2000046f3d3 ; ret 0x32ff
0x00000200004ad6b1 : mov dword ptr [rax - 0x75000000], ebx ; ret 0xc148
0x000002000066a9a6 : mov dword ptr [rax - 0x75000000], esp ; ret 0xc141
0x0000020000594224 : mov dword ptr [rax - 0x76], 0x95bfe8d7 ; ret
0x00000200000871eb : mov dword ptr [rax - 0x80], eax ; call qword ptr [rcx]
0x0000020000491e28 : mov dword ptr [rax - 4], eax ; dec r9 ; jne 0x20000491e16 ; ret
0x00000200003652e8 : mov dword ptr [rax], 0x1000 ; xor eax, eax ; ret
0x000002000067b009 : mov dword ptr [rax], 0x104 ; ret
0x000002000012fb40 : mov dword ptr [rax], 0x1429 ; xor eax, eax ; ret
0x0000020000392fd9 : mov dword ptr [rax], 0x83480000 ; ret 0xe820
0x00000200004ab286 : mov dword ptr [rax], 0x8a410000 ; ret
0x000002000001ff93 : mov dword ptr [rax], 0xb5000000 ; ret
0x000002000015e2cc : mov dword ptr [rax], 0xc000001d ; xor eax, eax ; ret
0x000002000015e300 : mov dword ptr [rax], 0xc0000096 ; xor eax, eax ; ret
0x0000020000520338 : mov dword ptr [rax], 1 ; xor eax, eax ; ret
0x000002000008f8f5 : mov dword ptr [rax], 4 ; ret
0x00000200004043bc : mov dword ptr [rax], 9 ; mov qword ptr [rdx], rax ; ret
0x0000020000030e15 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; inc dword ptr [rbx + 0x4c] ; call 0x2000003d075
0x000002000014c94d : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, r11b ; ret
0x00000200007133d9 : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010a205 : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fadfd : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000de1d3 : mov dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000505f8d : mov dword ptr [rax], eax ; mov al, 1 ; ret
0x000002000009ef8b : mov dword ptr [rax], eax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x00000200000b4256 : mov dword ptr [rax], eax ; mov eax, 0xc0000095 ; ret
0x0000020000401d2d : mov dword ptr [rax], eax ; mov eax, r9d ; ret
0x0000020000026d41 : mov dword ptr [rax], eax ; ret
0x000002000008fe80 : mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000036f6bb : mov dword ptr [rax], ecx ; add eax, ecx ; ret
0x0000020000444739 : mov dword ptr [rax], ecx ; jmp 0x20000444703
0x000002000066888b : mov dword ptr [rax], ecx ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006688d7 : mov dword ptr [rax], ecx ; mov al, 1 ; ret
0x00000200000dcff6 : mov dword ptr [rax], ecx ; mov al, r9b ; ret
0x000002000041b89f : mov dword ptr [rax], ecx ; mov eax, 1 ; ret
0x00000200001152cd : mov dword ptr [rax], ecx ; mov eax, edx ; ret
0x00000200003ff521 : mov dword ptr [rax], ecx ; mov eax, r9d ; ret
0x00000200001d430d : mov dword ptr [rax], ecx ; mov qword ptr [r8 + 8], rdx ; ret
0x0000020000368395 : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x0000020000471f26 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x1c20a7], rcx ; ret
0x00000200004d2a47 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x1ff1c8], rcx ; ret
0x000002000057d6e7 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x2cd838], rcx ; ret
0x0000020000678bce : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x3caf6f], rcx ; ret
0x0000020000577db7 : mov dword ptr [rax], ecx ; pop rbx ; ret
0x000002000008fcdb : mov dword ptr [rax], ecx ; ret
0x000002000002ab6d : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a3de8 : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000024a10 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000200001d7a89 : mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001bd5eb : mov dword ptr [rax], edi ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000418ff0 : mov dword ptr [rax], edi ; mov rcx, qword ptr [rbx + 0x18] ; call 0x20000045499
0x00000200000f9f7c : mov dword ptr [rax], edx ; mov al, r10b ; ret
0x000002000022c49c : mov dword ptr [rax], edx ; mov eax, r8d ; ret
0x0000020000215152 : mov dword ptr [rax], edx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x00000200000ec29b : mov dword ptr [rax], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000008fe75 : mov dword ptr [rax], edx ; ret
0x00000200000b491d : mov dword ptr [rax], edx ; test eax, eax ; js 0x200000b4936 ; ret
0x00000200000b6349 : mov dword ptr [rax], edx ; test eax, eax ; js 0x200000b6369 ; ret
0x000002000004c469 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000020000134db8 : mov dword ptr [rax], esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001c6659 : mov dword ptr [rax], esi ; test rax, rax ; je 0x200001c666b ; call rax
0x000002000011c883 : mov dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200006433f7 : mov dword ptr [rbp + 0x10], ecx ; mov eax, 1 ; pop rbp ; ret
0x0000020000530c77 : mov dword ptr [rbp + 0x20], ebx ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000056a4d9 : mov dword ptr [rbp + 0x33], 0x2c894ced ; ret
0x00000200006cb9a9 : mov dword ptr [rbp + 0x34], edx ; mov r8d, edx ; jmp 0x200006cb9bc
0x0000020000116d23 : mov dword ptr [rbp + 0x3b480023], esp ; ret
0x000002000018a6d3 : mov dword ptr [rbp + 0x58], esp ; jmp 0x200000a69c7
0x000002000018a6d2 : mov dword ptr [rbp + 0x58], r12d ; jmp 0x200000a69c8
0x00000200006ccbc9 : mov dword ptr [rbp + 0x60], eax ; call r10
0x0000020000538506 : mov dword ptr [rbp + 0x70], esi ; call qword ptr [r14]
0x00000200003957ca : mov dword ptr [rbp + 0x70], esi ; call qword ptr [rsi]
0x00000200006438e8 : mov dword ptr [rbp + 8], ecx ; mov eax, 1 ; pop rbp ; ret
0x000002000050db7b : mov dword ptr [rbp - 0x18], ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004b19d1 : mov dword ptr [rbp - 0x21], esi ; call 0x2000014dc65
0x0000020000648c25 : mov dword ptr [rbp - 0x30], edi ; call 0x20000294007
0x0000020000395a23 : mov dword ptr [rbp - 0x38], ebx ; call qword ptr [r14]
0x0000020000538502 : mov dword ptr [rbp - 0x38], ebx ; mov qword ptr [rbp + 0x70], r14 ; call qword ptr [r14]
0x00000200004b19cd : mov dword ptr [rbp - 0x39], eax ; mov qword ptr [rbp - 0x21], r14 ; call 0x2000014dc69
0x000002000021803c : mov dword ptr [rbp - 0x3d], eax ; call r9
0x0000020000070a83 : mov dword ptr [rbp - 0x40], 0x45c60001 ; ret 0x4806
0x00000200000998ee : mov dword ptr [rbp - 0x48], eax ; jmp 0x200000998ba
0x000002000046d497 : mov dword ptr [rbp - 0x48], ebx ; call r14
0x00000200005e14ab : mov dword ptr [rbp - 0x48], ecx ; jne 0x200005e1476 ; jmp 0x200005e14cc
0x00000200003c3feb : mov dword ptr [rbp - 0x50], eax ; call 0x200000702b5
0x00000200000317ff : mov dword ptr [rbp - 0x51], eax ; call 0x2000003d075
0x00000200004ab000 : mov dword ptr [rbp - 0x51], ebx ; call rax
0x0000020000653c03 : mov dword ptr [rbp - 0x55], eax ; call 0x2000006fe25
0x00000200005a596c : mov dword ptr [rbp - 0x61], ebx ; call r15
0x000002000050195b : mov dword ptr [rbp - 0x61], esi ; call 0x2000014dc65
0x0000020000501957 : mov dword ptr [rbp - 0x69], esi ; mov qword ptr [rbp - 0x61], r14 ; call 0x2000014dc69
0x000002000043c2b1 : mov dword ptr [rbp - 0x70], esi ; call 0x200000690a6
0x00000200004f28b0 : mov dword ptr [rbp - 0x78], eax ; call 0x200004aeaf5
0x000002000021b88b : mov dword ptr [rbp - 0x78], esi ; call r9
0x000002000021b88a : mov dword ptr [rbp - 0x78], r14d ; call r9
0x000002000021b887 : mov dword ptr [rbp - 0x80], eax ; mov dword ptr [rbp - 0x78], r14d ; call r9
0x0000020000703bc7 : mov dword ptr [rbp - 0xd], 0x1f01ff ; call 0x2000006fe29
0x000002000053524e : mov dword ptr [rbp - 9], eax ; call 0x2000015dbc6
0x0000020000062270 : mov dword ptr [rbp - 9], edx ; call 0x20000039e29
0x000002000056e8cf : mov dword ptr [rbp], edi ; jmp 0x2000056e89a
0x00000200000e905f : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000203ed4 : mov dword ptr [rbx + 0x10], eax ; mov dword ptr [rbx], esi ; call 0x20000120147
0x000002000051f001 : mov dword ptr [rbx + 0x14], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f2945 : mov dword ptr [rbx + 0x1c], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051e6c8 : mov dword ptr [rbx + 0x1c], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051e6c7 : mov dword ptr [rbx + 0x1c], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000138f02 : mov dword ptr [rbx + 0x20], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004a98dc : mov dword ptr [rbx + 0x28], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005070c5 : mov dword ptr [rbx + 0x28], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011a99d : mov dword ptr [rbx + 0x30], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004b6676 : mov dword ptr [rbx + 0x40], edx ; call 0x200000e1ac6
0x0000020000434d86 : mov dword ptr [rbx + 0x68], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043126a : mov dword ptr [rbx + 0x70], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000612fee : mov dword ptr [rbx + 0xa], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000612fed : mov dword ptr [rbx + 0xa], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f2784 : mov dword ptr [rbx + 0xd0], edi ; jmp 0x200000f2756
0x000002000053d555 : mov dword ptr [rbx + 2], ebp ; call 0x2000015d886
0x00000200001de3ae : mov dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000409092 : mov dword ptr [rbx + 8], eax ; call 0x20000031496
0x00000200005b5f4d : mov dword ptr [rbx + 8], eax ; call 0x200001e4d8a
0x000002000049a0f9 : mov dword ptr [rbx + 8], eax ; jmp 0x2000049a0c5
0x00000200000b84f4 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x00000200000d7d05 : mov dword ptr [rbx + 8], eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200004fc3ac : mov dword ptr [rbx + 8], edx ; jmp 0x200004fc377
0x000002000021d9a9 : mov dword ptr [rbx + rcx*4 - 0x40], 0x3bc32b44 ; ret
0x00000200000fdc60 : mov dword ptr [rbx + rdx*8 + 8], ecx ; ret
0x00000200005086be : mov dword ptr [rbx - 0x18], eax ; call 0x20000138062
0x00000200004c15ad : mov dword ptr [rbx - 0x18], edi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000011727 : mov dword ptr [rbx - 0x1b1a7fb8], ebp ; ret 0x394e
0x000002000011913d : mov dword ptr [rbx - 0x28], eax ; call r10
0x0000020000446fcb : mov dword ptr [rbx - 0x38], eax ; call r10
0x00000200004c6fb7 : mov dword ptr [rbx - 0x38], eax ; call rdi
0x00000200004c15b1 : mov dword ptr [rbx - 0x48], eax ; call rbx
0x000002000041c271 : mov dword ptr [rbx - 0x75000000], ecx ; ret
0x000002000045baaf : mov dword ptr [rbx], 0x834800f0 ; ret
0x000002000045bb96 : mov dword ptr [rbx], 0x8348ffef ; ret
0x0000020000026de7 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008c87a : mov dword ptr [rbx], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000206ccd : mov dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001073d0 : mov dword ptr [rbx], eax ; mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006493e9 : mov dword ptr [rbx], eax ; mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000049a0f6 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rax ; jmp 0x2000049a0c8
0x00000200001332d3 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000142581 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065d5ca : mov dword ptr [rbx], ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001b449b : mov dword ptr [rbx], ebx ; sldt word ptr [rdi + rcx - 0x49] ; ret 0x8348
0x000002000047e368 : mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b8089 : mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000059023f : mov dword ptr [rbx], ecx ; add word ptr [rbx + 2], ax ; jmp 0x200004ac4cb
0x00000200000f5ef0 : mov dword ptr [rbx], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000036b4fc : mov dword ptr [rbx], ecx ; ret
0x0000020000134a05 : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000070180 : mov dword ptr [rbx], edi ; jmp 0x20000070149
0x00000200001ca441 : mov dword ptr [rbx], edx ; mov eax, r8d ; ret
0x00000200004fc3a9 : mov dword ptr [rbx], edx ; mov qword ptr [rbx + 8], rdx ; jmp 0x200004fc37a
0x0000020000236948 : mov dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x000002000037ed62 : mov dword ptr [rbx], edx ; ret
0x000002000000e8b6 : mov dword ptr [rbx], edx ; ret 0x267
0x0000020000203ed7 : mov dword ptr [rbx], esi ; call 0x20000120144
0x000002000053d552 : mov dword ptr [rbx], esi ; mov word ptr [rbx + 2], bp ; call 0x2000015d889
0x000002000065d5c9 : mov dword ptr [rbx], r11d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006f65b : mov dword ptr [rcx + 0x10], eax ; jmp 0x2000006f549
0x0000020000095e5c : mov dword ptr [rcx + 0x10], eax ; jmp 0x20000095e27
0x00000200004f7cb2 : mov dword ptr [rcx + 0x10], eax ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200000393ad : mov dword ptr [rcx + 0x10], eax ; mov qword ptr [rcx + 0x20], r8 ; ret
0x000002000051ef6d : mov dword ptr [rcx + 0x10], eax ; ret
0x0000020000107cb4 : mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; mov qword ptr [rcx + 0x18], r9 ; ret
0x00000200005202ae : mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x0000020000600ed6 : mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x00000200000f8612 : mov dword ptr [rcx + 0x10], edx ; ret
0x0000020000719662 : mov dword ptr [rcx + 0x128], eax ; xor eax, eax ; ret
0x00000200005203e4 : mov dword ptr [rcx + 0x14], eax ; ret
0x00000200000eb88d : mov dword ptr [rcx + 0x168], eax ; ret
0x00000200005c9735 : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x000002000010adc2 : mov dword ptr [rcx + 0x18], eax ; mov byte ptr [rcx + 0x10], al ; mov dword ptr [rcx + 0x58], eax ; ret
0x00000200001585c7 : mov dword ptr [rcx + 0x18], eax ; mov eax, 2 ; ret
0x0000020000628cbb : mov dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000039393 : mov dword ptr [rcx + 0x18], eax ; mov qword ptr [rcx + 0x38], r8 ; ret
0x000002000009ef8e : mov dword ptr [rcx + 0x18], eax ; ret
0x00000200000cee83 : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx + 0x1c], r8d ; ret
0x0000020000107cba : mov dword ptr [rcx + 0x18], ecx ; ret
0x0000020000600f7d : mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x00000200000fab18 : mov dword ptr [rcx + 0x18], edx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x000002000009ef8d : mov dword ptr [rcx + 0x18], r8d ; ret
0x00000200000cee82 : mov dword ptr [rcx + 0x18], r9d ; mov dword ptr [rcx + 0x1c], r8d ; ret
0x00000200000cee87 : mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200000cee86 : mov dword ptr [rcx + 0x1c], r8d ; ret
0x000002000059ecaa : mov dword ptr [rcx + 0x20], eax ; jmp 0x200004dc19f
0x00000200000393b1 : mov dword ptr [rcx + 0x20], eax ; ret
0x0000020000667591 : mov dword ptr [rcx + 0x20], ecx ; ret
0x000002000049092f : mov dword ptr [rcx + 0x23], eax ; ror byte ptr [rax - 0x3f], 0xe1 ; add eax, dword ptr [rbx] ; ret 0x8948
0x000002000020a220 : mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x00000200001de462 : mov dword ptr [rcx + 0x298], edx ; ret
0x00000200001d5f30 : mov dword ptr [rcx + 0x29f4], eax ; mov eax, edx ; jmp 0x200001d5ef6
0x00000200001d607e : mov dword ptr [rcx + 0x29f4], eax ; mov eax, edx ; jmp 0x200001d60a5
0x00000200000ffbbf : mov dword ptr [rcx + 0x2c], eax ; ret
0x00000200000ffbb5 : mov dword ptr [rcx + 0x2c], edx ; ret
0x000002000068d86d : mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x00000200005ceea0 : mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x000002000020a7f0 : mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x0000020000039397 : mov dword ptr [rcx + 0x38], eax ; ret
0x0000020000105eb7 : mov dword ptr [rcx + 0x38], ecx ; mov qword ptr [rcx + 0x40], rax ; ret
0x000002000004c922 : mov dword ptr [rcx + 0x38], edx ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200000fab1c : mov dword ptr [rcx + 0x38], edx ; ret
0x000002000014887a : mov dword ptr [rcx + 0x3b], 0x440f41ca ; ret 0x6348
0x000002000012b78d : mov dword ptr [rcx + 0x3b], 0x8a5e72c6 ; ret
0x00000200004c13d1 : mov dword ptr [rcx + 0x3c8], edx ; ret
0x00000200004c50b5 : mov dword ptr [rcx + 0x3d0], eax ; xor eax, eax ; ret
0x00000200004b30c7 : mov dword ptr [rcx + 0x400], eax ; ret
0x00000200004ee6a0 : mov dword ptr [rcx + 0x40], eax ; mov byte ptr [rcx + 0x48], 0 ; ret
0x0000020000105ebb : mov dword ptr [rcx + 0x40], eax ; ret
0x00000200001ce542 : mov dword ptr [rcx + 0x40], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005ceea4 : mov dword ptr [rcx + 0x40], edx ; ret
0x000002000060d919 : mov dword ptr [rcx + 0x448], edx ; xor eax, eax ; ret
0x000002000020a7f4 : mov dword ptr [rcx + 0x48], eax ; ret
0x00000200001bc655 : mov dword ptr [rcx + 0x48], ecx ; mov al, 1 ; ret
0x0000020000610505 : mov dword ptr [rcx + 0x48], ecx ; ret
0x00000200001bc63f : mov dword ptr [rcx + 0x48], ecx ; xor al, al ; ret
0x0000020000158647 : mov dword ptr [rcx + 0x48], edx ; mov eax, 3 ; ret
0x0000020000215155 : mov dword ptr [rcx + 0x48], edx ; ret
0x00000200001f64a8 : mov dword ptr [rcx + 0x50], 0xc0000017 ; mov dword ptr [rdx], eax ; ret
0x000002000012d107 : mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x000002000013e4f6 : mov dword ptr [rcx + 0x5340], eax ; ret
0x00000200006fab35 : mov dword ptr [rcx + 0x5370], eax ; ret
0x0000020000116946 : mov dword ptr [rcx + 0x5448], eax ; ret
0x00000200000d10ba : mov dword ptr [rcx + 0x58], eax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000010adc8 : mov dword ptr [rcx + 0x58], eax ; ret
0x00000200000990bb : mov dword ptr [rcx + 0x590], edx ; ret
0x00000200000d10be : mov dword ptr [rcx + 0x60], eax ; ret
0x000002000012a76d : mov dword ptr [rcx + 0x670], edx ; ret
0x00000200001de337 : mov dword ptr [rcx + 0x6a], ebx ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200003708eb : mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x00000200000aa890 : mov dword ptr [rcx + 0x70], edx ; jmp 0x200000aa85b
0x000002000015e0e9 : mov dword ptr [rcx + 0x70], edx ; ret
0x00000200004bf7b3 : mov dword ptr [rcx + 0x70], edx ; xor eax, eax ; ret
0x00000200003708ee : mov dword ptr [rcx + 0x78], eax ; ret
0x00000200004a8e10 : mov dword ptr [rcx + 0x7c], edx ; ret
0x000002000015e351 : mov dword ptr [rcx + 0x88], edx ; xor eax, eax ; ret
0x00000200004d12c1 : mov dword ptr [rcx + 0xa4], eax ; ret
0x000002000071e2e2 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000ea959 : mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000013b861 : mov dword ptr [rcx + 0xc], ecx ; mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x00000200001356df : mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x000002000065d1c8 : mov dword ptr [rcx + 0xd6], eax ; ret
0x00000200006741d3 : mov dword ptr [rcx + 0xe0], eax ; ret
0x000002000006fe57 : mov dword ptr [rcx + 2], eax ; ret
0x00000200000b4dd4 : mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x00000200003ae0d7 : mov dword ptr [rcx + 2], edx ; mov byte ptr [rcx + 1], al ; mov dword ptr [rcx + 4], eax ; ret
0x00000200004ca507 : mov dword ptr [rcx + 2], edx ; ret
0x000002000040cc4c : mov dword ptr [rcx + 4], 0x10 ; ret
0x00000200003ae0dd : mov dword ptr [rcx + 4], eax ; ret
0x000002000015e18b : mov dword ptr [rcx + 4], edx ; and qword ptr [rcx + 8], 0 ; ret
0x000002000046be5b : mov dword ptr [rcx + 4], edx ; mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x00000200000eca66 : mov dword ptr [rcx + 4], edx ; ret
0x000002000047a813 : mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000015df35 : mov dword ptr [rcx + 8], 0x48 ; ret
0x000002000066afe6 : mov dword ptr [rcx + 8], 0xdeadf00d ; ret
0x00000200000dab44 : mov dword ptr [rcx + 8], eax ; add rsp, 0x28 ; ret
0x0000020000591d60 : mov dword ptr [rcx + 8], eax ; jmp 0x200004b18d1
0x000002000016aa33 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rdx], rax ; ret
0x000002000015e0b3 : mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200000ac813 : mov dword ptr [rcx + 8], eax ; ret
0x000002000013b865 : mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x000002000051ef69 : mov dword ptr [rcx + 8], ecx ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000015e0c1 : mov dword ptr [rcx + 8], ecx ; ret
0x000002000015e344 : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 1 ; ret
0x00000200002055c0 : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 2 ; ret
0x000002000010392c : mov dword ptr [rcx + 8], edx ; ret
0x000002000002b9fb : mov dword ptr [rcx + 8], edx ; xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000013b864 : mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x000002000003364e : mov dword ptr [rcx + rax*4], ecx ; ret
0x000002000003364d : mov dword ptr [rcx + rax*4], r9d ; ret
0x000002000066f940 : mov dword ptr [rcx + rcx], eax ; ret
0x00000200000b84f8 : mov dword ptr [rcx + rdx*8 + 0x10], ebx ; ret
0x0000020000486303 : mov dword ptr [rcx + rsi + 0xc8], eax ; inc rdx ; jmp 0x200004862ed
0x0000020000159eae : mov dword ptr [rcx - 0x10], eax ; mov qword ptr [rcx - 8], rax ; jne 0x20000159e99 ; ret
0x00000200006449ac : mov dword ptr [rcx - 0x48], 0x20019 ; call 0x200004f0c0d
0x000002000022266f : mov dword ptr [rcx - 0x73], 0xf410151 ; ret 0xb841
0x00000200004ed31c : mov dword ptr [rcx - 0x74fff47f], esi ; ret
0x00000200006e866c : mov dword ptr [rcx - 0x75], 0x54314ccf ; ret 0x49f8
0x0000020000159eb2 : mov dword ptr [rcx - 8], eax ; jne 0x20000159e95 ; ret
0x00000200000967f6 : mov dword ptr [rcx], 0 ; ret
0x00000200005d5ea6 : mov dword ptr [rcx], 0x28 ; mov eax, ecx ; ret
0x00000200005ceec2 : mov dword ptr [rcx], 0x4c706345 ; xor eax, eax ; ret
0x00000200003ec379 : mov dword ptr [rcx], 0x8d410000 ; adc byte ptr [r11], r15b ; ret
0x000002000015e347 : mov dword ptr [rcx], 1 ; ret
0x0000020000106a5e : mov dword ptr [rcx], 2 ; ret
0x000002000010d0ca : mov dword ptr [rcx], 3 ; ret
0x00000200005e5a8b : mov dword ptr [rcx], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f4fca : mov dword ptr [rcx], eax ; add al, al ; ret
0x000002000010c2b9 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061d282 : mov dword ptr [rcx], eax ; add rsp, 0x28 ; ret
0x000002000009d305 : mov dword ptr [rcx], eax ; inc ax ; mov word ptr [rcx + 2], ax ; ret
0x000002000049ef61 : mov dword ptr [rcx], eax ; jmp 0x2000049ef6f
0x0000020000668923 : mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x000002000015e22b : mov dword ptr [rcx], eax ; mov eax, 0xc00000bb ; ret
0x00000200004af402 : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x000002000051fddf : mov dword ptr [rcx], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049f15c : mov dword ptr [rcx], eax ; mov qword ptr [r8 + 8], rax ; xor eax, eax ; ret
0x000002000052037f : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000103929 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200001cd397 : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x107db8], rcx ; ret
0x00000200000fa7b1 : mov dword ptr [rcx], eax ; mov rax, rcx ; add rsp, 0x28 ; ret
0x00000200004d727b : mov dword ptr [rcx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000095e37 : mov dword ptr [rcx], eax ; ret
0x000002000038e921 : mov dword ptr [rcx], eax ; test rdi, rdi ; je 0x2000038e8f0 ; jmp 0x2000038e8cc
0x00000200005b99fe : mov dword ptr [rcx], eax ; test rdx, rdx ; je 0x200005b9a10 ; mov dword ptr [rdx], eax ; ret
0x000002000009d2e0 : mov dword ptr [rcx], eax ; test rdx, rdx ; jne 0x2000009d2ef ; ret
0x00000200000d4c80 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000025a8c : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200000ec9a3 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000014c512 : mov dword ptr [rcx], ebx ; mov eax, r10d ; ret
0x0000020000232526 : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000012dee0 : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x00000200000c008d : mov dword ptr [rcx], ebx ; ret
0x00000200001106dd : mov dword ptr [rcx], ecx ; add bh, bh ; ret 0x8348
0x0000020000110436 : mov dword ptr [rcx], ecx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000481763 : mov dword ptr [rcx], ecx ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x000002000061ec39 : mov dword ptr [rcx], ecx ; mov eax, edx ; ret
0x000002000002b55d : mov dword ptr [rcx], ecx ; mov eax, r10d ; ret
0x000002000061ecac : mov dword ptr [rcx], ecx ; mov eax, r11d ; ret
0x00000200000ed1e8 : mov dword ptr [rcx], ecx ; mov eax, r8d ; ret
0x0000020000520443 : mov dword ptr [rcx], ecx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200004f7caf : mov dword ptr [rcx], ecx ; mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200001323c3 : mov dword ptr [rcx], ecx ; mov rax, r10 ; ret
0x00000200001bd64d : mov dword ptr [rcx], ecx ; ret
0x00000200003ba654 : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000020000134848 : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001bef2b : mov dword ptr [rcx], edx ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001c18ec : mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200004c0ff1 : mov dword ptr [rcx], edx ; mov eax, r8d ; ret
0x00000200004d9367 : mov dword ptr [rcx], edx ; mov qword ptr [rax + 8], rdx ; ret
0x00000200000f584f : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rax ; ret
0x000002000044ca4d : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000142065 : mov dword ptr [rcx], edx ; mov rax, r9 ; ret
0x000002000051f5eb : mov dword ptr [rcx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000046be5f : mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x00000200000b5cfb : mov dword ptr [rcx], edx ; ret
0x00000200001c53d8 : mov dword ptr [rcx], edx ; sbb eax, eax ; and eax, 0xc0000023 ; ret
0x00000200001c18e1 : mov dword ptr [rcx], edx ; xor al, al ; ret
0x0000020000142064 : mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x00000200001d6e18 : mov dword ptr [rcx], r10d ; ret
0x00000200001d786e : mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x00000200000c008c : mov dword ptr [rcx], r11d ; ret
0x0000020000103928 : mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200004d727a : mov dword ptr [rcx], r8d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000009d2df : mov dword ptr [rcx], r8d ; test rdx, rdx ; jne 0x2000009d2f0 ; ret
0x00000200004b439a : mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x000002000046aca9 : mov dword ptr [rdi + 0x1c], edi ; call 0x20000406f29
0x000002000046aca8 : mov dword ptr [rdi + 0x1c], r15d ; call 0x20000406f2a
0x000002000043965f : mov dword ptr [rdi + 0x30], eax ; call 0x200000690e6
0x00000200004216a1 : mov dword ptr [rdi + 0x30], ebx ; call 0x20000043cda
0x000002000037e2a5 : mov dword ptr [rdi + 0x40], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000520218 : mov dword ptr [rdi + 0x50], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051e24c : mov dword ptr [rdi + 0x6a], edx ; or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x000002000043b6cc : mov dword ptr [rdi + 0x78], eax ; call 0x20000068fd6
0x00000200000c27a0 : mov dword ptr [rdi + 0x88], esi ; jmp 0x200000c2771
0x000002000050d815 : mov dword ptr [rdi + 0x9c], ebx ; call 0x20000138f15
0x00000200004d3b32 : mov dword ptr [rdi + rcx + 0x22], 0x58d4cc6 ; ret 0xdffd
0x00000200003ed8f7 : mov dword ptr [rdi + rcx], 0x166dcf85 ; add dh, dh ; ret
0x000002000012ecf4 : mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bf0b3 : mov dword ptr [rdi], ebx ; jmp 0x200000bf07c
0x000002000020864d : mov dword ptr [rdi], ebx ; mov eax, r10d ; jmp 0x20000208677
0x0000020000209035 : mov dword ptr [rdi], ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000382131 : mov dword ptr [rdi], ecx ; jmp 0x200003820fb
0x00000200001ce932 : mov dword ptr [rdi], edi ; jmp 0x200001ceade
0x000002000049ea7a : mov dword ptr [rdi], edi ; jmp 0x2000049e9b3
0x000002000051bc1b : mov dword ptr [rdi], esi ; jmp 0x2000051bbe4
0x000002000020864c : mov dword ptr [rdi], r11d ; mov eax, r10d ; jmp 0x20000208678
0x00000200001049d7 : mov dword ptr [rdx + 0x10], eax ; add rsp, 0x38 ; ret
0x00000200000e0aa5 : mov dword ptr [rdx + 0x10], eax ; ret
0x000002000002ba01 : mov dword ptr [rdx + 0x10], ecx ; ret
0x0000020000681238 : mov dword ptr [rdx + 0x120], eax ; xor eax, eax ; ret
0x00000200001396af : mov dword ptr [rdx + 0x124], eax ; ret
0x000002000002b347 : mov dword ptr [rdx + 0x14], eax ; ret
0x000002000013cdb4 : mov dword ptr [rdx + 0x14], ecx ; xor eax, eax ; ret
0x000002000009db6b : mov dword ptr [rdx + 0x18], eax ; mov al, 1 ; ret
0x00000200005203c4 : mov dword ptr [rdx + 0x207c], eax ; ret
0x00000200005c15cd : mov dword ptr [rdx + 0x28], eax ; ret
0x00000200005c15c0 : mov dword ptr [rdx + 0x28], ecx ; mov qword ptr [rdx + 0x38], rax ; ret
0x00000200004f45d0 : mov dword ptr [rdx + 0x28], ecx ; ret
0x0000020000157697 : mov dword ptr [rdx + 0x2cc0], eax ; ret
0x000002000050c3db : mov dword ptr [rdx + 0x30], ecx ; ret
0x000002000050a038 : mov dword ptr [rdx + 0x38], eax ; mov byte ptr [r10 + 0x30], dl ; ret
0x00000200005c15c4 : mov dword ptr [rdx + 0x38], eax ; ret
0x00000200002154bd : mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x000002000020a394 : mov dword ptr [rdx + 0x48], 0x8b410000 ; ret
0x00000200005c15f1 : mov dword ptr [rdx + 0x48], eax ; ret
0x000002000011d281 : mov dword ptr [rdx + 0x50], eax ; mov byte ptr [r10 + 0x5f], r11b ; ret
0x00000200001262d6 : mov dword ptr [rdx + 0x68], eax ; ret
0x00000200000b6305 : mov dword ptr [rdx + 0x738], ecx ; ret
0x000002000036f5b5 : mov dword ptr [rdx + 0x88], ecx ; pop r14 ; ret
0x000002000050805e : mov dword ptr [rdx + 0xa], eax ; and word ptr [rdx + 8], cx ; ret
0x000002000071e51f : mov dword ptr [rdx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000002000010878c : mov dword ptr [rdx + 2], eax ; ret
0x000002000042e7ee : mov dword ptr [rdx + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047a8d0 : mov dword ptr [rdx + 2], ecx ; xor eax, eax ; ret
0x000002000067573e : mov dword ptr [rdx + 2], r8d ; ret
0x00000200005fa2d7 : mov dword ptr [rdx + 4], 4 ; mov dword ptr [rdx], eax ; ret
0x00000200004c7f86 : mov dword ptr [rdx + 6], eax ; jmp 0x200004c7ec8
0x00000200004315a6 : mov dword ptr [rdx + 8], eax ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000c4d4f : mov dword ptr [rdx + 8], eax ; jmp 0x200000c4d1b
0x0000020000033761 : mov dword ptr [rdx + 8], eax ; ret
0x0000020000368398 : mov dword ptr [rdx + 8], ecx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000b5cf7 : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rcx], rdx ; ret
0x000002000044ca50 : mov dword ptr [rdx + 8], ecx ; ret
0x0000020000053a26 : mov dword ptr [rdx + 8], edi ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000aa879 : mov dword ptr [rdx + 8], edx ; mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x00000200001348ec : mov dword ptr [rdx + rax*4 + 0x353a90], ecx ; ret
0x0000020000033657 : mov dword ptr [rdx + rax*4], ecx ; ret
0x0000020000033656 : mov dword ptr [rdx + rax*4], r9d ; ret
0x000002000010885c : mov dword ptr [rdx + rax], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001317f1 : mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200005ef0ff : mov dword ptr [rdx + rcx + 0x350ad8], eax ; mov al, 1 ; ret
0x00000200001c0a1b : mov dword ptr [rdx + rcx*4], eax ; inc dword ptr [r10 + 0xc] ; ret
0x00000200001c0a52 : mov dword ptr [rdx + rcx*4], eax ; inc dword ptr [r10 + 8] ; ret
0x00000200006706eb : mov dword ptr [rdx + rcx*8 + 0x18], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004add31 : mov dword ptr [rdx + rcx*8 + 0x70], ecx ; inc dword ptr [rdx + 0x6c] ; ret
0x00000200001b24b0 : mov dword ptr [rdx - 0x48f00009], ecx ; ret 0x8b4c
0x00000200000ee78c : mov dword ptr [rdx - 0x75000000], ecx ; ret 0xe8c1
0x0000020000124b9f : mov dword ptr [rdx], 0 ; ret
0x00000200000a8887 : mov dword ptr [rdx], 0x3b480000 ; ret
0x000002000020ecd2 : mov dword ptr [rdx], 0x478a0388 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000405f0d : mov dword ptr [rdx], 0xa ; mov eax, r8d ; ret
0x00000200002089b9 : mov dword ptr [rdx], 0xffffffff ; ret
0x00000200004f1548 : mov dword ptr [rdx], 1 ; mov al, 1 ; ret
0x000002000010ab96 : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000d5458 : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200000d53e9
0x000002000037933f : mov dword ptr [rdx], eax ; add rsp, 0x28 ; ret
0x00000200006cf1fb : mov dword ptr [rdx], eax ; call r10
0x00000200003ecfb4 : mov dword ptr [rdx], eax ; lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x00000200001be3a2 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000200000faa15 : mov dword ptr [rdx], eax ; mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000003375b : mov dword ptr [rdx], eax ; mov eax, dword ptr [r8 + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x0000020000123816 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 0x28c] ; ret
0x00000200000fe924 : mov dword ptr [rdx], eax ; mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000200000e1f0b : mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x00000200005def67 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x000002000012f92e : mov dword ptr [rdx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200001030b4 : mov dword ptr [rdx], eax ; mov qword ptr [rip + 0x1c4d7b], rax ; ret
0x00000200003850ac : mov dword ptr [rdx], eax ; mov rax, rcx ; ret
0x000002000067573b : mov dword ptr [rdx], eax ; mov word ptr [rdx + 2], r8w ; ret
0x0000020000148dd2 : mov dword ptr [rdx], eax ; movzx eax, cx ; add rsp, 0x38 ; ret
0x0000020000033774 : mov dword ptr [rdx], eax ; ret
0x00000200001deb1e : mov dword ptr [rdx], eax ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000f9ed8 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000666555 : mov dword ptr [rdx], ebx ; mov rax, r9 ; ret
0x000002000010a1b0 : mov dword ptr [rdx], ebx ; ret
0x000002000020a034 : mov dword ptr [rdx], ecx ; add qword ptr [r8], 2 ; ret
0x0000020000028a2c : mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x0000020000148d44 : mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x00000200001bbad4 : mov dword ptr [rdx], ecx ; add rsp, 0x48 ; ret
0x0000020000446fdd : mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x000002000043832f : mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x00000200003ac3dc : mov dword ptr [rdx], ecx ; mov al, 1 ; ret
0x0000020000507065 : mov dword ptr [rdx], ecx ; mov al, r11b ; jmp 0x20000507035
0x000002000020a316 : mov dword ptr [rdx], ecx ; mov eax, r8d ; ret
0x00000200001ca43e : mov dword ptr [rdx], ecx ; mov qword ptr [r11], rdx ; mov eax, r8d ; ret
0x0000020000120f51 : mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x0000020000490132 : mov dword ptr [rdx], ecx ; mov rax, rdx ; add rsp, 0x28 ; ret
0x00000200006e9e56 : mov dword ptr [rdx], ecx ; mov rcx, r10 ; jmp rcx
0x00000200000c886a : mov dword ptr [rdx], ecx ; ret
0x00000200001d1764 : mov dword ptr [rdx], ecx ; xor al, al ; ret
0x0000020000209087 : mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200000727e8 : mov dword ptr [rdx], edx ; mov rax, r8 ; ret
0x00000200004523c3 : mov dword ptr [rdx], esi ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000067573a : mov dword ptr [rdx], r8d ; mov word ptr [rdx + 2], r8w ; ret
0x00000200000f9ed7 : mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000507064 : mov dword ptr [rdx], r9d ; mov al, r11b ; jmp 0x20000507036
0x00000200001d1763 : mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001cd39a : mov dword ptr [rip + 0x107db8], ecx ; ret
0x0000020000197577 : mov dword ptr [rip + 0x13887f], eax ; mov al, 1 ; ret
0x0000020000197576 : mov dword ptr [rip + 0x13887f], r8d ; mov al, 1 ; ret
0x0000020000568f4d : mov dword ptr [rip + 0x1417c5], eax ; ret
0x0000020000141610 : mov dword ptr [rip + 0x1559ea], ecx ; ret
0x000002000013fd64 : mov dword ptr [rip + 0x158132], eax ; xor eax, eax ; ret
0x000002000013fd4d : mov dword ptr [rip + 0x15814d], eax ; xor eax, eax ; ret
0x000002000013fabe : mov dword ptr [rip + 0x158370], eax ; mov eax, r10d ; ret
0x000002000013453e : mov dword ptr [rip + 0x170f24], ecx ; ret
0x0000020000131ddd : mov dword ptr [rip + 0x1711a9], eax ; ret
0x000002000012e250 : mov dword ptr [rip + 0x174d12], edx ; call 0x2000068a46c
0x0000020000679ae0 : mov dword ptr [rip + 0x1764a], eax ; ret
0x000002000013faf6 : mov dword ptr [rip + 0x176bec], eax ; xor eax, eax ; ret
0x000002000015e2b4 : mov dword ptr [rip + 0x17737e], edx ; ret
0x000002000052039c : mov dword ptr [rip + 0x18a37e], eax ; ret
0x000002000013e353 : mov dword ptr [rip + 0x19a0bb], eax ; xor eax, eax ; ret
0x0000020000134ab1 : mov dword ptr [rip + 0x19b401], edx ; ret
0x00000200006750ee : mov dword ptr [rip + 0x1bfc0], eax ; ret
0x00000200001030b7 : mov dword ptr [rip + 0x1c4d7b], eax ; ret
0x000002000015e246 : mov dword ptr [rip + 0x1f2e2c], eax ; ret
0x000002000066ec4f : mov dword ptr [rip + 0x22457], ecx ; ret
0x000002000023779d : mov dword ptr [rip + 0x6f50d], eax ; jmp 0x200002377d7
0x00000200002373dc : mov dword ptr [rip + 0xced4e], eax ; ret
0x00000200001cbe0d : mov dword ptr [rip + 0xd711d], ecx ; ret
0x00000200001deacd : mov dword ptr [rip + 0xeaf45], eax ; ret
0x00000200001dd55a : mov dword ptr [rip + 0xec5a8], ecx ; ret
0x00000200003e599e : mov dword ptr [rip - 0x11d244], eax ; ret
0x00000200003e59a7 : mov dword ptr [rip - 0x11d24d], eax ; ret
0x00000200003e59a6 : mov dword ptr [rip - 0x11d24d], r8d ; ret
0x0000020000407a0e : mov dword ptr [rip - 0x135384], edi ; call 0x20000031499
0x0000020000418c02 : mov dword ptr [rip - 0x1471d8], eax ; call 0x20000045499
0x0000020000471f29 : mov dword ptr [rip - 0x1c20a7], ecx ; ret
0x00000200004d2a4a : mov dword ptr [rip - 0x1ff1c8], ecx ; ret
0x00000200004cb5a8 : mov dword ptr [rip - 0x22565e], edx ; ret
0x00000200004cccce : mov dword ptr [rip - 0x227364], eax ; call 0x200000f3bdd
0x00000200004ccd47 : mov dword ptr [rip - 0x2273dd], eax ; call 0x200000f3bdd
0x00000200004ce347 : mov dword ptr [rip - 0x228701], ecx ; or byte ptr [r10], dl ; ret
0x00000200004ee656 : mov dword ptr [rip - 0x248d04], eax ; ret
0x000002000051fbe9 : mov dword ptr [rip - 0x249d3f], eax ; ja 0x2000051fbfa ; ret
0x000002000050a4d4 : mov dword ptr [rip - 0x25f642], esi ; call 0x20000138195
0x000002000050efc4 : mov dword ptr [rip - 0x2693d6], edx ; call 0x20000139715
0x000002000050e9d7 : mov dword ptr [rip - 0x26e685], ebx ; call 0x20000139679
0x000002000051f7e8 : mov dword ptr [rip - 0x279c16], ecx ; ret
0x000002000057d6ea : mov dword ptr [rip - 0x2cd838], ecx ; ret
0x00000200005efbf9 : mov dword ptr [rip - 0x2ff4ff], edx ; xor eax, eax ; ret
0x00000200005f4dd3 : mov dword ptr [rip - 0x32b961], ecx ; jmp 0x200005f4da5
0x00000200005f4eb1 : mov dword ptr [rip - 0x32ba3f], ecx ; jmp 0x200005f4e83
0x000002000060b5fc : mov dword ptr [rip - 0x368f16], edx ; ret
0x000002000060b603 : mov dword ptr [rip - 0x368f19], edx ; ret
0x0000020000674058 : mov dword ptr [rip - 0x3ab262], ecx ; ret
0x00000200006666dc : mov dword ptr [rip - 0x3b8d8a], esi ; call 0x20000294009
0x0000020000666b00 : mov dword ptr [rip - 0x3b9196], esi ; call 0x20000294009
0x00000200007187e4 : mov dword ptr [rip - 0x3c6db2], eax ; ret
0x0000020000678bd1 : mov dword ptr [rip - 0x3caf6f], ecx ; ret
0x00000200006fec37 : mov dword ptr [rip - 0x42b2a1], ecx ; ret
0x00000200006fea0b : mov dword ptr [rip - 0x42cf59], edx ; ret
0x000002000071833c : mov dword ptr [rip - 0x4389d2], eax ; ret
0x0000020000718c9b : mov dword ptr [rip - 0x469381], ecx ; ret
0x0000020000718a66 : mov dword ptr [rip - 0x475bdc], ecx ; ret
0x0000020000718a7c : mov dword ptr [rip - 0x475bf2], eax ; ret
0x0000020000724123 : mov dword ptr [rip - 0x4810cd], edi ; jmp 0x20000700386
0x0000020000421886 : mov dword ptr [rsi + 0x30], ebx ; call 0x20000043cda
0x00000200004015a4 : mov dword ptr [rsi + 2], eax ; call 0x2000015d885
0x00000200001b5fcb : mov dword ptr [rsi + 4], eax ; jmp 0x20000132234
0x00000200005805e5 : mov dword ptr [rsi + 8], ebp ; call 0x200000bf5b7
0x0000020000492f3a : mov dword ptr [rsi + rax*2 + 0xc], ecx ; call 0x200000b4dab
0x0000020000492f39 : mov dword ptr [rsi + rax*2 + 0xc], r9d ; call 0x200000b4dac
0x000002000062cdf5 : mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x2000062cded
0x000002000046a8b7 : mov dword ptr [rsi - 0x74ffeef3], esp ; ret
0x000002000048dea5 : mov dword ptr [rsi - 0x74fff09d], ebp ; ret
0x000002000045fdc2 : mov dword ptr [rsi], ecx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000161c49 : mov dword ptr [rsi], edi ; jmp 0x20000161c12
0x000002000013a660 : mov dword ptr [rsi], edx ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000516783 : mov dword ptr [rsi], esp ; ret
0x000002000056bcf8 : mov dword ptr [rsp + 0x18], eax ; jmp 0x20000437f1c
0x000002000015e3a6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x20], r9 ; ret
0x000002000041078b : mov dword ptr [rsp + 0x20], 0xc8 ; call r10
0x000002000040df1d : mov dword ptr [rsp + 0x20], 1 ; call r10
0x000002000040b649 : mov dword ptr [rsp + 0x20], 1 ; call r12
0x00000200004e225c : mov dword ptr [rsp + 0x20], 1 ; call r14
0x000002000050aafa : mov dword ptr [rsp + 0x20], 1 ; call r15
0x0000020000403742 : mov dword ptr [rsp + 0x20], 1 ; call rdi
0x000002000040ac26 : mov dword ptr [rsp + 0x20], 1 ; call rsi
0x00000200004003c8 : mov dword ptr [rsp + 0x20], 2 ; call r12
0x00000200004678e7 : mov dword ptr [rsp + 0x20], 2 ; call r14
0x00000200005ae1ed : mov dword ptr [rsp + 0x20], 2 ; call r15
0x00000200004037f7 : mov dword ptr [rsp + 0x20], 2 ; call rdi
0x0000020000469e8a : mov dword ptr [rsp + 0x20], 2 ; call rsi
0x00000200003ed3ec : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x38 ; ret
0x00000200005b79cd : mov dword ptr [rsp + 0x20], eax ; and esi, 3 ; call 0x200003a3bf9
0x00000200005ccf38 : mov dword ptr [rsp + 0x20], eax ; call 0x200000691b6
0x00000200004d7a17 : mov dword ptr [rsp + 0x20], eax ; call 0x200000ff577
0x0000020000235ef3 : mov dword ptr [rsp + 0x20], eax ; call 0x2000013211a
0x0000020000207f07 : mov dword ptr [rsp + 0x20], eax ; call 0x200001441ca
0x00000200006f1a1f : mov dword ptr [rsp + 0x20], eax ; call 0x2000014dce6
0x000002000051f167 : mov dword ptr [rsp + 0x20], eax ; call 0x2000014e627
0x0000020000234e44 : mov dword ptr [rsp + 0x20], eax ; call 0x200001510a6
0x00000200005eee92 : mov dword ptr [rsp + 0x20], eax ; call 0x200001db16a
0x000002000021992e : mov dword ptr [rsp + 0x20], eax ; call 0x20000225c2e
0x00000200007071fd : mov dword ptr [rsp + 0x20], eax ; call 0x200003a345a
0x00000200005dc230 : mov dword ptr [rsp + 0x20], eax ; call 0x200004184ea
0x000002000042f9ea : mov dword ptr [rsp + 0x20], eax ; call 0x2000042bc12
0x00000200006fd9a7 : mov dword ptr [rsp + 0x20], eax ; call 0x200004f9c02
0x00000200005b9899 : mov dword ptr [rsp + 0x20], eax ; call 0x200005d5b76
0x0000020000665266 : mov dword ptr [rsp + 0x20], eax ; call 0x2000067147e
0x0000020000619ccd : mov dword ptr [rsp + 0x20], eax ; call qword ptr [r10]
0x0000020000499d3e : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rsi]
0x00000200000e3dae : mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200000423bf : mov dword ptr [rsp + 0x20], eax ; call r11
0x000002000045f747 : mov dword ptr [rsp + 0x20], eax ; call r12
0x00000200004b1fd4 : mov dword ptr [rsp + 0x20], eax ; call r14
0x00000200001b8a5b : mov dword ptr [rsp + 0x20], eax ; call r15
0x00000200005ccdd6 : mov dword ptr [rsp + 0x20], eax ; call rbx
0x00000200003c8079 : mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000040db15 : mov dword ptr [rsp + 0x20], eax ; call rsi
0x00000200001fbcc0 : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x000002000044e324 : mov dword ptr [rsp + 0x20], eax ; xor edx, edx ; call 0x200003ca568
0x000002000049e6e4 : mov dword ptr [rsp + 0x20], ebp ; and edx, 1 ; call rdi
0x00000200000f9b31 : mov dword ptr [rsp + 0x20], ebp ; call 0x20000115d82
0x000002000051104a : mov dword ptr [rsp + 0x20], ebp ; call 0x200001397a3
0x000002000059d4c2 : mov dword ptr [rsp + 0x20], ebp ; call 0x200004997ca
0x0000020000567702 : mov dword ptr [rsp + 0x20], ebp ; call r10
0x00000200004028c5 : mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000649589 : mov dword ptr [rsp + 0x20], ebp ; call rdi
0x000002000067c2a0 : mov dword ptr [rsp + 0x20], ebx ; call 0x20000108516
0x00000200005085f5 : mov dword ptr [rsp + 0x20], ebx ; call 0x20000138063
0x000002000051f0bb : mov dword ptr [rsp + 0x20], ebx ; call 0x2000014ddc7
0x0000020000469d28 : mov dword ptr [rsp + 0x20], ecx ; call rdi
0x00000200004bbc7e : mov dword ptr [rsp + 0x20], ecx ; call rsi
0x00000200004b95a8 : mov dword ptr [rsp + 0x20], ecx ; mov ecx, 0x800c ; call rax
0x000002000066cee7 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x000002000066c032 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000015e3ab : mov dword ptr [rsp + 0x20], ecx ; ret
0x00000200004d7952 : mov dword ptr [rsp + 0x20], edi ; call 0x200000ff577
0x000002000050864f : mov dword ptr [rsp + 0x20], edi ; call 0x20000138063
0x0000020000724e14 : mov dword ptr [rsp + 0x20], edi ; call 0x200001510a6
0x000002000058a689 : mov dword ptr [rsp + 0x20], edi ; call qword ptr [rsi]
0x0000020000633159 : mov dword ptr [rsp + 0x20], edi ; call r14
0x000002000056ab5d : mov dword ptr [rsp + 0x20], edi ; call rax
0x00000200004c7b5a : mov dword ptr [rsp + 0x20], edi ; call rsi
0x0000020000443191 : mov dword ptr [rsp + 0x20], edx ; mov rdx, rbx ; call r10
0x0000020000703b31 : mov dword ptr [rsp + 0x20], esi ; call 0x2000047fd9a
0x0000020000406d76 : mov dword ptr [rsp + 0x20], esi ; call 0x200004c3036
0x000002000071f556 : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rip - 0x3d9510]
0x0000020000461e0f : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rsi]
0x00000200005bdd04 : mov dword ptr [rsp + 0x20], esi ; call r10
0x0000020000400352 : mov dword ptr [rsp + 0x20], esi ; call r12
0x0000020000400227 : mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ee4d2 : mov dword ptr [rsp + 0x20], esi ; call r15
0x00000200003cf06f : mov dword ptr [rsp + 0x20], esi ; call rax
0x000002000068e773 : mov dword ptr [rsp + 0x20], esi ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x000002000051ee3a : mov dword ptr [rsp + 0x20], esp ; call 0x2000013f457
0x0000020000499e72 : mov dword ptr [rsp + 0x20], esp ; call qword ptr [rsi]
0x000002000056aa95 : mov dword ptr [rsp + 0x20], esp ; call r10
0x00000200004926dc : mov dword ptr [rsp + 0x20], esp ; call rax
0x000002000051ee39 : mov dword ptr [rsp + 0x20], r12d ; call 0x2000013f458
0x0000020000649588 : mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000071f555 : mov dword ptr [rsp + 0x20], r14d ; call qword ptr [rip - 0x3d9510]
0x0000020000400351 : mov dword ptr [rsp + 0x20], r14d ; call r12
0x0000020000469d27 : mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200004bbc7d : mov dword ptr [rsp + 0x20], r9d ; call rsi
0x00000200006684fd : mov dword ptr [rsp + 0x24], ebx ; jmp 0x200006684cb
0x0000020000472434 : mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200004723fe
0x00000200006684fc : mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006684cc
0x00000200001fbcc5 : mov dword ptr [rsp + 0x28], eax ; call rdx
0x0000020000461e0a : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x0000020000633155 : mov dword ptr [rsp + 0x28], ebp ; mov dword ptr [rsp + 0x20], edi ; call r14
0x000002000056790f : mov dword ptr [rsp + 0x28], ebp ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200003c8075 : mov dword ptr [rsp + 0x28], esi ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000672d39 : mov dword ptr [rsp + 0x28], esi ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000672e6c : mov dword ptr [rsp + 0x28], esi ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200003cf06a : mov dword ptr [rsp + 0x28], esp ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000056ab58 : mov dword ptr [rsp + 0x28], esp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x000002000068e778 : mov dword ptr [rsp + 0x2c], edi ; call rax
0x000002000068e777 : mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200004c35bb : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051c179 : mov dword ptr [rsp + 0x30], eax ; call 0x2000013e34f
0x00000200001bc6b1 : mov dword ptr [rsp + 0x30], eax ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x0000020000593b7f : mov dword ptr [rsp + 0x30], ebp ; mov dword ptr [rsp + 0x38], esi ; call rax
0x000002000059456c : mov dword ptr [rsp + 0x30], edi ; call rax
0x00000200004c8a77 : mov dword ptr [rsp + 0x34], 0xc000000d ; jmp 0x200004c8a4d
0x000002000009d559 : mov dword ptr [rsp + 0x34], eax ; jmp 0x2000009d5b6
0x00000200005fa5bf : mov dword ptr [rsp + 0x38], eax ; call 0x200000bf5b8
0x00000200004ee17d : mov dword ptr [rsp + 0x38], ebx ; call rdi
0x00000200005a8098 : mov dword ptr [rsp + 0x38], ecx ; call 0x200001ca197
0x00000200001d2602 : mov dword ptr [rsp + 0x38], edx ; mov dword ptr [rsp + 0x40], eax ; call r9
0x0000020000593b83 : mov dword ptr [rsp + 0x38], esi ; call rax
0x0000020000120c33 : mov dword ptr [rsp + 0x3c], esi ; cmp esi, ecx ; jb 0x20000120c89 ; inc edx ; jmp 0x20000120c23
0x00000200001d2606 : mov dword ptr [rsp + 0x40], eax ; call r9
0x00000200004b8736 : mov dword ptr [rsp + 0x40], edi ; inc edx ; jmp 0x200004b86f9
0x000002000046c116 : mov dword ptr [rsp + 0x40], esi ; call rax
0x000002000064aefc : mov dword ptr [rsp + 0x40], esi ; mov dword ptr [rsp + 0x54], r10d ; call rax
0x000002000064b10c : mov dword ptr [rsp + 0x40], r14d ; call rax
0x000002000048e880 : mov dword ptr [rsp + 0x48], eax ; call 0x200003cab16
0x0000020000575254 : mov dword ptr [rsp + 0x48], eax ; jmp 0x20000451470
0x00000200003fad12 : mov dword ptr [rsp + 0x48], ecx ; jmp 0x200003fad24
0x0000020000114d6f : mov dword ptr [rsp + 0x50], 0 ; call r14
0x000002000063bc10 : mov dword ptr [rsp + 0x50], eax ; inc edx ; jmp 0x2000063bbe9
0x000002000064af01 : mov dword ptr [rsp + 0x54], edx ; call rax
0x000002000064af00 : mov dword ptr [rsp + 0x54], r10d ; call rax
0x00000200006d170b : mov dword ptr [rsp + 0x58], eax ; call r10
0x00000200006d0dfe : mov dword ptr [rsp + 0x60], eax ; call r10
0x0000020000417d5a : mov dword ptr [rsp + 0x60], ebx ; call 0x20000294006
0x0000020000554ddf : mov dword ptr [rsp + 0x6a8], ecx ; jmp 0x200003f100d
0x000002000040db10 : mov dword ptr [rsp + 0x70], ebx ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000057549c : mov dword ptr [rsp + 0x70], esi ; jmp 0x200005754ae
0x0000020000149aa5 : mov dword ptr [rsp + 0x78], eax ; call r11
0x00000200003bcbda : mov dword ptr [rsp + 0x78], ebp ; call 0x200003b8e56
0x00000200005fe3ce : mov dword ptr [rsp + 0x78], edx ; mov edx, edi ; call 0x20000225199
0x000002000036bb71 : mov dword ptr [rsp + 0xf0], esi ; call qword ptr [r14]
0x00000200000bc984 : mov dword ptr [rsp + 8], eax ; cmp eax, r8d ; jb 0x200000bc979 ; ret
0x00000200003b2461 : mov dword ptr [rsp + rcx*8 + 0x50], eax ; inc edx ; jmp 0x200003b2456
0x000002000050830f : mov dword ptr [rsp + rdi + 0x20], ebx ; call 0x20000137feb
0x00000200005faaec : mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x000002000054c7dc : mov dword ptr [rsp], eax ; jmp 0x200003d8aa6
0x000002000015df34 : mov dword ptr ss:[rcx + 8], 0x48 ; ret
0x000002000038e920 : mov dword ptr ss:[rcx], eax ; test rdi, rdi ; je 0x2000038e8f1 ; jmp 0x2000038e8cd
0x000002000057549b : mov dword ptr ss:[rsp + 0x70], esi ; jmp 0x200005754af
0x000002000001eab3 : mov eax, 0 ; ret 0x2237
0x00000200000fd307 : mov eax, 0 ; seta al ; ret
0x0000020000036608 : mov eax, 0 ; sete al ; ret
0x00000200001d941e : mov eax, 0 ; setne al ; ret
0x00000200001bc155 : mov eax, 0x10 ; call 0x20000158377
0x00000200000e1e6b : mov eax, 0x10 ; ret
0x0000020000601c48 : mov eax, 0x100 ; ret
0x000002000072f04c : mov eax, 0x1000 ; ret
0x000002000021b31f : mov eax, 0x103 ; add rsp, 0x28 ; ret
0x00000200000e1e93 : mov eax, 0x14 ; ret
0x0000020000150294 : mov eax, 0x142 ; jmp 0x2000015c587
0x00000200001502d4 : mov eax, 0x144 ; jmp 0x2000015c587
0x00000200001502f4 : mov eax, 0x145 ; jmp 0x2000015c587
0x0000020000150314 : mov eax, 0x146 ; jmp 0x2000015c587
0x0000020000150334 : mov eax, 0x147 ; jmp 0x2000015c587
0x0000020000150354 : mov eax, 0x148 ; jmp 0x2000015c587
0x0000020000150374 : mov eax, 0x149 ; jmp 0x2000015c587
0x0000020000140c3b : mov eax, 0x16 ; add rsp, 0x38 ; ret
0x000002000012e672 : mov eax, 0x18 ; ret
0x00000200003f92a8 : mov eax, 0x1ff25 ; add byte ptr [rbx], cl ; ret 0xba0f
0x000002000072f046 : mov eax, 0x2000 ; ret
0x00000200006449ae : mov eax, 0x20019 ; call 0x200004f0c0b
0x0000020000715f7c : mov eax, 0x200f44ff ; ret 0x2b8
0x00000200005f7d7a : mov eax, 0x20206d4d ; call 0x20000294007
0x0000020000404999 : mov eax, 0x20207050 ; call 0x20000032fc8
0x0000020000537300 : mov eax, 0x20428d44 ; call 0x2000015dbc8
0x00000200005389d2 : mov eax, 0x29e990ff ; ret
0x0000020000484ecf : mov eax, 0x2b000000 ; ret
0x00000200005118d0 : mov eax, 0x2c ; call 0x20000141178
0x000002000060f207 : mov eax, 0x2d0 ; ret
0x000002000022959a : mov eax, 0x30 ; ret
0x00000200006de017 : mov eax, 0x33000005 ; fisttp dword ptr [rcx - 0x75] ; ret 0x8948
0x000002000005a79c : mov eax, 0x3480025 ; ret 0x3b48
0x000002000009c0eb : mov eax, 0x3e8 ; ret
0x000002000061bdd7 : mov eax, 0x418 ; call 0x2000015dbc9
0x000002000061a155 : mov eax, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001d48bf : mov eax, 0x48000000 ; mov eax, edx ; ret
0x000002000054916b : mov eax, 0x48000000 ; mov ecx, edi ; call rsi
0x000002000005195d : mov eax, 0x48000000 ; test ecx, ecx ; jne 0x20000051970 ; ret
0x0000020000123ef3 : mov eax, 0x48010018 ; add esp, 0x38 ; ret
0x0000020000719272 : mov eax, 0x480575ff ; add esp, 0x58 ; ret
0x000002000052e363 : mov eax, 0x48900008 ; add esp, 0x20 ; pop rbp ; ret
0x00000200002348ab : mov eax, 0x4890002e ; add esp, 0x30 ; pop rbp ; ret
0x0000020000501466 : mov eax, 0x48c03345 ; mov ecx, edi ; call r15
0x00000200004c3879 : mov eax, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200004dedd2 : mov eax, 0x48c033ff ; add esp, 0x70 ; pop rbx ; ret
0x00000200004bcf25 : mov eax, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x00000200006900f0 : mov eax, 0x48ff997c ; add esp, 0x30 ; pop rbx ; ret
0x0000020000206e24 : mov eax, 0x48fff50e ; add esp, 0x48 ; ret
0x0000020000105e88 : mov eax, 0x50 ; ret
0x000002000066d713 : mov eax, 0x566c6148 ; call 0x20000294008
0x00000200001e0dd0 : mov eax, 0x5b000000 ; pop rbp ; ret
0x000002000022ab6f : mov eax, 0x5d7bea7 ; ret 0x109e
0x00000200006282ba : mov eax, 0x5f000000 ; pop rbx ; ret
0x0000020000117d44 : mov eax, 0x5f000000 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000667f58 : mov eax, 0x61446656 ; call 0x20000294008
0x000002000067324c : mov eax, 0x62535442 ; call 0x20000294008
0x00000200003f7d9e : mov eax, 0x63536d4d ; call 0x20000294007
0x00000200006176da : mov eax, 0x69000000 ; ret
0x000002000067322d : mov eax, 0x6d535442 ; call 0x20000294008
0x0000020000664dad : mov eax, 0x6f7649 ; call 0x20000294008
0x0000020000627d0d : mov eax, 0x73494457 ; call 0x20000294007
0x000002000049f431 : mov eax, 0x7510c2f6 ; mov bl, 0xf6 ; ret 0x7520
0x0000020000167d0d : mov eax, 0x76456552 ; call 0x20000294007
0x0000020000117dda : mov eax, 0x76654d45 ; mov ecx, ebx ; call 0x20000294009
0x0000020000128f24 : mov eax, 0x77de3b48 ; or ecx, dword ptr [rax - 9] ; ret
0x00000200005c0305 : mov eax, 0x79db85ff ; add al, 0x8b ; ret
0x000002000009c0f1 : mov eax, 0x7d0 ; ret
0x000002000058c360 : mov eax, 0x80000014 ; ret
0x00000200004fc6ed : mov eax, 0x8000001a ; ret
0x000002000002a910 : mov eax, 0x82be0f44 ; ret
0x00000200006fa235 : mov eax, 0x8348ff98 ; ret
0x0000020000379718 : mov eax, 0x8348ffda ; ret
0x000002000049b1c7 : mov eax, 0x840020ee ; ror byte ptr [rdi], 0x85 ; ret
0x00000200005c3bf9 : mov eax, 0x85d88bff ; ror byte ptr [rdi], 0x88 ; ret
0x0000020000406370 : mov eax, 0x85ffffe5 ; ror byte ptr [rdi], 0x88 ; ret 0
0x00000200003af265 : mov eax, 0x8b000000 ; ret
0x00000200003df232 : mov eax, 0x8b00003e ; ret
0x00000200003e741c : mov eax, 0x8b480016 ; ret
0x0000020000413055 : mov eax, 0x8b48c933 ; ret 0x8948
0x000002000010a41a : mov eax, 0xa ; ret
0x000002000002a844 : mov eax, 0xb60f0031 ; ret
0x000002000000dd42 : mov eax, 0xbc8babd4 ; lahf ; push rcx ; sub esi, eax ; ret
0x000002000068a86f : mov eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x0000020000135b55 : mov eax, 0xc0000001 ; add rsp, 0x38 ; ret
0x000002000065d267 : mov eax, 0xc0000001 ; add rsp, 0x48 ; ret
0x00000200000ea95f : mov eax, 0xc0000001 ; ret
0x0000020000094725 : mov eax, 0xc0000002 ; ret
0x00000200004e64fd : mov eax, 0xc0000003 ; ret
0x0000020000600e5d : mov eax, 0xc0000004 ; ret
0x0000020000383936 : mov eax, 0xc0000005 ; ret
0x00000200002367e5 : mov eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200001cbd0e : mov eax, 0xc000000d ; add rsp, 0x38 ; ret
0x0000020000574cec : mov eax, 0xc000000d ; jmp 0x20000450faf
0x000002000059e1ea : mov eax, 0xc000000d ; jmp 0x200004da4b8
0x00000200000b4f72 : mov eax, 0xc000000d ; ret
0x00000200001d78a7 : mov eax, 0xc000000e ; mov eax, r8d ; ret
0x0000020000234604 : mov eax, 0xc000000e ; ret
0x00000200000fdb3a : mov eax, 0xc0000010 ; add rsp, 0x28 ; ret
0x0000020000730029 : mov eax, 0xc0000011 ; ret
0x0000020000106a79 : mov eax, 0xc0000016 ; add rsp, 0x28 ; ret
0x0000020000486507 : mov eax, 0xc0000017 ; ret
0x000002000051e138 : mov eax, 0xc0000022 ; add rsp, 0x28 ; ret
0x00000200004f3dbd : mov eax, 0xc0000022 ; jmp 0x200004f3d8c
0x00000200001c5385 : mov eax, 0xc0000022 ; ret
0x00000200001bd619 : mov eax, 0xc0000023 ; and dword ptr [r9], 0 ; ret
0x00000200003ae0e1 : mov eax, 0xc0000023 ; ret
0x00000200000b5983 : mov eax, 0xc0000033 ; ret
0x00000200000b5977 : mov eax, 0xc0000034 ; ret
0x00000200005eac1b : mov eax, 0xc0000056 ; add rsp, 0x28 ; ret
0x00000200005eab9c : mov eax, 0xc0000056 ; ret
0x00000200000ec312 : mov eax, 0xc0000058 ; ret
0x00000200001c0687 : mov eax, 0xc0000061 ; add rsp, 0x28 ; ret
0x0000020000169472 : mov eax, 0xc0000061 ; jmp 0x2000003568b
0x000002000013fbdb : mov eax, 0xc0000061 ; jmp 0x2000013fbab
0x0000020000574cf6 : mov eax, 0xc0000061 ; jmp 0x20000450faf
0x00000200003ee020 : mov eax, 0xc0000063 ; ret
0x00000200003b07b5 : mov eax, 0xc0000079 ; ret
0x000002000008fce2 : mov eax, 0xc0000095 ; ret
0x00000200005e483f : mov eax, 0xc000009a ; add rsp, 0x28 ; ret
0x0000020000132fff : mov eax, 0xc000009a ; ret
0x00000200005ce036 : mov eax, 0xc00000bb ; add rsp, 0x28 ; ret
0x000002000004c48f : mov eax, 0xc00000bb ; ret
0x00000200004ba405 : mov eax, 0xc00000e7 ; ret
0x00000200001e6eaf : mov eax, 0xc00000ef ; add rsp, 0x38 ; ret
0x00000200004bf7b9 : mov eax, 0xc00000ef ; ret
0x00000200001cdbf4 : mov eax, 0xc00000f0 ; add rsp, 0x38 ; ret
0x0000020000585e5d : mov eax, 0xc00000f0 ; jmp 0x200004920d1
0x00000200004bf7bf : mov eax, 0xc00000f0 ; ret
0x00000200001043a4 : mov eax, 0xc00000f1 ; ret
0x000002000010439e : mov eax, 0xc00000f2 ; ret
0x0000020000516d5c : mov eax, 0xc00000f4 ; ret
0x00000200000b4dda : mov eax, 0xc0000106 ; ret
0x00000200000249f4 : mov eax, 0xc0000109 ; ret
0x00000200005d8ab3 : mov eax, 0xc0000120 ; ret
0x0000020000520408 : mov eax, 0xc0000148 ; ret
0x00000200004f4fc9 : mov eax, 0xc0000189 ; ret
0x00000200003ee026 : mov eax, 0xc00001a9 ; ret
0x00000200004810c7 : mov eax, 0xc0000206 ; ret
0x00000200003ee02c : mov eax, 0xc0000210 ; ret
0x000002000022554b : mov eax, 0xc000021b ; jmp 0x200002255c0
0x00000200000b597d : mov eax, 0xc0000225 ; ret
0x0000020000154b78 : mov eax, 0xc0000258 ; ret
0x00000200000eb270 : mov eax, 0xc000025f ; ret
0x0000020000480067 : mov eax, 0xc00002c5 ; ret
0x00000200005efbcf : mov eax, 0xc0000303 ; ret
0x00000200001d6dd0 : mov eax, 0xc0000354 ; ret
0x0000020000492763 : mov eax, 0xc0000428 ; ret
0x000002000067333b : mov eax, 0xc000042a ; ret
0x0000020000719186 : mov eax, 0xc03301ff ; add rsp, 0x28 ; ret
0x00000200000de5ac : mov eax, 0xc3000000 ; xor eax, eax ; ret
0x00000200005c2b14 : mov eax, 0xc48348ff ; jo 0x200005c2b7f ; ret
0x00000200004b1afd : mov eax, 0xc48348ff ; pop rax ; ret
0x00000200004dd7e5 : mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x0000020000473c1a : mov eax, 0xe8000000 ; cwde ; ret 0x8bff
0x000002000046f3e4 : mov eax, 0xe8000000 ; jnp 0x2000046f3d2 ; ret 0x32ff
0x000002000057fe10 : mov eax, 0xe8000000 ; ret
0x000002000047199d : mov eax, 0xe8000000 ; ret 0xc2ba
0x0000020000471212 : mov eax, 0xe8000000 ; ret 0xffc2
0x000002000066fa8c : mov eax, 0xe8000215 ; ret
0x00000200004c8e48 : mov eax, 0xe8ffde5e ; xchg eax, esi ; ret
0x000002000049d124 : mov eax, 0xe8ffe391 ; sti ; popfq ; ret
0x000002000014f155 : mov eax, 0xe9000000 ; and dl, ah ; add byte ptr [rax], al ; ret
0x000002000037be64 : mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x000002000053eed9 : mov eax, 0xf000000 ; mov bh, 0x57 ; add dh, dh ; ret 0xf10
0x00000200001ae7b7 : mov eax, 0xf000000 ; xchg eax, ebp ; ret
0x00000200003cc3cc : mov eax, 0xf6000000 ; ret
0x0000020000446d33 : mov eax, 0xf6000000 ; ret 0xf01
0x0000020000369e90 : mov eax, 0xf6000006 ; ret 0x7401
0x00000200000e0154 : mov eax, 0xf6001c56 ; ret
0x0000020000272858 : mov eax, 0xf6004dc2 ; ret 0x4d
0x00000200003ca8f1 : mov eax, 0xf7000000 ; ret 0
0x00000200000a5cc3 : mov eax, 0xf748002a ; jmp 0x20048cce821
0x00000200000a5cc2 : mov eax, 0xf748002a ; jmp 0x20048cce822
0x000002000015e287 : mov eax, 0xf9eb ; mov word ptr [rdx], ax ; ret
0x00000200007303be : mov eax, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x00000200004fa42d : mov eax, 0xff000000 ; ret
0x00000200003df46a : mov eax, 0xff000001 ; ret
0x00000200003e05fc : mov eax, 0xff000002 ; ret
0x000002000014417f : mov eax, 0xffff ; add rsp, 0x38 ; ret
0x00000200001441bc : mov eax, 0xffff ; ret
0x0000020000074028 : mov eax, 1 ; add rsp, 0x28 ; ret
0x000002000015c4fc : mov eax, 1 ; add rsp, 0x38 ; ret
0x0000020000478a30 : mov eax, 1 ; add rsp, 0x58 ; ret
0x00000200000fc644 : mov eax, 1 ; cmove eax, r8d ; ret
0x000002000006fbad : mov eax, 1 ; jmp 0x2000006fb7c
0x00000200001d9276 : mov eax, 1 ; mov eax, r8d ; ret
0x00000200006433fa : mov eax, 1 ; pop rbp ; ret
0x000002000003391d : mov eax, 1 ; ret
0x000002000010ca28 : mov eax, 1 ; xchg qword ptr [rcx], rax ; ret
0x000002000009c08b : mov eax, 2 ; ret
0x000002000009c091 : mov eax, 3 ; ret
0x00000200000e1e38 : mov eax, 4 ; ret
0x000002000008707d : mov eax, 5 ; jmp 0x2000008704c
0x00000200000d45f8 : mov eax, 5 ; jmp 0x200000d45c8
0x000002000010a40b : mov eax, 5 ; ret
0x000002000064eb6d : mov eax, 6 ; call rax
0x000002000043db00 : mov eax, 6 ; ret
0x0000020000107e35 : mov eax, 7 ; ret
0x000002000051682e : mov eax, 8 ; call 0x20000141248
0x00000200000e1e58 : mov eax, 8 ; ret
0x000002000006ad4a : mov eax, dword ptr [0x188] ; ret
0x00000200000faa17 : mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x00000200001317ed : mov eax, dword ptr [r8 + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x000002000003375d : mov eax, dword ptr [r8 + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x000002000036970f : mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x20000369714 ; ret
0x00000200002373d9 : mov eax, dword ptr [r8] ; mov dword ptr [rip + 0xced4e], eax ; ret
0x00000200004b8ef3 : mov eax, dword ptr [rax + 0x10] ; add rsp, 0x38 ; ret
0x00000200001e033e : mov eax, dword ptr [rax + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x000002000012e1fd : mov eax, dword ptr [rax + 0x10] ; test r8, r8 ; je 0x2000012e211 ; jmp r8
0x000002000044223c : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x2000044223e ; ret
0x00000200001317ee : mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200001c4616 : mov eax, dword ptr [rax + 0x18] ; ret
0x00000200000ead3b : mov eax, dword ptr [rax + 0x1c8] ; ret
0x00000200004ee429 : mov eax, dword ptr [rax + 0x1fb8] ; ret
0x0000020000389256 : mov eax, dword ptr [rax + 0x20] ; ret
0x00000200006cf08d : mov eax, dword ptr [rax + 0x220] ; jmp rax
0x000002000010a4f6 : mov eax, dword ptr [rax + 0x220] ; ret
0x000002000009bb0e : mov eax, dword ptr [rax + 0x24] ; ret
0x00000200005d5e32 : mov eax, dword ptr [rax + 0x28] ; ret
0x000002000067414c : mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200002059f2 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000200001cbda9 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x200001cbdbb ; call rax
0x000002000015e311 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000200000eca7d : mov eax, dword ptr [rax + 0x398] ; ret
0x00000200001032ea : mov eax, dword ptr [rax + 0x40] ; ret
0x0000020000205a2c : mov eax, dword ptr [rax + 0x410] ; ret
0x00000200000f6f09 : mov eax, dword ptr [rax + 0x418] ; ret
0x0000020000389252 : mov eax, dword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x00000200001cbe85 : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x200001cbe97 ; call rax
0x00000200001bda5c : mov eax, dword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001cbd6d : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x200001cbd7f ; call rax
0x000002000002e2d2 : mov eax, dword ptr [rax + 0x620] ; ret
0x00000200000f8e7e : mov eax, dword ptr [rax + 0x628] ; ret
0x00000200004a6ee5 : mov eax, dword ptr [rax + 0x640] ; ret
0x00000200000eb8d2 : mov eax, dword ptr [rax + 0x668] ; ret
0x00000200000c00cd : mov eax, dword ptr [rax + 0x68] ; shr eax, 0x19 ; and eax, 1 ; ret
0x00000200001315e9 : mov eax, dword ptr [rax + 0x70] ; test rax, rax ; jne 0x200001315fa ; ret
0x000002000000e1e9 : mov eax, dword ptr [rax + 0x7242b8f] ; sahf ; ret
0x00000200000f43fa : mov eax, dword ptr [rax + 0x738] ; ret
0x000002000010fdd2 : mov eax, dword ptr [rax + 0x80] ; ret
0x00000200000b1cfa : mov eax, dword ptr [rax + 0xb8] ; ret
0x00000200000e4c86 : mov eax, dword ptr [rax + 0xf0] ; ret
0x00000200001c4fc7 : mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200006f459f : mov eax, dword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002b9bf : mov eax, dword ptr [rax + 8] ; cmp eax, edx ; cmove eax, r8d ; ret
0x000002000003375e : mov eax, dword ptr [rax + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x0000020000104900 : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000009d47d : mov eax, dword ptr [rax + 8] ; ret
0x000002000003642a : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x2000003643b ; ret
0x00000200003cab3d : mov eax, dword ptr [rax + rax*8 - 1] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200001fde65 : mov eax, dword ptr [rax + rcx + 0x58] ; mov qword ptr [r9], rax ; ret
0x0000020000393eb1 : mov eax, dword ptr [rax + rcx*8] ; add rax, r10 ; ret
0x0000020000547f36 : mov eax, dword ptr [rax + rcx*8] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x0000020000514dbb : mov eax, dword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200005b5e61 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x000002000037526e : mov eax, dword ptr [rax + rcx*8] ; mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x0000020000393ead : mov eax, dword ptr [rax + rcx*8] ; mov rax, qword ptr [rax + rcx*8] ; add rax, r10 ; ret
0x00000200003daf3e : mov eax, dword ptr [rax + rdx*4] ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200001e9b8e : mov eax, dword ptr [rax + rdx*8 + 0x18] ; mov rdx, qword ptr [rax + rdx*8 + 0x10] ; call qword ptr [rdi]
0x000002000016281a : mov eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000162d55 : mov eax, dword ptr [rax] ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000022cdfe : mov eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001630d6 : mov eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000369710 : mov eax, dword ptr [rax] ; cmp eax, edx ; je 0x20000369713 ; ret
0x0000020000624bed : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x20000624bd1 ; xor eax, eax ; ret
0x000002000067d092 : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000067d094 ; xor eax, eax ; ret
0x000002000071dfee : mov eax, dword ptr [rax] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000195e6c : mov eax, dword ptr [rax] ; jmp 0x200000ccb9f
0x00000200001968f3 : mov eax, dword ptr [rax] ; jmp 0x200000ce6dc
0x00000200002373da : mov eax, dword ptr [rax] ; mov dword ptr [rip + 0xced4e], eax ; ret
0x00000200005e0c4a : mov eax, dword ptr [rax] ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200000e0aa2 : mov eax, dword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000200000dea93 : mov eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x000002000021d70d : mov eax, dword ptr [rax] ; not rax ; or rax, rdx ; jmp 0x2000021d72d
0x000002000015df4b : mov eax, dword ptr [rax] ; ret
0x000002000008e7d3 : mov eax, dword ptr [rax] ; test r8b, 2 ; je 0x2000008e7e7 ; mov eax, edx ; ret
0x00000200001cbe25 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x200001cbe35 ; call rax
0x0000020000640a43 : mov eax, dword ptr [rbp + 0x28] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000052de76 : mov eax, dword ptr [rbp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000640b68 : mov eax, dword ptr [rbp + 0x40] ; mov r13, qword ptr [rax] ; jmp 0x20000640b3a
0x000002000064bb87 : mov eax, dword ptr [rbp + 0x50] ; jmp 0x2000064bb53
0x0000020000701482 : mov eax, dword ptr [rbp + rax*8 + 0x2d6f68] ; call rax
0x00000200001b5fc8 : mov eax, dword ptr [rbp - 0x39] ; mov dword ptr [rsi + 4], eax ; jmp 0x20000132237
0x000002000015d496 : mov eax, dword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x00000200003ee3b7 : mov eax, dword ptr [rbx + 0x18] ; lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003ee38f
0x00000200001e0376 : mov eax, dword ptr [rbx + 0x20] ; mov rdx, rdi ; mov rcx, rbp ; call rax
0x00000200003be262 : mov eax, dword ptr [rbx + 0x20] ; test rax, rax ; je 0x200003be278 ; call rax
0x00000200004becca : mov eax, dword ptr [rbx + 0x28] ; call 0x200000e1ac6
0x00000200000dcd7e : mov eax, dword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000070137a : mov eax, dword ptr [rbx + 0x38] ; call rax
0x00000200001bbb80 : mov eax, dword ptr [rbx + 0x38] ; mov ecx, 1 ; call rax
0x0000020000375272 : mov eax, dword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x000002000016fd3e : mov eax, dword ptr [rbx + 0x40] ; test rax, rax ; jne 0x2000016fd26 ; jmp 0x2000016fd14
0x00000200000e18c4 : mov eax, dword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e082d : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000020a552 : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f063f : mov eax, dword ptr [rbx + 0x78] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f7d42 : mov eax, dword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x00000200004b04b9 : mov eax, dword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005ae44b : mov eax, dword ptr [rbx] ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200001d1370 : mov eax, dword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001d1390
0x00000200004fc6c9 : mov eax, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000015dccd : mov eax, dword ptr [rcx + 0x10] ; ret
0x00000200000dc0b8 : mov eax, dword ptr [rcx + 0x10] ; test al, dl ; jne 0x200000dc0d9 ; mov al, 1 ; ret
0x000002000049e075 : mov eax, dword ptr [rcx + 0x110] ; ret
0x00000200001c57a0 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [r9], eax ; xor eax, eax ; ret
0x00000200005203c1 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [rdx + 0x207c], eax ; ret
0x000002000014d7f3 : mov eax, dword ptr [rcx + 0x14] ; sub eax, edx ; ret
0x00000200004ee426 : mov eax, dword ptr [rcx + 0x18] ; mov eax, dword ptr [rax + 0x1fb8] ; ret
0x000002000049f1b9 : mov eax, dword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000010a894 : mov eax, dword ptr [rcx + 0x1c0] ; ret
0x00000200000fea8d : mov eax, dword ptr [rcx + 0x1c8] ; ret
0x00000200002059f8 : mov eax, dword ptr [rcx + 0x1e0] ; ret
0x00000200004c7156 : mov eax, dword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x00000200005204c5 : mov eax, dword ptr [rcx + 0x20] ; ret
0x00000200000f8e49 : mov eax, dword ptr [rcx + 0x220] ; ret
0x0000020000105720 : mov eax, dword ptr [rcx + 0x24] ; ret
0x00000200000967b5 : mov eax, dword ptr [rcx + 0x28] ; jmp qword ptr [rcx + 0x20]
0x000002000009db67 : mov eax, dword ptr [rcx + 0x28] ; mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x0000020000149b94 : mov eax, dword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x000002000010ba16 : mov eax, dword ptr [rcx + 0x28] ; ret
0x000002000038ac94 : mov eax, dword ptr [rcx + 0x28] ; test rax, rax ; je 0x2000038acbd ; call rax
0x0000020000123818 : mov eax, dword ptr [rcx + 0x28c] ; ret
0x00000200000bfc04 : mov eax, dword ptr [rcx + 0x2c] ; ret
0x0000020000104795 : mov eax, dword ptr [rcx + 0x2d0] ; ret
0x00000200000e1c79 : mov eax, dword ptr [rcx + 0x2e0] ; ret
0x00000200004c7136 : mov eax, dword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000fdb4d : mov eax, dword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000015e30d : mov eax, dword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000072640 : mov eax, dword ptr [rcx + 0x30] ; shr eax, 0x1f ; ret
0x00000200000d4536 : mov eax, dword ptr [rcx + 0x30] ; test eax, eax ; js 0x200000d4549 ; xor eax, eax ; ret
0x0000020000431589 : mov eax, dword ptr [rcx + 0x30] ; test rax, rax ; jne 0x2000043159a ; ret
0x00000200000d0c0c : mov eax, dword ptr [rcx + 0x38] ; mov byte ptr [rax], cl ; ret
0x00000200000f92a1 : mov eax, dword ptr [rcx + 0x398] ; ret
0x00000200000fdb45 : mov eax, dword ptr [rcx + 0x3a0] ; ret
0x000002000010a88d : mov eax, dword ptr [rcx + 0x3b0] ; ret
0x0000020000102669 : mov eax, dword ptr [rcx + 0x3c8] ; ret
0x0000020000107ed1 : mov eax, dword ptr [rcx + 0x3d0] ; ret
0x00000200000febe9 : mov eax, dword ptr [rcx + 0x3e8] ; ret
0x0000020000036098 : mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000360a7 ; ret
0x0000020000108725 : mov eax, dword ptr [rcx + 0x410] ; ret
0x00000200000f7ec5 : mov eax, dword ptr [rcx + 0x418] ; ret
0x00000200004b6265 : mov eax, dword ptr [rcx + 0x448] ; ret
0x000002000068fd53 : mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x000002000015e025 : mov eax, dword ptr [rcx + 0x450] ; ret
0x000002000015dcd5 : mov eax, dword ptr [rcx + 0x458] ; ret
0x000002000061a228 : mov eax, dword ptr [rcx + 0x48] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x0000020000123ed4 : mov eax, dword ptr [rcx + 0x48] ; ret
0x0000020000123ed8 : mov eax, dword ptr [rcx + 0x4c] ; ret
0x00000200001ea0fd : mov eax, dword ptr [rcx + 0x50] ; add rax, r8 ; ret
0x00000200000c6228 : mov eax, dword ptr [rcx + 0x50] ; shr eax, 0x18 ; and al, 1 ; ret
0x00000200000de59d : mov eax, dword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200004c7a78 : mov eax, dword ptr [rcx + 0x5d4] ; ret
0x00000200001c4a3f : mov eax, dword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x000002000049e055 : mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200001010d5 : mov eax, dword ptr [rcx + 0x620] ; ret
0x00000200000faafd : mov eax, dword ptr [rcx + 0x628] ; ret
0x0000020000123ce5 : mov eax, dword ptr [rcx + 0x670] ; ret
0x000002000013fd82 : mov eax, dword ptr [rcx + 0x678] ; ret
0x0000020000520509 : mov eax, dword ptr [rcx + 0x6a8] ; ret
0x0000020000103738 : mov eax, dword ptr [rcx + 0x6b4] ; and al, 1 ; ret
0x0000020000454388 : mov eax, dword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200000fdc10 : mov eax, dword ptr [rcx + 0x74] ; shr eax, 0xb ; and al, 1 ; ret
0x0000020000520511 : mov eax, dword ptr [rcx + 0x770] ; ret
0x00000200004b060c : mov eax, dword ptr [rcx + 0xc0] ; ret
0x00000200004e7b20 : mov eax, dword ptr [rcx + 0xc4] ; ret
0x00000200005202e4 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x0000020000520414 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x00000200000d7c2d : mov eax, dword ptr [rcx + 0xf0] ; ret
0x00000200000f3d4c : mov eax, dword ptr [rcx + 4] ; ret
0x0000020000157d01 : mov eax, dword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x0000020000121f19 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setb al ; ret
0x0000020000103731 : mov eax, dword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000010367d : mov eax, dword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x000002000052030a : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x000002000052035c : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x0000020000520462 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000002b9d1 : mov eax, dword ptr [rcx + 8] ; ret
0x000002000041f727 : mov eax, dword ptr [rcx + r10*8 + 0x10] ; mov dword ptr [r9], eax ; ret
0x00000200005903d3 : mov eax, dword ptr [rcx + rax*4 + 4] ; jmp 0x200004ac62d
0x000002000038a7ac : mov eax, dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000033609 : mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200005903dc : mov eax, dword ptr [rcx + rax*8 + 4] ; jmp 0x200004ac62d
0x00000200001d9661 : mov eax, dword ptr [rcx + rax*8 + 8] ; ret
0x00000200000dc085 : mov eax, dword ptr [rcx + rax*8 + 8] ; test r8, r8 ; jne 0x200000dc0a0 ; ret
0x000002000013fb14 : mov eax, dword ptr [rcx + rax*8] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x0000020000025afc : mov eax, dword ptr [rcx + rax*8] ; ret
0x00000200000ff7e0 : mov eax, dword ptr [rcx + rax*8] ; test dword ptr [rax], edx ; jne 0x200000ff7f3 ; xor eax, eax ; ret
0x00000200006687ee : mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000041f728 : mov eax, dword ptr [rcx + rdx*8 + 0x10] ; mov dword ptr [r9], eax ; ret
0x00000200001f1348 : mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x0000020000115cdf : mov eax, dword ptr [rcx] ; dec rax ; xchg qword ptr [rcx], rax ; ret
0x000002000071e5fd : mov eax, dword ptr [rcx] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000049ef5f : mov eax, dword ptr [rcx] ; mov dword ptr [rcx], eax ; jmp 0x2000049ef71
0x00000200001deacb : mov eax, dword ptr [rcx] ; mov dword ptr [rip + 0xeaf45], eax ; ret
0x0000020000064df0 : mov eax, dword ptr [rcx] ; ret
0x00000200005204f6 : mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x000002000008f129 : mov eax, dword ptr [rcx] ; test al, 1 ; jne 0x2000008f12c ; ret
0x00000200000eb841 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200000eb854 ; mov al, 1 ; ret
0x00000200001c460d : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200001c461c ; ret
0x0000020000668447 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x2000066842b ; ret
0x000002000018a630 : mov eax, dword ptr [rdi + 0x10] ; test al, 1 ; jne 0x2000018a61a ; jmp 0x200000a6848
0x00000200005903ed : mov eax, dword ptr [rdi + rax*4 + 4] ; jmp 0x200004ac62d
0x000002000062cdf2 : mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x2000062cdf0
0x00000200006315b6 : mov eax, dword ptr [rdi] ; add dh, dh ; ret
0x00000200005202ab : mov eax, dword ptr [rdx + 0x10] ; mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x00000200004fc763 : mov eax, dword ptr [rdx + 0x10] ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x00000200003ac8f9 : mov eax, dword ptr [rdx + 0x10] ; test eax, eax ; je 0x200003ac926 ; add rax, r10 ; jmp 0x200003ac948
0x00000200001f871d : mov eax, dword ptr [rdx + 0x18] ; cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; ret
0x0000020000671adc : mov eax, dword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x00000200005203de : mov eax, dword ptr [rdx + 0x207c] ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200000de595 : mov eax, dword ptr [rdx + 0x220] ; ret
0x00000200000faa18 : mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000050a70a : mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x000002000066b000 : mov eax, dword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000e19ad : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x200000e19b1 ; mov rax, rdx ; ret
0x00000200000e7a29 : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x200000e7a2a ; mov rax, rdx ; ret
0x00000200004c4420 : mov eax, dword ptr [rdx + 0x38] ; ret
0x00000200000fea82 : mov eax, dword ptr [rdx + 0x440] ; mov qword ptr [rcx], rax ; ret
0x000002000008f8f2 : mov eax, dword ptr [rdx + 0x48] ; mov dword ptr [rax], 4 ; ret
0x00000200000a90ba : mov eax, dword ptr [rdx + 0x50] ; lea rax, qword ptr [rax + r9*8] ; ret
0x0000020000628cbe : mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200004a986c : mov eax, dword ptr [rdx + 0x80] ; jmp 0x200004a983e
0x00000200000de5aa : mov eax, dword ptr [rdx + 0xb8] ; ret
0x00000200003ac90b : mov eax, dword ptr [rdx + 0xc] ; test eax, eax ; je 0x200003ac8dc ; add rax, r10 ; jmp 0x200003ac8df
0x000002000061cb5b : mov eax, dword ptr [rdx + 0xc] ; test eax, eax ; je 0x2000061cb9d ; add rax, rdx ; jmp 0x2000061cb74
0x000002000010fb4e : mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000008f8a6 : mov eax, dword ptr [rdx + 8] ; mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x0000020000103cad : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200003ac8ec : mov eax, dword ptr [rdx + 8] ; test eax, eax ; je 0x200003ac92b ; add rax, r10 ; jmp 0x200003ac8d2
0x0000020000033611 : mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200003dabdf : mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200000f748f : mov eax, dword ptr [rdx + rax*8] ; jmp 0x200000f741c
0x0000020000470c85 : mov eax, dword ptr [rdx + rbp*4 + 0x470b00] ; add rax, r10 ; jmp rax
0x0000020000065b1c : mov eax, dword ptr [rdx + rsi*4 + 0x64e54] ; add rax, rdx ; jmp rax
0x00000200006685fb : mov eax, dword ptr [rdx] ; add byte ptr [rcx - 1], al ; ret
0x000002000015960d : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x0000020000214f00 : mov eax, dword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x0000020000730020 : mov eax, dword ptr [rdx] ; bswap eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200004b61e1 : mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x000002000036c916 : mov eax, dword ptr [rdx] ; test al, 1 ; je 0x2000036c923 ; ret
0x00000200000998e9 : mov eax, dword ptr [rdx] ; xor ecx, ecx ; mov qword ptr [rbp - 0x48], rax ; jmp 0x200000998bf
0x0000020000231f24 : mov eax, dword ptr [rip + 0x11f13a] ; mov dword ptr [r8], eax ; ret
0x0000020000531a10 : mov eax, dword ptr [rip + 0x12342a] ; call rax
0x000002000015e290 : mov eax, dword ptr [rip + 0x144cf6] ; ret
0x000002000015e0e0 : mov eax, dword ptr [rip + 0x14fb3a] ; ret
0x0000020000143ef5 : mov eax, dword ptr [rip + 0x153115] ; ret
0x00000200001cdf18 : mov eax, dword ptr [rip + 0x1835e2] ; call rax
0x00000200001c3559 : mov eax, dword ptr [rip + 0x18dfa1] ; call rax
0x00000200001c344e : mov eax, dword ptr [rip + 0x18e0ac] ; call rax
0x00000200001c31bb : mov eax, dword ptr [rip + 0x18e33f] ; call rax
0x00000200001c30dc : mov eax, dword ptr [rip + 0x18e41e] ; call rax
0x00000200001c2f1e : mov eax, dword ptr [rip + 0x18e5dc] ; call rax
0x00000200001c2e63 : mov eax, dword ptr [rip + 0x18e697] ; call r8
0x00000200001b1c9d : mov eax, dword ptr [rip + 0x19f85d] ; call r8
0x00000200004b42b2 : mov eax, dword ptr [rip + 0x1a0b78] ; call rax
0x0000020000199417 : mov eax, dword ptr [rip + 0x1b80e3] ; call rax
0x0000020000196b65 : mov eax, dword ptr [rip + 0x1ba8c5] ; call rax
0x00000200006750fb : mov eax, dword ptr [rip + 0x1bfb3] ; ret
0x000002000018ec87 : mov eax, dword ptr [rip + 0x1c2903] ; call rax
0x0000020000139702 : mov eax, dword ptr [rip + 0x217910] ; ret
0x000002000012e1b8 : mov eax, dword ptr [rip + 0x22306a] ; ret
0x0000020000129ff4 : mov eax, dword ptr [rip + 0x227506] ; call rax
0x0000020000129f79 : mov eax, dword ptr [rip + 0x227581] ; call rax
0x000002000011a9c0 : mov eax, dword ptr [rip + 0x2368c2] ; ret
0x000002000011a9d0 : mov eax, dword ptr [rip + 0x236dea] ; ret
0x000002000010cc97 : mov eax, dword ptr [rip + 0x244863] ; call rax
0x000002000010cc44 : mov eax, dword ptr [rip + 0x2448b6] ; call rax
0x000002000010ce65 : mov eax, dword ptr [rip + 0x244afd] ; ret
0x00000200000f8c2c : mov eax, dword ptr [rip + 0x25044e] ; ret
0x00000200000ffbb9 : mov eax, dword ptr [rip + 0x251459] ; mov dword ptr [rcx + 0x2c], eax ; ret
0x00000200000fda83 : mov eax, dword ptr [rip + 0x253a77] ; call rax
0x00000200000fd909 : mov eax, dword ptr [rip + 0x253bf1] ; call rax
0x00000200000f9222 : mov eax, dword ptr [rip + 0x257df0] ; ret
0x00000200000f6b38 : mov eax, dword ptr [rip + 0x25a4de] ; ret
0x00000200000ea1a4 : mov eax, dword ptr [rip + 0x266f02] ; ret
0x00000200000e84ac : mov eax, dword ptr [rip + 0x268ed6] ; ret
0x00000200000dca11 : mov eax, dword ptr [rip + 0x274ae9] ; call rax
0x00000200000dc8be : mov eax, dword ptr [rip + 0x274c3c] ; call r8
0x00000200000dc79a : mov eax, dword ptr [rip + 0x274d60] ; call rax
0x00000200000db9fe : mov eax, dword ptr [rip + 0x275afc] ; call rax
0x00000200000da7c9 : mov eax, dword ptr [rip + 0x276d31] ; call rax
0x00000200000da71a : mov eax, dword ptr [rip + 0x276de0] ; call rax
0x00000200000da669 : mov eax, dword ptr [rip + 0x276e91] ; call rax
0x00000200000da5ba : mov eax, dword ptr [rip + 0x276f40] ; call rax
0x00000200000da4cf : mov eax, dword ptr [rip + 0x27702b] ; call rax
0x00000200000da485 : mov eax, dword ptr [rip + 0x277075] ; call rax
0x00000200000d9cf9 : mov eax, dword ptr [rip + 0x277801] ; call rax
0x00000200000d9b4b : mov eax, dword ptr [rip + 0x2779af] ; call rax
0x00000200000d9abf : mov eax, dword ptr [rip + 0x277a3b] ; call rax
0x00000200000d9996 : mov eax, dword ptr [rip + 0x277b64] ; call rax
0x00000200000d98ee : mov eax, dword ptr [rip + 0x277c0c] ; call rax
0x00000200000d98d5 : mov eax, dword ptr [rip + 0x277c25] ; call rax
0x00000200000d97f8 : mov eax, dword ptr [rip + 0x277d02] ; call rax
0x00000200000d9139 : mov eax, dword ptr [rip + 0x2783c1] ; call rax
0x00000200000d90d7 : mov eax, dword ptr [rip + 0x278423] ; call rax
0x00000200000cf664 : mov eax, dword ptr [rip + 0x281dc6] ; call rax
0x00000200000cf256 : mov eax, dword ptr [rip + 0x2821d4] ; call rax
0x00000200000b49da : mov eax, dword ptr [rip + 0x29c700] ; call rax
0x00000200000b4cd3 : mov eax, dword ptr [rip + 0x29c8b7] ; call rax
0x0000020000026815 : mov eax, dword ptr [rip + 0x32ac95] ; sub rax, rcx ; ret
0x000002000015e01d : mov eax, dword ptr [rip + 0x54c6c5] ; ret
0x000002000015e368 : mov eax, dword ptr [rip + 0x55acce] ; ret
0x00000200001e0896 : mov eax, dword ptr [rip + 0xbe144] ; mov rsi, rdx ; call qword ptr [rax]
0x00000200001e082a : mov eax, dword ptr [rip + 0xbe1b0] ; mov rsi, rdx ; call qword ptr [rax]
0x00000200001e07df : mov eax, dword ptr [rip + 0xbe1fb] ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001d0d6f : mov eax, dword ptr [rip + 0xd09e3] ; call rax
0x00000200001d0d51 : mov eax, dword ptr [rip + 0xd22c1] ; call rax
0x00000200001d0c36 : mov eax, dword ptr [rip + 0xd23dc] ; call rax
0x00000200001d0694 : mov eax, dword ptr [rip + 0xd2976] ; call rax
0x00000200001d06a5 : mov eax, dword ptr [rip + 0xd2995] ; call rax
0x00000200001d7aa4 : mov eax, dword ptr [rip + 0xf8786] ; mov dword ptr [rcx], eax ; ret
0x00000200001d7a94 : mov eax, dword ptr [rip + 0xf878e] ; ret
0x000002000045411d : mov eax, dword ptr [rip - 0x103043] ; call rax
0x00000200003d096d : mov eax, dword ptr [rip - 0x12f20b] ; call rax
0x00000200003d09c4 : mov eax, dword ptr [rip - 0x12f262] ; call rax
0x00000200004a0fd2 : mov eax, dword ptr [rip - 0x14fef8] ; call rax
0x00000200004a16d9 : mov eax, dword ptr [rip - 0x1505ff] ; call rax
0x00000200004aabca : mov eax, dword ptr [rip - 0x159af0] ; call rax
0x00000200004b3ecc : mov eax, dword ptr [rip - 0x205aaa] ; call rax
0x000002000054a46b : mov eax, dword ptr [rip - 0x2a8d09] ; call rax
0x0000020000553544 : mov eax, dword ptr [rip - 0x2b1df2] ; call rax
0x0000020000553565 : mov eax, dword ptr [rip - 0x2b1e2b] ; call rax
0x000002000061591c : mov eax, dword ptr [rip - 0x33da82] ; ret
0x000002000063d772 : mov eax, dword ptr [rip - 0x39c010] ; call rax
0x0000020000662310 : mov eax, dword ptr [rip - 0x3b4992] ; ret
0x00000200003b199e : mov eax, dword ptr [rip - 0x608c4] ; call rax
0x00000200003f73d4 : mov eax, dword ptr [rip - 0xa62fa] ; call rax
0x000002000037f96e : mov eax, dword ptr [rip - 0xe85f0] ; mov dword ptr [rcx + 8], eax ; ret
0x00000200006077c4 : mov eax, dword ptr [rsi + 0x28] ; mov rdx, rsi ; mov rcx, rdi ; call rax
0x00000200005e7a0d : mov eax, dword ptr [rsi + 0x38] ; xor edx, edx ; mov rcx, rdi ; call rax
0x000002000042157a : mov eax, dword ptr [rsi + 0x58] ; mov rdx, qword ptr [rsi + 0x60] ; call 0x2000015d889
0x00000200003cc9f4 : mov eax, dword ptr [rsi + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x00000200003cd007 : mov eax, dword ptr [rsi + 0x68] ; mov dl, 1 ; mov rcx, r15 ; call r12
0x0000020000471114 : mov eax, dword ptr [rsi + 4] ; mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x00000200004babf0 : mov eax, dword ptr [rsi + 8] ; bts dword ptr [rax], r10d ; inc rdx ; jmp 0x200004babc7
0x00000200000e77ae : mov eax, dword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000e77ad
0x000002000043d6c4 : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x000002000006e407 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x28 ; jmp rax
0x00000200004c9f80 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x48 ; ret
0x000002000066805d : mov eax, dword ptr [rsp + 0x28] ; jmp rax
0x000002000061ccd5 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x000002000061ccb7 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x00000200007196b1 : mov eax, dword ptr [rsp + 0x28] ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000013440c : mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x00000200000e20a8 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x00000200001d7da4 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x00000200006712d5 : mov eax, dword ptr [rsp + 0x30] ; jmp rax
0x0000020000133ac2 : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x00000200000fce11 : mov eax, dword ptr [rsp + 0x30] ; test eax, eax ; jne 0x200000fce32 ; ret
0x0000020000119fc7 : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002b4eb : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x000002000022bcdd : mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x000002000060ef5f : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000022bd85 : mov eax, dword ptr [rsp + 0x40] ; jmp rax
0x00000200006cf1f6 : mov eax, dword ptr [rsp + 0x40] ; mov dword ptr [r10], eax ; call r10
0x000002000068146d : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005088f2 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x28 ; ret
0x000002000042e544 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x000002000066222b : mov eax, dword ptr [rsp + 0x48] ; jmp rax
0x00000200003f2916 : mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000175537 : mov eax, dword ptr [rsp + 0x50] ; jmp 0x20000061845
0x000002000022bccf : mov eax, dword ptr [rsp + 0x50] ; jmp rax
0x000002000003ccb2 : mov eax, dword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x000002000047ec26 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x000002000068a5e3 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001cbec9 : mov eax, dword ptr [rsp + 0x60] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004ddbce : mov eax, dword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x0000020000672aec : mov eax, dword ptr [rsp + 0x68] ; mov qword ptr [rcx + 0x58], rax ; ret
0x000002000049ede9 : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004d9a02 : mov eax, dword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x00000200006d14c1 : mov eax, dword ptr [rsp + rax] ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006cb71d : mov eax, dword ptr [rsp + rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200005cc7d0 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000200000fe926 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000002000015e319 : mov eax, dword ptr [rsp] ; ret
0x00000200004beea7 : mov eax, eax ; add rsp, 0x18 ; ret
0x000002000021f3a8 : mov eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fced1 : mov eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b5a59 : mov eax, eax ; add rsp, 0x28 ; ret
0x000002000012feb3 : mov eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012527a : mov eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068080f : mov eax, eax ; add rsp, 0x38 ; jmp r9
0x00000200000aceee : mov eax, eax ; add rsp, 0x38 ; ret
0x0000020000508041 : mov eax, eax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000653818 : mov eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004c1563 : mov eax, eax ; add rsp, 0x48 ; ret
0x000002000040a4a1 : mov eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200004d7f9b : mov eax, eax ; call 0x200000ff575
0x00000200004b4f0e : mov eax, eax ; call 0x20000141174
0x000002000055ddfc : mov eax, eax ; call 0x200005f91cc
0x000002000068f687 : mov eax, eax ; call qword ptr [rax]
0x000002000040dd80 : mov eax, eax ; call rsi
0x00000200004add1e : mov eax, eax ; cmp rcx, qword ptr [rdx + rax*8 + 0x70] ; jne 0x200004add31 ; ret
0x000002000008cc0f : mov eax, eax ; div ecx ; ret
0x000002000023356a : mov eax, eax ; jmp 0x2000022f7a8
0x00000200003f86f4 : mov eax, eax ; jmp 0x200003f86be
0x0000020000063e04 : mov eax, eax ; jne 0x20000063e47 ; ret
0x000002000003364b : mov eax, eax ; mov dword ptr [rcx + rax*4], r9d ; ret
0x0000020000033607 : mov eax, eax ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200004beea4 : mov eax, eax ; mov eax, r8d ; add rsp, 0x18 ; ret
0x0000020000101eaa : mov eax, eax ; mov eax, r8d ; add rsp, 0x28 ; ret
0x00000200004c1560 : mov eax, eax ; mov eax, r8d ; add rsp, 0x48 ; ret
0x00000200004be40c : mov eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call r10
0x00000200001c1d18 : mov eax, eax ; mov rdx, rdi ; mov rcx, rbx ; call r10
0x000002000037f724 : mov eax, eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000157d3a : mov eax, eax ; pop rbx ; ret
0x00000200001583e5 : mov eax, eax ; pop rsi ; pop rdi ; ret
0x0000020000033715 : mov eax, eax ; ret
0x0000020000033627 : mov eax, eax ; shl rax, 4 ; add rax, rcx ; ret
0x00000200003fea28 : mov eax, eax ; shr rax, 1 ; ret
0x000002000015e265 : mov eax, eax ; shr rdx, 0x20 ; wrmsr ; ret
0x0000020000076558 : mov eax, ebp ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000037606e : mov eax, ebp ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006673fe : mov eax, ebp ; call 0x20000294005
0x00000200004f8511 : mov eax, ebp ; call 0x200004f9d9d
0x000002000054b01b : mov eax, ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000043959a : mov eax, ebp ; mov edx, r13d ; call 0x20000065ec8
0x000002000066b4f2 : mov eax, ebp ; mov edx, r14d ; mov rcx, rdi ; call r15
0x00000200001a2ab9 : mov eax, ebp ; mov edx, r15d ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x00000200005ccdd3 : mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000c73f9 : mov eax, ebp ; mov rcx, r15 ; call rax
0x000002000044e9c4 : mov eax, ebp ; mov rdx, rax ; mov rcx, rsi ; call r14
0x000002000021b141 : mov eax, ebp ; mov rdx, rsi ; mov rcx, rdi ; call r9
0x000002000053d968 : mov eax, ebx ; add ecx, 0x1c ; call r10
0x000002000053d5fd : mov eax, ebx ; add ecx, 0x1c ; call rax
0x0000020000113991 : mov eax, ebx ; add rsp, 0x10 ; pop rbx ; ret
0x000002000009657c : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d1249 : mov eax, ebx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b3b2a : mov eax, ebx ; add rsp, 0x28 ; ret
0x00000200000aceac : mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004212a0 : mov eax, ebx ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ef572 : mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004c75f3 : mov eax, ebx ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000508f35 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200000f5e85 : mov eax, ebx ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x00000200004c220e : mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000fcd92 : mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000140a05 : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000200001404eb : mov eax, ebx ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200005178c8 : mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000487e4d : mov eax, ebx ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x000002000050c4b9 : mov eax, ebx ; call 0x200001389d1
0x00000200001d5c2e : mov eax, ebx ; call rdi
0x00000200001b5f41 : mov eax, ebx ; jmp 0x200001321fd
0x000002000056bdc1 : mov eax, ebx ; jmp 0x20000438031
0x00000200006718f1 : mov eax, ebx ; jmp 0x20000671903
0x00000200003a27ec : mov eax, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x0000020000704524 : mov eax, ebx ; mov dl, 1 ; call 0x200003b076e
0x00000200005bdec9 : mov eax, ebx ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x00000200001bc863 : mov eax, ebx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200000de0e9 : mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003cc80 : mov eax, ebx ; mov rcx, rsi ; call rdi
0x00000200004a6a3a : mov eax, ebx ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x000002000013c194 : mov eax, ebx ; pop r15 ; pop r14 ; ret
0x00000200000ca998 : mov eax, ebx ; pop rdi ; ret
0x000002000009d451 : mov eax, ebx ; ret
0x0000020000367fb1 : mov eax, ebx ; xor edx, edx ; call 0x20000364252
0x000002000051997f : mov eax, ecx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000530717 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000b867e : mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f9f72 : mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000057b6f : mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000161f42 : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000bfe58 : mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000107961 : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009d3fb : mov eax, ecx ; add rsp, 0x38 ; ret
0x0000020000530835 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000207486 : mov eax, ecx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000417f85 : mov eax, ecx ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002abb1 : mov eax, ecx ; add rsp, 0x48 ; ret
0x00000200004f822a : mov eax, ecx ; add rsp, 0x50 ; pop r14 ; ret
0x00000200006493eb : mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000012f52b : mov eax, ecx ; add rsp, 0xb8 ; ret
0x0000020000095de3 : mov eax, ecx ; cmp cl, dl ; cmovg eax, edx ; ret
0x00000200004c6fb4 : mov eax, ecx ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x000002000045f744 : mov eax, ecx ; mov qword ptr [rsp + 0x20], rax ; call r12
0x000002000022b330 : mov eax, ecx ; mov rax, r8 ; ret
0x00000200001e60ba : mov eax, ecx ; mov word ptr [r8 + 0xa], cx ; ret
0x00000200004052c9 : mov eax, ecx ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000531add : mov eax, ecx ; pop rbp ; ret
0x0000020000024c8a : mov eax, ecx ; ret
0x00000200006160a4 : mov eax, ecx ; shr eax, 0x10 ; add eax, ecx ; ret
0x000002000013766f : mov eax, edi ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000054e7b : mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003946f : mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d6d69 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001ecc82 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004aa573 : mov eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001405b8 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004e5a83 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000668b19 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; ret
0x000002000050c78b : mov eax, edi ; call 0x200001389d0
0x000002000050ce15 : mov eax, edi ; call 0x20000138ba5
0x00000200004935af : mov eax, edi ; call rax
0x00000200003baf0e : mov eax, edi ; jmp 0x200003bab58
0x0000020000575252 : mov eax, edi ; mov dword ptr [rsp + 0x48], eax ; jmp 0x20000451472
0x00000200006728cb : mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000040c365 : mov eax, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x000002000064b92e : mov eax, edi ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x000002000066b71f : mov eax, edi ; mov rdx, rbp ; mov rcx, r13 ; call rax
0x00000200003f18d8 : mov eax, edi ; mov rdx, rbp ; mov rcx, rsi ; call r14
0x000002000066c376 : mov eax, edi ; mov rdx, rbx ; mov rcx, r14 ; call r12
0x000002000051526f : mov eax, edi ; mov rdx, rsi ; call rax
0x00000200004bd6cf : mov eax, edi ; mov rdx, rsi ; mov rcx, rbx ; call r11
0x00000200005a1dbd : mov eax, edi ; mov rdx, rsi ; mov rcx, rbx ; call rax
0x00000200001583cd : mov eax, edi ; pop rsi ; pop rdi ; ret
0x000002000064b51f : mov eax, edi ; sub eax, edx ; jmp 0x2000064b52d
0x000002000045c6ce : mov eax, edi ; sub r8, rdx ; jmp 0x2000045c6c9
0x000002000001f93a : mov eax, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x000002000020ee56 : mov eax, edx ; add qword ptr [rdx], rcx ; ret
0x00000200003ed394 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000200000f0cce : mov eax, edx ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022b2d7 : mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000100714 : mov eax, edx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f8719 : mov eax, edx ; add rsp, 0x28 ; ret
0x000002000013e6c4 : mov eax, edx ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000bfea6 : mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009172e : mov eax, edx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013ff1f : mov eax, edx ; add rsp, 0x38 ; ret
0x000002000038b84d : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000046933a : mov eax, edx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004afd3e : mov eax, edx ; add rsp, 0x40 ; pop rdi ; ret
0x000002000020fc8a : mov eax, edx ; add rsp, 0x48 ; ret
0x0000020000157daf : mov eax, edx ; and al, 0xf0 ; pop rbx ; ret
0x000002000018419c : mov eax, edx ; and rbx, rsi ; je 0x200001841b1 ; or rax, r10 ; jmp 0x200001841b4
0x0000020000439e0c : mov eax, edx ; call 0x20000065ec5
0x000002000002961d : mov eax, edx ; jmp 0x200000295f9
0x000002000002b9c9 : mov eax, edx ; jmp 0x2000002b9c3
0x000002000006c60e : mov eax, edx ; jmp 0x2000006c5f7
0x000002000007386f : mov eax, edx ; jmp 0x200000737f5
0x00000200000761fc : mov eax, edx ; jmp 0x20000076262
0x000002000009a163 : mov eax, edx ; jmp 0x2000009a155
0x00000200000aa8b9 : mov eax, edx ; jmp 0x200000aa880
0x00000200000d01f6 : mov eax, edx ; jmp 0x200000d017b
0x00000200000d545d : mov eax, edx ; jmp 0x200000d53e4
0x00000200000def12 : mov eax, edx ; jmp 0x200000dee97
0x00000200000e3871 : mov eax, edx ; jmp 0x200000e386b
0x00000200000ebc5d : mov eax, edx ; jmp 0x200000ebc0f
0x00000200000ec244 : mov eax, edx ; jmp 0x200000ec22f
0x0000020000105e82 : mov eax, edx ; jmp 0x20000105e26
0x0000020000130050 : mov eax, edx ; jmp 0x20000130012
0x000002000014798c : mov eax, edx ; jmp 0x200001479ae
0x00000200001ac64b : mov eax, edx ; jmp 0x200001ac657
0x00000200001b9c6c : mov eax, edx ; jmp 0x200001b9c8b
0x00000200001b9cee : mov eax, edx ; jmp 0x200001b9d09
0x00000200001b9d47 : mov eax, edx ; jmp 0x200001b9d61
0x00000200001d5f36 : mov eax, edx ; jmp 0x200001d5ef0
0x00000200001d6084 : mov eax, edx ; jmp 0x200001d609f
0x00000200001ed6a5 : mov eax, edx ; jmp 0x200001ed6ac
0x0000020000208650 : mov eax, edx ; jmp 0x20000208674
0x0000020000208800 : mov eax, edx ; jmp 0x20000208809
0x000002000021793f : mov eax, edx ; jmp 0x20000217958
0x0000020000217f93 : mov eax, edx ; jmp 0x20000217f9f
0x00000200003667d0 : mov eax, edx ; jmp 0x200003667dc
0x000002000037e03b : mov eax, edx ; jmp 0x2000037e049
0x0000020000383475 : mov eax, edx ; jmp 0x2000038342f
0x000002000038829b : mov eax, edx ; jmp 0x2000038824a
0x00000200003a51db : mov eax, edx ; jmp 0x200003a5198
0x00000200003cb8e3 : mov eax, edx ; jmp 0x200003cb87d
0x00000200003cb8e2 : mov eax, edx ; jmp 0x200003cb87e
0x000002000040404d : mov eax, edx ; jmp 0x20000404008
0x00000200004062f1 : mov eax, edx ; jmp 0x200004062d1
0x0000020000436021 : mov eax, edx ; jmp 0x20000436010
0x00000200004a8dc2 : mov eax, edx ; jmp 0x200004a8d89
0x000002000060e515 : mov eax, edx ; jmp 0x2000060e51f
0x0000020000612d30 : mov eax, edx ; jmp 0x20000612d3a
0x00000200006303ec : mov eax, edx ; jmp 0x200006303ce
0x0000020000653b38 : mov eax, edx ; jmp 0x20000653b42
0x00000200006c5919 : mov eax, edx ; jmp 0x200006c596d
0x00000200006c5f5e : mov eax, edx ; jmp 0x200006c5f65
0x00000200006c7369 : mov eax, edx ; jmp 0x200006c7370
0x00000200006c76c0 : mov eax, edx ; jmp 0x200006c76c7
0x00000200006c7c54 : mov eax, edx ; jmp 0x200006c7c5b
0x00000200006c8b3b : mov eax, edx ; jmp 0x200006c8b42
0x00000200006c8f3b : mov eax, edx ; jmp 0x200006c8f42
0x00000200006c92ee : mov eax, edx ; jmp 0x200006c92f5
0x00000200006c9403 : mov eax, edx ; jmp 0x200006c9473
0x00000200006c9530 : mov eax, edx ; jmp 0x200006c9537
0x00000200006ca636 : mov eax, edx ; jmp 0x200006ca63d
0x00000200006cac7a : mov eax, edx ; jmp 0x200006cac81
0x00000200006caf5f : mov eax, edx ; jmp 0x200006caf66
0x00000200006cb040 : mov eax, edx ; jmp 0x200006cb047
0x00000200006cb760 : mov eax, edx ; jmp 0x200006cb767
0x00000200006cb9ad : mov eax, edx ; jmp 0x200006cb9b8
0x00000200006cc9c3 : mov eax, edx ; jmp 0x200006cc9d6
0x00000200006cd258 : mov eax, edx ; jmp 0x200006cd25f
0x00000200006d0187 : mov eax, edx ; jmp 0x200006d0191
0x00000200006d1206 : mov eax, edx ; jmp 0x200006d120d
0x00000200006d1505 : mov eax, edx ; jmp 0x200006d150c
0x00000200006d1a73 : mov eax, edx ; jmp 0x200006d1a7a
0x00000200006d1f19 : mov eax, edx ; jmp 0x200006d1f20
0x00000200006d5aba : mov eax, edx ; jmp 0x200006d5ac1
0x00000200006d5b3b : mov eax, edx ; jmp 0x200006d5b42
0x00000200006d6472 : mov eax, edx ; jmp 0x200006d6479
0x00000200006d67de : mov eax, edx ; jmp 0x200006d67e5
0x00000200006d6c97 : mov eax, edx ; jmp 0x200006d6c9e
0x00000200006d759d : mov eax, edx ; jmp 0x200006d75a4
0x00000200006d78d4 : mov eax, edx ; jmp 0x200006d78db
0x00000200006d8953 : mov eax, edx ; jmp 0x200006d895a
0x00000200006d8c61 : mov eax, edx ; jmp 0x200006d8c68
0x00000200006d9d2f : mov eax, edx ; jmp 0x200006d9d36
0x00000200006da03d : mov eax, edx ; jmp 0x200006da044
0x00000200006db263 : mov eax, edx ; jmp 0x200006db26a
0x00000200006db5a3 : mov eax, edx ; jmp 0x200006db5aa
0x00000200006dc4da : mov eax, edx ; jmp 0x200006dc4e1
0x00000200006dcc08 : mov eax, edx ; jmp 0x200006dcc0f
0x00000200006dcf31 : mov eax, edx ; jmp 0x200006dcf38
0x00000200006de0be : mov eax, edx ; jmp 0x200006de0c5
0x00000200006de3fe : mov eax, edx ; jmp 0x200006de405
0x00000200006df344 : mov eax, edx ; jmp 0x200006df34b
0x00000200006dfcfd : mov eax, edx ; jmp 0x200006dfd04
0x00000200006e0110 : mov eax, edx ; jmp 0x200006e0117
0x00000200006e04e3 : mov eax, edx ; jmp 0x200006e04ea
0x00000200006e08bd : mov eax, edx ; jmp 0x200006e08c4
0x00000200006e0cae : mov eax, edx ; jmp 0x200006e0cb5
0x00000200006e10b0 : mov eax, edx ; jmp 0x200006e10b7
0x00000200006e14ad : mov eax, edx ; jmp 0x200006e14b4
0x00000200006e18c1 : mov eax, edx ; jmp 0x200006e18c8
0x00000200006e1cc2 : mov eax, edx ; jmp 0x200006e1cc9
0x00000200006e20e2 : mov eax, edx ; jmp 0x200006e20e9
0x00000200006e24f0 : mov eax, edx ; jmp 0x200006e24f7
0x00000200006e28c6 : mov eax, edx ; jmp 0x200006e28cd
0x00000200006e2d56 : mov eax, edx ; jmp 0x200006e2d5d
0x00000200006e31e5 : mov eax, edx ; jmp 0x200006e31ec
0x00000200006e36a5 : mov eax, edx ; jmp 0x200006e36ac
0x00000200006e4232 : mov eax, edx ; jmp 0x200006e4239
0x00000200006e50a1 : mov eax, edx ; jmp 0x200006e50a8
0x00000200006e583c : mov eax, edx ; jmp 0x200006e5843
0x00000200006e5d1e : mov eax, edx ; jmp 0x200006e5d25
0x00000200006e605d : mov eax, edx ; jmp 0x200006e6064
0x00000200006e64b2 : mov eax, edx ; jmp 0x200006e64b9
0x00000200006e68e1 : mov eax, edx ; jmp 0x200006e68e8
0x00000200006e6d9e : mov eax, edx ; jmp 0x200006e6da5
0x00000200006e800a : mov eax, edx ; jmp 0x200006e8011
0x00000200006e883d : mov eax, edx ; jmp 0x200006e8844
0x00000200006f6c57 : mov eax, edx ; jmp 0x200006f6c2f
0x00000200001063d0 : mov eax, edx ; jne 0x200001a5c4a ; ret
0x00000200000f7c87 : mov eax, edx ; lock cmpxchg qword ptr [r8], rcx ; jne 0x200000f7c83 ; ret
0x00000200003d2226 : mov eax, edx ; mov dl, sil ; call r10
0x00000200006e97fa : mov eax, edx ; mov ecx, 0x200 ; call r11
0x00000200004b7b89 : mov eax, edx ; mov rax, r8 ; ret
0x00000200000bf5a1 : mov eax, edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004c8aa3 : mov eax, edx ; mov rdx, r10 ; jmp r11
0x00000200000f7f79 : mov eax, edx ; or rcx, r10 ; mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000157df0 : mov eax, edx ; pop rbx ; ret
0x000002000002b560 : mov eax, edx ; ret
0x00000200001fde29 : mov eax, edx ; shr r8, 0x10 ; mov rax, r8 ; ret
0x00000200000c50b1 : mov eax, edx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x200000c5078
0x0000020000110f8c : mov eax, edx ; shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001841c4 : mov eax, edx ; test rbx, rbx ; je 0x200001841d9 ; or rax, r10 ; jmp 0x200001841dc
0x0000020000202651 : mov eax, edx ; test rdx, rdx ; jne 0x20000202664 ; xor eax, eax ; ret
0x000002000053d3c2 : mov eax, esi ; add rcx, rbx ; call 0x2000015d888
0x000002000044d2b7 : mov eax, esi ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000614f5f : mov eax, esi ; call 0x20000141174
0x0000020000551624 : mov eax, esi ; call 0x2000015d884
0x00000200000f7d46 : mov eax, esi ; call rax
0x0000020000438a8d : mov eax, esi ; jmp 0x200004389da
0x0000020000438e99 : mov eax, esi ; jmp 0x20000438ded
0x000002000057e0b2 : mov eax, esi ; jmp 0x200004754ad
0x0000020000672956 : mov eax, esi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200006fd9a4 : mov eax, esi ; mov qword ptr [rsp + 0x20], rax ; call 0x200004f9c05
0x00000200000ef8ba : mov eax, esi ; mov rcx, rbx ; call rax
0x000002000009db15 : mov eax, esi ; mov rcx, rdi ; mov bl, al ; call rsi
0x00000200000c96f3 : mov eax, esi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x000002000038cc50 : mov eax, esi ; mov rdx, r12 ; mov rcx, rbp ; call rax
0x00000200006652e1 : mov eax, esi ; mov rdx, rbp ; mov rcx, r13 ; call r15
0x00000200003ff5fc : mov eax, esi ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x0000020000208c44 : mov eax, esi ; mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x000002000019ea72 : mov eax, esi ; shr r8d, 0x10 ; call r10
0x00000200004cc01e : mov eax, esp ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f398a : mov eax, esp ; mov ecx, r14d ; call 0x200000bfc7f
0x00000200005054a1 : mov eax, esp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200000b589f : mov eax, esp ; mov rcx, rdi ; call r14
0x00000200004a690e : mov eax, esp ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x000002000051f8a8 : mov eax, r10d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000377186 : mov eax, r10d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012e3a9 : mov eax, r10d ; add rsp, 0x28 ; ret
0x000002000013e6c3 : mov eax, r10d ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000bfea5 : mov eax, r10d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001057b9 : mov eax, r10d ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000469339 : mov eax, r10d ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004b2f46 : mov eax, r10d ; add rsp, 0x48 ; ret
0x000002000002961c : mov eax, r10d ; jmp 0x200000295fa
0x000002000006c60d : mov eax, r10d ; jmp 0x2000006c5f8
0x00000200000ebc5c : mov eax, r10d ; jmp 0x200000ebc10
0x0000020000105e81 : mov eax, r10d ; jmp 0x20000105e27
0x00000200001ac64a : mov eax, r10d ; jmp 0x200001ac658
0x00000200001ed6a4 : mov eax, r10d ; jmp 0x200001ed6ad
0x000002000020864f : mov eax, r10d ; jmp 0x20000208675
0x0000020000217f92 : mov eax, r10d ; jmp 0x20000217fa0
0x000002000037e03a : mov eax, r10d ; jmp 0x2000037e04a
0x00000200004062f0 : mov eax, r10d ; jmp 0x200004062d2
0x000002000060e514 : mov eax, r10d ; jmp 0x2000060e520
0x000002000002b55f : mov eax, r10d ; ret
0x00000200001d1248 : mov eax, r11d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b3b29 : mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000013c193 : mov eax, r11d ; pop r15 ; pop r14 ; ret
0x00000200000ca997 : mov eax, r11d ; pop rdi ; ret
0x000002000009d450 : mov eax, r11d ; ret
0x000002000044d2b6 : mov eax, r14d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000438a8c : mov eax, r14d ; jmp 0x200004389db
0x0000020000438e98 : mov eax, r14d ; jmp 0x20000438dee
0x00000200004beea6 : mov eax, r8d ; add rsp, 0x18 ; ret
0x000002000021f3a7 : mov eax, r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fced0 : mov eax, r8d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000101eac : mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000012feb2 : mov eax, r8d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000e215c : mov eax, r8d ; add rsp, 0x38 ; ret
0x0000020000508040 : mov eax, r8d ; add rsp, 0x40 ; pop r14 ; ret
0x00000200004c1562 : mov eax, r8d ; add rsp, 0x48 ; ret
0x000002000040a4a0 : mov eax, r8d ; add rsp, 0x50 ; pop rdi ; ret
0x000002000008cc0e : mov eax, r8d ; div ecx ; ret
0x00000200003f86f3 : mov eax, r8d ; jmp 0x200003f86bf
0x000002000003364a : mov eax, r8d ; mov dword ptr [rcx + rax*4], r9d ; ret
0x0000020000033606 : mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000037f723 : mov eax, r8d ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000008ece4 : mov eax, r8d ; ret
0x000002000051997e : mov eax, r9d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d6e9a : mov eax, r9d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050a578 : mov eax, r9d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011e97c : mov eax, r9d ; add rsp, 0x28 ; ret
0x00000200000bfe57 : mov eax, r9d ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009d3fa : mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200004f8229 : mov eax, r9d ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001e60b9 : mov eax, r9d ; mov word ptr [r8 + 0xa], cx ; ret
0x00000200004052c8 : mov eax, r9d ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000a3485 : mov eax, r9d ; ret
0x00000200006f23f4 : mov ebp, 0x1d8901ff ; ret
0x00000200001ac646 : mov ebp, 0x410575c9 ; mov eax, edx ; jmp 0x200001ac65c
0x000002000007386a : mov ebp, 0x44fffffe ; mov eax, edx ; jmp 0x200000737fa
0x0000020000531313 : mov ebp, 0x4890ffb8 ; add esp, 0x40 ; pop rbp ; ret
0x000002000048ef43 : mov ebp, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x00000200001ed1bf : mov ebp, 0x48ffe460 ; add esp, 0x48 ; ret
0x0000020000131467 : mov ebp, 0x48ffef8e ; add esp, 0x38 ; ret
0x000002000040fcb3 : mov ebp, 0x48ffffdd ; add esp, 0x50 ; pop rbx ; ret
0x00000200006f5b55 : mov ebp, 0x58d48ff ; ret 0xbda5
0x000002000072d0a8 : mov ebp, 0x5c8b48ff ; and al, 8 ; xor eax, eax ; ret
0x0000020000497d18 : mov ebp, 0x8348fff5 ; ret
0x00000200006fc733 : mov ebp, 0x85fffff1 ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001bbf0f : mov ebp, 0x8a0018a2 ; ret
0x000002000050fd9b : mov ebp, 0x8b000000 ; pop rdi ; adc bh, bh ; ret
0x00000200004fdde7 : mov ebp, 0x8b000ac7 ; ret
0x00000200000f4049 : mov ebp, 0x8b0025cf ; ret 0xe8d3
0x00000200001352af : mov ebp, 0x8b440021 ; ret
0x0000020000551eb7 : mov ebp, 0x8b45ffe8 ; ret
0x00000200001e53b5 : mov ebp, 0x8b48c033 ; pop rsp ; and al, 8 ; ret
0x000002000059425f : mov ebp, 0x8bffd00b ; ret
0x0000020000145b53 : mov ebp, 0x8bfffdcc ; ret
0x0000020000010e70 : mov ebp, 0xa73342c5 ; xlatb ; and eax, edi ; ret 0xf958
0x000002000054be7a : mov ebp, 0xb60fffad ; ret
0x000002000002a6e0 : mov ebp, 0xb70f41c8 ; ret
0x00000200000a639b : mov ebp, 0xc0000006 ; call 0x1ffc30b87b2
0x00000200000f4424 : mov ebp, 0xc033000a ; ret
0x00000200003792b3 : mov ebp, 0xc033ffda ; add rsp, 0x38 ; ret
0x000002000000283d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000002000058e334 : mov ebp, 0xc3f60011 ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x00000200006d2b6d : mov ebp, 0xe2c148ff ; and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000019bde2 : mov ebp, 0xe990ffe8 ; stosd dword ptr [rdi], eax ; ret
0x0000020000575d23 : mov ebp, 0xe9ffeded ; ret
0x000002000058719e : mov ebp, 0xe9fffffe ; ret 0xfffe
0x00000200000960bf : mov ebp, 0xebc2fed0 ; ret
0x000002000048b4ab : mov ebp, 0xf48f0ff ; rcr dword ptr [rbp], -0xa ; ret
0x000002000043c55d : mov ebp, 0xf6000000 ; ret
0x000002000049ecc0 : mov ebp, 0xf694ebff ; ret 0x7504
0x0000020000191766 : mov ebp, 0xffccfff2 ; ret
0x000002000067172c : mov ebp, 1 ; call 0x20000294008
0x00000200004819af : mov ebp, dword ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; ret 0xffcc
0x0000020000640b6c : mov ebp, dword ptr [rax] ; jmp 0x20000640b36
0x000002000001fd48 : mov ebp, dword ptr [rax] ; ret
0x00000200001b5f3d : mov ebp, dword ptr [rbp - 0x41] ; mov r8d, ebx ; jmp 0x20000132201
0x00000200005857b4 : mov ebp, dword ptr [rbp - 0x60] ; jmp 0x20000490a6e
0x00000200000fa741 : mov ebp, dword ptr [rbp - 0x69] ; jmp 0x200000fa67b
0x00000200005cc4a3 : mov ebp, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x0000020000404f96 : mov ebp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004effb0 : mov ebp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000159535 : mov ebp, dword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x0000020000496509 : mov ebp, dword ptr [rdx] ; str word ptr [rdx - 0x759fdba4] ; ret
0x000002000036daef : mov ebp, dword ptr [rsi] ; add byte ptr [rax - 0xbe3cff], dh ; ret 0x3b45
0x000002000041f352 : mov ebp, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000d5fac : mov ebp, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200000a55a1 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b1503 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000418fd6 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000480f87 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200001ce5dc : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c1893 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000063a1d : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001ef235 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000506f8a : mov ebp, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f677d : mov ebp, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000e4345 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001cd4e6 : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rsi ; ret
0x00000200000909f1 : mov ebp, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x000002000066d8c3 : mov ebp, eax ; call 0x20000294005
0x000002000066bd59 : mov ebp, eax ; call rbx
0x00000200006ca2c3 : mov ebp, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x00000200006e48b7 : mov ebp, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x0000020000159d52 : mov ebp, eax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x0000020000668cfe : mov ebp, eax ; mov rsi, rdx ; call 0x20000674f7f
0x0000020000722821 : mov ebp, ebp ; ret 0x48ff
0x00000200006f4211 : mov ebp, ebx ; jmp 0x200006f41e5
0x00000200001df90b : mov ebp, ecx ; jae 0x200001df922 ; mov rcx, r14 ; call 0x200000bbb95
0x00000200000977ed : mov ebp, ecx ; jmp 0x20000097504
0x000002000064c031 : mov ebp, ecx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200000b43fd : mov ebp, ecx ; mov rcx, rsi ; call qword ptr [rbx]
0x00000200005f3fd1 : mov ebp, edi ; mov rcx, rbp ; call 0x20000440213
0x000002000016203d : mov ebp, edx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000169c30 : mov ebp, edx ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0xba48
0x00000200001a17ae : mov ebp, esi ; push rsi ; ret
0x0000020000010597 : mov ebp, esp ; ret 0x7431
0x00000200005627b5 : mov ebx, 0x103 ; jmp 0x2000041ea8e
0x0000020000713ced : mov ebx, 0x158948ff ; push 0xd8 ; ret
0x00000200006795fe : mov ebx, 0x158b48ff ; pop rcx ; ret
0x00000200007161cb : mov ebx, 0x15ff1eff ; or al, 0xaf ; ret
0x00000200001408c5 : mov ebx, 0x2200165b ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200005e3ef9 : mov ebx, 0x24448948 ; and al, ch ; lodsb al, byte ptr [rsi] ; ret
0x00000200006ea9c6 : mov ebx, 0x2bc58bff ; ret
0x0000020000713c41 : mov ebx, 0x2d8948ff ; salc ; push rdi ; ret
0x00000200001c1596 : mov ebx, 0x30 ; mov ecx, ebx ; call 0x200005cd7d1
0x00000200006f18ad : mov ebx, 0x3d8948ff ; ret 0xbbe6
0x00000200000def0d : mov ebx, 0x44fffffe ; mov eax, edx ; jmp 0x200000dee9c
0x00000200006c7c4e : mov ebx, 0x458 ; mov rax, rdx ; jmp 0x200006c7c61
0x00000200006d646c : mov ebx, 0x458 ; mov rax, rdx ; jmp 0x200006d647f
0x00000200004b1cdc : mov ebx, 0x458b48ff ; and byte ptr [rbx], bh ; ret
0x00000200000fc699 : mov ebx, 0x48000a58 ; add esp, 0x28 ; ret
0x000002000053151b : mov ebx, 0x4890ffb8 ; add esp, 0x50 ; pop rbp ; ret
0x000002000060cd6c : mov ebx, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200005ce037 : mov ebx, 0x48c00000 ; add esp, 0x28 ; ret
0x000002000020c580 : mov ebx, 0x48c00000 ; add esp, 0x50 ; pop rbx ; ret
0x000002000062b051 : mov ebx, 0x48ffb1dd ; add esp, 0x50 ; pop rbx ; ret
0x00000200005116a1 : mov ebx, 0x48ffc3c5 ; add esp, 0x58 ; ret
0x00000200001d6851 : mov ebx, 0x48fff725 ; add esp, 0x68 ; ret
0x000002000022370d : mov ebx, 0x48ffff15 ; add esp, 0x38 ; ret
0x00000200006f1364 : mov ebx, 0x58948ff ; ret
0x0000020000718665 : mov ebx, 0x58d48ff ; adc bl, byte ptr [rcx] ; ret
0x00000200006f10ed : mov ebx, 0x58d48ff ; ret 0x9958
0x000002000071626e : mov ebx, 0x6a15ffff ; scasb al, byte ptr [rdi] ; ret
0x0000020000168c8b : mov ebx, 0x6ce9ffec ; ret 0xffec
0x00000200000115c0 : mov ebx, 0x76b2d7d0 ; ret 0xbb54
0x00000200004ddd59 : mov ebx, 0x83ffb25c ; ret
0x00000200001858fb : mov ebx, 0x8844001c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000194465 : mov ebx, 0x8afff32f ; push rdi ; add al, 0xf6 ; ret 0x7508
0x000002000002d2a3 : mov ebx, 0x8b000003 ; ret 0xba0f
0x00000200004e22e9 : mov ebx, 0x8b000bf3 ; ret
0x00000200001c3a41 : mov ebx, 0x8b0018da ; ret
0x000002000013f676 : mov ebx, 0x8b440007 ; ret
0x0000020000239264 : mov ebx, 0x8b480005 ; ret
0x000002000018a156 : mov ebx, 0x8b49fff1 ; ret 0xb948
0x000002000012fb23 : mov ebx, 0x8bc00000 ; ret
0x0000020000724d94 : mov ebx, 0x8bcbffff ; ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200005567e4 : mov ebx, 0x8bffea1b ; ret 0x47e9
0x00000200006f1864 : mov ebx, 0x9005c7ff ; out 0xbb, al ; call qword ptr [rbx]
0x00000200003c6b95 : mov ebx, 0xb60fffc7 ; ret
0x0000020000185154 : mov ebx, 0xb70ffff0 ; ret 0x4166
0x000002000071621e : mov ebx, 0xba15ffff ; scasb al, byte ptr [rdi] ; ret
0x0000020000041c32 : mov ebx, 0xbe0f0012 ; xchg eax, edi ; ret
0x000002000000283b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000200004ed0dc : mov ebx, 0xc0000001 ; jmp 0x200004ed0ab
0x00000200004212aa : mov ebx, 0xc000000d ; jmp 0x20000421279
0x0000020000588211 : mov ebx, 0xc000000d ; jmp 0x200004944ee
0x00000200004ee556 : mov ebx, 0xc000000d ; jmp 0x200004ee526
0x000002000051a7d5 : mov ebx, 0xc000000d ; jmp 0x2000051a7a4
0x0000020000121e8f : mov ebx, 0xc0000010 ; jmp 0x200001ae142
0x00000200005881f8 : mov ebx, 0xc0000016 ; jmp 0x200004944ee
0x00000200003844c9 : mov ebx, 0xc000008a ; jmp 0x20000384498
0x0000020000596d69 : mov ebx, 0xc000009a ; jmp 0x200004c2ff4
0x0000020000596d68 : mov ebx, 0xc000009a ; jmp 0x200004c2ff5
0x00000200004f3a7a : mov ebx, 0xc000009a ; jmp 0x200004f3a4a
0x00000200005db450 : mov ebx, 0xc000009a ; jmp 0x200005db41f
0x00000200006fe1d8 : mov ebx, 0xc000009a ; jmp 0x200006fe1a8
0x0000020000402945 : mov ebx, 0xc0000225 ; jmp 0x20000402915
0x0000020000619a91 : mov ebx, 0xc3c00000 ; xor ecx, ecx ; jmp rax
0x00000200000f2785 : mov ebx, 0xd0 ; jmp 0x200000f2755
0x000002000014f1b5 : mov ebx, 0xe9000000 ; ret 0xd3
0x000002000068e72d : mov ebx, 0xe9c00000 ; ret
0x00000200004aaa70 : mov ebx, 0xe9c38bff ; ret 0
0x0000020000449ae5 : mov ebx, 0xf6c00000 ; ret
0x0000020000611575 : mov ebx, 0xfc00000 ; ret
0x000002000036a360 : mov ebx, dr0 ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000015d72b : mov ebx, dword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200003a43d7 : mov ebx, dword ptr [rbx + 8] ; mov rcx, rbx ; call 0x200003a066c
0x00000200003f0d73 : mov ebx, dword ptr [rbx] ; jmp 0x200003f0cc8
0x00000200006f4d72 : mov ebx, dword ptr [rbx] ; jmp 0x200006f4d59
0x000002000022a83d : mov ebx, dword ptr [rcx + rax*8 + 0x10] ; jmp 0x2000022a84f
0x000002000000d0e8 : mov ebx, dword ptr [rsi - 0x51e2d327] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x00000200004fb8c1 : mov ebx, dword ptr [rsi] ; inc rdx ; jmp 0x200004fb8ab
0x00000200001de33b : mov ebx, dword ptr [rsp + 0x10] ; ret
0x00000200000b87cc : mov ebx, dword ptr [rsp + 0x18] ; pop r15 ; pop r14 ; ret
0x0000020000105db8 : mov ebx, dword ptr [rsp + 0x20] ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000fe4c2 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x00000200001c4faa : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000020522e : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000024c2a : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0b09 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000002604b : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002fa39 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004b2d0 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000021527b : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x000002000067690b : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000276c2 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013b450 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000072c09f : mov ebx, dword ptr [rsp + 0x40] ; jmp 0x2000072c06d
0x0000020000114f1f : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000703b5 : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000068dca : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dd699 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046f68a : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006f7a8b : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000558a5 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000013ecc7 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cb8b3 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000013a772 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003ee4fb : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046a12d : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005b9c2a : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004dd37c : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200001280d8 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000008cb9a : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000232f7f : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000012fe47 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000070d7b9 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004849dd : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000127ea1 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rbp ; ret
0x000002000008223f : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000203c8c : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x000002000011999d : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x000002000008e4e6 : mov ebx, dword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200000b8577 : mov ebx, dword ptr [rsp + 8] ; mov al, r9b ; ret
0x000002000023964d : mov ebx, dword ptr [rsp + 8] ; mov eax, ecx ; ret
0x0000020000232529 : mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000012dee3 : mov ebx, dword ptr [rsp + 8] ; mov eax, r10d ; ret
0x000002000009d44c : mov ebx, dword ptr [rsp + 8] ; mov eax, r11d ; ret
0x00000200001be123 : mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x00000200000e1b1f : mov ebx, dword ptr [rsp + 8] ; mov eax, r9d ; ret
0x000002000008fe70 : mov ebx, dword ptr [rsp + 8] ; mov qword ptr [r8], r10 ; ret
0x00000200001359a0 : mov ebx, dword ptr [rsp + 8] ; mov rax, r11 ; ret
0x00000200004d8371 : mov ebx, dword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200006f8d9d : mov ebx, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200000295f9 : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000010021d : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x00000200006113a8 : mov ebx, dword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x000002000008ea07 : mov ebx, dword ptr [rsp + 8] ; ret
0x000002000023694b : mov ebx, dword ptr [rsp + 8] ; xor eax, eax ; ret
0x00000200004397d6 : mov ebx, eax ; call 0x20000068fd5
0x00000200005619c6 : mov ebx, eax ; call 0x2000014dc04
0x000002000051ec3d : mov ebx, eax ; call 0x2000014dc05
0x0000020000381f58 : mov ebx, eax ; call 0x200003ce244
0x00000200005f22d9 : mov ebx, eax ; call 0x2000051e588
0x0000020000676f22 : mov ebx, eax ; call rdi
0x0000020000678110 : mov ebx, eax ; call rsi
0x0000020000192044 : mov ebx, eax ; jmp 0x200000be2e4
0x000002000059e21d : mov ebx, eax ; jmp 0x200004da466
0x0000020000646bdd : mov ebx, eax ; jmp 0x20000646c3a
0x00000200005fc306 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000387a24 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000039cdac : mov ebx, eax ; mov rcx, qword ptr [rsp + 0x78] ; call 0x20000068fd9
0x0000020000378536 : mov ebx, ebp ; dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000507b8d : mov ebx, ecx ; add rcx, 8 ; call 0x200001378d9
0x00000200000e5680 : mov ebx, ecx ; call 0x200000e5748
0x000002000051322c : mov ebx, ecx ; call 0x2000013a6b5
0x0000020000111923 : mov ebx, ecx ; call 0x2000015dbc4
0x00000200005964f8 : mov ebx, ecx ; call 0x200001c09e5
0x00000200001e06f7 : mov ebx, ecx ; call qword ptr [rax]
0x0000020000422786 : mov ebx, ecx ; call qword ptr [rdi]
0x00000200004db5de : mov ebx, ecx ; je 0x200004db5f1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000082432 : mov ebx, ecx ; jmp 0x200000823fb
0x0000020000497c18 : mov ebx, ecx ; jmp 0x20000497c68
0x00000200003f6dd4 : mov ebx, ecx ; jne 0x200003f6de7 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046a5f7 : mov ebx, ecx ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004856bf : mov ebx, ecx ; mov esi, edx ; mov rcx, qword ptr [rbx] ; call 0x200000e19c5
0x000002000067290f : mov ebx, ecx ; test rax, rax ; je 0x20000672922 ; call rax
0x0000020000129214 : mov ebx, edx ; call 0x200000b00f9
0x00000200000e416e : mov ebx, edx ; call 0x20000470460
0x00000200001e07b1 : mov ebx, edx ; call qword ptr [rax]
0x00000200000b137a : mov ebx, edx ; jmp 0x2000018d5f0
0x0000020000010fe9 : mov ebx, edx ; ret
0x000002000023d554 : mov ebx, es ; cmp dword ptr [rax], eax ; hlt ; ret
0x0000020000511870 : mov ebx, es ; ret
0x000002000059c24d : mov ebx, esi ; dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x00000200005964f7 : mov ebx, r9d ; call 0x200001c09e6
0x0000020000497c17 : mov ebx, r9d ; jmp 0x20000497c69
0x00000200005e76a3 : mov ecx, 0x10000 ; xor esi, esi ; call 0x200004d395d
0x0000020000234e64 : mov ecx, 0x12a ; call 0x200001510a7
0x00000200004d9049 : mov ecx, 0x158b48ff ; ret
0x00000200000f451d : mov ecx, 0x168 ; add byte ptr [rbp + 5], dh ; ret
0x0000020000194e66 : mov ecx, 0x1a ; call 0x200001510a7
0x000002000070d4c5 : mov ecx, 0x1b041ff ; xor edx, edx ; call 0x200000e9749
0x0000020000545c22 : mov ecx, 0x1e6 ; add byte ptr [rdi], cl ; test esp, eax ; ret 0xffe7
0x00000200006e97fc : mov ecx, 0x200 ; call r11
0x00000200006e9bd1 : mov ecx, 0x200 ; call r9
0x00000200007258b6 : mov ecx, 0x213b ; call 0x20000631b67
0x000002000057caad : mov ecx, 0x2344fffa ; ret 0x6aeb
0x00000200000678aa : mov ecx, 0x38fffffb ; lahf ; ret
0x0000020000596ce3 : mov ecx, 0x41ffad23 ; add ebp, edi ; jmp 0x200004c2f7e
0x000002000003407f : mov ecx, 0x48000000 ; add esp, 0x68 ; ret
0x0000020000531743 : mov ecx, 0x4890ffb8 ; add esp, 0x30 ; pop rbp ; ret
0x00000200006fe046 : mov ecx, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x0000020000508d6d : mov ecx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200004ff253 : mov ecx, 0x48ffc49b ; add esp, 0x50 ; pop rbx ; ret
0x0000020000367047 : mov ecx, 0x48ffd795 ; add esp, 0x30 ; pop rbx ; ret
0x000002000022e28b : mov ecx, 0x48ffe579 ; add esp, 0x38 ; ret
0x00000200005f9197 : mov ecx, 0x48ffeb37 ; test eax, eax ; je 0x200005f91c0 ; call rax
0x0000020000714881 : mov ecx, 0x49c033ff ; mov esp, ebx ; pop rbp ; ret
0x0000020000538001 : mov ecx, 0x49ffe5b9 ; mov ecx, edx ; call r8
0x0000020000718c65 : mov ecx, 0x58948ff ; ret 0xb96c
0x0000020000712ebd : mov ecx, 0x58b48ff ; jp 0x20000712f34 ; ret
0x000002000001e919 : mov ecx, 0x66eb ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000065d44f : mov ecx, 0x78c085ff ; or al, 0x8b ; ret
0x000002000000d33f : mov ecx, 0x79682177 ; ret
0x000002000000fcc2 : mov ecx, 0x79daa6e7 ; ret
0x00000200004b95ac : mov ecx, 0x800c ; call rax
0x000002000070f96d : mov ecx, 0x81480ce9 ; ret 0xa2
0x000002000040e8c7 : mov ecx, 0x84000004 ; sal byte ptr [rbp + 0x2f], 0xff ; ret
0x00000200001374f9 : mov ecx, 0x8b000804 ; ret
0x0000020000407d13 : mov ecx, 0x8b480011 ; ror dword ptr [rax - 1], 1 ; ret 0x4466
0x00000200005e5317 : mov ecx, 0x8bffa5e9 ; ret
0x000002000068f21b : mov ecx, 0x8bffa9f4 ; ret
0x00000200004f3843 : mov ecx, 0x8bffc5a3 ; ret
0x0000020000585e73 : mov ecx, 0x90ffad28 ; jmp 0x20000492155
0x00000200004dc9eb : mov ecx, 0x92 ; call 0x200000ff62c
0x000002000043842b : mov ecx, 0x9eebffc2 ; mov rsi, r14 ; jmp 0x20000438400
0x0000020000402d63 : mov ecx, 0xb2ffecf8 ; add ecx, ebp ; add ah, dl ; ret 0xccff
0x000002000000df84 : mov ecx, 0xb5b5889b ; ret
0x00000200005dc1d0 : mov ecx, 0xb60fffa4 ; ret
0x000002000013fd12 : mov ecx, 0xb70f0007 ; ret 0x94c
0x000002000023d3c5 : mov ecx, 0xba0f0039 ; cmp dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x0000020000002839 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000200004a0ed9 : mov ecx, 0xc000000d ; call 0x200000cee04
0x00000200002155b5 : mov ecx, 0xc000000d ; mov eax, r9d ; ret
0x00000200001c2b36 : mov ecx, 0xc000009a ; call 0x200000cee03
0x00000200004a0ecf : mov ecx, 0xc000009a ; call 0x200000cee04
0x000002000070dd2d : mov ecx, 0xc48348ff ; pop rbx ; ret
0x00000200004ac83c : mov ecx, 0xc48348ff ; ret
0x0000020000579534 : mov ecx, 0xc8 ; jmp 0x200005795ba
0x000002000000eef5 : mov ecx, 0xcac82fee ; jne 0x2000000ee8f ; ret 0x5e78
0x0000020000713176 : mov ecx, 0xcb8348ff ; dec dword ptr [rax - 0x39] ; ret 0x7400
0x0000020000280ff0 : mov ecx, 0xcc0013cd ; jmp qword ptr [rdi]
0x00000200005c6d54 : mov ecx, 0xd ; call 0x20000032fc7
0x000002000071463f : mov ecx, 0xd505c7ff ; mov ch, 0xb9 ; call qword ptr [rbx]
0x00000200004a4977 : mov ecx, 0xe1e8ffe3 ; ret 0xffb8
0x000002000014f175 : mov ecx, 0xe9000000 ; add dl, ah ; add byte ptr [rax], al ; ret
0x0000020000722e18 : mov ecx, 0xec0de8ff ; cwde ; dec dword ptr [rax - 0x75] ; ret
0x00000200001593e5 : mov ecx, 0xf0 ; ret
0x0000020000159485 : mov ecx, 0xf0 ; xor eax, eax ; ret
0x00000200000e5683 : mov ecx, 0xf6000000 ; ret
0x0000020000174eef : mov ecx, 0xf641ffee ; ret
0x000002000056bc56 : mov ecx, 0xf6ffecbf ; ret
0x000002000017603d : mov ecx, 1 ; call 0x2000007229b
0x0000020000137d31 : mov ecx, 1 ; call 0x20000294007
0x0000020000500096 : mov ecx, 1 ; call r8
0x00000200001bbb83 : mov ecx, 1 ; call rax
0x0000020000585edf : mov ecx, 1 ; jmp 0x200004921eb
0x0000020000582949 : mov ecx, 1 ; jmp 0x20000582963
0x0000020000666f4a : mov ecx, 1 ; mov eax, r9d ; ret
0x00000200004bbe90 : mov ecx, 2 ; call rax
0x00000200005a0619 : mov ecx, 2 ; jmp 0x200005a063d
0x00000200000967d8 : mov ecx, 2 ; mov cr8, rcx ; ret
0x00000200004d7c50 : mov ecx, 3 ; call 0x200000ff578
0x00000200004e3f9d : mov ecx, 3 ; call rax
0x000002000016d721 : mov ecx, 3 ; int 0x29
0x000002000044431b : mov ecx, 5 ; call 0x2000007229c
0x0000020000513d62 : mov ecx, 6 ; call 0x2000013acc8
0x00000200001c36ca : mov ecx, 7 ; call 0x200000af90f
0x000002000038b86e : mov ecx, 8 ; jmp 0x2000038b83e
0x00000200001d802a : mov ecx, 8 ; mov eax, ecx ; ret
0x00000200000ea2f6 : mov ecx, dword ptr [r8 + 0x14] ; cmp r9d, ecx ; jb 0x200000ea2e6 ; ret
0x0000020000233329 : mov ecx, dword ptr [r9 + 0x14] ; cmp r8d, ecx ; jb 0x20000233316 ; ret
0x00000200000ea2f7 : mov ecx, dword ptr [rax + 0x14] ; cmp r9d, ecx ; jb 0x200000ea2e5 ; ret
0x00000200001cbe65 : mov ecx, dword ptr [rax + 0x18] ; test rcx, rcx ; je 0x200001cbe79 ; jmp rcx
0x00000200006733f4 : mov ecx, dword ptr [rax + 0x24] ; xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x00000200001bc6b6 : mov ecx, dword ptr [rax + 0x30] ; call r9
0x00000200000aa88c : mov ecx, dword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000aa85f
0x00000200001cbd89 : mov ecx, dword ptr [rax + 0x40] ; test rcx, rcx ; je 0x200001cbd9d ; jmp rcx
0x000002000037a61e : mov ecx, dword ptr [rax + 0x48] ; test rcx, rcx ; je 0x2000037a630 ; call rcx
0x000002000070cd25 : mov ecx, dword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x2000070cd36 ; ret
0x0000020000471210 : mov ecx, dword ptr [rax + 0xb8] ; call 0x2000009d470
0x00000200004712f1 : mov ecx, dword ptr [rax + 0xb8] ; call 0x2000009d471
0x000002000043b191 : mov ecx, dword ptr [rax + 1] ; add byte ptr [rax], al ; call 0x20000063ddc
0x000002000043b102 : mov ecx, dword ptr [rax + 1] ; add byte ptr [rax], al ; call 0x2000006a618
0x000002000037a961 : mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x00000200001cbadc : mov ecx, dword ptr [rax + 8] ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001cbd29 : mov ecx, dword ptr [rax + 8] ; test rcx, rcx ; je 0x200001cbd3b ; call rcx
0x000002000054ed00 : mov ecx, dword ptr [rax - 0x17ffffff] ; ret 0xae6b
0x00000200000c6dfc : mov ecx, dword ptr [rax - 0x75] ; ret
0x0000020000074a60 : mov ecx, dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200007157a6 : mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000038abc : mov ecx, dword ptr [rax - 0x7f] ; ret
0x00000200005d36a0 : mov ecx, dword ptr [rax] ; cmp rcx, rax ; jbe 0x200005d36b3 ; xor eax, eax ; ret
0x000002000071e808 : mov ecx, dword ptr [rax] ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007196b5 : mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000051aa9f : mov ecx, dword ptr [rbp + 0x10] ; xor rcx, rsp ; call 0x20000148e19
0x00000200005e75d5 : mov ecx, dword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000519d0f : mov ecx, dword ptr [rbp + 0x20] ; xor rcx, rsp ; call 0x20000148e19
0x000002000059c85c : mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x00000200000acb74 : mov ecx, dword ptr [rbp + 0x30] ; xor rcx, rsp ; call 0x20000148e18
0x000002000051a849 : mov ecx, dword ptr [rbp + 0x37] ; xor rcx, rsp ; call 0x20000148e19
0x0000020000162a22 : mov ecx, dword ptr [rbp + 0x40] ; call rax
0x00000200000f74a0 : mov ecx, dword ptr [rbp + 0x448b0143] ; ret 0x4104
0x000002000051a4dd : mov ecx, dword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x20000148e19
0x00000200004935ab : mov ecx, dword ptr [rbp + 0x48] ; mov r8, rdi ; call rax
0x000002000051a1b9 : mov ecx, dword ptr [rbp + 0x4f] ; xor rcx, rsp ; call 0x20000148e19
0x000002000016307e : mov ecx, dword ptr [rbp + 0x50] ; call rax
0x000002000057c15b : mov ecx, dword ptr [rbp + 0x68] ; xor edx, edx ; call r14
0x000002000051f171 : mov ecx, dword ptr [rbp + 0x6f] ; mov ebx, eax ; call 0x2000014dc08
0x000002000008f1b5 : mov ecx, dword ptr [rbp + 0xa0] ; mov edx, r15d ; call rax
0x0000020000164152 : mov ecx, dword ptr [rbp + 0xf8] ; call 0x20000140428
0x000002000011cb4a : mov ecx, dword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x20000148e18
0x00000200004ab175 : mov ecx, dword ptr [rbp - 0x11] ; call rax
0x000002000051ec3a : mov ecx, dword ptr [rbp - 0x29] ; mov ebx, eax ; call 0x2000014dc08
0x000002000038202d : mov ecx, dword ptr [rbp - 0x59] ; call 0x200003ce245
0x0000020000381f55 : mov ecx, dword ptr [rbp - 0x59] ; mov ebx, eax ; call 0x200003ce247
0x000002000051526b : mov ecx, dword ptr [rbp - 0x61] ; mov r8, r15 ; mov rdx, rsi ; call rax
0x000002000012798f : mov ecx, dword ptr [rbp - 0x75] ; ret 0xd78b
0x000002000056d2aa : mov ecx, dword ptr [rbp - 0x78] ; call 0x2000043c8f9
0x000002000051dd20 : mov ecx, dword ptr [rbp - 1] ; xor rcx, rsp ; call 0x20000148e19
0x00000200004413df : mov ecx, dword ptr [rbp - 8] ; mov edi, eax ; call 0x20000068fd8
0x000002000051bbec : mov ecx, dword ptr [rbp - 8] ; xor rcx, rsp ; call 0x20000148e19
0x0000020000418ff3 : mov ecx, dword ptr [rbx + 0x18] ; call 0x20000045496
0x000002000064bfbd : mov ecx, dword ptr [rbx + 0x20] ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x0000020000560b88 : mov ecx, dword ptr [rbx + 0x28] ; call rax
0x00000200004b4f0a : mov ecx, dword ptr [rbx + 0x30] ; mov r8d, eax ; call 0x20000141178
0x00000200004819ae : mov ecx, dword ptr [rbx + 0x328] ; call 0x2000014dc08
0x000002000038cdc9 : mov ecx, dword ptr [rbx + 0x3d0] ; xor r8d, r8d ; call rax
0x000002000066e6a3 : mov ecx, dword ptr [rbx + 0x40] ; call 0x2000004a8bd
0x000002000045ace1 : mov ecx, dword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x0000020000548bf8 : mov ecx, dword ptr [rbx + 0x60] ; call 0x20000294e25
0x000002000013f837 : mov ecx, dword ptr [rbx + 0xa0] ; call rax
0x00000200000af9e5 : mov ecx, dword ptr [rbx + 0xd8] ; mov dl, r12b ; call qword ptr [rax]
0x000002000012798c : mov ecx, dword ptr [rbx - 0x74b274bb] ; ret 0xd78b
0x000002000062f328 : mov ecx, dword ptr [rbx - 0xcfdbbc] ; ret 0xd03b
0x0000020000136ee0 : mov ecx, dword ptr [rbx - 8] ; call 0x200000931a5
0x00000200004856c4 : mov ecx, dword ptr [rbx] ; call 0x200000e19c0
0x00000200003b582a : mov ecx, dword ptr [rbx] ; call 0x200003b5ec1
0x000002000062a6e2 : mov ecx, dword ptr [rbx] ; call 0x20000460af1
0x000002000060f3d2 : mov ecx, dword ptr [rbx] ; call 0x2000060d441
0x00000200001e0342 : mov ecx, dword ptr [rbx] ; call rax
0x000002000051c6e6 : mov ecx, dword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200000e2c33 : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x200000e2c37 ; ret
0x000002000023332a : mov ecx, dword ptr [rcx + 0x14] ; cmp r8d, ecx ; jb 0x20000233315 ; ret
0x0000020000446444 : mov ecx, dword ptr [rcx + 0x20] ; call 0x20000068fd6
0x00000200000d8a17 : mov ecx, dword ptr [rcx + 0x28] ; jne 0x200000d8a64 ; call rdi
0x0000020000139621 : mov ecx, dword ptr [rcx + 0x28] ; jne 0x20000139649 ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200001d619e : mov ecx, dword ptr [rcx + 0x2988] ; call rax
0x000002000038d2b3 : mov ecx, dword ptr [rcx + 0x2e0] ; call rax
0x00000200004021a3 : mov ecx, dword ptr [rcx + 0x30] ; call 0x20000031496
0x000002000046f3e2 : mov ecx, dword ptr [rcx + 0xb8] ; call 0x2000009d471
0x000002000061ed12 : mov ecx, dword ptr [rcx + 2] ; mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x0000020000120f4d : mov ecx, dword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x000002000046fb45 : mov ecx, dword ptr [rcx + 8] ; call 0x2000009d46e
0x0000020000437f02 : mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200003a42e2 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001e07ad : mov ecx, dword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x0000020000123f2b : mov ecx, dword ptr [rcx + 8] ; mov rdi, r8 ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200002091e3 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x200002091e7 ; ret
0x0000020000666c1b : mov ecx, dword ptr [rcx + 8] ; xor edx, edx ; call 0x20000294e28
0x000002000050ba31 : mov ecx, dword ptr [rcx + 8] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000047962a : mov ecx, dword ptr [rcx] ; call 0x200000358d0
0x00000200004474f8 : mov ecx, dword ptr [rcx] ; call 0x200000690a5
0x00000200004a1084 : mov ecx, dword ptr [rcx] ; call 0x200000c6245
0x000002000022b96e : mov ecx, dword ptr [rcx] ; cmp r8, rcx ; jne 0x2000022b963 ; ret
0x000002000011b5d8 : mov ecx, dword ptr [rcx] ; inc edx ; jmp 0x2000011b5c9
0x00000200003850a9 : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000042d748 : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rcx ; ret
0x00000200001c28ff : mov ecx, dword ptr [rcx] ; test r9, r9 ; jne 0x200001c28e7 ; xor eax, eax ; ret
0x000002000071755a : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0x20000717550 ; ret
0x000002000040211e : mov ecx, dword ptr [rdi + 0x30] ; call 0x20000030f76
0x000002000038ddd6 : mov ecx, dword ptr [rdi + 0x3d0] ; call rax
0x00000200003c3032 : mov ecx, dword ptr [rdi + 0x48] ; call 0x2000049f281
0x00000200004538f1 : mov ecx, dword ptr [rdi + 0x88] ; call 0x2000007498d
0x00000200005947f5 : mov ecx, dword ptr [rdi + rcx*8] ; call 0x20000140abd
0x0000020000149777 : mov ecx, dword ptr [rdi] ; call 0x2000013d0f9
0x000002000067c9e1 : mov ecx, dword ptr [rdi] ; ret
0x00000200000ec240 : mov ecx, dword ptr [rdx + 0x18] ; mov rax, rdx ; jmp 0x200000ec233
0x00000200001d5c27 : mov ecx, dword ptr [rdx + 0x2988] ; mov r8, rbx ; call rdi
0x000002000012fddb : mov ecx, dword ptr [rdx + 0xc] ; cmp eax, ecx ; ja 0x2000012fdee ; sbb eax, eax ; ret
0x00000200003667cc : mov ecx, dword ptr [rdx + 8] ; mov rax, rdx ; jmp 0x200003667e0
0x00000200001d93cd : mov ecx, dword ptr [rdx + rax*8 + 8] ; xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x000002000066758d : mov ecx, dword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200000761f9 : mov ecx, dword ptr [rdx] ; mov rax, rdx ; jmp 0x20000076265
0x0000020000123045 : mov ecx, dword ptr [rip + 0x182bad] ; call rax
0x0000020000123031 : mov ecx, dword ptr [rip + 0x182bbd] ; call rax
0x0000020000446f5f : mov ecx, dword ptr [rip + 0x2632c3] ; call 0x20000070675
0x0000020000446f11 : mov ecx, dword ptr [rip + 0x263311] ; call 0x20000070675
0x00000200000ea1b0 : mov ecx, dword ptr [rip + 0x266e62] ; mov eax, ecx ; ret
0x00000200003fff12 : mov ecx, dword ptr [rip - 0x1207e8] ; call rax
0x0000020000486d13 : mov ecx, dword ptr [rip - 0x135c39] ; call r9
0x00000200004ab865 : mov ecx, dword ptr [rip - 0x15a78b] ; call r9
0x00000200004ae073 : mov ecx, dword ptr [rip - 0x15cf99] ; call r9
0x00000200004bb10a : mov ecx, dword ptr [rip - 0x16a030] ; call r9
0x00000200004da2eb : mov ecx, dword ptr [rip - 0x189211] ; call r9
0x00000200004a4974 : mov ecx, dword ptr [rip - 0x1c46aa] ; call 0x20000030c68
0x00000200004a4d2a : mov ecx, dword ptr [rip - 0x1c4a58] ; call 0x20000030f78
0x00000200004a5211 : mov ecx, dword ptr [rip - 0x1c4f3f] ; call 0x200000d1215
0x00000200004c2442 : mov ecx, dword ptr [rip - 0x1ed840] ; call 0x200000e3bf1
0x00000200005d4f4f : mov ecx, dword ptr [rip - 0x283e75] ; call r9
0x00000200005d7770 : mov ecx, dword ptr [rip - 0x286696] ; call r9
0x00000200005d8020 : mov ecx, dword ptr [rip - 0x286f46] ; call r9
0x00000200005dde5a : mov ecx, dword ptr [rip - 0x2fe730] ; call rax
0x00000200005b9fba : mov ecx, dword ptr [rip - 0x317120] ; call rax
0x0000020000668495 : mov ecx, dword ptr [rip - 0x3c65a3] ; call rax
0x000002000006c080 : mov ecx, dword ptr [rip - 0x48f10000] ; ret 0xf41
0x000002000066f844 : mov ecx, dword ptr [rsi + 0x10] ; mov byte ptr [rsp + 0x20], r14b ; call r15
0x000002000066e6fd : mov ecx, dword ptr [rsi + 0x10] ; xor edx, edx ; call 0x20000294e28
0x000002000066e68b : mov ecx, dword ptr [rsi + 0x18] ; mov rdx, rsi ; call 0x2000004a8c0
0x00000200001fe14c : mov ecx, dword ptr [rsi + 0x1d0] ; mov rdx, rdi ; call rax
0x0000020000365f5e : mov ecx, dword ptr [rsi + 0x28] ; call rax
0x000002000045321f : mov ecx, dword ptr [rsi + 0x88] ; call 0x2000007498d
0x000002000008f433 : mov ecx, dword ptr [rsi + 0xa0] ; mov edx, r14d ; call rax
0x000002000008f734 : mov ecx, dword ptr [rsi + 0xa0] ; mov edx, r15d ; call rax
0x00000200001911e2 : mov ecx, dword ptr [rsi + 0xb8] ; call 0x2000009d470
0x000002000046f8ce : mov ecx, dword ptr [rsi + 8] ; call 0x2000009d46e
0x00000200001e093a : mov ecx, dword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000045354b : mov ecx, dword ptr [rsi + 8] ; call rax
0x000002000067169e : mov ecx, dword ptr [rsi + 8] ; mov rdx, r15 ; call rax
0x0000020000561921 : mov ecx, dword ptr [rsi] ; call 0x2000014dc04
0x000002000066da25 : mov ecx, dword ptr [rsi] ; xor edx, edx ; call 0x20000294e27
0x0000020000168b7f : mov ecx, dword ptr [rsp + 0x150] ; call 0x20000294e29
0x00000200005f3995 : mov ecx, dword ptr [rsp + 0x20] ; call 0x200000bfc0e
0x0000020000479625 : mov ecx, dword ptr [rsp + 0x20] ; mov rcx, qword ptr [rcx] ; call 0x200000358d5
0x00000200004cbad9 : mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x0000020000666e4e : mov ecx, dword ptr [rsp + 0x30] ; call 0x20000294e27
0x00000200000fb647 : mov ecx, dword ptr [rsp + 0x30] ; mov dword ptr [rax + 4], ecx ; jmp 0x200000fb61a
0x0000020000648bbf : mov ecx, dword ptr [rsp + 0x30] ; xor edx, edx ; call 0x20000294e28
0x000002000072ab63 : mov ecx, dword ptr [rsp + 0x38] ; call qword ptr [rip - 0x3d999d]
0x00000200001d786a : mov ecx, dword ptr [rsp + 0x38] ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x0000020000446178 : mov ecx, dword ptr [rsp + 0x40] ; call 0x20000068fd7
0x000002000051fd80 : mov ecx, dword ptr [rsp + 0x40] ; call 0x2000014dc07
0x00000200005337fa : mov ecx, dword ptr [rsp + 0x40] ; call 0x2000015dcc3
0x0000020000486e9f : mov ecx, dword ptr [rsp + 0x40] ; call 0x200005d3162
0x000002000008cb8d : mov ecx, dword ptr [rsp + 0x40] ; xor rcx, rsp ; call 0x20000148e19
0x000002000058cd5d : mov ecx, dword ptr [rsp + 0x48] ; call 0x20000068fd6
0x00000200001f8bdf : mov ecx, dword ptr [rsp + 0x48] ; xor edx, edx ; call 0x20000294e28
0x000002000041e1c7 : mov ecx, dword ptr [rsp + 0x50] ; call 0x20000045497
0x00000200003f608c : mov ecx, dword ptr [rsp + 0x50] ; call 0x200003c2356
0x0000020000151d2c : mov ecx, dword ptr [rsp + 0x50] ; call rdx
0x00000200004397d2 : mov ecx, dword ptr [rsp + 0x50] ; mov ebx, eax ; call 0x20000068fd9
0x0000020000444734 : mov ecx, dword ptr [rsp + 0x50] ; mov qword ptr [rax], rcx ; jmp 0x20000444708
0x000002000044cb24 : mov ecx, dword ptr [rsp + 0x50] ; xor rcx, rsp ; call 0x20000148e19
0x00000200004a5eab : mov ecx, dword ptr [rsp + 0x60] ; call r15
0x00000200005619c2 : mov ecx, dword ptr [rsp + 0x68] ; mov ebx, eax ; call 0x2000014dc08
0x000002000039cdaf : mov ecx, dword ptr [rsp + 0x78] ; call 0x20000068fd6
0x0000020000446f6d : mov ecx, dword ptr [rsp + 0x78] ; call 0x20000068fd7
0x0000020000446ee6 : mov ecx, dword ptr [rsp + 0x78] ; mov ebx, eax ; call 0x20000068fd9
0x000002000009ba32 : mov ecx, dword ptr [rsp + 0x88] ; call rax
0x0000020000028a29 : mov ecx, dword ptr [rsp] ; mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x00000200005e165d : mov ecx, eax ; add rdx, rbx ; call 0x2000015d887
0x000002000043c58e : mov ecx, eax ; call 0x20000068fd5
0x000002000017606b : mov ecx, eax ; call 0x20000072298
0x00000200004d0032 : mov ecx, eax ; call 0x200000f5bf1
0x0000020000689254 : mov ecx, eax ; call 0x20000145494
0x0000020000537c15 : mov ecx, eax ; call 0x20000157d55
0x0000020000534af7 : mov ecx, eax ; call 0x2000015d885
0x0000020000533fc1 : mov ecx, eax ; call 0x2000015dbc5
0x0000020000724d6f : mov ecx, eax ; call 0x2000015dbc8
0x00000200001670ec : mov ecx, eax ; call 0x200002333ac
0x00000200006748bb : mov ecx, eax ; call 0x20000294e25
0x000002000063e553 : mov ecx, eax ; call 0x2000047a800
0x0000020000679379 : mov ecx, eax ; call r15
0x00000200005db13b : mov ecx, eax ; call r8
0x000002000047133b : mov ecx, eax ; call r9
0x000002000009604a : mov ecx, eax ; call rdx
0x0000020000132f37 : mov ecx, eax ; dec r9 ; jne 0x20000132f2b ; ret
0x0000020000402346 : mov ecx, eax ; inc edx ; jmp 0x20000402326
0x0000020000040f99 : mov ecx, eax ; jmp 0x20000040a53
0x000002000004740f : mov ecx, eax ; jmp 0x20000047240
0x000002000038cb1d : mov ecx, eax ; jmp 0x2000038cae7
0x0000020000115283 : mov ecx, eax ; jmp rdx
0x00000200000a36e9 : mov ecx, eax ; jne 0x200000a3704 ; mov eax, 1 ; ret
0x00000200000d6f43 : mov ecx, eax ; jne 0x200000d6f6c ; ret
0x00000200000e1852 : mov ecx, eax ; jne 0x200000e185b ; ret
0x000002000045f9e8 : mov ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200001d8581 : mov ecx, eax ; mov eax, ecx ; ret
0x000002000009d3f8 : mov ecx, eax ; mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200006ccbc6 : mov ecx, eax ; mov qword ptr [rbp + 0x60], rax ; call r10
0x00000200006d1708 : mov ecx, eax ; mov qword ptr [rsp + 0x58], rax ; call r10
0x00000200006d0dfb : mov ecx, eax ; mov qword ptr [rsp + 0x60], rax ; call r10
0x00000200003d2223 : mov ecx, eax ; mov r8, rdx ; mov dl, sil ; call r10
0x000002000064eb6a : mov ecx, eax ; mov r8d, 6 ; call rax
0x000002000040dd7d : mov ecx, eax ; mov r8d, eax ; call rsi
0x0000020000199414 : mov ecx, eax ; mov rax, qword ptr [rip + 0x1b80e3] ; call rax
0x00000200006535a7 : mov ecx, eax ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000009b5ea : mov ecx, eax ; mov rdx, rsi ; call 0x2000009782f
0x000002000068c7f0 : mov ecx, eax ; push rsi ; ret
0x000002000037e033 : mov ecx, eax ; test rdx, rdx ; jne 0x2000037e048 ; mov eax, r10d ; jmp 0x2000037e051
0x0000020000405031 : mov ecx, ebp ; call 0x20000031495
0x00000200001e7f80 : mov ecx, ebp ; call 0x20000038701
0x000002000043a57d : mov ecx, ebp ; call 0x20000063d99
0x000002000043a635 : mov ecx, ebp ; call 0x20000068fd5
0x000002000043b133 : mov ecx, ebp ; call 0x200000690a5
0x000002000048e36f : mov ecx, ebp ; call 0x2000006a614
0x000002000043afb3 : mov ecx, ebp ; call 0x2000006a615
0x0000020000443fb0 : mov ecx, ebp ; call 0x200000702b4
0x000002000044047a : mov ecx, ebp ; call 0x200000702b5
0x0000020000444081 : mov ecx, ebp ; call 0x20000070845
0x0000020000443b92 : mov ecx, ebp ; call 0x20000072299
0x00000200005fcd4c : mov ecx, ebp ; call 0x20000072650
0x000002000044a581 : mov ecx, ebp ; call 0x20000074ed1
0x00000200004e73ce : mov ecx, ebp ; call 0x200000a36bc
0x000002000048183d : mov ecx, ebp ; call 0x200000a52e5
0x000002000049b270 : mov ecx, ebp ; call 0x200000bc775
0x00000200004faf51 : mov ecx, ebp ; call 0x20000120f39
0x000002000051000c : mov ecx, ebp ; call 0x20000139811
0x000002000050fff8 : mov ecx, ebp ; call 0x20000139861
0x000002000050ffe4 : mov ecx, ebp ; call 0x200001398b1
0x000002000050ffd0 : mov ecx, ebp ; call 0x20000139901
0x0000020000512abf : mov ecx, ebp ; call 0x2000013a781
0x0000020000227c05 : mov ecx, ebp ; call 0x20000213e28
0x000002000021920d : mov ecx, ebp ; call 0x20000223e8c
0x0000020000190ca9 : mov ecx, ebp ; call 0x2000022cf34
0x00000200001f8bd7 : mov ecx, ebp ; call 0x20000294e24
0x00000200003b46a8 : mov ecx, ebp ; call 0x200003b49c8
0x00000200003d1fe1 : mov ecx, ebp ; call 0x200003be248
0x00000200005f3fd4 : mov ecx, ebp ; call 0x20000440210
0x00000200003958fe : mov ecx, ebp ; call qword ptr [r14]
0x00000200004c763a : mov ecx, ebp ; call qword ptr [rax + 0x20]
0x00000200003a8c97 : mov ecx, ebp ; call r10
0x00000200000e7233 : mov ecx, ebp ; call r12
0x00000200006652e7 : mov ecx, ebp ; call r15
0x00000200006d9323 : mov ecx, ebp ; call r9
0x00000200000c96f9 : mov ecx, ebp ; call rax
0x000002000044b148 : mov ecx, ebp ; call rsi
0x00000200005964b8 : mov ecx, ebp ; lea r8d, dword ptr [rdx + 5] ; call 0x200001c09e9
0x0000020000395a21 : mov ecx, ebp ; mov dword ptr [rbp - 0x38], ebx ; call qword ptr [r14]
0x0000020000400225 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ee4d0 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], esi ; call r15
0x000002000040034f : mov ecx, ebp ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x00000200005964f5 : mov ecx, ebp ; mov ebx, r9d ; call 0x200001c09e8
0x00000200003957c5 : mov ecx, ebp ; mov edx, ebx ; mov qword ptr [rbp + 0x70], rsi ; call qword ptr [rsi]
0x00000200005ccf35 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], rax ; call 0x200000691b9
0x0000020000665263 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], rax ; call 0x20000671481
0x000002000066b386 : mov ecx, ebp ; mov rdx, r12 ; call rax
0x0000020000443ba4 : mov ecx, ebp ; xor edx, edx ; call 0x200000702b7
0x000002000048cdb7 : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp 0x20000068fd9
0x000002000066c54e : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000064dc67 : mov ecx, ebx ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200003fcb88 : mov ecx, ebx ; call 0x20000027bc1
0x00000200006077d3 : mov ecx, ebx ; call 0x2000002b789
0x00000200003fd452 : mov ecx, ebx ; call 0x2000002c2f9
0x0000020000192000 : mov ecx, ebx ; call 0x2000002e2e4
0x0000020000403d80 : mov ecx, ebx ; call 0x20000030f75
0x0000020000403dd1 : mov ecx, ebx ; call 0x20000031495
0x00000200006eb24b : mov ecx, ebx ; call 0x20000035d79
0x000002000043a080 : mov ecx, ebx ; call 0x20000063d99
0x0000020000438427 : mov ecx, ebx ; call 0x20000063dd9
0x000002000043a0bd : mov ecx, ebx ; call 0x20000068fd5
0x000002000043b0b0 : mov ecx, ebx ; call 0x200000690a5
0x0000020000447d8a : mov ecx, ebx ; call 0x200000690e5
0x000002000043b3d4 : mov ecx, ebx ; call 0x2000006a615
0x00000200005ece60 : mov ecx, ebx ; call 0x2000006fe29
0x00000200001c3ff1 : mov ecx, ebx ; call 0x200000702b4
0x00000200004417c5 : mov ecx, ebx ; call 0x200000702b5
0x00000200004463d8 : mov ecx, ebx ; call 0x20000070845
0x00000200003d5a6a : mov ecx, ebx ; call 0x20000073895
0x00000200003e505b : mov ecx, ebx ; call 0x2000008221c
0x00000200001eb26c : mov ecx, ebx ; call 0x2000008756c
0x00000200001b9f44 : mov ecx, ebx ; call 0x2000009c101
0x0000020000473db1 : mov ecx, ebx ; call 0x2000009d46d
0x00000200001e80bc : mov ecx, ebx ; call 0x200000a4304
0x00000200003c91c6 : mov ecx, ebx ; call 0x200000b9760
0x00000200000b9fb6 : mov ecx, ebx ; call 0x200000b9ff9
0x000002000049293c : mov ecx, ebx ; call 0x200000bc6c9
0x000002000064046f : mov ecx, ebx ; call 0x200000bc774
0x00000200000c4bd9 : mov ecx, ebx ; call 0x200000c5b09
0x000002000009a351 : mov ecx, ebx ; call 0x200000c889d
0x00000200001674e7 : mov ecx, ebx ; call 0x200000c94e0
0x000002000050a479 : mov ecx, ebx ; call 0x200001017cd
0x00000200001ebce3 : mov ecx, ebx ; call 0x20000105bfd
0x00000200004e7e1c : mov ecx, ebx ; call 0x20000114979
0x00000200004f5d66 : mov ecx, ebx ; call 0x2000011d889
0x0000020000128f10 : mov ecx, ebx ; call 0x20000128fa1
0x00000200001321df : mov ecx, ebx ; call 0x2000012e490
0x0000020000514e45 : mov ecx, ebx ; call 0x2000013b6bd
0x0000020000067c3c : mov ecx, ebx ; call 0x20000153ec4
0x00000200005381fb : mov ecx, ebx ; call 0x2000015d885
0x0000020000532b82 : mov ecx, ebx ; call 0x2000015dcfd
0x000002000019ce07 : mov ecx, ebx ; call 0x200001d90e0
0x00000200000ea7ec : mov ecx, ebx ; call 0x200001d90e4
0x00000200000dcef4 : mov ecx, ebx ; call 0x200001d9190
0x00000200005d95f9 : mov ecx, ebx ; call 0x20000208a41
0x0000020000117ddf : mov ecx, ebx ; call 0x20000294004
0x00000200005f8b92 : mov ecx, ebx ; call 0x20000294e24
0x0000020000668b08 : mov ecx, ebx ; call 0x20000294e25
0x0000020000635f88 : mov ecx, ebx ; call 0x20000294e28
0x00000200003a43db : mov ecx, ebx ; call 0x200003a0668
0x0000020000497d14 : mov ecx, ebx ; call 0x200003f3a61
0x000002000040957e : mov ecx, ebx ; call 0x200004095b5
0x00000200004f86fa : mov ecx, ebx ; call 0x200004149a8
0x00000200005ba357 : mov ecx, ebx ; call 0x200004265bc
0x00000200005ba4e1 : mov ecx, ebx ; call 0x2000042670c
0x0000020000604a30 : mov ecx, ebx ; call 0x2000045e0b9
0x00000200000e4106 : mov ecx, ebx ; call 0x20000470388
0x00000200004736ef : mov ecx, ebx ; call 0x20000473715
0x00000200001c159b : mov ecx, ebx ; call 0x200005cd7cc
0x00000200001cef0e : mov ecx, ebx ; call 0x2000060e2e0
0x0000020000666736 : mov ecx, ebx ; call 0x200006792c8
0x00000200001c1d1e : mov ecx, ebx ; call r10
0x00000200004bd6d5 : mov ecx, ebx ; call r11
0x00000200006d9347 : mov ecx, ebx ; call r12
0x00000200001413e1 : mov ecx, ebx ; call r14
0x00000200003b193e : mov ecx, ebx ; call r15
0x00000200000ef8bd : mov ecx, ebx ; call rax
0x0000020000727f03 : mov ecx, ebx ; call rbx
0x00000200001ddcd8 : mov ecx, ebx ; call rdi
0x00000200006e009a : mov ecx, ebx ; call rdx
0x00000200004aaaf6 : mov ecx, ebx ; call rsi
0x00000200000966fd : mov ecx, ebx ; je 0x2000009677f ; call rax
0x0000020000412758 : mov ecx, ebx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001fbcd5 : mov ecx, ebx ; mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000ca995 : mov ecx, ebx ; mov eax, r11d ; pop rdi ; ret
0x00000200006890d6 : mov ecx, ebx ; mov edx, 0xa0 ; call 0x20000145351
0x00000200004926d9 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200003ff401 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004c6fed : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000594569 : mov ecx, ebx ; mov qword ptr [rsp + 0x30], rdi ; call rax
0x000002000018ec84 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1c2903] ; call rax
0x0000020000129ff1 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x227506] ; call rax
0x0000020000129f76 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x227581] ; call rax
0x00000200000b4cd0 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x29c8b7] ; call rax
0x00000200004b3ec9 : mov ecx, ebx ; mov rax, qword ptr [rip - 0x205aaa] ; call rax
0x0000020000672d19 : mov ecx, ebx ; mov rcx, r14 ; call rax
0x000002000067d59f : mov ecx, ebx ; mov rsi, rax ; call qword ptr [rdi]
0x000002000002a106 : mov ecx, ebx ; xor r12d, r12d ; call rsi
0x0000020000440608 : mov ecx, ecx ; call 0x2000006fe25
0x000002000050f61e : mov ecx, ecx ; call 0x20000139675
0x0000020000516447 : mov ecx, ecx ; call 0x2000013c0e5
0x00000200005333c2 : mov ecx, ecx ; call 0x2000015d885
0x0000020000666e0e : mov ecx, ecx ; call 0x20000294005
0x000002000048e86f : mov ecx, ecx ; call 0x200003cab14
0x00000200006c7281 : mov ecx, ecx ; call rdx
0x000002000009fab6 : mov ecx, ecx ; cmp qword ptr [r8 + 0x50], rcx ; je 0x2000009fac7 ; ret
0x00000200003683b7 : mov ecx, ecx ; je 0x200003683c5 ; mov al, r10b ; ret
0x00000200003683b7 : mov ecx, ecx ; je 0x200003683c6 ; mov al, r10b ; ret
0x00000200004d4f4c : mov ecx, ecx ; jne 0x200004d4f59 ; mov al, 1 ; ret
0x000002000066de31 : mov ecx, ecx ; test r8d, r8d ; jne 0x2000066de44 ; xor eax, eax ; ret
0x00000200005f0a61 : mov ecx, ecx ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200005323ba : mov ecx, edi ; add r8, r8 ; call 0x2000015d888
0x00000200004f708f : mov ecx, edi ; add rsi, rax ; call 0x20000120f3c
0x00000200003fd632 : mov ecx, edi ; call 0x20000027bc1
0x000002000040ca45 : mov ecx, edi ; call 0x20000030f75
0x000002000040cb13 : mov ecx, edi ; call 0x20000031495
0x0000020000421141 : mov ecx, edi ; call 0x20000043cd9
0x000002000059ba51 : mov ecx, edi ; call 0x20000047c74
0x00000200000f33db : mov ecx, edi ; call 0x2000004b834
0x0000020000439359 : mov ecx, edi ; call 0x20000063d99
0x00000200003bccd8 : mov ecx, edi ; call 0x20000068fd4
0x000002000043931b : mov ecx, edi ; call 0x20000068fd5
0x0000020000442a63 : mov ecx, edi ; call 0x200000690a5
0x00000200003ece74 : mov ecx, edi ; call 0x200000690e4
0x000002000045e396 : mov ecx, edi ; call 0x2000006a614
0x000002000043a679 : mov ecx, edi ; call 0x2000006a615
0x0000020000573fe8 : mov ecx, edi ; call 0x200000702b4
0x00000200004441b5 : mov ecx, edi ; call 0x200000702b5
0x0000020000114633 : mov ecx, edi ; call 0x20000070844
0x00000200004444eb : mov ecx, edi ; call 0x20000070845
0x00000200000b27a3 : mov ecx, edi ; call 0x20000070848
0x000002000044cd55 : mov ecx, edi ; call 0x20000072645
0x00000200003d668d : mov ecx, edi ; call 0x20000072908
0x000002000045f69f : mov ecx, edi ; call 0x2000008a165
0x000002000060d4bc : mov ecx, edi ; call 0x200000b9778
0x000002000048f116 : mov ecx, edi ; call 0x200000bc6c9
0x0000020000489e8e : mov ecx, edi ; call 0x200000bc778
0x00000200001a55e1 : mov ecx, edi ; call 0x200000c18e8
0x00000200000d8cbb : mov ecx, edi ; call 0x200000d89bc
0x00000200000dc778 : mov ecx, edi ; call 0x200000d9dec
0x00000200004b9bf0 : mov ecx, edi ; call 0x200000e19c1
0x00000200004b56b9 : mov ecx, edi ; call 0x200000e1c0d
0x000002000062299b : mov ecx, edi ; call 0x200000f4559
0x00000200000780c9 : mov ecx, edi ; call 0x20000114398
0x00000200004fa0bf : mov ecx, edi ; call 0x20000120f39
0x000002000013335b : mov ecx, edi ; call 0x200001332b8
0x000002000051010d : mov ecx, edi ; call 0x2000013971d
0x000002000053307a : mov ecx, edi ; call 0x2000015dcc1
0x0000020000198cfc : mov ecx, edi ; call 0x200001c4fd4
0x000002000019ce36 : mov ecx, edi ; call 0x200001d90e0
0x000002000019cec8 : mov ecx, edi ; call 0x200001d9190
0x0000020000224431 : mov ecx, edi ; call 0x20000224159
0x00000200006674be : mov ecx, edi ; call 0x20000294e25
0x00000200003c8fb1 : mov ecx, edi ; call 0x20000387c7c
0x00000200004a6b72 : mov ecx, edi ; call 0x200003b2e64
0x000002000055d3c0 : mov ecx, edi ; call 0x20000409638
0x00000200005c5bf8 : mov ecx, edi ; call 0x20000431ecc
0x000002000043f60d : mov ecx, edi ; call 0x2000043f464
0x00000200000d21e7 : mov ecx, edi ; call 0x2000044cb50
0x00000200004fdfdc : mov ecx, edi ; call 0x2000045a2d0
0x00000200005f3bb6 : mov ecx, edi ; call 0x2000050fe64
0x00000200005c9672 : mov ecx, edi ; call 0x200005c9924
0x0000020000546f49 : mov ecx, edi ; call 0x200005d3160
0x000002000066cb4d : mov ecx, edi ; call 0x2000066a6e1
0x0000020000665f11 : mov ecx, edi ; call 0x20000670674
0x00000200005005bc : mov ecx, edi ; call qword ptr [rax]
0x000002000036554d : mov ecx, edi ; call qword ptr [rip - 0xc3ded]
0x00000200004be412 : mov ecx, edi ; call r10
0x00000200000a6c81 : mov ecx, edi ; call r12
0x00000200000b58a2 : mov ecx, edi ; call r14
0x0000020000141584 : mov ecx, edi ; call r15
0x000002000021b147 : mov ecx, edi ; call r9
0x00000200000bbb6f : mov ecx, edi ; call rax
0x000002000010af39 : mov ecx, edi ; call rbx
0x000002000010b202 : mov ecx, edi ; call rsi
0x00000200004c7fc3 : mov ecx, edi ; jmp 0x200004c7e0e
0x00000200006f5318 : mov ecx, edi ; jmp 0x200007215e6
0x00000200005a8058 : mov ecx, edi ; lea edx, dword ptr [r9 - 3] ; call 0x200001ca109
0x0000020000564714 : mov ecx, edi ; lea r8d, dword ptr [rdx + 6] ; call 0x200001c09e8
0x000002000009db18 : mov ecx, edi ; mov bl, al ; call rsi
0x00000200001ab5c9 : mov ecx, edi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200005086bb : mov ecx, edi ; mov dword ptr [r11 - 0x18], r8d ; call 0x20000138065
0x000002000042169f : mov ecx, edi ; mov dword ptr [rdi + 0x30], ebx ; call 0x20000043cdc
0x0000020000467851 : mov ecx, edi ; mov dword ptr [rsp + 0x20], esi ; call r14
0x0000020000649586 : mov ecx, edi ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000469d25 : mov ecx, edi ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200004bbc7b : mov ecx, edi ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x000002000046c114 : mov ecx, edi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x00000200000e3dab : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000055dc67 : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000050ce12 : mov ecx, edi ; mov r8, rdi ; call 0x20000138ba8
0x0000020000614f5c : mov ecx, edi ; mov r8d, r14d ; call 0x20000141177
0x000002000040dd7a : mov ecx, edi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x00000200001cdf15 : mov ecx, edi ; mov rax, qword ptr [rip + 0x1835e2] ; call rax
0x00000200000fd906 : mov ecx, edi ; mov rax, qword ptr [rip + 0x253bf1] ; call rax
0x00000200000d9b48 : mov ecx, edi ; mov rax, qword ptr [rip + 0x2779af] ; call rax
0x00000200000d9abc : mov ecx, edi ; mov rax, qword ptr [rip + 0x277a3b] ; call rax
0x00000200001d0691 : mov ecx, edi ; mov rax, qword ptr [rip + 0xd2976] ; call rax
0x000002000066b383 : mov ecx, edi ; mov rcx, r13 ; mov rdx, r12 ; call rax
0x00000200004bba01 : mov ecx, edi ; mov rdx, r12 ; call rdi
0x00000200001e9b64 : mov ecx, edi ; mov rdx, rax ; call qword ptr [rdi]
0x000002000066c09e : mov ecx, edi ; mov rsi, rax ; call rbx
0x0000020000218039 : mov ecx, edi ; mov word ptr [rbp - 0x3d], ax ; call r9
0x00000200004015a1 : mov ecx, edi ; mov word ptr [rsi + 2], ax ; call 0x2000015d888
0x0000020000447d77 : mov ecx, edx ; call 0x20000068fd5
0x00000200003d3306 : mov ecx, edx ; call 0x2000007290c
0x00000200004536e8 : mov ecx, edx ; call 0x2000007dff5
0x000002000064fe4b : mov ecx, edx ; call 0x2000014dc08
0x000002000022ffe1 : mov ecx, edx ; call 0x2000022fd38
0x0000020000423e7d : mov ecx, edx ; call 0x20000520184
0x0000020000162c84 : mov ecx, edx ; call r10
0x0000020000538006 : mov ecx, edx ; call r8
0x000002000008cb33 : mov ecx, edx ; call r9
0x00000200004a6a40 : mov ecx, edx ; call rax
0x00000200006e4fc6 : mov ecx, edx ; call rbx
0x0000020000437124 : mov ecx, edx ; je 0x20000437135 ; add rsp, 0x28 ; ret
0x00000200006e9e59 : mov ecx, edx ; jmp rcx
0x000002000010c2ab : mov ecx, edx ; mov dword ptr [r8 + 0x30], ebx ; call r9
0x000002000066f93d : mov ecx, edx ; mov qword ptr [rcx + r9], rax ; ret
0x00000200000423bc : mov ecx, edx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000070aaae : mov ecx, edx ; mov rax, r9 ; ret
0x000002000015d2b6 : mov ecx, edx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x000002000039793f : mov ecx, es ; call 0x20069fbac54
0x00000200001e3f0f : mov ecx, esi ; call 0x20000030174
0x000002000040d068 : mov ecx, esi ; call 0x20000030c65
0x0000020000405570 : mov ecx, esi ; call 0x20000031495
0x000002000051355a : mov ecx, esi ; call 0x20000033a6a
0x000002000036e94d : mov ecx, esi ; call 0x2000003c8e9
0x0000020000439340 : mov ecx, esi ; call 0x20000063d99
0x000002000043a93d : mov ecx, esi ; call 0x20000063dd9
0x000002000053cdc3 : mov ecx, esi ; call 0x20000068fd4
0x000002000043930e : mov ecx, esi ; call 0x20000068fd5
0x000002000056f558 : mov ecx, esi ; call 0x20000068fd8
0x000002000003ce1f : mov ecx, esi ; call 0x200000690a4
0x00000200004486a7 : mov ecx, esi ; call 0x200000690e5
0x000002000048e385 : mov ecx, esi ; call 0x2000006a614
0x000002000043a80b : mov ecx, esi ; call 0x2000006a615
0x00000200004109d9 : mov ecx, esi ; call 0x2000006a618
0x0000020000442a23 : mov ecx, esi ; call 0x200000702b5
0x00000200004a4627 : mov ecx, esi ; call 0x20000070844
0x0000020000071bc6 : mov ecx, esi ; call 0x2000007229c
0x0000020000492264 : mov ecx, esi ; call 0x2000007290c
0x0000020000219364 : mov ecx, esi ; call 0x2000009565c
0x00000200001e70ad : mov ecx, esi ; call 0x200000b332c
0x00000200001df910 : mov ecx, esi ; call 0x200000bbb90
0x00000200000d89a6 : mov ecx, esi ; call 0x200000bc6cc
0x000002000048e3f1 : mov ecx, esi ; call 0x200000bc775
0x00000200003b78fe : mov ecx, esi ; call 0x200000bc778
0x0000020000492343 : mov ecx, esi ; call 0x200000bef01
0x00000200005f398d : mov ecx, esi ; call 0x200000bfc7c
0x00000200000dbb42 : mov ecx, esi ; call 0x200000d7dcc
0x000002000045c8ab : mov ecx, esi ; call 0x200000df1ad
0x00000200005d6454 : mov ecx, esi ; call 0x200000ed87c
0x00000200002361e4 : mov ecx, esi ; call 0x200001332b8
0x000002000050c769 : mov ecx, esi ; call 0x20000138ac9
0x0000020000512c94 : mov ecx, esi ; call 0x2000013a671
0x0000020000512ff0 : mov ecx, esi ; call 0x2000013a8b1
0x00000200005141db : mov ecx, esi ; call 0x2000013acdd
0x000002000011d365 : mov ecx, esi ; call 0x20000157d59
0x00000200001815d4 : mov ecx, esi ; call 0x2000015d884
0x00000200007293d4 : mov ecx, esi ; call 0x2000015dbc8
0x0000020000198db0 : mov ecx, esi ; call 0x200001c4fd4
0x000002000059e4b1 : mov ecx, esi ; call 0x200001ccfa5
0x0000020000220ecc : mov ecx, esi ; call 0x2000021f500
0x0000020000170c78 : mov ecx, esi ; call 0x2000022cf34
0x0000020000207138 : mov ecx, esi ; call 0x200002333ac
0x0000020000168b46 : mov ecx, esi ; call 0x20000294e24
0x00000200006674b0 : mov ecx, esi ; call 0x20000294e25
0x00000200003e49fb : mov ecx, esi ; call 0x20000294e28
0x0000020000567429 : mov ecx, esi ; call 0x2000039b778
0x000002000054b848 : mov ecx, esi ; call 0x200003d2f08
0x00000200000d1fad : mov ecx, esi ; call 0x2000044cb50
0x00000200003de55f : mov ecx, esi ; call 0x2000047a824
0x00000200006f1846 : mov ecx, esi ; call 0x200004dda80
0x00000200006821e8 : mov ecx, esi ; call 0x20000670674
0x00000200000b4400 : mov ecx, esi ; call qword ptr [rbx]
0x000002000019e8a4 : mov ecx, esi ; call r10
0x0000020000364eea : mov ecx, esi ; call r11
0x00000200003caf42 : mov ecx, esi ; call r12
0x000002000014138d : mov ecx, esi ; call r14
0x00000200000e865f : mov ecx, esi ; call r15
0x0000020000214d9a : mov ecx, esi ; call r9
0x00000200000d8c55 : mov ecx, esi ; call rax
0x000002000003d3c9 : mov ecx, esi ; call rbx
0x000002000003cc1e : mov ecx, esi ; call rdi
0x00000200003fc741 : mov ecx, esi ; call rdx
0x00000200003b12b1 : mov ecx, esi ; jmp 0x200003b11a5
0x0000020000421884 : mov ecx, esi ; mov dword ptr [rsi + 0x30], ebx ; call 0x20000043cdc
0x000002000064b10a : mov ecx, esi ; mov dword ptr [rsp + 0x40], r14d ; call rax
0x00000200005f22d7 : mov ecx, esi ; mov ebx, eax ; call 0x2000051e58a
0x0000020000614e8e : mov ecx, esi ; mov edi, r15d ; call 0x20000141177
0x000002000043c2ae : mov ecx, esi ; mov qword ptr [rbp - 0x70], r14 ; call 0x200000690a9
0x0000020000499e6f : mov ecx, esi ; mov qword ptr [rsp + 0x20], r12 ; call qword ptr [rsi]
0x00000200005b9896 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call 0x200005d5b79
0x0000020000619cca : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x0000020000499d3b : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x00000200003f9565 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000045f79a : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r12
0x0000020000672dc1 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x000002000041ad14 : mov ecx, esi ; mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x00000200001e49e0 : mov ecx, esi ; mov r12d, eax ; call 0x200000c0c1b
0x00000200000c73f6 : mov ecx, esi ; mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200001c3556 : mov ecx, esi ; mov rax, qword ptr [rip + 0x18dfa1] ; call rax
0x00000200001c344b : mov ecx, esi ; mov rax, qword ptr [rip + 0x18e0ac] ; call rax
0x00000200001c31b8 : mov ecx, esi ; mov rax, qword ptr [rip + 0x18e33f] ; call rax
0x00000200001c30d9 : mov ecx, esi ; mov rax, qword ptr [rip + 0x18e41e] ; call rax
0x00000200001c2f1b : mov ecx, esi ; mov rax, qword ptr [rip + 0x18e5dc] ; call rax
0x0000020000196b62 : mov ecx, esi ; mov rax, qword ptr [rip + 0x1ba8c5] ; call rax
0x00000200000fda80 : mov ecx, esi ; mov rax, qword ptr [rip + 0x253a77] ; call rax
0x00000200000dca0e : mov ecx, esi ; mov rax, qword ptr [rip + 0x274ae9] ; call rax
0x00000200000dc797 : mov ecx, esi ; mov rax, qword ptr [rip + 0x274d60] ; call rax
0x00000200000d9cf6 : mov ecx, esi ; mov rax, qword ptr [rip + 0x277801] ; call rax
0x00000200000d9993 : mov ecx, esi ; mov rax, qword ptr [rip + 0x277b64] ; call rax
0x00000200000d98eb : mov ecx, esi ; mov rax, qword ptr [rip + 0x277c0c] ; call rax
0x00000200000d98d2 : mov ecx, esi ; mov rax, qword ptr [rip + 0x277c25] ; call rax
0x00000200000d97f5 : mov ecx, esi ; mov rax, qword ptr [rip + 0x277d02] ; call rax
0x00000200000cf661 : mov ecx, esi ; mov rax, qword ptr [rip + 0x281dc6] ; call rax
0x00000200000cf253 : mov ecx, esi ; mov rax, qword ptr [rip + 0x2821d4] ; call rax
0x00000200001d0c33 : mov ecx, esi ; mov rax, qword ptr [rip + 0xd23dc] ; call rax
0x000002000066bd56 : mov ecx, esi ; mov rbp, rax ; call rbx
0x000002000064ad7d : mov ecx, esi ; mov rdx, r12 ; call rsi
0x000002000066d913 : mov ecx, esi ; shl rdx, 0xc ; call 0x20000294009
0x00000200004465a5 : mov ecx, esi ; xor edx, edx ; call 0x200000702b7
0x00000200005fd295 : mov ecx, esp ; call 0x2000004bdb8
0x000002000043b852 : mov ecx, esp ; call 0x2000006a615
0x0000020000443cb3 : mov ecx, esp ; call 0x200000702b5
0x0000020000443f51 : mov ecx, esp ; call 0x20000070845
0x00000200004801ad : mov ecx, esp ; call 0x200000a52e5
0x00000200004272bf : mov ecx, esp ; call 0x20000294e28
0x00000200006c7dab : mov ecx, esp ; call r10
0x0000020000141350 : mov ecx, esp ; call r14
0x00000200001a6e5c : mov ecx, esp ; call r15
0x00000200006d5f74 : mov ecx, esp ; call r9
0x000002000064f680 : mov ecx, esp ; call rax
0x0000020000204d44 : mov ecx, esp ; jmp 0x20000204d7e
0x0000020000688543 : mov ecx, esp ; jmp qword ptr [rcx]
0x000002000066beb4 : mov ecx, esp ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000040cf5c : mov ecx, esp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000709a9f : mov ecx, fs ; ret 1
0x00000200004032e8 : mov ecx, gs ; or eax, 0xbbb800 ; add al, al ; ret
0x000002000006160f : mov ecx, gs ; ret
0x00000200005f398c : mov ecx, r14d ; call 0x200000bfc7d
0x0000020000198daf : mov ecx, r14d ; call 0x200001c4fd5
0x00000200006f1845 : mov ecx, r14d ; call 0x200004dda81
0x0000020000402345 : mov ecx, r8d ; inc edx ; jmp 0x20000402327
0x000002000009b5e9 : mov ecx, r8d ; mov rdx, rsi ; call 0x20000097830
0x0000020000666e0d : mov ecx, r9d ; call 0x20000294006
0x0000020000666e0c : mov ecx, r9d ; call 0x20000294007
0x00000200001c536f : mov edi, 0x1890018 ; xor eax, eax ; ret
0x00000200006171b1 : mov edi, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x00000200003d686a : mov edi, 0x1baffc9 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x850f
0x000002000025d240 : mov edi, 0x30004662 ; ret 0x25
0x000002000012d4d7 : mov edi, 0x38c48348 ; ret
0x0000020000192011 : mov edi, 0x45fff305 ; xor eax, eax ; jmp 0x200000be283
0x000002000000f20f : mov edi, 0x46bcb1d7 ; ret
0x00000200004f6af9 : mov edi, 0x4800000e ; add esp, 0x38 ; ret
0x00000200006310ff : mov edi, 0x4890ffa8 ; add esp, 0x20 ; pop rbp ; ret
0x000002000048d2f5 : mov edi, 0x48c033ff ; add esp, 0x38 ; ret
0x00000200005d101b : mov edi, 0x48c033ff ; add esp, 0x58 ; ret
0x00000200005d0fc5 : mov edi, 0x48c38bff ; add esp, 0x40 ; pop rbx ; ret
0x0000020000631b29 : mov edi, 0x48ffea92 ; add esp, 0x38 ; ret
0x00000200004c8e31 : mov edi, 0x48fff988 ; add esp, 0x48 ; ret
0x00000200004d78b1 : mov edi, 0x48fffc8b ; add esp, 0x38 ; ret
0x0000020000679280 : mov edi, 0x58b35eb ; jae 0x2000067921a ; ret 0x85ff
0x00000200001d935f : mov edi, 0x7cc23bc0 ; jmp 0x1ffc41d5bf5
0x000002000051dd19 : mov edi, 0x8b00096e ; ret
0x00000200004b70d1 : mov edi, 0x8b000dc0 ; ret
0x000002000060c950 : mov edi, 0x8b02ebff ; ret
0x000002000040ac86 : mov edi, 0x8b068941 ; ret
0x00000200001479a3 : mov edi, 0x8b4492eb ; ret 0x8b44
0x000002000003d776 : mov edi, 0x8b4dffff ; ret
0x00000200005ded5d : mov edi, 0x8bffcb60 ; ret
0x000002000039e80d : mov edi, 0x8bffcca7 ; ret
0x0000020000679945 : mov edi, 0x8bfffffe ; ret
0x0000020000596cf9 : mov edi, 0x90ffa90e ; jmp 0x200004c2fb3
0x000002000016a6fb : mov edi, 0xa8868948 ; add byte ptr [rax], al ; add cl, ch ; call rsi
0x0000020000653c01 : mov edi, 0xab458966 ; call 0x2000006fe27
0x00000200002364cc : mov edi, 0xaf0f4906 ; ret 0x9948
0x000002000013f038 : mov edi, 0xb60f0007 ; ret
0x00000200001228b2 : mov edi, 0xb60f0008 ; ret
0x00000200001851c8 : mov edi, 0xb70ffff0 ; ret 0x394d
0x0000020000184da4 : mov edi, 0xb8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000068e45d : mov edi, 0xc000000d ; jmp 0x2000068a68c
0x00000200005b49e0 : mov edi, 0xc0000023 ; jmp 0x2000051d613
0x0000020000587bad : mov edi, 0xc000009a ; jmp 0x20000493e25
0x000002000068e453 : mov edi, 0xc00000bb ; jmp 0x2000068a68c
0x00000200004318a0 : mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000641057 : mov edi, 0xc48348ff ; push rax ; pop rbx ; ret
0x0000020000470335 : mov edi, 0xe8ffe3e5 ; loop 0x200004702c6 ; ret
0x0000020000134116 : mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000134128 : mov edi, 0xf490a42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013413a : mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013414c : mov edi, 0xf491242 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000134168 : mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x00000200004b3db5 : mov edi, 0xf6000001 ; ret 0xf30
0x00000200003b57f0 : mov edi, 0xf6ff3345 ; ret
0x00000200004f2ee8 : mov edi, 0xffc7558b ; ret 0x5589
0x00000200001a26d7 : mov edi, 0xfffff5c6 ; ret
0x0000020000180f5b : mov edi, 3 ; jmp 0x2000008182f
0x00000200006779aa : mov edi, dr1 ; inc dword ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x000002000065cd46 : mov edi, dword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000214313 : mov edi, dword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200004a590c : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x000002000008a2ab : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000384911 : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200000c021d : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f8d64 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x00000200000bf295 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x000002000008fa4b : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000008f4f4 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000044447d : mov edi, dword ptr [rcx + 0x10] ; mov rdx, rbx ; call 0x200004e06e0
0x00000200001f92c5 : mov edi, dword ptr [rsi + rax - 0x45f80000] ; ret 0
0x000002000008a5b9 : mov edi, dword ptr [rsp + 0x10] ; mov al, r9b ; ret
0x00000200000d7da3 : mov edi, dword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000014c50d : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [r9], r11d ; mov eax, r10d ; ret
0x0000020000486503 : mov edi, dword ptr [rsp + 0x10] ; mov eax, 0xc0000017 ; ret
0x000002000041070b : mov edi, dword ptr [rsp + 0x10] ; mov eax, ecx ; ret
0x000002000020aabf : mov edi, dword ptr [rsp + 0x10] ; mov eax, r10d ; ret
0x00000200000b43bb : mov edi, dword ptr [rsp + 0x10] ; mov eax, r11d ; ret
0x00000200000d02a7 : mov edi, dword ptr [rsp + 0x10] ; mov eax, r9d ; ret
0x00000200004b2d3e : mov edi, dword ptr [rsp + 0x10] ; mov rax, r10 ; ret
0x0000020000710e2f : mov edi, dword ptr [rsp + 0x10] ; mov rax, r11 ; ret
0x00000200000c097f : mov edi, dword ptr [rsp + 0x10] ; mov rax, r9 ; ret
0x00000200000355d7 : mov edi, dword ptr [rsp + 0x10] ; mov rax, rdx ; ret
0x00000200000295fe : mov edi, dword ptr [rsp + 0x10] ; ret
0x00000200000ebbea : mov edi, dword ptr [rsp + 0x10] ; xor eax, eax ; ret
0x0000020000200061 : mov edi, dword ptr [rsp + 0x18] ; mov al, r10b ; ret
0x00000200000fc717 : mov edi, dword ptr [rsp + 0x18] ; mov al, r9b ; ret
0x00000200004e1336 : mov edi, dword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000046e630 : mov edi, dword ptr [rsp + 0x18] ; mov eax, edx ; ret
0x00000200001370a4 : mov edi, dword ptr [rsp + 0x18] ; mov eax, r10d ; ret
0x000002000020b703 : mov edi, dword ptr [rsp + 0x18] ; mov eax, r11d ; ret
0x00000200001fee0f : mov edi, dword ptr [rsp + 0x18] ; mov eax, r8d ; ret
0x00000200003d8cb4 : mov edi, dword ptr [rsp + 0x18] ; mov eax, r9d ; ret
0x0000020000125671 : mov edi, dword ptr [rsp + 0x18] ; mov r14, qword ptr [rsp + 0x20] ; ret
0x00000200000959d3 : mov edi, dword ptr [rsp + 0x18] ; ret
0x00000200000585cd : mov edi, dword ptr [rsp + 0x20] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e4c3e : mov edi, dword ptr [rsp + 0x20] ; mov eax, r9d ; ret
0x0000020000642134 : mov edi, dword ptr [rsp + 0x20] ; mov rax, r10 ; ret
0x000002000072c1d7 : mov edi, dword ptr [rsp + 0x20] ; movzx eax, r8w ; ret
0x0000020000100b51 : mov edi, dword ptr [rsp + 0x20] ; ret
0x000002000008eab2 : mov edi, dword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200004e6309 : mov edi, dword ptr [rsp + 0x28] ; pop r15 ; ret
0x0000020000459a78 : mov edi, dword ptr [rsp + 0x28] ; xor eax, eax ; pop r14 ; ret
0x000002000006a792 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000020000063001 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000085aa1 : mov edi, dword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x00000200004db5ca : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000376962 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rcx ; ret
0x000002000049a331 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005b9d51 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000677946 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rcx ; ret
0x00000200004b3e7b : mov edi, dword ptr [rsp + 0x48] ; jmp 0x200004b3edd
0x00000200006cf206 : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000295a55 : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000091226 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rcx ; ret
0x00000200004d93f2 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000038e9ad : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000705681 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000021f4b6 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000711a66 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000b9ee7 : mov edi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000465468 : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000128042 : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001420d6 : mov edi, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000012f582 : mov edi, dword ptr [rsp + 8] ; ret
0x0000020000141305 : mov edi, dword ptr [rsp + rbp*8 + 0x220] ; jmp 0x200001412d8
0x0000020000408c27 : mov edi, eax ; call 0x20000031495
0x00000200004413e2 : mov edi, eax ; call 0x20000068fd5
0x0000020000611218 : mov edi, eax ; call 0x20000068fd8
0x0000020000676e86 : mov edi, eax ; call qword ptr [rip - 0x3d4f86]
0x00000200005064c4 : mov edi, eax ; call r15
0x0000020000025c1c : mov edi, eax ; jmp 0x20000025e24
0x00000200000889c8 : mov edi, eax ; jmp 0x2000008858e
0x0000020000105a8f : mov edi, eax ; jmp 0x20000105a59
0x0000020000159d58 : mov edi, eax ; jmp rsi
0x00000200006c78c2 : mov edi, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x000002000066b57d : mov edi, eax ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x000002000044724e : mov edi, eax ; mov rcx, r13 ; call 0x20000068fd8
0x0000020000123f2f : mov edi, eax ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000037573 : mov edi, ebp ; jmp 0x200000373b0
0x00000200001b8c93 : mov edi, ebx ; jmp 0x200001b8cd4
0x0000020000596d81 : mov edi, ebx ; jmp 0x200004c2ff1
0x000002000041581c : mov edi, ecx ; call 0x20000401a58
0x000002000056bcaa : mov edi, ecx ; jmp 0x20000437eeb
0x00000200001e07aa : mov edi, ecx ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x0000020000714623 : mov edi, ecx ; ret
0x0000020000614e91 : mov edi, edi ; call 0x20000141174
0x00000200004cb6bc : mov edi, edx ; jmp 0x200004cb626
0x000002000040a3e9 : mov edi, edx ; mov edx, eax ; mov r10d, r9d ; call 0x200004066fd
0x000002000042277f : mov edi, edx ; mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x00000200003eb680 : mov edi, esi ; jmp 0x200003eb645
0x000002000049ed6d : mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x000002000067361b : mov edi, esi ; shl rdx, 4 ; call 0x20000294009
0x00000200006c7d31 : mov edi, esp ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200000e6dc0 : mov edi, esp ; dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000017ce58 : mov edi, gs ; push rsi ; ret
0x0000020000614e90 : mov edi, r15d ; call 0x20000141175
0x00000200004b7262 : mov edx, 0x100 ; call 0x200000e1f24
0x00000200004a98a5 : mov edx, 0x107210e2 ; ret
0x00000200006ff6cc : mov edx, 0x158d48ff ; ret
0x000002000009625c : mov edx, 0x1720029 ; ret
0x00000200004b9b9c : mov edx, 0x1d8b48ff ; ret
0x0000020000055da8 : mov edx, 0x220f07f0 ; loopne 0x20000055dc7 ; and ah, cl ; ret
0x00000200001dbbf6 : mov edx, 0x220f07f0 ; loopne 0x200001dbc15 ; and ah, cl ; ret
0x00000200000146e1 : mov edx, 0x28033b3e ; ret
0x00000200000ed1da : mov edx, 0x2b4410f1 ; ret 0x8149
0x00000200004da899 : mov edx, 0x313 ; call 0x200000b6ab3
0x00000200001cc654 : mov edx, 0x32 ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200003f2638 : mov edx, 0x37209e0 ; xor eax, eax ; ret
0x0000020000665628 : mov edx, 0x37211e0 ; mov al, 1 ; ret
0x0000020000398ac8 : mov edx, 0x3983c0 ; add rcx, rdx ; jmp rcx
0x000002000002557a : mov edx, 0x3b00288f ; ret
0x00000200000110c7 : mov edx, 0x3d11b926 ; ret 0xb08e
0x0000020000114e5b : mov edx, 0x3d830025 ; pop rbx ; ret
0x00000200005d8022 : mov edx, 0x41ffd790 ; call rcx
0x000002000056a428 : mov edx, 0x43e90aea ; lahf ; in al, dx ; push rsi ; ret 0xf20
0x000002000022bf06 : mov edx, 0x480044a0 ; add esp, 0x28 ; ret
0x00000200006f4776 : mov edx, 0x4801b0ff ; add esp, 0x28 ; ret
0x000002000072c92c : mov edx, 0x480a086b ; add esp, 0x20 ; pop rbx ; ret
0x0000020000531658 : mov edx, 0x4890ffb8 ; add esp, 0x30 ; pop rbp ; ret
0x000002000016163d : mov edx, 0x4890fff5 ; add esp, 0x30 ; pop rbp ; ret
0x00000200004c58cb : mov edx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200004c0436 : mov edx, 0x48c033ff ; add esp, 0x40 ; pop rbx ; ret
0x000002000062b552 : mov edx, 0x48ffb1d8 ; add esp, 0x58 ; ret
0x00000200005bef52 : mov edx, 0x48ffb89e ; add esp, 0x30 ; pop rbx ; ret
0x00000200000ca201 : mov edx, 0x4a80d29 ; jne 0x200000ca217 ; ret
0x0000020000520316 : mov edx, 0x4a8a9 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200006688d2 : mov edx, 0x4c000287 ; mov dword ptr [rax], ecx ; mov al, 1 ; ret
0x00000200001b2f84 : mov edx, 0x50000 ; call 0x2000014a97d
0x00000200000e3f42 : mov edx, 0x508d1fe1 ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000704913 : mov edx, 0x5100fff ; ret 2
0x000002000049a049 : mov edx, 0x57308e2 ; add rsp, 0x38 ; ret
0x000002000043aba8 : mov edx, 0x5730be0 ; call 0x20000068fd8
0x000002000049d59c : mov edx, 0x5f ; jmp 0x2000049d56c
0x00000200006732ca : mov edx, 0x62535442 ; call 0x20000294e28
0x0000020000439cbb : mov edx, 0x63706c41 ; call 0x200000690e8
0x00000200002328a2 : mov edx, 0x64 ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200000e3f60 : mov edx, 0x6721be1 ; ret
0x00000200005ae081 : mov edx, 0x6ce990ff ; ret 0xfff5
0x00000200006732e0 : mov edx, 0x6d535442 ; call 0x20000294e28
0x00000200001726b9 : mov edx, 0x7200106f ; shr cl, 1 ; ret
0x00000200001b0290 : mov edx, 0x7300106f ; and bh, bh ; ret
0x00000200001dbe68 : mov edx, 0x7300406e ; sub bh, bh ; ret
0x00000200000e460a : mov edx, 0x74001c19 ; call 0x1ffc32e5561
0x00000200004dde7d : mov edx, 0x74c084ff ; ret 0x6483
0x000002000008325d : mov edx, 0x754246c ; jmp 0x20000083229
0x0000020000056cd3 : mov edx, 0x820f0ce7 ; ret 0xfff9
0x000002000012c4ef : mov edx, 0x820f0ee0 ; ret 0x864
0x000002000050efdc : mov edx, 0x820f10e0 ; ret
0x0000020000384000 : mov edx, 0x820f11e0 ; ret
0x00000200000c48db : mov edx, 0x820f1be6 ; ret 3
0x00000200003b8d4f : mov edx, 0x820f1de1 ; ret 0xfff1
0x00000200004b6d8e : mov edx, 0x830f0036 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200001f24ec : mov edx, 0x830f0ae3 ; ret
0x00000200000be0b7 : mov edx, 0x830f0ae5 ; ret 0xd3f
0x00000200001a5d58 : mov edx, 0x830f0be3 ; ret 0
0x000002000004f59e : mov edx, 0x830f0be4 ; ret 1
0x000002000050f523 : mov edx, 0x830f10e0 ; ret
0x00000200001add8c : mov edx, 0x830f18e0 ; ret 0xf72d
0x00000200003d576e : mov edx, 0x830f1de7 ; ret 0xfffd
0x0000020000130b67 : mov edx, 0x834807f0 ; ret
0x00000200006d91ec : mov edx, 0x83481ff2 ; mov byte ptr [rcx + rcx*2], 0x83 ; ret
0x00000200006cc0e0 : mov edx, 0x83491ff2 ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x00000200004febde : mov edx, 0x853e8948 ; sar byte ptr [rax + 0x17], 0x8b ; ret
0x000002000043dd2a : mov edx, 0x85fffd75 ; sar byte ptr [rcx + 0x1a], 0x8b ; ret
0x0000020000122b65 : mov edx, 0x8720029 ; mov al, 1 ; ret
0x00000200000f6f2c : mov edx, 0x8a057870 ; ret 0xf0c3
0x00000200005c4a62 : mov edx, 0x8affcd03 ; ret
0x000002000012a845 : mov edx, 0x8b000002 ; ror dword ptr [rcx - 0x75], -0x64 ; ret 0xd80
0x00000200001cab62 : mov edx, 0x8b001175 ; ret
0x000002000070d7b2 : mov edx, 0x8b073071 ; ret
0x00000200006e31f5 : mov edx, 0x8b411ff2 ; ret
0x00000200006cf0e2 : mov edx, 0x8b41b4be ; ret 0x8b49
0x0000020000039be4 : mov edx, 0x8b4407f0 ; ret 0x2349
0x000002000002e3d3 : mov edx, 0x8b4407f0 ; ret 0x8148
0x00000200000b3671 : mov edx, 0x8b4808e8 ; ret
0x000002000018e658 : mov edx, 0x8b4809ef ; ret
0x00000200000b0c7f : mov edx, 0x8b4809f3 ; ret
0x00000200005088d4 : mov edx, 0x8b480a2b ; ret
0x00000200003695a7 : mov edx, 0x8b480bf3 ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200003ba31c : mov edx, 0x8b481fe1 ; ret
0x00000200000a5c89 : mov edx, 0x8b4907f3 ; ret 0xf748
0x0000020000722705 : mov edx, 0x8b4910ff ; ret 0x86e9
0x000002000018a0d5 : mov edx, 0x8b49fff1 ; ret 0xf748
0x000002000049e5cd : mov edx, 0x8b4c08eb ; ret
0x0000020000688dbe : mov edx, 0x8bc3ffff ; ret
0x0000020000423762 : mov edx, 0x8bffe716 ; ret
0x00000200004cf92a : mov edx, 0x8bffe953 ; ret
0x00000200006c8d65 : mov edx, 0x8d481ff7 ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200006890d8 : mov edx, 0xa0 ; call 0x2000014534f
0x00000200000a5e81 : mov edx, 0xb4d07f0 ; ret
0x00000200004e7368 : mov edx, 0xb60f000b ; ret
0x000002000073013e : mov edx, 0xb76c6b2d ; call qword ptr [rcx]
0x0000020000653b33 : mov edx, 0xc0000001 ; mov eax, edx ; jmp 0x20000653b47
0x00000200005d8f29 : mov edx, 0xc000000d ; mov eax, edx ; ret
0x0000020000648219 : mov edx, 0xc0000225 ; mov eax, r10d ; ret
0x000002000068f684 : mov edx, 0xc0899d35 ; call qword ptr [rax]
0x000002000068f2f1 : mov edx, 0xc08d3035 ; call qword ptr [rax]
0x000002000071fe27 : mov edx, 0xc311de2d ; call qword ptr [rcx]
0x00000200006ef4e0 : mov edx, 0xc61b252d ; call qword ptr [rax]
0x00000200005eae15 : mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x000002000045f69c : mov edx, 0xcf8b48ff ; call 0x2000008a168
0x0000020000290530 : mov edx, 0xd70022ff ; jmp qword ptr [rdx]
0x000002000001fd41 : mov edx, 0xdbfd ; add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x00000200004bca66 : mov edx, 0xe ; call 0x200000e1c10
0x00000200006f0d36 : mov edx, 0xe2c148ff ; and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000000d486 : mov edx, 0xe5cb97af ; ret 0xd54e
0x000002000043a93b : mov edx, 0xe8ce8b48 ; nop ; xchg eax, esp ; ret 0xebff
0x0000020000485f27 : mov edx, 0xe8cf8b48 ; sub byte ptr [rax], bh ; ret
0x000002000014f195 : mov edx, 0xe9000000 ; loop 0x2000014f178 ; add byte ptr [rax], al ; ret
0x000002000018e35a : mov edx, 0xe990ffea ; ret
0x000002000068c31a : mov edx, 0xe9ffaa23 ; ret
0x00000200000ffc6f : mov edx, 0xf037473 ; xchg eax, edx ; ret 0x5488
0x0000020000427321 : mov edx, 0xf3731ce1 ; or dword ptr [rdx], eax ; ret
0x000002000057781f : mov edx, 0xf491fe1 ; ret 0x8541
0x0000020000670454 : mov edx, 0xf6143868 ; ret
0x0000020000579078 : mov edx, 0xf6ffee7c ; ret
0x0000020000545c01 : mov edx, 0xfc084ff ; test bl, al ; ret 0xffe7
0x0000020000545bf1 : mov edx, 0xfc084ff ; test ebp, eax ; ret 0xffe7
0x00000200003d9bb4 : mov edx, 0xff000000 ; ret
0x000002000012562b : mov edx, 0xff410022 ; ret
0x00000200006f591a : mov edx, 0xff4d77ff ; ret
0x00000200001b480a : mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000045e0c5 : mov edx, 0xffff ; add word ptr [rcx + 0xa], dx ; ret
0x000002000047d884 : mov edx, 1 ; call 0x200000a8728
0x00000200006cefa0 : mov edx, 1 ; jmp r8
0x00000200000e05cb : mov edx, 1 ; mov eax, edx ; ret
0x00000200003f7257 : mov edx, 1 ; mov rcx, rbx ; call r10
0x000002000019e89e : mov edx, 3 ; mov rcx, rsi ; call r10
0x00000200004ac65d : mov edx, 4 ; call 0x200000d28e0
0x00000200003958f8 : mov edx, dword ptr [r11 + rax*4 + 0x1c] ; mov rcx, r13 ; call qword ptr [r14]
0x00000200001cbea1 : mov edx, dword ptr [rax + 0x50] ; test rdx, rdx ; je 0x200001cbeb5 ; jmp rdx
0x00000200001e9b93 : mov edx, dword ptr [rax + rdx*8 + 0x10] ; call qword ptr [rdi]
0x00000200004cb8e3 : mov edx, dword ptr [rax] ; add rdx, 8 ; mov rax, rdx ; ret
0x0000020000101020 : mov edx, dword ptr [rbp + 0x20] ; call r10
0x0000020000162a1e : mov edx, dword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x000002000016307a : mov edx, dword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x00000200004b683f : mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x000002000016fb41 : mov edx, dword ptr [rbp + rax] ; nop ; jmp 0x2000004bda3
0x000002000066e69f : mov edx, dword ptr [rbx + 0x38] ; mov rcx, qword ptr [rbx + 0x40] ; call 0x2000004a8c1
0x00000200001777da : mov edx, dword ptr [rbx + 0x38] ; test rdx, rdx ; je 0x200001777ec ; call rax
0x00000200006caf58 : mov edx, dword ptr [rbx + 0x448] ; mov rax, rdx ; jmp 0x200006caf6d
0x00000200006dc4d3 : mov edx, dword ptr [rbx + 0x448] ; mov rax, rdx ; jmp 0x200006dc4e8
0x00000200000bbf95 : mov edx, dword ptr [rbx + 0xd] ; add dh, dh ; ret 0xf01
0x00000200003ee3b4 : mov edx, dword ptr [rbx + 8] ; mov eax, dword ptr [rbx + 0x18] ; lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003ee392
0x00000200005db138 : mov edx, dword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200004fb8bd : mov edx, dword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004fb8af
0x00000200003958f9 : mov edx, dword ptr [rbx + rax*4 + 0x1c] ; mov rcx, r13 ; call qword ptr [r14]
0x000002000000e6dd : mov edx, dword ptr [rbx] ; ret
0x0000020000149b98 : mov edx, dword ptr [rcx + 0x20] ; call rax
0x000002000015d2b9 : mov edx, dword ptr [rcx + 0x38] ; jmp rdx
0x00000200003b2de9 : mov edx, dword ptr [rcx + 0x40] ; call rax
0x0000020000549169 : mov edx, dword ptr [rcx + 0xb8] ; mov rcx, rdi ; call rsi
0x0000020000032275 : mov edx, dword ptr [rcx + 3] ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000051c6ea : mov edx, dword ptr [rcx + 8] ; call r8
0x00000200006c7279 : mov edx, dword ptr [rcx] ; call r8
0x00000200006cbfbb : mov edx, dword ptr [rcx] ; call r9
0x00000200006d6c0f : mov edx, dword ptr [rcx] ; call rbx
0x000002000049f2ab : mov edx, dword ptr [rcx] ; test r10d, r10d ; jne 0x2000049f2be ; xor eax, eax ; ret
0x0000020000510bd4 : mov edx, dword ptr [rdi + 0x20] ; call 0x20000140abe
0x000002000038de0c : mov edx, dword ptr [rdi + 0x2e0] ; mov rcx, r15 ; call rax
0x0000020000500093 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 1 ; call r8
0x000002000063c3c0 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x000002000063c3f6 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x0000020000500086 : mov edx, dword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x00000200006e08b6 : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e08cb
0x00000200006e10a9 : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e10be
0x00000200006e18ba : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e18cf
0x00000200006e20db : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e20f0
0x00000200006e28bf : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e28d4
0x00000200006e64ab : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e64c0
0x00000200006e6d97 : mov edx, dword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e6dac
0x000002000067d59b : mov edx, dword ptr [rdi + 8] ; mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x000002000014d7f0 : mov edx, dword ptr [rdx + 0x14] ; mov eax, dword ptr [rcx + 0x14] ; sub eax, edx ; ret
0x0000020000672450 : mov edx, dword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x20000672449 ; ret
0x00000200003ffe7e : mov edx, dword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x0000020000365f5b : mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x00000200000b43f9 : mov edx, dword ptr [rdx + 8] ; mov rbp, rcx ; mov rcx, rsi ; call qword ptr [rbx]
0x0000020000422782 : mov edx, dword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x000002000019d24c : mov edx, dword ptr [rdx + rax*8] ; jmp 0x2000019d261
0x0000020000230056 : mov edx, dword ptr [rdx + rax*8] ; jmp 0x20000230060
0x000002000019eb45 : mov edx, dword ptr [rdx + rax*8] ; movzx r8d, r14w ; call r10
0x00000200001c4dcb : mov edx, dword ptr [rdx + rax*8] ; test rdx, rdx ; je 0x200001c4ddd ; call rdx
0x0000020000465353 : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000465353 ; ret
0x00000200006f9aea : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x200006f9ae0 ; xor eax, eax ; ret
0x00000200005204f4 : mov edx, dword ptr [rdx] ; mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x00000200006e0109 : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e011e
0x00000200006e04dc : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e04f1
0x00000200006e0ca7 : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e0cbc
0x00000200006e14a6 : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e14bb
0x00000200006e1cbb : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e1cd0
0x00000200006e24e9 : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e24fe
0x00000200006e6056 : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e606b
0x00000200006e68da : mov edx, dword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e68ef
0x000002000042157e : mov edx, dword ptr [rsi + 0x60] ; call 0x2000015d885
0x00000200003cc781 : mov edx, dword ptr [rsi + 0x68] ; mov rcx, rdi ; call rax
0x000002000019cee9 : mov edx, dword ptr [rsp + 0x28] ; call 0x200001d9192
0x000002000019cec3 : mov edx, dword ptr [rsp + 0x28] ; mov rcx, rdi ; call 0x200001d9195
0x00000200000dceef : mov edx, dword ptr [rsp + 0x38] ; mov rcx, rbx ; call 0x200001d9195
0x000002000015cb40 : mov edx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; call r10
0x00000200004f709a : mov edx, dword ptr [rsp + 0x40] ; dec rax ; add rax, rdx ; jmp 0x200004f7042
0x00000200004e2a49 : mov edx, dword ptr [rsp + 0x40] ; jmp 0x200004e2a17
0x00000200006d6c8f : mov edx, dword ptr [rsp + 0x448] ; mov rax, rdx ; jmp 0x200006d6ca6
0x000002000039020e : mov edx, dword ptr [rsp + 0x48] ; jmp 0x200003901dc
0x0000020000151d27 : mov edx, dword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x000002000019ce94 : mov edx, dword ptr [rsp + 0x48] ; mov rcx, rbx ; call 0x200001d9195
0x000002000044b143 : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rbp ; call rsi
0x0000020000214d95 : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rsi ; call r9
0x0000020000214de5 : mov edx, dword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x00000200006809f7 : mov edx, eax ; add rsp, 0x38 ; jmp r8
0x000002000056b8d0 : mov edx, eax ; call 0x20000027bc0
0x000002000040549d : mov edx, eax ; call 0x20000027bc1
0x0000020000442c04 : mov edx, eax ; call 0x20000070845
0x00000200004dddb5 : mov edx, eax ; call 0x200000a8728
0x0000020000038684 : mov edx, eax ; call 0x200000d4978
0x0000020000139627 : mov edx, eax ; call qword ptr [rbx]
0x00000200001e9b67 : mov edx, eax ; call qword ptr [rdi]
0x00000200004b1aad : mov edx, eax ; jne 0x200004b1ac0 ; mov eax, 1 ; ret
0x00000200003ed392 : mov edx, eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x00000200000f8717 : mov edx, eax ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200000e1fbc : mov edx, eax ; mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000700b3b : mov edx, eax ; mov eax, edx ; add rsp, 0x38 ; ret
0x000002000038b84b : mov edx, eax ; mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000612d2e : mov edx, eax ; mov eax, edx ; jmp 0x20000612d3c
0x00000200005084a0 : mov edx, eax ; mov eax, edx ; ret
0x00000200006432bd : mov edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200004b2f44 : mov edx, eax ; mov eax, r10d ; add rsp, 0x48 ; ret
0x000002000060e512 : mov edx, eax ; mov eax, r10d ; jmp 0x2000060e522
0x000002000066d8c1 : mov edx, eax ; mov ebp, eax ; call 0x20000294007
0x000002000048e87d : mov edx, eax ; mov qword ptr [rsp + 0x48], rax ; call 0x200003cab19
0x000002000040a3eb : mov edx, eax ; mov r10d, r9d ; call 0x200004066fb
0x00000200004d4f49 : mov edx, eax ; mov r9, rcx ; jne 0x200004d4f5c ; mov al, 1 ; ret
0x0000020000443f4e : mov edx, eax ; mov rcx, r12 ; call 0x20000070848
0x00000200005745d8 : mov edx, eax ; mov rcx, r15 ; call 0x20000070847
0x000002000044ca14 : mov edx, eax ; mov rcx, r15 ; call 0x20000070848
0x000002000044407e : mov edx, eax ; mov rcx, rbp ; call 0x20000070848
0x00000200003fcb85 : mov edx, eax ; mov rcx, rbx ; call 0x20000027bc4
0x00000200004463d5 : mov edx, eax ; mov rcx, rbx ; call 0x20000070848
0x00000200003fd62f : mov edx, eax ; mov rcx, rdi ; call 0x20000027bc4
0x0000020000114630 : mov edx, eax ; mov rcx, rdi ; call 0x20000070847
0x00000200004444e8 : mov edx, eax ; mov rcx, rdi ; call 0x20000070848
0x000002000048f113 : mov edx, eax ; mov rcx, rdi ; call 0x200000bc6cc
0x00000200004a4624 : mov edx, eax ; mov rcx, rsi ; call 0x20000070847
0x000002000044e9c7 : mov edx, eax ; mov rcx, rsi ; call r14
0x000002000059c96a : mov edx, eax ; push rsi ; ret
0x0000020000233474 : mov edx, eax ; sub r8d, r14d ; call 0x2000022f737
0x000002000014da2a : mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x000002000043959d : mov edx, ebp ; call 0x20000065ec5
0x0000020000574c87 : mov edx, ebp ; call 0x20000450eb0
0x00000200005146d3 : mov edx, ebp ; mov byte ptr [rsi + 0x41], al ; call 0x2000013b15c
0x00000200006652e4 : mov edx, ebp ; mov rcx, r13 ; call r15
0x000002000066b722 : mov edx, ebp ; mov rcx, r13 ; call rax
0x0000020000672958 : mov edx, ebp ; mov rcx, rbx ; call rax
0x000002000002a103 : mov edx, ebp ; mov rcx, rbx ; xor r12d, r12d ; call rsi
0x00000200006674bb : mov edx, ebp ; mov rcx, rdi ; call 0x20000294e28
0x00000200004fdfd9 : mov edx, ebp ; mov rcx, rdi ; call 0x2000045a2d3
0x000002000048d1a2 : mov edx, ebp ; mov rcx, rdi ; call r12
0x000002000046c111 : mov edx, ebp ; mov rcx, rdi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x000002000066c13f : mov edx, ebp ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000048e3ee : mov edx, ebp ; mov rcx, rsi ; call 0x200000bc778
0x00000200006674ad : mov edx, ebp ; mov rcx, rsi ; call 0x20000294e28
0x00000200003f18db : mov edx, ebp ; mov rcx, rsi ; call r14
0x00000200003b67e4 : mov edx, ebx ; call 0x2000005e289
0x00000200000f0622 : mov edx, ebx ; call 0x200000ac791
0x0000020000373377 : mov edx, ebx ; call 0x200000ff5e4
0x000002000066743d : mov edx, ebx ; call 0x20000294005
0x0000020000444481 : mov edx, ebx ; call 0x200004e06dc
0x0000020000443196 : mov edx, ebx ; call r10
0x0000020000664e4d : mov edx, ebx ; lea ecx, dword ptr [r9 + 0x35] ; call 0x20000151088
0x000002000050864d : mov edx, ebx ; mov dword ptr [rsp + 0x20], edi ; call 0x20000138065
0x00000200006303ea : mov edx, ebx ; mov eax, edx ; jmp 0x200006303d0
0x00000200003957c7 : mov edx, ebx ; mov qword ptr [rbp + 0x70], rsi ; call qword ptr [rsi]
0x0000020000464852 : mov edx, ebx ; mov r8b, r11b ; call r12
0x00000200004a6a3d : mov edx, ebx ; mov rcx, r10 ; call rax
0x000002000049b26d : mov edx, ebx ; mov rcx, r13 ; call 0x200000bc778
0x00000200000e7230 : mov edx, ebx ; mov rcx, r13 ; call r12
0x0000020000395a1e : mov edx, ebx ; mov rcx, r13 ; mov dword ptr [rbp - 0x38], ebx ; call qword ptr [r14]
0x000002000066c379 : mov edx, ebx ; mov rcx, r14 ; call r12
0x00000200000a6c7e : mov edx, ebx ; mov rcx, r15 ; call r12
0x0000020000546f46 : mov edx, ebx ; mov rcx, rdi ; call 0x200005d3163
0x00000200004be40f : mov edx, ebx ; mov rcx, rdi ; call r10
0x0000020000141581 : mov edx, ebx ; mov rcx, rdi ; call r15
0x00000200006729df : mov edx, ebx ; mov rcx, rdi ; call rax
0x000002000010b1ff : mov edx, ebx ; mov rcx, rdi ; call rsi
0x00000200001ab5c6 : mov edx, ebx ; mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200006d715f : mov edx, ebx ; mov rcx, rsi ; call r12
0x00000200006cf07c : mov edx, ebx ; pop rbx ; add rsp, 8 ; jmp r8
0x000002000040a3ee : mov edx, ecx ; call 0x200004066f8
0x000002000011b561 : mov edx, ecx ; je 0x200001ac20a ; ret
0x0000020000185287 : mov edx, ecx ; jmp 0x20000091571
0x0000020000671589 : mov edx, ecx ; jne 0x20000671596 ; xor eax, eax ; ret
0x0000020000233567 : mov edx, ecx ; mov r8, rax ; jmp 0x2000022f7ab
0x0000020000453548 : mov edx, ecx ; mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000010af36 : mov edx, ecx ; mov rcx, rdi ; call rbx
0x00000200001b9ce8 : mov edx, ecx ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b9d0f
0x00000200001b9d40 : mov edx, ecx ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b9d68
0x00000200001b9c66 : mov edx, ecx ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001b9c91
0x000002000044cd92 : mov edx, edi ; call 0x20000070d75
0x0000020000463fb2 : mov edx, edi ; call 0x2000008a165
0x0000020000494570 : mov edx, edi ; call 0x200000b48ed
0x00000200004704c6 : mov edx, edi ; call 0x200000bc774
0x000002000021f684 : mov edx, edi ; call 0x20000214182
0x00000200005fe3d2 : mov edx, edi ; call 0x20000225195
0x000002000066610f : mov edx, edi ; call 0x20000294e25
0x00000200006fe18c : mov edx, edi ; call 0x200004ba3f8
0x000002000045ace5 : mov edx, edi ; call qword ptr [rax]
0x000002000008f1bc : mov edx, edi ; call rax
0x000002000066f6a7 : mov edx, edi ; call rdi
0x00000200001a2abc : mov edx, edi ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x00000200006cb9a7 : mov edx, edi ; mov dword ptr [rbp + 0x34], edx ; mov r8d, edx ; jmp 0x200006cb9be
0x00000200005085f3 : mov edx, edi ; mov dword ptr [rsp + 0x20], ebx ; call 0x20000138065
0x00000200006f1a63 : mov edx, edi ; mov qword ptr [rsp + 0x20], rax ; call 0x2000014dce9
0x000002000014134d : mov edx, edi ; mov rcx, r12 ; call r14
0x000002000066beb1 : mov edx, edi ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000049bafa : mov edx, edi ; mov rcx, r13 ; call 0x200000bc778
0x0000020000170c75 : mov edx, edi ; mov rcx, r14 ; call 0x2000022cf37
0x00000200000d8c52 : mov edx, edi ; mov rcx, r14 ; call rax
0x000002000059ba4e : mov edx, edi ; mov rcx, r15 ; call 0x20000047c77
0x00000200005ae432 : mov edx, edi ; mov rcx, r15 ; call rax
0x000002000044a57e : mov edx, edi ; mov rcx, rbp ; call 0x20000074ed4
0x00000200001e037a : mov edx, edi ; mov rcx, rbp ; call rax
0x000002000064046c : mov edx, edi ; mov rcx, rbx ; call 0x200000bc777
0x00000200001c1d1b : mov edx, edi ; mov rcx, rbx ; call r10
0x00000200004055d9 : mov edx, edi ; mov rcx, rbx ; call r14
0x0000020000672a4e : mov edx, edi ; mov rcx, rbx ; call rax
0x00000200005c5bf5 : mov edx, edi ; mov rcx, rdi ; call 0x20000431ecf
0x000002000050c766 : mov edx, edi ; mov rcx, rsi ; call 0x20000138acc
0x00000200005141d8 : mov edx, edi ; mov rcx, rsi ; call 0x2000013ace0
0x00000200005ae46d : mov edx, edi ; mov rcx, rsi ; call r10
0x000002000014138a : mov edx, edi ; mov rcx, rsi ; call r14
0x00000200005f22d4 : mov edx, edi ; mov rcx, rsi ; mov ebx, eax ; call 0x2000051e58d
0x000002000066bd53 : mov edx, edi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200004c8aa6 : mov edx, edx ; jmp r11
0x0000020000364ee7 : mov edx, edx ; mov rcx, rsi ; call r11
0x0000020000210310 : mov edx, edx ; test rax, rax ; jne 0x2000021031f ; ret
0x000002000066e68f : mov edx, esi ; call 0x2000004a8bc
0x0000020000437960 : mov edx, esi ; call 0x20000063ac5
0x000002000009b5ed : mov edx, esi ; call 0x2000009782c
0x00000200004d56e7 : mov edx, esi ; call 0x2000011f0a4
0x0000020000401a04 : mov edx, esi ; call 0x2000014dc64
0x00000200004fb4f6 : mov edx, esi ; call r12
0x0000020000141319 : mov edx, esi ; call r14
0x000002000008f43a : mov edx, esi ; call rax
0x0000020000437eff : mov edx, esi ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000514e42 : mov edx, esi ; mov rcx, r11 ; call 0x2000013b6c0
0x00000200001a6e59 : mov edx, esi ; mov rcx, r12 ; call r15
0x000002000064f67d : mov edx, esi ; mov rcx, r12 ; call rax
0x00000200003f81a2 : mov edx, esi ; mov rcx, r13 ; call rax
0x0000020000512fed : mov edx, esi ; mov rcx, r14 ; call 0x2000013a8b4
0x00000200004f31c1 : mov edx, esi ; mov rcx, r14 ; call r9
0x00000200001375cd : mov edx, esi ; mov rcx, r15 ; call r14
0x00000200003f7f12 : mov edx, esi ; mov rcx, r15 ; call rax
0x0000020000537c12 : mov edx, esi ; mov rcx, r8 ; call 0x20000157d58
0x000002000048e86c : mov edx, esi ; mov rcx, r9 ; call 0x200003cab17
0x0000020000679376 : mov edx, esi ; mov rcx, rax ; call r15
0x0000020000510009 : mov edx, esi ; mov rcx, rbp ; call 0x20000139814
0x000002000050fff5 : mov edx, esi ; mov rcx, rbp ; call 0x20000139864
0x000002000050ffe1 : mov edx, esi ; mov rcx, rbp ; call 0x200001398b4
0x000002000050ffcd : mov edx, esi ; mov rcx, rbp ; call 0x20000139904
0x0000020000190ca6 : mov edx, esi ; mov rcx, rbp ; call 0x2000022cf37
0x00000200003ff5ff : mov edx, esi ; mov rcx, rbp ; call rax
0x00000200001eb269 : mov edx, esi ; mov rcx, rbx ; call 0x2000008756f
0x0000020000492939 : mov edx, esi ; mov rcx, rbx ; call 0x200000bc6cc
0x0000020000067c39 : mov edx, esi ; mov rcx, rbx ; call 0x20000153ec7
0x00000200005381f8 : mov edx, esi ; mov rcx, rbx ; call 0x2000015d888
0x00000200003d03ff : mov edx, esi ; mov rcx, rbx ; call r10
0x00000200004bd6d2 : mov edx, esi ; mov rcx, rbx ; call r11
0x00000200006d9344 : mov edx, esi ; mov rcx, rbx ; call r12
0x00000200001413de : mov edx, esi ; mov rcx, rbx ; call r14
0x00000200005a1dc0 : mov edx, esi ; mov rcx, rbx ; call rax
0x000002000051010a : mov edx, esi ; mov rcx, rdi ; call 0x20000139720
0x000002000055d3bd : mov edx, esi ; mov rcx, rdi ; call 0x2000040963b
0x00000200005005b9 : mov edx, esi ; mov rcx, rdi ; call qword ptr [rax]
0x000002000014140e : mov edx, esi ; mov rcx, rdi ; call r14
0x000002000066b4f5 : mov edx, esi ; mov rcx, rdi ; call r15
0x000002000021b144 : mov edx, esi ; mov rcx, rdi ; call r9
0x00000200006077c8 : mov edx, esi ; mov rcx, rdi ; call rax
0x00000200001a741c : mov edx, esi ; mov rcx, rdi ; call rbx
0x000002000064b931 : mov edx, esi ; mov rcx, rsi ; call rax
0x00000200001401b2 : mov edx, esp ; call rax
0x00000200004bba04 : mov edx, esp ; call rdi
0x000002000064ad80 : mov edx, esp ; call rsi
0x0000020000155fb5 : mov edx, esp ; lea r8, qword ptr [rbp - 0x80] ; call 0x20000042298
0x00000200005947f2 : mov edx, esp ; mov rcx, qword ptr [rdi + rcx*8] ; call 0x20000140ac0
0x00000200000c96f6 : mov edx, esp ; mov rcx, r13 ; call rax
0x000002000040c368 : mov edx, esp ; mov rcx, r14 ; call rax
0x000002000038cc53 : mov edx, esp ; mov rcx, rbp ; call rax
0x000002000043959c : mov edx, r13d ; call 0x20000065ec6
0x000002000043795f : mov edx, r14d ; call 0x20000063ac6
0x0000020000401a03 : mov edx, r14d ; call 0x2000014dc65
0x000002000008f439 : mov edx, r14d ; call rax
0x00000200003d03fe : mov edx, r14d ; mov rcx, rbx ; call r10
0x000002000066b4f4 : mov edx, r14d ; mov rcx, rdi ; call r15
0x000002000008f1bb : mov edx, r15d ; call rax
0x000002000066f6a6 : mov edx, r15d ; call rdi
0x00000200001a2abb : mov edx, r15d ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x00000200006cb9a6 : mov edx, r15d ; mov dword ptr [rbp + 0x34], edx ; mov r8d, edx ; jmp 0x200006cb9bf
0x00000200005c5bf4 : mov edx, r15d ; mov rcx, rdi ; call 0x20000431ed0
0x000002000059c969 : mov edx, r8d ; push rsi ; ret
0x00000200000a4e90 : mov es, word ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006c5d63 : mov es, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001b7e02 : mov es, word ptr [rsi + 0x74c08400] ; add bh, bh ; ret
0x00000200006e57fd : mov es, word ptr [rsp + rax] ; add byte ptr [rbp - 0x75], al ; ret 0xb941
0x00000200006c93bf : mov es, word ptr [rsp + rax] ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006c6871 : mov es, word ptr [rsp + rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006c5f1a : mov es, word ptr [rsp + rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000001fcfb : mov esi, 0 ; leave ; ret 0x21d1
0x00000200001c539e : mov esi, 0x1890018 ; xor eax, eax ; ret
0x0000020000492b97 : mov esi, 0x20f083c1 ; ret
0x000002000037efeb : mov esi, 0x33fffffe ; ror byte ptr [rcx - 0x77], 0x13 ; ret
0x00000200000f44be : mov esi, 0x3a0039e6 ; ret
0x000002000046922e : mov esi, 0x48000000 ; add esp, 0x68 ; ret
0x000002000050d090 : mov esi, 0x48000000 ; mov ecx, ebx ; call rax
0x0000020000115d4e : mov esi, 0x48000330 ; add esp, 0x58 ; ret
0x000002000053140f : mov esi, 0x4890ffc9 ; add esp, 0x40 ; pop rbp ; ret
0x000002000051d207 : mov esi, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x0000020000485b17 : mov esi, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x00000200006ffab6 : mov esi, 0x48ff9c01 ; add esp, 0x20 ; pop rbx ; ret
0x000002000009255c : mov esi, 0x4c8b49c0 ; ret 0x4848
0x00000200003c4993 : mov esi, 0x68e9ffca ; idiv bh ; push rsi ; ret 0xf04
0x000002000013feb9 : mov esi, 0x75c83bc0 ; or dword ptr [rax - 1], ecx ; ret 0x3845
0x0000020000674864 : mov esi, 0x8348ffff ; ret
0x0000020000230cd5 : mov esi, 0x8b000000 ; ret
0x00000200004f0bc2 : mov esi, 0x8b000003 ; ret
0x00000200003cfa9d : mov esi, 0x8b48002d ; ret 0xb48
0x0000020000025af8 : mov esi, 0x8b480032 ; add al, 0xc1 ; ret
0x00000200001851ab : mov esi, 0x8b4dfff0 ; ret 0xb70f
0x00000200001ac949 : mov esi, 0x8bfff6ff ; ret
0x000002000015963e : mov esi, 0x90ffffff ; add rsp, 0x28 ; ret
0x0000020000022521 : mov esi, 0x92d ; add byte ptr [rax], al ; ret
0x0000020000068109 : mov esi, 0xb60f40ce ; test byte ptr [rdi], 0xb6 ; ret 0xca3b
0x000002000003b774 : mov esi, 0xb60f45c8 ; rol byte ptr [rcx + 0xf], 0xb6 ; ret 0x3b45
0x0000020000067901 : mov esi, 0xb60f45c8 ; ror byte ptr [rdi], 0xb6 ; ret 0xca3b
0x000002000003c468 : mov esi, 0xb60f45cf ; ror byte ptr [rdi], 0xb6 ; ret 0xca3b
0x000002000005efd7 : mov esi, 0xbe0f080c ; ret 0xc82b
0x0000020000471bd5 : mov esi, 0xbe550057 ; push rdi ; add byte ptr [rcx], al ; ret
0x000002000028a9b9 : mov esi, 0xbee8005f ; pop rdi ; add ch, dh ; ret 0x5f
0x00000200000e01a1 : mov esi, 0xc0000021 ; jmp 0x200000e0157
0x000002000058ff8b : mov esi, 0xc0000022 ; jmp 0x200004ac254
0x00000200003e311e : mov esi, 0xc0000023 ; jmp 0x200003df404
0x000002000028a9c5 : mov esi, 0xc2c1005f ; pop rdi ; add ah, cl ; ret 0x5f
0x000002000000283e : mov esi, 0xc2c1c0bf ; ret
0x000002000003c9cf : mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x8d0f
0x00000200005007d2 : mov esi, 0xc48148ff ; enter 0, 0 ; ret
0x00000200004d3930 : mov esi, 0xc48348ff ; pop rax ; ret
0x000002000024b540 : mov esi, 0xe9003ec3 ; ret
0x0000020000208ce7 : mov esi, 0xf6000001 ; ret 0xf3f
0x0000020000036eb5 : mov esi, 0xf600132b ; ret
0x0000020000138fc6 : mov esi, 0xf600175e ; ret
0x0000020000448200 : mov esi, 0xf6168bff ; ret 0xf01
0x00000200006030fe : mov esi, 0xf6ffcad1 ; ret
0x0000020000379a0e : mov esi, 0xf6fff29e ; ret
0x0000020000441de7 : mov esi, 0xfff6fb7d ; dec dword ptr [rax - 0x75] ; ret
0x00000200000630eb : mov esi, 0xfff6fb7d ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f6647 : mov esi, 0xfff6fb7d ; dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x0000020000172252 : mov esi, 0xffffee41 ; ret
0x0000020000670e23 : mov esi, cs ; ret
0x00000200005b49e7 : mov esi, dr0 ; jmp qword ptr [rcx]
0x000002000000eb1f : mov esi, dr0 ; push rsi ; ret
0x0000020000512c90 : mov esi, dword ptr [r15 + 8] ; mov ecx, esi ; call 0x2000013a675
0x0000020000190319 : mov esi, dword ptr [rbp + 0x14] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200002129f9 : mov esi, dword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000018a6cf : mov esi, dword ptr [rbp - 0x10] ; mov dword ptr [rbp + 0x58], r12d ; jmp 0x200000a69cb
0x000002000049afed : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x000002000004a636 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e97aa : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200003f60c2 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000083f34 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000008f889 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000100c3b : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x00000200000e26fa : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000a4d66 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000512c91 : mov esi, dword ptr [rdi + 8] ; mov ecx, esi ; call 0x2000013a674
0x0000020000046ae6 : mov esi, dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x93 ; ret
0x000002000044fc36 : mov esi, dword ptr [rsi + rax + 0x3b410000] ; ret 0xe575
0x0000020000014a63 : mov esi, dword ptr [rsi] ; mov dl, 0xc8 ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x000002000057549a : mov esi, dword ptr [rsi] ; mov dword ptr [rsp + 0x70], esi ; jmp 0x200005754b0
0x00000200000959ce : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000100222 : mov esi, dword ptr [rsp + 0x10] ; ret
0x0000020000100b4c : mov esi, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200000d5fb1 : mov esi, dword ptr [rsp + 0x18] ; ret
0x0000020000208c47 : mov esi, dword ptr [rsp + 0x20] ; pop r14 ; ret
0x00000200000ca953 : mov esi, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000125676 : mov esi, dword ptr [rsp + 0x20] ; ret
0x00000200005f0a27 : mov esi, dword ptr [rsp + 0x28] ; mov eax, r11d ; pop rdi ; ret
0x000002000020f6ef : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x000002000006e0d1 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fb898 : mov esi, dword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000249ba : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000024b3c : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ca183 : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000234076 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000036416 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000366b41 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000026dae : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000271b3 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014af93 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000022a4bb : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001d7770 : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000093958 : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000024946 : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000004c3ee : mov esi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000097122 : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000090b5e : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000003349e : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000d50bf : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000038ddb : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000003cc75 : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000146596 : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000585705 : mov esi, dword ptr [rsp + rdx*8] ; call qword ptr [rbx]
0x00000200000b8fe4 : mov esi, eax ; call 0x200004c366d
0x000002000067d5a2 : mov esi, eax ; call qword ptr [rdi]
0x000002000066c0a1 : mov esi, eax ; call rbx
0x00000200006e29fe : mov esi, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x0000020000159d55 : mov esi, eax ; mov r15, rax ; jmp rsi
0x00000200003bccd5 : mov esi, eax ; mov rcx, rdi ; call 0x20000068fd7
0x000002000000e024 : mov esi, eax ; ret 0x6716
0x00000200003e3117 : mov esi, ebp ; jmp 0x200003df3db
0x00000200001d49b3 : mov esi, ebp ; str word ptr [rax - 0x7d] ; ret 0x4540
0x0000020000596d67 : mov esi, ebx ; mov ebx, 0xc000009a ; jmp 0x200004c2ff6
0x00000200004ff35e : mov esi, ecx ; call 0x2000012e1bd
0x00000200001fb162 : mov esi, ecx ; jmp 0x200001fb1cc
0x00000200000e4169 : mov esi, ecx ; xor ecx, ecx ; mov rbx, rdx ; call 0x20000470465
0x0000020000668d01 : mov esi, edx ; call 0x20000674f7c
0x00000200001e0831 : mov esi, edx ; call qword ptr [rax]
0x0000020000123f32 : mov esi, edx ; call qword ptr [rbx]
0x00000200006d4913 : mov esi, edx ; lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d4b45 : mov esi, edx ; lea edx, dword ptr [rdi + 0x202] ; call rbx
0x00000200006d508a : mov esi, edx ; lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54e9 : mov esi, edx ; lea edx, dword ptr [rdi + 0x50] ; call rbx
0x00000200006d528c : mov esi, edx ; lea edx, dword ptr [rdi + 0x58] ; call rbx
0x00000200006d4e56 : mov esi, edx ; lea edx, dword ptr [rdi + 0x88] ; call rbx
0x0000020000147989 : mov esi, edx ; mov r8d, edx ; jmp 0x200001479b1
0x000002000064c02e : mov esi, edx ; mov rbp, rcx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200001e06f4 : mov esi, edx ; mov rbx, rcx ; call qword ptr [rax]
0x00000200004856c1 : mov esi, edx ; mov rcx, qword ptr [rbx] ; call 0x200000e19c3
0x0000020000438431 : mov esi, esi ; jmp 0x200004383fa
0x0000020000429943 : mov esi, esi ; ret
0x0000020000110f5d : mov esi, esp ; add dword ptr [rax], eax ; add bl, ch ; mov dh, 0x8a ; ret 0x624
0x00000200000710bb : mov esi, esp ; jmp 0x20000070fa8
0x00000200006d0184 : mov esi, esp ; mov rax, rdx ; jmp 0x200006d0194
0x00000200006d0183 : mov esi, r12d ; mov rax, rdx ; jmp 0x200006d0195
0x00000200003e3116 : mov esi, r13d ; jmp 0x200003df3dc
0x000002000010101e : mov esp, 0x20558b48 ; call r10
0x0000020000141306 : mov esp, 0x220ec ; add bl, ch ; ret 0xd148
0x00000200004dddba : mov esp, 0x27c3e8ff ; ret
0x000002000000d6a3 : mov esp, 0x2bee8961 ; ret 0x8199
0x000002000066a9b5 : mov esp, 0x3000000 ; ret 0x8445
0x00000200003fd4c3 : mov esp, 0x32036 ; add bl, ch ; ret 0x6948
0x000002000010ee21 : mov esp, 0x350d80c1 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004c22d9 : mov esp, 0x3b00001f ; ret
0x000002000027d368 : mov esp, 0x400070da ; ret
0x000002000007382f : mov esp, 0x440f41c0 ; ret 0xc13b
0x0000020000086692 : mov esp, 0x440f41c1 ; ret 0x3b48
0x0000020000082d62 : mov esp, 0x440f41c1 ; ret 0x4589
0x0000020000161686 : mov esp, 0x48900006 ; add esp, 0x40 ; pop rbp ; ret
0x0000020000631b54 : mov esp, 0x48ffa506 ; add esp, 0x38 ; ret
0x0000020000603c50 : mov esp, 0x48ffb451 ; add esp, 0x40 ; pop rbx ; ret
0x00000200005c3350 : mov esp, 0x48ffb85a ; add esp, 0x50 ; pop rbx ; ret
0x00000200004ddb50 : mov esp, 0x48ffc6b2 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004cf350 : mov esp, 0x48ffc79a ; add esp, 0x68 ; ret
0x000002000060b584 : mov esp, 0x48ffd818 ; add esp, 0x50 ; pop rbp ; ret
0x000002000022d050 : mov esp, 0x48fff1bd ; add esp, 0x60 ; pop rbp ; ret
0x00000200000c8250 : mov esp, 0x48fff8d5 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000168c79 : mov esp, 0x66e9ffec ; ret 0xffec
0x0000020000587937 : mov esp, 0x6fe990ff ; ret
0x00000200004a39bd : mov esp, 0x768b49ff ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000002a7e6 : mov esp, 0x787281f0 ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x0000020000220f95 : mov esp, 0x8024 ; add dh, dh ; ret
0x00000200000e64b0 : mov esp, 0x850005ac ; ror byte ptr [rdi], 0x84 ; ret 7
0x0000020000492758 : mov esp, 0x854dffe1 ; sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x0000020000471dd8 : mov esp, 0x85ffe3d1 ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3d83
0x0000020000590f34 : mov esp, 0x8b000428 ; ret
0x000002000040cca6 : mov esp, 0x8b001507 ; ret
0x00000200004441ed : mov esp, 0x8b480012 ; iretd ; call 0x2000006a619
0x00000200005843ab : mov esp, 0x8b48ccff ; ret 0x4cf0
0x00000200005ba5f3 : mov esp, 0x8b48ffd1 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200001c537b : mov esp, 0x8b4c0018 ; ret 0x4a8
0x00000200005844d7 : mov esp, 0x8b4cccff ; ret 0x8148
0x0000020000728c40 : mov esp, 0x8bffa24f ; ret
0x000002000063a860 : mov esp, 0x8bffc5a5 ; ret
0x0000020000504c60 : mov esp, 0x8bffd901 ; ret
0x00000200004ca660 : mov esp, 0x8bffdca7 ; ret
0x0000020000110ad0 : mov esp, 0x9024 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000027a984 : mov esp, 0x92004fc2 ; ret
0x000002000025dd9c : mov esp, 0x9d0046c1 ; ret 0x46
0x000002000017559a : mov esp, 0xa7e9ffee ; ret 0xffee
0x00000200000bc79c : mov esp, 0xa824 ; add dh, dh ; ret
0x0000020000011724 : mov esp, 0xab89f2ec ; and bpl, 0xe4 ; ret 0x394e
0x000002000000dc88 : mov esp, 0xb4473c5 ; pop rdi ; xchg eax, ebp ; ret
0x00000200003cc3ca : mov esp, 0xb824 ; add dh, dh ; ret
0x0000020000168ab9 : mov esp, 0xbc24 ; add byte ptr [rdi], cl ; ret
0x000002000008a2ff : mov esp, 0xc28a0021 ; add rsp, 0x28 ; ret
0x00000200006670c6 : mov esp, 0xc48348ff ; jo 0x20000667131 ; ret
0x00000200006670c5 : mov esp, 0xc48348ff ; jo 0x20000667132 ; ret
0x00000200007144b3 : mov esp, 0xc48348ff ; pop rdi ; ret
0x000002000000dd46 : mov esp, 0xc629519f ; ret
0x000002000059687d : mov esp, 0xc78348ff ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200001c2b3c : mov esp, 0xccfff0c2 ; add rsp, 0x28 ; ret
0x0000020000083834 : mov esp, 0xd8d4cc6 ; ret
0x000002000001153f : mov esp, 0xe70b3d35 ; ret
0x0000020000486027 : mov esp, 0xe8cf8b48 ; sub byte ptr [rdi], dh ; ret
0x000002000070c254 : mov esp, 0xe8d233ff ; ret
0x00000200003c8fb4 : mov esp, 0xe8fffbec ; ret
0x00000200005a914e : mov esp, 0xe990ffce ; ret
0x0000020000168abb : mov esp, 0xf000000 ; ret
0x00000200004a0274 : mov esp, 0xf48f0ff ; rcr dword ptr [rbp], -0xa ; ret
0x00000200004a42cc : mov esp, 0xf569e8ff ; ret
0x000002000058e084 : mov esp, 0xf6ccccff ; ret
0x00000200001a834c : mov esp, 0xf6fff662 ; ret
0x000002000000d907 : mov esp, 0xf76cb2a1 ; sub eax, dword ptr [rdi - 0x67] ; ret
0x00000200001b5999 : mov esp, 0xfffff7b5 ; ret
0x000002000041ad17 : mov esp, dword ptr [rax + 0x1e4] ; call rdi
0x0000020000415619 : mov esp, dword ptr [rbp - 0x7bbbffec] ; ret
0x0000020000517619 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000710920 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000159539 : mov esp, dword ptr [rcx + 0x10] ; jmp rdx
0x000002000053cd1b : mov esp, dword ptr [rcx + 8] ; call 0x20000068fd5
0x000002000015ca5f : mov esp, dword ptr [rsp + 0x100] ; sti ; ret
0x00000200001751f0 : mov esp, dword ptr [rsp + rcx*4] ; jmp 0x2000006103a
0x00000200001e49e3 : mov esp, eax ; call 0x200000c0c18
0x0000020000628f7f : mov esp, ebx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004d7500 : mov esp, ebx ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200002023bd : mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f8d68 : mov esp, ebx ; pop r12 ; ret
0x00000200004ba777 : mov esp, ebx ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200000ff041 : mov esp, ebx ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000047c4cd : mov esp, ebx ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000007465b : mov esp, ebx ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000c288d : mov esp, ebx ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000025314 : mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000bf299 : mov esp, ebx ; pop r14 ; ret
0x00000200005030ae : mov esp, ebx ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200004c6385 : mov esp, ebx ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000405e5a : mov esp, ebx ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200001b77f7 : mov esp, ebx ; pop r15 ; pop r13 ; pop rdi ; ret
0x0000020000024e2a : mov esp, ebx ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200001eab02 : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000065ada : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000b9f91 : mov esp, ebx ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001395d2 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000287b3 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003a602c : mov esp, ebx ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000123c28 : mov esp, ebx ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000062e34b : mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000008fa4f : mov esp, ebx ; pop r15 ; ret
0x0000020000083f38 : mov esp, ebx ; pop rbp ; ret
0x000002000004a63a : mov esp, ebx ; pop rdi ; ret
0x00000200005cc4a7 : mov esp, ebx ; pop rsi ; ret
0x000002000044fbcf : mov esp, edi ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x0000020000371924 : mov esp, edi ; jmp 0x20000365486
0x0000020000061789 : mov esp, esi ; jmp 0x20000061039
0x0000020000715181 : mov esp, esi ; ret
0x00000200003906db : mov fs, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000008f735 : mov fs, word ptr [rax + 0x41000000] ; mov edx, edi ; call rax
0x000002000008f434 : mov fs, word ptr [rax + 0x41000000] ; mov edx, esi ; call rax
0x00000200000fb590 : mov fs, word ptr [rsi + 0xa] ; add bh, bh ; ret
0x0000020000167966 : mov gs, esp ; dec dword ptr [rax - 0x75] ; ret
0x000002000044b1fd : mov gs, word ptr [rax + 0x41fffffb] ; call rdi
0x0000020000014a4b : mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x000002000000e23a : mov gs, word ptr [rbx - 0x56883c5e] ; push rcx ; ret 0xcce4
0x00000200004629a0 : mov gs, word ptr [rcx + 0x69] ; adc dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000b030f : mov gs, word ptr [rcx] ; add byte ptr [rcx - 0x73], al ; push rdx ; jmp qword ptr [rbx]
0x0000020000011a9e : mov gs, word ptr [rip + 0x337635d] ; ret 0xcdf4
0x0000020000184f5e : mov gs, word ptr [rsi + 0x3b480014] ; ret
0x000002000000e238 : mov gs, word ptr cs:[rbx - 0x56883c5e] ; push rcx ; ret 0xcce4
0x000002000050a037 : mov qword ptr [r10 + 0x38], r8 ; mov byte ptr [r10 + 0x30], dl ; ret
0x000002000011d280 : mov qword ptr [r10 + 0x50], rax ; mov byte ptr [r10 + 0x5f], r11b ; ret
0x00000200001262d5 : mov qword ptr [r10 + 0x68], rax ; ret
0x0000020000053a25 : mov qword ptr [r10 + 8], rdi ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000010a1af : mov qword ptr [r10], r11 ; ret
0x0000020000468f6c : mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x00000200000e1f0a : mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x00000200000d857f : mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x00000200001ca43d : mov qword ptr [r10], rcx ; mov qword ptr [r11], rdx ; mov eax, r8d ; ret
0x00000200000727e7 : mov qword ptr [r10], rdx ; mov rax, r8 ; ret
0x00000200005b5f4c : mov qword ptr [r11 + 8], rax ; call 0x200001e4d8b
0x00000200000b84f3 : mov qword ptr [r11 + 8], rax ; mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x00000200000fdc5f : mov qword ptr [r11 + r10*8 + 8], rcx ; ret
0x00000200004c15ac : mov qword ptr [r11 - 0x18], rdi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x000002000011913c : mov qword ptr [r11 - 0x28], rax ; call r10
0x0000020000446fca : mov qword ptr [r11 - 0x38], rax ; call r10
0x00000200004c6fb6 : mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200004c15b0 : mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200000f5eef : mov qword ptr [r11], rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000036b4fb : mov qword ptr [r11], rcx ; ret
0x00000200001ca440 : mov qword ptr [r11], rdx ; mov eax, r8d ; ret
0x000002000037ed61 : mov qword ptr [r11], rdx ; ret
0x000002000056bcf7 : mov qword ptr [r12 + 0x18], rax ; jmp 0x20000437f1d
0x00000200005805e4 : mov qword ptr [r14 + 8], r13 ; call 0x200000bf5b8
0x000002000067f9a4 : mov qword ptr [r14], r9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c428b : mov qword ptr [r8 + 0x28], r11 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009fae0 : mov qword ptr [r8 + 0x40], rcx ; ret
0x0000020000149bd9 : mov qword ptr [r8 + 0x600], rdx ; ret
0x0000020000196e36 : mov qword ptr [r8 + 0xf8], rcx ; ret
0x000002000060502e : mov qword ptr [r8 + 8], rax ; cmp dword ptr [r9], r11d ; ja 0x20000604ff2 ; ret
0x0000020000472974 : mov qword ptr [r8 + 8], rax ; jmp 0x20000472924
0x000002000015e014 : mov qword ptr [r8 + 8], rax ; mov al, 1 ; ret
0x000002000049f15e : mov qword ptr [r8 + 8], rax ; xor eax, eax ; ret
0x00000200001d430f : mov qword ptr [r8 + 8], rdx ; ret
0x00000200000e77b1 : mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000e77aa
0x0000020000520422 : mov qword ptr [r8], 1 ; xor eax, eax ; ret
0x000002000008fe74 : mov qword ptr [r8], r10 ; ret
0x00000200000dc097 : mov qword ptr [r8], r9 ; ret
0x00000200005a9f1a : mov qword ptr [r8], rax ; mov al, 1 ; ret
0x0000020000401d2c : mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000055012 : mov qword ptr [r8], rax ; ret
0x000002000008fe99 : mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200000dcff5 : mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200003ff520 : mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x000002000008fcda : mov qword ptr [r8], rcx ; ret
0x0000020000024a0f : mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001bbaa2 : mov qword ptr [r8], rdx ; ret
0x00000200000b491c : mov qword ptr [r8], rdx ; test eax, eax ; js 0x200000b4937 ; ret
0x00000200000b6348 : mov qword ptr [r8], rdx ; test eax, eax ; js 0x200000b636a ; ret
0x00000200001585c6 : mov qword ptr [r9 + 0x18], rax ; mov eax, 2 ; ret
0x0000020000105c48 : mov qword ptr [r9 + 0x20], rax ; ret
0x0000020000667590 : mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200001bc654 : mov qword ptr [r9 + 0x48], rcx ; mov al, 1 ; ret
0x00000200001bc63e : mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x0000020000215154 : mov qword ptr [r9 + 0x48], rdx ; ret
0x0000020000116945 : mov qword ptr [r9 + 0x5448], rax ; ret
0x00000200000ac812 : mov qword ptr [r9 + 8], rax ; ret
0x00000200001c18eb : mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x000002000040cc02 : mov qword ptr [r9], r10 ; ret
0x00000200001c18e0 : mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001ea5fc : mov qword ptr [r9], r8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004af401 : mov qword ptr [r9], r8 ; mov eax, 1 ; ret
0x0000020000095e36 : mov qword ptr [r9], r8 ; ret
0x00000200001fde69 : mov qword ptr [r9], rax ; ret
0x000002000002b55c : mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x0000020000520442 : mov qword ptr [r9], rcx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200001d93d3 : mov qword ptr [r9], rcx ; ret
0x00000200003ba653 : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000020000134847 : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003ecbc2 : mov qword ptr [rax + 0x10], r9 ; ret
0x00000200000ff4ab : mov qword ptr [rax + 0x10], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066435e : mov qword ptr [rax + 0x10], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000223251 : mov qword ptr [rax + 0x12c8], rcx ; ret
0x0000020000516b8a : mov qword ptr [rax + 0x20], rdi ; call 0x2000013c33b
0x00000200001fdbba : mov qword ptr [rax + 0x28], r9 ; ret
0x000002000050c3d6 : mov qword ptr [rax + 0x50], rdx ; mov qword ptr [rdx + 0x30], rcx ; ret
0x0000020000035e7d : mov qword ptr [rax + 0x668], rcx ; ret
0x000002000010c00c : mov qword ptr [rax + 0x670], rdx ; ret
0x00000200000b62e9 : mov qword ptr [rax + 0x738], rcx ; ret
0x0000020000095e61 : mov qword ptr [rax + 8], r8 ; ret
0x00000200001323be : mov qword ptr [rax + 8], r9 ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x0000020000026d3c : mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x00000200000efbda : mov qword ptr [rax + 8], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006715c0 : mov qword ptr [rax + 8], rcx ; and qword ptr [rax + 0x10], 0 ; ret
0x00000200000e2b69 : mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x00000200004d9369 : mov qword ptr [rax + 8], rdx ; ret
0x000002000012ec2f : mov qword ptr [rax - 0x10], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000520337 : mov qword ptr [rax], 1 ; xor eax, eax ; ret
0x000002000008f8f4 : mov qword ptr [rax], 4 ; ret
0x0000020000133ac6 : mov qword ptr [rax], r10 ; ret
0x0000020000095e3f : mov qword ptr [rax], r8 ; ret
0x000002000066888a : mov qword ptr [rax], r9 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006688d6 : mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x00000200007133d8 : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010a204 : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fadfc : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000de1d2 : mov qword ptr [rax], rax ; add rsp, 0x28 ; ret
0x000002000009ef8a : mov qword ptr [rax], rax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x0000020000026d40 : mov qword ptr [rax], rax ; ret
0x0000020000444738 : mov qword ptr [rax], rcx ; jmp 0x20000444704
0x00000200001d430c : mov qword ptr [rax], rcx ; mov qword ptr [r8 + 8], rdx ; ret
0x0000020000520445 : mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200000f9f7b : mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x000002000022c49b : mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x0000020000215151 : mov qword ptr [rax], rdx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x00000200000ec29a : mov qword ptr [rax], rdx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000de573 : mov qword ptr [rax], rdx ; ret
0x00000200006ccbc8 : mov qword ptr [rbp + 0x60], rax ; call r10
0x0000020000538505 : mov qword ptr [rbp + 0x70], r14 ; call qword ptr [r14]
0x00000200003957c9 : mov qword ptr [rbp + 0x70], rsi ; call qword ptr [rsi]
0x00000200004b19d0 : mov qword ptr [rbp - 0x21], r14 ; call 0x2000014dc66
0x0000020000648c24 : mov qword ptr [rbp - 0x30], rdi ; call 0x20000294008
0x00000200000998ed : mov qword ptr [rbp - 0x48], rax ; jmp 0x200000998bb
0x000002000046d496 : mov qword ptr [rbp - 0x48], rbx ; call r14
0x00000200005e14aa : mov qword ptr [rbp - 0x48], rcx ; jne 0x200005e1477 ; jmp 0x200005e14cd
0x00000200003c3fea : mov qword ptr [rbp - 0x50], rax ; call 0x200000702b6
0x00000200004aafff : mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000050195a : mov qword ptr [rbp - 0x61], r14 ; call 0x2000014dc66
0x000002000043c2b0 : mov qword ptr [rbp - 0x70], r14 ; call 0x200000690a7
0x000002000053524d : mov qword ptr [rbp - 9], rax ; call 0x2000015dbc7
0x00000200000e905e : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000203ed3 : mov qword ptr [rbx + 0x10], rax ; mov dword ptr [rbx], esi ; call 0x20000120148
0x00000200005070c4 : mov qword ptr [rbx + 0x28], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011a99c : mov qword ptr [rbx + 0x30], rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001de3ad : mov qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000409091 : mov qword ptr [rbx + 8], rax ; call 0x20000031497
0x000002000049a0f8 : mov qword ptr [rbx + 8], rax ; jmp 0x2000049a0c6
0x00000200004fc3ab : mov qword ptr [rbx + 8], rdx ; jmp 0x200004fc378
0x000002000007017f : mov qword ptr [rbx], r15 ; jmp 0x2000007014a
0x00000200000bf529 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008c879 : mov qword ptr [rbx], rax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000049a0f5 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rax ; jmp 0x2000049a0c9
0x000002000047e367 : mov qword ptr [rbx], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b8088 : mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004fc3a8 : mov qword ptr [rbx], rdx ; mov qword ptr [rbx + 8], rdx ; jmp 0x200004fc37b
0x0000020000095e5b : mov qword ptr [rcx + 0x10], rax ; jmp 0x20000095e28
0x00000200004f7cb1 : mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200000393ac : mov qword ptr [rcx + 0x10], rax ; mov qword ptr [rcx + 0x20], r8 ; ret
0x000002000051ef6c : mov qword ptr [rcx + 0x10], rax ; ret
0x00000200001ff97a : mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000719661 : mov qword ptr [rcx + 0x128], rax ; xor eax, eax ; ret
0x00000200000eb88c : mov qword ptr [rcx + 0x168], rax ; ret
0x0000020000039392 : mov qword ptr [rcx + 0x18], r8 ; mov qword ptr [rcx + 0x38], r8 ; ret
0x0000020000107cb9 : mov qword ptr [rcx + 0x18], r9 ; ret
0x00000200005c9734 : mov qword ptr [rcx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200000fab17 : mov qword ptr [rcx + 0x18], rdx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200000393b0 : mov qword ptr [rcx + 0x20], r8 ; ret
0x000002000065a4ba : mov qword ptr [rcx + 0x20], rax ; ret
0x000002000020a21f : mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x0000020000039396 : mov qword ptr [rcx + 0x38], r8 ; ret
0x0000020000105eb6 : mov qword ptr [rcx + 0x38], r9 ; mov qword ptr [rcx + 0x40], rax ; ret
0x00000200005cee9f : mov qword ptr [rcx + 0x38], rax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x000002000004c921 : mov qword ptr [rcx + 0x38], rdx ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200000fab1b : mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200004c13d0 : mov qword ptr [rcx + 0x3c8], rdx ; ret
0x00000200004c50b4 : mov qword ptr [rcx + 0x3d0], rax ; xor eax, eax ; ret
0x00000200004b30c6 : mov qword ptr [rcx + 0x400], rax ; ret
0x00000200005ceea3 : mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200004ee69f : mov qword ptr [rcx + 0x40], r8 ; mov byte ptr [rcx + 0x48], 0 ; ret
0x0000020000105eba : mov qword ptr [rcx + 0x40], rax ; ret
0x000002000060d918 : mov qword ptr [rcx + 0x448], rdx ; xor eax, eax ; ret
0x0000020000610504 : mov qword ptr [rcx + 0x48], r9 ; ret
0x00000200006104ff : mov qword ptr [rcx + 0x48], rax ; ret
0x000002000013e4f5 : mov qword ptr [rcx + 0x5340], rax ; ret
0x00000200000d10b9 : mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000672af0 : mov qword ptr [rcx + 0x58], rax ; ret
0x00000200000990ba : mov qword ptr [rcx + 0x590], rdx ; ret
0x00000200000d10bd : mov qword ptr [rcx + 0x60], rax ; ret
0x000002000012a76c : mov qword ptr [rcx + 0x670], rdx ; ret
0x00000200000aa88f : mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000aa85c
0x00000200003708ea : mov qword ptr [rcx + 0x70], rax ; mov dword ptr [rcx + 0x78], eax ; ret
0x000002000015e0e8 : mov qword ptr [rcx + 0x70], rdx ; ret
0x00000200004bf7b2 : mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x000002000015e350 : mov qword ptr [rcx + 0x88], rdx ; xor eax, eax ; ret
0x00000200006741d2 : mov qword ptr [rcx + 0xe0], rax ; ret
0x000002000066afe5 : mov qword ptr [rcx + 8], -0x21520ff3 ; ret
0x00000200005f4f17 : mov qword ptr [rcx + 8], r9 ; ret
0x00000200000dab43 : mov qword ptr [rcx + 8], rax ; add rsp, 0x28 ; ret
0x000002000016aa32 : mov qword ptr [rcx + 8], rax ; mov qword ptr [rdx], rax ; ret
0x00000200000f5851 : mov qword ptr [rcx + 8], rax ; ret
0x000002000051ef68 : mov qword ptr [rcx + 8], rcx ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000015e0c0 : mov qword ptr [rcx + 8], rcx ; ret
0x000002000010392b : mov qword ptr [rcx + 8], rdx ; ret
0x000002000066f93f : mov qword ptr [rcx + r9], rax ; ret
0x00000200000b84f7 : mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x0000020000159eb1 : mov qword ptr [rcx - 8], rax ; jne 0x20000159e96 ; ret
0x000002000011ee84 : mov qword ptr [rcx], 0 ; ret
0x0000020000668922 : mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200001e56ab : mov qword ptr [rcx], r8 ; ret
0x00000200000ed1e7 : mov qword ptr [rcx], r9 ; mov eax, r8d ; ret
0x00000200001323c2 : mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x00000200005f3405 : mov qword ptr [rcx], r9 ; ret
0x000002000061d281 : mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x000002000015e22a : mov qword ptr [rcx], rax ; mov eax, 0xc00000bb ; ret
0x000002000067400e : mov qword ptr [rcx], rax ; mov eax, 1 ; ret
0x000002000049f15b : mov qword ptr [rcx], rax ; mov qword ptr [r8 + 8], rax ; xor eax, eax ; ret
0x000002000052037e : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000fea88 : mov qword ptr [rcx], rax ; ret
0x00000200000d4c7f : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000025a8b : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200000ec9a2 : mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200004c0ff0 : mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200004d9366 : mov qword ptr [rcx], rdx ; mov qword ptr [rax + 8], rdx ; ret
0x00000200000f584e : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rax ; ret
0x000002000044ca4c : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200000b5cfa : mov qword ptr [rcx], rdx ; ret
0x00000200005205dc : mov qword ptr [rcx], rdx ; xor al, al ; ret
0x000002000043965e : mov qword ptr [rdi + 0x30], rax ; call 0x200000690e7
0x0000020000520217 : mov qword ptr [rdi + 0x50], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043b6cb : mov qword ptr [rdi + 0x78], rax ; call 0x20000068fd7
0x0000020000209034 : mov qword ptr [rdi], r9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049ea79 : mov qword ptr [rdi], rdi ; jmp 0x2000049e9b4
0x000002000051bc1a : mov qword ptr [rdi], rsi ; jmp 0x2000051bbe5
0x00000200001049d6 : mov qword ptr [rdx + 0x10], rax ; add rsp, 0x38 ; ret
0x00000200000e0aa4 : mov qword ptr [rdx + 0x10], rax ; ret
0x000002000002ba00 : mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000681237 : mov qword ptr [rdx + 0x120], rax ; xor eax, eax ; ret
0x000002000009db6a : mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x00000200005c15cc : mov qword ptr [rdx + 0x28], rax ; ret
0x00000200005c15bf : mov qword ptr [rdx + 0x28], rcx ; mov qword ptr [rdx + 0x38], rax ; ret
0x00000200004f45cf : mov qword ptr [rdx + 0x28], rcx ; ret
0x000002000050c3da : mov qword ptr [rdx + 0x30], rcx ; ret
0x00000200002154bc : mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200005c15c3 : mov qword ptr [rdx + 0x38], rax ; ret
0x00000200005c15f0 : mov qword ptr [rdx + 0x48], rax ; ret
0x00000200000b6304 : mov qword ptr [rdx + 0x738], rcx ; ret
0x00000200000f27da : mov qword ptr [rdx + 8], r8 ; ret
0x00000200004315a5 : mov qword ptr [rdx + 8], rax ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000c4d4e : mov qword ptr [rdx + 8], rax ; jmp 0x200000c4d1c
0x0000020000368397 : mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000b5cf6 : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x000002000044ca4f : mov qword ptr [rdx + 8], rcx ; ret
0x00000200004add30 : mov qword ptr [rdx + r9*8 + 0x70], rcx ; inc dword ptr [rdx + 0x6c] ; ret
0x000002000010885b : mov qword ptr [rdx + rax], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000aa87c : mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x0000020000666554 : mov qword ptr [rdx], r11 ; mov rax, r9 ; ret
0x000002000037933e : mov qword ptr [rdx], r8 ; add rsp, 0x28 ; ret
0x00000200003ac3db : mov qword ptr [rdx], r9 ; mov al, 1 ; ret
0x000002000020a315 : mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x00000200005def66 : mov qword ptr [rdx], rax ; mov eax, r8d ; ret
0x000002000012f92d : mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200003850ab : mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x0000020000033773 : mov qword ptr [rdx], rax ; ret
0x000002000013e37e : mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000148d43 : mov qword ptr [rdx], rcx ; add rsp, 0x38 ; ret
0x00000200001bbad3 : mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x000002000043832e : mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000061ed15 : mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x0000020000120f50 : mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x00000200000c8869 : mov qword ptr [rdx], rcx ; ret
0x0000020000209086 : mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200001cd399 : mov qword ptr [rip + 0x107db8], rcx ; ret
0x0000020000568f4c : mov qword ptr [rip + 0x1417c5], rax ; ret
0x000002000013fd4c : mov qword ptr [rip + 0x15814d], rax ; xor eax, eax ; ret
0x000002000012e24f : mov qword ptr [rip + 0x174d12], rdx ; call 0x2000068a46d
0x000002000052039b : mov qword ptr [rip + 0x18a37e], rax ; ret
0x0000020000134ab0 : mov qword ptr [rip + 0x19b401], rdx ; ret
0x00000200001030b6 : mov qword ptr [rip + 0x1c4d7b], rax ; ret
0x00000200001cbe0c : mov qword ptr [rip + 0xd711d], rcx ; ret
0x00000200001dd559 : mov qword ptr [rip + 0xec5a8], rcx ; ret
0x0000020000471f28 : mov qword ptr [rip - 0x1c20a7], rcx ; ret
0x00000200004d2a49 : mov qword ptr [rip - 0x1ff1c8], rcx ; ret
0x00000200004cb5a7 : mov qword ptr [rip - 0x22565e], r10 ; ret
0x000002000051fbe8 : mov qword ptr [rip - 0x249d3f], rax ; ja 0x2000051fbfb ; ret
0x000002000057d6e9 : mov qword ptr [rip - 0x2cd838], rcx ; ret
0x00000200005f4dd2 : mov qword ptr [rip - 0x32b961], rcx ; jmp 0x200005f4da6
0x00000200005f4eb0 : mov qword ptr [rip - 0x32ba3f], rcx ; jmp 0x200005f4e84
0x00000200007187e3 : mov qword ptr [rip - 0x3c6db2], rax ; ret
0x0000020000678bd0 : mov qword ptr [rip - 0x3caf6f], rcx ; ret
0x000002000071833b : mov qword ptr [rip - 0x4389d2], rax ; ret
0x0000020000718c9a : mov qword ptr [rip - 0x469381], rcx ; ret
0x0000020000161c48 : mov qword ptr [rsi], rdi ; jmp 0x20000161c13
0x0000020000499e71 : mov qword ptr [rsp + 0x20], r12 ; call qword ptr [rsi]
0x000002000056aa94 : mov qword ptr [rsp + 0x20], r12 ; call r10
0x00000200004926db : mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000059d4c1 : mov qword ptr [rsp + 0x20], r13 ; call 0x200004997cb
0x0000020000567701 : mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200004028c4 : mov qword ptr [rsp + 0x20], r13 ; call rax
0x0000020000703b30 : mov qword ptr [rsp + 0x20], r14 ; call 0x2000047fd9b
0x0000020000406d75 : mov qword ptr [rsp + 0x20], r14 ; call 0x200004c3037
0x00000200005bdd03 : mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200003cf06e : mov qword ptr [rsp + 0x20], r14 ; call rax
0x0000020000724e13 : mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a7
0x0000020000724e70 : mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a8
0x0000020000724e6f : mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a9
0x000002000058a688 : mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x000002000056ab5c : mov qword ptr [rsp + 0x20], r15 ; call rax
0x000002000015e3aa : mov qword ptr [rsp + 0x20], r9 ; ret
0x00000200003ed3eb : mov qword ptr [rsp + 0x20], rax ; add rsp, 0x38 ; ret
0x00000200005ccf37 : mov qword ptr [rsp + 0x20], rax ; call 0x200000691b7
0x00000200004d7a16 : mov qword ptr [rsp + 0x20], rax ; call 0x200000ff578
0x0000020000235ef2 : mov qword ptr [rsp + 0x20], rax ; call 0x2000013211b
0x00000200006f1a1e : mov qword ptr [rsp + 0x20], rax ; call 0x2000014dce7
0x000002000051f166 : mov qword ptr [rsp + 0x20], rax ; call 0x2000014e628
0x0000020000234e43 : mov qword ptr [rsp + 0x20], rax ; call 0x200001510a7
0x00000200007071fc : mov qword ptr [rsp + 0x20], rax ; call 0x200003a345b
0x00000200005dc22f : mov qword ptr [rsp + 0x20], rax ; call 0x200004184eb
0x000002000042f9e9 : mov qword ptr [rsp + 0x20], rax ; call 0x2000042bc13
0x00000200006fd9a6 : mov qword ptr [rsp + 0x20], rax ; call 0x200004f9c03
0x00000200005b9898 : mov qword ptr [rsp + 0x20], rax ; call 0x200005d5b77
0x0000020000665265 : mov qword ptr [rsp + 0x20], rax ; call 0x2000067147f
0x0000020000619ccc : mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x0000020000499d3d : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x00000200000e3dad : mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200000423be : mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000045f746 : mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200004b1fd3 : mov qword ptr [rsp + 0x20], rax ; call r14
0x00000200001b8a5a : mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200005ccdd5 : mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200004c6fef : mov qword ptr [rsp + 0x20], rax ; call rdi
0x000002000040db14 : mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000044e323 : mov qword ptr [rsp + 0x20], rax ; xor edx, edx ; call 0x200003ca569
0x000002000049e6e3 : mov qword ptr [rsp + 0x20], rbp ; and edx, 1 ; call rdi
0x000002000067c29f : mov qword ptr [rsp + 0x20], rbx ; call 0x20000108517
0x000002000051f0ba : mov qword ptr [rsp + 0x20], rbx ; call 0x2000014ddc8
0x0000020000672dc3 : mov qword ptr [rsp + 0x20], rdi ; call rax
0x00000200004c7b59 : mov qword ptr [rsp + 0x20], rdi ; call rsi
0x0000020000461e0e : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200003c8074 : mov qword ptr [rsp + 0x28], r14 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200001fbcc4 : mov qword ptr [rsp + 0x28], r8 ; call rdx
0x000002000051c178 : mov qword ptr [rsp + 0x30], rax ; call 0x2000013e350
0x0000020000593b7e : mov qword ptr [rsp + 0x30], rbp ; mov dword ptr [rsp + 0x38], esi ; call rax
0x000002000059456b : mov qword ptr [rsp + 0x30], rdi ; call rax
0x00000200004ee17c : mov qword ptr [rsp + 0x38], rbx ; call rdi
0x00000200005a8097 : mov qword ptr [rsp + 0x38], rcx ; call 0x200001ca198
0x00000200004b8735 : mov qword ptr [rsp + 0x40], r15 ; inc edx ; jmp 0x200004b86fa
0x000002000048e87f : mov qword ptr [rsp + 0x48], rax ; call 0x200003cab17
0x00000200003fad11 : mov qword ptr [rsp + 0x48], rcx ; jmp 0x200003fad25
0x000002000063bc0f : mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000063bbea
0x00000200006d170a : mov qword ptr [rsp + 0x58], rax ; call r10
0x00000200006d0dfd : mov qword ptr [rsp + 0x60], rax ; call r10
0x00000200003bcbd9 : mov qword ptr [rsp + 0x78], r13 ; call 0x200003b8e57
0x0000020000149aa4 : mov qword ptr [rsp + 0x78], rax ; call r11
0x00000200003b2460 : mov qword ptr [rsp + rcx*8 + 0x50], rax ; inc edx ; jmp 0x200003b2457
0x00000200005805e3 : mov qword ptr cs:[r14 + 8], r13 ; call 0x200000bf5b9
0x0000020000230055 : mov r10, qword ptr [r10 + rax*8] ; jmp 0x20000230061
0x000002000019eb44 : mov r10, qword ptr [r10 + rax*8] ; movzx r8d, r14w ; call r10
0x000002000039020d : mov r10, qword ptr [rsp + 0x48] ; jmp 0x200003901dd
0x000002000021030f : mov r10, rdx ; test rax, rax ; jne 0x20000210320 ; ret
0x00000200000f9f78 : mov r10b, 1 ; mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x000002000049d59b : mov r10d, 0x5f ; jmp 0x2000049d56d
0x0000020000648218 : mov r10d, 0xc0000225 ; mov eax, r10d ; ret
0x000002000000e6dc : mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000060e511 : mov r10d, eax ; mov eax, r10d ; jmp 0x2000060e523
0x000002000040a3ed : mov r10d, r9d ; call 0x200004066f9
0x000002000015d72a : mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x0000020000010fe8 : mov r11d, r10d ; ret
0x0000020000517618 : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000071091f : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000053cd1a : mov r12, qword ptr [rcx + 8] ; call 0x20000068fd6
0x0000020000371923 : mov r12, rdi ; jmp 0x20000365487
0x00000200004908d7 : mov r12b, 0xf6 ; ret 0xf07
0x000002000041ad16 : mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x00000200001e49e2 : mov r12d, eax ; call 0x200000c0c19
0x0000020000061788 : mov r12d, esi ; jmp 0x2000006103a
0x0000020000640b6b : mov r13, qword ptr [rax] ; jmp 0x20000640b37
0x0000020000640b6a : mov r13, qword ptr [rax] ; jmp 0x20000640b38
0x0000020000640b69 : mov r13, qword ptr [rax] ; jmp 0x20000640b39
0x0000020000159d51 : mov r13, rax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200001b5f3c : mov r13d, dword ptr [rbp - 0x41] ; mov r8d, ebx ; jmp 0x20000132202
0x00000200006ca2c2 : mov r13d, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x00000200006e48b6 : mov r13d, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x00000200006f4210 : mov r13d, ebx ; jmp 0x200006f41e6
0x00000200003f60c1 : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000083f33 : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000100c3a : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x00000200000e26f9 : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200002129f8 : mov r14, qword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000125675 : mov r14, qword ptr [rsp + 0x20] ; ret
0x0000020000159d54 : mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200006d4912 : mov r14, rdx ; lea edx, dword ptr [rdi + 0x18] ; call rbx
0x00000200006d4b44 : mov r14, rdx ; lea edx, dword ptr [rdi + 0x202] ; call rbx
0x00000200006d5089 : mov r14, rdx ; lea edx, dword ptr [rdi + 0x48] ; call rbx
0x00000200006d54e8 : mov r14, rdx ; lea edx, dword ptr [rdi + 0x50] ; call rbx
0x00000200006d528b : mov r14, rdx ; lea edx, dword ptr [rdi + 0x58] ; call rbx
0x00000200006d4e55 : mov r14, rdx ; lea edx, dword ptr [rdi + 0x88] ; call rbx
0x000002000040dcf9 : mov r14b, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x0000020000594ab2 : mov r14b, al ; jmp 0x200004bd060
0x00000200000e01a0 : mov r14d, 0xc0000021 ; jmp 0x200000e0158
0x00000200006e29fd : mov r14d, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x0000020000147988 : mov r14d, r10d ; mov r8d, edx ; jmp 0x200001479b2
0x00000200007055f2 : mov r15, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ac3c : mov r15, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000141304 : mov r15, qword ptr [rsp + r13*8 + 0x220] ; jmp 0x200001412d9
0x0000020000159d57 : mov r15, rax ; jmp rsi
0x000002000066b57c : mov r15, rax ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x000002000039300a : mov r15b, 0 ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x00000200001e0545 : mov r15b, 0xff ; ret
0x0000020000147985 : mov r15b, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x200001479b5
0x0000020000241004 : mov r15b, 4 ; add al, ch ; jmp qword ptr [rbx]
0x0000020000586698 : mov r15b, sil ; jmp 0x200004928d5
0x00000200006171b0 : mov r15d, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x000002000040ac85 : mov r15d, 0x8b068941 ; ret
0x00000200001479a2 : mov r15d, 0x8b4492eb ; ret 0x8b44
0x0000020000641056 : mov r15d, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200004f2ee7 : mov r15d, 0xffc7558b ; ret 0x5589
0x0000020000408c26 : mov r15d, eax ; call 0x20000031496
0x0000020000611217 : mov r15d, eax ; call 0x20000068fd9
0x00000200003cc9f3 : mov r8, qword ptr [r14 + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x00000200001e033d : mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x00000200004becc9 : mov r8, qword ptr [rbx + 0x28] ; call 0x200000e1ac7
0x0000020000701379 : mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200001bbb7f : mov r8, qword ptr [rbx + 0x38] ; mov ecx, 1 ; call rax
0x0000020000375271 : mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x0000020000149b93 : mov r8, qword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x00000200001c2e62 : mov r8, qword ptr [rip + 0x18e697] ; call r8
0x00000200001b1c9c : mov r8, qword ptr [rip + 0x19f85d] ; call r8
0x00000200000dc8bd : mov r8, qword ptr [rip + 0x274c3c] ; call r8
0x0000020000175536 : mov r8, qword ptr [rsp + 0x50] ; jmp 0x20000061846
0x00000200000aa8b8 : mov r8, r10 ; jmp 0x200000aa881
0x000002000021793e : mov r8, r10 ; jmp 0x20000217959
0x00000200004a6a39 : mov r8, r11 ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x00000200000b589e : mov r8, r12 ; mov rcx, rdi ; call r14
0x00000200005ccdd2 : mov r8, r13 ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000c73f8 : mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200000f7d45 : mov r8, r14 ; call rax
0x00000200000ef8b9 : mov r8, r14 ; mov rcx, rbx ; call rax
0x000002000009db14 : mov r8, r14 ; mov rcx, rdi ; mov bl, al ; call rsi
0x000002000066b71e : mov r8, r15 ; mov rdx, rbp ; mov rcx, r13 ; call rax
0x000002000051526e : mov r8, r15 ; mov rdx, rsi ; call rax
0x000002000068080e : mov r8, rax ; add rsp, 0x38 ; jmp r9
0x00000200004d7f9a : mov r8, rax ; call 0x200000ff576
0x000002000055ddfb : mov r8, rax ; call 0x200005f91cd
0x0000020000233569 : mov r8, rax ; jmp 0x2000022f7a9
0x0000020000063e03 : mov r8, rax ; jne 0x20000063e48 ; ret
0x000002000050c4b8 : mov r8, rbx ; call 0x200001389d2
0x00000200001d5c2d : mov r8, rbx ; call rdi
0x0000020000704523 : mov r8, rbx ; mov dl, 1 ; call 0x200003b076f
0x00000200001bc862 : mov r8, rbx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000003cc7f : mov r8, rbx ; mov rcx, rsi ; call rdi
0x000002000022b32f : mov r8, rcx ; mov rax, r8 ; ret
0x000002000050c78a : mov r8, rdi ; call 0x200001389d1
0x000002000050ce14 : mov r8, rdi ; call 0x20000138ba6
0x00000200004935ae : mov r8, rdi ; call rax
0x00000200006728ca : mov r8, rdi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000045c6cd : mov r8, rdi ; sub r8, rdx ; jmp 0x2000045c6ca
0x00000200003d2225 : mov r8, rdx ; mov dl, sil ; call r10
0x00000200004b7b88 : mov r8, rdx ; mov rax, r8 ; ret
0x00000200004c8aa2 : mov r8, rdx ; mov rdx, r10 ; jmp r11
0x0000020000672955 : mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200000c96f2 : mov r8, rsi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x000002000038cc4f : mov r8, rsi ; mov rdx, r12 ; mov rcx, rbp ; call rax
0x00000200003c3fac : mov r8b, 0x3b ; ror dword ptr [rdi], -0x7e ; ret 0xfffd
0x00000200001bf0e0 : mov r8b, 1 ; mov al, r8b ; ret
0x000002000070d4c7 : mov r8b, 1 ; xor edx, edx ; call 0x200000e9747
0x000002000063e54f : mov r8b, 2 ; mov rcx, rax ; call 0x2000047a804
0x00000200001cd77e : mov r8b, dl ; jmp 0x200001cd7cc
0x000002000002a803 : mov r8b, r10b ; jmp 0x2000002a7a5
0x0000020000464854 : mov r8b, r11b ; call r12
0x000002000056d2ab : mov r8b, r13b ; imul ah ; push rsi ; ret
0x00000200001bc154 : mov r8d, 0x10 ; call 0x20000158378
0x00000200006449ad : mov r8d, 0x20019 ; call 0x200004f0c0c
0x00000200005f7d79 : mov r8d, 0x20206d4d ; call 0x20000294008
0x0000020000404998 : mov r8d, 0x20207050 ; call 0x20000032fc9
0x00000200005118cf : mov r8d, 0x2c ; call 0x20000141179
0x000002000066d712 : mov r8d, 0x566c6148 ; call 0x20000294009
0x0000020000667f57 : mov r8d, 0x61446656 ; call 0x20000294009
0x000002000067324b : mov r8d, 0x62535442 ; call 0x20000294009
0x00000200003f7d9d : mov r8d, 0x63536d4d ; call 0x20000294008
0x000002000067322c : mov r8d, 0x6d535442 ; call 0x20000294009
0x0000020000664dac : mov r8d, 0x6f7649 ; call 0x20000294009
0x0000020000627d0c : mov r8d, 0x73494457 ; call 0x20000294008
0x0000020000167d0c : mov r8d, 0x76456552 ; call 0x20000294008
0x00000200001d78a6 : mov r8d, 0xc000000e ; mov eax, r8d ; ret
0x00000200007303bd : mov r8d, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x00000200001d9275 : mov r8d, 1 ; mov eax, r8d ; ret
0x000002000064eb6c : mov r8d, 6 ; call rax
0x000002000051682d : mov r8d, 8 ; call 0x20000141249
0x00000200005ae44a : mov r8d, dword ptr [rbx] ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x0000020000471113 : mov r8d, dword ptr [rsi + 4] ; mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x00000200004b4f0d : mov r8d, eax ; call 0x20000141175
0x000002000040dd7f : mov r8d, eax ; call rsi
0x00000200006673fd : mov r8d, ebp ; call 0x20000294006
0x000002000053d967 : mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000053d5fc : mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200001b5f40 : mov r8d, ebx ; jmp 0x200001321fe
0x00000200003a27eb : mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200005bdec8 : mov r8d, ebx ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x0000020000367fb0 : mov r8d, ebx ; xor edx, edx ; call 0x20000364253
0x000002000040c364 : mov r8d, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200005a1dbc : mov r8d, edi ; mov rdx, rsi ; mov rcx, rbx ; call rax
0x0000020000439e0b : mov r8d, edx ; call 0x20000065ec6
0x000002000007386e : mov r8d, edx ; jmp 0x200000737f6
0x00000200000def11 : mov r8d, edx ; jmp 0x200000dee98
0x000002000014798b : mov r8d, edx ; jmp 0x200001479af
0x000002000014798a : mov r8d, edx ; jmp 0x200001479b0
0x00000200006cb9ac : mov r8d, edx ; jmp 0x200006cb9b9
0x000002000053d3c1 : mov r8d, esi ; add rcx, rbx ; call 0x2000015d889
0x000002000066caf0 : mov r8d, esi ; call rax
0x000002000013004f : mov r8d, r10d ; jmp 0x20000130013
0x00000200006e97f9 : mov r8d, r10d ; mov ecx, 0x200 ; call r11
0x00000200006718f0 : mov r8d, r11d ; jmp 0x20000671904
0x00000200005f3989 : mov r8d, r12d ; mov ecx, r14d ; call 0x200000bfc80
0x00000200005054a0 : mov r8d, r12d ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004a690d : mov r8d, r12d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000439599 : mov r8d, r13d ; mov edx, r13d ; call 0x20000065ec9
0x0000020000614f5e : mov r8d, r14d ; call 0x20000141175
0x0000020000551623 : mov r8d, r14d ; call 0x2000015d885
0x00000200003ff5fb : mov r8d, r14d ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000019ea71 : mov r8d, r14d ; shr r8d, 0x10 ; call r10
0x000002000064b92d : mov r8d, r15d ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200004c6fb3 : mov r8d, r9d ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x000002000045f743 : mov r8d, r9d ; mov qword ptr [rsp + 0x20], rax ; call r12
0x0000020000486d12 : mov r9, qword ptr [rip - 0x135c39] ; call r9
0x00000200004ab864 : mov r9, qword ptr [rip - 0x15a78b] ; call r9
0x00000200004ae072 : mov r9, qword ptr [rip - 0x15cf99] ; call r9
0x00000200004bb109 : mov r9, qword ptr [rip - 0x16a030] ; call r9
0x00000200004da2ea : mov r9, qword ptr [rip - 0x189211] ; call r9
0x00000200005d4f4e : mov r9, qword ptr [rip - 0x283e75] ; call r9
0x00000200005d776f : mov r9, qword ptr [rip - 0x286696] ; call r9
0x00000200005d801f : mov r9, qword ptr [rip - 0x286f46] ; call r9
0x00000200000c73f5 : mov r9, r14 ; mov r8, r13 ; mov rcx, r15 ; call rax
0x000002000050ce11 : mov r9, r15 ; mov r8, rdi ; call 0x20000138ba9
0x000002000064eb69 : mov r9, r8 ; mov r8d, 6 ; call rax
0x00000200000e1851 : mov r9, rax ; jne 0x200000e185c ; ret
0x0000020000672d18 : mov r9, rbx ; mov rcx, r14 ; call rax
0x00000200003683b6 : mov r9, rcx ; je 0x200003683c6 ; mov al, r10b ; ret
0x00000200003683b6 : mov r9, rcx ; je 0x200003683c7 ; mov al, r10b ; ret
0x00000200004d4f4b : mov r9, rcx ; jne 0x200004d4f5a ; mov al, 1 ; ret
0x00000200004b56b8 : mov r9, rdi ; call 0x200000e1c0e
0x000002000070aaad : mov r9, rdx ; mov rax, r9 ; ret
0x00000200003aa666 : mov r9b, r13b ; ret 0xfff7
0x0000020000712ebc : mov r9d, 0x58b48ff ; jp 0x20000712f35 ; ret
0x00000200002155b4 : mov r9d, 0xc000000d ; mov eax, r9d ; ret
0x0000020000713175 : mov r9d, 0xcb8348ff ; dec dword ptr [rax - 0x39] ; ret 0x7400
0x0000020000585ede : mov r9d, 1 ; jmp 0x200004921ec
0x0000020000666f49 : mov r9d, 1 ; mov eax, r9d ; ret
0x00000200004bbe8f : mov r9d, 2 ; call rax
0x00000200004e3f9c : mov r9d, 3 ; call rax
0x00000200001c36c9 : mov r9d, 7 ; call 0x200000af910
0x000002000012798e : mov r9d, dword ptr [r13 - 0x75] ; ret 0xd78b
0x000002000040dd7c : mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000437123 : mov r9d, edx ; je 0x20000437136 ; add rsp, 0x28 ; ret
0x00000200000ca994 : mov r9d, r11d ; mov eax, r11d ; pop rdi ; ret
0x000002000066b382 : mov r9d, r15d ; mov rcx, r13 ; mov rdx, r12 ; call rax
0x0000020000238a5d : mov rax, cr0 ; cmp al, 2 ; jae 0x20000238a70 ; xor eax, eax ; ret
0x00000200000b28fd : mov rax, cr0 ; ret
0x0000020000055db2 : mov rax, cr3 ; mov cr3, rax ; ret
0x0000020000159210 : mov rax, cr3 ; ret
0x00000200000b28fc : mov rax, cr8 ; ret
0x000002000006ad49 : mov rax, qword ptr [0x188] ; ret
0x00000200000a90b9 : mov rax, qword ptr [r10 + 0x50] ; lea rax, qword ptr [rax + r9*8] ; ret
0x0000020000701481 : mov rax, qword ptr [r13 + rax*8 + 0x2d6f68] ; call rax
0x0000020000205a2b : mov rax, qword ptr [r8 + 0x410] ; ret
0x000002000010fdd1 : mov rax, qword ptr [r8 + 0x80] ; ret
0x00000200003cab3c : mov rax, qword ptr [r8 + rax*8 - 1] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200001fde64 : mov rax, qword ptr [r8 + rcx + 0x58] ; mov qword ptr [r9], rax ; ret
0x0000020000195e6b : mov rax, qword ptr [r8] ; jmp 0x200000ccba0
0x00000200001968f2 : mov rax, qword ptr [r8] ; jmp 0x200000ce6dd
0x00000200005e0c49 : mov rax, qword ptr [r8] ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000002000021d70c : mov rax, qword ptr [r8] ; not rax ; or rax, rdx ; jmp 0x2000021d72e
0x00000200004fc6c8 : mov rax, qword ptr [r9 + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200000d0c0b : mov rax, qword ptr [r9 + 0x38] ; mov byte ptr [rax], cl ; ret
0x000002000044223b : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x2000044223f ; ret
0x00000200001c4615 : mov rax, qword ptr [rax + 0x18] ; ret
0x00000200000ead3a : mov rax, qword ptr [rax + 0x1c8] ; ret
0x0000020000389255 : mov rax, qword ptr [rax + 0x20] ; ret
0x00000200006cf08c : mov rax, qword ptr [rax + 0x220] ; jmp rax
0x000002000010a4f5 : mov rax, qword ptr [rax + 0x220] ; ret
0x00000200005d5e31 : mov rax, qword ptr [rax + 0x28] ; ret
0x000002000067414b : mov rax, qword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200002059f1 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001cbda8 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x200001cbdbc ; call rax
0x000002000015e310 : mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000eca7c : mov rax, qword ptr [rax + 0x398] ; ret
0x00000200001032e9 : mov rax, qword ptr [rax + 0x40] ; ret
0x00000200000f6f08 : mov rax, qword ptr [rax + 0x418] ; ret
0x0000020000389251 : mov rax, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x00000200001cbe84 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x200001cbe98 ; call rax
0x00000200001bda5b : mov rax, qword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001cbd6c : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x200001cbd80 ; call rax
0x000002000002e2d1 : mov rax, qword ptr [rax + 0x620] ; ret
0x00000200000f8e7d : mov rax, qword ptr [rax + 0x628] ; ret
0x00000200004a6ee4 : mov rax, qword ptr [rax + 0x640] ; ret
0x00000200000eb8d1 : mov rax, qword ptr [rax + 0x668] ; ret
0x00000200001315e8 : mov rax, qword ptr [rax + 0x70] ; test rax, rax ; jne 0x200001315fb ; ret
0x00000200000f43f9 : mov rax, qword ptr [rax + 0x738] ; ret
0x00000200000b1cf9 : mov rax, qword ptr [rax + 0xb8] ; ret
0x00000200000e4c85 : mov rax, qword ptr [rax + 0xf0] ; ret
0x00000200006f459e : mov rax, qword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001048ff : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200000ead18 : mov rax, qword ptr [rax + 8] ; ret
0x0000020000036429 : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x2000003643c ; ret
0x0000020000393eb0 : mov rax, qword ptr [rax + rcx*8] ; add rax, r10 ; ret
0x0000020000547f35 : mov rax, qword ptr [rax + rcx*8] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x0000020000514dba : mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200005b5e60 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x000002000022cdfd : mov rax, qword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000e0aa1 : mov rax, qword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000200000dea92 : mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x000002000015df4a : mov rax, qword ptr [rax] ; ret
0x00000200001cbe24 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x200001cbe36 ; call rax
0x0000020000640b67 : mov rax, qword ptr [rbp + 0x40] ; mov r13, qword ptr [rax] ; jmp 0x20000640b3b
0x000002000064bb86 : mov rax, qword ptr [rbp + 0x50] ; jmp 0x2000064bb54
0x000002000015d495 : mov rax, qword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x00000200003be261 : mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x200003be279 ; call rax
0x00000200000e18c3 : mov rax, qword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f7d41 : mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x00000200004b04b8 : mov rax, qword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001d136f : mov rax, qword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001d1391
0x000002000015dccc : mov rax, qword ptr [rcx + 0x10] ; ret
0x000002000049f1b8 : mov rax, qword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200000fea8c : mov rax, qword ptr [rcx + 0x1c8] ; ret
0x00000200004c7155 : mov rax, qword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x00000200005204c4 : mov rax, qword ptr [rcx + 0x20] ; ret
0x00000200000f8e48 : mov rax, qword ptr [rcx + 0x220] ; ret
0x000002000010ba15 : mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000038ac93 : mov rax, qword ptr [rcx + 0x28] ; test rax, rax ; je 0x2000038acbe ; call rax
0x0000020000104794 : mov rax, qword ptr [rcx + 0x2d0] ; ret
0x00000200000e1c78 : mov rax, qword ptr [rcx + 0x2e0] ; ret
0x00000200004c7135 : mov rax, qword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000fdb4c : mov rax, qword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000015e30c : mov rax, qword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000431588 : mov rax, qword ptr [rcx + 0x30] ; test rax, rax ; jne 0x2000043159b ; ret
0x00000200000f92a0 : mov rax, qword ptr [rcx + 0x398] ; ret
0x00000200000fdb44 : mov rax, qword ptr [rcx + 0x3a0] ; ret
0x000002000010a88c : mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000102668 : mov rax, qword ptr [rcx + 0x3c8] ; ret
0x0000020000107ed0 : mov rax, qword ptr [rcx + 0x3d0] ; ret
0x00000200000febe8 : mov rax, qword ptr [rcx + 0x3e8] ; ret
0x0000020000108724 : mov rax, qword ptr [rcx + 0x410] ; ret
0x00000200000f7ec4 : mov rax, qword ptr [rcx + 0x418] ; ret
0x00000200004b6264 : mov rax, qword ptr [rcx + 0x448] ; ret
0x000002000015e024 : mov rax, qword ptr [rcx + 0x450] ; ret
0x000002000015dcd4 : mov rax, qword ptr [rcx + 0x458] ; ret
0x000002000061a227 : mov rax, qword ptr [rcx + 0x48] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x00000200001ea0fc : mov rax, qword ptr [rcx + 0x50] ; add rax, r8 ; ret
0x00000200000de59c : mov rax, qword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200001c4a3e : mov rax, qword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x00000200001010d4 : mov rax, qword ptr [rcx + 0x620] ; ret
0x00000200000faafc : mov rax, qword ptr [rcx + 0x628] ; ret
0x0000020000123ce4 : mov rax, qword ptr [rcx + 0x670] ; ret
0x000002000013fd81 : mov rax, qword ptr [rcx + 0x678] ; ret
0x0000020000520508 : mov rax, qword ptr [rcx + 0x6a8] ; ret
0x0000020000454387 : mov rax, qword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000520510 : mov rax, qword ptr [rcx + 0x770] ; ret
0x00000200000d7c2c : mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000157d00 : mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x0000020000103730 : mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000010367c : mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x000002000002b9d0 : mov rax, qword ptr [rcx + 8] ; ret
0x00000200001d9660 : mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x000002000013fb13 : mov rax, qword ptr [rcx + rax*8] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x0000020000025afb : mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000115cde : mov rax, qword ptr [rcx] ; dec rax ; xchg qword ptr [rcx], rax ; ret
0x000002000008f128 : mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x2000008f12d ; ret
0x00000200001c460c : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x200001c461d ; ret
0x0000020000668446 : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x2000066842c ; ret
0x0000020000671adb : mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x00000200000de594 : mov rax, qword ptr [rdx + 0x220] ; ret
0x000002000066afff : mov rax, qword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200004c441f : mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200000de5a9 : mov rax, qword ptr [rdx + 0xb8] ; ret
0x0000020000103cac : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000214eff : mov rax, qword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x00000200004b61e0 : mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x000002000036c915 : mov rax, qword ptr [rdx] ; test al, 1 ; je 0x2000036c924 ; ret
0x0000020000531a0f : mov rax, qword ptr [rip + 0x12342a] ; call rax
0x0000020000143ef4 : mov rax, qword ptr [rip + 0x153115] ; ret
0x00000200001cdf17 : mov rax, qword ptr [rip + 0x1835e2] ; call rax
0x00000200001c3558 : mov rax, qword ptr [rip + 0x18dfa1] ; call rax
0x00000200001c344d : mov rax, qword ptr [rip + 0x18e0ac] ; call rax
0x00000200001c31ba : mov rax, qword ptr [rip + 0x18e33f] ; call rax
0x00000200001c30db : mov rax, qword ptr [rip + 0x18e41e] ; call rax
0x00000200001c2f1d : mov rax, qword ptr [rip + 0x18e5dc] ; call rax
0x00000200004b42b1 : mov rax, qword ptr [rip + 0x1a0b78] ; call rax
0x0000020000199416 : mov rax, qword ptr [rip + 0x1b80e3] ; call rax
0x0000020000196b64 : mov rax, qword ptr [rip + 0x1ba8c5] ; call rax
0x000002000018ec86 : mov rax, qword ptr [rip + 0x1c2903] ; call rax
0x0000020000129ff3 : mov rax, qword ptr [rip + 0x227506] ; call rax
0x0000020000129f78 : mov rax, qword ptr [rip + 0x227581] ; call rax
0x000002000010cc96 : mov rax, qword ptr [rip + 0x244863] ; call rax
0x000002000010cc43 : mov rax, qword ptr [rip + 0x2448b6] ; call rax
0x000002000010ce64 : mov rax, qword ptr [rip + 0x244afd] ; ret
0x00000200000f8c2b : mov rax, qword ptr [rip + 0x25044e] ; ret
0x00000200000fda82 : mov rax, qword ptr [rip + 0x253a77] ; call rax
0x00000200000fd908 : mov rax, qword ptr [rip + 0x253bf1] ; call rax
0x00000200000dca10 : mov rax, qword ptr [rip + 0x274ae9] ; call rax
0x00000200000dc799 : mov rax, qword ptr [rip + 0x274d60] ; call rax
0x00000200000db9fd : mov rax, qword ptr [rip + 0x275afc] ; call rax
0x00000200000da7c8 : mov rax, qword ptr [rip + 0x276d31] ; call rax
0x00000200000da719 : mov rax, qword ptr [rip + 0x276de0] ; call rax
0x00000200000da668 : mov rax, qword ptr [rip + 0x276e91] ; call rax
0x00000200000da5b9 : mov rax, qword ptr [rip + 0x276f40] ; call rax
0x00000200000da4ce : mov rax, qword ptr [rip + 0x27702b] ; call rax
0x00000200000da484 : mov rax, qword ptr [rip + 0x277075] ; call rax
0x00000200000d9cf8 : mov rax, qword ptr [rip + 0x277801] ; call rax
0x00000200000d9b4a : mov rax, qword ptr [rip + 0x2779af] ; call rax
0x00000200000d9abe : mov rax, qword ptr [rip + 0x277a3b] ; call rax
0x00000200000d9995 : mov rax, qword ptr [rip + 0x277b64] ; call rax
0x00000200000d98ed : mov rax, qword ptr [rip + 0x277c0c] ; call rax
0x00000200000d98d4 : mov rax, qword ptr [rip + 0x277c25] ; call rax
0x00000200000d97f7 : mov rax, qword ptr [rip + 0x277d02] ; call rax
0x00000200000d9138 : mov rax, qword ptr [rip + 0x2783c1] ; call rax
0x00000200000d90d6 : mov rax, qword ptr [rip + 0x278423] ; call rax
0x00000200000cf663 : mov rax, qword ptr [rip + 0x281dc6] ; call rax
0x00000200000cf255 : mov rax, qword ptr [rip + 0x2821d4] ; call rax
0x00000200000b49d9 : mov rax, qword ptr [rip + 0x29c700] ; call rax
0x00000200000b4cd2 : mov rax, qword ptr [rip + 0x29c8b7] ; call rax
0x000002000015e01c : mov rax, qword ptr [rip + 0x54c6c5] ; ret
0x00000200001d0d6e : mov rax, qword ptr [rip + 0xd09e3] ; call rax
0x00000200001d0d50 : mov rax, qword ptr [rip + 0xd22c1] ; call rax
0x00000200001d0c35 : mov rax, qword ptr [rip + 0xd23dc] ; call rax
0x00000200001d0693 : mov rax, qword ptr [rip + 0xd2976] ; call rax
0x00000200001d06a4 : mov rax, qword ptr [rip + 0xd2995] ; call rax
0x000002000045411c : mov rax, qword ptr [rip - 0x103043] ; call rax
0x00000200003d096c : mov rax, qword ptr [rip - 0x12f20b] ; call rax
0x00000200003d09c3 : mov rax, qword ptr [rip - 0x12f262] ; call rax
0x00000200004a0fd1 : mov rax, qword ptr [rip - 0x14fef8] ; call rax
0x00000200004a16d8 : mov rax, qword ptr [rip - 0x1505ff] ; call rax
0x00000200004aabc9 : mov rax, qword ptr [rip - 0x159af0] ; call rax
0x00000200004b3ecb : mov rax, qword ptr [rip - 0x205aaa] ; call rax
0x000002000054a46a : mov rax, qword ptr [rip - 0x2a8d09] ; call rax
0x0000020000553543 : mov rax, qword ptr [rip - 0x2b1df2] ; call rax
0x0000020000553564 : mov rax, qword ptr [rip - 0x2b1e2b] ; call rax
0x000002000063d771 : mov rax, qword ptr [rip - 0x39c010] ; call rax
0x00000200003b199d : mov rax, qword ptr [rip - 0x608c4] ; call rax
0x00000200003f73d3 : mov rax, qword ptr [rip - 0xa62fa] ; call rax
0x00000200005e7a0c : mov rax, qword ptr [rsi + 0x38] ; xor edx, edx ; mov rcx, rdi ; call rax
0x00000200000e77ad : mov rax, qword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000e77ae
0x000002000043d6c3 : mov rax, qword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x000002000066805c : mov rax, qword ptr [rsp + 0x28] ; jmp rax
0x000002000061ccd4 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x000002000061ccb6 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x00000200001d7da3 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x00000200006712d4 : mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x0000020000133ac1 : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x000002000002b4ea : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x000002000022bcdc : mov rax, qword ptr [rsp + 0x38] ; jmp rax
0x000002000022bd84 : mov rax, qword ptr [rsp + 0x40] ; jmp rax
0x00000200006cf1f5 : mov rax, qword ptr [rsp + 0x40] ; mov dword ptr [r10], eax ; call r10
0x000002000066222a : mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x000002000022bcce : mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x000002000003ccb1 : mov rax, qword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x000002000047ec25 : mov rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x00000200004ddbcd : mov rax, qword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x0000020000672aeb : mov rax, qword ptr [rsp + 0x68] ; mov qword ptr [rcx + 0x58], rax ; ret
0x00000200004d9a01 : mov rax, qword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x000002000015e318 : mov rax, qword ptr [rsp] ; ret
0x000002000006ad48 : mov rax, qword ptr gs:[0x188] ; ret
0x000002000020ee55 : mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x000002000022b2d6 : mov rax, r10 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045dfe3 : mov rax, r10 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000136c38 : mov rax, r10 ; add rsp, 0x28 ; ret
0x000002000038829a : mov rax, r10 ; jmp 0x2000038824b
0x00000200003a51da : mov rax, r10 ; jmp 0x200003a5199
0x00000200006f6c56 : mov rax, r10 ; jmp 0x200006f6c30
0x0000020000157def : mov rax, r10 ; pop rbx ; ret
0x00000200000fe17f : mov rax, r10 ; ret
0x00000200001359a4 : mov rax, r11 ; ret
0x00000200000b5a58 : mov rax, r8 ; add rsp, 0x28 ; ret
0x0000020000125279 : mov rax, r8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000aceed : mov rax, r8 ; add rsp, 0x38 ; ret
0x0000020000653817 : mov rax, r8 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000157d39 : mov rax, r8 ; pop rbx ; ret
0x00000200001583e4 : mov rax, r8 ; pop rsi ; pop rdi ; ret
0x0000020000033714 : mov rax, r8 ; ret
0x00000200003fea27 : mov rax, r8 ; shr rax, 1 ; ret
0x000002000015e264 : mov rax, r8 ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200000ebc9d : mov rax, r9 ; add rsp, 0x28 ; ret
0x000002000010894c : mov rax, r9 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000024c89 : mov rax, r9 ; ret
0x0000020000076557 : mov rax, rbp ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000009657b : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000aceab : mov rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003db8e2 : mov rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000fcd91 : mov rax, rbx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000de0e8 : mov rax, rbx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000159220 : mov rax, rbx ; ret
0x00000200004d63d7 : mov rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000040133b : mov rax, rcx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fa7b3 : mov rax, rcx ; add rsp, 0x28 ; ret
0x0000020000107960 : mov rax, rcx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ed255 : mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000207485 : mov rax, rcx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000002abb0 : mov rax, rcx ; add rsp, 0x48 ; ret
0x000002000007007e : mov rax, rcx ; ret
0x0000020000054e7a : mov rax, rdi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a1060 : mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000423d71 : mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001583cc : mov rax, rdi ; pop rsi ; pop rdi ; ret
0x000002000001f939 : mov rax, rdx ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x00000200000f0ccd : mov rax, rdx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000490134 : mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000096bdf : mov rax, rdx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013ff1e : mov rax, rdx ; add rsp, 0x38 ; ret
0x000002000020fc89 : mov rax, rdx ; add rsp, 0x48 ; ret
0x0000020000157dae : mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x00000200000761fb : mov rax, rdx ; jmp 0x20000076263
0x00000200000d545c : mov rax, rdx ; jmp 0x200000d53e5
0x00000200000ec243 : mov rax, rdx ; jmp 0x200000ec230
0x00000200001b9d46 : mov rax, rdx ; jmp 0x200001b9d62
0x00000200002087ff : mov rax, rdx ; jmp 0x2000020880a
0x00000200003667cf : mov rax, rdx ; jmp 0x200003667dd
0x00000200004a8dc1 : mov rax, rdx ; jmp 0x200004a8d8a
0x00000200006c5f5d : mov rax, rdx ; jmp 0x200006c5f66
0x00000200006c7368 : mov rax, rdx ; jmp 0x200006c7371
0x00000200006c76bf : mov rax, rdx ; jmp 0x200006c76c8
0x00000200006c7c53 : mov rax, rdx ; jmp 0x200006c7c5c
0x00000200006c8b3a : mov rax, rdx ; jmp 0x200006c8b43
0x00000200006c8f3a : mov rax, rdx ; jmp 0x200006c8f43
0x00000200006c92ed : mov rax, rdx ; jmp 0x200006c92f6
0x00000200006c9402 : mov rax, rdx ; jmp 0x200006c9474
0x00000200006c952f : mov rax, rdx ; jmp 0x200006c9538
0x00000200006ca635 : mov rax, rdx ; jmp 0x200006ca63e
0x00000200006cac79 : mov rax, rdx ; jmp 0x200006cac82
0x00000200006caf5e : mov rax, rdx ; jmp 0x200006caf67
0x00000200006cb03f : mov rax, rdx ; jmp 0x200006cb048
0x00000200006cb75f : mov rax, rdx ; jmp 0x200006cb768
0x00000200006cc9c2 : mov rax, rdx ; jmp 0x200006cc9d7
0x00000200006cd257 : mov rax, rdx ; jmp 0x200006cd260
0x00000200006d0186 : mov rax, rdx ; jmp 0x200006d0192
0x00000200006d1205 : mov rax, rdx ; jmp 0x200006d120e
0x00000200006d1504 : mov rax, rdx ; jmp 0x200006d150d
0x00000200006d1a72 : mov rax, rdx ; jmp 0x200006d1a7b
0x00000200006d1f18 : mov rax, rdx ; jmp 0x200006d1f21
0x00000200006d5ab9 : mov rax, rdx ; jmp 0x200006d5ac2
0x00000200006d5b3a : mov rax, rdx ; jmp 0x200006d5b43
0x00000200006d6471 : mov rax, rdx ; jmp 0x200006d647a
0x00000200006d67dd : mov rax, rdx ; jmp 0x200006d67e6
0x00000200006d6c96 : mov rax, rdx ; jmp 0x200006d6c9f
0x00000200006d759c : mov rax, rdx ; jmp 0x200006d75a5
0x00000200006d78d3 : mov rax, rdx ; jmp 0x200006d78dc
0x00000200006d8952 : mov rax, rdx ; jmp 0x200006d895b
0x00000200006d8c60 : mov rax, rdx ; jmp 0x200006d8c69
0x00000200006d9d2e : mov rax, rdx ; jmp 0x200006d9d37
0x00000200006da03c : mov rax, rdx ; jmp 0x200006da045
0x00000200006db262 : mov rax, rdx ; jmp 0x200006db26b
0x00000200006db5a2 : mov rax, rdx ; jmp 0x200006db5ab
0x00000200006dc4d9 : mov rax, rdx ; jmp 0x200006dc4e2
0x00000200006dcc07 : mov rax, rdx ; jmp 0x200006dcc10
0x00000200006dcf30 : mov rax, rdx ; jmp 0x200006dcf39
0x00000200006de0bd : mov rax, rdx ; jmp 0x200006de0c6
0x00000200006de3fd : mov rax, rdx ; jmp 0x200006de406
0x00000200006df343 : mov rax, rdx ; jmp 0x200006df34c
0x00000200006dfcfc : mov rax, rdx ; jmp 0x200006dfd05
0x00000200006e010f : mov rax, rdx ; jmp 0x200006e0118
0x00000200006e04e2 : mov rax, rdx ; jmp 0x200006e04eb
0x00000200006e08bc : mov rax, rdx ; jmp 0x200006e08c5
0x00000200006e0cad : mov rax, rdx ; jmp 0x200006e0cb6
0x00000200006e10af : mov rax, rdx ; jmp 0x200006e10b8
0x00000200006e14ac : mov rax, rdx ; jmp 0x200006e14b5
0x00000200006e18c0 : mov rax, rdx ; jmp 0x200006e18c9
0x00000200006e1cc1 : mov rax, rdx ; jmp 0x200006e1cca
0x00000200006e20e1 : mov rax, rdx ; jmp 0x200006e20ea
0x00000200006e24ef : mov rax, rdx ; jmp 0x200006e24f8
0x00000200006e28c5 : mov rax, rdx ; jmp 0x200006e28ce
0x00000200006e2d55 : mov rax, rdx ; jmp 0x200006e2d5e
0x00000200006e31e4 : mov rax, rdx ; jmp 0x200006e31ed
0x00000200006e36a4 : mov rax, rdx ; jmp 0x200006e36ad
0x00000200006e36a3 : mov rax, rdx ; jmp 0x200006e36ae
0x00000200006e4231 : mov rax, rdx ; jmp 0x200006e423a
0x00000200006e50a0 : mov rax, rdx ; jmp 0x200006e50a9
0x00000200006e583b : mov rax, rdx ; jmp 0x200006e5844
0x00000200006e5d1d : mov rax, rdx ; jmp 0x200006e5d26
0x00000200006e605c : mov rax, rdx ; jmp 0x200006e6065
0x00000200006e64b1 : mov rax, rdx ; jmp 0x200006e64ba
0x00000200006e68e0 : mov rax, rdx ; jmp 0x200006e68e9
0x00000200006e6d9d : mov rax, rdx ; jmp 0x200006e6da6
0x00000200006e8009 : mov rax, rdx ; jmp 0x200006e8012
0x00000200006e883c : mov rax, rdx ; jmp 0x200006e8845
0x00000200001063cf : mov rax, rdx ; jne 0x200001a5c4b ; ret
0x00000200000bf5a0 : mov rax, rdx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000355db : mov rax, rdx ; ret
0x00000200000c50b0 : mov rax, rdx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x200000c5079
0x00000200005cc4a2 : mov rbp, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x0000020000404f95 : mov rbp, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004effaf : mov rbp, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000159534 : mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x0000020000668cfd : mov rbp, r8 ; mov rsi, rdx ; call 0x20000674f80
0x000002000066bd58 : mov rbp, rax ; call rbx
0x000002000064c030 : mov rbp, rcx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200000b43fc : mov rbp, rcx ; mov rcx, rsi ; call qword ptr [rbx]
0x00000200005f3fd0 : mov rbp, rdi ; mov rcx, rbp ; call 0x20000440214
0x000002000016203c : mov rbp, rdx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003a43d6 : mov rbx, qword ptr [rbx + 8] ; mov rcx, rbx ; call 0x200003a066d
0x00000200006f4d71 : mov rbx, qword ptr [rbx] ; jmp 0x200006f4d5a
0x000002000022a83c : mov rbx, qword ptr [rcx + rax*8 + 0x10] ; jmp 0x2000022a850
0x00000200004fb8c0 : mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004fb8ac
0x00000200001de33a : mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200000b87cb : mov rbx, qword ptr [rsp + 0x18] ; pop r15 ; pop r14 ; ret
0x000002000072c09e : mov rbx, qword ptr [rsp + 0x40] ; jmp 0x2000072c06e
0x000002000008e4e5 : mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200000b8576 : mov rbx, qword ptr [rsp + 8] ; mov al, r9b ; ret
0x000002000023964c : mov rbx, qword ptr [rsp + 8] ; mov eax, ecx ; ret
0x0000020000232528 : mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000012dee2 : mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x000002000009d44b : mov rbx, qword ptr [rsp + 8] ; mov eax, r11d ; ret
0x00000200001be122 : mov rbx, qword ptr [rsp + 8] ; mov eax, r8d ; ret
0x00000200000e1b1e : mov rbx, qword ptr [rsp + 8] ; mov eax, r9d ; ret
0x000002000008fe6f : mov rbx, qword ptr [rsp + 8] ; mov qword ptr [r8], r10 ; ret
0x000002000013599f : mov rbx, qword ptr [rsp + 8] ; mov rax, r11 ; ret
0x00000200004d8370 : mov rbx, qword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200006f8d9c : mov rbx, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200006113a7 : mov rbx, qword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x000002000008ea06 : mov rbx, qword ptr [rsp + 8] ; ret
0x000002000023694a : mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x0000020000082431 : mov rbx, r9 ; jmp 0x200000823fc
0x0000020000676f21 : mov rbx, rax ; call rdi
0x000002000067810f : mov rbx, rax ; call rsi
0x000002000051322b : mov rbx, rcx ; call 0x2000013a6b6
0x0000020000111922 : mov rbx, rcx ; call 0x2000015dbc5
0x00000200001e06f6 : mov rbx, rcx ; call qword ptr [rax]
0x0000020000422785 : mov rbx, rcx ; call qword ptr [rdi]
0x000002000067290e : mov rbx, rcx ; test rax, rax ; je 0x20000672923 ; call rax
0x00000200000e416d : mov rbx, rdx ; call 0x20000470461
0x00000200001e07b0 : mov rbx, rdx ; call qword ptr [rax]
0x00000200000b1379 : mov rbx, rdx ; jmp 0x2000018d5f1
0x000002000046f8cd : mov rcx, qword ptr [r14 + 8] ; call 0x2000009d46f
0x000002000066da24 : mov rcx, qword ptr [r14] ; xor edx, edx ; call 0x20000294e28
0x000002000038ddd5 : mov rcx, qword ptr [r15 + 0x3d0] ; call rax
0x00000200001bc6b5 : mov rcx, qword ptr [r8 + 0x30] ; call r9
0x000002000042d747 : mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x00000200000aa88b : mov rcx, qword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000aa860
0x000002000037a61d : mov rcx, qword ptr [rax + 0x48] ; test rcx, rcx ; je 0x2000037a631 ; call rcx
0x000002000070cd24 : mov rcx, qword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x2000070cd37 ; ret
0x000002000047120f : mov rcx, qword ptr [rax + 0xb8] ; call 0x2000009d471
0x000002000037a960 : mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200001cbadb : mov rcx, qword ptr [rax + 8] ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001cbd28 : mov rcx, qword ptr [rax + 8] ; test rcx, rcx ; je 0x200001cbd3c ; call rcx
0x00000200005e75d4 : mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x000002000059c85b : mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200000acb73 : mov rcx, qword ptr [rbp + 0x30] ; xor rcx, rsp ; call 0x20000148e19
0x0000020000162a21 : mov rcx, qword ptr [rbp + 0x40] ; call rax
0x00000200004935aa : mov rcx, qword ptr [rbp + 0x48] ; mov r8, rdi ; call rax
0x000002000016307d : mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000057c15a : mov rcx, qword ptr [rbp + 0x68] ; xor edx, edx ; call r14
0x000002000051f170 : mov rcx, qword ptr [rbp + 0x6f] ; mov ebx, eax ; call 0x2000014dc09
0x0000020000164151 : mov rcx, qword ptr [rbp + 0xf8] ; call 0x20000140429
0x000002000011cb49 : mov rcx, qword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x20000148e19
0x00000200004ab174 : mov rcx, qword ptr [rbp - 0x11] ; call rax
0x000002000051ec39 : mov rcx, qword ptr [rbp - 0x29] ; mov ebx, eax ; call 0x2000014dc09
0x000002000038202c : mov rcx, qword ptr [rbp - 0x59] ; call 0x200003ce246
0x0000020000381f54 : mov rcx, qword ptr [rbp - 0x59] ; mov ebx, eax ; call 0x200003ce248
0x00000200004413de : mov rcx, qword ptr [rbp - 8] ; mov edi, eax ; call 0x20000068fd9
0x0000020000418ff2 : mov rcx, qword ptr [rbx + 0x18] ; call 0x20000045497
0x0000020000560b87 : mov rcx, qword ptr [rbx + 0x28] ; call rax
0x00000200004b4f09 : mov rcx, qword ptr [rbx + 0x30] ; mov r8d, eax ; call 0x20000141179
0x00000200004819ad : mov rcx, qword ptr [rbx + 0x328] ; call 0x2000014dc09
0x000002000066e6a2 : mov rcx, qword ptr [rbx + 0x40] ; call 0x2000004a8be
0x000002000045ace0 : mov rcx, qword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x0000020000548bf7 : mov rcx, qword ptr [rbx + 0x60] ; call 0x20000294e26
0x000002000013f836 : mov rcx, qword ptr [rbx + 0xa0] ; call rax
0x0000020000136edf : mov rcx, qword ptr [rbx - 8] ; call 0x200000931a6
0x00000200004856c3 : mov rcx, qword ptr [rbx] ; call 0x200000e19c1
0x00000200004856c2 : mov rcx, qword ptr [rbx] ; call 0x200000e19c2
0x00000200001e0341 : mov rcx, qword ptr [rbx] ; call rax
0x000002000051c6e5 : mov rcx, qword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200000e2c32 : mov rcx, qword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x200000e2c38 ; ret
0x0000020000446443 : mov rcx, qword ptr [rcx + 0x20] ; call 0x20000068fd7
0x00000200000d8a16 : mov rcx, qword ptr [rcx + 0x28] ; jne 0x200000d8a65 ; call rdi
0x0000020000139620 : mov rcx, qword ptr [rcx + 0x28] ; jne 0x2000013964a ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200001d619d : mov rcx, qword ptr [rcx + 0x2988] ; call rax
0x000002000038d2b2 : mov rcx, qword ptr [rcx + 0x2e0] ; call rax
0x00000200004021a2 : mov rcx, qword ptr [rcx + 0x30] ; call 0x20000031497
0x00000200004021a1 : mov rcx, qword ptr [rcx + 0x30] ; call 0x20000031498
0x000002000046fb44 : mov rcx, qword ptr [rcx + 8] ; call 0x2000009d46f
0x0000020000437f01 : mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200003a42e1 : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001e07ac : mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x00000200002091e2 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; jne 0x200002091e8 ; ret
0x0000020000666c1a : mov rcx, qword ptr [rcx + 8] ; xor edx, edx ; call 0x20000294e29
0x0000020000479629 : mov rcx, qword ptr [rcx] ; call 0x200000358d1
0x00000200004474f7 : mov rcx, qword ptr [rcx] ; call 0x200000690a6
0x00000200004474f6 : mov rcx, qword ptr [rcx] ; call 0x200000690a7
0x00000200004a1083 : mov rcx, qword ptr [rcx] ; call 0x200000c6246
0x000002000022b96d : mov rcx, qword ptr [rcx] ; cmp r8, rcx ; jne 0x2000022b964 ; ret
0x000002000011b5d7 : mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x2000011b5ca
0x00000200003850a8 : mov rcx, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x0000020000717559 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0x20000717551 ; ret
0x000002000040211d : mov rcx, qword ptr [rdi + 0x30] ; call 0x20000030f77
0x000002000040211c : mov rcx, qword ptr [rdi + 0x30] ; call 0x20000030f78
0x00000200003c3031 : mov rcx, qword ptr [rdi + 0x48] ; call 0x2000049f282
0x00000200005947f4 : mov rcx, qword ptr [rdi + rcx*8] ; call 0x20000140abe
0x00000200000ec23f : mov rcx, qword ptr [rdx + 0x18] ; mov rax, rdx ; jmp 0x200000ec234
0x00000200003667cb : mov rcx, qword ptr [rdx + 8] ; mov rax, rdx ; jmp 0x200003667e1
0x000002000066758c : mov rcx, qword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200000761f8 : mov rcx, qword ptr [rdx] ; mov rax, rdx ; jmp 0x20000076266
0x00000200003fff11 : mov rcx, qword ptr [rip - 0x1207e8] ; call rax
0x00000200004a4973 : mov rcx, qword ptr [rip - 0x1c46aa] ; call 0x20000030c69
0x00000200004a4d29 : mov rcx, qword ptr [rip - 0x1c4a58] ; call 0x20000030f79
0x00000200005dde59 : mov rcx, qword ptr [rip - 0x2fe730] ; call rax
0x00000200005b9fb9 : mov rcx, qword ptr [rip - 0x317120] ; call rax
0x000002000066e6fc : mov rcx, qword ptr [rsi + 0x10] ; xor edx, edx ; call 0x20000294e29
0x000002000066e68a : mov rcx, qword ptr [rsi + 0x18] ; mov rdx, rsi ; call 0x2000004a8c1
0x00000200001911e1 : mov rcx, qword ptr [rsi + 0xb8] ; call 0x2000009d471
0x00000200001e0939 : mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000045354a : mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000067169d : mov rcx, qword ptr [rsi + 8] ; mov rdx, r15 ; call rax
0x0000020000561920 : mov rcx, qword ptr [rsi] ; call 0x2000014dc05
0x00000200005f3994 : mov rcx, qword ptr [rsp + 0x20] ; call 0x200000bfc0f
0x0000020000666e4d : mov rcx, qword ptr [rsp + 0x30] ; call 0x20000294e28
0x0000020000648bbe : mov rcx, qword ptr [rsp + 0x30] ; xor edx, edx ; call 0x20000294e29
0x000002000072ab62 : mov rcx, qword ptr [rsp + 0x38] ; call qword ptr [rip - 0x3d999d]
0x0000020000446177 : mov rcx, qword ptr [rsp + 0x40] ; call 0x20000068fd8
0x000002000051fd7f : mov rcx, qword ptr [rsp + 0x40] ; call 0x2000014dc08
0x00000200005337f9 : mov rcx, qword ptr [rsp + 0x40] ; call 0x2000015dcc4
0x0000020000486e9e : mov rcx, qword ptr [rsp + 0x40] ; call 0x200005d3163
0x0000020000486e9d : mov rcx, qword ptr [rsp + 0x40] ; call 0x200005d3164
0x000002000058cd5c : mov rcx, qword ptr [rsp + 0x48] ; call 0x20000068fd7
0x00000200001f8bde : mov rcx, qword ptr [rsp + 0x48] ; xor edx, edx ; call 0x20000294e29
0x000002000041e1c6 : mov rcx, qword ptr [rsp + 0x50] ; call 0x20000045498
0x00000200003f608b : mov rcx, qword ptr [rsp + 0x50] ; call 0x200003c2357
0x0000020000151d2b : mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x0000020000444733 : mov rcx, qword ptr [rsp + 0x50] ; mov qword ptr [rax], rcx ; jmp 0x20000444709
0x00000200004a5eaa : mov rcx, qword ptr [rsp + 0x60] ; call r15
0x00000200005619c1 : mov rcx, qword ptr [rsp + 0x68] ; mov ebx, eax ; call 0x2000014dc09
0x000002000039cdae : mov rcx, qword ptr [rsp + 0x78] ; call 0x20000068fd7
0x0000020000446f6c : mov rcx, qword ptr [rsp + 0x78] ; call 0x20000068fd8
0x000002000009ba31 : mov rcx, qword ptr [rsp + 0x88] ; call rax
0x00000200004536e7 : mov rcx, r10 ; call 0x2000007dff6
0x000002000064fe4a : mov rcx, r10 ; call 0x2000014dc09
0x000002000022ffe0 : mov rcx, r10 ; call 0x2000022fd39
0x0000020000423e7c : mov rcx, r10 ; call 0x20000520185
0x0000020000162c83 : mov rcx, r10 ; call r10
0x0000020000538005 : mov rcx, r10 ; call r8
0x00000200004a6a3f : mov rcx, r10 ; call rax
0x00000200006e9e58 : mov rcx, r10 ; jmp rcx
0x000002000010c2aa : mov rcx, r10 ; mov dword ptr [r8 + 0x30], ebx ; call r9
0x00000200000423bb : mov rcx, r10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000064dc66 : mov rcx, r11 ; add rsp, 0x28 ; jmp qword ptr [r10]
0x0000020000514e44 : mov rcx, r11 ; call 0x2000013b6be
0x0000020000727f02 : mov rcx, r11 ; call rbx
0x0000020000412757 : mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003ff400 : mov rcx, r11 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005fd294 : mov rcx, r12 ; call 0x2000004bdb9
0x000002000043b851 : mov rcx, r12 ; call 0x2000006a616
0x0000020000443cb2 : mov rcx, r12 ; call 0x200000702b6
0x0000020000443f50 : mov rcx, r12 ; call 0x20000070846
0x00000200004801ac : mov rcx, r12 ; call 0x200000a52e6
0x00000200004272be : mov rcx, r12 ; call 0x20000294e29
0x00000200006c7daa : mov rcx, r12 ; call r10
0x000002000014134f : mov rcx, r12 ; call r14
0x00000200001a6e5b : mov rcx, r12 ; call r15
0x00000200006d5f73 : mov rcx, r12 ; call r9
0x000002000064f67f : mov rcx, r12 ; call rax
0x000002000066beb3 : mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000040cf5b : mov rcx, r12 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000447250 : mov rcx, r13 ; call 0x20000068fd6
0x000002000043b6a0 : mov rcx, r13 ; call 0x200000690a6
0x00000200004404c4 : mov rcx, r13 ; call 0x2000006a616
0x0000020000440479 : mov rcx, r13 ; call 0x200000702b6
0x00000200005fcd4b : mov rcx, r13 ; call 0x20000072651
0x000002000048183c : mov rcx, r13 ; call 0x200000a52e6
0x000002000049b26f : mov rcx, r13 ; call 0x200000bc776
0x00000200004faf50 : mov rcx, r13 ; call 0x20000120f3a
0x0000020000512abe : mov rcx, r13 ; call 0x2000013a782
0x0000020000227c04 : mov rcx, r13 ; call 0x20000213e29
0x000002000021920c : mov rcx, r13 ; call 0x20000223e8d
0x00000200001f8bd6 : mov rcx, r13 ; call 0x20000294e25
0x00000200003b46a7 : mov rcx, r13 ; call 0x200003b49c9
0x00000200003958fd : mov rcx, r13 ; call qword ptr [r14]
0x00000200003a8c96 : mov rcx, r13 ; call r10
0x00000200000e7232 : mov rcx, r13 ; call r12
0x00000200006652e6 : mov rcx, r13 ; call r15
0x00000200006d9322 : mov rcx, r13 ; call r9
0x00000200000c96f8 : mov rcx, r13 ; call rax
0x0000020000395a20 : mov rcx, r13 ; mov dword ptr [rbp - 0x38], ebx ; call qword ptr [r14]
0x0000020000400224 : mov rcx, r13 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ee4cf : mov rcx, r13 ; mov dword ptr [rsp + 0x20], esi ; call r15
0x000002000040034e : mov rcx, r13 ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x00000200005964f4 : mov rcx, r13 ; mov ebx, r9d ; call 0x200001c09e9
0x00000200003957c4 : mov rcx, r13 ; mov edx, ebx ; mov qword ptr [rbp + 0x70], rsi ; call qword ptr [rsi]
0x000002000066b385 : mov rcx, r13 ; mov rdx, r12 ; call rax
0x00000200001e3f0e : mov rcx, r14 ; call 0x20000030175
0x000002000040d067 : mov rcx, r14 ; call 0x20000030c66
0x000002000040d3ec : mov rcx, r14 ; call 0x20000031496
0x0000020000441644 : mov rcx, r14 ; call 0x20000068fd6
0x00000200004486a6 : mov rcx, r14 ; call 0x200000690e6
0x000002000043a80a : mov rcx, r14 ; call 0x2000006a616
0x0000020000442a22 : mov rcx, r14 ; call 0x200000702b6
0x0000020000071bc5 : mov rcx, r14 ; call 0x2000007229d
0x00000200001df90f : mov rcx, r14 ; call 0x200000bbb91
0x00000200000d89a5 : mov rcx, r14 ; call 0x200000bc6cd
0x00000200003b78fd : mov rcx, r14 ; call 0x200000bc779
0x0000020000492342 : mov rcx, r14 ; call 0x200000bef02
0x00000200005d6453 : mov rcx, r14 ; call 0x200000ed87d
0x00000200002361e3 : mov rcx, r14 ; call 0x200001332b9
0x0000020000512fef : mov rcx, r14 ; call 0x2000013a8b2
0x00000200001815d3 : mov rcx, r14 ; call 0x2000015d885
0x00000200007293d3 : mov rcx, r14 ; call 0x2000015dbc9
0x0000020000220ecb : mov rcx, r14 ; call 0x2000021f501
0x0000020000170c77 : mov rcx, r14 ; call 0x2000022cf35
0x0000020000207137 : mov rcx, r14 ; call 0x200002333ad
0x000002000054b847 : mov rcx, r14 ; call 0x200003d2f09
0x00000200003de55e : mov rcx, r14 ; call 0x2000047a825
0x000002000066c37b : mov rcx, r14 ; call r12
0x00000200000e865e : mov rcx, r14 ; call r15
0x00000200004f31c3 : mov rcx, r14 ; call r9
0x00000200000d8c54 : mov rcx, r14 ; call rax
0x0000020000499e6e : mov rcx, r14 ; mov qword ptr [rsp + 0x20], r12 ; call qword ptr [rsi]
0x0000020000619cc9 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x0000020000499d3a : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x0000020000672dc0 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x000002000064ad7c : mov rcx, r14 ; mov rdx, r12 ; call rsi
0x00000200005323b9 : mov rcx, r15 ; add r8, r8 ; call 0x2000015d889
0x000002000040ca44 : mov rcx, r15 ; call 0x20000030f76
0x000002000040cb12 : mov rcx, r15 ; call 0x20000031496
0x000002000059ba50 : mov rcx, r15 ; call 0x20000047c75
0x00000200000f33da : mov rcx, r15 ; call 0x2000004b835
0x0000020000439358 : mov rcx, r15 ; call 0x20000063d9a
0x000002000043931a : mov rcx, r15 ; call 0x20000068fd6
0x0000020000448e86 : mov rcx, r15 ; call 0x2000006a616
0x0000020000448e19 : mov rcx, r15 ; call 0x200000702b6
0x00000200005745da : mov rcx, r15 ; call 0x20000070845
0x000002000044ca16 : mov rcx, r15 ; call 0x20000070846
0x00000200000b27a2 : mov rcx, r15 ; call 0x20000070849
0x0000020000489e8d : mov rcx, r15 ; call 0x200000bc779
0x00000200001a55e0 : mov rcx, r15 ; call 0x200000c18e9
0x000002000013335a : mov rcx, r15 ; call 0x200001332b9
0x00000200005f3bb5 : mov rcx, r15 ; call 0x2000050fe65
0x00000200000a6c80 : mov rcx, r15 ; call r12
0x00000200001375cf : mov rcx, r15 ; call r14
0x00000200006d713f : mov rcx, r15 ; call r9
0x00000200000c73fb : mov rcx, r15 ; call rax
0x00000200003cc9f9 : mov rcx, r15 ; call rsi
0x0000020000564713 : mov rcx, r15 ; lea r8d, dword ptr [rdx + 6] ; call 0x200001c09e9
0x0000020000467850 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x0000020000649585 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000469d24 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200004bbc7a : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x0000020000614f5b : mov rcx, r15 ; mov r8d, r14d ; call 0x20000141178
0x00000200004bba00 : mov rcx, r15 ; mov rdx, r12 ; call rdi
0x0000020000218038 : mov rcx, r15 ; mov word ptr [rbp - 0x3d], ax ; call r9
0x000002000017606a : mov rcx, r8 ; call 0x20000072299
0x00000200004d0031 : mov rcx, r8 ; call 0x200000f5bf2
0x0000020000537c14 : mov rcx, r8 ; call 0x20000157d56
0x00000200001670eb : mov rcx, r8 ; call 0x200002333ad
0x00000200006d6c15 : mov rcx, r8 ; call rdx
0x0000020000115282 : mov rcx, r8 ; jmp rdx
0x0000020000440607 : mov rcx, r9 ; call 0x2000006fe26
0x000002000050f61d : mov rcx, r9 ; call 0x20000139676
0x0000020000516446 : mov rcx, r9 ; call 0x2000013c0e6
0x00000200005333c1 : mov rcx, r9 ; call 0x2000015d886
0x000002000048e86e : mov rcx, r9 ; call 0x200003cab15
0x00000200006c7280 : mov rcx, r9 ; call rdx
0x00000200005e165c : mov rcx, rax ; add rdx, rbx ; call 0x2000015d888
0x000002000043c58d : mov rcx, rax ; call 0x20000068fd6
0x0000020000689253 : mov rcx, rax ; call 0x20000145495
0x0000020000534af6 : mov rcx, rax ; call 0x2000015d886
0x0000020000533fc0 : mov rcx, rax ; call 0x2000015dbc6
0x0000020000724d6e : mov rcx, rax ; call 0x2000015dbc9
0x00000200006748ba : mov rcx, rax ; call 0x20000294e26
0x000002000063e552 : mov rcx, rax ; call 0x2000047a801
0x0000020000679378 : mov rcx, rax ; call r15
0x0000020000096049 : mov rcx, rax ; call rdx
0x0000020000132f36 : mov rcx, rax ; dec r9 ; jne 0x20000132f2c ; ret
0x00000200000d6f42 : mov rcx, rax ; jne 0x200000d6f6d ; ret
0x00000200006ccbc5 : mov rcx, rax ; mov qword ptr [rbp + 0x60], rax ; call r10
0x00000200006d1707 : mov rcx, rax ; mov qword ptr [rsp + 0x58], rax ; call r10
0x00000200006d0dfa : mov rcx, rax ; mov qword ptr [rsp + 0x60], rax ; call r10
0x0000020000405030 : mov rcx, rbp ; call 0x20000031496
0x000002000043a57c : mov rcx, rbp ; call 0x20000063d9a
0x000002000043a634 : mov rcx, rbp ; call 0x20000068fd6
0x000002000043b132 : mov rcx, rbp ; call 0x200000690a6
0x000002000048e36e : mov rcx, rbp ; call 0x2000006a615
0x000002000043afb2 : mov rcx, rbp ; call 0x2000006a616
0x0000020000443faf : mov rcx, rbp ; call 0x200000702b5
0x00000200004476c8 : mov rcx, rbp ; call 0x200000702b6
0x0000020000444080 : mov rcx, rbp ; call 0x20000070846
0x0000020000443b91 : mov rcx, rbp ; call 0x2000007229a
0x000002000044a580 : mov rcx, rbp ; call 0x20000074ed2
0x00000200004e73cd : mov rcx, rbp ; call 0x200000a36bd
0x000002000051000b : mov rcx, rbp ; call 0x20000139812
0x000002000050fff7 : mov rcx, rbp ; call 0x20000139862
0x000002000050ffe3 : mov rcx, rbp ; call 0x200001398b2
0x000002000050ffcf : mov rcx, rbp ; call 0x20000139902
0x0000020000190ca8 : mov rcx, rbp ; call 0x2000022cf35
0x00000200003d1fe0 : mov rcx, rbp ; call 0x200003be249
0x00000200005f3fd3 : mov rcx, rbp ; call 0x20000440211
0x00000200004c7639 : mov rcx, rbp ; call qword ptr [rax + 0x20]
0x00000200001e037c : mov rcx, rbp ; call rax
0x000002000044b147 : mov rcx, rbp ; call rsi
0x0000020000443ba3 : mov rcx, rbp ; xor edx, edx ; call 0x200000702b8
0x000002000066c54d : mov rcx, rbx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200003fcb87 : mov rcx, rbx ; call 0x20000027bc2
0x00000200003fd451 : mov rcx, rbx ; call 0x2000002c2fa
0x0000020000191fff : mov rcx, rbx ; call 0x2000002e2e5
0x0000020000403d7f : mov rcx, rbx ; call 0x20000030f76
0x0000020000403dd0 : mov rcx, rbx ; call 0x20000031496
0x000002000043a07f : mov rcx, rbx ; call 0x20000063d9a
0x0000020000438426 : mov rcx, rbx ; call 0x20000063dda
0x000002000043a0bc : mov rcx, rbx ; call 0x20000068fd6
0x000002000043b0af : mov rcx, rbx ; call 0x200000690a6
0x0000020000447d89 : mov rcx, rbx ; call 0x200000690e6
0x000002000043b3d3 : mov rcx, rbx ; call 0x2000006a616
0x000002000043b3eb : mov rcx, rbx ; call 0x2000006a617
0x00000200001c3ff0 : mov rcx, rbx ; call 0x200000702b5
0x00000200004417c4 : mov rcx, rbx ; call 0x200000702b6
0x00000200004463d7 : mov rcx, rbx ; call 0x20000070846
0x00000200003e505a : mov rcx, rbx ; call 0x2000008221d
0x00000200001eb26b : mov rcx, rbx ; call 0x2000008756d
0x0000020000473db0 : mov rcx, rbx ; call 0x2000009d46e
0x00000200001e80bb : mov rcx, rbx ; call 0x200000a4305
0x00000200003c91c5 : mov rcx, rbx ; call 0x200000b9761
0x000002000049293b : mov rcx, rbx ; call 0x200000bc6ca
0x000002000064046e : mov rcx, rbx ; call 0x200000bc775
0x00000200001674e6 : mov rcx, rbx ; call 0x200000c94e1
0x00000200004e7e1b : mov rcx, rbx ; call 0x2000011497a
0x00000200004f5d65 : mov rcx, rbx ; call 0x2000011d88a
0x00000200001321de : mov rcx, rbx ; call 0x2000012e491
0x0000020000067c3b : mov rcx, rbx ; call 0x20000153ec5
0x00000200005381fa : mov rcx, rbx ; call 0x2000015d886
0x0000020000532b81 : mov rcx, rbx ; call 0x2000015dcfe
0x0000020000532b80 : mov rcx, rbx ; call 0x2000015dcff
0x000002000019ce06 : mov rcx, rbx ; call 0x200001d90e1
0x00000200000ea7eb : mov rcx, rbx ; call 0x200001d90e5
0x00000200000dcef3 : mov rcx, rbx ; call 0x200001d9191
0x000002000019ce97 : mov rcx, rbx ; call 0x200001d9192
0x00000200005d95f8 : mov rcx, rbx ; call 0x20000208a42
0x00000200005f8b91 : mov rcx, rbx ; call 0x20000294e25
0x0000020000668b07 : mov rcx, rbx ; call 0x20000294e26
0x0000020000635f87 : mov rcx, rbx ; call 0x20000294e29
0x00000200003a43da : mov rcx, rbx ; call 0x200003a0669
0x00000200004f86f9 : mov rcx, rbx ; call 0x200004149a9
0x00000200005ba356 : mov rcx, rbx ; call 0x200004265bd
0x00000200005ba4e0 : mov rcx, rbx ; call 0x2000042670d
0x00000200000e4105 : mov rcx, rbx ; call 0x20000470389
0x00000200001cef0d : mov rcx, rbx ; call 0x2000060e2e1
0x00000200001c1d1d : mov rcx, rbx ; call r10
0x00000200004bd6d4 : mov rcx, rbx ; call r11
0x00000200006d9346 : mov rcx, rbx ; call r12
0x00000200001413e0 : mov rcx, rbx ; call r14
0x00000200003b193d : mov rcx, rbx ; call r15
0x00000200000ef8bc : mov rcx, rbx ; call rax
0x00000200001ddcd7 : mov rcx, rbx ; call rdi
0x00000200006e0099 : mov rcx, rbx ; call rdx
0x00000200004aaaf5 : mov rcx, rbx ; call rsi
0x00000200000966fc : mov rcx, rbx ; je 0x20000096780 ; call rax
0x00000200005f3045 : mov rcx, rbx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004926d8 : mov rcx, rbx ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200004c0a30 : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004c6fec : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000594568 : mov rcx, rbx ; mov qword ptr [rsp + 0x30], rdi ; call rax
0x000002000067d59e : mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x000002000002a105 : mov rcx, rbx ; xor r12d, r12d ; call rsi
0x00000200004f708e : mov rcx, rdi ; add rsi, rax ; call 0x20000120f3d
0x00000200003fd631 : mov rcx, rdi ; call 0x20000027bc2
0x000002000041004d : mov rcx, rdi ; call 0x20000031496
0x000002000041004c : mov rcx, rdi ; call 0x20000031497
0x0000020000421140 : mov rcx, rdi ; call 0x20000043cda
0x000002000043a0da : mov rcx, rdi ; call 0x20000063d9a
0x00000200003bccd7 : mov rcx, rdi ; call 0x20000068fd5
0x000002000043a0cd : mov rcx, rdi ; call 0x20000068fd6
0x0000020000442a62 : mov rcx, rdi ; call 0x200000690a6
0x00000200003ece73 : mov rcx, rdi ; call 0x200000690e5
0x00000200003ece72 : mov rcx, rdi ; call 0x200000690e6
0x000002000045e395 : mov rcx, rdi ; call 0x2000006a615
0x000002000043a678 : mov rcx, rdi ; call 0x2000006a616
0x0000020000573fe7 : mov rcx, rdi ; call 0x200000702b5
0x00000200004441b4 : mov rcx, rdi ; call 0x200000702b6
0x0000020000114632 : mov rcx, rdi ; call 0x20000070845
0x00000200004444ea : mov rcx, rdi ; call 0x20000070846
0x000002000044cd54 : mov rcx, rdi ; call 0x20000072646
0x00000200003d668c : mov rcx, rdi ; call 0x20000072909
0x000002000045f69e : mov rcx, rdi ; call 0x2000008a166
0x000002000060d4bb : mov rcx, rdi ; call 0x200000b9779
0x000002000048f115 : mov rcx, rdi ; call 0x200000bc6ca
0x00000200000d8cba : mov rcx, rdi ; call 0x200000d89bd
0x00000200000dc777 : mov rcx, rdi ; call 0x200000d9ded
0x00000200004b9bef : mov rcx, rdi ; call 0x200000e19c2
0x00000200000780c8 : mov rcx, rdi ; call 0x20000114399
0x00000200004fa0be : mov rcx, rdi ; call 0x20000120f3a
0x000002000051010c : mov rcx, rdi ; call 0x2000013971e
0x0000020000533079 : mov rcx, rdi ; call 0x2000015dcc2
0x0000020000533078 : mov rcx, rdi ; call 0x2000015dcc3
0x000002000019ce35 : mov rcx, rdi ; call 0x200001d90e1
0x000002000019cec7 : mov rcx, rdi ; call 0x200001d9191
0x00000200006674bd : mov rcx, rdi ; call 0x20000294e26
0x00000200006740e8 : mov rcx, rdi ; call 0x20000294e27
0x00000200003c8fb0 : mov rcx, rdi ; call 0x20000387c7d
0x00000200004a6b71 : mov rcx, rdi ; call 0x200003b2e65
0x000002000055d3bf : mov rcx, rdi ; call 0x20000409639
0x00000200005c5bf7 : mov rcx, rdi ; call 0x20000431ecd
0x000002000043f60c : mov rcx, rdi ; call 0x2000043f465
0x00000200000d21e6 : mov rcx, rdi ; call 0x2000044cb51
0x00000200004fdfdb : mov rcx, rdi ; call 0x2000045a2d1
0x00000200005c9671 : mov rcx, rdi ; call 0x200005c9925
0x0000020000546f48 : mov rcx, rdi ; call 0x200005d3161
0x00000200005005bb : mov rcx, rdi ; call qword ptr [rax]
0x00000200004be411 : mov rcx, rdi ; call r10
0x000002000048d1a4 : mov rcx, rdi ; call r12
0x00000200000b58a1 : mov rcx, rdi ; call r14
0x0000020000141583 : mov rcx, rdi ; call r15
0x000002000021b146 : mov rcx, rdi ; call r9
0x00000200000bbb6e : mov rcx, rdi ; call rax
0x000002000010af38 : mov rcx, rdi ; call rbx
0x000002000010b201 : mov rcx, rdi ; call rsi
0x00000200006f5317 : mov rcx, rdi ; jmp 0x200007215e7
0x000002000009db17 : mov rcx, rdi ; mov bl, al ; call rsi
0x00000200001ab5c8 : mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000042169e : mov rcx, rdi ; mov dword ptr [rdi + 0x30], ebx ; call 0x20000043cdd
0x000002000046c113 : mov rcx, rdi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x00000200000e3daa : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000055dc66 : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000040dd79 : mov rcx, rdi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x00000200001e9b63 : mov rcx, rdi ; mov rdx, rax ; call qword ptr [rdi]
0x000002000066c09d : mov rcx, rdi ; mov rsi, rax ; call rbx
0x00000200004015a0 : mov rcx, rdi ; mov word ptr [rsi + 2], ax ; call 0x2000015d889
0x0000020000447d76 : mov rcx, rdx ; call 0x20000068fd6
0x00000200003d3305 : mov rcx, rdx ; call 0x2000007290d
0x00000200006cbfc2 : mov rcx, rdx ; call r8
0x000002000008cb32 : mov rcx, rdx ; call r9
0x00000200006e4fc5 : mov rcx, rdx ; call rbx
0x000002000015d2b5 : mov rcx, rdx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x000002000040556f : mov rcx, rsi ; call 0x20000031496
0x0000020000513559 : mov rcx, rsi ; call 0x20000033a6b
0x000002000043933f : mov rcx, rsi ; call 0x20000063d9a
0x000002000043a93c : mov rcx, rsi ; call 0x20000063dda
0x000002000053cdc2 : mov rcx, rsi ; call 0x20000068fd5
0x000002000043930d : mov rcx, rsi ; call 0x20000068fd6
0x000002000043b3f8 : mov rcx, rsi ; call 0x20000068fd7
0x000002000056f557 : mov rcx, rsi ; call 0x20000068fd9
0x000002000003ce1e : mov rcx, rsi ; call 0x200000690a5
0x000002000048e384 : mov rcx, rsi ; call 0x2000006a615
0x000002000043a900 : mov rcx, rsi ; call 0x2000006a616
0x00000200004109d8 : mov rcx, rsi ; call 0x2000006a619
0x00000200004489f4 : mov rcx, rsi ; call 0x200000702b6
0x00000200004a4626 : mov rcx, rsi ; call 0x20000070845
0x0000020000492263 : mov rcx, rsi ; call 0x2000007290d
0x0000020000219363 : mov rcx, rsi ; call 0x2000009565d
0x00000200001e70ac : mov rcx, rsi ; call 0x200000b332d
0x000002000048e3f0 : mov rcx, rsi ; call 0x200000bc776
0x00000200000dbb41 : mov rcx, rsi ; call 0x200000d7dcd
0x000002000050c768 : mov rcx, rsi ; call 0x20000138aca
0x00000200005141da : mov rcx, rsi ; call 0x2000013acde
0x000002000059e4b0 : mov rcx, rsi ; call 0x200001ccfa6
0x0000020000168b45 : mov rcx, rsi ; call 0x20000294e25
0x00000200006674af : mov rcx, rsi ; call 0x20000294e26
0x00000200003e49fa : mov rcx, rsi ; call 0x20000294e29
0x0000020000567428 : mov rcx, rsi ; call 0x2000039b779
0x00000200000d1fac : mov rcx, rsi ; call 0x2000044cb51
0x00000200000b43ff : mov rcx, rsi ; call qword ptr [rbx]
0x000002000019e8a3 : mov rcx, rsi ; call r10
0x0000020000364ee9 : mov rcx, rsi ; call r11
0x00000200003caf41 : mov rcx, rsi ; call r12
0x000002000014138c : mov rcx, rsi ; call r14
0x0000020000214d99 : mov rcx, rsi ; call r9
0x000002000064b933 : mov rcx, rsi ; call rax
0x000002000003d3c8 : mov rcx, rsi ; call rbx
0x000002000003cc1d : mov rcx, rsi ; call rdi
0x00000200003fc740 : mov rcx, rsi ; call rdx
0x00000200003b12b0 : mov rcx, rsi ; jmp 0x200003b11a6
0x0000020000421883 : mov rcx, rsi ; mov dword ptr [rsi + 0x30], ebx ; call 0x20000043cdd
0x000002000064b109 : mov rcx, rsi ; mov dword ptr [rsp + 0x40], r14d ; call rax
0x00000200005f22d6 : mov rcx, rsi ; mov ebx, eax ; call 0x2000051e58b
0x0000020000614e8d : mov rcx, rsi ; mov edi, r15d ; call 0x20000141178
0x00000200003f9564 : mov rcx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000045f799 : mov rcx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200001e49df : mov rcx, rsi ; mov r12d, eax ; call 0x200000c0c1c
0x000002000066bd55 : mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200004465a4 : mov rcx, rsi ; xor edx, edx ; call 0x200000702b8
0x00000200004a590b : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x000002000008a2aa : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000384910 : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200000c021c : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f8d63 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x00000200000bf294 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x000002000008fa4a : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000008f4f3 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000065cd45 : mov rdi, qword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000214312 : mov rdi, qword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000044447c : mov rdi, qword ptr [rcx + 0x10] ; mov rdx, rbx ; call 0x200004e06e1
0x000002000008a5b8 : mov rdi, qword ptr [rsp + 0x10] ; mov al, r9b ; ret
0x00000200000d7da2 : mov rdi, qword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000041070a : mov rdi, qword ptr [rsp + 0x10] ; mov eax, ecx ; ret
0x000002000020aabe : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r10d ; ret
0x00000200000b43ba : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r11d ; ret
0x00000200000d02a6 : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r9d ; ret
0x00000200004b2d3d : mov rdi, qword ptr [rsp + 0x10] ; mov rax, r10 ; ret
0x0000020000710e2e : mov rdi, qword ptr [rsp + 0x10] ; mov rax, r11 ; ret
0x00000200000c097e : mov rdi, qword ptr [rsp + 0x10] ; mov rax, r9 ; ret
0x00000200000355d6 : mov rdi, qword ptr [rsp + 0x10] ; mov rax, rdx ; ret
0x00000200000295fd : mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000ebbe9 : mov rdi, qword ptr [rsp + 0x10] ; xor eax, eax ; ret
0x0000020000200060 : mov rdi, qword ptr [rsp + 0x18] ; mov al, r10b ; ret
0x00000200000fc716 : mov rdi, qword ptr [rsp + 0x18] ; mov al, r9b ; ret
0x00000200004e1335 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000046e62f : mov rdi, qword ptr [rsp + 0x18] ; mov eax, edx ; ret
0x00000200001370a3 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r10d ; ret
0x000002000020b702 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r11d ; ret
0x00000200001fee0e : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r8d ; ret
0x00000200003d8cb3 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r9d ; ret
0x00000200000959d2 : mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000e4c3d : mov rdi, qword ptr [rsp + 0x20] ; mov eax, r9d ; ret
0x0000020000642133 : mov rdi, qword ptr [rsp + 0x20] ; mov rax, r10 ; ret
0x000002000072c1d6 : mov rdi, qword ptr [rsp + 0x20] ; movzx eax, r8w ; ret
0x0000020000100b50 : mov rdi, qword ptr [rsp + 0x20] ; ret
0x000002000008eab1 : mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200004e6308 : mov rdi, qword ptr [rsp + 0x28] ; pop r15 ; ret
0x0000020000459a77 : mov rdi, qword ptr [rsp + 0x28] ; xor eax, eax ; pop r14 ; ret
0x000002000006a791 : mov rdi, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x0000020000085aa0 : mov rdi, qword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x00000200004b3e7a : mov rdi, qword ptr [rsp + 0x48] ; jmp 0x200004b3ede
0x00000200001420d5 : mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000012f581 : mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000123f2e : mov rdi, r8 ; mov rsi, rdx ; call qword ptr [rbx]
0x000002000041581b : mov rdi, r9 ; call 0x20000401a59
0x000002000056bca9 : mov rdi, r9 ; jmp 0x20000437eec
0x0000020000676e85 : mov rdi, rax ; call qword ptr [rip - 0x3d4f86]
0x00000200000889c7 : mov rdi, rax ; jmp 0x2000008858f
0x0000020000037572 : mov rdi, rbp ; jmp 0x200000373b1
0x0000020000596d80 : mov rdi, rbx ; jmp 0x200004c2ff2
0x00000200006e04db : mov rdx, qword ptr [r14 + 0x448] ; mov rax, rdx ; jmp 0x200006e04f2
0x00000200003cc780 : mov rdx, qword ptr [r14 + 0x68] ; mov rcx, rdi ; call rax
0x000002000051c6e9 : mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200001e9b92 : mov rdx, qword ptr [rax + rdx*8 + 0x10] ; call qword ptr [rdi]
0x00000200004cb8e2 : mov rdx, qword ptr [rax] ; add rdx, 8 ; mov rax, rdx ; ret
0x000002000010101f : mov rdx, qword ptr [rbp + 0x20] ; call r10
0x0000020000162a1d : mov rdx, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x0000020000163079 : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x00000200004b683e : mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200001777d9 : mov rdx, qword ptr [rbx + 0x38] ; test rdx, rdx ; je 0x200001777ed ; call rax
0x00000200006caf57 : mov rdx, qword ptr [rbx + 0x448] ; mov rax, rdx ; jmp 0x200006caf6e
0x00000200006dc4d2 : mov rdx, qword ptr [rbx + 0x448] ; mov rax, rdx ; jmp 0x200006dc4e9
0x00000200005db137 : mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200004fb8bc : mov rdx, qword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004fb8b0
0x0000020000149b97 : mov rdx, qword ptr [rcx + 0x20] ; call rax
0x000002000015d2b8 : mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x00000200003b2de8 : mov rdx, qword ptr [rcx + 0x40] ; call rax
0x00000200006c7278 : mov rdx, qword ptr [rcx] ; call r8
0x00000200006cbfba : mov rdx, qword ptr [rcx] ; call r9
0x00000200006d6c0e : mov rdx, qword ptr [rcx] ; call rbx
0x0000020000510bd3 : mov rdx, qword ptr [rdi + 0x20] ; call 0x20000140abf
0x000002000063c3bf : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x000002000063c3f5 : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x0000020000500085 : mov rdx, qword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x00000200006e08b5 : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e08cc
0x00000200006e10a8 : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e10bf
0x00000200006e18b9 : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e18d0
0x00000200006e20da : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e20f1
0x00000200006e28be : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e28d5
0x00000200006e64aa : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e64c1
0x00000200006e6d96 : mov rdx, qword ptr [rdi + 0x448] ; mov rax, rdx ; jmp 0x200006e6dad
0x000002000067244f : mov rdx, qword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x2000067244a ; ret
0x00000200003ffe7d : mov rdx, qword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x0000020000365f5a : mov rdx, qword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x0000020000422781 : mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x000002000019d24b : mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000019d262
0x00000200001c4dca : mov rdx, qword ptr [rdx + rax*8] ; test rdx, rdx ; je 0x200001c4dde ; call rdx
0x0000020000465352 : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000465354 ; ret
0x00000200006e0108 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e011f
0x00000200006e0ca6 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e0cbd
0x00000200006e14a5 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e14bc
0x00000200006e1cba : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e1cd1
0x00000200006e24e8 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e24ff
0x00000200006e6055 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e606c
0x00000200006e68d9 : mov rdx, qword ptr [rsi + 0x448] ; mov rax, rdx ; jmp 0x200006e68f0
0x000002000042157d : mov rdx, qword ptr [rsi + 0x60] ; call 0x2000015d886
0x000002000019cee8 : mov rdx, qword ptr [rsp + 0x28] ; call 0x200001d9193
0x00000200004e2a48 : mov rdx, qword ptr [rsp + 0x40] ; jmp 0x200004e2a18
0x000002000044b142 : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rbp ; call rsi
0x0000020000214d94 : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rsi ; call r9
0x0000020000214de4 : mov rdx, qword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x00000200004c8aa5 : mov rdx, r10 ; jmp r11
0x0000020000364ee6 : mov rdx, r10 ; mov rcx, rsi ; call r11
0x00000200001401b1 : mov rdx, r12 ; call rax
0x00000200004bba03 : mov rdx, r12 ; call rdi
0x000002000064ad7f : mov rdx, r12 ; call rsi
0x00000200005947f1 : mov rdx, r12 ; mov rcx, qword ptr [rdi + rcx*8] ; call 0x20000140ac1
0x00000200000c96f5 : mov rdx, r12 ; mov rcx, r13 ; call rax
0x000002000040c367 : mov rdx, r12 ; mov rcx, r14 ; call rax
0x000002000038cc52 : mov rdx, r12 ; mov rcx, rbp ; call rax
0x00000200005146d2 : mov rdx, r13 ; mov byte ptr [rsi + 0x41], al ; call 0x2000013b15d
0x000002000002a102 : mov rdx, r13 ; mov rcx, rbx ; xor r12d, r12d ; call rsi
0x000002000048d1a1 : mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200004d56e6 : mov rdx, r14 ; call 0x2000011f0a5
0x0000020000437efe : mov rdx, r14 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001a6e58 : mov rdx, r14 ; mov rcx, r12 ; call r15
0x000002000064f67c : mov rdx, r14 ; mov rcx, r12 ; call rax
0x00000200003f81a1 : mov rdx, r14 ; mov rcx, r13 ; call rax
0x00000200004a6910 : mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000537c11 : mov rdx, r14 ; mov rcx, r8 ; call 0x20000157d59
0x0000020000679375 : mov rdx, r14 ; mov rcx, rax ; call r15
0x00000200001eb268 : mov rdx, r14 ; mov rcx, rbx ; call 0x20000087570
0x00000200006d9343 : mov rdx, r14 ; mov rcx, rbx ; call r12
0x000002000055d3bc : mov rdx, r14 ; mov rcx, rdi ; call 0x2000040963c
0x000002000064b930 : mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200006716a1 : mov rdx, r15 ; call rax
0x000002000014134c : mov rdx, r15 ; mov rcx, r12 ; call r14
0x00000200004055d8 : mov rdx, r15 ; mov rcx, rbx ; call r14
0x0000020000141389 : mov rdx, r15 ; mov rcx, rsi ; call r14
0x0000020000139626 : mov rdx, r8 ; call qword ptr [rbx]
0x0000020000233566 : mov rdx, r9 ; mov r8, rax ; jmp 0x2000022f7ac
0x00000200001b9ce7 : mov rdx, r9 ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b9d10
0x00000200001b9d3f : mov rdx, r9 ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b9d69
0x00000200001b9c65 : mov rdx, r9 ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001b9c92
0x00000200006809f6 : mov rdx, rax ; add rsp, 0x38 ; jmp r8
0x0000020000442c03 : mov rdx, rax ; call 0x20000070846
0x0000020000038683 : mov rdx, rax ; call 0x200000d4979
0x00000200001e9b66 : mov rdx, rax ; call qword ptr [rdi]
0x0000020000443f4d : mov rdx, rax ; mov rcx, r12 ; call 0x20000070849
0x00000200005745d7 : mov rdx, rax ; mov rcx, r15 ; call 0x20000070848
0x000002000044ca13 : mov rdx, rax ; mov rcx, r15 ; call 0x20000070849
0x000002000044407d : mov rdx, rax ; mov rcx, rbp ; call 0x20000070849
0x00000200004463d4 : mov rdx, rax ; mov rcx, rbx ; call 0x20000070849
0x000002000011462f : mov rdx, rax ; mov rcx, rdi ; call 0x20000070848
0x00000200004444e7 : mov rdx, rax ; mov rcx, rdi ; call 0x20000070849
0x000002000048f112 : mov rdx, rax ; mov rcx, rdi ; call 0x200000bc6cd
0x00000200004a4623 : mov rdx, rax ; mov rcx, rsi ; call 0x20000070848
0x000002000044e9c6 : mov rdx, rax ; mov rcx, rsi ; call r14
0x0000020000233473 : mov rdx, rax ; sub r8d, r14d ; call 0x2000022f738
0x00000200006652e3 : mov rdx, rbp ; mov rcx, r13 ; call r15
0x000002000066b721 : mov rdx, rbp ; mov rcx, r13 ; call rax
0x00000200004fdfd8 : mov rdx, rbp ; mov rcx, rdi ; call 0x2000045a2d4
0x000002000048e3ed : mov rdx, rbp ; mov rcx, rsi ; call 0x200000bc779
0x00000200003f18da : mov rdx, rbp ; mov rcx, rsi ; call r14
0x0000020000444480 : mov rdx, rbx ; call 0x200004e06dd
0x0000020000443195 : mov rdx, rbx ; call r10
0x0000020000664e4c : mov rdx, rbx ; lea ecx, dword ptr [r9 + 0x35] ; call 0x20000151089
0x00000200004a6a3c : mov rdx, rbx ; mov rcx, r10 ; call rax
0x000002000049b26c : mov rdx, rbx ; mov rcx, r13 ; call 0x200000bc779
0x00000200000e722f : mov rdx, rbx ; mov rcx, r13 ; call r12
0x000002000066c378 : mov rdx, rbx ; mov rcx, r14 ; call r12
0x00000200000a6c7d : mov rdx, rbx ; mov rcx, r15 ; call r12
0x0000020000546f45 : mov rdx, rbx ; mov rcx, rdi ; call 0x200005d3164
0x00000200004be40e : mov rdx, rbx ; mov rcx, rdi ; call r10
0x0000020000141580 : mov rdx, rbx ; mov rcx, rdi ; call r15
0x00000200006729de : mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000010b1fe : mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200006cf07b : mov rdx, rbx ; pop rbx ; add rsp, 8 ; jmp r8
0x000002000011b560 : mov rdx, rcx ; je 0x200001ac20b ; ret
0x0000020000671588 : mov rdx, rcx ; jne 0x20000671597 ; xor eax, eax ; ret
0x0000020000453547 : mov rdx, rcx ; mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000010af35 : mov rdx, rcx ; mov rcx, rdi ; call rbx
0x000002000044cd91 : mov rdx, rdi ; call 0x20000070d76
0x0000020000463fb1 : mov rdx, rdi ; call 0x2000008a166
0x00000200004704c5 : mov rdx, rdi ; call 0x200000bc775
0x000002000021f683 : mov rdx, rdi ; call 0x20000214183
0x000002000021f682 : mov rdx, rdi ; call 0x20000214184
0x000002000021f681 : mov rdx, rdi ; call 0x20000214185
0x00000200006fe18b : mov rdx, rdi ; call 0x200004ba3f9
0x000002000045ace4 : mov rdx, rdi ; call qword ptr [rax]
0x00000200001fe152 : mov rdx, rdi ; call rax
0x000002000049baf9 : mov rdx, rdi ; mov rcx, r13 ; call 0x200000bc779
0x0000020000170c74 : mov rdx, rdi ; mov rcx, r14 ; call 0x2000022cf38
0x00000200000d8c51 : mov rdx, rdi ; mov rcx, r14 ; call rax
0x000002000059ba4d : mov rdx, rdi ; mov rcx, r15 ; call 0x20000047c78
0x00000200005ae431 : mov rdx, rdi ; mov rcx, r15 ; call rax
0x000002000044a57d : mov rdx, rdi ; mov rcx, rbp ; call 0x20000074ed5
0x00000200001e0379 : mov rdx, rdi ; mov rcx, rbp ; call rax
0x000002000064046b : mov rdx, rdi ; mov rcx, rbx ; call 0x200000bc778
0x00000200001c1d1a : mov rdx, rdi ; mov rcx, rbx ; call r10
0x000002000050c765 : mov rdx, rdi ; mov rcx, rsi ; call 0x20000138acd
0x00000200005141d7 : mov rdx, rdi ; mov rcx, rsi ; call 0x2000013ace1
0x00000200005ae46c : mov rdx, rdi ; mov rcx, rsi ; call r10
0x000002000066bd52 : mov rdx, rdi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000066e68e : mov rdx, rsi ; call 0x2000004a8bd
0x000002000009b5ec : mov rdx, rsi ; call 0x2000009782d
0x00000200004fb4f5 : mov rdx, rsi ; call r12
0x0000020000141318 : mov rdx, rsi ; call r14
0x00000200001b496b : mov rdx, rsi ; call rax
0x0000020000512fec : mov rdx, rsi ; mov rcx, r14 ; call 0x2000013a8b5
0x00000200001375cc : mov rdx, rsi ; mov rcx, r15 ; call r14
0x00000200003f7f11 : mov rdx, rsi ; mov rcx, r15 ; call rax
0x000002000048e86b : mov rdx, rsi ; mov rcx, r9 ; call 0x200003cab18
0x0000020000190ca5 : mov rdx, rsi ; mov rcx, rbp ; call 0x2000022cf38
0x00000200003ff5fe : mov rdx, rsi ; mov rcx, rbp ; call rax
0x0000020000492938 : mov rdx, rsi ; mov rcx, rbx ; call 0x200000bc6cd
0x0000020000067c38 : mov rdx, rsi ; mov rcx, rbx ; call 0x20000153ec8
0x00000200005381f7 : mov rdx, rsi ; mov rcx, rbx ; call 0x2000015d889
0x00000200004bd6d1 : mov rdx, rsi ; mov rcx, rbx ; call r11
0x00000200006dc58f : mov rdx, rsi ; mov rcx, rbx ; call r12
0x00000200001413dd : mov rdx, rsi ; mov rcx, rbx ; call r14
0x00000200005a1dbf : mov rdx, rsi ; mov rcx, rbx ; call rax
0x00000200005005b8 : mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x000002000014140d : mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000021b143 : mov rdx, rsi ; mov rcx, rdi ; call r9
0x00000200006077c7 : mov rdx, rsi ; mov rcx, rdi ; call rax
0x00000200001a741b : mov rdx, rsi ; mov rcx, rdi ; call rbx
0x0000020000155fb4 : mov rdx, rsp ; lea r8, qword ptr [rbp - 0x80] ; call 0x20000042299
0x000002000049afec : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x000002000004a635 : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e97a9 : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x000002000048569f : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000008f888 : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004700fa : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000a4d65 : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000100221 : mov rsi, qword ptr [rsp + 0x10] ; ret
0x00000200000d5fb0 : mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000208c46 : mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x00000200000ca952 : mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200005f0a26 : mov rsi, qword ptr [rsp + 0x28] ; mov eax, r11d ; pop rdi ; ret
0x00000200000710ba : mov rsi, r12 ; jmp 0x20000070fa9
0x0000020000438430 : mov rsi, r14 ; jmp 0x200004383fb
0x000002000067d5a1 : mov rsi, rax ; call qword ptr [rdi]
0x000002000066c0a0 : mov rsi, rax ; call rbx
0x00000200004ff35d : mov rsi, rcx ; call 0x2000012e1be
0x00000200001fb161 : mov rsi, rcx ; jmp 0x200001fb1cd
0x0000020000668d00 : mov rsi, rdx ; call 0x20000674f7d
0x00000200001e0830 : mov rsi, rdx ; call qword ptr [rax]
0x0000020000123f31 : mov rsi, rdx ; call qword ptr [rbx]
0x00000200001e06f3 : mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000159538 : mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000015ca5e : mov rsp, qword ptr [rsp + 0x100] ; sti ; ret
0x00000200004d74ff : mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200002023bc : mov rsp, r11 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f8d67 : mov rsp, r11 ; pop r12 ; ret
0x00000200004ba776 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200000ff040 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000047c4cc : mov rsp, r11 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000007465a : mov rsp, r11 ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000c288c : mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000025313 : mov rsp, r11 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000bf298 : mov rsp, r11 ; pop r14 ; ret
0x00000200005030ad : mov rsp, r11 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200004c6384 : mov rsp, r11 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000405e59 : mov rsp, r11 ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200001b77f6 : mov rsp, r11 ; pop r15 ; pop r13 ; pop rdi ; ret
0x0000020000024e29 : mov rsp, r11 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000065ad9 : mov rsp, r11 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000b9f90 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000287b2 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003a602b : mov rsp, r11 ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000123c27 : mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000062e34a : mov rsp, r11 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000008fa4e : mov rsp, r11 ; pop r15 ; ret
0x0000020000083f37 : mov rsp, r11 ; pop rbp ; ret
0x000002000004a639 : mov rsp, r11 ; pop rdi ; ret
0x00000200005cc4a6 : mov rsp, r11 ; pop rsi ; ret
0x000002000048a1c1 : mov si, 0xe9ff ; sar ch, 0xff ; push rsi ; ret 0xf04
0x00000200004e7e27 : mov spl, 0xb ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000072829c : mov spl, 0xfe ; dec dword ptr [rax - 9] ; ret
0x00000200001fe14d : mov ss, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; xlatb ; call rax
0x00000200000729f0 : mov ss, word ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0xe083
0x000002000047a8ce : mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x000002000010878a : mov word ptr [r10 + 2], r8w ; ret
0x00000200002373c1 : mov word ptr [r10], cx ; ret
0x0000020000616643 : mov word ptr [r10], r9w ; mov al, 1 ; ret
0x000002000038212f : mov word ptr [r15], cx ; jmp 0x200003820fd
0x00000200001e60bc : mov word ptr [r8 + 0xa], cx ; ret
0x00000200005202dc : mov word ptr [r8 + 6], ax ; ret
0x00000200001a2c3f : mov word ptr [r8], ax ; ret
0x000002000046c181 : mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200001c6657 : mov word ptr [r8], si ; test rax, rax ; je 0x200001c666d ; call rax
0x00000200001a5c6a : mov word ptr [rax + 0x1a4ce6], es ; add rcx, r8 ; jmp rcx
0x0000020000079286 : mov word ptr [rax + 0x23], cs ; ret
0x00000200003c9a35 : mov word ptr [rax + 0x3c9448], es ; add rcx, r8 ; jmp rcx
0x000002000000e22d : mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x000002000053d3ac : mov word ptr [rax + 2], r8w ; call 0x2000015d888
0x00000200005fccb3 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xb60b
0x000002000020cfa5 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000046733d : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000057462b : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000020d977 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000469c07 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000071c74 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000456fb2 : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000015e0b0 : mov word ptr [rax + rax], ss ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200006169bc : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4e
0x00000200006d9683 : mov word ptr [rax + rbx*2], fs ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000008618f : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb9
0x00000200003ec5a3 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006372ae : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000457693 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xf5b7
0x000002000062038b : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000cb023 : mov word ptr [rax + rcx*8], fs ; add al, byte ptr [rax] ; add al, ch ; ret 0x21
0x0000020000455b97 : mov word ptr [rax + rcx*8], fs ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfff8
0x0000020000222830 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp + 0xb], cl ; ret 0x8948
0x00000200000b0219 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x54], cl ; ret 0x508
0x0000020000484ecd : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200001c563f : mov word ptr [rax + rdi*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x0000020000168b80 : mov word ptr [rax + rdx*2], fs ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0x12
0x000002000006c9b5 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000c5fa2 : mov word ptr [rax + rdx*8], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003f378f : mov word ptr [rax + rdx*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 1
0x00000200006346c5 : mov word ptr [rax + rdx*8], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200000642d9 : mov word ptr [rax + rsi*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000060db0b : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d0173 : mov word ptr [rax - 0x7affcac6], ss ; ror byte ptr [rdi], 0x44 ; ret 0x8b49
0x0000020000201706 : mov word ptr [rax], ds ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000046be61 : mov word ptr [rax], dx ; ret
0x00000200000efc3a : mov word ptr [rax], es ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008ec50 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x00000200004cd197 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; popfq ; ret 0xe9ff
0x00000200000861cb : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000169ff7 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000384cf5 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x99e8
0x000002000050ccfe : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000533346 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200000aa33d : mov word ptr [rax], ss ; add al, 4 ; add byte ptr [rax], al ; ret
0x00000200001363b4 : mov word ptr [rbp + 0x3b], cs ; ret 0x6674
0x000002000052010f : mov word ptr [rbp - 0x25], ds ; inc dword ptr [rax] ; ret
0x000002000021803b : mov word ptr [rbp - 0x3d], ax ; call r9
0x0000020000653c02 : mov word ptr [rbp - 0x55], ax ; call 0x2000006fe26
0x00000200004f28af : mov word ptr [rbp - 0x78], ax ; call 0x200004aeaf6
0x00000200004b6675 : mov word ptr [rbx + 0x40], dx ; call 0x200000e1ac7
0x000002000053d554 : mov word ptr [rbx + 2], bp ; call 0x2000015d887
0x000002000062db19 : mov word ptr [rbx + 8], ax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000613762 : mov word ptr [rbx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059023e : mov word ptr [rbx], cx ; add word ptr [rbx + 2], ax ; jmp 0x200004ac4cc
0x0000020000421144 : mov word ptr [rbx], gs ; ret 0xebff
0x0000020000520160 : mov word ptr [rcx + 0x1d2], 0 ; ret
0x000002000020a7f3 : mov word ptr [rcx + 0x48], ax ; ret
0x0000020000651619 : mov word ptr [rcx + 0x650900], es ; add rcx, r9 ; jmp rcx
0x00000200004d12c0 : mov word ptr [rcx + 0xa4], ax ; ret
0x000002000065d1c7 : mov word ptr [rcx + 0xd6], ax ; ret
0x000002000006fe56 : mov word ptr [rcx + 2], ax ; ret
0x00000200000b4dd3 : mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200004ca506 : mov word ptr [rcx + 2], dx ; ret
0x000002000047a812 : mov word ptr [rcx + 6], ax ; xor eax, eax ; ret
0x0000020000171d68 : mov word ptr [rcx - 0x14], gs ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200000a50f6 : mov word ptr [rcx - 0x74ffffff], ss ; ret 0xf066
0x00000200000c158a : mov word ptr [rcx - 0x75], cs ; ret 0x2b48
0x00000200001a10dc : mov word ptr [rcx - 0xb], dr1 ; dec dword ptr [rax + 0x3b] ; ret 0xc77
0x0000020000232525 : mov word ptr [rcx], bx ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000046be5e : mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x0000020000142063 : mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x00000200000c008b : mov word ptr [rcx], r11w ; ret
0x00000200000f7da8 : mov word ptr [rdi + 0xf6e40], es ; add rcx, rdi ; jmp rcx
0x00000200004e2790 : mov word ptr [rdi - 0x4d], dr1 ; jmp qword ptr [rcx]
0x0000020000497bec : mov word ptr [rdi], gs ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x0000020000107e1e : mov word ptr [rdx + 0x106e44], es ; add rcx, rdx ; jmp rcx
0x000002000002b346 : mov word ptr [rdx + 0x14], ax ; ret
0x0000020000157696 : mov word ptr [rdx + 0x2cc0], ax ; ret
0x00000200001348ed : mov word ptr [rdx + 0x353a90], es ; ret
0x0000020000398ac7 : mov word ptr [rdx + 0x3983c0], dr1 ; add rcx, rdx ; jmp rcx
0x000002000039cd3e : mov word ptr [rdx + 0x39f05c], es ; add rcx, rdx ; jmp rcx
0x00000200003c9d05 : mov word ptr [rdx + 0x3c94a4], es ; add rcx, rdx ; jmp rcx
0x00000200003c9f8a : mov word ptr [rdx + 0x3c94fc], es ; add rcx, rdx ; jmp rcx
0x0000020000420bef : mov word ptr [rdx + 0x41fc04], es ; add rcx, rdx ; jmp rcx
0x0000020000422c8a : mov word ptr [rdx + 0x421cf0], es ; add rcx, rdx ; jmp rcx
0x00000200000658b0 : mov word ptr [rdx + 0x64e24], dr0 ; add rcx, rdx ; jmp rcx
0x0000020000065b3a : mov word ptr [rdx + 0x64e84], dr0 ; add rcx, rdx ; jmp rcx
0x000002000065bcbf : mov word ptr [rdx + 0x65b3dc], es ; add rcx, rdx ; jmp rcx
0x000002000050805d : mov word ptr [rdx + 0xa], ax ; and word ptr [rdx + 8], cx ; ret
0x00000200000b7532 : mov word ptr [rdx + 0xb67e4], es ; add rcx, rdx ; jmp rcx
0x00000200000dfaa9 : mov word ptr [rdx + 0xdf1b4], es ; add rcx, rdx ; jmp rcx
0x000002000067573d : mov word ptr [rdx + 2], r8w ; ret
0x00000200004cfcb0 : mov word ptr [rdx - 0x74b70023], es ; ret 0xb48
0x000002000015e28c : mov word ptr [rdx], ax ; ret
0x00000200001c5414 : mov word ptr [rdx], ax ; xor eax, eax ; ret
0x000002000020a033 : mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x000002000012381a : mov word ptr [rdx], es ; add byte ptr [rax], al ; ret
0x00000200006684f6 : mov word ptr [rdx], es ; add byte ptr [rcx - 1], al ; ret
0x0000020000675739 : mov word ptr [rdx], r8w ; mov word ptr [rdx + 2], r8w ; ret
0x0000020000507063 : mov word ptr [rdx], r9w ; mov al, r11b ; jmp 0x20000507037
0x000002000013453d : mov word ptr [rip + 0x170f24], cx ; ret
0x00000200003e599d : mov word ptr [rip - 0x11d244], ax ; ret
0x00000200003e59a5 : mov word ptr [rip - 0x11d24d], r8w ; ret
0x0000020000551620 : mov word ptr [rip - 0x3974bb00], ss ; call 0x2000015d888
0x0000020000442ac8 : mov word ptr [rsi + 0x26], dr0 ; add dh, dh ; ret
0x00000200004015a3 : mov word ptr [rsi + 2], ax ; call 0x2000015d886
0x0000020000492f38 : mov word ptr [rsi + rax*2 + 0xc], r9w ; call 0x200000b4dad
0x000002000000e6d9 : mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000015acf0 : mov word ptr [rsi], ds ; add byte ptr [rax], al ; nop ; ret
0x0000020000436140 : mov word ptr [rsi], gs ; ret
0x000002000050830e : mov word ptr [rsp + rdi + 0x20], bx ; call 0x20000137fec
0x00000200006cd5ad : mov word ptr [rsp + rdi*8], fs ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000453494 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add bl, ch ; out 0x8b, al ; ret 0x4166
0x00000200004a195d : mov word ptr [rsp + rdx*4], fs ; add dword ptr [rax], eax ; add al, ch ; pop rax ; ret 0xffcb
0x000002000045acf9 : movabs al, byte ptr [0x18538d48cbebffc0] ; call rax
0x00000200005e6864 : movabs al, byte ptr [0x274c08548000029] ; call rax
0x00000200001cbe47 : movabs al, byte ptr [0x274c98548000000] ; call rcx
0x00000200000cb751 : movabs al, byte ptr [0x2b04438b41fffff9] ; ret
0x000002000046a1b5 : movabs al, byte ptr [0x3058bffcf3a05e8] ; ret
0x000002000000ed2f : movabs al, byte ptr [0x32188b65b1df219e] ; ret
0x0000020000052203 : movabs al, byte ptr [0x3349c38b48fffffb] ; ret 0xa948
0x00000200003bb0be : movabs al, byte ptr [0x3b48028b48000000] ; ret 0x850f
0x0000020000671db7 : movabs al, byte ptr [0x4d6058b48000000] ; ret
0x000002000000d173 : movabs al, byte ptr [0x4e048354d70dd2ee] ; ret 0x3b3
0x000002000066cbb9 : movabs al, byte ptr [0x56d4058b48000000] ; ret
0x000002000060bb6c : movabs al, byte ptr [0x5b40c48348ffb3d2] ; ret
0x0000020000091e20 : movabs al, byte ptr [0x5d5c415d41000000] ; ret
0x00000200003f12e5 : movabs al, byte ptr [0x5d5e415f41000001] ; ret
0x0000020000596d7c : movabs al, byte ptr [0x65e9fb8b48ffcfe0] ; ret 0xfff2
0x000002000067b4c7 : movabs al, byte ptr [0x6dc6058b48000000] ; ret 0x48ff
0x0000020000387875 : movabs al, byte ptr [0x7e850fcafffffff5] ; ret
0x00000200004f92b0 : movabs al, byte ptr [0x8348084188000000] ; ret 0x4808
0x0000020000720c79 : movabs al, byte ptr [0x83c0d8d48000000] ; ret
0x0000020000669e6f : movabs al, byte ptr [0x841e058b48000000] ; ret
0x00000200003ee67d : movabs al, byte ptr [0x850fc08548000003] ; ret 0
0x00000200003d55c6 : movabs al, byte ptr [0x8538438b41000000] ; ret
0x00000200005c3bf8 : movabs al, byte ptr [0x880fc085d88bffb8] ; ret
0x000002000046d25c : movabs al, byte ptr [0x8b01518d3474c985] ; ret 0xb70f
0x00000200004a7213 : movabs al, byte ptr [0x8b3824748b48ffbc] ; ret
0x00000200006d7853 : movabs al, byte ptr [0x8b48c88b41000000] ; ret
0x0000020000169d3a : movabs al, byte ptr [0x8b4dcb8b4c000000] ; ret 0x8b49
0x0000020000067b4e : movabs al, byte ptr [0x8bbe0f1774000000] ; ret
0x0000020000280fc0 : movabs al, byte ptr [0x9c0013ccab0013ca] ; jmp qword ptr [rdi]
0x00000200003c7351 : movabs al, byte ptr [0x9ca40d8d4c000005] ; ret
0x000002000000fb27 : movabs al, byte ptr [0x9ef3685456a26e5a] ; ret
0x0000020000667ada : movabs al, byte ptr [0xa7b3058b48000000] ; ret
0x00000200006671c7 : movabs al, byte ptr [0xb0c6058b48000000] ; ret
0x0000020000150e55 : movabs al, byte ptr [0xb722e9000001] ; ret
0x00000200005385d1 : movabs al, byte ptr [0xb8e9068941000000] ; ret
0x000002000065c1bc : movabs al, byte ptr [0xbbd1058b48000000] ; ret
0x00000200005ae5bd : movabs al, byte ptr [0xc748c03345000000] ; ret 0x6980
0x0000020000014bd8 : movabs al, byte ptr [0xcc00000001402a8d] ; ret
0x0000020000413350 : movabs al, byte ptr [0xd40d8b4808578b49] ; ret
0x000002000014ee55 : movabs al, byte ptr [0xd722e9000000] ; ret
0x0000020000513a2c : movabs al, byte ptr [0xff40458b48ffb555] ; ret
0x00000200005fe73e : movabs byte ptr [0x220f44d6b60f40ff], al ; ret 0x8b49
0x000002000060744c : movabs byte ptr [0x220f44d7b60f40ff], al ; ret 0x8d48
0x00000200001d393e : movabs byte ptr [0x28c48348c033fff8], al ; ret
0x00000200003960ff : movabs byte ptr [0x3804589f88b0009], al ; ret
0x0000020000626d06 : movabs byte ptr [0x5b20c48348ffb107], al ; ret
0x0000020000686e0f : movabs byte ptr [0x5b30c48348ccffac], al ; ret
0x000002000071eb46 : movabs byte ptr [0x5b5d38c4834890ff], al ; ret
0x0000020000161b52 : movabs byte ptr [0x5d50c4834890ffee], al ; ret
0x0000020000121e95 : movabs byte ptr [0x74085f39480008c2], al ; ret
0x0000020000666e9d : movabs byte ptr [0x81417fffffed0002], al ; ret 0xffc3
0x000002000011c462 : movabs byte ptr [0x83487f4d8900234b], al ; ret 0x6608
0x000002000012e9da : movabs byte ptr [0x8b007d89490002ee], al ; ret
0x0000020000666ed0 : movabs byte ptr [0x8b41831489460002], al ; ret 0x3b45
0x000002000051ed0d : movabs byte ptr [0x8b48104d8b48ffb4], al ; ret
0x00000200004a3b39 : movabs byte ptr [0x8b4824748b48000e], al ; ret
0x0000020000729f58 : movabs byte ptr [0x8b48ca8b4cccccff], al ; ret 0x8d48
0x0000020000150e95 : movabs byte ptr [0xb6e2e9000001], al ; ret
0x00000200004df14a : movabs byte ptr [0xc0940f03a8ffdd03], al ; ret
0x000002000014ee95 : movabs byte ptr [0xd6e2e9000000], al ; ret
0x0000020000713a7a : movabs byte ptr [0xdddb058948ffc3d9], al ; ret
0x0000020000718f6f : movabs byte ptr [0xe8c48148ff], al ; ret
0x000002000000e280 : movabs byte ptr [0xea736cac0799c984], al ; ret
0x000002000009d7c7 : movabs dword ptr [0x28c48348c033000e], eax ; ret
0x0000020000611322 : movabs dword ptr [0x5b20c48348c033ff], eax ; ret
0x000002000060c739 : movabs dword ptr [0x5b20c48348ffab09], eax ; ret
0x00000200007128f9 : movabs dword ptr [0x5f50c48348c033ff], eax ; ret
0x0000020000070270 : movabs dword ptr [0x83482472028944c3], eax ; ret 0x490c
0x000002000012fc20 : movabs dword ptr [0x8349c1ff412f72c8], eax ; ret 0x4108
0x00000200004936be : movabs dword ptr [0x8b084f8b41000001], eax ; ret 0xd148
0x000002000040ab09 : movabs dword ptr [0x8b60245c8d4cffe8], eax ; ret
0x000002000068841c : movabs dword ptr [0x8bbf3061830472ed], eax ; ret
0x0000020000150eb5 : movabs dword ptr [0xb6c2e9000001], eax ; ret
0x000002000065c4fd : movabs dword ptr [0xb70f0e74d83b66ff], eax ; ret
0x0000020000700fd1 : movabs dword ptr [0xba8aa105c7ffba8a], eax ; call qword ptr [rbx]
0x000002000014cad3 : movabs dword ptr [0xc032c301b00373c1], eax ; ret
0x000002000013c31b : movabs dword ptr [0xc18b41c1920f41c2], eax ; ret
0x000002000014eeb5 : movabs dword ptr [0xd6c2e9000000], eax ; ret
0x0000020000445fd1 : movabs dword ptr [0xe91830ba0ff00012], eax ; ret
0x000002000054bd34 : movabs dword ptr [0xe9c00000f1b8ffe8], eax ; ret 0xe8a8
0x0000020000208791 : movabs dword ptr [0xff48c0ff48107211], eax ; ret 0x3b49
0x00000200003e4508 : movabs dword ptr [0xfffff58010804140], eax ; ret
0x00000200003e44ca : movabs dword ptr [0xfffff58010804144], eax ; ret
0x000002000015e1fa : movabs dword ptr [0xfffff78000000340], eax ; ret
0x00000200001336fe : movabs eax, dword ptr [0x28c48348c0330002] ; ret
0x0000020000614b70 : movabs eax, dword ptr [0x5d5f38c4834890ff] ; ret
0x00000200006206e3 : movabs eax, dword ptr [0x8ac3950fc08548ff] ; ret
0x000002000011235b : movabs eax, dword ptr [0x8b48ca8b48fffffc] ; ret 0xd148
0x0000020000187212 : movabs eax, dword ptr [0x8b4c09eac149001c] ; ret 0x8b4d
0x000002000017e439 : movabs eax, dword ptr [0x8b4cc93345ffefbd] ; ret
0x00000200001f1c0e : movabs eax, dword ptr [0x8b4ccd8b4c000000] ; ret
0x00000200001a5c0b : movabs eax, dword ptr [0x950fc83b4800131d] ; ret
0x0000020000405a3b : movabs eax, dword ptr [0xb52ae8d38affecd5] ; ret 0x48ff
0x0000020000150e75 : movabs eax, dword ptr [0xb702e9000001] ; ret
0x000002000001089f : movabs eax, dword ptr [0xc063c9e4cec12226] ; ret
0x00000200000780c4 : movabs eax, dword ptr [0xc4e8cf8b4800105a] ; ret 9
0x0000020000011328 : movabs eax, dword ptr [0xcaa654caa598164f] ; ret
0x000002000014ee75 : movabs eax, dword ptr [0xd702e9000000] ; ret
0x00000200000f2fcf : movabs eax, dword ptr [0xebf88b9beb001405] ; ret 0xcccc
0x00000200005190d3 : movabs eax, dword ptr [0xf61fc10f48f00009] ; ret
0x000002000044b8dd : movabs eax, dword ptr [0xffbfffff000004a8] ; ret
0x00000200001d6aa1 : movaps xmm1, xmmword ptr [rcx + 0x50] ; movaps xmmword ptr [r10 + 0x50], xmm1 ; ret
0x000002000015defd : movaps xmm1, xmmword ptr [rdx + 0x10] ; movaps xmmword ptr [rcx + 0x10], xmm1 ; ret
0x000002000012fda6 : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x000002000012fda7 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d6aa5 : movaps xmmword ptr [r10 + 0x50], xmm1 ; ret
0x00000200005c98a0 : movaps xmmword ptr [rcx + 0x10], xmm1 ; add rsp, 0x28 ; ret
0x000002000015df01 : movaps xmmword ptr [rcx + 0x10], xmm1 ; ret
0x00000200000ffa7f : movaps xmmword ptr [rcx - 0x10], xmm1 ; dec rax ; jne 0x200000ffa48 ; ret
0x00000200001d6aa6 : movaps xmmword ptr [rdx + 0x50], xmm1 ; ret
0x00000200001593e1 : movdqa xmmword ptr [rcx + 0xf0], xmm15 ; ret
0x0000020000648021 : movdqu xmmword ptr [r10], xmm0 ; add rsp, 0x28 ; ret
0x00000200004d5264 : movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x000002000061a22b : movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x00000200004b209b : movdqu xmmword ptr [rbp - 0x18], xmm0 ; call r14
0x00000200005c97fa : movdqu xmmword ptr [rcx + 0x20], xmm0 ; add rsp, 0x28 ; ret
0x0000020000212ce4 : movdqu xmmword ptr [rdx], xmm0 ; add qword ptr [rdx + 8], -0x18 ; ret
0x00000200004a63ff : movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x000002000019d1fe : movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000134541 : movhps qword ptr [rax], xmm0 ; ret
0x000002000015850a : movnti dword ptr [rcx], eax ; sfence ; ret
0x0000020000158509 : movnti qword ptr [rcx], rax ; sfence ; ret
0x00000200004dd0ab : movntps xmmword ptr [rax + rax], xmm1 ; mov al, 1 ; ret
0x0000020000648022 : movq qword ptr [r10], mm0 ; add rsp, 0x28 ; ret
0x0000020000211fad : movq qword ptr [r8], mm0 ; mov eax, 1 ; ret
0x00000200004d5265 : movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x000002000061a22c : movq qword ptr [rax + 8], mm0 ; ret
0x0000020000211fae : movq qword ptr [rax], mm0 ; mov eax, 1 ; ret
0x00000200004d5266 : movq qword ptr [rax], mm0 ; mov eax, edx ; ret
0x00000200004b209c : movq qword ptr [rbp - 0x18], mm0 ; call r14
0x00000200005c97fb : movq qword ptr [rcx + 0x20], mm0 ; add rsp, 0x28 ; ret
0x00000200001593e3 : movq qword ptr [rcx + 0xf0], mm7 ; ret
0x0000020000159483 : movq qword ptr [rcx + 0xf0], mm7 ; xor eax, eax ; ret
0x0000020000212ce5 : movq qword ptr [rdx], mm0 ; add qword ptr [rdx + 8], -0x18 ; ret
0x0000020000648023 : movq qword ptr [rdx], mm0 ; add rsp, 0x28 ; ret
0x00000200004a6400 : movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x000002000019d1ff : movq qword ptr [rdx], mm0 ; ret
0x000002000041571c : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add rsp, 0x38 ; ret
0x00000200001e7ecb : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000211b3 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x00000200003ad44b : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3a41f341], cl ; ret 0x860f
0x0000020000168e5d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x52880fc0], al ; ret
0x000002000021cf4f : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x000002000048c04b : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000008dfec : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x000002000064d006 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000009c749 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000071dc9 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000015ca60 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000042a6ff : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret 0xf79b
0x000002000050c8cd : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000483cc7 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000038572a : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x00000200001282fb : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xf6b9
0x0000020000012e88 : movsb byte ptr [rdi], byte ptr [rsi] ; and dword ptr [rdi], ecx ; add eax, 0x1ac10510 ; ret
0x0000020000563018 : movsb byte ptr [rdi], byte ptr [rsi] ; call rsi
0x000002000062e768 : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov cl, 0xff ; add rsp, 0x58 ; ret
0x0000020000672420 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000198d40 : movsb byte ptr [rdi], byte ptr [rsi] ; fdivr st(3), st(0) ; push rsi ; ret
0x0000020000574ba8 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; push rdi ; ret
0x00000200006f452d : movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200006f59df : movsb byte ptr [rdi], byte ptr [rsi] ; inc ebx ; xor eax, eax ; ret
0x0000020000240fbc : movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rbx]
0x00000200001c0378 : movsb byte ptr [rdi], byte ptr [rsi] ; jne 0x200001c0395 ; add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret
0x000002000052df8a : movsb byte ptr [rdi], byte ptr [rsi] ; mov dl, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000000df83 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x000002000000efd2 : movsb byte ptr [rdi], byte ptr [rsi] ; or ah, cl ; jge 0x2000000f006 ; ret
0x0000020000174390 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200004c897e : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; dec dword ptr [rbp - 0x74bb02a9] ; ret 0x8b48
0x000002000051c901 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; add byte ptr [rax], al ; call r14
0x00000200000d28fc : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; or al, 0 ; mov eax, r9d ; ret
0x00000200005fd29a : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; ret
0x00000200003c7358 : movsb byte ptr [rdi], byte ptr [rsi] ; pushfq ; ret
0x000002000003c040 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200000bb5b8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x21
0x000002000026d2cc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x26
0x00000200005333c6 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x44ff
0x000002000059651d : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x45ff
0x0000020000407032 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x65ff
0x0000020000533800 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x89ff
0x0000020000042025 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xd80
0x00000200004463dc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe9ff
0x00000200005964fc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xebff
0x00000200005f22dc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff2
0x00000200005a7583 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff4
0x0000020000520154 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; ret
0x00000200000b62d8 : movsb byte ptr [rdi], byte ptr [rsi] ; scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; ret
0x0000020000278874 : movsb byte ptr [rdi], byte ptr [rsi] ; shr dword ptr [rax], 0x56 ; ret 0x68
0x00000200003c9d07 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esp ; cmp al, 0 ; add rcx, rdx ; jmp rcx
0x0000020000681834 : movsb byte ptr [rdi], byte ptr [rsi] ; xor bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000cb8aa : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000666b82 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; jmp 0x20000666b94
0x0000020000666b81 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; jmp 0x20000666b95
0x000002000012d987 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001e29b : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200005800c6 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; shr cl, 0xe9 ; ret
0x0000020000148f2b : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x39] ; ret
0x000002000070d213 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000060a417 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000060fc12 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000123cee : movsd dword ptr [rdi], dword ptr [rsi] ; fstp dword ptr [rbx] ; add byte ptr [rax], al ; setne al ; ret
0x00000200003a00c0 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, 0x39 ; add byte ptr [rip + 0x380039ed], cl ; ret 0x39
0x0000020000159f2a : movsd dword ptr [rdi], dword ptr [rsi] ; lock or byte ptr [rsp], 0 ; ret
0x00000200004abd98 : movsd dword ptr [rdi], dword ptr [rsi] ; loop 0x200004abda0 ; call 0x200000d6f2e
0x00000200004abd97 : movsd dword ptr [rdi], dword ptr [rsi] ; loop 0x200004abda1 ; call 0x200000d6f2f
0x0000020000014a48 : movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x0000020000714880 : movsd dword ptr [rdi], dword ptr [rsi] ; mov ecx, 0x49c033ff ; mov esp, ebx ; pop rbp ; ret
0x00000200000146e0 : movsd dword ptr [rdi], dword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x0000020000072a23 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0x700
0x00000200005d0058 : movsd dword ptr [rdi], dword ptr [rsi] ; or eax, 0xc0854800 ; je 0x200005d006c ; jmp qword ptr [rax]
0x00000200000107d9 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1ffffed9c6b
0x00000200000107d8 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1ffffed9c6c
0x0000020000022f42 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rdx ; ret 0x594d
0x00000200005fd2ac : movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x0000020000374efe : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200003ef947 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xbaff
0x00000200000c8c9c : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xc
0x00000200003d8b7f : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe8ff
0x00000200005964c0 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xe9ff
0x00000200003fd636 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xebff
0x00000200001755c7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffee
0x00000200001815d7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffd
0x000002000068c757 : movsd dword ptr [rdi], dword ptr [rsi] ; sar edi, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006e9014 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0xc748
0x0000020000197399 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, esp ; push rsi ; ret 0xf03
0x0000020000651fe0 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200003d8b7e : movsd dword ptr [rdi], dword ptr cs:[rsi] ; ret 0xe8ff
0x00000200000146df : movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x00000200000d4f9c : movsx eax, byte ptr [rcx + 0xc3] ; ret
0x0000020000492b96 : movsx eax, cl ; xor eax, 0x20 ; ret
0x0000020000492b95 : movsx eax, r9b ; xor eax, 0x20 ; ret
0x0000020000039fef : movsxd r8, eax ; jne 0x2000003a030 ; ret
0x0000020000039ff0 : movsxd rax, eax ; jne 0x2000003a02f ; ret
0x00000200000108a6 : movsxd rax, eax ; ret
0x00000200003f7da2 : movsxd rbp, eax ; pop rax ; ret 0xffe9
0x00000200005e1538 : movsxd rbp, eax ; ret 0xcb2a
0x00000200003793fc : movsxd rbp, eax ; ret 0xdabb
0x0000020000439cbf : movsxd rbp, eax ; sbb esi, esp ; ret 0x48ff
0x000002000049702d : movsxd rbp, ecx ; ret 0xfff4
0x000002000051f7eb : movsxd rbx, eax ; inc ebx ; mov eax, 0xc000000d ; ret
0x000002000049e405 : movsxd rbx, esp ; ret
0x00000200003a15f1 : movsxd rcx, ecx ; add rcx, r15 ; call 0x2000015d887
0x00000200003a15f0 : movsxd rcx, ecx ; add rcx, r15 ; call 0x2000015d888
0x000002000002139a : movsxd rcx, edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000066acdb : movsxd rcx, esi ; jmp qword ptr [rcx]
0x0000020000007589 : movsxd rdi, esi ; ret
0x00000200004ad9d6 : movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200004b9f5d : movsxd rsi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004fb10b : movsxd rsp, eax ; add byte ptr [rbx], al ; sar bh, cl ; ret 0x5489
0x000002000062a6e6 : movsxd rsp, ebx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000053df3b : movsxd rsp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200006756fe : movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000043db06 : movzx eax, al ; and eax, r8d ; or eax, 5 ; ret
0x000002000002a7de : movzx eax, al ; cmovl r8d, r10d ; jmp 0x2000002a7a9
0x0000020000095555 : movzx eax, al ; cmovle eax, edx ; mov dl, al ; mov al, dl ; ret
0x00000200000fd317 : movzx eax, al ; mov cr8, rax ; ret
0x00000200004507a0 : movzx eax, al ; ret
0x000002000009c07b : movzx eax, al ; shr eax, 3 ; and eax, 4 ; ret
0x000002000022ee82 : movzx eax, ax ; cmp eax, 0x50 ; jmp 0x2000022ee54
0x00000200001481f1 : movzx eax, ax ; ret
0x00000200000960b9 : movzx eax, ax ; shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x20000096091
0x0000020000140af6 : movzx eax, ax ; sub eax, ecx ; ret
0x0000020000096294 : movzx eax, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141e97 : movzx eax, bx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000103266 : movzx eax, byte ptr [rax + 0x22] ; and eax, 1 ; ret
0x000002000013fb17 : movzx eax, byte ptr [rax + 0x48] ; ret
0x00000200004ac471 : movzx eax, byte ptr [rax + 0x651] ; ret
0x0000020000441ad6 : movzx eax, byte ptr [rcx + 0x10] ; shr eax, 1 ; and eax, 1 ; ret
0x000002000049f337 : movzx eax, byte ptr [rcx + 0x4f] ; add dword ptr [rdx + 0x18], eax ; ret
0x000002000015e2bc : movzx eax, byte ptr [rcx + 0xc0] ; ret
0x0000020000033358 : movzx eax, cl ; mov cr8, rax ; ret
0x0000020000611a4e : movzx eax, cx ; add eax, 0x20 ; ret
0x0000020000616b97 : movzx eax, cx ; add eax, r10d ; jmp 0x20000616ba7
0x00000200001441a2 : movzx eax, cx ; add rsp, 0x38 ; ret
0x000002000038fede : movzx eax, cx ; ret
0x000002000038ff23 : movzx eax, cx ; sub eax, 0x20 ; ret
0x0000020000143fc8 : movzx eax, cx ; sub eax, edx ; ret
0x0000020000051bce : movzx eax, dh ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001c9226 : movzx eax, dh ; mov cr8, rax ; jmp 0x200001c91f9
0x00000200000e7e35 : movzx eax, di ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000672c0e : movzx eax, dl ; jmp 0x20000672c21
0x0000020000672cdb : movzx eax, dl ; jmp 0x20000672cee
0x0000020000672d8f : movzx eax, dl ; jmp 0x20000672da2
0x0000020000672e32 : movzx eax, dl ; jmp 0x20000672e45
0x00000200000b2879 : movzx eax, dl ; mov cr8, rax ; ret
0x000002000061cc01 : movzx eax, dx ; jmp 0x2000061cc79
0x00000200001d965d : movzx eax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x000002000013fd15 : movzx eax, dx ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000482d18 : movzx eax, dx ; test eax, eax ; js 0x20000482d2b ; xor eax, eax ; ret
0x0000020000672c0d : movzx eax, r10b ; jmp 0x20000672c22
0x0000020000672cda : movzx eax, r10b ; jmp 0x20000672cef
0x0000020000672d8e : movzx eax, r10b ; jmp 0x20000672da3
0x0000020000672e31 : movzx eax, r10b ; jmp 0x20000672e46
0x000002000061cc00 : movzx eax, r10w ; jmp 0x2000061cc7a
0x000002000022ee81 : movzx eax, r8w ; cmp eax, 0x50 ; jmp 0x2000022ee55
0x00000200001481f0 : movzx eax, r8w ; ret
0x0000020000140af5 : movzx eax, r8w ; sub eax, ecx ; ret
0x00000200000fd2aa : movzx eax, r9b ; mov cr8, rax ; ret
0x0000020000611a4d : movzx eax, r9w ; add eax, 0x20 ; ret
0x00000200006113ac : movzx eax, r9w ; ret
0x000002000038ff22 : movzx eax, r9w ; sub eax, 0x20 ; ret
0x000002000019eb49 : movzx eax, si ; call r10
0x00000200001c9225 : movzx eax, sil ; mov cr8, rax ; jmp 0x200001c91fa
0x0000020000192a22 : movzx eax, word ptr [r8 + rax*8 + 0xc] ; ret
0x00000200003db3e9 : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r10d ; ret
0x00000200003da95c : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r9d ; ret
0x0000020000192a23 : movzx eax, word ptr [rax + rax*8 + 0xc] ; ret
0x0000020000140f9d : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x157 ; ret
0x0000020000140ffd : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x80 ; ret
0x0000020000140fdd : movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x0000020000140f7d : movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x0000020000140f5d : movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x0000020000140fbd : movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x00000200003db3ea : movzx eax, word ptr [rax + rcx*2] ; imul eax, r10d ; ret
0x00000200003da95d : movzx eax, word ptr [rax + rcx*2] ; imul eax, r9d ; ret
0x0000020000142b48 : movzx eax, word ptr [rax + rcx*2] ; movzx ecx, dx ; and eax, ecx ; ret
0x00000200001a21cd : movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200000f500c : movzx eax, word ptr [rcx + 0x44] ; ret
0x00000200001c5410 : movzx eax, word ptr [rcx + 0xc] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200004c044a : movzx eax, word ptr [rcx + 2] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x000002000014208e : movzx eax, word ptr [rcx] ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x000002000038346d : movzx eax, word ptr [rdi] ; cmp rcx, rax ; jne 0x20000383482 ; mov eax, edx ; jmp 0x20000383437
0x00000200001d92cd : movzx eax, word ptr [rdx + 2] ; mov word ptr [rcx + 2], ax ; ret
0x00000200001815d0 : movzx eax, word ptr [rdx] ; mov rcx, r14 ; call 0x2000015d888
0x000002000046c17e : movzx eax, word ptr [rdx] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x000002000015e160 : movzx eax, word ptr [rip + 0x147301] ; ret
0x00000200000ffb1c : movzx eax, word ptr [rip + 0x2514e5] ; dec eax ; ret
0x00000200000ea25f : movzx eax, word ptr [rip + 0x266dee] ; jne 0x200000ea272 ; ret
0x00000200000ea269 : movzx eax, word ptr [rip + 0x266df0] ; ret
0x00000200000e8604 : movzx eax, word ptr [rip + 0x268a49] ; ret
0x00000200001c676c : movzx ecx, ax ; call r9
0x0000020000393cc8 : movzx ecx, bp ; call 0x2000038fed9
0x00000200006f5680 : movzx ecx, bx ; call rax
0x00000200001e19a0 : movzx ecx, byte ptr [rcx + 0x6c0] ; or eax, ecx ; ret
0x00000200000b28f4 : movzx ecx, cl ; mov cr8, rcx ; ret
0x000002000058673e : movzx ecx, cx ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000140af2 : movzx ecx, cx ; movzx eax, r8w ; sub eax, ecx ; ret
0x0000020000617aff : movzx ecx, cx ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000140b93 : movzx ecx, cx ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200000fa0b9 : movzx ecx, dl ; cmovne eax, ecx ; ret
0x0000020000142b4c : movzx ecx, dx ; and eax, ecx ; ret
0x000002000058673d : movzx ecx, r9w ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000617afe : movzx ecx, r9w ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000038212c : movzx ecx, word ptr [rbx] ; mov word ptr [r15], cx ; jmp 0x20000382100
0x000002000061ec34 : movzx ecx, word ptr [rdx + 2] ; mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x0000020000142091 : movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000080873 : movzx edx, bpl ; call qword ptr [rdi]
0x0000020000080874 : movzx edx, ch ; call qword ptr [rdi]
0x000002000015e384 : movzx edx, cx ; in al, dx ; ret
0x000002000015e392 : movzx edx, cx ; out dx, al ; ret
0x0000020000368485 : movzx edx, dl ; cmove r10d, r11d ; mov al, r10b ; ret
0x000002000019eb48 : movzx r8d, r14w ; call r10
0x000002000002a7dd : movzx r8d, r8b ; cmovl r8d, r10d ; jmp 0x2000002a7aa
0x00000200001815cf : movzx r8d, word ptr [rdx] ; mov rcx, r14 ; call 0x2000015d889
0x0000020000142b4b : movzx rcx, dx ; and eax, ecx ; ret
0x00000200000d0ffd : mul byte ptr [rdi + 0xc] ; add bh, bh ; ret 0x3b41
0x000002000066ec76 : mul byte ptr [rdi] ; ret
0x00000200006454f6 : mul byte ptr [rsi + 3] ; ret 0xb841
0x00000200004ca002 : mul byte ptr [rsi - 0x7d] ; ret 0xf02
0x00000200001ab29b : mul ecx ; shr edx, 0xd ; mov byte ptr [r9 + 0x31], dl ; ret
0x0000020000722811 : mul edi ; ret 0xe9ff
0x00000200005417a3 : mul esi ; dec dword ptr [rax - 9] ; ret
0x000002000065a4b6 : neg al ; ret
0x00000200005d8ac1 : neg al ; sbb eax, eax ; and eax, 0xc000004b ; ret
0x00000200001b6544 : neg al ; sbb eax, eax ; neg eax ; inc eax ; ret
0x00000200004cb0d1 : neg byte ptr [rip - 0x3fcd0000] ; ret
0x0000020000572343 : neg ch ; dec dword ptr [rax - 0x75] ; ret 0xb48
0x0000020000374c72 : neg dword ptr [rdi + rdi*8 - 0x4141f001] ; ret
0x00000200001b6548 : neg eax ; inc eax ; ret
0x00000200000dccde : neg eax ; sbb eax, eax ; and eax, 0xc0000001 ; ret
0x0000020000033860 : neg eax ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000141152 : neg eax ; sbb rax, rax ; and rax, rcx ; ret
0x0000020000109871 : neg ecx ; inc ecx ; mov eax, ecx ; ret
0x000002000022324f : neg ecx ; mov qword ptr [rax + 0x12c8], rcx ; ret
0x00000200004af5ec : neg ecx ; sbb eax, eax ; and eax, 0xc00000bb ; ret
0x000002000007efa0 : neg edx ; jmp 0x2000007ed7a
0x0000020000149bd7 : neg edx ; mov qword ptr [r8 + 0x600], rdx ; ret
0x00000200001ac04c : neg edx ; sbb eax, eax ; add eax, 3 ; ret
0x000002000048005d : neg edx ; sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000010ac89 : neg edx ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000141151 : neg r8 ; sbb rax, rax ; and rax, rcx ; ret
0x000002000007ef9f : neg rdx ; jmp 0x2000007ed7b
0x000002000005b14e : nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x00000200000df91e : nop ; add al, 0 ; add dh, dh ; ret 0xf0f
0x0000020000670a5a : nop ; add al, 0 ; add rsp, 0x68 ; ret
0x0000020000717192 : nop ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000034350 : nop ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x00000200006fadab : nop ; add byte ptr [rax], ah ; add byte ptr [rax + 0x3b], cl ; ret 0x2e73
0x000002000045f573 : nop ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000064d7bf : nop ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x000002000008efb9 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1573
0x0000020000185c68 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000456860 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x74af8afc], ch ; ret
0x00000200003d3bf9 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000020000110ad2 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e6871 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000b53f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x00000200005c97e3 : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000006c9b7 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000012a417 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200000d9e98 : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1d74
0x000002000045a83c : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200004e15dd : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x00000200000d971f : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x00000200003b2b2a : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200001e1151 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x0000020000099f15 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000672fbd : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000014ec55 : nop ; add byte ptr [rax], al ; add cl, ch ; and bl, cl ; add byte ptr [rax], al ; ret
0x000002000056f360 : nop ; add byte ptr [rax], al ; add cl, ch ; ret 0xed23
0x00000200000d3183 : nop ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000369833 : nop ; add byte ptr [rax], al ; ret
0x0000020000149bdb : nop ; add byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200005a3021 : nop ; add byte ptr gs:[rcx - 0x7b], al ; ret 0x61e9
0x0000020000155a71 : nop ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rax ; ret
0x0000020000416b30 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; sal dh, 1 ; ret 0x7547
0x000002000044509a : nop ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x2f77
0x0000020000373b61 : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200004d6361 : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x00000200005a8aa6 : nop ; add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x99e9
0x00000200001224ad : nop ; add rsp, 0x108 ; ret
0x0000020000100ea7 : nop ; add rsp, 0x110 ; pop rbx ; ret
0x00000200001622c9 : nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000016242d : nop ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000162140 : nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200001585ed : nop ; add rsp, 0x28 ; ret
0x00000200001615d7 : nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001617b0 : nop ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000037154c : nop ; add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000161fe1 : nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000614b72 : nop ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200001618fa : nop ; add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000016165e : nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000161f11 : nop ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000162086 : nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x00000200001623b7 : nop ; add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x000002000016279e : nop ; add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200006d001e : nop ; add rsp, 0x48 ; ret
0x0000020000161b55 : nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000664401 : nop ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001620ee : nop ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x000002000066453d : nop ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006644ad : nop ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000100e27 : nop ; add rsp, 0xe8 ; ret
0x0000020000122d9e : nop ; add rsp, 0xf8 ; ret
0x000002000043c2b3 : nop ; call 0x200000690a4
0x00000200001fb730 : nop ; call qword ptr [rcx]
0x00000200003d0174 : nop ; cmp dh, byte ptr [rip + 0xfc08500] ; ret 0x8b49
0x000002000002a94d : nop ; cmp dh, byte ptr [rip - 0x7b74b700] ; ret 0xd80
0x00000200000de259 : nop ; cmp qword ptr [rcx], rcx ; jne 0x200000de26c ; mov rax, rcx ; ret
0x000002000027d364 : nop ; fnstenv dword ptr [rax] ; mov esp, 0x400070da ; ret
0x00000200001727a3 : nop ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000016fb45 : nop ; jmp 0x2000004bd9f
0x0000020000172da9 : nop ; jmp 0x2000005a2c8
0x00000200001755d3 : nop ; jmp 0x20000061875
0x0000020000177171 : nop ; jmp 0x200000680f1
0x000002000017cf82 : nop ; jmp 0x200000764e4
0x000002000017d0a4 : nop ; jmp 0x200000768b9
0x00000200001850d7 : nop ; jmp 0x20000090834
0x00000200001854aa : nop ; jmp 0x20000091eba
0x00000200001861b6 : nop ; jmp 0x20000096173
0x0000020000187834 : nop ; jmp 0x2000009beba
0x000002000018a671 : nop ; jmp 0x200000a6890
0x000002000019098a : nop ; jmp 0x200000ba1b7
0x0000020000191f1c : nop ; jmp 0x200000be1af
0x0000020000192007 : nop ; jmp 0x200000be26c
0x0000020000192036 : nop ; jmp 0x200000be2f3
0x0000020000194d0d : nop ; jmp 0x200000c8760
0x0000020000198604 : nop ; jmp 0x200000d486e
0x0000020000198d3e : nop ; jmp 0x200000d69ef
0x000002000019a5e8 : nop ; jmp 0x200000e14fa
0x000002000019bc6c : nop ; jmp 0x200000e7557
0x000002000019f8b6 : nop ; jmp 0x200000f2006
0x00000200001a7d11 : nop ; jmp 0x2000010cf12
0x00000200001a9cf4 : nop ; jmp 0x20000111645
0x00000200001aa20c : nop ; jmp 0x20000112a24
0x00000200001ab6a4 : nop ; jmp 0x20000118c77
0x00000200001b5fbd : nop ; jmp 0x20000132228
0x00000200001b77a1 : nop ; jmp 0x20000136e49
0x00000200001b7ff0 : nop ; jmp 0x20000138a27
0x00000200001b9708 : nop ; jmp 0x2000013b2f4
0x00000200003715bc : nop ; jmp 0x200003643b8
0x0000020000371798 : nop ; jmp 0x20000364ac3
0x0000020000371caa : nop ; jmp 0x200003670b5
0x0000020000371d03 : nop ; jmp 0x200003671fc
0x0000020000371efd : nop ; jmp 0x20000367499
0x0000020000372934 : nop ; jmp 0x20000369deb
0x00000200005328de : nop ; jmp 0x20000384761
0x0000020000532ea8 : nop ; jmp 0x20000385f84
0x00000200005358a9 : nop ; jmp 0x2000038dbfd
0x0000020000540cc8 : nop ; jmp 0x200003ae6e2
0x0000020000540d8e : nop ; jmp 0x200003aea0b
0x0000020000544124 : nop ; jmp 0x200003bb1f1
0x000002000054475d : nop ; jmp 0x200003bc5fc
0x0000020000545c33 : nop ; jmp 0x200003c1f11
0x000002000054c8b8 : nop ; jmp 0x200003d8d65
0x00000200005520c9 : nop ; jmp 0x200003de373
0x00000200005520de : nop ; jmp 0x200003e384f
0x00000200005527bb : nop ; jmp 0x200003e5c0d
0x0000020000552cda : nop ; jmp 0x200003e745e
0x0000020000552ec8 : nop ; jmp 0x200003e7f72
0x0000020000553146 : nop ; jmp 0x200003e84d4
0x000002000055489c : nop ; jmp 0x200003ee7a0
0x0000020000554e4b : nop ; jmp 0x200003f113e
0x000002000055838c : nop ; jmp 0x200003fed37
0x000002000056288a : nop ; jmp 0x2000041f29e
0x000002000056bc54 : nop ; jmp 0x20000437c1a
0x000002000056c714 : nop ; jmp 0x20000439dc4
0x00000200005706c8 : nop ; jmp 0x20000447313
0x0000020000570707 : nop ; jmp 0x20000447469
0x0000020000570cb4 : nop ; jmp 0x20000448a12
0x0000020000571322 : nop ; jmp 0x20000448e37
0x0000020000570c85 : nop ; jmp 0x200004492d1
0x0000020000571981 : nop ; jmp 0x2000044939c
0x00000200005731fd : nop ; jmp 0x2000044d128
0x0000020000574d13 : nop ; jmp 0x20000450fa2
0x0000020000575f45 : nop ; jmp 0x20000455c7d
0x00000200005766c5 : nop ; jmp 0x200004561ed
0x0000020000576ab3 : nop ; jmp 0x20000457210
0x000002000057719a : nop ; jmp 0x20000458584
0x0000020000577c58 : nop ; jmp 0x2000045ab4f
0x0000020000579076 : nop ; jmp 0x20000460d3d
0x000002000058014a : nop ; jmp 0x2000047c3d1
0x00000200005801d1 : nop ; jmp 0x2000047c44e
0x00000200005801ff : nop ; jmp 0x2000047c456
0x0000020000583911 : nop ; jmp 0x2000048b106
0x0000020000583e28 : nop ; jmp 0x2000048c6b2
0x0000020000585e77 : nop ; jmp 0x20000492151
0x00000200005866ae : nop ; jmp 0x2000049290a
0x000002000059013d : nop ; jmp 0x200004ac19e
0x00000200005901c2 : nop ; jmp 0x200004ac404
0x0000020000596490 : nop ; jmp 0x200004c1389
0x0000020000596cad : nop ; jmp 0x200004c2ebb
0x0000020000596cc3 : nop ; jmp 0x200004c2f5d
0x0000020000596cfd : nop ; jmp 0x200004c2faf
0x0000020000596d15 : nop ; jmp 0x200004c2fd9
0x00000200005974cc : nop ; jmp 0x200004c4202
0x000002000059a600 : nop ; jmp 0x200004cc3e9
0x00000200005a289a : nop ; jmp 0x200004e594e
0x00000200005ab031 : nop ; jmp 0x200004fffd1
0x00000200005ab11f : nop ; jmp 0x200005001ec
0x00000200005ae083 : nop ; jmp 0x2000050a2f8
0x00000200005af674 : nop ; jmp 0x200005114cf
0x00000200005b2ce2 : nop ; jmp 0x2000051756a
0x00000200005b4a64 : nop ; jmp 0x2000051d7a3
0x000002000068e3fc : nop ; jmp 0x2000068a3df
0x000002000068e44d : nop ; jmp 0x2000068a688
0x000002000068e725 : nop ; jmp 0x2000068a976
0x000002000068ec46 : nop ; jmp 0x2000068c7bb
0x000002000072051d : nop ; jmp 0x200006f080c
0x00000200007240a2 : nop ; jmp 0x200007002ad
0x0000020000725d35 : nop ; jmp 0x2000070986e
0x0000020000088d94 : nop ; jmp qword ptr [rbx]
0x000002000010c00e : nop ; jo 0x2000010c01c ; add byte ptr [rax], al ; ret
0x0000020000607305 : nop ; leave ; dec dword ptr [rbp + 0x3b] ; ret
0x0000020000538501 : nop ; mov dword ptr [rbp - 0x38], ebx ; mov qword ptr [rbp + 0x70], r14 ; call qword ptr [r14]
0x0000020000369e8f : nop ; mov eax, 0xf6000006 ; ret 0x7401
0x000002000036970e : nop ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x20000369715 ; ret
0x00000200001d8b44 : nop ; mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000015d729 : nop ; mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x000002000008f127 : nop ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x2000008f12e ; ret
0x00000200006d001d : nop ; nop ; add rsp, 0x48 ; ret
0x00000200006fe45b : nop ; or bh, bh ; ret 0x3b41
0x0000020000127eba : nop ; or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000c8837 : nop ; or byte ptr [rdi], dl ; add byte ptr [rax - 0x75], cl ; ret 0x8148
0x00000200006f1868 : nop ; out 0xbb, al ; call qword ptr [rbx]
0x00000200000fdb79 : nop ; pop rcx ; add byte ptr [rax], al ; ret
0x00000200006e9e6f : nop ; prefetchw byte ptr [rcx] ; ret
0x000002000006666c : nop ; ret
0x00000200003faf56 : nop ; ret 0x15
0x000002000024d2bc : nop ; ret 0x24
0x0000020000275e14 : nop ; ret 0x4e
0x0000020000279c68 : nop ; ret 0x6f
0x0000020000727ff4 : nop ; ret 0x89ff
0x0000020000447775 : nop ; ret 0xe9ff
0x000002000042ac7c : nop ; stc ; ret
0x000002000020b73a : nop ; test al, 1 ; je 0x2000020b729 ; xor al, al ; ret
0x0000020000174068 : nop ; xchg eax, ebx ; out dx, al ; push rsi ; ret 0x7401
0x000002000043a940 : nop ; xchg eax, esp ; ret 0xebff
0x00000200000eb84c : nop ; xor al, al ; ret
0x00000200001d8e48 : nop ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003daf40 : nop ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000159238 : nop dword ptr [rax + rax] ; cli ; ret
0x000002000015921b : nop dword ptr [rax + rax] ; mov rax, rbx ; ret
0x0000020000143ee8 : nop dword ptr [rax + rax] ; ret
0x000002000015922b : nop dword ptr [rax + rax] ; sti ; ret
0x00000200001516fc : nop dword ptr [rax] ; fldcw word ptr [rcx] ; ret
0x00000200001516dc : nop dword ptr [rax] ; fninit ; ret
0x000002000015921a : nop word ptr [rax + rax] ; mov rax, rbx ; ret
0x0000020000143ee7 : nop word ptr [rax + rax] ; ret
0x000002000015922a : nop word ptr [rax + rax] ; sti ; ret
0x000002000023d6c4 : not ah ; cmp dword ptr [rax], eax ; ret
0x00000200004ad6e4 : not al ; and al, 1 ; ret
0x00000200001d29f0 : not dword ptr [rax] ; add byte ptr [rbp - 0x3f6af040], al ; ret
0x000002000071fe7d : not dword ptr [rcx] ; ret
0x0000020000447037 : not eax ; and dword ptr [rcx + 0x398], eax ; ret
0x000002000060b83e : not eax ; and eax, 0xc0000001 ; ret
0x00000200000e61c9 : not eax ; and eax, 0xc000000d ; ret
0x00000200004c2bba : not eax ; and eax, 0xc0000034 ; ret
0x00000200003ee018 : not eax ; and eax, 0xc00002b9 ; ret
0x00000200000c4482 : not eax ; and eax, 1 ; ret
0x000002000009baf8 : not eax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x00000200001d969b : not eax ; and qword ptr [r8], rax ; ret
0x00000200001d9675 : not eax ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000124b39 : not eax ; lock and dword ptr [r10], eax ; ret
0x00000200000f0ab2 : not eax ; lock and dword ptr [r8], eax ; jmp 0x200000f0a84
0x00000200005f5fd4 : not eax ; lock and dword ptr [r8], eax ; ret
0x00000200001d1373 : not eax ; or rax, rdx ; jmp 0x200001d138d
0x00000200001d1373 : not eax ; or rax, rdx ; jmp 0x200001d1392
0x000002000021d710 : not eax ; or rax, rdx ; jmp 0x2000021d72a
0x000002000020730a : not eax ; test eax, ecx ; je 0x2000020731b ; xor al, al ; ret
0x00000200000f3c0c : not ecx ; mov eax, r9d ; ret
0x000002000049fe44 : not ecx ; test ecx, edx ; sete al ; ret
0x000002000020a012 : not edi ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200001d9674 : not r8 ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200000f3c0b : not r9d ; mov eax, r9d ; ret
0x000002000009baf7 : not rax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x00000200001d969a : not rax ; and qword ptr [r8], rax ; ret
0x00000200001d1372 : not rax ; or rax, rdx ; jmp 0x200001d138e
0x000002000021d70f : not rax ; or rax, rdx ; jmp 0x2000021d72b
0x0000020000607652 : or ah, byte ptr [rax - 0x6bf00033] ; ret
0x000002000000e0ab : or ah, byte ptr [rdi - 0x7f] ; ret
0x000002000066ec9d : or ah, byte ptr [rdx + rax] ; add byte ptr [rax], al ; ret
0x000002000020d801 : or ah, byte ptr [rsi - 0x77] ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000002000022a812 : or ah, byte ptr [rsi - 0x7cb7fffa] ; ret
0x0000020000459f56 : or ah, byte ptr [rsi - 0x7d] ; ret
0x000002000000efd3 : or ah, cl ; jge 0x2000000f005 ; ret
0x0000020000217288 : or al, 0 ; add byte ptr [rax - 0x74ee8af8], ch ; ret
0x000002000043ca7b : or al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x000002000007d294 : or al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200003a4548 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000007e6c6 : or al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000012d4d3 : or al, 0 ; add byte ptr [rdx - 0x41], dh ; add rsp, 0x38 ; ret
0x000002000005be70 : or al, 0 ; add dh, dh ; ret 0x7508
0x000002000052017a : or al, 0 ; add dword ptr [rcx + 4], eax ; ret
0x0000020000253eae : or al, 0 ; add eax, dword ptr [rsi] ; ret 0x1906
0x000002000071e5b9 : or al, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004d53e8 : or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d1510 : or al, 0 ; add rsp, 0x28 ; ret
0x0000020000235a56 : or al, 0 ; add rsp, 0x38 ; ret
0x00000200001d6dcc : or al, 0 ; je 0x200001d6ddf ; mov eax, 0xc0000354 ; ret
0x00000200003ac5f0 : or al, 0 ; jmp 0x200003ac5ba
0x00000200004dd0ad : or al, 0 ; mov al, 1 ; ret
0x00000200000d496a : or al, 0 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dd596 : or al, 0 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009a161 : or al, 0 ; mov eax, edx ; jmp 0x2000009a157
0x00000200000d01f4 : or al, 0 ; mov eax, edx ; jmp 0x200000d017d
0x00000200004d8008 : or al, 0 ; mov eax, edx ; ret
0x00000200000d28fe : or al, 0 ; mov eax, r9d ; ret
0x000002000016c27a : or al, 0 ; mov rcx, rsi ; call rbx
0x000002000025bafa : or al, 0 ; or al, 6 ; ret
0x000002000024359a : or al, 0 ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x00000200000c9780 : or al, 0 ; ret
0x0000020000257fc6 : or al, 0 ; ror byte ptr [rsi + rdx], 0 ; ret
0x0000020000252a52 : or al, 0 ; sysenter
0x00000200000d0414 : or al, 0 ; xor al, al ; ret
0x00000200000d271d : or al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000c4d74 : or al, 0 ; xor eax, eax ; ret
0x00000200004dca9c : or al, 0 ; xor edx, edx ; mov al, dl ; ret
0x0000020000257fc9 : or al, 0x16 ; add byte ptr [rsi], ah ; ret
0x0000020000517600 : or al, 0x18 ; ret
0x00000200003a99f9 : or al, 0x21 ; add al, 0xf ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200002310b1 : or al, 0x23 ; ret 0xc63b
0x00000200006ef2c6 : or al, 0x24 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200005b1b8c : or al, 0x24 ; add byte ptr [rbx], dh ; leave ; call 0x200004dde27
0x00000200001da6da : or al, 0x24 ; mov al, r9b ; add rsp, 0x28 ; ret
0x0000020000028a2a : or al, 0x24 ; mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x000002000043be8e : or al, 0x2b ; ret
0x00000200000804d2 : or al, 0x2d ; add bh, bh ; ret
0x00000200005ff582 : or al, 0x30 ; call 0x2000012d520
0x00000200000ea95b : or al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000067053a : or al, 0x33 ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000294e29
0x000002000018fe78 : or al, 0x33 ; ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x0000020000600b74 : or al, 0x33 ; shr al, cl ; sbb al, 0x22 ; ret
0x000002000051ad1c : or al, 0x35 ; add dh, dh ; ret 0x7502
0x00000200001a560a : or al, 0x38 ; call 0x2000012d520
0x0000020000149a57 : or al, 0x38 ; xor byte ptr [rdx], cl ; inc rdx ; jmp 0x20000149a69
0x000002000045c264 : or al, 0x3b ; ret
0x00000200004becfd : or al, 0x3e ; call 0x200000e1ac5
0x00000200006687da : or al, 0x40 ; cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006687ed ; xor eax, eax ; ret
0x0000020000408b93 : or al, 0x41 ; inc edx ; jmp 0x20000408b80
0x00000200001ca3bf : or al, 0x41 ; mov dword ptr [rax + 0x28], eax ; ret
0x000002000022e9a3 : or al, 0x41 ; mov eax, ecx ; ret
0x00000200006c702c : or al, 0x42 ; lea edx, dword ptr [rbx + rbp] ; xor ecx, ecx ; call r9
0x00000200006d0e3d : or al, 0x42 ; lea edx, dword ptr [rbx + rbx] ; xor ecx, ecx ; call r9
0x00000200006cd680 : or al, 0x42 ; lea edx, dword ptr [rbx + rdi] ; xor ecx, ecx ; call r9
0x00000200006d174b : or al, 0x42 ; lea edx, dword ptr [rdi + rbx] ; xor ecx, ecx ; call r9
0x000002000013b863 : or al, 0x44 ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200005d01ac : or al, 0x44 ; or eax, ecx ; or r8d, edx ; jmp 0x200005d01d3
0x0000020000436100 : or al, 0x45 ; ret
0x000002000070f369 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x000002000070f23d : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x000002000070f6cc : or al, 0x48 ; add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x000002000071e2e4 : or al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000200000c59fc : or al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000162db1 : or al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000200005201a9 : or al, 0x48 ; and eax, ecx ; ret
0x0000020000379801 : or al, 0x48 ; and edx, eax ; call qword ptr [rsi]
0x000002000008e8af : or al, 0x48 ; lea eax, dword ptr [rax + rdx*8] ; ret
0x00000200006e008c : or al, 0x48 ; lea ecx, dword ptr [rbx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200004ac897 : or al, 0x48 ; lea ecx, dword ptr [rdi - 0x20] ; call 0x200000d89bc
0x00000200006e4fb8 : or al, 0x48 ; lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006cbfb5 : or al, 0x48 ; lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x00000200001b5dc5 : or al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x000002000010b500 : or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x00000200000f5e14 : or al, 0x48 ; mov eax, edx ; ret
0x000002000040f426 : or al, 0x48 ; mov ecx, ebp ; call 0x20000031497
0x000002000040f425 : or al, 0x48 ; mov ecx, ebp ; call 0x20000031498
0x000002000013fe49 : or al, 0x48 ; xor eax, eax ; ret
0x000002000020c900 : or al, 0x49 ; add eax, 0xc ; jmp 0x2000020c922
0x000002000020d0bc : or al, 0x49 ; add eax, 0xc ; jmp 0x2000020d0de
0x00000200001e9b05 : or al, 0x49 ; and edx, ebp ; call qword ptr [rdi]
0x00000200006c7273 : or al, 0x49 ; lea ecx, dword ptr [rcx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200003fd8b7 : or al, 0x49 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200000727e6 : or al, 0x49 ; mov dword ptr [rdx], edx ; mov rax, r8 ; ret
0x000002000014177d : or al, 0x49 ; mov eax, ebx ; ret
0x0000020000188092 : or al, 0x49 ; sub ecx, eax ; xor r8d, r8d ; call 0x200001f43a1
0x000002000038ff18 : or al, 0x4a ; add cx, r9w ; movzx eax, cx ; ret
0x00000200004becc8 : or al, 0x4c ; mov eax, dword ptr [rbx + 0x28] ; call 0x200000e1ac8
0x00000200006728c9 : or al, 0x4c ; mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200004af400 : or al, 0x4d ; mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000020000468f6b : or al, 0x4d ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200003ecfb8 : or al, 0x53 ; mov rax, r9 ; ret
0x000002000026dde6 : or al, 0x60 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; cwde ; call qword ptr [rax]
0x00000200001c5413 : or al, 0x66 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000259234 : or al, 0x70 ; or esp, dword ptr [rax + 0x22] ; add byte ptr [rax], al ; add al, cl ; ret
0x0000020000272870 : or al, 0x72 ; or byte ptr [rax + 0x22], ah ; add byte ptr [rax], al ; add al, bh ; ret 0x4d
0x000002000014a959 : or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000041004a : or al, 0x74 ; mov rcx, rdi ; call 0x20000031499
0x00000200004b94e1 : or al, 0x75 ; add al, 0x41 ; mov al, cl ; ret
0x00000200004ae543 : or al, 0x75 ; leave ; inc r10d ; jmp 0x200004ae51e
0x00000200004dd5fe : or al, 0x76 ; ret 0x8b48
0x00000200004b95ad : or al, 0x80 ; add byte ptr [rax], al ; call rax
0x0000020000231f09 : or al, 0x80 ; mov byte ptr [rdx], cl ; mov byte ptr [rdx + 1], al ; ret
0x00000200003bb8a8 : or al, 0x80 ; mov byte ptr [rsi + 0x1f], al ; jmp 0x200003bb87f
0x000002000048596f : or al, 0x81 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003364f : or al, 0x81 ; ret
0x0000020000033658 : or al, 0x82 ; ret
0x000002000002a7a8 : or al, 0x83 ; loope 0x2000002a7b6 ; cmp r8b, cl ; jne 0x2000002a7f0 ; ret
0x0000020000565442 : or al, 0x83 ; ret
0x00000200004c452a : or al, 0x85 ; sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x00000200003ac90d : or al, 0x85 ; sal byte ptr [rcx + rax*8 + 0x49], 3 ; ret 0xbfeb
0x000002000061cb5d : or al, 0x85 ; sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x000002000002deaf : or al, 0x85 ; sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x00000200004fa05e : or al, 0x89 ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200001c7ad8 : or al, 0x89 ; or byte ptr [rbx - 0x74dfdbb4], cl ; ret 0xc1f6
0x0000020000718a65 : or al, 0x89 ; or eax, 0xffb8a424 ; ret
0x00000200001427de : or al, 0x8a ; ret
0x00000200004f8a5d : or al, 0x8b ; adc byte ptr [r9 - 0x4817efb9], cl ; ret
0x000002000009fab5 : or al, 0x8b ; leave ; cmp qword ptr [r8 + 0x50], rcx ; je 0x2000009fac8 ; ret
0x000002000011eb95 : or al, 0x8b ; pop rdi ; sbb al, 0xff ; ret 0xf41
0x00000200004746f9 : or al, 0x8b ; ret
0x00000200000fe4e3 : or al, 0x8b ; ret 0x25
0x0000020000140848 : or al, 0x8b ; ret 0x3b48
0x00000200005d2a22 : or al, 0x8b ; ret 0x8b48
0x000002000022e962 : or al, 0x8b ; ret 0x8b49
0x00000200001803ea : or al, 0x8b ; ret 0x8b4d
0x00000200003640fc : or al, 0x8b ; ret 0xc148
0x00000200000cac13 : or al, 0x8b ; ret 0xc2ff
0x00000200001ccb1d : or al, 0x8b ; ret 0xe8c1
0x000002000003aad0 : or al, 0x8b ; ror byte ptr [rax - 0x73], 0xc ; ret 0x878b
0x00000200003b528e : or al, 0x8b ; ror byte ptr [rsi - 0x75], 4 ; ret 0xb948
0x00000200001b445b : or al, 0x8b ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x00000200005f7e33 : or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x0000020000157a64 : or al, 0x91 ; jmp r9
0x000002000064b519 : or al, 0x92 ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000064b533
0x00000200001039d7 : or al, 0xa ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9274
0x00000200001038c7 : or al, 0xa ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006737b0 : or al, 0xa5 ; ret
0x00000200000b62d0 : or al, 0xaf ; or al, byte ptr [rax] ; ret
0x00000200007161d0 : or al, 0xaf ; ret
0x000002000071e63f : or al, 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x000002000071e7c5 : or al, 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005d01a9 : or al, 0xc1 ; loop 0x200005d01c2 ; or r8d, ecx ; or r8d, edx ; jmp 0x200005d01d6
0x00000200001c4def : or al, 0xc1 ; ret
0x00000200005f0a65 : or al, 0xc2 ; mov eax, r9d ; ret
0x0000020000132ffd : or al, 0xc3 ; mov eax, 0xc000009a ; ret
0x000002000050c4bc : or al, 0xc5 ; ret 0x33ff
0x000002000065e3aa : or al, 0xc7 ; ret
0x00000200005947f6 : or al, 0xcf ; call 0x20000140abc
0x000002000015c130 : or al, 0xd ; add byte ptr [rax], al ; nop ; ret
0x000002000043d63d : or al, 0xd3 ; loop 0x2000043d63c ; ret 0x3a0
0x000002000071e922 : or al, 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x000002000019e6df : or al, 0xe8 ; call qword ptr [rbx]
0x000002000066d918 : or al, 0xe8 ; loop 0x2000066d986 ; ret 0x48ff
0x00000200005f680b : or al, 0xe8 ; ret
0x00000200003a2b40 : or al, 0xe9 ; ret
0x000002000020c904 : or al, 0xeb ; adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000070f8be : or al, 0xeb ; loop 0x2000070f912 ; add esp, 0x50 ; pop rbx ; ret
0x000002000043a0c0 : or al, 0xef ; ret 0x48ff
0x000002000071e9e0 : or al, 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x000002000040533b : or al, 0xf ; cdq ; ret
0x0000020000667c5d : or al, 0xf ; mov bh, 5 ; ret
0x0000020000720260 : or al, 0xf ; ret
0x000002000072cb2f : or al, 0xf ; xchg eax, ebp ; ret
0x00000200004bac30 : or al, 0xf1 ; fdivp st(7) ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044c220 : or al, 0xf6 ; ret
0x00000200004a92f0 : or al, 0xf6 ; ret 0x7503
0x00000200004fd57b : or al, 0xf7 ; jno 0x200004fd58b ; ret
0x00000200004fd57a : or al, 0xf7 ; jno 0x200004fd58c ; ret
0x000002000036c599 : or al, 0xf7 ; ret
0x00000200005a785c : or al, 0xf7 ; ret 0xff80
0x00000200007094bc : or al, 0xfa ; ljmp ptr [rax - 0x207af0fe] ; ret 1
0x000002000013dcef : or al, 0xff ; ret
0x00000200004d1e11 : or al, 0xff ; ret 0x3b41
0x00000200001c6bb8 : or al, 0xff ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x0000020000033bee : or al, 0xff ; ror byte ptr [rax - 0x7d], 0xc1 ; sbb byte ptr [rbx], bh ; ret 0xf172
0x000002000002fdc2 : or al, 1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000ead3c : or al, 1 ; add byte ptr [rax], al ; ret
0x000002000010885d : or al, 2 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001249f : or al, 3 ; add bh, ah ; rol byte ptr [rdx], 2 ; ret
0x000002000066e1b8 : or al, 3 ; enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x00000200005ea90c : or al, 4 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000200001bdacf : or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x000002000023be54 : or al, 6 ; ret
0x000002000023dd14 : or al, 6 ; ret 0x1316
0x0000020000288834 : or al, 6 ; ret 0x2536
0x000002000024cf14 : or al, 6 ; ret 0x2596
0x000002000026ad4a : or al, 6 ; sysenter
0x0000020000285d35 : or al, 7 ; add byte ptr [rip + 0xc060016], al ; ret 0x7005
0x00000200000e5cdc : or al, 8 ; and ecx, 8 ; je 0x200000e5cd3 ; mov al, 1 ; ret
0x00000200001bb730 : or al, 9 ; out 0xff, al ; mov qword ptr [rcx], rax ; ret
0x0000020000671542 : or al, ah ; ret
0x00000200000121a2 : or al, al ; add eax, dword ptr [rcx] ; ret 0x2a05
0x00000200004ad6bf : or al, al ; call 0x1ffc34bfacf
0x00000200000a4e8c : or al, al ; mov byte ptr [rcx + 0x8e], al ; ret
0x00000200003ee42b : or al, bl ; mov eax, 0xc00000bb ; ret
0x0000020000212cea : or al, bpl ; ret
0x00000200003c6b59 : or al, byte ptr [rax + rbx] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000f3429 : or al, byte ptr [rax - 0x6af0f507] ; ret
0x00000200000e8ad5 : or al, byte ptr [rax] ; add bl, ch ; ret
0x00000200000d170b : or al, byte ptr [rax] ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000003711f : or al, byte ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200004f8e45 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200000a2896 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000020853 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x0000020000405f0f : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000002000010a41b : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200003bbc02 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000072a24 : or al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0x700
0x0000020000630a95 : or al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x0000020000224a41 : or al, byte ptr [rax] ; add dh, bh ; ret
0x00000200000fa93d : or al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fc69b : or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000024d2b6 : or al, byte ptr [rax] ; and dword ptr [rsi + 0xa], 0 ; nop ; ret 0x24
0x0000020000204a43 : or al, byte ptr [rax] ; cmovne ecx, eax ; mov eax, ecx ; ret
0x000002000024d316 : or al, byte ptr [rax] ; in al, dx ; ret 0x24
0x000002000024d382 : or al, byte ptr [rax] ; insb byte ptr [rdi], dx ; ret
0x000002000024d40a : or al, byte ptr [rax] ; ja 0x2000024d420 ; add al, bl ; ret
0x000002000024d436 : or al, byte ptr [rax] ; ja 0x2000024d44c ; add al, bl ; ret
0x000002000024d44a : or al, byte ptr [rax] ; ja 0x2000024d460 ; add al, bl ; ret
0x000002000024d476 : or al, byte ptr [rax] ; ja 0x2000024d48c ; add al, bl ; ret
0x000002000024d49e : or al, byte ptr [rax] ; ja 0x2000024d4b4 ; add al, bl ; ret
0x000002000024d4ca : or al, byte ptr [rax] ; ja 0x2000024d4e0 ; add al, bl ; ret
0x000002000024d4da : or al, byte ptr [rax] ; ja 0x2000024d4f0 ; add al, bl ; ret
0x000002000024d27a : or al, byte ptr [rax] ; jge 0x2000024d2e8 ; or al, byte ptr [rax] ; pop rax ; ret 0x24
0x0000020000414ef9 : or al, byte ptr [rax] ; jmp 0x20000414de2
0x000002000047f006 : or al, byte ptr [rax] ; jmp 0x2000047efd0
0x000002000024d3d2 : or al, byte ptr [rax] ; lodsb al, byte ptr [rsi] ; ret
0x00000200000ef8b7 : or al, byte ptr [rax] ; mov r8, r14 ; mov rcx, rbx ; call rax
0x00000200005005b6 : or al, byte ptr [rax] ; mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x0000020000191f1a : or al, byte ptr [rax] ; nop ; jmp 0x200000be1b1
0x0000020000192034 : or al, byte ptr [rax] ; nop ; jmp 0x200000be2f5
0x0000020000553144 : or al, byte ptr [rax] ; nop ; jmp 0x200003e84d6
0x000002000024d2ba : or al, byte ptr [rax] ; nop ; ret 0x24
0x000002000024d072 : or al, byte ptr [rax] ; or al, 6 ; ret
0x00000200000fd273 : or al, byte ptr [rax] ; or eax, 0xffffffff ; ret
0x000002000024d27e : or al, byte ptr [rax] ; pop rax ; ret 0x24
0x000002000024d24e : or al, byte ptr [rax] ; rcr dword ptr [rdi + 0xa], cl ; add byte ptr [rax], ch ; ret 0x24
0x00000200000b5606 : or al, byte ptr [rax] ; ret
0x000002000024d99e : or al, byte ptr [rax] ; ret 0xaa9
0x000002000024dc82 : or al, byte ptr [rax] ; ret 0xadc
0x0000020000239ad6 : or al, byte ptr [rax] ; sysenter
0x000002000024d312 : or al, byte ptr [rax] ; xchg eax, esp ; imul ecx, dword ptr [rdx], 0 ; in al, dx ; ret 0x24
0x0000020000505f82 : or al, byte ptr [rax] ; xor al, al ; ret
0x00000200000f4425 : or al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000191f9c : or al, byte ptr [rax] ; xor ecx, ecx ; jmp 0x200000be1e2
0x00000200000fcc6c : or al, byte ptr [rax] ; xor ecx, ecx ; mov al, cl ; ret
0x00000200001b9214 : or al, byte ptr [rbp + 0x33] ; sal byte ptr [rbx], 0xd2 ; call 0x20000045498
0x000002000040eded : or al, byte ptr [rbp + 0x3b] ; ret 0x1174
0x0000020000225170 : or al, byte ptr [rbx + rdi - 0x3f] ; jae 0x20000225183 ; or eax, 0xffffffff ; ret
0x00000200000d7ce0 : or al, byte ptr [rbx - 0x7cb6f81e] ; ret 0x4910
0x00000200002431d5 : or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x000002000020a35a : or al, byte ptr [rbx] ; ret 0x8941
0x000002000070e846 : or al, byte ptr [rcx + 0xf] ; mov bh, 0xc0 ; ret
0x0000020000500bc4 : or al, byte ptr [rcx + 3] ; int 0x80
0x000002000054d38c : or al, byte ptr [rcx - 0x3f] ; ret
0x0000020000136646 : or al, byte ptr [rcx - 0x75] ; ret 0xff49
0x0000020000507066 : or al, byte ptr [rcx - 0x76] ; ret
0x00000200003ad4c5 : or al, byte ptr [rcx - 0x77] ; cmp eax, dword ptr [rcx - 0x76] ; ret 0x8b48
0x00000200005b2380 : or al, byte ptr [rcx - 0x7f] ; ret 0x2400
0x00000200005b3b39 : or al, byte ptr [rcx - 0xa] ; ret
0x0000020000480000 : or al, byte ptr [rcx - 0xa] ; ret 0x7501
0x000002000005f688 : or al, byte ptr [rcx - 0xa] ; ret 0xf08
0x00000200004a3760 : or al, byte ptr [rcx - 1] ; ret 0x3b44
0x000002000024d2b5 : or al, byte ptr fs:[rax] ; and dword ptr [rsi + 0xa], 0 ; nop ; ret 0x24
0x0000020000239ad5 : or al, byte ptr fs:[rax] ; sysenter
0x000002000049b633 : or al, byte ptr gs:[rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000490b7e : or al, ch ; clc ; xchg eax, ecx ; ret
0x0000020000507b92 : or al, ch ; cmp ch, bh ; ret 0x89ff
0x000002000070d20f : or al, ch ; imul eax, dword ptr [rsi], -0x5b ; dec dword ptr [rax - 0x75] ; ret
0x0000020000491942 : or al, ch ; insb byte ptr [rdi], dx ; ret
0x0000020000418c99 : or al, ch ; int1 ; hlt ; ret 0x48ff
0x000002000053cd1d : or al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xffb2
0x0000020000212ceb : or al, ch ; ret
0x00000200004dee50 : or al, ch ; ret 0xedfd
0x000002000017d918 : or al, ch ; ret 0xf3f7
0x00000200006789a7 : or al, ch ; ror dword ptr [rsi - 0x52], cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000046fb47 : or al, ch ; sbb ebx, ecx ; ret 0x41ff
0x00000200005932c2 : or al, ch ; xchg eax, esp ; cld ; ret
0x00000200000915a6 : or al, dh ; cmpxchg qword ptr [rdx], rcx ; jne 0x200000915ba ; ret
0x00000200001f3039 : or al, dh ; dec dword ptr [rip + 0xc3023] ; ret
0x00000200001f301b : or al, dh ; dec dword ptr [rip + 0xc303d] ; ret
0x0000020000180f62 : or al, dh ; jmp qword ptr [rcx]
0x00000200000d5689 : or al, dl ; jmp 0x200000d562c
0x00000200000a4e8b : or al, r8b ; mov byte ptr [rcx + 0x8e], al ; ret
0x00000200001b7ff3 : or bh, al ; push rsi ; ret
0x000002000015dc03 : or bh, bh ; dec r8 ; jne 0x2000015dc07 ; ret
0x000002000015dcb1 : or bh, bh ; dec r8 ; jne 0x2000015dcb5 ; ret
0x000002000006c70a : or bh, bh ; int 0x75
0x000002000010a3dd : or bh, bh ; leave ; jne 0x2000010a3f4 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000008fce0 : or bh, bh ; mov eax, 0xc0000095 ; ret
0x0000020000081de7 : or bh, bh ; ret
0x00000200001ba507 : or bh, bh ; ret 0x153b
0x0000020000653575 : or bh, bh ; ret 0x341
0x00000200006fe45c : or bh, bh ; ret 0x3b41
0x00000200007287bf : or bh, bh ; ret 0x5489
0x00000200005cea02 : or bh, bh ; ret 0x8948
0x0000020000595e6a : or bh, bh ; ret 0xc1ff
0x0000020000629b8d : or bh, bh ; ret 0xefeb
0x00000200001c6b5e : or bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x000002000036d8d3 : or bh, bh ; ror dword ptr [rcx - 0x2f], -0x17 ; jne 0x2000036d8a7 ; ret
0x000002000043a7f3 : or bh, bh ; test dword ptr [rcx + rax - 0x74b80000], esi ; ret
0x000002000053a072 : or bh, byte ptr [rax] ; ret 0x90ff
0x00000200005db44f : or bh, byte ptr [rbx - 0x3fffff66] ; jmp 0x200005db420
0x00000200004a108f : or bh, byte ptr [rcx - 0x3fffff66] ; call 0x200000cee05
0x000002000072cb2c : or bh, byte ptr [rcx] ; pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x0000020000587bac : or bh, byte ptr [rdi - 0x3fffff66] ; jmp 0x20000493e26
0x00000200001cc704 : or bh, byte ptr [rdx + 0x32] ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000072f3a1 : or bh, byte ptr [rdx - 0x49] ; call qword ptr [rax]
0x0000020000096114 : or bh, byte ptr [rsi - 0x30] ; mov byte ptr [rdx], cl ; ret
0x00000200004a4cdc : or bh, dh ; ret
0x0000020000721a90 : or bh, dh ; ret 0xe9ff
0x000002000010ca1e : or bl, al ; and dword ptr [rcx + 4], 0 ; ret
0x0000020000378801 : or bl, al ; mov al, 4 ; ret
0x0000020000508064 : or bl, al ; mov eax, 0xc000000d ; ret
0x000002000009d47f : or bl, al ; or eax, 0xffffffff ; ret
0x000002000012e1d3 : or bl, al ; xor al, al ; ret
0x00000200000f27dd : or bl, al ; xor eax, eax ; ret
0x000002000065a294 : or bl, bl ; ret
0x00000200000c4d50 : or bl, bpl ; ret
0x000002000008e43e : or bl, bpl ; ret 0xc68b
0x0000020000120430 : or bl, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x00000200001ebce6 : or bl, byte ptr [rdi - 0x7cb7000f] ; ret
0x0000020000234e2d : or bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000011c2c1 : or bl, ch ; call 0x1ffe9d44e0e
0x000002000010c08c : or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200004f69f8 : or bl, ch ; fisttp word ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000039772 : or bl, ch ; in al, dx ; xor eax, eax ; ret
0x0000020000368f0e : or bl, ch ; leave ; ret
0x000002000020c90e : or bl, ch ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200006df04e : or bl, ch ; or cl, byte ptr [rbp - 0x36ccc8ec] ; call rbx
0x00000200001d5cea : or bl, ch ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x00000200006d7b0e : or bl, ch ; or eax, dword ptr [rbx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rbx
0x00000200006d7fab : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rbx
0x00000200006d6110 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x17 ; xor ecx, ecx ; call rbx
0x00000200006df9a9 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rbx
0x00000200006d64a8 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x27 ; xor ecx, ecx ; call rbx
0x00000200006d935e : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x2e ; xor ecx, ecx ; call rbx
0x00000200006e025c : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x37 ; xor ecx, ecx ; call rbx
0x00000200006dc25b : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x3f ; xor ecx, ecx ; call rbx
0x00000200000c4d51 : or bl, ch ; ret
0x00000200000b61fc : or bl, ch ; ret 0x48cc
0x00000200004fc3ae : or bl, ch ; ret 0x4b80
0x000002000008e43f : or bl, ch ; ret 0xc68b
0x00000200003729a3 : or bl, dh ; jmp 0x20000369f4f
0x00000200003729a2 : or bl, dh ; jmp 0x20000369f50
0x00000200001e6199 : or bpl, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x00000200001ab531 : or byte ptr [r10 + 0xf], al ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x00000200004ce34d : or byte ptr [r10], dl ; ret
0x00000200005e15d6 : or byte ptr [r11 + 0x3480c53], cl ; ret
0x000002000071f389 : or byte ptr [r11 + r9*4 + 0x47], r8b ; add al, 0x8b ; ret
0x0000020000401d66 : or byte ptr [r11 + rcx*4 + 0x5a], cl ; or byte ptr [rcx + 0x3b], al ; ret 0x4272
0x000002000002e9ba : or byte ptr [r11 - 0x7af0fd02], al ; ret 0
0x0000020000463fe2 : or byte ptr [r11], al ; ret 0x840f
0x0000020000540500 : or byte ptr [r11], bpl ; ret 0x8b44
0x00000200003809b8 : or byte ptr [r11], r14b ; shr al, cl ; call rcx
0x0000020000630054 : or byte ptr [r11], sil ; shr al, cl ; ret
0x00000200004a5de0 : or byte ptr [r13 + 0x2b], cl ; ret 0x8b44
0x000002000050ba32 : or byte ptr [r13 + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x000002000002999c : or byte ptr [r13 + 0x33], r8b ; dec dword ptr [rdx - 0x75] ; push rsp ; ret
0x0000020000079a08 : or byte ptr [r13 + rcx*4 + 0x14], cl ; ret 0x8b48
0x00000200003e81d8 : or byte ptr [r13 - 0x743b8b25], r8b ; ret
0x00000200001bd1b7 : or byte ptr [r13 - 0x74b70792], r9b ; ret 0x1f89
0x00000200001f1bee : or byte ptr [r13 - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x0000020000666f13 : or byte ptr [r14 + 4], sil ; mov qword ptr [rcx + 8], rax ; ret
0x000002000020663f : or byte ptr [r14 - 0x7b], r12b ; ret 0x1975
0x0000020000499f71 : or byte ptr [r15 + r9 - 0x49], r8b ; ret
0x0000020000103732 : or byte ptr [r15], cl ; mov bl, 0x10 ; ret
0x00000200002316e0 : or byte ptr [r15], cl ; xchg eax, ebx ; ret
0x0000020000231702 : or byte ptr [r15], cl ; xchg eax, edi ; ret
0x00000200002316f1 : or byte ptr [r15], cl ; xchg eax, edx ; ret
0x0000020000231713 : or byte ptr [r15], cl ; xchg eax, esi ; ret
0x0000020000088ff9 : or byte ptr [r8 + 0x1a], 0x10 ; ret
0x00000200000ac805 : or byte ptr [r8 + 0x23], cl ; ret
0x000002000015e085 : or byte ptr [r8 + 0x23], cl ; ret 0xb49
0x00000200004bda0b : or byte ptr [r8 + 0x2b], cl ; ret 0x8548
0x00000200004bda28 : or byte ptr [r8 + 0x2b], cl ; ret 0x8a41
0x00000200002041ab : or byte ptr [r8 + 0x2b], r9b ; ret 0x8548
0x000002000011b8ef : or byte ptr [r8 + 0x33], r9b ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x0000020000676155 : or byte ptr [r8 + 0x3b], cl ; ret
0x00000200004be69e : or byte ptr [r8 + 0x3b], cl ; ret 0x3f77
0x000002000022a9d2 : or byte ptr [r8 + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x000002000012dbd8 : or byte ptr [r8 + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200003fdafa : or byte ptr [r8 + 0x3b], r9b ; ret
0x00000200000948f3 : or byte ptr [r8 + 0x3b], r9b ; ret 0x1774
0x00000200006cd017 : or byte ptr [r8 + 0x63], cl ; ret 0x8348
0x0000020000159ed7 : or byte ptr [r8 + 0xf], cl ; ret
0x00000200000b592c : or byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200006438e9 : or byte ptr [r8 + 1], r15b ; pop rbp ; ret
0x000002000070c5e8 : or byte ptr [r8 + 3], cl ; ret
0x00000200004feb35 : or byte ptr [r8 + 3], cl ; ret 0x3b48
0x0000020000157d02 : or byte ptr [r8 + rsi*8], spl ; ret
0x000002000002a395 : or byte ptr [r8 - 0x4b], r8b ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x00000200000645f2 : or byte ptr [r8 - 0x74178aff], r13b ; ret
0x00000200000b0619 : or byte ptr [r8 - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x0000020000601d1c : or byte ptr [r8 - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x000002000040ed9f : or byte ptr [r8 - 0x75], cl ; push rdx ; or byte ptr [rcx - 0x75], cl ; ret 0x8d4f
0x0000020000030f41 : or byte ptr [r8 - 0x75], cl ; ret
0x00000200001d93ca : or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x000002000009b016 : or byte ptr [r8 - 0x75], cl ; ret 0x48f0
0x00000200000d7a44 : or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x00000200004a380d : or byte ptr [r8 - 0x75], r9b ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x0000020000165df8 : or byte ptr [r8 - 0x75], r9b ; ret
0x0000020000069f0e : or byte ptr [r8 - 0x75], r9b ; ret 0x4cf0
0x0000020000403dce : or byte ptr [r8 - 0x75], r9b ; retf ; call 0x20000031498
0x0000020000472bee : or byte ptr [r8 - 0x7b], cl ; leave ; je 0x20000472c31 ; mov eax, r10d ; ret
0x00000200002091e4 : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x200002091e6 ; ret
0x000002000047b321 : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200004325ec : or byte ptr [r8 - 0x7d], cl ; ret
0x00000200004f92b5 : or byte ptr [r8 - 0x7d], cl ; ret 0x4808
0x00000200006ee6de : or byte ptr [r8 - 0x7d], cl ; ret 0x4810
0x00000200005139f2 : or byte ptr [r8 - 0x7d], cl ; ret 0x4818
0x00000200004b4ff0 : or byte ptr [r8 - 0x7d], cl ; ret 0xe8d0
0x0000020000097ec9 : or byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000102946 : or byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200004400ba : or byte ptr [r8 - 1], r9b ; ret
0x00000200000b8a5a : or byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015df36 : or byte ptr [r8], cl ; add byte ptr [rax], al ; ret
0x000002000013160b : or byte ptr [r8], r8b ; xor al, al ; add rsp, 0x28 ; ret
0x000002000038fda7 : or byte ptr [r9 + 0x23], cl ; ret
0x000002000005923e : or byte ptr [r9 + 0x23], cl ; ret 0x2b49
0x00000200005b3492 : or byte ptr [r9 + 0x23], cl ; ret 0x8948
0x000002000053297b : or byte ptr [r9 + 0x2b], cl ; ret
0x000002000018e9cb : or byte ptr [r9 + 0x2b], cl ; ret 0xff48
0x0000020000718110 : or byte ptr [r9 + 0x2b], cl ; ret 0xff49
0x00000200000ef6e1 : or byte ptr [r9 + 0x2b], r8b ; ret
0x00000200000b85b0 : or byte ptr [r9 + 0x3b], cl ; ret
0x00000200000d7d06 : or byte ptr [r9 + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000b84f5 : or byte ptr [r9 + r9*4 + 0x5c], cl ; rcl dword ptr [rax], 1 ; ret
0x000002000062c9ab : or byte ptr [r9 + rcx*4 + 0x4d], al ; ret
0x0000020000081b32 : or byte ptr [r9 + rcx*4 + 0x5d], r9b ; sbb byte ptr [rcx - 0xa], al ; ret
0x00000200004fc209 : or byte ptr [r9 - 0x75], al ; ret
0x00000200005bcdfa : or byte ptr [r9 - 0x75], al ; ror byte ptr [rax - 0x75], 1 ; ret
0x0000020000099dc1 : or byte ptr [r9 - 0x75], cl ; add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x00000200000c0730 : or byte ptr [r9 - 0x75], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x0000020000123f2c : or byte ptr [r9 - 0x75], cl ; clc ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000410162 : or byte ptr [r9 - 0x75], cl ; iretd ; call 0x20000031498
0x000002000036b885 : or byte ptr [r9 - 0x75], cl ; ret 0x8b41
0x000002000066dc3a : or byte ptr [r9 - 0x76], al ; ret
0x000002000014aef2 : or byte ptr [r9 - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200003b3cc1 : or byte ptr [r9 - 0x77], al ; add eax, dword ptr [rcx - 0x75] ; ret 0x2b41
0x000002000022e99e : or byte ptr [r9 - 0x77], al ; or al, 0x41 ; mov eax, ecx ; ret
0x00000200003cef76 : or byte ptr [r9 - 0x7b], al ; ret 0xa75
0x0000020000229622 : or byte ptr [r9 - 0x7c], al ; ret
0x00000200006d781b : or byte ptr [r9 - 0x7c], al ; ret 0xe75
0x0000020000211ab2 : or byte ptr [r9 - 0x7d], cl ; ret
0x000002000050bb8a : or byte ptr [r9 - 0x7f], cl ; ret 0x1000
0x00000200005205b5 : or byte ptr [r9], r8b ; add byte ptr [rax], al ; add al, ch ; add dh, dl ; ret
0x0000020000088ffa : or byte ptr [rax + 0x1a], 0x10 ; ret
0x0000020000272872 : or byte ptr [rax + 0x22], ah ; add byte ptr [rax], al ; add al, bh ; ret 0x4d
0x00000200000ac806 : or byte ptr [rax + 0x23], cl ; ret
0x000002000015e086 : or byte ptr [rax + 0x23], cl ; ret 0xb49
0x00000200000d8320 : or byte ptr [rax + 0x29], cl ; adc eax, 0x1ddd50 ; ret
0x00000200003f91fd : or byte ptr [rax + 0x2b], cl ; ret
0x00000200005fb16a : or byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200002041ac : or byte ptr [rax + 0x2b], cl ; ret 0x8548
0x00000200004bda29 : or byte ptr [rax + 0x2b], cl ; ret 0x8a41
0x000002000057aeef : or byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200004d4e09 : or byte ptr [rax + 0x2b], cl ; ret 0x9948
0x00000200005d991d : or byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200003f91fc : or byte ptr [rax + 0x2b], r9b ; ret
0x00000200005fb169 : or byte ptr [rax + 0x2b], r9b ; ret 0x3b48
0x00000200002041cd : or byte ptr [rax + 0x2b], r9b ; ret 0x8548
0x000002000011b8f0 : or byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000007e31a : or byte ptr [rax + 0x33], cl ; ret
0x000002000000a2af : or byte ptr [rax + 0x36], al ; pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; salc ; jmp qword ptr [rcx]
0x00000200000c2c6d : or byte ptr [rax + 0x39], 0x9c ; ret 0x6740
0x0000020000482c5f : or byte ptr [rax + 0x39], 9 ; jne 0x20000482c70 ; xor eax, eax ; ret
0x00000200006d777f : or byte ptr [rax + 0x3b], cl ; enter 0x2575, -0x7d ; ret
0x00000200006dcdd1 : or byte ptr [rax + 0x3b], cl ; enter 0x2675, -0x7d ; ret
0x00000200001948fd : or byte ptr [rax + 0x3b], cl ; ret
0x0000020000041769 : or byte ptr [rax + 0x3b], cl ; ret 0x1175
0x00000200000948f4 : or byte ptr [rax + 0x3b], cl ; ret 0x1774
0x00000200001156ee : or byte ptr [rax + 0x3b], cl ; ret 0x2874
0x0000020000028e06 : or byte ptr [rax + 0x3b], cl ; ret 0x3a75
0x000002000011ffcf : or byte ptr [rax + 0x3b], cl ; ret 0x3f75
0x00000200004be69f : or byte ptr [rax + 0x3b], cl ; ret 0x3f77
0x0000020000084593 : or byte ptr [rax + 0x3b], cl ; ret 0x4475
0x0000020000096463 : or byte ptr [rax + 0x3b], cl ; ret 0x4b75
0x00000200000e163c : or byte ptr [rax + 0x3b], cl ; ret 0x5074
0x00000200002071ac : or byte ptr [rax + 0x3b], cl ; ret 0x675
0x00000200001d1140 : or byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000003baba : or byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000415ae : or byte ptr [rax + 0x3b], cl ; ret 0x875
0x0000020000066a83 : or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x00000200001ef954 : or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000022a9d3 : or byte ptr [rax + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x00000200001182d8 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbp - 0xe], 1 ; sub rax, rdx ; ret
0x000002000012dbd9 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200001f34f3 : or byte ptr [rax + 0x3b], cl ; sar dword ptr [rdi + 3], 1 ; xor eax, eax ; ret
0x00000200001a9259 : or byte ptr [rax + 0x3b], r9b ; ret
0x000002000015dd31 : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rax], al ; ret
0x000002000015dd30 : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rax], al ; ret
0x000002000006fcfa : or byte ptr [rax + 0x47], 0x20 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fde67 : or byte ptr [rax + 0x49], bl ; mov dword ptr [rcx], eax ; ret
0x00000200001fde66 : or byte ptr [rax + 0x49], r11b ; mov dword ptr [rcx], eax ; ret
0x00000200006cd018 : or byte ptr [rax + 0x63], cl ; ret 0x8348
0x000002000008e488 : or byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200003a6944 : or byte ptr [rax + 0x69], cl ; ret 0x101
0x000002000001ebb1 : or byte ptr [rax + 0x9d], dl ; add bl, cl ; ret
0x00000200001de417 : or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000ac80e : or byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000674b6c : or byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000130b64 : or byte ptr [rax + 0xf], cl ; mov edx, 0x834807f0 ; ret
0x000002000015845b : or byte ptr [rax + 0xf], cl ; ret
0x00000200000b592d : or byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000155a8a : or byte ptr [rax + 1], al ; add byte ptr [rax], al ; add ah, ah ; ret 0x4010
0x00000200006438ea : or byte ptr [rax + 1], bh ; pop rbp ; ret
0x000002000041b8a0 : or byte ptr [rax + 1], bh ; ret
0x00000200006ee736 : or byte ptr [rax + 1], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000066a6d1 : or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200003655ab : or byte ptr [rax + 3], cl ; ret
0x00000200004feb36 : or byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004a7287 : or byte ptr [rax + 3], cl ; ret 0xcaff
0x0000020000157d03 : or byte ptr [rax + rsi*8], ah ; ret
0x0000020000149310 : or byte ptr [rax - 0x2d], cl ; ret
0x00000200006c5f30 : or byte ptr [rax - 0x2d], cl ; ret 0x2b48
0x00000200006c6493 : or byte ptr [rax - 0x2d], cl ; ret 0x2b49
0x0000020000149164 : or byte ptr [rax - 0x2d], cl ; ret 0x2b4c
0x00000200006c51ed : or byte ptr [rax - 0x2d], cl ; ret 0x2b4d
0x000002000070f2e7 : or byte ptr [rax - 0x2d], cl ; ret 0xc6ff
0x000002000037d06f : or byte ptr [rax - 0x2d], cl ; ret 0xff48
0x00000200006ceb09 : or byte ptr [rax - 0x2d], cl ; ret 0xff49
0x00000200003bb8a9 : or byte ptr [rax - 0x3714e0ba], 0xf6 ; ret
0x00000200000b2cee : or byte ptr [rax - 0x3f], cl ; call 0x1ffc22e7509
0x00000200000fc7d5 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2330fed
0x00000200001b935d : or byte ptr [rax - 0x3f], cl ; call 0x1ffc23edb78
0x00000200000f2eac : or byte ptr [rax - 0x3f], cl ; call 0x1ffc33276c4
0x00000200005fd5ae : or byte ptr [rax - 0x3f], cl ; jmp 0x1ffc2eb22c0
0x000002000012d973 : or byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x00000200005d004b : or byte ptr [rax - 0x3fffff45], bh ; ret
0x000002000002a396 : or byte ptr [rax - 0x4b], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x000002000023d2b4 : or byte ptr [rax - 0x5602ffc7], ch ; cmp dword ptr [rax], eax ; xchg eax, esp ; ret 0x23
0x000002000010b313 : or byte ptr [rax - 0x68], 0x49 ; or eax, ecx ; or rax, rcx ; ret
0x000002000036bf62 : or byte ptr [rax - 0x73], 0x1c ; int 0x80
0x000002000036c129 : or byte ptr [rax - 0x73], 0x3c ; int 0x80
0x00000200000f22bf : or byte ptr [rax - 0x73], 0xc ; int 0x80
0x00000200000ec8e6 : or byte ptr [rax - 0x73], 0xc ; ret
0x00000200000b5701 : or byte ptr [rax - 0x73], cl ; add eax, 0xabb07 ; ret
0x00000200000b56f4 : or byte ptr [rax - 0x73], cl ; add eax, 0xabb44 ; ret
0x000002000041aa70 : or byte ptr [rax - 0x73], cl ; add eax, 0xffeb8f68 ; ret
0x0000020000414074 : or byte ptr [rax - 0x73], cl ; add eax, 0xffebf964 ; ret
0x000002000060598c : or byte ptr [rax - 0x73], cl ; add eax, 0xfff207dc ; ret
0x0000020000379a9b : or byte ptr [rax - 0x73], cl ; add eax, 0xffff6f8d ; ret
0x000002000038f4ec : or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x000002000020839b : or byte ptr [rax - 0x73], cl ; pop rdi ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000d5f52 : or byte ptr [rax - 0x73], cl ; sbb byte ptr [r9 + 0x3b], cl ; ret 0x830f
0x00000200000645f3 : or byte ptr [rax - 0x74178aff], ch ; ret
0x000002000060d4b7 : or byte ptr [rax - 0x74b7e0aa], 0xcf ; call 0x200000b977d
0x00000200001bcf06 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 3], cl ; ret
0x0000020000426730 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200002147c7 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000020e958 : or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x0000020000674599 : or byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x000002000061ccd3 : or byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x000002000043c58c : or byte ptr [rax - 0x75], cl ; enter 0x3be8, -0x36 ; ret 0x48ff
0x00000200000b061a : or byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200004402a2 : or byte ptr [rax - 0x75], cl ; fisttp word ptr [rax - 1] ; ret
0x0000020000442a61 : or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000690a7
0x00000200000355d5 : or byte ptr [rax - 0x75], cl ; jl 0x20000035606 ; adc byte ptr [rax - 0x75], cl ; ret 0xb8c3
0x00000200000b43b9 : or byte ptr [rax - 0x75], cl ; jl 0x200000b43ea ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200000b5f15 : or byte ptr [rax - 0x75], cl ; jl 0x200000b5f46 ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200000f4ff2 : or byte ptr [rax - 0x75], cl ; jl 0x200000f5023 ; adc byte ptr [rcx - 0x75], al ; ret
0x0000020000105825 : or byte ptr [rax - 0x75], cl ; jl 0x20000105856 ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000020aabd : or byte ptr [rax - 0x75], cl ; jl 0x2000020aaee ; adc byte ptr [rcx - 0x75], al ; ret 0xccc3
0x0000020000454494 : or byte ptr [rax - 0x75], cl ; jl 0x200004544c5 ; adc byte ptr [rcx - 0x75], al ; ret
0x00000200004b2d3c : or byte ptr [rax - 0x75], cl ; jl 0x200004b2d6d ; adc byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200006195d2 : or byte ptr [rax - 0x75], cl ; jl 0x20000619603 ; adc byte ptr [rcx - 0x75], al ; ret 0x48c3
0x0000020000710e2d : or byte ptr [rax - 0x75], cl ; jl 0x20000710e5e ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200000b43fb : or byte ptr [rax - 0x75], cl ; jmp 0x1ffffd9cf52
0x000002000022b96c : or byte ptr [rax - 0x75], cl ; or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x2000022b965 ; ret
0x0000020000601d1d : or byte ptr [rax - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000462059 : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, edx ; ret
0x000002000050702e : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200004a380e : or byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x000002000040eda0 : or byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rcx - 0x75], cl ; ret 0x8d4f
0x0000020000214de3 : or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x0000020000030f42 : or byte ptr [rax - 0x75], cl ; ret
0x0000020000042679 : or byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200001d93cb : or byte ptr [rax - 0x75], cl ; ret 0x3308
0x000002000003d096 : or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000069f0f : or byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x00000200003667ce : or byte ptr [rax - 0x75], cl ; ret 0x7eb
0x00000200001f8c77 : or byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000036683e : or byte ptr [rax - 0x75], cl ; ret 0x854d
0x0000020000058341 : or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004b0036 : or byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200004bff5c : or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001c5c9b : or byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200004cb8e8 : or byte ptr [rax - 0x75], cl ; ret 0xbac3
0x000002000005c543 : or byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000007faad : or byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200003b508c : or byte ptr [rax - 0x75], cl ; ret 0xff25
0x0000020000403dcf : or byte ptr [rax - 0x75], cl ; retf ; call 0x20000031497
0x000002000043b36d : or byte ptr [rax - 0x75], cl ; retf ; call 0x20000068fd7
0x00000200003a43d9 : or byte ptr [rax - 0x75], cl ; retf ; call 0x200003a066a
0x00000200000e4104 : or byte ptr [rax - 0x75], cl ; retf ; call 0x2000047038a
0x000002000067d59d : or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x0000020000095c1d : or byte ptr [rax - 0x75], cl ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0xdae9
0x00000200006729dd : or byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000663fe5 : or byte ptr [rax - 0x75], cl ; sbb esi, dword ptr [rbx] ; shr al, cl ; xor byte ptr [rsi], cl ; ret
0x00000200004402a1 : or byte ptr [rax - 0x75], r9b ; fisttp word ptr [rax - 1] ; ret
0x0000020000371dc1 : or byte ptr [rax - 0x75], r9b ; ret
0x00000200003c4ac6 : or byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r10
0x00000200000ec299 : or byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000674634 : or byte ptr [rax - 0x77], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006cd8f5 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006c71f8 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x00000200006c5148 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x000002000067400d : or byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x00000200006d2694 : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000100deb : or byte ptr [rax - 0x77], cl ; and byte ptr [r13 - 0x77], cl ; ret 0x8b41
0x0000020000190ff6 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200004325e9 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000368396 : or byte ptr [rax - 0x77], cl ; or dil, dil ; ret
0x0000020000678bcf : or byte ptr [rax - 0x77], cl ; or eax, 0xffc35091 ; ret
0x00000200005f4eaf : or byte ptr [rax - 0x77], cl ; or eax, 0xffcd45c1 ; jmp 0x200005f4e85
0x00000200005f4dd1 : or byte ptr [rax - 0x77], cl ; or eax, 0xffcd469f ; jmp 0x200005f4da7
0x000002000057d6e8 : or byte ptr [rax - 0x77], cl ; or eax, 0xffd327c8 ; ret
0x00000200004d2a48 : or byte ptr [rax - 0x77], cl ; or eax, 0xffe00e38 ; ret
0x0000020000471f27 : or byte ptr [rax - 0x77], cl ; or eax, 0xffe3df59 ; ret
0x00000200006e8d72 : or byte ptr [rax - 0x77], cl ; or ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000491d64 : or byte ptr [rax - 0x77], cl ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200004b3fe7 : or byte ptr [rax - 0x79], cl ; xchg eax, ecx ; enter 1, 0 ; ret
0x000002000012d00e : or byte ptr [rax - 0x7b], 0xc1 ; setne dl ; mov eax, edx ; ret
0x000002000011b75e : or byte ptr [rax - 0x7b], cl ; div byte ptr [rdx - 0x75] ; ret
0x00000200001cbd2b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbd39 ; call rcx
0x00000200001cbd2a : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbd3a ; call rcx
0x0000020000472bef : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000472c30 ; mov eax, r10d ; ret
0x0000020000472bef : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000472c31 ; mov eax, r10d ; ret
0x00000200002091e5 : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x200002091e5 ; ret
0x00000200004062ea : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x200004062cd ; mov eax, r10d ; jmp 0x200004062d8
0x00000200004062e9 : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x200004062ce ; mov eax, r10d ; jmp 0x200004062d9
0x000002000047b322 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000047d256 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x00000200000e29f1 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x24], 0x48 ; mov eax, ecx ; ret
0x0000020000217938 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x2000021795f
0x00000200001048f8 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x16], cl ; ret
0x00000200000b5942 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x0000020000217937 : or byte ptr [rax - 0x7b], r9b ; sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x20000217960
0x0000020000122866 : or byte ptr [rax - 0x7cb7e0bd], 0x25 ; push rsi ; ret 0x18
0x0000020000029541 : or byte ptr [rax - 0x7d], 0xe0 ; dec byte ptr [rcx + 0xb] ; ret
0x00000200004ff12f : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000002000049d751 : or byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000097eca : or byte ptr [rax - 0x7d], cl ; ret
0x00000200001de2ec : or byte ptr [rax - 0x7d], cl ; ret 0x4407
0x00000200000cc42d : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200001e854f : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000048eda5 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000231c38 : or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200004fcc76 : or byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200006d3a14 : or byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200001eb814 : or byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000200003d2d04 : or byte ptr [rax - 0x7d], cl ; ret 0xe808
0x00000200004b4ff1 : or byte ptr [rax - 0x7d], cl ; ret 0xe8d0
0x0000020000195dc2 : or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000200000cea81 : or byte ptr [rax - 0x7d], cl ; ret 0xe908
0x00000200000e6dc6 : or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200004fcc75 : or byte ptr [rax - 0x7d], r9b ; ret 0x4828
0x000002000037b30d : or byte ptr [rax - 0x7f], cl ; ret
0x0000020000102947 : or byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001646cc : or byte ptr [rax - 0xd7eab4], cl ; ret 0x5589
0x00000200003ec683 : or byte ptr [rax - 1], cl ; enter -0xb8b, 0x49 ; mov eax, ecx ; ret
0x0000020000144b91 : or byte ptr [rax - 1], cl ; ret
0x00000200001962ce : or byte ptr [rax - 1], cl ; ret 0x36e9
0x00000200001894b7 : or byte ptr [rax - 1], cl ; ret 0x3b49
0x000002000014180a : or byte ptr [rax - 1], cl ; ret 0x77e9
0x000002000014d854 : or byte ptr [rax - 1], cl ; ret 0x854d
0x00000200001971a6 : or byte ptr [rax - 1], cl ; ret 0x9ceb
0x00000200001967e6 : or byte ptr [rax - 1], cl ; ret 0xa9e9
0x0000020000195d56 : or byte ptr [rax - 1], cl ; ret 0xee9
0x000002000067d347 : or byte ptr [rax - 9], cl ; ret 0xfffc
0x000002000003376e : or byte ptr [rax], ah ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x000002000028766a : or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x000002000027befe : or byte ptr [rax], al ; add al, 6 ; and eax, dword ptr [rsi] ; sysenter
0x000002000027c23e : or byte ptr [rax], al ; add al, 6 ; clts ; sysenter
0x0000020000251526 : or byte ptr [rax], al ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x000002000026dfa2 : or byte ptr [rax], al ; add al, 6 ; sbb al, 6 ; sysenter
0x000002000053cdbe : or byte ptr [rax], al ; add al, al ; mov rcx, rsi ; call 0x20000068fd9
0x000002000050cb92 : or byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000049465b : or byte ptr [rax], al ; add al, ch ; jge 0x2000049466e ; ret 0x4cff
0x000002000070039a : or byte ptr [rax], al ; add al, ch ; ret 0x159
0x0000020000558b9a : or byte ptr [rax], al ; add al, ch ; ret 0xffb5
0x000002000003726b : or byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200006d4e45 : or byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200004384fb : or byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000574cbe : or byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; test dword ptr [rcx], ecx ; ret 0xffed
0x000002000005e80c : or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x0000020000088260 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fnstcw word ptr [rdx] ; ret
0x00000200003e0849 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000002000036fad9 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000369723 : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x00000200001f94d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x00000200000bc959 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200004ef04c : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000038dfc : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000042fde8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000093e08 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000012beac : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000467370 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000467304 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200004329d8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000051682f : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000141247
0x000002000038b86f : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x2000038b83d
0x00000200001d802b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200000358d3 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000890f5 : or byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x000002000022b0b8 : or byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000005712d : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000051f3f : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sbb dh, dh ; ret
0x000002000053a3f6 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200005abab2 : or byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x00000200001b6ea5 : or byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200000564ee : or byte ptr [rax], al ; add dh, dh ; ret
0x00000200003d45bc : or byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200000b8a5b : or byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022bfb6 : or byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001622fa : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200001244e7 : or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000676bce : or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012f9d7 : or byte ptr [rax], al ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000530a28 : or byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000121712 : or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000bc4a8 : or byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000012498 : or byte ptr [rax], al ; cwde ; rol byte ptr [rcx], 1 ; ret 0x30c
0x0000020000441acf : or byte ptr [rax], al ; je 0x20000441adc ; xor eax, eax ; ret
0x000002000009fadc : or byte ptr [rax], al ; jne 0x2000009fac6 ; mov qword ptr [r8 + 0x40], rcx ; ret
0x000002000022b2e8 : or byte ptr [rax], al ; jne 0x2000022b2f5 ; xor eax, eax ; ret
0x000002000013053c : or byte ptr [rax], al ; mov al, 1 ; jmp 0x2000013050a
0x000002000012f942 : or byte ptr [rax], al ; mov al, byte ptr [rip + 0x2218a2] ; ret
0x0000020000124b9c : or byte ptr [rax], al ; mov dword ptr [r10], 0 ; ret
0x00000200004fd59f : or byte ptr [rax], al ; mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x00000200005627b3 : or byte ptr [rax], al ; mov ebx, 0x103 ; jmp 0x2000041ea90
0x0000020000134948 : or byte ptr [rax], al ; mov ecx, edi ; call rax
0x0000020000136c09 : or byte ptr [rax], al ; mov rax, r8 ; add rsp, 0x28 ; ret
0x000002000043ec34 : or byte ptr [rax], al ; mov rax, rdx ; ret
0x000002000052e364 : or byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001214d4 : or byte ptr [rax], al ; ret
0x0000020000248256 : or byte ptr [rax], al ; ret 0x8a2
0x000002000023a95a : or byte ptr [rax], al ; sysenter
0x0000020000130049 : or byte ptr [rax], al ; test eax, eax ; jns 0x2000013005c ; mov r8d, r10d ; jmp 0x20000130019
0x000002000013160c : or byte ptr [rax], al ; xor al, al ; add rsp, 0x28 ; ret
0x000002000011d72f : or byte ptr [rax], al ; xor al, al ; ret
0x0000020000127ebb : or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000123e53 : or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000134554 : or byte ptr [rax], al ; xor eax, eax ; ret
0x000002000036fa1b : or byte ptr [rax], bl ; add byte ptr [rbx], ch ; ret
0x00000200003efedd : or byte ptr [rax], cl ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000015df37 : or byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000020000137050 : or byte ptr [rax], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000000a2ae : or byte ptr [rax], cl ; pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; salc ; jmp qword ptr [rcx]
0x00000200004ad6be : or byte ptr [rax], cl ; shr al, 3 ; and al, 1 ; ret
0x000002000007f5fb : or byte ptr [rax], dl ; add byte ptr [rsi - 1], ah ; ret 0x3b66
0x00000200004ad6bd : or byte ptr [rax], r9b ; shr al, 3 ; and al, 1 ; ret
0x000002000003376d : or byte ptr [rax], spl ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000427311 : or byte ptr [rbp + 0x1b], dh ; test cl, 0xf8 ; jne 0x20000427322 ; ret
0x00000200000ffd9a : or byte ptr [rbp + 0x2b], cl ; ret
0x00000200000c3694 : or byte ptr [rbp + 0x2b], cl ; ret 0x840f
0x00000200004a5de1 : or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x000002000002999d : or byte ptr [rbp + 0x33], al ; dec dword ptr [rdx - 0x75] ; push rsp ; ret
0x00000200004b0478 : or byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x000002000050ba33 : or byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x0000020000605031 : or byte ptr [rbp + 0x39], al ; sbb dword ptr [rdi - 0x4e], esi ; ret
0x00000200004a6545 : or byte ptr [rbp + 0x3b], al ; imul edx, dword ptr [rax], 0xff411274 ; ret
0x0000020000494105 : or byte ptr [rbp + 0x3b], al ; push rcx ; adc byte ptr [rbx + rbp - 1], dh ; ret 0x8349
0x00000200006068ac : or byte ptr [rbp + 0x3b], al ; ret
0x000002000048595a : or byte ptr [rbp + 0x3b], al ; ret 0xcc72
0x00000200001f8ad8 : or byte ptr [rbp + 0x3b], cl ; out 0x76, al ; ret
0x00000200001874c5 : or byte ptr [rbp + 0x3b], cl ; ret
0x000002000020bba7 : or byte ptr [rbp + 0x3b], cl ; ret 0x6073
0x000002000007ecd3 : or byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x00000200003ac8ee : or byte ptr [rbp + 0x492f74c0], al ; add eax, edx ; jmp 0x200003ac8d0
0x00000200003ac8ed : or byte ptr [rbp + 0x492f74c0], al ; add eax, edx ; jmp 0x200003ac8d1
0x0000020000479917 : or byte ptr [rbp + 0x88d04], cl ; add byte ptr [rax], al ; ret
0x00000200004fb15f : or byte ptr [rbp + 0xf], dh ; xor al, al ; ret
0x000002000009b53b : or byte ptr [rbp + 1], dh ; ret
0x00000200006d805e : or byte ptr [rbp + 3], al ; ret
0x00000200006d7bc1 : or byte ptr [rbp + 3], al ; ret 0xf275
0x0000020000181f94 : or byte ptr [rbp + 3], cl ; ror byte ptr [rcx - 0x7d], cl ; ret
0x0000020000082fe3 : or byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200000f4887 : or byte ptr [rbp + 3], dh ; mov eax, ecx ; ret
0x00000200003cef5f : or byte ptr [rbp + 4], dh ; and qword ptr [r9], 0 ; ret
0x0000020000217f8f : or byte ptr [rbp + 5], dh ; mov eax, r10d ; jmp 0x20000217fa3
0x000002000008c745 : or byte ptr [rbp + 6], dh ; mov al, 1 ; ret
0x00000200001cba87 : or byte ptr [rbp + 6], dh ; mov eax, 0xc0000022 ; ret
0x0000020000602efd : or byte ptr [rbp + rbx*8 - 1], dh ; ret 0x8348
0x0000020000079a09 : or byte ptr [rbp + rcx*4 + 0x14], cl ; ret 0x8b48
0x00000200003ffe80 : or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x00000200004f46d2 : or byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x160
0x00000200000f7c8d : or byte ptr [rbp - 0x16], dh ; ret
0x000002000010640d : or byte ptr [rbp - 0x19], dh ; mov byte ptr [rip + 0x1d16b0], dl ; ret
0x000002000022fd26 : or byte ptr [rbp - 0x1b], dh ; mov al, 1 ; ret
0x00000200000824af : or byte ptr [rbp - 0x1d], dh ; ret
0x00000200000bc0fa : or byte ptr [rbp - 0x26], dh ; mov dl, 1 ; mov al, dl ; ret
0x00000200001f44c1 : or byte ptr [rbp - 0x2c], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005c8656 : or byte ptr [rbp - 0x3e6bf02e], al ; mov eax, ecx ; ret
0x0000020000488d71 : or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x00000200003e81d9 : or byte ptr [rbp - 0x743b8b25], al ; ret
0x00000200001bd1b8 : or byte ptr [rbp - 0x74b70792], cl ; ret 0x1f89
0x00000200001d6e07 : or byte ptr [rbp - 0x74befff1], dl ; ret 0x8b48
0x00000200004e0d8a : or byte ptr [rbp - 0x75], al ; outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x00000200006e97f8 : or byte ptr [rbp - 0x75], al ; ret 0xb9
0x000002000010c751 : or byte ptr [rbp - 0x75], al ; ret 0xc149
0x00000200001a7a25 : or byte ptr [rbp - 0x75], al ; ret 0xd241
0x00000200001f1bef : or byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000010c6be : or byte ptr [rbp - 0x75], cl ; pop rsi ; or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001a5b57 : or byte ptr [rbp - 0x75], cl ; ret
0x00000200003eaeb9 : or byte ptr [rbp - 0x75], cl ; ret 0x8966
0x00000200001a7a24 : or byte ptr [rbp - 0x75], r8b ; ret 0xd241
0x00000200003eaeb8 : or byte ptr [rbp - 0x75], r9b ; ret 0x8966
0x00000200005d1a30 : or byte ptr [rbp - 0x76], al ; ret
0x00000200006dbf7c : or byte ptr [rbp - 0x77], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006d9617 : or byte ptr [rbp - 0x77], al ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200006cc524 : or byte ptr [rbp - 0x77], al ; push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006c80b4 : or byte ptr [rbp - 0x77], al ; push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200000b74ae : or byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc28b
0x000002000016933f : or byte ptr [rbp - 0x7b], cl ; in al, 0xf ; test byte ptr [rdi], ah ; ret 0xffec
0x000002000009fc6e : or byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 4
0x000002000014579a : or byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x49], 0xff ; ret 0xf45
0x000002000001d45e : or byte ptr [rbp - 0x7e], al ; lodsb al, byte ptr [rsi] ; ret
0x00000200004e2a2b : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x850f
0x0000020000649918 : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x000002000067ea21 : or byte ptr [rbx + 0x125eb0d], al ; add byte ptr [rax], dl ; ret
0x00000200005e15d7 : or byte ptr [rbx + 0x3480c53], cl ; ret
0x00000200003d91db : or byte ptr [rbx + 0x4a], 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000512c93 : or byte ptr [rbx + 0x79d1e8ce], cl ; ret 0x48ff
0x000002000059c34c : or byte ptr [rbx + 0xf481345], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000002000065118f : or byte ptr [rbx + 4], dh ; or eax, 0xffffffff ; ret
0x000002000049a04b : or byte ptr [rbx + 5], dh ; add rsp, 0x38 ; ret
0x0000020000033603 : or byte ptr [rbx + 7], dh ; mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000053566e : or byte ptr [rbx + r9*4 - 0x7c], cl ; ret
0x0000020000226457 : or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0xb941
0x000002000071f38a : or byte ptr [rbx + rcx*4 + 0x47], al ; add al, 0x8b ; ret
0x0000020000709771 : or byte ptr [rbx + rcx*4 + 0x58], cl ; and byte ptr [rcx - 0x75], cl ; ret
0x0000020000401d67 : or byte ptr [rbx + rcx*4 + 0x5a], cl ; or byte ptr [rcx + 0x3b], al ; ret 0x4272
0x000002000053566f : or byte ptr [rbx + rcx*4 - 0x7c], cl ; ret
0x00000200005b5c9c : or byte ptr [rbx + rdi - 0x36], al ; jb 0x200005b5c97 ; ret
0x000002000042f55a : or byte ptr [rbx + rdi - 0x36], al ; jne 0x2000042f56b ; mov al, 1 ; ret
0x00000200007195c7 : or byte ptr [rbx + rdi - 0x3f], cl ; jae 0x200007195da ; or eax, 0xffffffff ; ret
0x0000020000643d50 : or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x00000200005fcd38 : or byte ptr [rbx + rsi - 0xa], dh ; ret
0x0000020000571324 : or byte ptr [rbx - 0x13], bh ; push rsi ; ret
0x00000200000e5cdd : or byte ptr [rbx - 0x188bf71f], al ; mov al, 1 ; ret
0x000002000050ffe0 : or byte ptr [rbx - 0x3274b72a], cl ; call 0x200001398b5
0x00000200004dc4ac : or byte ptr [rbx - 0x3b7cb73d], cl ; push rax ; pop rbx ; ret
0x00000200006d2d1f : or byte ptr [rbx - 0x3e], ch ; sbb ch, byte ptr [rbx] ; fadd dword ptr [rcx - 0x75] ; ret 0xc383
0x00000200003ee3b6 : or byte ptr [rbx - 0x72b3e7bd], cl ; add al, 0xc2 ; jmp 0x200003ee390
0x00000200002395ac : or byte ptr [rbx - 0x74b3d7a6], cl ; ret 0x8b4c
0x00000200000f9f2b : or byte ptr [rbx - 0x74be0007], al ; ret 0x950f
0x00000200001c7ada : or byte ptr [rbx - 0x74dfdbb4], cl ; ret 0xc1f6
0x00000200006c78f5 : or byte ptr [rbx - 0x76b7ff83], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000002e9bb : or byte ptr [rbx - 0x7af0fd02], al ; ret 0
0x000002000067e8f0 : or byte ptr [rbx - 0x7bbeb7bf], cl ; ret 0x674
0x000002000067e8ef : or byte ptr [rbx - 0x7bbeb7bf], r9b ; ret 0x674
0x000002000037fc7e : or byte ptr [rbx - 0x7f4b335], 0x8b ; ret
0x00000200000619f3 : or byte ptr [rbx - 0x8b7fc32], al ; ret
0x0000020000499e4c : or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x000002000009e6a8 : or byte ptr [rbx - 0x9bfdbac], cl ; ret
0x00000200003a9b21 : or byte ptr [rbx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e3eb8 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000200000ff54c : or byte ptr [rbx], al ; ret
0x000002000021d4cc : or byte ptr [rbx], al ; ret 0x3075
0x0000020000463fe3 : or byte ptr [rbx], al ; ret 0x840f
0x000002000021f025 : or byte ptr [rbx], al ; ret 0x850f
0x000002000062fa01 : or byte ptr [rbx], bh ; ret
0x000002000004803e : or byte ptr [rbx], bh ; ret 0x6c72
0x000002000041d7d6 : or byte ptr [rbx], bh ; ret 0x820f
0x000002000003171f : or byte ptr [rbx], bh ; ret 0x830f
0x000002000045bdc5 : or byte ptr [rbx], bh ; ret 0x860f
0x00000200005c5aee : or byte ptr [rbx], bh ; ret 0xed72
0x000002000002b9c1 : or byte ptr [rbx], bh ; ret 0xf41
0x0000020000540501 : or byte ptr [rbx], ch ; ret 0x8b44
0x000002000012d101 : or byte ptr [rbx], cl ; ret 0x3345
0x000002000038060b : or byte ptr [rbx], cl ; ret 0xe0c1
0x0000020000141e70 : or byte ptr [rbx], cl ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000200005ddff1 : or byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; jmp 0x20049206b4b
0x000002000038961e : or byte ptr [rbx], dh ; ret
0x000002000022873f : or byte ptr [rbx], dh ; ret 0x25
0x0000020000449457 : or byte ptr [rbx], dh ; ret 0x8941
0x000002000012b07e : or byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200000d0bb8 : or byte ptr [rbx], dh ; ror byte ptr [rax + 0x3b], 0xc2 ; je 0x200000d0bd5 ; ret
0x00000200000f6267 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004c19a5 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x00000200006748b7 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter 0x5ee8, 5 ; ret 0x48ff
0x0000020000059273 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000003346e : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200001d93d0 : or byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 9 ; ret
0x00000200003809b9 : or byte ptr [rbx], dh ; shr al, cl ; call rcx
0x0000020000630055 : or byte ptr [rbx], dh ; shr al, cl ; ret
0x000002000002b9c0 : or byte ptr [rbx], dil ; ret 0xf41
0x0000020000579c10 : or byte ptr [rbx], r8b ; ret 0x850f
0x00000200006f7e9f : or byte ptr [rcx + 0x1c085], cl ; add byte ptr [rbx], bh ; ret
0x0000020000073ade : or byte ptr [rcx + 0x23], cl ; ret
0x000002000005923f : or byte ptr [rcx + 0x23], cl ; ret 0x2b49
0x00000200005b3493 : or byte ptr [rcx + 0x23], cl ; ret 0x8948
0x00000200000ef6e2 : or byte ptr [rcx + 0x2b], al ; ret
0x000002000053297c : or byte ptr [rcx + 0x2b], cl ; ret
0x000002000018e9cc : or byte ptr [rcx + 0x2b], cl ; ret 0xff48
0x0000020000718111 : or byte ptr [rcx + 0x2b], cl ; ret 0xff49
0x00000200006104fb : or byte ptr [rcx + 0x2b], cl ; ror byte ptr [rax - 0x77], 0x41 ; ret
0x00000200000305c4 : or byte ptr [rcx + 0x33], cl ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200001418b0 : or byte ptr [rcx + 0x33], cl ; ret 0x8549
0x000002000055c1b6 : or byte ptr [rcx + 0x39], cl ; or ch, cl ; ret 0xffdb
0x00000200005efba9 : or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x00000200004c2d48 : or byte ptr [rcx + 0x3b], al ; pop rcx ; adc byte ptr [rsp + rdx - 1], dh ; ret 0x8349
0x0000020000401d6b : or byte ptr [rcx + 0x3b], al ; ret 0x4272
0x00000200000c3b9c : or byte ptr [rcx + 0x3b], al ; ret 0x8a41
0x00000200000412a7 : or byte ptr [rcx + 0x3b], al ; ret 0xd75
0x000002000009c0d2 : or byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx - 0x10], 1 ; ret
0x000002000065d0e7 : or byte ptr [rcx + 0x3b], al ; sal dword ptr [rdx - 0x18], 1 ; xor eax, eax ; ret
0x00000200000ced05 : or byte ptr [rcx + 0x3b], cl ; adc byte ptr [rbx + 3], dh ; mov al, 1 ; ret
0x00000200000b85b1 : or byte ptr [rcx + 0x3b], cl ; ret
0x00000200000a23c6 : or byte ptr [rcx + 0x3b], cl ; ret 0xea72
0x0000020000079a4a : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx - 0x42], cl ; ret
0x000002000037ec03 : or byte ptr [rcx + 0x3b], cl ; sal dword ptr [rbx + 3], 1 ; mov eax, ecx ; ret
0x00000200004fa05b : or byte ptr [rcx + 0x43890c43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200000d7d07 : or byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000001e918 : or byte ptr [rcx + 0x66eb], bh ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000043d345 : or byte ptr [rcx + 0x9c83], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006fa53d : or byte ptr [rcx + 0xb], cl ; ret 0x8948
0x0000020000611a4c : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; add eax, 0x20 ; ret
0x00000200006113ab : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x00000200000959e2 : or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xe380
0x00000200001ac69e : or byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c1 ; ret 0x3b48
0x00000200003f9044 : or byte ptr [rcx + 3], al ; ret 0x4589
0x00000200006d6773 : or byte ptr [rcx + 3], cl ; ret 0x341
0x00000200000bed08 : or byte ptr [rcx + 3], cl ; ret 0x8348
0x00000200000bec71 : or byte ptr [rcx + 3], cl ; ret 0x8948
0x00000200006d63e5 : or byte ptr [rcx + 3], cl ; ret 0xc9ff
0x00000200006cb846 : or byte ptr [rcx + 3], cl ; ret 0xff41
0x0000020000149c93 : or byte ptr [rcx + 3], cl ; ret 0xff49
0x00000200000b8c29 : or byte ptr [rcx + 9], 4 ; ret
0x00000200004c5d03 : or byte ptr [rcx + r8*4], r8b ; ret
0x00000200003ecd17 : or byte ptr [rcx + r9*4 + 0x44], cl ; ret 0xff10
0x00000200004c5d04 : or byte ptr [rcx + rax*4], al ; ret
0x00000200000aa87b : or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x00000200003ecd18 : or byte ptr [rcx + rcx*4 + 0x44], cl ; ret 0xff10
0x000002000062c9ac : or byte ptr [rcx + rcx*4 + 0x4d], al ; ret
0x00000200000cd336 : or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200000b84f6 : or byte ptr [rcx + rcx*4 + 0x5c], cl ; rcl dword ptr [rax], 1 ; ret
0x0000020000081b33 : or byte ptr [rcx + rcx*4 + 0x5d], cl ; sbb byte ptr [rcx - 0xa], al ; ret
0x00000200006e3170 : or byte ptr [rcx + rcx*4 + 0x63], al ; adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000053ea0e : or byte ptr [rcx + rcx*4 + 0x6d], cl ; and byte ptr [rcx + 3], al ; ret
0x000002000009d2de : or byte ptr [rcx + rcx*4 + 1], al ; test rdx, rdx ; jne 0x2000009d2f1 ; ret
0x00000200001323c1 : or byte ptr [rcx + rcx*4 + 9], cl ; mov rax, r10 ; ret
0x00000200000ce5c6 : or byte ptr [rcx + rcx*4 - 0x73], cl ; cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003daebd : or byte ptr [rcx - 0x2d], al ; leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003db509 : or byte ptr [rcx - 0x2d], al ; leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003dad65 : or byte ptr [rcx - 0x2d], al ; leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000410645 : or byte ptr [rcx - 0x4a], al ; add ecx, ebp ; ret 0xfffd
0x000002000002abeb : or byte ptr [rcx - 0x73], al ; add r14, r14 ; ret
0x00000200006e5041 : or byte ptr [rcx - 0x74b6ef8d], cl ; ret 0x180f
0x000002000002e1e7 : or byte ptr [rcx - 0x75], al ; add cl, byte ptr [rbx] ; ret 0xb44
0x00000200006d0182 : or byte ptr [rcx - 0x75], al ; hlt ; mov rax, rdx ; jmp 0x200006d0196
0x00000200000827b2 : or byte ptr [rcx - 0x75], al ; ret
0x00000200002963f7 : or byte ptr [rcx - 0x75], al ; ret 0x10ba
0x000002000070d020 : or byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000012dee6 : or byte ptr [rcx - 0x75], al ; ret 0x44c3
0x00000200005ee0b3 : or byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000022ad6f : or byte ptr [rcx - 0x75], al ; ret 0x48c3
0x00000200004c2d5e : or byte ptr [rcx - 0x75], al ; ret 0x49c3
0x0000020000623745 : or byte ptr [rcx - 0x75], al ; ret 0x8d4c
0x00000200006d2d07 : or byte ptr [rcx - 0x75], al ; ret 0xc183
0x00000200004a3812 : or byte ptr [rcx - 0x75], al ; ret 0xf44
0x00000200001e6df0 : or byte ptr [rcx - 0x75], al ; ret 0xff48
0x0000020000033649 : or byte ptr [rcx - 0x75], al ; rol byte ptr [rcx + rcx*4 + 0xc], 0x81 ; ret
0x00000200005bcdfb : or byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x75], 1 ; ret
0x0000020000205a2a : or byte ptr [rcx - 0x75], cl ; adc byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x00000200000f7c79 : or byte ptr [rcx - 0x75], cl ; adc dh, dh ; ret 0x7501
0x0000020000099dc2 : or byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x00000200000c0731 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x0000020000123f2d : or byte ptr [rcx - 0x75], cl ; clc ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000410163 : or byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000031497
0x00000200006d713e : or byte ptr [rcx - 0x75], cl ; iretd ; call r9
0x0000020000614f5a : or byte ptr [rcx - 0x75], cl ; iretd ; mov r8d, r14d ; call 0x20000141179
0x00000200005c23d2 : or byte ptr [rcx - 0x75], cl ; push rsi ; ret 0x7402
0x00000200001359a3 : or byte ptr [rcx - 0x75], cl ; ret
0x000002000020ee54 : or byte ptr [rcx - 0x75], cl ; ret 0x148
0x0000020000136c37 : or byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200006f6baf : or byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000036b886 : or byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x000002000040eda4 : or byte ptr [rcx - 0x75], cl ; ret 0x8d4f
0x000002000010c6c2 : or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000653816 : or byte ptr [rcx - 0x75], cl ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200006716a0 : or byte ptr [rcx - 0x75], cl ; xlatb ; call rax
0x000002000067169f : or byte ptr [rcx - 0x75], r9b ; xlatb ; call rax
0x000002000066dc3b : or byte ptr [rcx - 0x76], al ; ret
0x000002000014aef3 : or byte ptr [rcx - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200004c92b6 : or byte ptr [rcx - 0x77], al ; add dword ptr [rax + 1], edi ; ret
0x00000200003b3cc2 : or byte ptr [rcx - 0x77], al ; add eax, dword ptr [rcx - 0x75] ; ret 0x2b41
0x000002000022e99f : or byte ptr [rcx - 0x77], al ; or al, 0x41 ; mov eax, ecx ; ret
0x00000200006ce60f : or byte ptr [rcx - 0x77], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200006cd9f8 : or byte ptr [rcx - 0x77], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x00000200006ccfdd : or byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000fcd45 : or byte ptr [rcx - 0x78], al ; or ecx, 0 ; add byte ptr [rax], al ; ret
0x00000200003cef77 : or byte ptr [rcx - 0x7b], al ; ret 0xa75
0x00000200006fa11c : or byte ptr [rcx - 0x7b], al ; sal byte ptr [rbp - 0x3d], 1 ; xor eax, eax ; ret
0x0000020000229623 : or byte ptr [rcx - 0x7c], al ; ret
0x00000200006d781c : or byte ptr [rcx - 0x7c], al ; ret 0xe75
0x000002000017865e : or byte ptr [rcx - 0x7d], al ; enter 0x4803, -9 ; ret 0xfff
0x00000200000b8877 : or byte ptr [rcx - 0x7d], al ; ret 0x42e0
0x00000200006e9867 : or byte ptr [rcx - 0x7d], al ; ret 0x4df8
0x0000020000472b8a : or byte ptr [rcx - 0x7d], al ; stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x0000020000488159 : or byte ptr [rcx - 0x7d], cl ; lock add byte ptr gs:[rax - 0x75], cl ; ret
0x00000200000ea5e0 : or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x0000020000118511 : or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000497b75 : or byte ptr [rcx - 0x7d], cl ; ret 0x4410
0x0000020000712c42 : or byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x000002000014923a : or byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x00000200004f51ef : or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x0000020000623719 : or byte ptr [rcx - 0x7d], cl ; ret 0x491f
0x000002000020c90a : or byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200003fdc4c : or byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x0000020000215570 : or byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000200000366ec : or byte ptr [rcx - 0xa], dh ; ret 0x7504
0x00000200003efea1 : or byte ptr [rcx - 0xf32984], cl ; ret
0x00000200001d1278 : or byte ptr [rcx - 1], al ; ret
0x00000200001327a6 : or byte ptr [rcx - 1], al ; ret 0x3b44
0x0000020000223b7e : or byte ptr [rcx - 1], al ; ret 0x5e9
0x00000200004df2bc : or byte ptr [rcx - 1], al ; ret 0x8149
0x0000020000223d54 : or byte ptr [rcx - 1], al ; ret 0xdbe9
0x00000200000c3955 : or byte ptr [rcx - 1], cl ; leave ; jne 0x200000c394c ; ret
0x000002000014030c : or byte ptr [rcx - 1], cl ; ret 0x2c6
0x0000020000186e5a : or byte ptr [rcx - 1], cl ; ret 0x3b4d
0x0000020000186e73 : or byte ptr [rcx - 1], cl ; ret 0xe5eb
0x00000200000b411f : or byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200000b298c : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x2348
0x00000200000f66ca : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x0000020000052554 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000036fb4 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200000a5836 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000017dd22 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000a5c3a : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200003d4507 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200003d6f70 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000017442c : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x33], cl ; sub ecx, dword ptr [rax + 3] ; ret 0xbe49
0x0000020000113ba4 : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008da68 : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f6f89 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000ad571 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200006f717c : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a5e27 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x0000020000056b93 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret
0x000002000007d302 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x0000020000039b15 : or byte ptr [rcx], 0 ; add byte ptr [rcx - 0x39], cl ; ret
0x00000200000890c3 : or byte ptr [rcx], 0 ; add dh, dh ; ret 0xf04
0x00000200001a88bb : or byte ptr [rcx], ah ; jmp qword ptr [r9]
0x00000200005205b6 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; add dh, dl ; ret
0x0000020000055bb2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x00000200001224b1 : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000022abdc : or byte ptr [rcx], al ; cld ; cmp rcx, r8 ; jb 0x2000022abd9 ; ret
0x000002000007017d : or byte ptr [rcx], al ; mov qword ptr [rbx], r15 ; jmp 0x2000007014c
0x00000200005d5f9c : or byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004babf1 : or byte ptr [rdi + r9 - 0x55], r8b ; adc byte ptr [rax - 1], cl ; ret 0xc2eb
0x00000200001ecaee : or byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000f9824 : or byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200001d94f6 : or byte ptr [rdi + rcx + 0x45], cl ; ret 0x8d45
0x0000020000499f72 : or byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200005d0818 : or byte ptr [rdi + rcx - 0x49], al ; ret 0x8a43
0x00000200004babf2 : or byte ptr [rdi + rcx - 0x55], al ; adc byte ptr [rax - 1], cl ; ret 0xc2eb
0x000002000013c318 : or byte ptr [rdi + rcx - 0x5d], cl ; ret 0xf41
0x00000200000e5ce0 : or byte ptr [rdi - 0x50], dh ; add ebx, eax ; xor al, al ; ret
0x00000200000437b6 : or byte ptr [rdi], 0x85 ; ret
0x000002000067b7e1 : or byte ptr [rdi], 0x95 ; ret 0xc141
0x00000200000bdb62 : or byte ptr [rdi], bh ; or eax, 0x23c38b00 ; ret 0xbd41
0x000002000071f31c : or byte ptr [rdi], bl ; ret
0x00000200006756fd : or byte ptr [rdi], cl ; adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000053e1c6 : or byte ptr [rdi], cl ; mov bh, 0x48 ; add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x00000200001b29ef : or byte ptr [rdi], cl ; mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x00000200005dd515 : or byte ptr [rdi], cl ; mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000014234f : or byte ptr [rdi], cl ; mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000616b96 : or byte ptr [rdi], cl ; mov bh, 0xc1 ; add eax, r10d ; jmp 0x20000616ba8
0x0000020000103733 : or byte ptr [rdi], cl ; mov bl, 0x10 ; ret
0x0000020000575508 : or byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, ecx ; call 0x1ff84198821
0x00000200000fd316 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x00000200000f4420 : or byte ptr [rdi], cl ; test byte ptr [rdi - 0x43], dh ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200006c73e0 : or byte ptr [rdi], cl ; test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000026682 : or byte ptr [rdi], cl ; test dword ptr [rbx - 0x7cffec1b], esi ; jmp qword ptr [rax]
0x000002000020efa1 : or byte ptr [rdi], cl ; test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003d7db7 : or byte ptr [rdi], cl ; test dword ptr [rcx + rax], esp ; add dh, dh ; ret
0x00000200000a56bd : or byte ptr [rdi], cl ; test dword ptr [rcx - 0x9fffff8], esp ; ret
0x00000200000564ea : or byte ptr [rdi], cl ; test dword ptr [rdi], eax ; or byte ptr [rax], al ; add dh, dh ; ret
0x0000020000476778 : or byte ptr [rdi], cl ; test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; inc edx ; jmp 0x2000047676d
0x000002000039f95c : or byte ptr [rdi], cl ; test dword ptr [rdx], esi ; ret 0x19
0x00000200004af95d : or byte ptr [rdi], cl ; test esi, edi ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000010b0f2 : or byte ptr [rdi], cl ; test esp, ebp ; ret
0x000002000020efcd : or byte ptr [rdi], cl ; test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200004accc5 : or byte ptr [rdi], cl ; xchg cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200004d3431 : or byte ptr [rdi], cl ; xchg dh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200002316e1 : or byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000020000231703 : or byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000200002316f2 : or byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000231714 : or byte ptr [rdi], cl ; xchg eax, esi ; ret
0x00000200000c8838 : or byte ptr [rdi], dl ; add byte ptr [rax - 0x75], cl ; ret 0x8148
0x000002000005588d : or byte ptr [rdi], dl ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000039c7c : or byte ptr [rdi], dl ; add byte ptr [rax - 1], cl ; ret
0x0000020000033910 : or byte ptr [rdx + 0x38], al ; add qword ptr [r13 + 0xb], rsi ; ret
0x00000200000209f1 : or byte ptr [rdx + 0x54], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001ab532 : or byte ptr [rdx + 0xf], al ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x000002000010fdcb : or byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x0000020000629b89 : or byte ptr [rdx + rax + 4], al ; or bh, bh ; ret 0xefeb
0x00000200000a347e : or byte ptr [rdx + rbp + 0x41], dh ; mov eax, eax ; ret
0x00000200005a7e62 : or byte ptr [rdx + rcx - 0x48], dh ; or eax, 0xe9c00000 ; call rsp
0x00000200004e64ea : or byte ptr [rdx + rdx*8 - 0x41f0f18c], al ; ret 0x3b44
0x000002000041f726 : or byte ptr [rdx - 0x75], al ; rcl dword ptr [rax], 1 ; mov dword ptr [r9], eax ; ret
0x00000200005ce847 : or byte ptr [rdx - 0x77], cl ; ret 0x4808
0x0000020000037150 : or byte ptr [rdx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200003efd55 : or byte ptr [rdx], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003e91dd : or byte ptr [rdx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000013d2cc : or byte ptr [rdx], al ; add dh, dh ; ret
0x000002000003c903 : or byte ptr [rdx], bh ; xchg eax, ecx ; ret
0x000002000043e8a4 : or byte ptr [rdx], bl ; ret
0x000002000072c92e : or byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000265a41 : or byte ptr [rdx], cl ; ret
0x000002000040ed94 : or byte ptr [rdx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200003ffa54 : or byte ptr [rdx], dl ; ret
0x000002000000afc9 : or byte ptr [rip + 0x3820125c], ah ; call qword ptr [rdx]
0x000002000000afb5 : or byte ptr [rip + 0xe20125c], ah ; call qword ptr [rdx]
0x000002000010ee23 : or byte ptr [rip + 0xf440035], 0x20 ; ret
0x000002000040cb0f : or byte ptr [rip - 0x3074b700], dl ; call 0x20000031499
0x000002000000b055 : or byte ptr [rip - 0x43dfeda4], ah ; call qword ptr [rdx]
0x00000200002167f9 : or byte ptr [rip - 0x74bf0000], al ; ret
0x0000020000138183 : or byte ptr [rsi + 0x44], ah ; cmp eax, dword ptr [rdx] ; jb 0x20000138179 ; ret
0x000002000053d3ab : or byte ptr [rsi + 0x44], ah ; mov dword ptr [rax + 2], eax ; call 0x2000015d889
0x0000020000507062 : or byte ptr [rsi + 0x44], ah ; mov dword ptr [rdx], ecx ; mov al, r11b ; jmp 0x20000507038
0x0000020000022520 : or byte ptr [rsi + 0x92d], bh ; add byte ptr [rax], al ; ret
0x0000020000157b00 : or byte ptr [rsi + 3], ah ; ret
0x00000200004f111a : or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000666f14 : or byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 8], rax ; ret
0x000002000044ce32 : or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x00000200001f354a : or byte ptr [rsi - 0x54], bh ; mov eax, 1 ; ret
0x00000200001392aa : or byte ptr [rsi - 0x77], ah ; push rbp ; add bh, bh ; ret 0x8341
0x0000020000206640 : or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x00000200002438bc : or byte ptr [rsi], al ; ret 0x1306
0x0000020000239d2e : or byte ptr [rsi], al ; sysenter
0x0000020000159f2c : or byte ptr [rsp], 0 ; ret
0x000002000023a959 : or byte ptr fs:[rax], al ; sysenter
0x00000200007227fe : or ch, al ; ret 0x74ff
0x000002000043a904 : or ch, bh ; ret 0xe9ff
0x00000200003b108d : or ch, bl ; ret
0x00000200001e619a : or ch, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x0000020000666112 : or ch, ch ; ret 0xebff
0x0000020000238bf8 : or ch, ch ; sub byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000056a42a : or ch, cl ; lahf ; in al, dx ; push rsi ; ret 0xf20
0x00000200000678a8 : or ch, cl ; mov ecx, 0x38fffffb ; lahf ; ret
0x000002000055c1b9 : or ch, cl ; ret 0xffdb
0x000002000019ebf3 : or ch, dh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000231ee5 : or cl, 0xc0 ; mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x0000020000281860 : or cl, al ; push rcx ; add byte ptr [rcx], dl ; ret 0x51
0x0000020000196950 : or cl, bpl ; fstp xword ptr [rbp - 0xd] ; push rsi ; ret 0xf03
0x0000020000195ecc : or cl, bpl ; sbb dword ptr [rbp - 0xd], ebp ; push rsi ; ret 0x7503
0x00000200001bc7b7 : or cl, byte ptr [r13 + 0x3c8dc00c] ; int 0x80
0x0000020000678667 : or cl, byte ptr [r8 - 0x75] ; ret
0x000002000012dbcb : or cl, byte ptr [rax + 0x3b] ; ret 0x1c74
0x00000200001a14fe : or cl, byte ptr [rax + 0x3b] ; ret 0x577
0x00000200003b5fb5 : or cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x00000200001c436c : or cl, byte ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000531a0e : or cl, byte ptr [rax - 0x75] ; add eax, 0x12342a ; call rax
0x000002000051fd7e : or cl, byte ptr [rax - 0x75] ; and al, 0x40 ; call 0x2000014dc09
0x00000200007225fc : or cl, byte ptr [rax - 0x75] ; enter -0x76b8, 5 ; in al, dx ; ret 0x48ff
0x00000200005fe1a6 : or cl, byte ptr [rax - 0x75] ; pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200005088d6 : or cl, byte ptr [rax - 0x75] ; ret
0x00000200006c8793 : or cl, byte ptr [rax - 0x75] ; ret 0x3b48
0x00000200000761fa : or cl, byte ptr [rax - 0x75] ; ret 0x61eb
0x0000020000490133 : or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200006f1ddb : or cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000043b447 : or cl, byte ptr [rax - 0x75] ; retf ; call 0x2000006a617
0x00000200006e0844 : or cl, byte ptr [rax - 0x75] ; retf ; call rdx
0x00000200001be411 : or cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200003bacaa : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x00000200000366dd : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0x200000366f0 ; mov rax, r9 ; ret
0x000002000020c939 : or cl, byte ptr [rax - 0x7d] ; ret
0x00000200004ad4ed : or cl, byte ptr [rax - 0x7d] ; ret 0x320
0x00000200001bcabc : or cl, byte ptr [rax - 0x7d] ; ret 0x3848
0x00000200001181ca : or cl, byte ptr [rax - 0x7d] ; ret 0x4404
0x0000020000118200 : or cl, byte ptr [rax - 0x7d] ; ret 0x4408
0x0000020000118195 : or cl, byte ptr [rax - 0x7d] ; ret 0x4508
0x0000020000653d91 : or cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000002000071583d : or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000673fff : or cl, byte ptr [rax - 0x7d] ; ret 0x4828
0x00000200006120bd : or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x0000020000238d2d : or cl, byte ptr [rax - 0x7d] ; ret 0x8102
0x0000020000712ff4 : or cl, byte ptr [rax - 0x7f] ; ret 0x2c0
0x0000020000149a5a : or cl, byte ptr [rax - 1] ; ret 0x3eb
0x00000200001405dd : or cl, byte ptr [rax - 1] ; ret 0x418d
0x00000200005163e2 : or cl, byte ptr [rax - 1] ; ret 0x8445
0x00000200006122dc : or cl, byte ptr [rax - 1] ; ret 0x8844
0x0000020000141773 : or cl, byte ptr [rax - 1] ; ret 0xc2f6
0x00000200005b241d : or cl, byte ptr [rax - 1] ; ret 0xc9e9
0x00000200005b2432 : or cl, byte ptr [rax - 1] ; ret 0xf1e9
0x00000200001bc7b8 : or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x00000200006df050 : or cl, byte ptr [rbp - 0x36ccc8ec] ; call rbx
0x00000200001cc8b2 : or cl, byte ptr [rbp - 0x74b7fff0] ; add al, 0xc1 ; ret
0x00000200001403bb : or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x000002000021556d : or cl, byte ptr [rbp - 0x77] ; or byte ptr [rcx - 0xa], al ; ret 0x7501
0x000002000062cdf1 : or cl, byte ptr [rbx + 0x4899704] ; xchg eax, esi ; inc edx ; jmp 0x2000062cdf1
0x00000200000e1850 : or cl, byte ptr [rbx + rcx*4 - 0x38] ; jne 0x200000e185d ; ret
0x000002000068080d : or cl, byte ptr [rbx + rcx*4 - 0x40] ; add rsp, 0x38 ; jmp r9
0x00000200000954b9 : or cl, byte ptr [rbx - 0x1f7cefbf] ; add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x00000200006674ba : or cl, byte ptr [rbx - 0x3074b72b] ; call 0x20000294e29
0x00000200006d863c : or cl, byte ptr [rbx - 0x3174b72d] ; call r12
0x00000200006df035 : or cl, byte ptr [rbx - 0x3474b72a] ; call r12
0x00000200001ee1be : or cl, byte ptr [rbx - 0x4b74b23e] ; ret 0x550
0x0000020000655133 : or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x000002000066a09b : or cl, byte ptr [rbx] ; ret 0x1be
0x00000200000a28b3 : or cl, byte ptr [rcx + 0x23] ; ret
0x00000200000ec194 : or cl, byte ptr [rcx + 0x23] ; ret 0x3148
0x0000020000134137 : or cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013412a : or cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200006cf04e : or cl, byte ptr [rcx - 0x3f] ; leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200006c65d8 : or cl, byte ptr [rcx - 0x75] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x000002000020a035 : or cl, byte ptr [rcx - 0x7d] ; add byte ptr [rdx], al ; ret
0x0000020000619162 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000144ed8 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x0000020000174e2b : or cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x0000020000142d17 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000619257 : or cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x00000200001457e1 : or cl, byte ptr [rcx - 1] ; ret 0x3841
0x0000020000586576 : or cl, byte ptr [rcx - 1] ; ret 0x8b4c
0x000002000014063b : or cl, byte ptr [rcx - 1] ; ret 0x8d41
0x0000020000590a19 : or cl, byte ptr [rcx - 1] ; ret 0xc883
0x0000020000612ac1 : or cl, byte ptr [rcx - 1] ; ret 0xc983
0x00000200004426b2 : or cl, byte ptr [rcx - 1] ; ret 0xe981
0x0000020000499caa : or cl, byte ptr [rdi] ; add dh, dh ; ret 0x7510
0x000002000005ab17 : or cl, byte ptr [rdi] ; add dword ptr [rcx - 0x79], 0x11 ; add byte ptr [rax - 0x75], cl ; ret 0xb841
0x00000200007178fc : or cl, byte ptr [rdi] ; mov dh, 0x47 ; cmp eax, 0x98f50589 ; ret
0x000002000006179d : or cl, byte ptr [rdi] ; or dword ptr [rbp + 0x48fffff8], 0xffffff8b ; ret
0x000002000019fcc6 : or cl, byte ptr [rdi] ; sbb dword ptr [rbp + 0x48fff535], -0x75 ; ret
0x000002000008eb6e : or cl, byte ptr [rdi] ; test dword ptr [rbp + 0x57], edx ; str word ptr [rcx - 0x7d] ; ret 0x4d04
0x00000200000f342c : or cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000054fe3 : or cl, byte ptr [rdx + 0x2fc0210d] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000174eec : or cl, ch ; and bh, byte ptr [rcx - 0x9be0012] ; ret
0x0000020000196951 : or cl, ch ; fstp xword ptr [rbp - 0xd] ; push rsi ; ret 0xf03
0x0000020000197397 : or cl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, esp ; push rsi ; ret 0xf03
0x0000020000158bec : or cl, ch ; ret
0x00000200005563a2 : or cl, ch ; ret 0xea07
0x000002000055a607 : or cl, ch ; ret 0xfffe
0x0000020000195ecd : or cl, ch ; sbb dword ptr [rbp - 0xd], ebp ; push rsi ; ret 0x7503
0x00000200001f42c9 : or cl, ch ; wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000036b628 : or cl, dl ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x00000200004ac83a : or cl, dl ; mov ecx, 0xc48348ff ; ret
0x000002000048e2e9 : or dh, bh ; dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x3b], r9b ; ret
0x000002000007289f : or dh, bh ; ret 0x700
0x0000020000721d7e : or dh, bh ; ret 0x75ff
0x00000200000fb66b : or dh, byte ptr [rbp + 1] ; ret
0x00000200000915ab : or dh, byte ptr [rbp + 4] ; ret
0x0000020000157d7a : or dh, byte ptr [rbp - 0x18] ; mov rax, r8 ; pop rbx ; ret
0x0000020000157d36 : or dh, byte ptr [rbp - 0x20] ; mov rax, r8 ; pop rbx ; ret
0x00000200000e43fa : or dh, byte ptr [rbp - 0x74b70004] ; ret
0x0000020000157dab : or dh, byte ptr [rbp - 0xf] ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x00000200000f3b00 : or dh, byte ptr [rbx + 6] ; mov eax, 1 ; ret
0x0000020000088ff6 : or dh, byte ptr [rbx + 6] ; or byte ptr [r8 + 0x1a], 0x10 ; ret
0x0000020000674c4b : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter -0x3518, 1 ; ret 0x48ff
0x0000020000668b4c : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e28
0x0000020000668b04 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e29
0x00000200005ef103 : or dh, byte ptr [rip - 0x3cfe5000] ; xor al, al ; ret
0x00000200001b6543 : or dh, dh ; fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x00000200001a5e92 : or dh, dh ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000004fac6 : or dh, dh ; ret
0x00000200003fb4ff : or dh, dh ; ret 0x7401
0x00000200005c2579 : or dh, dh ; ret 0x7402
0x0000020000633283 : or dh, dh ; ret 0x7403
0x00000200004a989b : or dh, dh ; ret 0x7504
0x00000200003fc858 : or dh, dh ; ret 0xf02
0x000002000003542d : or dh, dh ; ret 0xf03
0x00000200000d0a1b : or dh, dh ; rol dword ptr [rcx], 0x75 ; out -0x75, eax ; ret
0x000002000022aa6a : or dil, dil ; ret
0x0000020000653574 : or dil, r15b ; ret 0x341
0x00000200003bec05 : or dl, 0xff ; add rsp, 0x28 ; ret
0x00000200007098b3 : or dl, bh ; push rsi ; ret
0x000002000000d33d : or dl, byte ptr [rax] ; mov ecx, 0x79682177 ; ret
0x0000020000022d6f : or dl, byte ptr [rcx + 0x21] ; ret
0x000002000027cb5c : or dl, byte ptr [rdx + 0x227006] ; add byte ptr [rax], al ; pop rsp ; ret 0x70
0x0000020000033040 : or dl, byte ptr [rsi + 0x13] ; add dh, dh ; ret
0x0000020000208982 : or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000208a37 : or dword ptr [r10], eax ; ret
0x00000200000e9b76 : or dword ptr [r15], ecx ; mov bh, 0x84 ; xchg eax, edi ; ret 0x56
0x0000020000127292 : or dword ptr [r8 - 0x17dfdbbc], 0x27 ; ret 0xfff7
0x000002000008fe85 : or dword ptr [r8], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x000002000014707a : or dword ptr [r8], 0xffffffff ; ret
0x0000020000116b39 : or dword ptr [r8], r8d ; ret
0x0000020000210397 : or dword ptr [r9 - 0x2c], eax ; dec rcx ; jne 0x20000210390 ; ret
0x00000200000798bb : or dword ptr [rax + 0x23], ecx ; ret
0x000002000006238c : or dword ptr [rax + 0x23], ecx ; ret 0x2b48
0x0000020000077850 : or dword ptr [rax + 0x23], ecx ; ret 0x2b49
0x00000200000599e7 : or dword ptr [rax + 0x23], ecx ; ret 0x8b48
0x00000200006f9849 : or dword ptr [rax + 0x23], ecx ; ret 0x8b4a
0x0000020000036faa : or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200005389d1 : or dword ptr [rax + 0x29e990ff], edi ; ret
0x00000200005fe10b : or dword ptr [rax + 0x2b], ecx ; fmul dword ptr [rax - 0x7d] ; ret
0x00000200000e0f2e : or dword ptr [rax + 0x2b], ecx ; ret 0x2548
0x0000020000141896 : or dword ptr [rax + 0x3b], ecx ; ret 0xbf75
0x000002000013fe1f : or dword ptr [rax + 0x3b], ecx ; ret 0xc575
0x000002000062c034 : or dword ptr [rax + 0x48000005], 0xffffff81 ; ret
0x000002000007b1eb : or dword ptr [rax + 0xb], ecx ; ret
0x000002000043d689 : or dword ptr [rax + 1], 0x4a80000 ; jne 0x2000043d69c ; ret
0x0000020000109506 : or dword ptr [rax + 3], 0 ; add byte ptr [rdi], cl ; ret 0xbb83
0x000002000020c6e3 : or dword ptr [rax + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c12f3 : or dword ptr [rax + 4], 2 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000128cb3 : or dword ptr [rax + 5], 0 ; add al, ch ; ret
0x000002000008e7b7 : or dword ptr [rax + rcx*2], eax ; add esp, 0x20 ; pop rdi ; ret
0x000002000013e16f : or dword ptr [rax + rcx*8 + 8], edx ; ret
0x0000020000127293 : or dword ptr [rax - 0x17dfdbbc], 0x27 ; ret 0xfff7
0x00000200001b193e : or dword ptr [rax - 0x39], ecx ; ret
0x000002000008cc44 : or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000010647f : or dword ptr [rax - 0x3d74f58c], eax ; ret
0x00000200001137c3 : or dword ptr [rax - 0x3f], ecx ; call 0x1ffc34c7ff2
0x0000020000056b0a : or dword ptr [rax - 0x3f], ecx ; jmp 0x20049c86a21
0x00000200006fa0b7 : or dword ptr [rax - 0x3f], ecx ; loopne 0x200006fa0de ; sar rax, 0x10 ; ret
0x000002000068cf97 : or dword ptr [rax - 0x73], ecx ; add al, 0x48 ; add esp, 0x38 ; ret
0x000002000060dfc4 : or dword ptr [rax - 0x73], ecx ; cmp al, r13b ; ret 0xa234
0x000002000056f507 : or dword ptr [rax - 0x73], ecx ; loopne 0x2000056f4fb ; ret
0x0000020000676152 : or dword ptr [rax - 0x73], ecx ; or byte ptr [r8 + 0x3b], cl ; ret
0x000002000005923b : or dword ptr [rax - 0x73], ecx ; or byte ptr [r9 + 0x23], cl ; ret 0x2b49
0x0000020000073ada : or dword ptr [rax - 0x73], ecx ; push rdx ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000676271 : or dword ptr [rax - 0x73], ecx ; sbb byte ptr [r8 + 0x3b], cl ; ret
0x0000020000465351 : or dword ptr [rax - 0x75], ecx ; adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x000002000061ccb5 : or dword ptr [rax - 0x75], ecx ; and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x0000020000389250 : or dword ptr [rax - 0x75], ecx ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000717558 : or dword ptr [rax - 0x75], ecx ; or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x20000717552 ; ret
0x00000200004ab173 : or dword ptr [rax - 0x75], ecx ; out dx, eax ; call rax
0x00000200000b8575 : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov al, r9b ; ret
0x000002000009d44a : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000013599e : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x000002000036e5b1 : or dword ptr [rax - 0x75], ecx ; push rbp ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000b0c81 : or dword ptr [rax - 0x75], ecx ; ret
0x00000200000bf59f : or dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000672a38 : or dword ptr [rax - 0x75], ecx ; retf ; call rax
0x00000200000bed04 : or dword ptr [rax - 0x77], ecx ; or byte ptr [rcx + 3], cl ; ret 0x8348
0x00000200000c8c96 : or dword ptr [rax - 0x7b], 0xa5850fdb ; ret 0xc
0x00000200001d931d : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x200001d9330 ; or eax, 0xffffffff ; ret
0x00000200003b1165 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x200003b1169 ; jmp 0x200003b118a
0x000002000071755b : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x2000071754f ; ret
0x00000200005cee21 : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000071edb3 : or dword ptr [rax - 0x7bf0ffc1], eax ; pop rax ; ret 0xfffc
0x00000200004043df : or dword ptr [rax - 0x7d], ecx ; and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x000002000014504e : or dword ptr [rax - 0x7d], ecx ; ret
0x0000020000469b1e : or dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x000002000039bad2 : or dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000002000046fb70 : or dword ptr [rax - 0x7d], ecx ; ret 0x4902
0x00000200005fdc9e : or dword ptr [rax - 0x7d], ecx ; ret 0x4908
0x00000200005851e8 : or dword ptr [rax - 0x7d], ecx ; ret 0xe910
0x00000200006edf87 : or dword ptr [rax - 0x7d], ecx ; ret 0xf02
0x00000200004c13e3 : or dword ptr [rax - 0x7d], ecx ; sar ah, 0x48 ; add esp, 0x28 ; ret
0x0000020000388e6a : or dword ptr [rax - 0x7d], ecx ; sar dh, 0x83 ; ret 0x75fe
0x000002000009c4d5 : or dword ptr [rax - 0x7d], ecx ; stc ; std ; ja 0x2000009c4e8 ; mov al, 1 ; ret
0x000002000019ca61 : or dword ptr [rax - 0x7f], ecx ; ret
0x00000200003ea5b3 : or dword ptr [rax - 0x7f], ecx ; ret 0x1000
0x0000020000163577 : or dword ptr [rax - 0xd7eab4], ecx ; ret 0x5589
0x000002000013febe : or dword ptr [rax - 1], ecx ; ret 0x3845
0x000002000047d255 : or dword ptr [rax], 0xfc08548 ; ret 0xccc3
0x000002000008fcdf : or dword ptr [rax], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x000002000014707b : or dword ptr [rax], 0xffffffff ; ret
0x00000200005d5f9b : or dword ptr [rax], 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200002874d6 : or dword ptr [rax], eax ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x00000200002486c6 : or dword ptr [rax], eax ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x0000020000275bce : or dword ptr [rax], eax ; add al, 6 ; cmp eax, dword ptr [rsi] ; sysenter
0x00000200002609ba : or dword ptr [rax], eax ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x00000200000b298d : or dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; ret 0x2348
0x00000200000f66cb : or dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x0000020000052555 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000036fb5 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200000a5837 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000017dd23 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000a5c3b : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200003d4508 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200003d6f71 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000017442d : or dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; sub ecx, dword ptr [rax + 3] ; ret 0xbe49
0x0000020000294045 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000020000037138 : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200001243c8 : or dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2358be4
0x000002000008cc3e : or dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000071810b : or dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret 0xff49
0x00000200005c8108 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], al ; ret 0x8b48
0x000002000005692d : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000113ba5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000018e98d : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200000a39d2 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000002000008da69 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004bdd0b : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004043be : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000157773 : or dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000200006f9d53 : or dword ptr [rax], eax ; add byte ptr [rbp + 0x23], cl ; ret
0x0000020000532976 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret
0x000002000018e9c6 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; or byte ptr [r9 + 0x2b], cl ; ret 0xff48
0x000002000043ef77 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x74cf8a40], al ; ret
0x00000200001ea4f8 : or dword ptr [rax], eax ; add byte ptr [rbx + rsi - 0x7c], cl ; ret
0x00000200006f6f8a : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000ad572 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200006f717d : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a5e28 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x0000020000056b94 : or dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret
0x000002000007d303 : or dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x0000020000039b16 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x39], cl ; ret
0x000002000063b15d : or dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200000729fc : or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xff0
0x00000200000a56ec : or dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000890c4 : or dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000020000097a10 : or dword ptr [rax], eax ; add dh, dh ; ret 0xf20
0x00000200001118a9 : or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f64fe : or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000010871c : or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000bf6d7 : or dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000051e24f : or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200004ad6ed : or dword ptr [rax], eax ; je 0x200004ad6fa ; xor al, al ; ret
0x000002000061663c : or dword ptr [rax], eax ; jne 0x20000616649 ; xor al, al ; ret
0x000002000024b892 : or dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 9
0x000002000060f205 : or dword ptr [rax], eax ; mov eax, 0x2d0 ; ret
0x000002000051bc18 : or dword ptr [rax], eax ; mov qword ptr [rdi], rsi ; jmp 0x2000051bbe7
0x0000020000512abc : or dword ptr [rax], eax ; mov rcx, r13 ; call 0x2000013a784
0x0000020000510bd1 : or dword ptr [rax], eax ; mov rdx, qword ptr [rdi + 0x20] ; call 0x20000140ac1
0x000002000010af33 : or dword ptr [rax], eax ; mov rdx, rcx ; mov rcx, rdi ; call rbx
0x00000200005ab11d : or dword ptr [rax], eax ; nop ; jmp 0x200005001ee
0x000002000051d242 : or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x000002000010603c : or dword ptr [rax], eax ; ret
0x0000020000239e8a : or dword ptr [rax], eax ; sysenter
0x000002000010ca50 : or dword ptr [rax], eax ; xor al, al ; ret
0x000002000051b436 : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000108d64 : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006fb248 : or dword ptr [rbp + 0x23], ecx ; ret
0x00000200004b94de : or dword ptr [rbp + 0x4750c4a], eax ; mov al, r9b ; ret
0x000002000006179f : or dword ptr [rbp + 0x48fffff8], 0xffffff8b ; ret
0x000002000006ad87 : or dword ptr [rbp + 1], esi ; ret
0x0000020000482c62 : or dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200000de25c : or dword ptr [rbp + 4], esi ; mov rax, rcx ; ret
0x00000200000bcb0f : or dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x00000200003e5824 : or dword ptr [rbp + rbp*4 - 0x17], esi ; ret
0x00000200000e471f : or dword ptr [rbp + rdx*2], esi ; mov byte ptr [rax], 0 ; jmp 0x200000e46f3
0x00000200001c2900 : or dword ptr [rbp - 0x7b], ecx ; leave ; jne 0x200001c28e6 ; xor eax, eax ; ret
0x00000200005ec677 : or dword ptr [rbp - 0x7b], ecx ; test byte ptr [rdi], 0x88 ; ret 0
0x00000200001c9ede : or dword ptr [rbp - 0x7c], eax ; ret
0x000002000065161c : or dword ptr [rbp], esp ; add rcx, r9 ; jmp rcx
0x00000200000ca125 : or dword ptr [rbx + 0x10], 2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004280c4 : or dword ptr [rbx + 0x18], 0xffffffff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005204eb : or dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000713a30 : or dword ptr [rbx + 0x1d8940cb], eax ; rcl ch, cl ; ret
0x000002000003d43f : or dword ptr [rbx + 0x234507e1], eax ; ret 0x850f
0x000002000005e4c8 : or dword ptr [rbx + 0x48000002], 0xffffff8b ; ret 0x2548
0x00000200000f1b76 : or dword ptr [rbx + 0x4cfffffd], 0x3b ; ret
0x000002000047080b : or dword ptr [rbx + 0xff685c5], ecx ; ret
0x000002000022b96f : or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x2000022b962 ; ret
0x000002000066610e : or dword ptr [rbx - 0x12f51729], ecx ; ret 0xebff
0x00000200005903d2 : or dword ptr [rbx - 0x16fb7ebc], ecx ; ret 0xfff1
0x0000020000672a4d : or dword ptr [rbx - 0x3474b729], ecx ; call rax
0x00000200004c5d7d : or dword ptr [rbx - 0x73], eax ; add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200006ef4dc : or dword ptr [rbx], eax ; add byte ptr [rdi], cl ; mov edx, 0xc61b252d ; call qword ptr [rax]
0x00000200003d57c5 : or dword ptr [rbx], ecx ; ret
0x000002000001ecaa : or dword ptr [rbx], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000044d27b : or dword ptr [rbx], edi ; ret 0xea75
0x000002000038c0f9 : or dword ptr [rbx], esi ; ret 0x2348
0x000002000042ac25 : or dword ptr [rbx], esi ; ret 0xc069
0x0000020000397942 : or dword ptr [rbx], esi ; ret 0xc869
0x000002000038c121 : or dword ptr [rbx], esi ; ret 0xd233
0x000002000012aa3d : or dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000012aa26 : or dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], cl ; ret 0xf6f7
0x0000020000126ef9 : or dword ptr [rbx], esi ; ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x000002000050a707 : or dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x00000200006fd2f0 : or dword ptr [rcx + 0x23], ecx ; fisttp qword ptr [rax + 0x2b] ; fmul dword ptr [rax - 0x75] ; ret
0x000002000005ae93 : or dword ptr [rcx + 0x23], ecx ; ret
0x000002000006b659 : or dword ptr [rcx + 0x23], ecx ; ret 0x2b49
0x000002000006b625 : or dword ptr [rcx + 0x23], ecx ; ret 0xb949
0x00000200000a5e1d : or dword ptr [rcx + 0x23], ecx ; ret 0xba49
0x0000020000178675 : or dword ptr [rcx + 0x23], ecx ; ror byte ptr [rcx + 0x2b], cl ; ror dword ptr [rax - 9], 1 ; ret 0xfff
0x000002000050a70d : or dword ptr [rcx + 0x24], eax ; ret
0x000002000049f181 : or dword ptr [rcx + 0x28], 4 ; mov eax, 0xc000000d ; ret
0x000002000016e9d4 : or dword ptr [rcx + 0x3b], eax ; ret
0x0000020000721765 : or dword ptr [rcx + 0x3b], eax ; ret 0x850f
0x00000200001a1042 : or dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000015dffc : or dword ptr [rcx + 0x58], 0xffffffff ; ret
0x000002000013ef15 : or dword ptr [rcx + 0x6b4], 0x10 ; ret
0x00000200000dcad8 : or dword ptr [rcx + 0x90], ebx ; ret
0x00000200000dcad7 : or dword ptr [rcx + 0x90], r11d ; ret
0x0000020000515d85 : or dword ptr [rcx + 0x98], 1 ; ret
0x0000020000102682 : or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x0000020000102681 : or dword ptr [rcx + 0xa], r8d ; mov eax, edx ; ret
0x00000200006438b6 : or dword ptr [rcx + 0xf], eax ; ret
0x00000200000c0675 : or dword ptr [rcx + 3], ecx ; rol byte ptr [rcx - 0xa], 1 ; ret
0x000002000013fd19 : or dword ptr [rcx + rax*8 + 8], eax ; ret
0x00000200001d6e17 : or dword ptr [rcx + rcx*4 + 0x11], eax ; ret
0x000002000043473c : or dword ptr [rcx + rcx*4 + 0x2c], ecx ; ret
0x0000020000454af4 : or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000210398 : or dword ptr [rcx - 0x2c], eax ; dec rcx ; jne 0x2000021038f ; ret
0x00000200000eca60 : or dword ptr [rcx - 0x3f], eax ; ret 0x4513
0x00000200004b2cd2 : or dword ptr [rcx - 0x3f], ecx ; jmp 0x1ffc36e78ea
0x0000020000725def : or dword ptr [rcx - 0x483039fb], ecx ; push rsi ; ret 0xf02
0x0000020000383a1f : or dword ptr [rcx - 0x49f0ffd5], eax ; ret 0x4389
0x00000200001fe959 : or dword ptr [rcx - 0x75], eax ; ret
0x000002000002b55e : or dword ptr [rcx - 0x75], eax ; ret 0x49c3
0x000002000002e413 : or dword ptr [rcx - 0x75], eax ; ret 0xe083
0x0000020000445230 : or dword ptr [rcx - 0x75], eax ; ret 0xe0c1
0x000002000045e601 : or dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x00000200000ea3f1 : or dword ptr [rcx - 0x75], ecx ; adc dword ptr [rax - 0x75], ecx ; ret 0x4df0
0x00000200005415be : or dword ptr [rcx - 0x75], ecx ; iretd ; call rax
0x00000200006cd188 : or dword ptr [rcx - 0x75], ecx ; ret 0x3348
0x00000200001323c4 : or dword ptr [rcx - 0x75], ecx ; ret 0xb9c3
0x00000200006f91dd : or dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x0000020000400cbb : or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x0000020000094b91 : or dword ptr [rcx - 0x76], eax ; ret
0x00000200006c5049 : or dword ptr [rcx - 0x7c], eax ; ret
0x0000020000100239 : or dword ptr [rcx - 0x7d], 0xffffffe8 ; add al, 0x83 ; ret 0xebe0
0x00000200001273b8 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4108
0x000002000046c170 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4802
0x00000200002324bc : or dword ptr [rcx - 0x7d], ecx ; ret 0x4902
0x0000020000186e6f : or dword ptr [rcx - 0x7d], ecx ; ror byte ptr [rax], 0x49 ; inc edx ; jmp 0x20000186e65
0x000002000003976e : or dword ptr [rcx - 0x7d], ecx ; ror byte ptr [rax], 0xeb ; in al, dx ; xor eax, eax ; ret
0x00000200001798bd : or dword ptr [rcx - 0x80], eax ; jl 0x200001798ef ; add dword ptr [rdi], r9d ; xchg eax, esp ; ret 0xb60f
0x000002000005b21e : or dword ptr [rcx - 0xa], eax ; ret 0xf01
0x00000200001d5cec : or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x000002000042a57a : or dword ptr [rcx - 1], eax ; enter -0x1575, 0x33 ; ret 0xd233
0x000002000036d910 : or dword ptr [rcx - 1], eax ; ror dword ptr [rax - 0x2f], -0x16 ; jne 0x2000036d8ff ; ret
0x0000020000518a96 : or dword ptr [rcx], 0xffffffff ; mov eax, 0xc000000d ; ret
0x00000200000dea9a : or dword ptr [rcx], 0xffffffff ; ret
0x0000020000662319 : or dword ptr [rcx], 0xffffffff ; xor eax, eax ; ret
0x000002000008e7b6 : or dword ptr [rcx], 4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ee627 : or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x00000200000249f5 : or dword ptr [rcx], eax ; add al, al ; ret
0x0000020000718be0 : or dword ptr [rcx], edi ; or eax, 0xffc38779 ; je 0x20000718bff ; ret
0x00000200000e1e55 : or dword ptr [rdi + 0x19], esi ; mov eax, 8 ; ret
0x0000020000439668 : or dword ptr [rdi + 0x28], esi ; jmp 0x2000043909a
0x00000200005d4ab4 : or dword ptr [rdi + 0x74db85ff], esp ; adc al, 0x8b ; ret
0x000002000008a3c2 : or dword ptr [rdi + 0xf000000], 0xffffffb7 ; ret
0x00000200001b8835 : or dword ptr [rdi + 0xf000000], 0xffffffb7 ; ret 0x8b4c
0x0000020000020d41 : or dword ptr [rdi + 0xf], ecx ; add byte ptr [rdx], cl ; ret 0xf854
0x00000200000220f0 : or dword ptr [rdi + rbx + 0x24], esp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb9b4
0x000002000022ff62 : or dword ptr [rdi + rcx + 0x20], eax ; ret 0xfa80
0x00000200005f4d43 : or dword ptr [rdi - 0x33], eax ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200004dd0aa : or dword ptr [rdi], 0x2b ; or al, 0 ; mov al, 1 ; ret
0x000002000051d4f3 : or dword ptr [rdi], eax ; ret
0x00000200000e9b77 : or dword ptr [rdi], ecx ; mov bh, 0x84 ; xchg eax, edi ; ret 0x56
0x00000200001d965c : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000096293 : or dword ptr [rdi], ecx ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dd0a8 : or dword ptr [rdi], ecx ; or dword ptr [rdi], 0x2b ; or al, 0 ; mov al, 1 ; ret
0x00000200004878fa : or dword ptr [rdi], ecx ; test dword ptr [rbx - 0x74fff047], eax ; ret
0x000002000002b36f : or dword ptr [rdx + 0x16], eax ; ret
0x000002000002b36e : or dword ptr [rdx + 0x16], r8d ; ret
0x00000200001441b8 : or dword ptr [rdx + 0x18], 0x20 ; mov eax, 0xffff ; ret
0x0000020000142b58 : or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x000002000037d3aa : or dword ptr [rdx + 0x20], 1 ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000037d336 : or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x0000020000178355 : or dword ptr [rdx + 0x45000005], 0xffffff8b ; ret 0x8348
0x00000200003f263a : or dword ptr [rdx + 3], esi ; xor eax, eax ; ret
0x0000020000381e03 : or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x00000200003f8298 : or dword ptr [rdx - 0x732f17ff], esi ; ret
0x00000200006eb5f3 : or dword ptr [rdx - 0x74bb0046], ecx ; ret
0x0000020000208983 : or dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000208a38 : or dword ptr [rdx], eax ; ret
0x000002000051d3b3 : or dword ptr [rdx], ecx ; ret
0x0000020000141860 : or dword ptr [rdx], edi ; ret 0x5675
0x000002000050f646 : or dword ptr [rdx], esi ; fucomi st(0) ; push 0xa0 ; ret 0xebff
0x000002000067ea22 : or dword ptr [rip + 0x125eb], 0x10 ; ret
0x000002000015e1cd : or dword ptr [rip + 0x14013d], ecx ; ret
0x000002000015e37d : or dword ptr [rip + 0x1f2cf9], ecx ; ret
0x000002000000de54 : or dword ptr [rip - 0x27aeebc9], edi ; ret
0x00000200000ae102 : or dword ptr [rip - 0x49f10000], eax ; ret 0x8d48
0x000002000036a200 : or dword ptr [rip - 0xba8b6], ecx ; ret
0x0000020000141f71 : or dword ptr [rsi + 0x3b], esp ; ret 0x1174
0x0000020000643059 : or dword ptr [rsi + 0x3b], esp ; ret 0x850f
0x000002000021cf8d : or dword ptr [rsi + 0xb], esp ; ret 0x8966
0x00000200004177e2 : or dword ptr [rsi + rbx*8 - 0x17], esi ; ret 0x148c
0x000002000066ba78 : or dword ptr [rsi - 0x32], edx ; jmp qword ptr [rcx]
0x00000200001d898a : or dword ptr [rsi - 0x7b], esp ; sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x000002000024359c : or dword ptr [rsi], eax ; call qword ptr [rsi]
0x000002000025413e : or dword ptr [rsi], eax ; sysenter
0x00000200006c5916 : or dword ptr [rsp + rax - 0x75], esi ; ret 0x4feb
0x000002000015e39b : or dword ptr [rsp], 0 ; ret
0x00000200005b1b8b : or dword ptr [rsp], 0 ; xor ecx, ecx ; call 0x200004dde28
0x0000020000239e89 : or dword ptr fs:[rax], eax ; sysenter
0x00000200004b8ef1 : or eax, 0x10408b00 ; add rsp, 0x38 ; ret
0x00000200001cd39b : or eax, 0x107db8 ; ret
0x00000200001ccf75 : or eax, 0x1082f6 ; call 0x200001d9193
0x00000200001cc8b1 : or eax, 0x108d0a ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000019a04d : or eax, 0x10b7fe ; call 0x200000962c7
0x0000020000290f04 : or eax, 0x11060016 ; ret 0xf00d
0x0000020000271130 : or eax, 0x11062306 ; ret 0xf00d
0x000002000025487c : or eax, 0x11467406 ; ret 0xf00d
0x000002000011baf6 : or eax, 0x11f3d ; call rax
0x0000020000192f81 : or eax, 0x1236f2 ; ret
0x000002000015e1ce : or eax, 0x14013d ; ret
0x0000020000287b00 : or eax, 0x14060016 ; ret 0xf00d
0x000002000024a974 : or eax, 0x14069b06 ; ret 0xf00d
0x000002000023f4e0 : or eax, 0x15161a06 ; ret 0xf011
0x000002000024cd5c : or eax, 0x15268c06 ; ret 0xf011
0x0000020000141611 : or eax, 0x1559ea ; ret
0x000002000014415b : or eax, 0x15ec20 ; sete al ; ret
0x0000020000274ee0 : or eax, 0x16061206 ; ret 0xf00f
0x00000200002770f4 : or eax, 0x1706c806 ; ret 0xf010
0x000002000013453f : or eax, 0x170f24 ; ret
0x00000200001d9336 : or eax, 0x17b755 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000253968 : or eax, 0x1806d106 ; ret 0xf011
0x0000020000123046 : or eax, 0x182bad ; call rax
0x0000020000123032 : or eax, 0x182bbd ; call rax
0x0000020000263298 : or eax, 0x1866d406 ; ret 0xf014
0x00000200004b4398 : or eax, 0x1894400 ; xor eax, eax ; ret
0x0000020000520152 : or eax, 0x18a421 ; ret
0x000002000013d132 : or eax, 0x196a55 ; add rsp, 0x48 ; ret
0x000002000026eeec : or eax, 0x1a062506 ; ret 0xf016
0x00000200000b3a87 : or eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x0000020000088e50 : or eax, 0x1c1f641 ; je 0x20000088e5f ; ret
0x000002000010a1a0 : or eax, 0x1cd9d7 ; jae 0x2000010a1af ; ret
0x0000020000292198 : or eax, 0x1d060016 ; ret 0xf016
0x0000020000264374 : or eax, 0x1d061f06 ; ret 0xf016
0x0000020000159dcb : or eax, 0x1e ; sub r9, r8 ; jmp r9
0x000002000028c908 : or eax, 0x1f060016 ; ret 0xf01b
0x000002000024a138 : or eax, 0x1f06a006 ; ret 0xf01b
0x000002000015e37e : or eax, 0x1f2cf9 ; ret
0x00000200000c27d6 : or eax, 0x1f3e9d ; ret
0x000002000023bf68 : or eax, 0x1f466a06 ; ret 0xf01b
0x00000200004a98a1 : or eax, 0x20 ; bt edx, 0x10 ; jb 0x200004a98c3 ; ret
0x00000200001ed05f : or eax, 0x200f4400 ; ret
0x00000200004e6fde : or eax, 0x20c48348 ; pop rbx ; ret
0x0000020000253b24 : or eax, 0x2106ca06 ; ret 0xf01a
0x0000020000098361 : or eax, 0x211052 ; call 0x20000064587
0x000002000025fb60 : or eax, 0x21167b06 ; ret 0xf01a
0x0000020000136c96 : or eax, 0x21b0e5 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000028ac00 : or eax, 0x22060016 ; ret 0xf01b
0x0000020000263eec : or eax, 0x22061e06 ; ret 0xf01b
0x000002000066ec50 : or eax, 0x22457 ; ret
0x0000020000636229 : or eax, 0x22c00000 ; ret
0x00000200002629c0 : or eax, 0x23166006 ; ret 0xf01f
0x0000020000625433 : or eax, 0x23184633 ; ret 0x4631
0x00000200000bdb64 : or eax, 0x23c38b00 ; ret 0xbd41
0x000002000010ca7c : or eax, 0x2452ff ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000028ead0 : or eax, 0x26061406 ; ret 0xf01f
0x000002000027d0c8 : or eax, 0x26063d06 ; ret 0xf01f
0x0000020000449bab : or eax, 0x260c38 ; call 0x2000006a618
0x00000200004499ba : or eax, 0x260e29 ; call 0x2000006a618
0x0000020000446f60 : or eax, 0x2632c3 ; call 0x20000070674
0x0000020000446f12 : or eax, 0x263311 ; call 0x20000070674
0x00000200000ea1b1 : or eax, 0x266e62 ; mov eax, ecx ; ret
0x0000020000442c26 : or eax, 0x26752d ; call 0x2000006a618
0x0000020000442ad7 : or eax, 0x26767c ; call 0x2000006a618
0x0000020000442ab9 : or eax, 0x2678b2 ; call 0x2000006a618
0x0000020000666d23 : or eax, 0x2a394 ; add rsp, 0x28 ; ret
0x00000200003ff358 : or eax, 0x2ab14b ; add rsp, 0x38 ; ret
0x000002000009d48a : or eax, 0x2b3b99 ; sete al ; ret
0x000002000003a699 : or eax, 0x2b80013 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000061ac19 : or eax, 0x3000000 ; ret
0x00000200006564c6 : or eax, 0x30dbde31 ; ret 0xc556
0x00000200001ab29f : or eax, 0x31518841 ; ret
0x00000200000332f2 : or eax, 0x31dd49 ; je 0x20000033305 ; xor al, al ; ret
0x0000020000025af6 : or eax, 0x32be6d ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000100fd : or eax, 0x33bc25e6 ; ret
0x00000200002226dc : or eax, 0x348c18b ; sar byte ptr [rbx], 0xac ; ret
0x00000200003a00c4 : or eax, 0x380039ed ; ret 0x39
0x00000200002155b6 : or eax, 0x41c00000 ; mov eax, ecx ; ret
0x00000200000e7123 : or eax, 0x41c12b4c ; mov eax, eax ; ret
0x00000200000bd359 : or eax, 0x428b4800 ; add dword ptr [rcx + 0x23], ecx ; ret
0x000002000004689e : or eax, 0x45890035 ; ret
0x000002000010fdf7 : or eax, 0x48000000 ; add esp, 0x30 ; pop rbx ; ret
0x00000200000b96fc : or eax, 0x4801b000 ; add esp, 0x28 ; ret
0x000002000000d176 : or eax, 0x48354d7 ; ret 0x3b3
0x00000200000bec6c : or eax, 0x48894900 ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x0000020000219548 : or eax, 0x48900000 ; add esp, 0x30 ; pop rbp ; ret
0x0000020000024bbb : or eax, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200002367e6 : or eax, 0x48c00000 ; add esp, 0x28 ; ret
0x0000020000654130 : or eax, 0x48c00000 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001cbd0f : or eax, 0x48c00000 ; add esp, 0x38 ; ret
0x00000200001d02f9 : or eax, 0x48c00000 ; add esp, 0x40 ; pop rbx ; ret
0x00000200005d8f7a : or eax, 0x48c00000 ; add esp, 0x48 ; ret
0x00000200000b3b52 : or eax, 0x48c03300 ; add esp, 0x18 ; ret
0x00000200004c58b9 : or eax, 0x48c03300 ; add esp, 0x28 ; ret
0x000002000071e888 : or eax, 0x48c0940f ; add esp, 0x20 ; pop rbp ; ret
0x00000200001413f7 : or eax, 0x48d68b48 ; mov ecx, ebx ; call r14
0x000002000014140c : or eax, 0x48d68b48 ; mov ecx, edi ; call r14
0x000002000055d3bb : or eax, 0x48d68b49 ; mov ecx, edi ; call 0x2000040963d
0x00000200005d15b3 : or eax, 0x48ffe818 ; add esp, 0x58 ; ret
0x00000200001425d3 : or eax, 0x48ffffff ; add esp, 0x38 ; ret
0x000002000072c7fa : or eax, 0x49bf1d89 ; ret 0xe8ff
0x000002000015e169 : or eax, 0x54 ; xor eax, eax ; ret
0x0000020000729c27 : or eax, 0x6b000001 ; ret
0x00000200004bf7b1 : or eax, 0x70518948 ; xor eax, eax ; ret
0x0000020000430d9b : or eax, 0x74c00000 ; and dword ptr [rcx - 0x75], ecx ; ret
0x0000020000048039 : or eax, 0x74c13b41 ; or byte ptr [rbx], bh ; ret 0x6c72
0x00000200005ee0ae : or eax, 0x76ea3b41 ; or byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200000acbf0 : or eax, 0x7a894c00 ; sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x000002000015492d : or eax, 0x7f89 ; jmp rcx
0x000002000019ca73 : or eax, 0x81480035 ; ret
0x000002000057d970 : or eax, 0x81c00000 ; jmp qword ptr [rbx]
0x000002000040b334 : or eax, 0x83000000 ; call qword ptr [rax]
0x00000200003c496a : or eax, 0x8348002b ; ret 0xe84c
0x000002000066542d : or eax, 0x83480673 ; ret
0x000002000022f0a1 : or eax, 0x8348c1ff ; ret
0x00000200004c5d00 : or eax, 0x84e8348 ; add al, 0x81 ; ret
0x00000200001cc615 : or eax, 0x850ff00 ; add rsp, 0x28 ; ret
0x000002000037f67b : or eax, 0x85c00000 ; fisttp dword ptr [rdi] ; cdq ; ret 0x8b48
0x000002000050626f : or eax, 0x85ffc47a ; ror byte ptr [rdi], 0x88 ; ret 0
0x00000200000ca203 : or eax, 0x87504a8 ; ret
0x000002000060072c : or eax, 0x8948002b ; div r14d ; ret 0x7402
0x000002000050214f : or eax, 0x8948ffda ; adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x0000020000662267 : or eax, 0x8b000000 ; ret
0x00000200006fd690 : or eax, 0x8b00025e ; ret
0x000002000072281d : or eax, 0x8b0d8d48 ; in eax, dx ; ret 0x48ff
0x00000200006e43e2 : or eax, 0x8b410000 ; ret 0x3344
0x000002000050a164 : or eax, 0x8b41ffda ; ror byte ptr [rbp - 0x75], 0x1c ; ret
0x0000020000102ceb : or eax, 0x8b48000a ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200001f85de : or eax, 0x8b4844eb ; ret
0x00000200006858a2 : or eax, 0x8b4c0000 ; ret
0x000002000048302c : or eax, 0x8b4cffca ; ret
0x000002000014a388 : or eax, 0x8bc00000 ; ret
0x00000200006282a1 : or eax, 0x8bc00000 ; ret 0x8b48
0x00000200005d8f2a : or eax, 0x8bc00000 ; ret 0xccc3
0x00000200006399cf : or eax, 0x8bffa837 ; ret
0x00000200001a4dff : or eax, 0x8bffec58 ; ret
0x000002000012047f : or eax, 0x8bfff27d ; ret
0x000002000009b16f : or eax, 0x8bfff981 ; ret
0x0000020000616639 : or eax, 0x93b12 ; jne 0x2000061664c ; xor al, al ; ret
0x0000020000674121 : or eax, 0x9b8b3d83 ; ret
0x00000200004ddc33 : or eax, 0xb1d38b48 ; add eax, ebp ; ret 0xf91d
0x000002000006c081 : or eax, 0xb70f0000 ; ret 0xf41
0x0000020000581d7d : or eax, 0xb70ffff0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200001a11b1 : or eax, 0xb9000000 ; ret 0
0x0000020000045fdf : or eax, 0xbb800000 ; ret
0x00000200004032ea : or eax, 0xbbb800 ; add al, al ; ret
0x00000200001775ac : or eax, 0xbe80ffef ; ret
0x00000200005d0059 : or eax, 0xc0854800 ; je 0x200005d006b ; jmp qword ptr [rax]
0x00000200000aceeb : or eax, 0xc08b4900 ; add rsp, 0x38 ; ret
0x000002000004f56a : or eax, 0xc1490000 ; call qword ptr [rax]
0x00000200001f303c : or eax, 0xc3023 ; ret
0x00000200001f301e : or eax, 0xc303d ; ret
0x0000020000072859 : or eax, 0xc4834800 ; pop rbx ; ret
0x00000200001b8245 : or eax, 0xc8fffff8 ; jne 0x200001b8241 ; ret
0x00000200000dfaad : or eax, 0xca034800 ; jmp rcx
0x00000200006e489f : or eax, 0xca830000 ; inc dword ptr [rcx + 0x23] ; ret 0xe0c1
0x00000200006de5e7 : or eax, 0xca830000 ; jmp qword ptr [rbx]
0x00000200000bfbff : or eax, 0xcccccc00 ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200001cbe0e : or eax, 0xd711d ; ret
0x00000200001cbdbf : or eax, 0xd7174 ; ret
0x000002000072f39c : or eax, 0xd830000 ; or bh, byte ptr [rdx - 0x49] ; call qword ptr [rax]
0x00000200000ae3cd : or eax, 0xd8b4800 ; ret 0x2294
0x00000200000117b5 : or eax, 0xdc4e18ea ; ret 0xb3cc
0x00000200004a157f : or eax, 0xe8c00000 ; je 0x200004a1565 ; ret 0xb9ff
0x00000200004a1589 : or eax, 0xe8c00000 ; push 0xd8 ; ret 0xe8ff
0x00000200004a15da : or eax, 0xe8c00000 ; sbb eax, ebx ; ret 0x83ff
0x00000200004a0eda : or eax, 0xe8c00000 ; sbb edi, ebx ; ret 0x48ff
0x0000020000423e7b : or eax, 0xe8ca8b49 ; cld ; ret 0xf
0x000002000042d48f : or eax, 0xe8ffea89 ; js 0x2000042d46e ; ret
0x00000200005a7e66 : or eax, 0xe9c00000 ; call rsp
0x0000020000549770 : or eax, 0xe9c00000 ; ret
0x000002000023779f : or eax, 0xeb0006f5 ; sub esi, esi ; ret
0x00000200000bf0b1 : or eax, 0xeb1f8900 ; ret 0x8b48
0x00000200006480e7 : or eax, 0xeb800000 ; add bh, bh ; ret
0x0000020000648077 : or eax, 0xeb800000 ; add eax, dword ptr [rcx - 1] ; ret
0x00000200004b44a5 : or eax, 0xebc00000 ; fdivrp st(6) ; ret 0x7402
0x000002000011ea8b : or eax, 0xebc00000 ; jmp 0x1ffc32273eb
0x0000020000408b8e : or eax, 0xebc00000 ; or al, 0x41 ; inc edx ; jmp 0x20000408b85
0x00000200004c8a7b : or eax, 0xebc00000 ; ret
0x00000200004212ab : or eax, 0xebc00000 ; ret 0x23bb
0x000002000051a7d6 : or eax, 0xebc00000 ; ret 0x8948
0x00000200001dd55b : or eax, 0xec5a8 ; ret
0x0000020000617b85 : or eax, 0xf18418b ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000050073 : or eax, 0xf6001957 ; ret
0x00000200001037b2 : or eax, 0xf641000a ; ret 0xf20
0x0000020000508496 : or eax, 0xf6c00000 ; rcl dword ptr [rax], 0xf ; ret 0xd08b
0x000002000059a487 : or eax, 0xf6ffd1c4 ; ret
0x0000020000540cca : or eax, 0xf6ffe6da ; ret
0x0000020000401165 : or eax, 0xf7001577 ; ret
0x00000200005eae17 : or eax, 0xf704ce83 ; ret
0x00000200006f02c7 : or eax, 0xf748ffc6 ; ret
0x000002000012ed25 : or eax, 0xfc000000 ; ret
0x00000200001579fa : or eax, 0xff49228a ; ret 0xc9ff
0x0000020000670fea : or eax, 0xffaaa05d ; jmp rax
0x0000020000670cae : or eax, 0xffaaa399 ; jmp rax
0x00000200004914ae : or eax, 0xffb7aa85 ; mov al, byte ptr [rdx + rcx] ; ret
0x0000020000718a67 : or eax, 0xffb8a424 ; ret
0x0000020000718c9c : or eax, 0xffb96c7f ; ret
0x00000200006ef166 : or eax, 0xffbc8255 ; add rsp, 0x28 ; ret
0x00000200006fecba : or eax, 0xffbd4b3d ; add rsp, 0x28 ; ret
0x00000200006fec38 : or eax, 0xffbd4d5f ; ret
0x0000020000678bd2 : or eax, 0xffc35091 ; ret
0x0000020000719619 : or eax, 0xffc37b19 ; ret
0x0000020000718be2 : or eax, 0xffc38779 ; je 0x20000718bfd ; ret
0x0000020000668496 : or eax, 0xffc39a5d ; call rax
0x0000020000662235 : or eax, 0xffc4b74a ; jne 0x20000662244 ; ret
0x00000200006783cf : or eax, 0xffc50a40 ; add rsp, 0x28 ; ret
0x0000020000674059 : or eax, 0xffc54d9e ; ret
0x00000200006f76da : or eax, 0xffc59971 ; jb 0x200006f76a1 ; ret
0x000002000063d4b3 : or eax, 0xffc69b68 ; call 0x200000b975f
0x00000200005f4f12 : or eax, 0xffcd4559 ; mov qword ptr [rcx + 8], r9 ; ret
0x00000200005f4eb2 : or eax, 0xffcd45c1 ; jmp 0x200005f4e82
0x00000200005f4dd4 : or eax, 0xffcd469f ; jmp 0x200005f4da4
0x00000200005f4d28 : or eax, 0xffcd4713 ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200005b9fbb : or eax, 0xffce8ee0 ; call rax
0x00000200005dde5b : or eax, 0xffd018d0 ; call rax
0x00000200005d3072 : or eax, 0xffd0f021 ; add rsp, 0x28 ; ret
0x000002000057d6eb : or eax, 0xffd327c8 ; ret
0x000002000058baa6 : or eax, 0xffd4a835 ; call 0x200000d7db3
0x000002000056b8cb : or eax, 0xffd6a4d0 ; mov edx, eax ; call 0x20000027bc5
0x00000200005d8021 : or eax, 0xffd790ba ; call r9
0x00000200005d7771 : or eax, 0xffd7996a ; call r9
0x00000200005d4f50 : or eax, 0xffd7c18b ; call r9
0x000002000051f7e9 : or eax, 0xffd863ea ; ret
0x000002000052015a : or eax, 0xffdbf571 ; ret
0x00000200004e02d7 : or eax, 0xffdc75c4 ; call 0x20000103340
0x00000200004dbeba : or eax, 0xffdcee61 ; xor edx, edx ; call 0x20000048199
0x00000200004ce348 : or eax, 0xffdd78ff ; or byte ptr [r10], dl ; ret
0x00000200004b4fd2 : or eax, 0xffdfcd89 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200004d2a4b : or eax, 0xffe00e38 ; ret
0x00000200004c2443 : or eax, 0xffe127c0 ; call 0x200000e3bf0
0x00000200004abd96 : or eax, 0xffe2a545 ; call 0x200000d6f30
0x00000200004a5212 : or eax, 0xffe3b0c1 ; call 0x200000d1214
0x00000200004a4d2b : or eax, 0xffe3b5a8 ; call 0x20000030f77
0x00000200004a4975 : or eax, 0xffe3b956 ; call 0x20000030c67
0x0000020000471f2a : or eax, 0xffe3df59 ; ret
0x000002000044e8a7 : or eax, 0xffe57c04 ; call 0x200000702b8
0x000002000044d161 : or eax, 0xffe5934a ; call 0x20000070848
0x000002000044d00e : or eax, 0xffe5949d ; call 0x200000702b8
0x00000200004da2ec : or eax, 0xffe76def ; call r9
0x000002000043bc73 : or eax, 0xffe8d4c8 ; call 0x2000006a618
0x00000200004bb10b : or eax, 0xffe95fd0 ; call r9
0x0000020000439b88 : or eax, 0xffea1333 ; call 0x20000064dd8
0x00000200004ae074 : or eax, 0xffea3067 ; call r9
0x00000200004ab866 : or eax, 0xffea5875 ; call r9
0x000002000040d840 : or eax, 0xffec59bb ; call 0x20000031498
0x0000020000409019 : or eax, 0xffec9602 ; call 0x20000031498
0x0000020000408d87 : or eax, 0xffec9814 ; call 0x20000031498
0x0000020000486d14 : or eax, 0xffeca3c7 ; call r9
0x000002000040706b : or eax, 0xffecb530 ; call 0x20000031498
0x000002000040702b : or eax, 0xffecb5f0 ; call 0x20000031498
0x0000020000405a97 : or eax, 0xffecd544 ; call 0x20000031498
0x0000020000405a83 : or eax, 0xffecd558 ; call 0x20000033468
0x00000200004059ca : or eax, 0xffecd611 ; call 0x20000031498
0x000002000040598a : or eax, 0xffecd651 ; call 0x20000031498
0x0000020000402cd5 : or eax, 0xffecf946 ; call 0x20000031498
0x0000020000402c03 : or eax, 0xffecf998 ; call 0x20000031498
0x00000200003fff13 : or eax, 0xffedf818 ; call rax
0x000002000036a201 : or eax, 0xfff4574a ; ret
0x00000200005b299a : or eax, 0xfff75131 ; setne dl ; jmp 0x200005b29c4
0x00000200005b29ac : or eax, 0xfff7515f ; setne dl ; jmp 0x200005b29c4
0x000002000057caab : or eax, 0xfffab900 ; and r8d, edx ; jmp 0x2000057cb26
0x00000200006edc14 : or eax, 0xfffbccef ; add rsp, 0x28 ; ret
0x000002000066ed03 : or eax, 0xffff4318 ; call 0x2000022af7b
0x000002000066ed60 : or eax, 0xffff432b ; call 0x2000022af7b
0x000002000066ed0f : or eax, 0xffff435c ; call 0x2000022af7b
0x000002000066ed1b : or eax, 0xffff4360 ; call 0x2000022af7b
0x0000020000373372 : or eax, 0xffffd959 ; mov edx, ebx ; call 0x200000ff5e9
0x000002000070e984 : or eax, 0xffffffff ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001453a6 : or eax, 0xffffffff ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000142253 : or eax, 0xffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000148c94 : or eax, 0xffffffff ; add rsp, 0x38 ; ret
0x00000200005903e5 : or eax, 0xffffffff ; jmp 0x200004ac62c
0x0000020000039994 : or eax, 0xffffffff ; ret
0x000002000037458f : or eax, 1 ; mov qword ptr [rdx], rax ; ret
0x00000200001e56a8 : or eax, 2 ; mov qword ptr [rcx], r8 ; ret
0x000002000043db0c : or eax, 5 ; ret
0x00000200000b7535 : or eax, dword ptr [eax] ; add rcx, rdx ; jmp rcx
0x00000200006042fd : or eax, dword ptr [rax + rax] ; add byte ptr [rbx - 0x987dba4], cl ; ret
0x0000020000218646 : or eax, dword ptr [rax] ; add al, ch ; ret 0xf3f6
0x00000200000d3169 : or eax, dword ptr [rax] ; add bh, bh ; ret
0x0000020000031986 : or eax, dword ptr [rax] ; add bh, bh ; ret 0x854d
0x0000020000598d8d : or eax, dword ptr [rax] ; add bh, bh ; ret 0xcbeb
0x00000200004a856d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; fcos ; ret 0x1b9
0x000002000049b55e : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000022f7ea : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000071e5d2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003ca581 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200004af900 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x200004af8e5
0x00000200005781b8 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000057821d
0x000002000007a320 : or eax, dword ptr [rax] ; add byte ptr [rbp + 0x33], al ; in al, -0x75 ; ret
0x000002000022f74c : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x0000020000426227 : or eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test ecx, esi ; call qword ptr [rbx]
0x00000200000b7536 : or eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x00000200004ee572 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e0578 : or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000008a158 : or eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000009178d : or eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000094840 : or eax, dword ptr [rax] ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004e1a68 : or eax, dword ptr [rax] ; and rcx, 0xfffffffffffffffc ; mov rax, rcx ; ret
0x00000200004edef8 : or eax, dword ptr [rax] ; mov al, dl ; ret
0x00000200000ebec1 : or eax, dword ptr [rax] ; mov eax, 0xc0000225 ; ret
0x00000200004ee322 : or eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000e05c9 : or eax, dword ptr [rax] ; mov edx, 1 ; mov eax, edx ; ret
0x0000020000175534 : or eax, dword ptr [rax] ; mov r8, qword ptr [rsp + 0x50] ; jmp 0x20000061848
0x00000200001e07e3 : or eax, dword ptr [rax] ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001e0937 : or eax, dword ptr [rax] ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001e082e : or eax, dword ptr [rax] ; mov rsi, rdx ; call qword ptr [rax]
0x00000200001e06f1 : or eax, dword ptr [rax] ; mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x00000200005358a7 : or eax, dword ptr [rax] ; nop ; jmp 0x2000038dbff
0x000002000054475b : or eax, dword ptr [rax] ; nop ; jmp 0x200003bc5fe
0x000002000023dd12 : or eax, dword ptr [rax] ; or al, 6 ; ret 0x1316
0x00000200002438ba : or eax, dword ptr [rax] ; or byte ptr [rsi], al ; ret 0x1306
0x0000020000290f02 : or eax, dword ptr [rax] ; or eax, 0x11060016 ; ret 0xf00d
0x000002000027112e : or eax, dword ptr [rax] ; or eax, 0x11062306 ; ret 0xf00d
0x000002000025487a : or eax, dword ptr [rax] ; or eax, 0x11467406 ; ret 0xf00d
0x0000020000287afe : or eax, dword ptr [rax] ; or eax, 0x14060016 ; ret 0xf00d
0x000002000024a972 : or eax, dword ptr [rax] ; or eax, 0x14069b06 ; ret 0xf00d
0x000002000023f4de : or eax, dword ptr [rax] ; or eax, 0x15161a06 ; ret 0xf011
0x000002000024cd5a : or eax, dword ptr [rax] ; or eax, 0x15268c06 ; ret 0xf011
0x0000020000274ede : or eax, dword ptr [rax] ; or eax, 0x16061206 ; ret 0xf00f
0x00000200002770f2 : or eax, dword ptr [rax] ; or eax, 0x1706c806 ; ret 0xf010
0x0000020000253966 : or eax, dword ptr [rax] ; or eax, 0x1806d106 ; ret 0xf011
0x0000020000263296 : or eax, dword ptr [rax] ; or eax, 0x1866d406 ; ret 0xf014
0x000002000026eeea : or eax, dword ptr [rax] ; or eax, 0x1a062506 ; ret 0xf016
0x0000020000292196 : or eax, dword ptr [rax] ; or eax, 0x1d060016 ; ret 0xf016
0x0000020000264372 : or eax, dword ptr [rax] ; or eax, 0x1d061f06 ; ret 0xf016
0x000002000028c906 : or eax, dword ptr [rax] ; or eax, 0x1f060016 ; ret 0xf01b
0x000002000024a136 : or eax, dword ptr [rax] ; or eax, 0x1f06a006 ; ret 0xf01b
0x000002000023bf66 : or eax, dword ptr [rax] ; or eax, 0x1f466a06 ; ret 0xf01b
0x0000020000253b22 : or eax, dword ptr [rax] ; or eax, 0x2106ca06 ; ret 0xf01a
0x000002000025fb5e : or eax, dword ptr [rax] ; or eax, 0x21167b06 ; ret 0xf01a
0x000002000028abfe : or eax, dword ptr [rax] ; or eax, 0x22060016 ; ret 0xf01b
0x0000020000263eea : or eax, dword ptr [rax] ; or eax, 0x22061e06 ; ret 0xf01b
0x00000200002629be : or eax, dword ptr [rax] ; or eax, 0x23166006 ; ret 0xf01f
0x000002000028eace : or eax, dword ptr [rax] ; or eax, 0x26061406 ; ret 0xf01f
0x000002000027d0c6 : or eax, dword ptr [rax] ; or eax, 0x26063d06 ; ret 0xf01f
0x0000020000254e62 : or eax, dword ptr [rax] ; ret
0x000002000023aa56 : or eax, dword ptr [rax] ; sysenter
0x00000200004ef40c : or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001dc505 : or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004f42ed : or eax, dword ptr [rax] ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006d7b10 : or eax, dword ptr [rbx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rbx
0x00000200000d610c : or eax, dword ptr [rcx + 0xf9] ; or byte ptr [rdi], 0x85 ; ret
0x000002000061a1b3 : or eax, dword ptr [rcx + 3] ; ret
0x0000020000147984 : or eax, dword ptr [rcx - 0x49] ; add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x200001479b6
0x0000020000365177 : or eax, dword ptr [rcx - 1] ; ret
0x0000020000470c89 : or eax, dword ptr [rdi] ; add rax, r10 ; jmp rax
0x00000200006d7fad : or eax, dword ptr [rdx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rbx
0x00000200006d6112 : or eax, dword ptr [rdx - 0x73] ; adc al, 0x17 ; xor ecx, ecx ; call rbx
0x00000200006df9ab : or eax, dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rbx
0x00000200006d64aa : or eax, dword ptr [rdx - 0x73] ; adc al, 0x27 ; xor ecx, ecx ; call rbx
0x00000200006d9360 : or eax, dword ptr [rdx - 0x73] ; adc al, 0x2e ; xor ecx, ecx ; call rbx
0x00000200006e025e : or eax, dword ptr [rdx - 0x73] ; adc al, 0x37 ; xor ecx, ecx ; call rbx
0x00000200006dc25d : or eax, dword ptr [rdx - 0x73] ; adc al, 0x3f ; xor ecx, ecx ; call rbx
0x000002000025152a : or eax, dword ptr [rsi] ; sysenter
0x000002000028eacd : or eax, dword ptr es:[rax] ; or eax, 0x26061406 ; ret 0xf01f
0x000002000027d0c5 : or eax, dword ptr es:[rax] ; or eax, 0x26063d06 ; ret 0xf01f
0x000002000023aa55 : or eax, dword ptr fs:[rax] ; sysenter
0x0000020000220708 : or eax, eax ; jmp 0x20000220721
0x0000020000095e59 : or eax, eax ; mov qword ptr [rcx + 0x10], rax ; jmp 0x20000095e2a
0x000002000015e08b : or eax, eax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200001513c0 : or eax, eax ; wrmsr ; ret
0x00000200004a17a1 : or eax, ebp ; cdq ; ret 0x48ff
0x00000200004a1085 : or eax, ebp ; mov ch, 0x51 ; ret 0x48ff
0x00000200003a5607 : or eax, ebp ; ret
0x000002000047962b : or eax, ebp ; wait ; ret 0xffbb
0x000002000020752d : or eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051d06f : or eax, ebx ; dec dword ptr [rax - 0x75] ; jl 0x2000051d0a3 ; js 0x2000051d00c ; ret
0x000002000010a403 : or eax, ebx ; mov eax, 2 ; ret
0x0000020000141e71 : or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000043acb3 : or eax, ecx ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000006a619
0x000002000018984f : or eax, ecx ; jmp 0x200000a3489
0x000002000002a81d : or eax, ecx ; jne 0x2000002a830 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d01ae : or eax, ecx ; or r8d, edx ; jmp 0x200005d01d1
0x000002000010b317 : or eax, ecx ; or rax, rcx ; ret
0x000002000010b31a : or eax, ecx ; ret
0x00000200006757d9 : or eax, edi ; ret 0x8dff
0x000002000022cddf : or eax, edx ; add rsp, 0x28 ; ret
0x000002000017e024 : or eax, edx ; jmp 0x2000017e04b
0x00000200001841a4 : or eax, edx ; jmp 0x200001841ac
0x00000200001841cc : or eax, edx ; jmp 0x200001841d4
0x00000200001d1376 : or eax, edx ; jmp 0x200001d138a
0x00000200001d1376 : or eax, edx ; jmp 0x200001d138f
0x000002000021d713 : or eax, edx ; jmp 0x2000021d727
0x00000200005d01b1 : or eax, edx ; jmp 0x200005d01ce
0x00000200000ac810 : or eax, edx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000157992 : or eax, edx ; pop rdi ; ret
0x000002000015dd17 : or eax, edx ; ret
0x00000200000f6f29 : or eax, esi ; btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000181053 : or eax, esi ; inc dword ptr [rcx - 0x75] ; ret
0x000002000013ef13 : or eax, esi ; or dword ptr [rcx + 0x6b4], 0x10 ; ret
0x000002000010a402 : or eax, r11d ; mov eax, 2 ; ret
0x00000200001513bf : or eax, r8d ; wrmsr ; ret
0x000002000000dfbc : or ebp, dword ptr [rdx - 0x48] ; ret 0x3ecb
0x00000200004856c5 : or ebp, eax ; int1 ; ret 0xffc5
0x000002000060f3d3 : or ebp, eax ; pop rdi ; loopne 0x2000060f3df ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000295ed7 : or ebp, eax ; ret
0x000002000055e147 : or ebp, ebx ; inc dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000062a67b : or ebp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004b0493 : or ebp, edx ; inc dword ptr [rcx + 3] ; ret
0x00000200003b5795 : or ebx, 1 ; jmp 0x200003b573a
0x00000200003b0c7c : or ebx, dword ptr [rcx] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000000dc8c : or ebx, dword ptr [rdi - 0x6b] ; ret
0x00000200005f3407 : or ebx, eax ; mov eax, 0xc000000d ; ret
0x00000200003708ca : or ebx, eax ; mov eax, 0xc00000bb ; ret
0x00000200003e599b : or ebx, eax ; mov word ptr [rip - 0x11d244], ax ; ret
0x00000200000dc08d : or ebx, eax ; test r8, r8 ; jne 0x200000dc0a4 ; xor eax, eax ; ret
0x00000200004a4e4c : or ebx, ecx ; jmp 0x200004a4e16
0x00000200007145b3 : or ebx, ecx ; ret
0x00000200000fcd48 : or ecx, 0 ; add byte ptr [rax], al ; ret
0x00000200004da38e : or ecx, 0x40 ; shr r9d, 1 ; call 0x20000026654
0x00000200000eb22d : or ecx, 0xffffffff ; test eax, eax ; cmove eax, ecx ; ret
0x0000020000686780 : or ecx, dword ptr [rax + 0x3b] ; ret
0x000002000012dbde : or ecx, dword ptr [rax + 0x3b] ; ret 0x974
0x0000020000024bd7 : or ecx, dword ptr [rax + 0x3b] ; ret 0xae72
0x000002000002ab7a : or ecx, dword ptr [rax + 0x3b] ; ret 0xd172
0x00000200006ce5a0 : or ecx, dword ptr [rax + 0x69] ; ret 0x2710
0x00000200001c189b : or ecx, dword ptr [rax + 0x69] ; ret 0xdf3
0x000002000007aff8 : or ecx, dword ptr [rax + 3] ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x000002000007afbf : or ecx, dword ptr [rax + 3] ; ror byte ptr [rax - 0x77], 0xc ; ret 0xae9
0x000002000049a952 : or ecx, dword ptr [rax - 0x73] ; adc byte ptr [r11], r14b ; shr al, cl ; ret 0xbd54
0x000002000022aa67 : or ecx, dword ptr [rax - 0x73] ; or dil, dil ; ret
0x00000200004cb8e1 : or ecx, dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200002285e6 : or ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7407
0x00000200004bfef6 : or ecx, dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000f5ef1 : or ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000688cc0 : or ecx, dword ptr [rax - 0x75] ; push rbp ; sub al, ch ; ret 0xb504
0x00000200000c0be0 : or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000231e2a : or ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000004a358 : or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003695a9 : or ecx, dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret
0x0000020000190ca4 : or ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbp ; call 0x2000022cf39
0x0000020000170c73 : or ecx, dword ptr [rax - 0x75] ; xlatb ; mov rcx, r14 ; call 0x2000022cf39
0x000002000044428f : or ecx, dword ptr [rax - 0x7b] ; leave ; je 0x200004442a3 ; call 0x20000068fd9
0x00000200001428fc : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001421b4 : or ecx, dword ptr [rax - 0x7d] ; ret 0x6602
0x0000020000562237 : or ecx, dword ptr [rax - 0x7d] ; ret 0xe838
0x0000020000149b07 : or ecx, dword ptr [rax - 1] ; ret
0x0000020000128f29 : or ecx, dword ptr [rax - 9] ; ret
0x00000200003d59cc : or ecx, dword ptr [rbp - 0x74bb008e] ; ret 0xf503
0x00000200001f5b96 : or ecx, dword ptr [rbp - 0x75] ; ret 0xdab9
0x00000200004feb33 : or ecx, dword ptr [rbx + 0x3480841] ; ret 0x3b48
0x0000020000121432 : or ecx, dword ptr [rbx + 0x3484040] ; ret
0x00000200001daf33 : or ecx, dword ptr [rbx + 0x3484041] ; ret 0x3b48
0x00000200001f18f8 : or ecx, dword ptr [rbx + 0x3494042] ; ret
0x00000200000c0314 : or ecx, dword ptr [rbx + 0x4c8348c2] ; ret
0x000002000021e45b : or ecx, dword ptr [rcx + 3] ; ret 0x8d4d
0x00000200006d6c09 : or ecx, dword ptr [rcx - 0x73] ; clc ; mov rdx, qword ptr [rcx] ; call rbx
0x0000020000149233 : or ecx, dword ptr [rcx - 0x75] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200006cb91a : or ecx, dword ptr [rcx - 0x75] ; add dword ptr [rcx - 0x7d], ecx ; ret
0x000002000050d767 : or ecx, dword ptr [rcx - 0x75] ; and byte ptr [r9 - 0x7d], r9b ; ret
0x000002000050f61c : or ecx, dword ptr [rcx - 0x75] ; leave ; call 0x20000139677
0x00000200006d9342 : or ecx, dword ptr [rcx - 0x75] ; salc ; mov rcx, rbx ; call r12
0x00000200000ec9d2 : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000040402e : or ecx, dword ptr [rcx - 0x7d] ; ret 0x4c02
0x000002000021e169 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000200000b8712 : or ecx, dword ptr [rcx - 1] ; ret
0x000002000064e035 : or ecx, dword ptr [rdi] ; ret 0x4589
0x0000020000122034 : or ecx, dword ptr [rdi] ; test byte ptr [rbx], al ; ret 8
0x000002000006ce53 : or ecx, eax ; cmp r9, rcx ; sbb eax, eax ; ret
0x0000020000443a56 : or ecx, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200000ed253 : or ecx, eax ; mov rax, rcx ; add rsp, 0x38 ; ret
0x00000200003f9696 : or ecx, ebp ; add al, 0xce ; ret
0x000002000057f470 : or ecx, ebp ; ret
0x00000200000f7f7c : or ecx, edx ; mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000033e44 : or edi, 1 ; jmp 0x20000033e0f
0x0000020000718664 : or edi, dword ptr [rbx + 0x58d48ff] ; adc bl, byte ptr [rcx] ; ret
0x0000020000642117 : or edi, dword ptr [rbx] ; ret
0x00000200004acc39 : or edi, dword ptr [rbx] ; ret 0x840f
0x00000200001c2b35 : or edi, dword ptr [rcx - 0x3fffff66] ; call 0x200000cee04
0x000002000066f021 : or edi, dword ptr [rdx] ; ret
0x0000020000518a97 : or edi, edi ; mov eax, 0xc000000d ; ret
0x00000200000813bd : or edi, edi ; ret
0x0000020000056b0e : or edi, edi ; ret 0x2349
0x000002000039fda7 : or edi, edi ; ret 0x3b41
0x000002000020832b : or edi, edi ; ret 0x8348
0x00000200004b1922 : or edi, edi ; ret 0xc103
0x0000020000099ed3 : or edi, edi ; ret 0xc28b
0x000002000011b5d9 : or edi, edi ; ret 0xe8eb
0x00000200004ae648 : or edi, edi ; ret 0xfa83
0x00000200003651cb : or edi, edi ; ret 0xff48
0x000002000066231a : or edi, edi ; xor eax, eax ; ret
0x0000020000555cae : or edx, 0xb00000f ; ret 0xc883
0x00000200007303c3 : or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000025f0d : or edx, 4 ; jmp 0x20000025d66
0x00000200005a9d3d : or edx, dword ptr [rdx] ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200001c7842 : or edx, eax ; mov rax, rdx ; ret
0x00000200000f860e : or edx, eax ; xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x00000200004ca502 : or edx, eax ; xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x00000200004c0fee : or edx, ebx ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x000002000043041e : or edx, ecx ; out dx, eax ; add edi, r14d ; jmp 0x200004303f0
0x00000200004ca501 : or edx, r8d ; xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x000002000009ac36 : or esi, 0x28 ; jmp 0x2000009aa98
0x0000020000157dec : or esi, dword ptr [rbp - 0x1d] ; mov rax, r10 ; pop rbx ; ret
0x000002000043abaa : or esi, dword ptr [rbx + 5] ; call 0x20000068fd6
0x0000020000609901 : or esi, ebp ; mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000439ac1 : or esi, ebp ; ret 0xe9ff
0x000002000043850b : or esi, ecx ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x0000020000104831 : or esi, edi ; ret
0x00000200004ea357 : or esi, esi ; add al, byte ptr [r9] ; jne 0x200004ea36a ; xor eax, eax ; ret
0x00000200000b37ce : or esi, esi ; ret
0x0000020000557305 : or esi, esi ; ret 0x7438
0x000002000060c75a : or esi, esi ; ret 0xf01
0x0000020000462d79 : or esi, esi ; ret 0xf02
0x0000020000434233 : or esi, esi ; ret 0xf04
0x0000020000062e03 : or esi, esi ; ret 0xf20
0x00000200003af9db : or esi, esi ; ret 0xf44
0x0000020000259236 : or esp, dword ptr [rax + 0x22] ; add byte ptr [rax], al ; add al, cl ; ret
0x00000200000fdc15 : or esp, dword ptr [rcx + rax] ; ret
0x000002000038212e : or esp, dword ptr [rsi + 0x41] ; mov dword ptr [rdi], ecx ; jmp 0x200003820fe
0x000002000020aba9 : or esp, dword ptr [rsi + 0xb] ; enter 0xf41, -0x49 ; ret 0xd166
0x00000200004f5807 : or esp, ebp ; ret
0x0000020000424276 : or esp, edi ; dec dword ptr [rax - 0x75] ; jl 0x200004242aa ; js 0x20000424213 ; ret
0x0000020000011542 : or esp, edi ; ret
0x000002000013e16e : or qword ptr [r8 + r9*8 + 8], rdx ; ret
0x000002000008fcde : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0xc0000095 ; ret
0x000002000013c2de : or qword ptr [r8], rax ; ret
0x0000020000662318 : or qword ptr [r9], 0xffffffffffffffff ; xor eax, eax ; ret
0x00000200005204ea : or qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013fd18 : or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000518a95 : or qword ptr [rcx], 0xffffffffffffffff ; mov eax, 0xc000000d ; ret
0x00000200000dea99 : or qword ptr [rcx], 0xffffffffffffffff ; ret
0x0000020000234e2c : or r11b, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000368f0d : or r11b, bpl ; leave ; ret
0x00000200001d5ce9 : or r11b, bpl ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x000002000049a0fa : or r11b, bpl ; ret
0x00000200000b61fb : or r11b, bpl ; ret 0x48cc
0x000002000012042f : or r11b, byte ptr [r8] ; add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x000002000000dc8b : or r11d, dword ptr [rdi - 0x6b] ; ret
0x000002000000e0aa : or r12b, byte ptr [r15 - 0x7f] ; ret
0x00000200005bf1e0 : or r14b, r14b ; ret
0x00000200000d0a1a : or r14b, r14b ; rol dword ptr [rcx], 0x75 ; out -0x75, eax ; ret
0x0000020000033e43 : or r15d, 1 ; jmp 0x20000033e10
0x00000200001e56a7 : or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x0000020000491941 : or r8b, bpl ; insb byte ptr [rdi], dx ; ret
0x0000020000432889 : or r8b, bpl ; ret
0x000002000046fb46 : or r8b, bpl ; sbb ebx, ecx ; ret 0x41ff
0x00000200000fd272 : or r8b, byte ptr [r8] ; or eax, 0xffffffff ; ret
0x00000200005932c1 : or r8b, r13b ; xchg eax, esp ; cld ; ret
0x00000200005d01ad : or r8d, ecx ; or r8d, edx ; jmp 0x200005d01d2
0x00000200005d01b0 : or r8d, edx ; jmp 0x200005d01cf
0x000002000018984e : or r8d, r9d ; jmp 0x200000a348a
0x00000200004da38d : or r9d, 0x40 ; shr r9d, 1 ; call 0x20000026655
0x0000020000073e44 : or rax, 0xc4834800 ; pop rbx ; ret
0x0000020000142252 : or rax, 0xffffffffffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x000002000037458e : or rax, 1 ; mov qword ptr [rdx], rax ; ret
0x00000200001841a3 : or rax, r10 ; jmp 0x200001841ad
0x00000200001841cb : or rax, r10 ; jmp 0x200001841d5
0x0000020000220707 : or rax, r8 ; jmp 0x20000220722
0x0000020000095e58 : or rax, r8 ; mov qword ptr [rcx + 0x10], rax ; jmp 0x20000095e2b
0x000002000015e08a : or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000010b316 : or rax, r9 ; or rax, rcx ; ret
0x000002000020752c : or rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010b319 : or rax, rcx ; ret
0x000002000022cdde : or rax, rdx ; add rsp, 0x28 ; ret
0x000002000017e023 : or rax, rdx ; jmp 0x2000017e04c
0x00000200001d1375 : or rax, rdx ; jmp 0x200001d138b
0x00000200001d1375 : or rax, rdx ; jmp 0x200001d1390
0x000002000021d712 : or rax, rdx ; jmp 0x2000021d728
0x00000200000ac80f : or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000157991 : or rax, rdx ; pop rdi ; ret
0x000002000015dd16 : or rax, rdx ; ret
0x0000020000295ed6 : or rbp, rax ; ret
0x00000200000f7f7b : or rcx, r10 ; mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000006ce52 : or rcx, rax ; cmp r9, rcx ; sbb eax, eax ; ret
0x00000200004c0fed : or rdx, r11 ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200001c7841 : or rdx, rax ; mov rax, rdx ; ret
0x000002000043ef76 : or word ptr [rax], ax ; add byte ptr [rbp - 0x74cf8a40], al ; ret
0x0000020000102680 : or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x000002000002b36d : or word ptr [rdx + 0x16], r8w ; ret
0x00000200000fce29 : out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000017fcc6 : out -0x11, eax ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200000c0312 : out -0x15, eax ; or ecx, dword ptr [rbx + 0x4c8348c2] ; ret
0x000002000005d72b : out -0x17, eax ; int 0xfe
0x0000020000371925 : out -0x17, eax ; push rbx ; cmp edi, edi ; push rsi ; ret
0x000002000003d988 : out -0x17, eax ; ret
0x0000020000484c57 : out -0x18, eax ; ret
0x000002000019ce31 : out -0x28, eax ; hlt ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200001d90e5
0x000002000043c2b5 : out -0x33, eax ; ret 0x49ff
0x00000200000124a2 : out -0x40, eax ; add al, byte ptr [rdx] ; ret
0x000002000048bf0d : out -0x43, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b56b5 : out -0x46, eax ; or al, byte ptr [rax] ; ret
0x000002000062829f : out -0x46, eax ; or eax, 0x8bc00000 ; ret 0x8b48
0x0000020000381e05 : out -0x48, eax ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000e5ce2 : out -0x50, eax ; add ebx, eax ; xor al, al ; ret
0x00000200000d0a20 : out -0x75, eax ; ret
0x0000020000630bf3 : out -0x75, eax ; ret 0x8b41
0x00000200000ae461 : out -0x77, eax ; pop rbp ; ret
0x000002000010640f : out -0x78, eax ; adc eax, 0x1d16b0 ; ret
0x000002000022de16 : out -1, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000231f51 : out -1, eax ; add rsp, 0x28 ; ret
0x0000020000204992 : out -1, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051a8a6 : out -1, eax ; add rsp, 0x58 ; ret
0x00000200004da2ef : out -1, eax ; call r9
0x0000020000545bd4 : out -1, eax ; jmp 0x200003c1ed7
0x0000020000443b8f : out -1, eax ; mov rcx, rbp ; call 0x2000007229c
0x00000200005801fd : out -1, eax ; nop ; jmp 0x2000047c458
0x000002000021c8d5 : out -1, eax ; ret
0x00000200005c2925 : out -1, eax ; ret 0x348
0x00000200001a9a63 : out -1, eax ; ret 0x5589
0x00000200001f8bd2 : out -1, eax ; xor edx, edx ; mov rcx, r13 ; call 0x20000294e29
0x0000020000509225 : out -5, eax ; ret
0x00000200004ba406 : out 0, eax ; add al, al ; ret
0x0000020000270f3d : out 0x11, al ; add byte ptr [rax], bl ; jmp qword ptr [rsi]
0x00000200004404c1 : out 0x12, eax ; add byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200000264f5 : out 0x13, al ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x00000200003c90e8 : out 0x17, al ; add byte ptr [rcx - 0x7d], al ; ret 0xe9e0
0x00000200003b3e26 : out 0x18, eax ; add byte ptr [rcx - 0x75], al ; adc al, 0x2b ; ret 0x341
0x0000020000383e9b : out 0x1a, eax ; add bh, dh ; ret
0x0000020000383ec4 : out 0x1a, eax ; add dh, dh ; ret
0x00000200001633db : out 0x1e, al ; add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x0000020000134552 : out 0x1f, al ; or byte ptr [rax], al ; xor eax, eax ; ret
0x000002000059c4c6 : out 0x21, al ; ret
0x000002000000ff91 : out 0x27, al ; ret 0xbe64
0x00000200001d6526 : out 0x28, al ; idiv edi ; add rsp, 0x78 ; ret
0x000002000017831b : out 0x2c, eax ; out dx, eax ; inc dword ptr [rbp - 0x75] ; ret
0x00000200002318ec : out 0x2e, eax ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000001e298 : out 0x30, al ; push rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x0000020000148f3b : out 0x30, eax ; ret 0x3b88
0x00000200000f44bf : out 0x39, al ; add byte ptr [rdx], bh ; ret
0x000002000016191b : out 0x3b, eax ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000016193b : out 0x3b, eax ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200000a57ad : out 0x3b, eax ; enter -0x72b8, 0x46 ; js 0x200000a57cd ; xchg eax, esp ; ret 0x8948
0x00000200001ac7c8 : out 0x3b, eax ; ret
0x000002000051d3ad : out 0x40, eax ; add al, byte ptr [rax] ; add al, ch ; or dword ptr [rdx], ecx ; ret
0x0000020000689156 : out 0x48, al ; add esp, 0x20 ; pop rbx ; ret
0x000002000050e91f : out 0x48, al ; lea edx, dword ptr [rsp + 0x48] ; call 0x2000013949d
0x0000020000140629 : out 0x48, al ; mov eax, ecx ; ret
0x000002000013ff1d : out 0x48, al ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200000a4e5b : out 0x48, eax ; add esp, 0x20 ; pop rbx ; ret
0x00000200004c019a : out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x0000020000482d4b : out 0x48, eax ; mov eax, ecx ; ret
0x000002000014134b : out 0x49, eax ; mov edx, edi ; mov rcx, r12 ; call r14
0x0000020000141388 : out 0x49, eax ; mov edx, edi ; mov rcx, rsi ; call r14
0x0000020000619a06 : out 0x4a, al ; leave ; push rsi ; ret
0x0000020000007586 : out 0x4b, eax ; cwde ; movsxd rdi, esi ; ret
0x00000200001a5c6c : out 0x4c, al ; sbb al, byte ptr [rax] ; add rcx, r8 ; jmp rcx
0x00000200000b6367 : out 0x4d, eax ; mov dword ptr [rax], edx ; ret
0x000002000065d44d : out 0x6a, eax ; mov ecx, 0x78c085ff ; or al, 0x8b ; ret
0x0000020000442454 : out 0x74, eax ; call 0x1ff838c2563
0x00000200001f8adb : out 0x76, al ; ret
0x00000200001b2f8a : out 0x79, al ; stc ; jmp qword ptr [rcx]
0x00000200004413e5 : out 0x7b, eax ; ret 0x48ff
0x0000020000675a36 : out 0x7c, al ; ret
0x000002000022d89e : out 0x86, al ; lock dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200006698ae : out 0x89, al ; ret
0x0000020000138879 : out 0x8a, al ; ret 0xccc3
0x000002000045349b : out 0x8b, al ; ret 0x4166
0x000002000043ac8a : out 0x9c, al ; leave ; dec dword ptr [rax - 0x75] ; ret
0x00000200004fba57 : out 0xa, al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f1869 : out 0xbb, al ; call qword ptr [rbx]
0x0000020000132f3d : out 0xc3, al ; xor eax, eax ; ret
0x000002000072022d : out 0xd, eax ; ret
0x00000200003f7e36 : out 0xe5, al ; ret
0x00000200000797e9 : out 0xe9, al ; ret
0x00000200003b517c : out 0xeb, al ; mov ah, 0x8b ; ret
0x0000020000141ba9 : out 0xeb, al ; or al, 0x49 ; mov eax, ebx ; ret
0x00000200006673e5 : out 0xed, al ; ret
0x000002000014208d : out 0xf, al ; mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200005c2763 : out 0xff, al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000051ed94 : out 0xff, al ; add rsp, 0x58 ; ret
0x00000200004ee1ce : out 0xff, al ; cmp rdx, r8 ; sete al ; ret
0x000002000044079b : out 0xff, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000042bb6f : out 0xff, al ; je 0x2000042bb82 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042dca7 : out 0xff, al ; jmp 0x2000042dc70
0x00000200001bb732 : out 0xff, al ; mov qword ptr [rcx], rax ; ret
0x00000200001d21c7 : out 0xff, al ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003f0ea3 : out 1, al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x17], dh ; call 0x200000bd0e9
0x0000020000545c23 : out 1, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test esp, eax ; ret 0xffe7
0x000002000059045d : out 1, al ; add byte ptr [rax], al ; jmp 0x200004ac6e9
0x0000020000450dfd : out 1, al ; add byte ptr [rax], al ; jne 0x20000450d9c ; call 0x200000bd0e8
0x000002000049ca95 : out 1, al ; add byte ptr [rax], al ; jne 0x2000049ca7d ; call 0x200000bd0e9
0x0000020000590df7 : out 1, al ; add byte ptr [rax], al ; jne 0x20000590e0a ; call 0x200000bd0e8
0x00000200005c0dfd : out 1, al ; add byte ptr [rax], al ; jne 0x200005c0e10 ; call 0x200000bd0e8
0x00000200000eb73c : out 1, al ; add byte ptr [rax], al ; ret
0x00000200005b79d2 : out 3, al ; call 0x200003a3bf4
0x0000020000176894 : out 4, eax ; add byte ptr [rbp + 0x33], al ; fucomi st(1) ; ret 0xeeed
0x0000020000020959 : out 5, eax ; add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x0000020000720bed : out 5, eax ; ret
0x000002000003d3c5 : out dx, al ; adc al, byte ptr [rax] ; mov rcx, rsi ; call rbx
0x0000020000668eae : out dx, al ; add al, byte ptr [rip - 0x3b7cb800] ; ret
0x00000200003e42bf : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x0000020000089eab : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x00000200006c7c4c : out dx, al ; add dword ptr [rbx + 0x458], edi ; mov rax, rdx ; jmp 0x200006c7c63
0x00000200006cac72 : out dx, al ; add dword ptr [rbx + 0x458], esi ; mov rax, rdx ; jmp 0x200006cac89
0x00000200006e5099 : out dx, al ; add dword ptr [rdi + 0x458], esi ; mov rax, rdx ; jmp 0x200006e50b0
0x00000200003d59e8 : out dx, al ; add ecx, dword ptr [rax + 3] ; ret 0x348
0x00000200004c84a5 : out dx, al ; add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x000002000008df8d : out dx, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006321f1 : out dx, al ; add rsp, 0x28 ; ret
0x00000200001221bb : out dx, al ; and al, byte ptr [rax] ; and dword ptr [rdi], ecx ; test ecx, ecx ; ret 8
0x0000020000419427 : out dx, al ; call 0x2000003e014
0x0000020000198602 : out dx, al ; call qword ptr [rax - 0xc3d9e17]
0x00000200001711cd : out dx, al ; dec dword ptr [rax - 0x3f] ; call 0x1ffc39b52ec
0x000002000057900e : out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000174391 : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000017573a : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000017252d : out dx, al ; dec dword ptr [rax - 0x75] ; xor byte ptr [rbp - 0x75], al ; ret
0x0000020000161c46 : out dx, al ; dec dword ptr [rax - 0x77] ; jmp 0x20000161c15
0x0000020000646a54 : out dx, al ; dec dword ptr [rax - 0x7d] ; ret 0x890b
0x00000200004c897f : out dx, al ; dec dword ptr [rbp - 0x74bb02a9] ; ret 0x8b48
0x000002000017412b : out dx, al ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x0000020000171b84 : out dx, al ; dec dword ptr [rbx + rdi + 0x3d] ; ret
0x00000200001713e5 : out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004c79c8 : out dx, al ; dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200004dbebc : out dx, al ; fdiv st(7), st(0) ; xor edx, edx ; call 0x20000048197
0x00000200001f664c : out dx, al ; in al, -1 ; add rsp, 0x28 ; ret
0x00000200004f5856 : out dx, al ; in al, dx ; ret
0x00000200003c6d78 : out dx, al ; inc dword ptr [rax] ; jne 0x200003c6d8b ; call 0x20000032fc7
0x0000020000577785 : out dx, al ; inc dword ptr [rcx - 0x7b] ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200005797ad : out dx, al ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0x0000020000174ef0 : out dx, al ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001747db : out dx, al ; inc dword ptr [rcx - 0xa] ; ret 0xf08
0x00000200001719b9 : out dx, al ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000ea262 : out dx, al ; insd dword ptr [rdi], dx ; add byte ptr es:[rbp + 1], dh ; ret
0x00000200000f5b08 : out dx, al ; je 0x200000f5a8f ; jmp 0x200000f5ad4
0x000002000051616e : out dx, al ; jmp rdx
0x0000020000011410 : out dx, al ; jp 0x2000001146b ; ret 0x7ec2
0x000002000043ec31 : out dx, al ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000103927 : out dx, al ; mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200005efbf8 : out dx, al ; mov dword ptr [rip - 0x2ff4ff], edx ; xor eax, eax ; ret
0x0000020000120fb0 : out dx, al ; mov eax, 1 ; ret
0x000002000071626d : out dx, al ; mov ebx, 0x6a15ffff ; scasb al, byte ptr [rdi] ; ret
0x000002000071621d : out dx, al ; mov ebx, 0xba15ffff ; scasb al, byte ptr [rdi] ; ret
0x00000200000b4934 : out dx, al ; mov qword ptr [r8], r10 ; ret
0x0000020000440606 : out dx, al ; mov rcx, r9 ; call 0x2000006fe27
0x000002000020a032 : out dx, al ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200000c4d73 : out dx, al ; or al, 0 ; xor eax, eax ; ret
0x000002000008cc43 : out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x00000200000acbef : out dx, al ; or eax, 0x7a894c00 ; sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000200001d92ef : out dx, al ; or eax, 0xffffffff ; ret
0x00000200003fda32 : out dx, al ; pop rax ; ret
0x00000200001751f6 : out dx, al ; push rsi ; ret
0x000002000017406a : out dx, al ; push rsi ; ret 0x7401
0x00000200001709d1 : out dx, al ; push rsi ; ret 0xf07
0x00000200001748d8 : out dx, al ; push rsi ; ret 0xf08
0x0000020000174996 : out dx, al ; push rsi ; ret 0xf10
0x0000020000140696 : out dx, al ; ret
0x0000020000104d93 : out dx, al ; ret 0x24
0x00000200003a00b8 : out dx, al ; ret 0x39
0x0000020000402123 : out dx, al ; ret 0x41ff
0x00000200003fd456 : out dx, al ; ret 0x45ff
0x0000020000673412 : out dx, al ; ret 0x48ff
0x0000020000722779 : out dx, al ; ret 0x49ff
0x00000200003d21d8 : out dx, al ; ret 0x4dff
0x000002000043b750 : out dx, al ; ret 0x66ff
0x00000200007225b2 : out dx, al ; ret 0x75ff
0x00000200005b5f52 : out dx, al ; ret 0x85ff
0x0000020000721d86 : out dx, al ; ret 0xa8ff
0x000002000043a0d2 : out dx, al ; ret 0xe9ff
0x0000020000545c1c : out dx, al ; ret 0xffe7
0x00000200001762e2 : out dx, al ; ret 0xfff4
0x000002000000d174 : out dx, al ; ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x0000020000596492 : out dx, al ; scasb al, byte ptr [rdi] ; jmp qword ptr [rcx]
0x00000200000b628e : out dx, al ; scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; ret
0x000002000043189e : out dx, al ; stosb byte ptr [rdi], al ; mov edi, 0xc48348ff ; pop rax ; ret
0x00000200001d49b4 : out dx, al ; str word ptr [rax - 0x7d] ; ret 0x4540
0x0000020000082fec : out dx, al ; xor al, al ; ret
0x00000200000c0768 : out dx, eax ; adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000ccbb9 : out dx, eax ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000045bae1 : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x000002000012e1e7 : out dx, eax ; add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000430420 : out dx, eax ; add edi, r14d ; jmp 0x200004303ee
0x00000200000ba922 : out dx, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000122086 : out dx, eax ; and al, byte ptr [rax] ; and dword ptr [rdi], ecx ; test ebx, esp ; ret 8
0x00000200001ac643 : out dx, eax ; bsr rcx, r9 ; jne 0x200001ac658 ; mov eax, r10d ; jmp 0x200001ac65f
0x00000200004ab177 : out dx, eax ; call rax
0x0000020000141f82 : out dx, eax ; cmp ax, dx ; jne 0x20000141f95 ; mov rax, rcx ; ret
0x00000200004d2a64 : out dx, eax ; cmp rax, r8 ; je 0x200004d2a39 ; ret
0x00000200003f767d : out dx, eax ; cwde ; ret
0x000002000017f279 : out dx, eax ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200001808a1 : out dx, eax ; dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x00000200001bf2b2 : out dx, eax ; dec dword ptr [rax - 0x75] ; je 0x200001bf2e5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000580451 : out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000017fa7c : out dx, eax ; dec dword ptr [rax - 0x75] ; ret 0xb849
0x000002000017fcc7 : out dx, eax ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001808ce : out dx, eax ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000018d58a : out dx, eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000178659 : out dx, eax ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000002000017cf86 : out dx, eax ; dec dword ptr [rax - 0x7f] ; ret
0x000002000017f953 : out dx, eax ; dec dword ptr [rbp - 0x75] ; ret 0xb70f
0x0000020000538a40 : out dx, eax ; dec dword ptr [rbx + 0x14e9807d] ; ret
0x000002000017db67 : out dx, eax ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200005819ee : out dx, eax ; dec dword ptr [rcx - 0x75] ; ret
0x000002000017bb9e : out dx, eax ; dec dword ptr [rcx - 0x75] ; ret 0x4df0
0x00000200001d1273 : out dx, eax ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret
0x000002000017831d : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret
0x000002000017e700 : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0x5ba
0x000002000017f41f : out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000057ce32 : out dx, eax ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x0000020000177cdf : out dx, eax ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x000002000017d289 : out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000017f840 : out dx, eax ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200004da2ed : out dx, eax ; insd dword ptr [rdi], dx ; out -1, eax ; call r9
0x0000020000560730 : out dx, eax ; jmp 0x2000041875d
0x0000020000596ce9 : out dx, eax ; jmp 0x200004c2f78
0x00000200004aaffa : out dx, eax ; lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000066ea96 : out dx, eax ; lodsb al, byte ptr [rsi] ; je 0x2000066eaa5 ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000020000033679 : out dx, eax ; mov al, 1 ; ret
0x0000020000724126 : out dx, eax ; mov bh, 0xff ; jmp 0x20000700383
0x00000200001da4e8 : out dx, eax ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200004d9ff2 : out dx, eax ; mov eax, 0xc000000e ; ret
0x00000200005f33fe : out dx, eax ; mov eax, 0xc0000225 ; ret
0x00000200007161ca : out dx, eax ; mov ebx, 0x15ff1eff ; or al, 0xaf ; ret
0x0000020000141f4f : out dx, eax ; mov rax, rcx ; ret
0x00000200005f3fd2 : out dx, eax ; mov rcx, rbp ; call 0x20000440212
0x0000020000020852 : out dx, eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x00000200005563a1 : out dx, eax ; or cl, ch ; ret 0xea07
0x000002000018e659 : out dx, eax ; or dword ptr [rax - 0x75], ecx ; ret
0x000002000005b21d : out dx, eax ; or dword ptr [rcx - 0xa], eax ; ret 0xf01
0x000002000017b225 : out dx, eax ; push rsi ; ret
0x0000020000024c1d : out dx, eax ; ret
0x000002000043a0c1 : out dx, eax ; ret 0x48ff
0x00000200007227cc : out dx, eax ; ret 0x49ff
0x00000200007224e9 : out dx, eax ; ret 0x75ff
0x000002000051ec41 : out dx, eax ; ret 0x85ff
0x00000200006ed78a : out dx, eax ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200000dc0c8 : out dx, eax ; test al, dl ; jne 0x200000dc0dd ; xor al, al ; ret
0x00000200000b492f : out dx, eax ; test r8, r8 ; je 0x200000b492c ; mov qword ptr [r8], r10 ; ret
0x00000200005bca63 : out dx, eax ; xor al, al ; ret
0x00000200006800ab : out dx, eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066e408 : out dx, eax ; xor eax, eax ; ret
0x0000020000107e21 : outsb dx, byte ptr [rsi] ; adc byte ptr [rax], al ; add rcx, rdx ; jmp rcx
0x00000200004e0d8d : outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x0000020000369907 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000036980a : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000036daf0 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; mov al, 1 ; ret
0x0000020000487952 : outsb dx, byte ptr [rsi] ; add dword ptr [rax + 0x3b], ecx ; ret
0x000002000006ebc3 : outsb dx, byte ptr [rsi] ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200002065ab : outsb dx, byte ptr [rsi] ; add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rdi + rcx + 0x48], 0x83 ; ret 0x310
0x00000200000be0b3 : outsb dx, byte ptr [rsi] ; and byte ptr [rcx + 0xf], cl ; mov edx, 0x830f0ae5 ; ret 0xd3f
0x0000020000129218 : outsb dx, byte ptr [rsi] ; clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005ca70c : outsb dx, byte ptr [rsi] ; cmp byte ptr [rax + 0xb], cl ; ret
0x00000200005e75d3 : outsb dx, byte ptr [rsi] ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000014a47 : outsb dx, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x00000200003793fb : outsb dx, byte ptr [rsi] ; movsxd rbp, eax ; ret 0xdabb
0x00000200005805e6 : outsb dx, byte ptr [rsi] ; or al, ch ; ret
0x00000200004fa0c2 : outsb dx, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret 0x8bff
0x00000200004cd19e : outsb dx, byte ptr [rsi] ; popfq ; ret 0xe9ff
0x000002000000d5fc : outsb dx, byte ptr [rsi] ; ret
0x000002000010785f : outsb dx, byte ptr [rsi] ; ret 0x1c
0x00000200004cccd6 : outsb dx, byte ptr [rsi] ; ret 0x48ff
0x00000200004fa0c3 : outsb dx, byte ptr [rsi] ; ret 0x8bff
0x00000200005b45ce : outsb dx, byte ptr [rsi] ; ret 0xffab
0x00000200003de5ae : outsb dx, byte ptr [rsi] ; ret 9
0x00000200000a6e22 : outsb dx, byte ptr [rsi] ; sbb byte ptr [rdi], cl ; test ecx, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000f7dab : outsb dx, byte ptr [rsi] ; str word ptr [rax + 3] ; iretd ; jmp rcx
0x000002000066891e : outsb dx, byte ptr [rsi] ; xchg dword ptr [rdx], eax ; add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x000002000000e6da : outsb dx, byte ptr [rsi] ; xchg eax, ebx ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000026d3cc : outsb dx, byte ptr [rsi] ; xlatb ; adc byte ptr [rax], al ; pushfq ; ret
0x00000200001a6fad : outsb dx, byte ptr [rsi] ; xor esi, esi ; inc dword ptr [rbp + 0x3b] ; ret
0x00000200003a9374 : outsd dx, dword ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rbx - 0x7abe992a], cl ; ret 0x850f
0x0000020000078a12 : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004eb20c : outsd dx, dword ptr [rsi] ; add al, 0x12 ; call 0x200003a0601
0x0000020000369919 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000036981c : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000664db0 : outsd dx, dword ptr [rsi] ; add al, ch ; ret 0x48ff
0x000002000025d415 : outsd dx, dword ptr [rsi] ; add byte ptr [rax - 0x13ffb98e], r9b ; ret
0x0000020000662215 : outsd dx, dword ptr [rsi] ; add eax, 0xc4834800 ; pop rax ; ret
0x0000020000039929 : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; jmp 0x200000397e7
0x00000200005a1ded : outsd dx, dword ptr [rsi] ; call rax
0x000002000023d27c : outsd dx, dword ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmp dword ptr [rax], eax ; ret 0x23
0x000002000019a5eb : outsd dx, dword ptr [rsi] ; hlt ; push rsi ; ret
0x00000200000b870e : outsd dx, dword ptr [rsi] ; inc dword ptr [rcx - 0x76] ; or ecx, dword ptr [rcx - 1] ; ret
0x000002000017586f : outsd dx, dword ptr [rsi] ; lea rcx, qword ptr [r13 + 0x30] ; jmp 0x20000061b62
0x000002000017586e : outsd dx, dword ptr [rsi] ; lea rcx, qword ptr [r13 + 0x30] ; jmp 0x20000061b63
0x0000020000675a12 : outsd dx, dword ptr [rsi] ; mov dh, 0xcd ; jmp qword ptr [rcx]
0x000002000051f173 : outsd dx, dword ptr [rsi] ; mov ebx, eax ; call 0x2000014dc06
0x000002000051f172 : outsd dx, dword ptr [rsi] ; mov ebx, eax ; call 0x2000014dc07
0x00000200003b2de7 : outsd dx, dword ptr [rsi] ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x00000200000fa93c : outsd dx, dword ptr [rsi] ; or al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ecaed : outsd dx, dword ptr [rsi] ; or byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003c6d77 : outsd dx, dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; jne 0x200003c6d8c ; call 0x20000032fc8
0x00000200003c6d76 : outsd dx, dword ptr [rsi] ; out dx, al ; inc dword ptr [rax] ; jne 0x200003c6d8d ; call 0x20000032fc9
0x000002000017b224 : outsd dx, dword ptr [rsi] ; out dx, eax ; push rsi ; ret
0x00000200005aa94d : outsd dx, dword ptr [rsi] ; pop rdx ; ret
0x000002000043ad3d : outsd dx, dword ptr [rsi] ; push rbp ; ret
0x0000020000014a6a : outsd dx, dword ptr [rsi] ; ret
0x00000200004709cb : outsd dx, dword ptr [rsi] ; ret 0x10
0x000002000012287d : outsd dx, dword ptr [rsi] ; ret 0x18
0x00000200004492b8 : outsd dx, dword ptr [rsi] ; ret 0x48ff
0x0000020000513d69 : outsd dx, dword ptr [rsi] ; ret 0x84ff
0x000002000070d4cd : outsd dx, dword ptr [rsi] ; ret 0xff9d
0x00000200005ccf3d : outsd dx, dword ptr [rsi] ; ret 0xffa9
0x000002000021bc7c : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx - 0x75], al ; ret
0x00000200001935fd : outsd dx, dword ptr [rsi] ; xor byte ptr [rdx], dl ; add byte ptr [rax + 0x2b], cl ; ret 0x3d48
0x0000020000511ee6 : outsd dx, dword ptr es:[rsi] ; ret
0x00000200004827ef : outsd dx, dword ptr gs:[rsi] ; ret
0x000002000036970d : pause ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x20000369716 ; ret
0x00000200001d8b43 : pause ; mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000008f126 : pause ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x2000008f12f ; ret
0x000002000020b739 : pause ; test al, 1 ; je 0x2000020b72a ; xor al, al ; ret
0x00000200000eb84b : pause ; xor al, al ; ret
0x00000200001d8e47 : pause ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004f9950 : pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x0000020000227100 : pcmpeqw mm0, qword ptr [rdx + rcx*4] ; ret 0x8eb
0x0000020000252a50 : pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200003d33f1 : pmaddwd mm1, mm1 ; push rsi ; ret
0x0000020000671183 : pop qword ptr [r8 + rax] ; add rsp, 0x58 ; ret
0x0000020000670eff : pop qword ptr [rax + rax] ; add rsp, 0x28 ; ret
0x000002000067108b : pop qword ptr [rax + rax] ; add rsp, 0x38 ; ret
0x0000020000671184 : pop qword ptr [rax + rax] ; add rsp, 0x58 ; ret
0x00000200003ffa87 : pop qword ptr [rax - 0x18000000] ; lcall ptr [rcx] ; ret
0x00000200003ffdd3 : pop qword ptr [rax - 0x18000000] ; mov bl, 0x16 ; ret
0x00000200005f0f48 : pop qword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200004f06d9 : pop qword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000011896 : pop qword ptr [rcx + 0x6a] ; sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x00000200006e5cdd : pop qword ptr [rsp + rax] ; add byte ptr [rbp - 0x75], al ; ret 0xb941
0x00000200006c80df : pop qword ptr [rsp + rax] ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200006c7325 : pop qword ptr [rsp + rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006d9191 : pop qword ptr [rsp + rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001cc569 : pop r10 ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000001051b : pop r10 ; and eax, dword ptr [rcx] ; ret 0xfa65
0x00000200000e5d48 : pop r12 ; add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x00000200001521b6 : pop r12 ; add rsp, 8 ; ret
0x00000200003683b4 : pop r12 ; mov r9, rcx ; je 0x200003683c8 ; mov al, r10b ; ret
0x0000020000157c53 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000002000038f182 : pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000026932 : pop r12 ; pop rbp ; ret
0x000002000002f675 : pop r12 ; pop rbx ; pop rbp ; ret
0x000002000006bf60 : pop r12 ; pop rbx ; ret
0x0000020000118dfd : pop r12 ; pop rcx ; ret
0x000002000008e6b3 : pop r12 ; pop rdi ; jmp rax
0x0000020000077019 : pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000031088 : pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000786a7 : pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0ed : pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001c5db4 : pop r12 ; pop rdi ; pop rcx ; ret
0x00000200001c5b88 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000282bd : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a50 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026ca0 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000024f11 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3b0 : pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002709c : pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002528e : pop r12 ; pop rdi ; ret
0x00000200001c5355 : pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000f078d : pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b476c : pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000070a70 : pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000006433d : pop r12 ; pop rsi ; pop rbx ; ret
0x000002000005d6e1 : pop r12 ; pop rsi ; ret
0x0000020000024e30 : pop r12 ; ret
0x000002000038f180 : pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000026930 : pop r13 ; pop r12 ; pop rbp ; ret
0x000002000002f673 : pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000006bf5e : pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000118dfb : pop r13 ; pop r12 ; pop rcx ; ret
0x000002000008e6b1 : pop r13 ; pop r12 ; pop rdi ; jmp rax
0x0000020000077017 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000041b2f2 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000786a5 : pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0eb : pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001c5b86 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000002bc52 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a4e : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026c9e : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000024f0f : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3ae : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000035694 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002528c : pop r13 ; pop r12 ; pop rdi ; ret
0x00000200001c5353 : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000f078b : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b476a : pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000070a6e : pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d6df : pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000d4471 : pop r13 ; pop r12 ; ret
0x0000020000157c55 : pop r13 ; pop r14 ; pop r15 ; ret
0x000002000007465f : pop r13 ; pop rbp ; ret
0x0000020000044152 : pop r13 ; pop rbx ; pop rbp ; ret
0x0000020000076b86 : pop r13 ; pop rbx ; ret
0x000002000002d997 : pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000009ec37 : pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000059d8d : pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001cb9b7 : pop r13 ; pop rdi ; pop rcx ; ret
0x00000200000405ca : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046da8e : pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009c819 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007d488 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x00000200000bdb34 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029116 : pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000b9ab4 : pop r13 ; pop rdi ; ret
0x000002000067cc90 : pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000042408 : pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007aa33 : pop r13 ; pop rsi ; pop rbx ; ret
0x0000020000025532 : pop r13 ; ret
0x000002000043b41c : pop r14 ; jmp 0x20000068fd5
0x000002000044cc0d : pop r14 ; jmp 0x200000712d1
0x0000020000515e32 : pop r14 ; jmp 0x2000013bc71
0x000002000066f5f7 : pop r14 ; jmp rax
0x000002000041c28b : pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000031086 : pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061eafa : pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001c5db2 : pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200000282bb : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000853ff : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000002c9bb : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004b8d92 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002709a : pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000035a0c : pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000393c6e : pop r14 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bc7f3 : pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006433b : pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000024e2e : pop r14 ; pop r12 ; ret
0x000002000002692e : pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000002f671 : pop r14 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000006bf5c : pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000118df9 : pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x000002000008e6af : pop r14 ; pop r13 ; pop r12 ; pop rdi ; jmp rax
0x0000020000077015 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000041b2f0 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000040c15b : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000614b00 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000027a4c : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000024f0d : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3ac : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000035692 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002528a : pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x00000200000f0789 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000070a6c : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d6dd : pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000d446f : pop r14 ; pop r13 ; pop r12 ; ret
0x000002000007465d : pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000076b84 : pop r14 ; pop r13 ; pop rbx ; ret
0x00000200000acb94 : pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000059d8b : pop r14 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001cb9b5 : pop r14 ; pop r13 ; pop rdi ; pop rcx ; ret
0x00000200000405c8 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005f42f2 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009c817 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000bdb32 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029114 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000b9ab2 : pop r14 ; pop r13 ; pop rdi ; ret
0x000002000067cc8e : pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000042406 : pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025530 : pop r14 ; pop r13 ; ret
0x0000020000157c57 : pop r14 ; pop r15 ; ret
0x000002000009d7ac : pop r14 ; pop rbp ; ret
0x0000020000084f23 : pop r14 ; pop rbx ; pop rbp ; ret
0x000002000009147a : pop r14 ; pop rcx ; ret
0x00000200000a4f93 : pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000644c1d : pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000480aa : pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000ed189 : pop r14 ; pop rdi ; pop rcx ; ret
0x000002000005e402 : pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000080b77 : pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009db32 : pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003318a : pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001395d6 : pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000025316 : pop r14 ; pop rdi ; pop rsi ; ret
0x000002000002632f : pop r14 ; pop rdi ; ret
0x000002000006ecd6 : pop r14 ; pop rsi ; pop rbp ; ret
0x00000200001415e9 : pop r14 ; pop rsi ; ret
0x0000020000024a78 : pop r14 ; ret
0x000002000038aa62 : pop r15 ; jmp 0x20000026d20
0x000002000042f9e7 : pop r15 ; mov qword ptr [rsp + 0x20], rax ; call 0x2000042bc15
0x00000200001e8d75 : pop r15 ; pop r12 ; pop rbp ; ret
0x0000020000393581 : pop r15 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000039cb4f : pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003c5ccc : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006ffa44 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000629951 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c11ea : pop r15 ; pop r12 ; pop rdi ; ret
0x000002000038f17e : pop r15 ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003d5cc0 : pop r15 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200004f0bdb : pop r15 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000043eab6 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000786a3 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0e9 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003b7e9d : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012f7c2 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000b4768 : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000405e5c : pop r15 ; pop r13 ; pop rbp ; ret
0x000002000002d995 : pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000040b6a : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046da8c : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b77f9 : pop r15 ; pop r13 ; pop rdi ; ret
0x000002000007aa31 : pop r15 ; pop r13 ; pop rsi ; pop rbx ; ret
0x000002000012b267 : pop r15 ; pop r13 ; ret
0x0000020000031084 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061eaf8 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001c5db0 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000040fdc7 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004b8d90 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000027098 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004a37ae : pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000bc7f1 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000064339 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000024e2c : pop r15 ; pop r14 ; pop r12 ; ret
0x000002000002692c : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000006bf5a : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000118df7 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x0000020000025288 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000005d6db : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200001caa9f : pop r15 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200001eab04 : pop r15 ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000076b82 : pop r15 ; pop r14 ; pop r13 ; pop rbx ; ret
0x00000200000acb92 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001cb9b3 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rcx ; ret
0x00000200000bdb30 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029112 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000067cc8c : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000042404 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002552e : pop r15 ; pop r14 ; pop r13 ; ret
0x000002000009d7aa : pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000084f21 : pop r15 ; pop r14 ; pop rbx ; pop rbp ; ret
0x0000020000091478 : pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000644c1b : pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f6a5 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000080b75 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000411076 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000033188 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001395d4 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000453938 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000002632d : pop r15 ; pop r14 ; pop rdi ; ret
0x000002000006ecd4 : pop r15 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200001415e7 : pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000085aa5 : pop r15 ; pop r14 ; ret
0x00000200004ee41a : pop r15 ; pop rbx ; pop rbp ; ret
0x0000020000123c2a : pop r15 ; pop rdi ; pop rbp ; ret
0x00000200004c6602 : pop r15 ; pop rdi ; pop rbx ; ret
0x00000200001e9a8b : pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000edc9c : pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000682b0 : pop r15 ; pop rdi ; pop rsi ; ret
0x000002000007b218 : pop r15 ; pop rsi ; pop rbx ; ret
0x000002000008fa51 : pop r15 ; ret
0x00000200000de59e : pop r8 ; and rax, 0xfffffffffffffff9 ; ret
0x000002000050c1b5 : pop r8 ; je 0x2000050c1be ; ret
0x00000200000d10bb : pop r8 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000010adc9 : pop r8 ; ret
0x000002000044aa65 : pop r8 ; ret 0x48ff
0x00000200001bc1ca : pop r9 ; add rsp, 0x28 ; ret
0x0000020000514dc0 : pop r9 ; call rax
0x00000200004feaa9 : pop rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000040c3ff : pop rax ; adc byte ptr [rdi + rbp - 1], dh ; ret 0x3b41
0x00000200001cc95b : pop rax ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006e369f : pop rax ; add al, 0 ; add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e36b2
0x00000200006cb03a : pop rax ; add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006cb04d
0x00000200006d67d8 : pop rax ; add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006d67eb
0x00000200006dfcf7 : pop rax ; add al, 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006dfd0a
0x00000200006c87f7 : pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c5f59 : pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c93fe : pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x6beb
0x00000200006c626c : pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006cc9be : pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xeeb
0x00000200006d1a96 : pop rax ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006e5d58 : pop rax ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200006d5ab4 : pop rax ; add al, 0 ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5ac7
0x00000200006d5b35 : pop rax ; add al, 0 ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5b48
0x00000200006cd927 : pop rax ; add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x00000200000cc7e9 : pop rax ; add al, 0xf ; ret
0x0000020000510f08 : pop rax ; add al, byte ptr [rax] ; add al, ch ; int 0xc3
0x00000200003dd5f6 : pop rax ; add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000369878 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000036977a : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006dd4b4 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000142d11 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000413bcd : pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000123595 : pop rax ; add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000688807 : pop rax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014e555 : pop rax ; add byte ptr [rax], al ; add cl, ch ; and ah, al ; add byte ptr [rax], al ; ret
0x00000200000963f0 : pop rax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000026834e : pop rax ; add byte ptr [rbx], bh ; add byte ptr [rcx], bl ; ret 0x5309
0x00000200006d4cbe : pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x0000020000566b01 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000637b43 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200000ab7d0 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000020000150555 : pop rax ; add dword ptr [rax], eax ; add cl, ch ; and al, al ; add byte ptr [rax], al ; ret
0x000002000070780b : pop rax ; add r13d, ebx ; call 0x200003f3a5e
0x00000200000d62e7 : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005d3691 : pop rax ; add rsp, 0x30 ; pop r12 ; ret
0x00000200000927df : pop rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000032f68 : pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000097863 : pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000022a4be : pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000091229 : pop rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200002067ec : pop rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009395b : pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000063a20 : pop rax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000003ccb5 : pop rax ; add rsp, 0x38 ; ret
0x000002000011a54c : pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000013a775 : pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000024949 : pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000431725 : pop rax ; and al, ch ; test ch, bl ; ret
0x0000020000077eea : pop rax ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000709774 : pop rax ; and byte ptr [rcx - 0x75], cl ; ret
0x0000020000552231 : pop rax ; and ch, cl ; dec dword ptr [rbp - 0x74be00af] ; ret 0x55e9
0x00000200003b2814 : pop rax ; and dh, dh ; ret
0x00000200000de59f : pop rax ; and rax, 0xfffffffffffffff9 ; ret
0x000002000021f911 : pop rax ; call 0x20000214181
0x000002000000a30a : pop rax ; call qword ptr [rdx]
0x00000200006d170e : pop rax ; call r10
0x00000200003ffe85 : pop rax ; call rax
0x00000200006d5290 : pop rax ; call rbx
0x0000020000139a90 : pop rax ; cmp dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005fcd50 : pop rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; push rsi ; ret
0x000002000018eb94 : pop rax ; dec dword ptr [rax - 0x75] ; ret
0x00000200000bfc64 : pop rax ; fisttp word ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000723350 : pop rax ; insb byte ptr [rdi], dx ; xchg eax, ecx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000022f3b : pop rax ; jae 0x20000022f88 ; add edi, dword ptr [rsi + 0x21] ; je 0x20000022ef1 ; pop rdx ; ret 0x594d
0x000002000050c1b6 : pop rax ; je 0x2000050c1bd ; ret
0x0000020000071dbe : pop rax ; jmp 0x20000071c75
0x000002000018a6d5 : pop rax ; jmp 0x200000a69c5
0x000002000018a6d4 : pop rax ; jmp 0x200000a69c6
0x0000020000132be0 : pop rax ; jmp 0x20000132ba8
0x0000020000139645 : pop rax ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x000002000050d78e : pop rax ; lea rcx, qword ptr [r14 - 0x10] ; call 0x2000013903c
0x00000200002129fb : pop rax ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200002912c0 : pop rax ; mov ah, byte ptr [rbx] ; stc ; mov ah, byte ptr [rbx] ; ret 0x638c
0x00000200000e7cb6 : pop rax ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000038f4ef : pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x00000200004dde77 : pop rax ; mov dl, 0xff ; call 0x2000008a165
0x00000200001fd8c2 : pop rax ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000037e3ce : pop rax ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000038ae1e : pop rax ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001057b8 : pop rax ; mov eax, r10d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001fde68 : pop rax ; mov qword ptr [r9], rax ; ret
0x00000200000d10bc : pop rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000063e54e : pop rax ; mov r8b, 2 ; mov rcx, rax ; call 0x2000047a805
0x0000020000102711 : pop rax ; mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a105f : pop rax ; mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042157c : pop rax ; mov rdx, qword ptr [rsi + 0x60] ; call 0x2000015d887
0x000002000042157b : pop rax ; mov rdx, qword ptr [rsi + 0x60] ; call 0x2000015d888
0x00000200000fc69a : pop rax ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000490b7d : pop rax ; or al, ch ; clc ; xchg eax, ecx ; ret
0x0000020000111976 : pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200006cc523 : pop rax ; or byte ptr [rbp - 0x77], al ; push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200004451a6 : pop rax ; or dh, dh ; ret
0x00000200001620f2 : pop rax ; pop rbp ; pop rbx ; ret
0x000002000014da2f : pop rax ; pop rcx ; ret
0x000002000022d7fd : pop rax ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000673f64 : pop rax ; popfq ; ret
0x00000200000339a1 : pop rax ; ret
0x000002000006c8d0 : pop rax ; ret 0x10
0x000002000024d280 : pop rax ; ret 0x24
0x000002000044cd59 : pop rax ; ret 0x44ff
0x000002000000f107 : pop rax ; ret 0x4609
0x000002000044aa66 : pop rax ; ret 0x48ff
0x000002000053836a : pop rax ; ret 0x4cff
0x00000200002788c0 : pop rax ; ret 0x68
0x000002000000fc88 : pop rax ; ret 0xc2c7
0x000002000066f572 : pop rax ; ret 0xccff
0x00000200004a1964 : pop rax ; ret 0xffcb
0x00000200003f7da4 : pop rax ; ret 0xffe9
0x000002000071edb9 : pop rax ; ret 0xfffc
0x00000200007139b4 : pop rax ; salc ; ret
0x00000200000dea4d : pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000046bb62 : pop rax ; sub byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; test byte ptr [rdi], bl ; call qword ptr [rax]
0x00000200006f589f : pop rax ; sub rdx, r8 ; jne 0x200006f5896 ; ret
0x00000200006f589e : pop rax ; sub rdx, r8 ; jne 0x200006f5897 ; ret
0x000002000001fcf8 : pop rax ; test byte ptr [r14], dil ; leave ; ret 0x21d1
0x00000200001c28a5 : pop rax ; test eax, eax ; je 0x200001c28b5 ; mov dl, 1 ; mov al, dl ; ret
0x00000200005415b9 : pop rax ; test rax, rax ; je 0x200005415d1 ; mov rcx, r15 ; call rax
0x000002000022b237 : pop rax ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200004a3a22 : pop rax ; xor eax, eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006f5cc8 : pop rax ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200005ef19b : pop rbp ; adc bh, dh ; inc dword ptr [rbp - 0xe58740] ; ret
0x000002000007ca20 : pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008d2ff : pop rbp ; add dh, dh ; ret
0x000002000004b85e : pop rbp ; add dword ptr [rcx - 0x7c], eax ; ret
0x000002000010647d : pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x00000200000107da : pop rbp ; call 0x1ffffed9c6a
0x00000200001b1c9f : pop rbp ; clc ; sbb dword ptr [rax], eax ; call r8
0x00000200004a7766 : pop rbp ; cmp byte ptr [rax - 0x7f], cl ; ret
0x000002000015d72c : pop rbp ; cwde ; add rsp, 0x68 ; ret
0x000002000050fffb : pop rbp ; cwde ; ret 0x8bff
0x000002000007eaf6 : pop rbp ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000538503 : pop rbp ; enter -0x76b4, 0x75 ; jo 0x20000538552 ; call qword ptr [rsi]
0x0000020000450e34 : pop rbp ; enter 0x33ff, -0x40 ; add rsp, 0x28 ; ret
0x0000020000020748 : pop rbp ; fild dword ptr gs:[rcx] ; ret
0x00000200001b5f9b : pop rbp ; fisttp word ptr [rbx + 0xfc085f8] ; mov dword ptr [rcx], edx ; ret
0x00000200005fae46 : pop rbp ; fsubr st(0) ; ret
0x0000020000463fae : pop rbp ; in al, -1 ; mov rdx, rdi ; call 0x2000008a169
0x00000200005c26c9 : pop rbp ; jmp 0x2000038e9bb
0x00000200005c26c8 : pop rbp ; jmp 0x2000038e9bc
0x00000200005a596d : pop rbp ; lahf ; call r15
0x000002000056dc92 : pop rbp ; mov al, 0xf6 ; ret
0x00000200003a8615 : pop rbp ; mov byte ptr [rax - 0x7f], cl ; ret
0x00000200005c30cd : pop rbp ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000053ea0d : pop rbp ; or byte ptr [rcx + rcx*4 + 0x6d], cl ; and byte ptr [rcx + 3], al ; ret
0x000002000021c8d4 : pop rbp ; out -1, eax ; ret
0x000002000038f181 : pop rbp ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000026931 : pop rbp ; pop r12 ; pop rbp ; ret
0x000002000002f674 : pop rbp ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000006bf5f : pop rbp ; pop r12 ; pop rbx ; ret
0x0000020000118dfc : pop rbp ; pop r12 ; pop rcx ; ret
0x000002000008e6b2 : pop rbp ; pop r12 ; pop rdi ; jmp rax
0x0000020000077018 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000041b2f3 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000786a6 : pop rbp ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0ec : pop rbp ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001c5b87 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000002bc53 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a4f : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026c9f : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000024f10 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3af : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000035695 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002528d : pop rbp ; pop r12 ; pop rdi ; ret
0x00000200001c5354 : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000f078c : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b476b : pop rbp ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000070a6f : pop rbp ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d6e0 : pop rbp ; pop r12 ; pop rsi ; ret
0x00000200000d4472 : pop rbp ; pop r12 ; ret
0x0000020000157c56 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000020000074660 : pop rbp ; pop rbp ; ret
0x0000020000044153 : pop rbp ; pop rbx ; pop rbp ; ret
0x0000020000080967 : pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000282c1 : pop rbp ; pop rbx ; ret
0x000002000002d998 : pop rbp ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000009ec38 : pop rbp ; pop rdi ; pop rbp ; ret
0x0000020000059d8e : pop rbp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001cb9b8 : pop rbp ; pop rdi ; pop rcx ; ret
0x00000200000405cb : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046da8f : pop rbp ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009c81a : pop rbp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007d489 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x00000200000bdb35 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029117 : pop rbp ; pop rdi ; pop rsi ; ret
0x00000200000b9ab5 : pop rbp ; pop rdi ; ret
0x000002000067cc91 : pop rbp ; pop rsi ; pop rbp ; ret
0x0000020000042409 : pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007aa34 : pop rbp ; pop rsi ; pop rbx ; ret
0x00000200004a1cc7 : pop rbp ; push rdx ; ret
0x0000020000505f97 : pop rbp ; push rsi ; sbb al, byte ptr [rax] ; ret
0x0000020000011802 : pop rbp ; ret
0x00000200000b6d26 : pop rbp ; ret 0x21
0x000002000067c4db : pop rbp ; ret 0x48ff
0x000002000072cb97 : pop rbp ; ret 0xc7ff
0x0000020000192019 : pop rbp ; ret 0xfff2
0x00000200000c0131 : pop rbp ; rol byte ptr [rbp + 0x33], 1 ; ror byte ptr [rax - 0x73], 0x3d ; ret
0x00000200000998cd : pop rbp ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4808
0x00000200001efce3 : pop rbp ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200005edf5e : pop rbp ; sbb al, 0x8b ; ret 0xea2b
0x000002000011de7d : pop rbp ; sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000081b36 : pop rbp ; sbb byte ptr [rcx - 0xa], al ; ret
0x00000200004ab001 : pop rbp ; scasd eax, dword ptr [rdi] ; call rax
0x000002000000eb19 : pop rbp ; sub al, byte ptr [rdx] ; shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x000002000003a6df : pop rbp ; sub byte ptr [rcx + 3], al ; and byte ptr [r8 - 0x7f], r9b ; ret
0x0000020000075b1e : pop rbp ; sub dh, dh ; ret
0x00000200001003db : pop rbp ; sub ecx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000049e3f2 : pop rbp ; test al, 0xe8 ; jae 0x2000049e3d8 ; ret
0x0000020000121b87 : pop rbp ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x000002000000a2b3 : pop rbx ; adc ah, byte ptr [rax] ; salc ; jmp qword ptr [rcx]
0x000002000000a397 : pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x000002000014e5b5 : pop rbx ; add byte ptr [rax], al ; add cl, ch ; ret 0xdf
0x00000200000da67f : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x0000020000615df4 : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200001505b5 : pop rbx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xbf
0x0000020000149e2d : pop rbx ; add eax, 0xff410000 ; ret
0x00000200000418c9 : pop rbx ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x00000200006cf07e : pop rbx ; add rsp, 8 ; jmp r8
0x000002000007221d : pop rbx ; and al, byte ptr [rsi] ; add dh, dh ; ret
0x0000020000601d20 : pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200004e4799 : pop rbx ; fmul dword ptr [rbx] ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000040d61e : pop rbx ; in al, dx ; push qword ptr [rdx + 0x3638e801] ; ret 0x48ff
0x00000200005ce6a1 : pop rbx ; jae 0x200005ce679 ; push rsi ; ret
0x000002000000eb58 : pop rbx ; jb 0x2000000eb61 ; ret
0x0000020000553bf3 : pop rbx ; jmp 0x1fffd1833fc
0x000002000048cdbd : pop rbx ; jmp 0x20000068fd3
0x0000020000680904 : pop rbx ; jmp r10
0x000002000068090c : pop rbx ; jmp r8
0x00000200000dcd85 : pop rbx ; jmp rax
0x0000020000530bef : pop rbx ; loope 0x20000530bfa ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005c32e9 : pop rbx ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x0000020000407031 : pop rbx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x65ff
0x00000200004a4cdb : pop rbx ; or bh, dh ; ret
0x000002000007faac : pop rbx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200003a43d8 : pop rbx ; or byte ptr [rax - 0x75], cl ; retf ; call 0x200003a066b
0x0000020000217f8e : pop rbx ; or byte ptr [rbp + 5], dh ; mov eax, r10d ; jmp 0x20000217fa4
0x0000020000249b79 : pop rbx ; or dword ptr [rax], eax ; ret
0x00000200001591f1 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000026ca4 : pop rbx ; pop rbp ; ret
0x000002000007d48c : pop rbx ; pop rcx ; ret
0x00000200001521b4 : pop rbx ; pop rdi ; pop r12 ; add rsp, 8 ; ret
0x00000200001549bd : pop rbx ; pop rdi ; pop rsi ; ret
0x0000020000024bc3 : pop rbx ; ret
0x00000200004d0036 : pop rbx ; ret 0x45ff
0x000002000067c75f : pop rbx ; ret 0x48ff
0x000002000066ed15 : pop rbx ; ret 0xffbb
0x00000200004b4f11 : pop rbx ; ret 0xffc8
0x00000200004d00c3 : pop rbx ; ret 0xfff
0x00000200003b58bf : pop rcx ; adc bh, dh ; ret
0x00000200006f89c2 : pop rcx ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200000cd339 : pop rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200004c2d4b : pop rcx ; adc byte ptr [rsp + rdx - 1], dh ; ret 0x8349
0x0000020000369889 : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000036978c : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001617d9 : pop rcx ; add byte ptr [r8 + 0x30c48348], dl ; pop rbp ; ret
0x00000200001647c2 : pop rcx ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000014e575 : pop rcx ; add byte ptr [rax], al ; add cl, ch ; add ah, al ; add byte ptr [rax], al ; ret
0x000002000051c902 : pop rcx ; add byte ptr [rax], al ; call r14
0x00000200000fdb7b : pop rcx ; add byte ptr [rax], al ; ret
0x00000200000fdb6c : pop rcx ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x200000fdb7d ; ret
0x00000200000fdb6b : pop rcx ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x200000fdb7e ; ret
0x0000020000071c3d : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000150575 : pop rcx ; add dword ptr [rax], eax ; add cl, ch ; add al, al ; add byte ptr [rax], al ; ret
0x00000200000f1775 : pop rcx ; add dword ptr [rbp + rcx*4 + 4], ecx ; add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200001bc1cb : pop rcx ; add rsp, 0x28 ; ret
0x00000200001952b2 : pop rcx ; and byte ptr [rax - 0x75], cl ; ret
0x000002000022b20d : pop rcx ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200000aa35e : pop rcx ; and byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x7f] ; ret 0
0x00000200000dbd4a : pop rcx ; and byte ptr [rcx + 0x2b], cl ; ret 0xe2eb
0x0000020000514dc1 : pop rcx ; call rax
0x0000020000211bf1 : pop rcx ; clc ; jmp 0x20000211bff
0x0000020000211d09 : pop rcx ; clc ; jmp 0x20000211d17
0x00000200002129b8 : pop rcx ; clc ; jmp 0x200002129c6
0x0000020000212ad8 : pop rcx ; clc ; jmp 0x20000212ae6
0x0000020000212c62 : pop rcx ; clc ; jmp 0x20000212c70
0x0000020000212e2a : pop rcx ; clc ; jmp 0x20000212e38
0x0000020000214286 : pop rcx ; clc ; jmp 0x20000214294
0x000002000021443a : pop rcx ; clc ; jmp 0x20000214448
0x00000200004cf44f : pop rcx ; fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x000002000067353b : pop rcx ; in eax, dx ; ret 0x48ff
0x0000020000532446 : pop rcx ; jmp rsp
0x0000020000634159 : pop rcx ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x000002000006e719 : pop rcx ; loope 0x2000006e6a7 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x00000200000938b9 : pop rcx ; loope 0x20000093847 ; sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x00000200006ef032 : pop rcx ; loopne 0x200006ef03c ; add rsp, 0x20 ; pop rbx ; ret
0x000002000072cb2e : pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x0000020000627853 : pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000038f4eb : pop rcx ; or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x00000200006c80b3 : pop rcx ; or byte ptr [rbp - 0x77], al ; push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200000cd335 : pop rcx ; or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200001de338 : pop rcx ; push 0x48 ; mov ebx, dword ptr [rsp + 0x10] ; ret
0x000002000043fdc3 : pop rcx ; push rax ; in eax, -1 ; add rsp, 0x28 ; ret
0x0000020000446653 : pop rcx ; pushfq ; ret 0xf0ff
0x0000020000021909 : pop rcx ; ret
0x000002000044cc9d : pop rcx ; ret 0x41ff
0x000002000066f4e5 : pop rcx ; ret 0x49ff
0x000002000067504b : pop rcx ; ret 1
0x00000200007139a3 : pop rcx ; salc ; ret
0x000002000000c543 : pop rcx ; scasd eax, dword ptr [rdi] ; lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x000002000036cf5b : pop rcx ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret 0xb48
0x00000200001ba223 : pop rcx ; verw cx ; and al, 0xf8 ; push rsi ; ret
0x00000200004ae94f : pop rcx ; xchg eax, esp ; ret 0xe9ff
0x000002000010c67b : pop rcx ; xor byte ptr [rbp + rcx*8 - 0x15], dh ; ret 0xcccc
0x00000200005f114c : pop rcx ; xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x000002000056bc7d : pop rdi ; adc al, 0xb5 ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x20000437ee7
0x000002000050fda0 : pop rdi ; adc bh, bh ; ret
0x000002000002aae9 : pop rdi ; adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200005b22c0 : pop rdi ; adc byte ptr [rbx], bh ; ret
0x000002000028a9ca : pop rdi ; add ah, cl ; ret 0x5f
0x000002000020d9ff : pop rdi ; add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000049d59d : pop rdi ; add byte ptr [rax], al ; add bl, ch ; ret
0x000002000022a606 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000025d225 : pop rdi ; add byte ptr [rbx + 0x62], r9b ; add byte ptr [rax], r8b ; ret 0x25
0x000002000028a9ce : pop rdi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add ah, cl ; ret 0x5f
0x000002000028a9be : pop rdi ; add ch, dh ; ret 0x5f
0x000002000028a9c6 : pop rdi ; add cl, al ; ret 0x5f
0x000002000005d8ba : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000020ee04 : pop rdi ; add eax, 0xc18b0000 ; ret
0x000002000019531a : pop rdi ; and byte ptr [rax - 0x39], cl ; ret 0xdfff
0x0000020000047743 : pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x000002000053d6d1 : pop rdi ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000714583 : pop rdi ; fcos ; add rsp, 0x50 ; pop rbx ; ret
0x000002000020839e : pop rdi ; inc dword ptr [rcx - 0x75] ; ret
0x000002000058e14c : pop rdi ; jb 0x2000058e145 ; push rdi ; ret
0x000002000000fed0 : pop rdi ; jg 0x2000000fef2 ; ret
0x00000200004bb10d : pop rdi ; jmp 0x1ffd24af316
0x000002000038aa63 : pop rdi ; jmp 0x20000026d1f
0x000002000044660f : pop rdi ; jmp 0x2000006a614
0x000002000008e6b5 : pop rdi ; jmp rax
0x000002000060f3d5 : pop rdi ; loopne 0x2000060f3dd ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000675d22 : pop rdi ; mov bl, 0xcd ; jmp qword ptr [rcx]
0x00000200005c2e2d : pop rdi ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x0000020000568f4b : pop rdi ; mov qword ptr [rip + 0x1417c5], rax ; ret
0x000002000042f9e8 : pop rdi ; mov qword ptr [rsp + 0x20], rax ; call 0x2000042bc14
0x000002000024d279 : pop rdi ; or al, byte ptr [rax] ; jge 0x2000024d2e9 ; or al, byte ptr [rax] ; pop rax ; ret 0x24
0x00000200005fe1a9 : pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000003726a : pop rdi ; or byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200003d45bb : pop rdi ; or byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200000f9823 : pop rdi ; or byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200006821a8 : pop rdi ; or dh, dh ; ret
0x00000200001521b5 : pop rdi ; pop r12 ; add rsp, 8 ; ret
0x0000020000157c52 : pop rdi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200001e8d76 : pop rdi ; pop r12 ; pop rbp ; ret
0x0000020000393582 : pop rdi ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000039cb50 : pop rdi ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003c5ccd : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006ffa45 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000629952 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c11eb : pop rdi ; pop r12 ; pop rdi ; ret
0x000002000038f17f : pop rdi ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003d5cc1 : pop rdi ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200004f0bdc : pop rdi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000043eab7 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000786a4 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0ea : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000014b352 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003b3971 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003b7e9e : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012f7c3 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000b4769 : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000405e5d : pop rdi ; pop r13 ; pop rbp ; ret
0x000002000002d996 : pop rdi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000040b6b : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046da8d : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b77fa : pop rdi ; pop r13 ; pop rdi ; ret
0x000002000007aa32 : pop rdi ; pop r13 ; pop rsi ; pop rbx ; ret
0x000002000012b268 : pop rdi ; pop r13 ; ret
0x0000020000031085 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061eaf9 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001c5db1 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200000282ba : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000040fdc8 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000002c9ba : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004b8d91 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000027099 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004a37af : pop rdi ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000bc7f2 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006433a : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000024e2d : pop rdi ; pop r14 ; pop r12 ; ret
0x000002000002692d : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000006bf5b : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000118df8 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x000002000008e6ae : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; jmp rax
0x0000020000614aff : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007361f : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000025289 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000005d6dc : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200001caaa0 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200001eab05 : pop rdi ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000076b83 : pop rdi ; pop r14 ; pop r13 ; pop rbx ; ret
0x00000200000acb93 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001cb9b4 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rcx ; ret
0x00000200000405c7 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009c816 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000bdb31 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029113 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000067cc8d : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000042405 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002552f : pop rdi ; pop r14 ; pop r13 ; ret
0x000002000009d7ab : pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000084f22 : pop rdi ; pop r14 ; pop rbx ; pop rbp ; ret
0x0000020000091479 : pop rdi ; pop r14 ; pop rcx ; ret
0x0000020000644c1c : pop rdi ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f6a6 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000080b76 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000411077 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000033189 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001395d5 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000453939 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000002632e : pop rdi ; pop r14 ; pop rdi ; ret
0x000002000006ecd5 : pop rdi ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200001415e8 : pop rdi ; pop r14 ; pop rsi ; ret
0x0000020000085aa6 : pop rdi ; pop r14 ; ret
0x000002000002d999 : pop rdi ; pop rbp ; pop rbx ; ret
0x000002000003108a : pop rdi ; pop rbp ; ret
0x00000200001591f0 : pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000059d8f : pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0ef : pop rdi ; pop rbx ; ret
0x00000200000ed18b : pop rdi ; pop rcx ; ret
0x0000020000123c2b : pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004c6603 : pop rdi ; pop rdi ; pop rbx ; ret
0x00000200001e9a8c : pop rdi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000edc9d : pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000682b1 : pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000080965 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000282bf : pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a52 : pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026ca2 : pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007d48a : pop rdi ; pop rsi ; pop rbx ; pop rcx ; ret
0x0000020000024f13 : pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3b2 : pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000025318 : pop rdi ; pop rsi ; ret
0x00000200005b29ad : pop rdi ; push rcx ; idiv edi ; setne dl ; jmp 0x200005b29c3
0x000002000002494e : pop rdi ; ret
0x0000020000168bbd : pop rdi ; ret 0x12
0x00000200004faf55 : pop rdi ; ret 0x4cff
0x00000200003ca809 : pop rdi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200003ffead : pop rdi ; sbb al, 0x3b ; ret
0x000002000011eb97 : pop rdi ; sbb al, 0xff ; ret 0xf41
0x0000020000387d20 : pop rdi ; sbb bh, bh ; ret
0x00000200003b7c55 : pop rdi ; sbb byte ptr [rcx - 0xa], al ; ret
0x00000200001db600 : pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x000002000042a8ad : pop rdi ; std ; ret
0x00000200004e92c8 : pop rdi ; sub al, 0x8b ; ret 0x8b48
0x0000020000428fef : pop rdi ; sub cl, ch ; ret
0x00000200000f88fe : pop rdi ; xchg byte ptr [rdx], cl ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000000dc8d : pop rdi ; xchg eax, ebp ; ret
0x00000200007187cd : pop rdi ; xchg eax, edx ; ret
0x00000200003f75fd : pop rdi ; xchg eax, esi ; ret
0x00000200004216a2 : pop rdi ; xor al, ch ; sub esp, dword ptr [rsi] ; ret 0xe9ff
0x00000200006c72fd : pop rdx ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000780c5 : pop rdx ; adc byte ptr [rax], al ; mov rcx, rdi ; call 0x2000011439c
0x000002000045dfcf : pop rdx ; adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x00000200001cc56a : pop rdx ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000007903a : pop rdx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x00000200004e0068 : pop rdx ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000014e595 : pop rdx ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e584 ; add byte ptr [rax], al ; ret
0x0000020000150595 : pop rdx ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150564 ; add byte ptr [rax], al ; ret
0x0000020000117ccf : pop rdx ; add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x0000020000095eca : pop rdx ; add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200004b0481 : pop rdx ; add dword ptr [rcx - 0x75], eax ; ret
0x0000020000095d12 : pop rdx ; and byte ptr [rcx + 0x5c], 0xfe ; ret
0x00000200004c56d6 : pop rdx ; and dh, ah ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret
0x000002000001051c : pop rdx ; and eax, dword ptr [rcx] ; ret 0xfa65
0x00000200000f081d : pop rdx ; cmovno esi, esi ; rol byte ptr [rcx + rax*2], 0x8b ; ret 0x450f
0x0000020000081498 : pop rdx ; dec dword ptr [rax - 0x75] ; ret
0x000002000060c5b2 : pop rdx ; enter -0x4d, 0x48 ; add esp, 0x48 ; ret
0x00000200006ff6ca : pop rdx ; fidivr word ptr [rdx + 0x158d48ff] ; ret
0x0000020000021af1 : pop rdx ; jns 0x20000021afe ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x000002000000d0d9 : pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000001153b : pop rdx ; mov ah, 0x78 ; mov esp, 0xe70b3d35 ; ret
0x000002000005732d : pop rdx ; mov cl, 0x11 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000596cc0 : pop rdx ; mov dl, 0xff ; nop ; jmp 0x200004c2f60
0x00000200005c3351 : pop rdx ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000010b4ff : pop rdx ; or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x000002000044cb8c : pop rdx ; or byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200006dbf7b : pop rdx ; or byte ptr [rbp - 0x77], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000401d6a : pop rdx ; or byte ptr [rcx + 0x3b], al ; ret 0x4272
0x00000200006711ba : pop rdx ; pop qword ptr [rax + rax] ; add rsp, 0x28 ; ret
0x000002000014da2e : pop rdx ; pop rax ; pop rcx ; ret
0x000002000011d286 : pop rdx ; pop rdi ; ret
0x00000200004cf632 : pop rdx ; pop rsi ; mov bh, 0xff ; add rsp, 0x28 ; ret
0x000002000000e718 : pop rdx ; ret
0x00000200004d0110 : pop rdx ; ret 0x44ff
0x000002000067c83f : pop rdx ; ret 0x48ff
0x0000020000022f43 : pop rdx ; ret 0x594d
0x00000200000b13ad : pop rdx ; ret 0xd
0x0000020000548bc2 : pop rdx ; ret 0xffd4
0x0000020000703b36 : pop rdx ; ret 0xffd7
0x00000200001e3f12 : pop rdx ; ret 0xffe4
0x00000200005ba35a : pop rdx ; ret 0xffe6
0x00000200003d31ea : pop rdx ; sbb byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000036f48a : pop rdx ; sbb eax, 0x341fffe ; ret 0x588
0x0000020000435452 : pop rdx ; scasb al, byte ptr [rdi] ; ret
0x0000020000416458 : pop rdx ; sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x00000200001da31e : pop rdx ; verw ax ; ret 0xf6f2
0x0000020000647d5e : pop rdx ; xor byte ptr [rcx - 0xa], al ; ret
0x00000200000529d6 : pop rsi ; adc bh, bh ; ret
0x00000200003b0f00 : pop rsi ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000577087 : pop rsi ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004b43fe : pop rsi ; adc esi, esi ; ret 0xf04
0x0000020000037178 : pop rsi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x0000020000195b29 : pop rsi ; add al, 0x8b ; ret
0x00000200003a3dd4 : pop rsi ; add al, byte ptr [rcx - 0x7d] ; ret
0x00000200003658ef : pop rsi ; add al, byte ptr [rdi + rcx + 0x22] ; ret
0x00000200006eebb6 : pop rsi ; add byte ptr [rax], al ; add byte ptr [rbp - 0xbb8740], al ; ret 0x8b49
0x000002000038e2ed : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x000002000009b9f8 : pop rsi ; add dword ptr [rbx], edi ; ret
0x00000200006748be : pop rsi ; add eax, 0x8b48ffc2 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000438872 : pop rsi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c19ed : pop rsi ; and byte ptr [rax - 0x75], cl ; ret
0x00000200000a70a0 : pop rsi ; and dh, dh ; ret
0x00000200005085fa : pop rsi ; cli ; ret 0x48ff
0x0000020000379c22 : pop rsi ; dec dword ptr [rax + 0x3b] ; ret
0x00000200003c239e : pop rsi ; in al, dx ; ret
0x00000200003d40fc : pop rsi ; jb 0x200003d411c ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000001ee50 : pop rsi ; jbe 0x2000001ee11 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000013970e : pop rsi ; jbe 0x200001b840b ; xor eax, eax ; ret
0x00000200000117b3 : pop rsi ; jmp 0x200000117ca
0x000002000043b41d : pop rsi ; jmp 0x20000068fd4
0x000002000044cc0e : pop rsi ; jmp 0x200000712d0
0x0000020000515e33 : pop rsi ; jmp 0x2000013bc70
0x000002000066f5f8 : pop rsi ; jmp rax
0x000002000045f5a2 : pop rsi ; js 0x2000045f533 ; ret
0x00000200004cf633 : pop rsi ; mov bh, 0xff ; add rsp, 0x28 ; ret
0x00000200004481fe : pop rsi ; mov bh, byte ptr [rsi - 0x9e97401] ; ret 0xf01
0x00000200001352ae : pop rsi ; mov ebp, 0x8b440021 ; ret
0x0000020000497c16 : pop rsi ; mov ebx, r9d ; jmp 0x20000497c6a
0x00000200000ec23e : pop rsi ; mov rcx, qword ptr [rdx + 0x18] ; mov rax, rdx ; jmp 0x200000ec235
0x0000020000491d67 : pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000010c6c1 : pop rsi ; or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000041c28c : pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000031087 : pop rsi ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061eafb : pop rsi ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001c5db3 : pop rsi ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200000282bc : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000085400 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000002c9bc : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004b8d93 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002709b : pop rsi ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000035a0d : pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000393c6f : pop rsi ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bc7f4 : pop rsi ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006433c : pop rsi ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000024e2f : pop rsi ; pop r12 ; ret
0x000002000002692f : pop rsi ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000002f672 : pop rsi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000006bf5d : pop rsi ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000118dfa : pop rsi ; pop r13 ; pop r12 ; pop rcx ; ret
0x000002000008e6b0 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; jmp rax
0x0000020000077016 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000041b2f1 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000040c15c : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000614b01 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000002bc51 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a4d : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026c9d : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000024f0e : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3ad : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000035693 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002528b : pop rsi ; pop r13 ; pop r12 ; pop rdi ; ret
0x00000200001c5352 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000f078a : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000070a6d : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d6de : pop rsi ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000d4470 : pop rsi ; pop r13 ; pop r12 ; ret
0x000002000007465e : pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000076b85 : pop rsi ; pop r13 ; pop rbx ; ret
0x00000200000acb95 : pop rsi ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000059d8c : pop rsi ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001cb9b6 : pop rsi ; pop r13 ; pop rdi ; pop rcx ; ret
0x00000200000405c9 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005f42f3 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009c818 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000bdb33 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029115 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000b9ab3 : pop rsi ; pop r13 ; pop rdi ; ret
0x000002000067cc8f : pop rsi ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000042407 : pop rsi ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025531 : pop rsi ; pop r13 ; ret
0x0000020000157c58 : pop rsi ; pop r15 ; ret
0x00000200004dde76 : pop rsi ; pop rax ; mov dl, 0xff ; call 0x2000008a166
0x0000020000080966 : pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000282c0 : pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a53 : pop rsi ; pop rbp ; ret
0x0000020000026ca3 : pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007d48b : pop rsi ; pop rbx ; pop rcx ; ret
0x0000020000024f14 : pop rsi ; pop rbx ; ret
0x000002000009147b : pop rsi ; pop rcx ; ret
0x00000200000a4f94 : pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001591ef : pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000644c1e : pop rsi ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000480ab : pop rsi ; pop rdi ; pop rbx ; ret
0x00000200000ed18a : pop rsi ; pop rdi ; pop rcx ; ret
0x000002000005e403 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000080b78 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009db33 : pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003318b : pop rsi ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001395d7 : pop rsi ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000025317 : pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000026330 : pop rsi ; pop rdi ; ret
0x000002000006ecd7 : pop rsi ; pop rsi ; pop rbp ; ret
0x00000200001415ea : pop rsi ; pop rsi ; ret
0x0000020000024a79 : pop rsi ; ret
0x00000200004cfd49 : pop rsi ; ret 0x48ff
0x00000200005745de : pop rsi ; ret 0xffaf
0x000002000066f9f6 : pop rsi ; ret 0xffbb
0x00000200000c66f1 : pop rsi ; sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x00000200005eacea : pop rsi ; sub byte ptr [rax - 0x75], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x000002000055485e : pop rsi ; wait ; jmp 0x1ffc2d8916a
0x00000200005d010b : pop rsi ; xor al, ch ; ret 0xa73b
0x000002000000afcb : pop rsp ; adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000000b0af : pop rsp ; adc ah, byte ptr [rax] ; ret 0xff
0x000002000000afc7 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x000002000000afb3 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x00000200006ed6a5 : pop rsp ; add byte ptr [rax], al ; add al, ch ; ret 0xa639
0x00000200000e5d49 : pop rsp ; add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x000002000004f010 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; in al, -0x75 ; ret 0x840f
0x00000200007122aa : pop rsp ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000204bbc : pop rsp ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001521b7 : pop rsp ; add rsp, 8 ; ret
0x00000200001de33c : pop rsp ; and al, 0x10 ; ret
0x00000200000ca94f : pop rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200000b87cd : pop rsp ; and al, 0x18 ; pop r15 ; pop r14 ; ret
0x0000020000105db9 : pop rsp ; and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x000002000067c2a1 : pop rsp ; and al, 0x20 ; call 0x20000108515
0x00000200005085f6 : pop rsp ; and al, 0x20 ; call 0x20000138062
0x000002000051f0bc : pop rsp ; and al, 0x20 ; call 0x2000014ddc6
0x00000200006684fe : pop rsp ; and al, 0x24 ; jmp 0x200006684ca
0x00000200005eee8f : pop rsp ; and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call 0x200001db16d
0x0000020000672c58 : pop rsp ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200000fe4c3 : pop rsp ; and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x0000020000024a71 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003753eb : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001c4fab : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000020522f : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000209281 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000024c2b : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0b0a : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004deea3 : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002604c : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ee17e : pop rsp ; and al, 0x38 ; call rdi
0x000002000002fa3a : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004b2d1 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000008dcbd : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001d01cb : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r15 ; ret
0x000002000021527c : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000067690c : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000276c3 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013b451 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000072c0a0 : pop rsp ; and al, 0x40 ; jmp 0x2000072c06c
0x0000020000114f20 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000703b6 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004c4d43 : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000068dcb : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dd69a : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046f68b : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000008dd65 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200006f7a8c : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000558a6 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000043b10e : pop rsp ; and al, 0x50 ; mov rcx, rbx ; call 0x20000068fd9
0x00000200004077fa : pop rsp ; and al, 0x54 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000013ecc8 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cb8b4 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000013a773 : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003ee4fc : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046a12e : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005b9c2b : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004dd37d : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000008e5ea : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001280d9 : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000008cb9b : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000417d5b : pop rsp ; and al, 0x60 ; call 0x20000294005
0x000002000021e8e4 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x0000020000232f80 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000012fe48 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000070d7ba : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004849de : pop rsp ; and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000127ea2 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000082240 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000040db11 : pop rsp ; and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x0000020000203c8d : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000011999e : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000008e4e7 : pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200000b8578 : pop rsp ; and al, 8 ; mov al, r9b ; ret
0x000002000023964e : pop rsp ; and al, 8 ; mov eax, ecx ; ret
0x000002000023252a : pop rsp ; and al, 8 ; mov eax, edx ; ret
0x000002000012dee4 : pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x000002000009d44d : pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x00000200001be124 : pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x00000200000e1b20 : pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x000002000008fe71 : pop rsp ; and al, 8 ; mov qword ptr [r8], r10 ; ret
0x000002000020ee52 : pop rsp ; and al, 8 ; mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x00000200001359a1 : pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x00000200004d8372 : pop rsp ; and al, 8 ; mov rax, r8 ; ret
0x00000200006f8d9e : pop rsp ; and al, 8 ; mov rax, r9 ; ret
0x00000200000295fa : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000010021e : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x00000200006113a9 : pop rsp ; and al, 8 ; movzx eax, r9w ; ret
0x000002000008ea08 : pop rsp ; and al, 8 ; ret
0x000002000023694c : pop rsp ; and al, 8 ; xor eax, eax ; ret
0x00000200005b4d40 : pop rsp ; call rcx
0x00000200004590b6 : pop rsp ; cli ; dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000508310 : pop rsp ; cmp al, 0x20 ; call 0x20000137fea
0x000002000000d0df : pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x0000020000388a8c : pop rsp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000107fac : pop rsp ; fisubr dword ptr [rdi] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001cd280 : pop rsp ; jg 0x200001cd299 ; add byte ptr [rax - 0x39], cl ; ret 0x6980
0x0000020000422611 : pop rsp ; jne 0x2000042260d ; xor al, al ; ret
0x000002000000d737 : pop rsp ; mov bl, 0x3b ; sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x2000000d76c ; ret 0x23e8
0x00000200001005b0 : pop rsp ; mov byte ptr [rax + rax], al ; add rsp, 0x68 ; ret
0x00000200005c3135 : pop rsp ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000060c94f : pop rsp ; mov edi, 0x8b02ebff ; ret
0x00000200003683b5 : pop rsp ; mov r9, rcx ; je 0x200003683c7 ; mov al, r10b ; ret
0x00000200003683b5 : pop rsp ; mov r9, rcx ; je 0x200003683c8 ; mov al, r10b ; ret
0x000002000048e383 : pop rsp ; mov rcx, rsi ; call 0x2000006a616
0x000002000024d24d : pop rsp ; or al, byte ptr [rax] ; rcr dword ptr [rdi + 0xa], cl ; add byte ptr [rax], ch ; ret 0x24
0x000002000000d33c : pop rsp ; or dl, byte ptr [rax] ; mov ecx, 0x79682177 ; ret
0x00000200005389d0 : pop rsp ; or dword ptr [rax + 0x29e990ff], edi ; ret
0x0000020000157c54 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000002000038f183 : pop rsp ; pop rbp ; pop rbx ; ret
0x0000020000026933 : pop rsp ; pop rbp ; ret
0x000002000000a2b2 : pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; salc ; jmp qword ptr [rcx]
0x000002000000a396 : pop rsp ; pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x000002000002f676 : pop rsp ; pop rbx ; pop rbp ; ret
0x000002000006bf61 : pop rsp ; pop rbx ; ret
0x0000020000118dfe : pop rsp ; pop rcx ; ret
0x000002000008e6b4 : pop rsp ; pop rdi ; jmp rax
0x000002000007701a : pop rsp ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000031089 : pop rsp ; pop rdi ; pop rbp ; ret
0x00000200000786a8 : pop rsp ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000002e0ee : pop rsp ; pop rdi ; pop rbx ; ret
0x00000200001c5db5 : pop rsp ; pop rdi ; pop rcx ; ret
0x00000200001c5b89 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000282be : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027a51 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026ca1 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000024f12 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000ea3b1 : pop rsp ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002709d : pop rsp ; pop rdi ; pop rsi ; ret
0x000002000002528f : pop rsp ; pop rdi ; ret
0x00000200001c5356 : pop rsp ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000f078e : pop rsp ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b476d : pop rsp ; pop rsi ; pop rbp ; ret
0x0000020000070a71 : pop rsp ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000006433e : pop rsp ; pop rsi ; pop rbx ; ret
0x000002000005d6e2 : pop rsp ; pop rsi ; ret
0x0000020000107453 : pop rsp ; push qword ptr [rbx] ; shr al, cl ; ret
0x0000020000412ed6 : pop rsp ; push rcx ; inc byte ptr [rbp - 0x1677f001] ; ret 0x14
0x00000200000b84f9 : pop rsp ; rcl dword ptr [rax], 1 ; ret
0x00000200001c57d0 : pop rsp ; rcr byte ptr [rax], 0 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000024e31 : pop rsp ; ret
0x00000200001228a0 : pop rsp ; ret 0x18
0x0000020000010f8f : pop rsp ; ret 0x2db0
0x00000200006e8b9c : pop rsp ; ret 0x48f8
0x000002000067c641 : pop rsp ; ret 0x48ff
0x000002000027cb64 : pop rsp ; ret 0x70
0x000002000061414c : pop rsp ; ret 0x7408
0x000002000072a9d0 : pop rsp ; ret 0x8bff
0x000002000051644b : pop rsp ; ret 0xe9ff
0x0000020000057ed2 : pop rsp ; ret 0xf08
0x000002000016fb3a : pop rsp ; ret 0xffed
0x00000200005801f3 : pop rsp ; ret 0xffef
0x000002000018a6c6 : pop rsp ; ret 0xfff1
0x0000020000192009 : pop rsp ; ret 0xfff2
0x00000200001b5fcf : pop rsp ; ret 0xfff7
0x00000200003d1fe4 : pop rsp ; ret 0xfffe
0x0000020000241140 : pop rsp ; rol byte ptr [rax + rax], 0x5e ; ret
0x00000200000c447e : pop rsp ; shr eax, 0x1c ; not eax ; and eax, 1 ; ret
0x00000200006ed530 : pop rsp ; test eax, 0xb041ffbe ; add eax, ebp ; push rax ; ret
0x0000020000025c74 : popfq ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003f26ff : popfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000001fd13 : popfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200006d7e57 : popfq ; add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006147ce : popfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000416f7 : popfq ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x00000200006da5ce : popfq ; add rax, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006e3130 : popfq ; clc ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000d5f8 : popfq ; cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x00000200006de9cf : popfq ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006d2241 : popfq ; cwde ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072d303 : popfq ; dec dword ptr [rax - 0x75] ; ret
0x00000200005a90b2 : popfq ; idiv edi ; xor r8d, r8d ; call 0x200004152f0
0x00000200006799e4 : popfq ; jbe 0x200006799b7 ; jmp qword ptr [rcx]
0x00000200003729a6 : popfq ; jne 0x200003729ad ; push rsi ; ret
0x0000020000548567 : popfq ; jp 0x2000054853b ; push qword ptr [rdx] ; ret
0x000002000061984f : popfq ; leave ; push rsi ; ret
0x000002000068f686 : popfq ; mov eax, eax ; call qword ptr [rax]
0x0000020000712ebb : popfq ; mov r9d, 0x58b48ff ; jp 0x20000712f36 ; ret
0x00000200006dd4b3 : popfq ; pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000281021 : popfq ; push rcx ; add byte ptr [rbx - 0x7ffae60], dl ; jmp qword ptr [rdi]
0x000002000000d70d : popfq ; ret
0x0000020000204d77 : popfq ; ret 0x14
0x0000020000559da2 : popfq ; ret 0x2be9
0x000002000025dda0 : popfq ; ret 0x46
0x0000020000492940 : popfq ; ret 0xe9ff
0x00000200004465ab : popfq ; ret 0xf0ff
0x000002000043a084 : popfq ; ret 0xf6ff
0x00000200005f5367 : popfq ; ret 0xffce
0x0000020000417d5f : popfq ; ret 0xffe7
0x00000200005801aa : popfq ; ret 0xffef
0x000002000000f6d1 : popfq ; sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x000002000072336b : popfq ; std ; dec dword ptr [rbp + rcx*4 + 0x15] ; cmp esp, edx ; ret 0x48ff
0x0000020000594ab6 : popfq ; test esi, edx ; push rsi ; ret
0x000002000044d00f : popfq ; xchg eax, esp ; in eax, -1 ; call 0x200000702b7
0x000002000019fcc9 : popfq ; xor eax, 0x8b48fff5 ; ret
0x00000200006cf09a : prefetchw byte ptr [rcx] ; ret
0x0000020000515646 : psubsb mm0, qword ptr [rbx] ; ret 0x48ff
0x0000020000682a54 : psubsb mm6, qword ptr [rdx - 0x740000e9] ; ret
0x000002000056a544 : psubsb mm6, qword ptr [rsi - 0x740041ca] ; ret
0x0000020000186f40 : psubsb mm7, qword ptr [r9] ; ret
0x0000020000186f41 : psubsb mm7, qword ptr [rcx] ; ret
0x0000020000719339 : psubw mm7, mm7 ; ret
0x00000200000cbf0c : push -0x16fffffe ; ret
0x000002000014e755 : push -0x17000000 ; and bl, dh ; add byte ptr [rax], al ; ret
0x000002000063d4b4 : push -0x17003965 ; wait ; ret 0xffa7
0x00000200004412d3 : push -0x172b74b7 ; nop ; ret
0x00000200004fa0bd : push -0x173074b8 ; outsb dx, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; ret 0x8bff
0x0000020000514c55 : push -0x1733ccb8 ; mov dl, 0x41 ; ret
0x00000200004a97b1 : push -0x173474b8 ; ret 0xc563
0x00000200006f0ba4 : push -0x18000000 ; ret
0x000002000000d038 : push -0x1e1fe0e ; ret 0x6906
0x00000200006c6ff1 : push -0x3274b6f8 ; call r10
0x00000200006d9320 : push -0x3274b6f8 ; call r9
0x000002000041aa74 : push -0x3c001471 ; add rax, 0x20 ; ret
0x000002000061f73c : push -0x3c090032 ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x00000200004bd1d9 : push -0x3fcdfc8b ; ret
0x0000020000051382 : push -0x49f00003 ; ret
0x0000020000187d63 : push -0x49f0000f ; ret
0x000002000056a18a : push -0x4d0017e8 ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200003b9684 : push -0x54417 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004534e7 : push -0x5fdb7b75 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xbee9
0x000002000037e743 : push -0x66f0247b ; ret 0x1ae8
0x0000020000011027 : push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x0000020000635ffc : push -0x6bfa74b8 ; ret 0xffc6
0x000002000015bb14 : push -0x6ffffff0 ; ret
0x000002000048bab8 : push -0x74000002 ; ret
0x00000200005e45ec : push -0x74001f0c ; ret
0x000002000048d0b4 : push -0x74001f83 ; ret
0x0000020000385694 : push -0x740032d3 ; ret
0x00000200003cd009 : push -0x74b6fe4e ; iretd ; call r12
0x00000200000e1960 : push -0x74b7000a ; ret
0x00000200001936e3 : push -0x74b70016 ; ret
0x00000200004c0cb3 : push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x000002000048d988 : push -0x74b7fff1 ; pop rax ; or dh, dh ; ret
0x00000200000dcc9a : push -0x74fff435 ; ret
0x000002000018b04b : push -0x74fffffa ; ret
0x00000200004367f0 : push -0x7c00ccbb ; ret 0x4d20
0x000002000072504f : push -0x7c3174b8 ; ret
0x00000200000c00cf : push -0x7ce6173f ; loopne 0x200000c00de ; ret
0x00000200000c00ce : push -0x7ce6173f ; loopne 0x200000c00df ; ret
0x00000200004a462f : push -0x9000001 ; ret
0x00000200003c4997 : push -0x900000a ; ret 0xf04
0x000002000068ec48 : push -0x9000025 ; ret
0x000002000040de06 : push -0xda8bf0 ; ret 0xd33b
0x00000200005b5e9e : push -0xdfa74b8 ; ret
0x00000200003dd6b4 : push -0xfffffe ; ret
0x00000200003e27f0 : push -0xffffff ; ret
0x00000200005d053c : push 0 ; je 0x200005d0549 ; inc edx ; jmp 0x200005d055e
0x000002000038a7e7 : push 0 ; ret
0x00000200004dcf21 : push 0x158d4808 ; out dx, al ; ret
0x0000020000434d88 : push 0x20c48348 ; pop rbx ; ret
0x0000020000123da6 : push 0x228348c3 ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000036ef0a : push 0x23000006 ; ret 0xc73b
0x0000020000707486 : push 0x24448948 ; and al, ch ; ret
0x00000200000e35da : push 0x24748b48 ; jo 0x200000e3573 ; ret
0x00000200001bcbda : push 0x24748b48 ; jo 0x200001bcb73 ; ret
0x00000200001db573 : push 0x24748b48 ; jo 0x200001db50c ; ret
0x00000200001e0c34 : push 0x24748b48 ; jo 0x200001e0bcd ; ret
0x0000020000217501 : push 0x24748b48 ; jo 0x2000021749a ; ret
0x000002000038250e : push 0x24748b48 ; jo 0x200003824a7 ; ret
0x000002000041552a : push 0x24748b48 ; jo 0x200004154c3 ; ret
0x0000020000422dd1 : push 0x24748b48 ; jo 0x20000422d6a ; ret
0x00000200004634c3 : push 0x24748b48 ; jo 0x2000046345c ; ret
0x0000020000469c1a : push 0x24748b48 ; jo 0x20000469bb3 ; ret
0x00000200004a0aed : push 0x24748b48 ; jo 0x200004a0a86 ; ret
0x00000200004b79bd : push 0x24748b48 ; jo 0x200004b7956 ; ret
0x00000200004bbb67 : push 0x24748b48 ; jo 0x200004bbb00 ; ret
0x00000200004bc08c : push 0x24748b48 ; jo 0x200004bc025 ; ret
0x00000200004d82b5 : push 0x24748b48 ; jo 0x200004d824e ; ret
0x00000200005d11bd : push 0x24748b48 ; jo 0x200005d1156 ; ret
0x00000200006376a2 : push 0x24748b48 ; jo 0x2000063763b ; ret
0x000002000064969e : push 0x24748b48 ; jo 0x20000649637 ; ret
0x000002000064fd1e : push 0x24748b48 ; jo 0x2000064fcb7 ; ret
0x0000020000650308 : push 0x24748b48 ; jo 0x200006502a1 ; ret
0x000002000072f8ab : push 0x24748b48 ; jo 0x2000072f844 ; ret
0x000002000010bfda : push 0x24748b48 ; js 0x2000010bf73 ; ret
0x000002000040822f : push 0x24748b48 ; js 0x200004081c8 ; ret 0x8348
0x0000020000485803 : push 0x24748b48 ; js 0x2000048579c ; ret
0x00000200004a6b0a : push 0x24748b48 ; js 0x200004a6aa2 ; ret
0x0000020000426d87 : push 0x247c8b48 ; jo 0x20000426d1f ; ret
0x00000200005e725f : push 0x247c8b48 ; jo 0x200005e71f8 ; ret
0x000002000021e401 : push 0x247c8b48 ; js 0x2000021e39a ; ret
0x00000200005841f1 : push 0x2b50458b ; ret
0x000002000012e1ba : push 0x30 ; and al, byte ptr [rax] ; ret
0x00000200000d93a5 : push 0x30443c7 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4b89
0x0000020000068f6b : push 0x30c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000c7e5c : push 0x30c48348 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200005de075 : push 0x30c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003f15de : push 0x32 ; ret
0x000002000014722b : push 0x33 ; sal dh, cl ; ret
0x0000020000669a82 : push 0x33 ; shr al, cl ; ret 0x8a
0x00000200005619c5 : push 0x33e8d88b ; ret 0xffbe
0x00000200001001bc : push 0x3b ; sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x000002000072f43c : push 0x40c48348 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000404d52 : push 0x40c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000009b188 : push 0x40c48348 ; pop r14 ; ret
0x000002000009438e : push 0x40c48348 ; pop r15 ; ret
0x000002000021f4b9 : push 0x40c48348 ; pop rbp ; ret
0x0000020000447d97 : push 0x40c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000097125 : push 0x40c48348 ; pop rdi ; ret
0x000002000025d34d : push 0x46 ; add al, ah ; push 0x46 ; add byte ptr [rax], ch ; ret
0x000002000025d351 : push 0x46 ; add byte ptr [rax], ch ; ret
0x00000200001de339 : push 0x48 ; mov ebx, dword ptr [rsp + 0x10] ; ret
0x00000200001cc712 : push 0x4800000d ; add esp, 0x28 ; ret
0x0000020000476fa6 : push 0x48001078 ; add esp, 0x20 ; pop rbx ; ret
0x000002000040a49f : push 0x48c08b41 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ddbd1 : push 0x48c48348 ; ret
0x0000020000161c44 : push 0x48ffeea1 ; mov dword ptr [rsi], edi ; jmp 0x20000161c17
0x00000200004a3fa4 : push 0x48ffeede ; add esp, 0x58 ; ret
0x00000200001032d0 : push 0x48fff30e ; add esp, 0x68 ; ret
0x00000200001d67a4 : push 0x48fff726 ; add esp, 0x70 ; pop rbx ; ret
0x00000200003f8bbc : push 0x48fffffd ; add esp, 0x48 ; ret
0x00000200005cee56 : push 0x4a050348 ; imul edx, eax, -1 ; ret
0x0000020000701375 : push 0x4c002d6f ; mov eax, dword ptr [rbx + 0x38] ; call rax
0x0000020000442019 : push 0x4e430fff ; adc byte ptr [rax + 3], cl ; ret 0x348
0x00000200003efb42 : push 0x50 ; ret 0x85ff
0x0000020000122935 : push 0x50c48348 ; pop r14 ; ret
0x0000020000232f82 : push 0x50c48348 ; pop rbp ; ret
0x0000020000090b61 : push 0x50c48348 ; pop rdi ; ret
0x000002000070d7bc : push 0x50c48348 ; pop rsi ; ret
0x00000200000209f2 : push 0x54 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000672aef : push 0x58418948 ; ret
0x000002000043a742 : push 0x5b ; ret
0x00000200000a124c : push 0x5b5d5e5f ; ret
0x0000020000107452 : push 0x5c ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200000329cd : push 0x5c415d41 ; pop rbx ; pop rbp ; ret
0x0000020000040b69 : push 0x5d415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005c1acf : push 0x5d5b5e5f ; ret
0x00000200003d7442 : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000041ee13 : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000011898 : push 0x65 ; sbb edi, dword ptr [rax + 0x6e] ; ret
0x000002000000f6d5 : push 0x70 ; ret 0xccb
0x0000020000655131 : push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200001181a3 : push 0x74d28548 ; sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x00000200006247a3 : push 0x76063b45 ; or edi, edi ; ret
0x0000020000675db2 : push 0x79 ; ret
0x00000200004379b2 : push 0x84 ; ret
0x0000020000535252 : push 0x89 ; ret 0x48ff
0x0000020000674305 : push 0x99 ; ret
0x00000200003f7622 : push 0x9e ; ret
0x000002000050f64a : push 0xa0 ; ret 0xebff
0x000002000050e926 : push 0xab ; ret 0x49ff
0x0000020000716272 : push 0xae ; ret
0x000002000000d0dd : push 0xb3 ; pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000000dfbd : push 0xb8 ; ret 0x3ecb
0x000002000065d44e : push 0xb9 ; inc dword ptr [rbp - 0x74f38740] ; ret
0x00000200007228ee : push 0xba ; call qword ptr [rbx]
0x00000200007228e2 : push 0xba ; call qword ptr [rdx]
0x000002000000de51 : push 0xbd ; push rbp ; or dword ptr [rip - 0x27aeebc9], edi ; ret
0x00000200004d61f2 : push 0xc ; add byte ptr [rbx], bh ; ret 0x870f
0x000002000047b74c : push 0xc8ba ; add al, ch ; mov ch, 0xab ; ret
0x0000020000713cf2 : push 0xd8 ; ret
0x00000200004a158e : push 0xd8 ; ret 0xe8ff
0x000002000054432d : push 0xe7 ; push rsi ; ret
0x000002000013476a : push 0xf048d48 ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200005fca61 : push 0xf6 ; ret
0x00000200004dbf2e : push 0xf8 ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0xc2b
0x00000200001063d4 : push 0xf8 ; or dword ptr [rax], eax ; ret
0x000002000013b2a4 : push 0xfa ; dec dword ptr [rax - 0x75] ; ret
0x00000200004eafca : push 0xfce8b49 ; xchg eax, esp ; ret 0x16e8
0x00000200000f451e : push 1 ; jne 0x200000f4531 ; ret
0x00000200005f9068 : push 2 ; add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000671c2a : push 6 ; ret
0x00000200001619c3 : push 7 ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x0000020000666e0a : push bx ; mov ecx, r9d ; call 0x20000294009
0x0000020000405d1c : push qword ptr [r11] ; jmp qword ptr [rcx]
0x000002000015d8ca : push qword ptr [r13 - 0xe] ; mov rax, r11 ; ret
0x00000200006428e8 : push qword ptr [rax + rbp - 0x75] ; ret
0x0000020000173b1d : push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x00000200003e3ed8 : push qword ptr [rax + rcx + 0x49] ; mov ecx, esi ; call r15
0x00000200006387c6 : push qword ptr [rax + rcx - 0x7f] ; jmp qword ptr [rbx]
0x000002000043b249 : push qword ptr [rax + rdx + 0x48] ; mov ecx, edi ; call 0x20000063d9d
0x000002000043a0b9 : push qword ptr [rbp + 0x3b] ; mov rcx, rbx ; call 0x20000068fd9
0x0000020000444012 : push qword ptr [rbp + 0x78] ; mov rcx, rbp ; call 0x2000006a619
0x00000200004be025 : push qword ptr [rbp + 0xe] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000148e21 : push qword ptr [rbp + 1] ; ret
0x0000020000719273 : push qword ptr [rbp + 5] ; add rsp, 0x58 ; ret
0x000002000021431f : push qword ptr [rbp + 6] ; and qword ptr [rdx + 8], 0 ; ret
0x000002000009de3d : push qword ptr [rbp + 7] ; mov byte ptr [rcx + 0x185], dl ; ret
0x00000200000e4102 : push qword ptr [rbp + 8] ; mov rcx, rbx ; call 0x2000047038c
0x000002000050f644 : push qword ptr [rbp + 9] ; xor bl, bl ; call 0x200001396c0
0x00000200004ef20d : push qword ptr [rbp + rax - 0x18] ; jmp 0x200004ef205
0x00000200005d8f26 : push qword ptr [rbp + rax - 0x46] ; or eax, 0x8bc00000 ; ret 0xccc3
0x00000200006321ef : push qword ptr [rbp - 0x12] ; add rsp, 0x28 ; ret
0x00000200001449a3 : push qword ptr [rbp - 0x3e] ; jmp 0x20000144987
0x00000200004d9326 : push qword ptr [rbp - 0x53] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015d8cb : push qword ptr [rbp - 0xe] ; mov rax, r11 ; ret
0x000002000072ec3e : push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200003859e2 : push qword ptr [rbx] ; fisttp dword ptr [rbx + 0x358d48f9] ; xchg eax, edx ; ret
0x00000200003b8a7d : push qword ptr [rbx] ; fucomi st(1) ; ret
0x0000020000405d1d : push qword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200001b480e : push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x0000020000191f8a : push qword ptr [rbx] ; leave ; jmp 0x200000be1c8
0x000002000066231b : push qword ptr [rbx] ; rol bl, 0xcc ; ret 0
0x0000020000426028 : push qword ptr [rbx] ; rol byte ptr [rbp - 0x5c77f001], cl ; call qword ptr [rbx]
0x00000200005a72ce : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 1] ; ret
0x000002000066f856 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000294e29
0x0000020000506a0b : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x0000020000366317 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000191ffc : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000002e2e8
0x0000020000191ffb : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000002e2e9
0x00000200005f8b8e : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e28
0x000002000066da52 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e29
0x00000200006ffb9d : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000122a60 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000122acb ; ret
0x00000200004dedd3 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004dee3e ; ret
0x000002000046f47f : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200001d21c8 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000046f5e6 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200007128fa : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x00000200001d20d7 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200005005f5 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x74bb9da1], cl ; ret
0x00000200004c3e3b : push qword ptr [rbx] ; ror byte ptr [rbp - 0x75], cl ; ret
0x00000200005caad9 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x76b3feb8], 0x3d ; ret 0xd0af
0x00000200003ef6e6 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x200003ef6fa ; call r8
0x0000020000674055 : push qword ptr [rbx] ; ror byte ptr [rcx - 0x3ab261f3], 0xff ; ret
0x0000020000714882 : push qword ptr [rbx] ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rbp ; ret
0x000002000037ed5e : push qword ptr [rbx] ; ror byte ptr [rcx - 0x77], 0x13 ; ret
0x000002000059ac6f : push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0xd ; ret 0xd6b2
0x0000020000548bbe : push qword ptr [rbx] ; shr al, cl ; pop rdx ; ret 0xffd4
0x0000020000107455 : push qword ptr [rbx] ; shr al, cl ; ret
0x000002000051ce54 : push qword ptr [rbx] ; shr al, cl ; xor al, 0x36 ; sar bh, 0xeb ; ret 0xd233
0x00000200006660c9 : push qword ptr [rbx] ; shr byte ptr [rax + 0x4c850f02], cl ; in eax, dx ; ret 0xe9ff
0x0000020000189870 : push qword ptr [rbx] ; shr cl, 0x93 ; pushfq ; int1 ; push rsi ; ret
0x00000200001b6d2d : push qword ptr [rbx] ; shr cl, 0xe9 ; in eax, -9 ; push rsi ; ret 0x7503
0x0000020000089bd9 : push qword ptr [rbx] ; shr cl, cl ; ret
0x00000200000bf8b1 : push qword ptr [rbx] ; test byte ptr [rbp + 0xf], 0x20 ; ret 0x894c
0x0000020000440d37 : push qword ptr [rbx] ; test byte ptr [rbx + 0xfc085f8], 0x88 ; jmp rcx
0x0000020000112745 : push qword ptr [rcx + rax*2 - 0x75] ; ret
0x000002000003b121 : push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000071463d : push qword ptr [rcx + rdi*4 - 0x2afa3801] ; mov ch, 0xb9 ; call qword ptr [rbx]
0x000002000043b378 : push qword ptr [rcx + rdx*8 + 0x48] ; mov ecx, edi ; call 0x20000068fd9
0x000002000051fbee : push qword ptr [rdi + 1] ; ret
0x000002000061cb8a : push qword ptr [rdi + rax - 0x7c] ; leave ; jne 0x2000061cb9d ; mov al, 1 ; ret
0x00000200006236cc : push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x000002000038e20a : push qword ptr [rdi + rdi + 0xf] ; mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x00000200005c12c3 : push qword ptr [rdi + rdx + 5] ; in eax, dx ; jmp rsi
0x000002000040d620 : push qword ptr [rdx + 0x3638e801] ; ret 0x48ff
0x0000020000408fa3 : push qword ptr [rdx + 0x7cb5e801] ; ret 0xe8ff
0x00000200006685e9 : push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x0000020000402d66 : push qword ptr [rdx - 0x1dfd16ff] ; ret 0xccff
0x00000200006f76de : push qword ptr [rdx - 0x47] ; ret
0x0000020000029d5d : push qword ptr [rdx - 0x5dea00fe] ; ret
0x0000020000407ace : push qword ptr [rdx - 0x6b6516ff] ; ret 0xccff
0x0000020000407a9a : push qword ptr [rdx - 0x6e4116ff] ; ret 0xccff
0x000002000056a18d : push qword ptr [rdx - 0x74b70053] ; ret
0x00000200005064e0 : push qword ptr [rdx - 0x75] ; ret
0x00000200003ccd94 : push qword ptr [rdx] ; ret
0x0000020000141b5b : push qword ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200005323f3 : push qword ptr [rdx] ; shr cl, 0xf4 ; jmp rsp
0x000002000042bb70 : push qword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200005d3089 : push qword ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000055255a : push qword ptr [rsi + rax - 1] ; ret 0xefd1
0x00000200006742d2 : push r12 ; mov rcx, rbx ; call 0x20000294e28
0x00000200006742d1 : push r12w ; mov rcx, rbx ; call 0x20000294e29
0x0000020000021d99 : push r13 ; xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x0000020000514c8f : push r14 ; sub rsp, 0x20 ; call 0x2000013b561
0x00000200000e00e4 : push r15 ; sbb al, 0 ; dec byte ptr [rax - 0x75] ; ret
0x0000020000419422 : push r8 ; add byte ptr [rbp + 0x1e], bl ; out dx, al ; call 0x2000003e019
0x00000200001ea0fe : push r8 ; add rax, r8 ; ret
0x00000200000e18c5 : push r8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000520219 : push r8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d9617 : push r8 ; call 0x20000208ac1
0x000002000016307f : push r8 ; call rax
0x000002000064bb88 : push r8 ; jmp 0x2000064bb52
0x000002000008a175 : push r8 ; jne 0x2000008a184 ; mov al, r8b ; ret
0x00000200000bc4be : push r8 ; jne 0x200000bc4cd ; mov al, r9b ; ret
0x00000200005589c8 : push r8 ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x000002000012d108 : push r8 ; mov eax, r8d ; ret
0x00000200001d6aa3 : push r8 ; movaps xmmword ptr [r10 + 0x50], xmm1 ; ret
0x000002000067da2d : push r8 ; ret 0x41ff
0x00000200000c6229 : push r8 ; shr eax, 0x18 ; and al, 1 ; ret
0x0000020000271018 : push r9 ; add r8b, r14b ; jmp qword ptr [rsi]
0x000002000048761d : push r9 ; ret
0x00000200001cdea4 : push rax ; adc al, 0x49 ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000041ac04 : push rax ; adc al, ch ; jne 0x2000041abd8 ; leave ; dec dword ptr [rax - 0x7f] ; ret
0x000002000021654e : push rax ; adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200000b450d : push rax ; adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x00000200006cc527 : push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000010cb40 : push rax ; adc byte ptr [rdi], cl ; ret 0x8b49
0x00000200003d7829 : push rax ; adc dh, dh ; ret 0x413f
0x00000200006d2b8f : push rax ; adc eax, 0x33480000 ; ret 0xd233
0x000002000053b259 : push rax ; add al, 0 ; add al, ch ; ret 0xb2a4
0x00000200004e15a4 : push rax ; add al, 0 ; add byte ptr [rcx + 3], al ; ret
0x0000020000148696 : push rax ; add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x48e9
0x000002000066907f : push rax ; add al, 0x48 ; add esp, 0x28 ; ret
0x00000200006685a0 : push rax ; add al, 0x73 ; jbe 0x20000668535 ; ret 0x3949
0x0000020000448050 : push rax ; add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x0000020000420770 : push rax ; add al, 0xf6 ; ret 0x7520
0x0000020000571130 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x0000020000369768 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000037fd48 : push rax ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000071e9be : push rax ; add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x0000020000271015 : push rax ; add byte ptr [r15 + 0x51], r9b ; add r8b, r14b ; jmp qword ptr [rsi]
0x0000020000114d72 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000002000014e455 : push rax ; add byte ptr [rax], al ; add cl, ch ; and ah, cl ; add byte ptr [rax], al ; ret
0x000002000027a9ad : push rax ; add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000020000454adb : push rax ; add byte ptr [rax], al ; je 0x20000575cfb ; ret
0x00000200000ea956 : push rax ; add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000010af8a : push rax ; add byte ptr [rax], al ; ret
0x00000200000ea948 : push rax ; add byte ptr [rax], al ; test eax, eax ; jne 0x200000ea957 ; ret
0x000002000010af84 : push rax ; add byte ptr [rax], al ; xchg dword ptr [rcx + 0x506c], eax ; ret
0x0000020000419423 : push rax ; add byte ptr [rbp + 0x1e], bl ; out dx, al ; call 0x2000003e018
0x00000200001bc652 : push rax ; add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x000002000027d31a : push rax ; add byte ptr [rdi + 0x5078], bl ; ret
0x00000200001f0567 : push rax ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x000002000070939c : push rax ; add cl, cl ; inc dword ptr [rbp - 0x3877f040] ; ret
0x000002000053e5b2 : push rax ; add dh, dh ; ret 0x7404
0x0000020000168b82 : push rax ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0x12
0x00000200003872fc : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004a3441 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000202645 : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x0000020000150455 : push rax ; add dword ptr [rax], eax ; add cl, ch ; and al, cl ; add byte ptr [rax], al ; ret
0x0000020000674a0e : push rax ; add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x0000020000105b5a : push rax ; add dword ptr [rdi], ecx ; ret 0x7d80
0x00000200001d9fe8 : push rax ; add eax, 0x8b440000 ; ret
0x00000200006c8be2 : push rax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; ret
0x0000020000674c86 : push rax ; add eax, ebp ; ret
0x00000200005d9987 : push rax ; add eax, ebp ; ret 0xa966
0x00000200001ea0ff : push rax ; add rax, r8 ; ret
0x0000020000107dfa : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x00000200000f7d37 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006fe3bb : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000011154b : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000e18c6 : push rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001351da : push rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000052021a : push rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000404918 : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000225cda : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000002715e : push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000036fb73 : push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006cf209 : push rax ; add rsp, 0x30 ; pop rcx ; ret
0x000002000066bd0c : push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200001e982c : push rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000271b6 : push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046f68d : push rax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000008dd67 : push rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200006f7a8e : push rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000558a8 : push rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000295a58 : push rax ; add rsp, 0x70 ; pop rdi ; ret
0x000002000061166b : push rax ; add rsp, 0x80 ; pop rbx ; ret
0x0000020000253893 : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; in al, dx ; ret
0x0000020000275e0f : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x4e
0x0000020000279c63 : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x6f
0x000002000026265b : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; pop rax ; ret
0x000002000025dddf : push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000013fc64 : push rax ; and al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001f0cb6 : push rax ; and al, ch ; ret
0x00000200000a6f4e : push rax ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004e0a1f : push rax ; and byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200005d3c75 : push rax ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200001ce628 : push rax ; and dh, dh ; ret 0x750f
0x0000020000549418 : push rax ; call 0x1ffe4d8da25
0x000002000041e1ca : push rax ; call 0x20000045494
0x00000200003d33ef : push rax ; call 0x2000007290b
0x000002000068d60a : push rax ; call 0x2000012e8dc
0x00000200004ac165 : push rax ; call 0x20000158373
0x00000200005d9618 : push rax ; call 0x20000208ac0
0x00000200003f608f : push rax ; call 0x200003c2353
0x000002000063db2f : push rax ; call 0x200006490e6
0x000002000015cb47 : push rax ; call r10
0x00000200005af5c6 : push rax ; call r8
0x0000020000163080 : push rax ; call rax
0x00000200001a7bbb : push rax ; call rbx
0x0000020000151d2f : push rax ; call rdx
0x00000200005ab122 : push rax ; cmc ; push rsi ; ret
0x00000200003d3ea3 : push rax ; cmp dh, dh ; ret 0x7520
0x000002000013b72e : push rax ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000013b719 ; ret
0x00000200000cfae9 : push rax ; dec r9d ; jmp 0x200000cfadc
0x000002000009a02c : push rax ; fbld dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x00000200000e063b : push rax ; fmul dword ptr [rax - 0x7d] ; ret
0x000002000043fdc4 : push rax ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200004df119 : push rax ; inc dword ptr [rax] ; ret
0x00000200003b2464 : push rax ; inc edx ; jmp 0x200003b2453
0x000002000063bc13 : push rax ; inc edx ; jmp 0x2000063bbe6
0x000002000059648c : push rax ; insb byte ptr [rdi], dx ; mov dl, 0xff ; nop ; jmp 0x200004c138d
0x000002000054598c : push rax ; ja 0x2000054594c ; call qword ptr [rax - 0x18413d17]
0x000002000013b732 : push rax ; jb 0x2000013b715 ; ret
0x000002000009fabb : push rax ; je 0x2000009fac2 ; ret
0x000002000009faba : push rax ; je 0x2000009fac3 ; ret
0x00000200004e887f : push rax ; je 0x200004e8890 ; mov eax, ecx ; ret
0x000002000003e9b3 : push rax ; jmp 0x2000003e1c5
0x000002000017553a : push rax ; jmp 0x20000061842
0x00000200001a834a : push rax ; jmp 0x2000010e613
0x000002000022ee87 : push rax ; jmp 0x2000022ee4f
0x000002000064bb89 : push rax ; jmp 0x2000064bb51
0x00000200006102d8 : push rax ; jmp qword ptr [rcx]
0x000002000022bcd2 : push rax ; jmp rax
0x000002000008a176 : push rax ; jne 0x2000008a183 ; mov al, r8b ; ret
0x00000200000bc4bf : push rax ; jne 0x200000bc4cc ; mov al, r9b ; ret
0x0000020000467ca4 : push rax ; jo 0x20000467d20 ; jne 0x20000467c97 ; push rbx ; ret
0x00000200004b541d : push rax ; jo 0x200004b5446 ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x0000020000506231 : push rax ; jo 0x2000050625d ; and byte ptr [rcx + rcx*4 + 0x7d], cl ; xor al, ch ; ret 0xd8dd
0x00000200005e1535 : push rax ; jo 0x200005e15a1 ; movsxd rbp, eax ; ret 0xcb2a
0x000002000051c077 : push rax ; jrcxz 0x2000051c081 ; je 0x2000051c089 ; call 0x2000013e17c
0x00000200005589c9 : push rax ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x00000200000a90bc : push rax ; lea rax, qword ptr [rax + r9*8] ; ret
0x000002000000dada : push rax ; loop 0x2000000db0e ; adc dword ptr [rdx], ebp ; lahf ; ret
0x00000200000f4795 : push rax ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000041f6bf : push rax ; mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011d283 : push rax ; mov byte ptr [r10 + 0x5f], r11b ; ret
0x00000200005303b2 : push rax ; mov cl, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000010c2b8 : push rax ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000150293 : push rax ; mov eax, 0x142 ; jmp 0x2000015c588
0x00000200001502d3 : push rax ; mov eax, 0x144 ; jmp 0x2000015c588
0x00000200001502f3 : push rax ; mov eax, 0x145 ; jmp 0x2000015c588
0x0000020000150313 : push rax ; mov eax, 0x146 ; jmp 0x2000015c588
0x0000020000150333 : push rax ; mov eax, 0x147 ; jmp 0x2000015c588
0x0000020000150353 : push rax ; mov eax, 0x148 ; jmp 0x2000015c588
0x0000020000150373 : push rax ; mov eax, 0x149 ; jmp 0x2000015c588
0x00000200001425bd : push rax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bd4fc : push rax ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003946e : push rax ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000009172d : push rax ; mov eax, edx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012d109 : push rax ; mov eax, r8d ; ret
0x00000200004feeca : push rax ; mov eax, r9d ; ret
0x00000200004397d5 : push rax ; mov ebx, eax ; call 0x20000068fd6
0x00000200003ff51f : push rax ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x0000020000444737 : push rax ; mov qword ptr [rax], rcx ; jmp 0x20000444705
0x00000200000d10b8 : push rax ; mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000050c3d9 : push rax ; mov qword ptr [rdx + 0x30], rcx ; ret
0x0000020000724e48 : push rax ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a8
0x0000020000724e47 : push rax ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a9
0x000002000063e5be : push rax ; mov r8b, 2 ; mov rcx, rax ; call 0x2000047a805
0x0000020000508710 : push rax ; mov rax, r8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001203bd : push rax ; mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000096bde : push rax ; mov rax, rdx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000159533 : push rax ; mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000046fb43 : push rax ; mov rcx, qword ptr [rcx + 8] ; call 0x2000009d470
0x000002000046fb42 : push rax ; mov rcx, qword ptr [rcx + 8] ; call 0x2000009d471
0x0000020000227c03 : push rax ; mov rcx, r13 ; call 0x20000213e2a
0x000002000043b110 : push rax ; mov rcx, rbx ; call 0x20000068fd7
0x000002000043b3d2 : push rax ; mov rcx, rbx ; call 0x2000006a617
0x00000200003b193c : push rax ; mov rcx, rbx ; call r15
0x00000200004b6841 : push rax ; mov rcx, rbx ; call rax
0x00000200003ece71 : push rax ; mov rcx, rdi ; call 0x200000690e7
0x00000200001d6aa4 : push rax ; movaps xmmword ptr [r10 + 0x50], xmm1 ; ret
0x0000020000508cf5 : push rax ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004dee4f : push rax ; or al, ch ; ret 0xedfd
0x000002000048b493 : push rax ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000095c1c : push rax ; or byte ptr [rax - 0x75], cl ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0xdae9
0x00000200001048f7 : push rax ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x16], cl ; ret
0x000002000048eda4 : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000037b30c : push rax ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000009b53a : push rax ; or byte ptr [rbp + 1], dh ; ret
0x00000200006d9616 : push rax ; or byte ptr [rbp - 0x77], al ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000087904 : push rax ; or byte ptr [rcx + 0x23], cl ; ret
0x000002000070d01f : push rax ; or byte ptr [rcx - 0x75], al ; ret 0x349
0x00000200005c23d1 : push rax ; or byte ptr [rcx - 0x75], cl ; push rsi ; ret 0x7402
0x00000200000ea5df : push rax ; or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x00000200005c2578 : push rax ; or dh, dh ; ret 0x7402
0x0000020000633282 : push rax ; or dh, dh ; ret 0x7403
0x00000200003fc857 : push rax ; or dh, dh ; ret 0xf02
0x000002000051ed93 : push rax ; out 0xff, al ; add rsp, 0x58 ; ret
0x0000020000171b83 : push rax ; out dx, al ; dec dword ptr [rbx + rdi + 0x3d] ; ret
0x0000020000121a06 : push rax ; pop r12 ; ret
0x000002000009ec36 : push rax ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000473189 : push rax ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000a4f92 : push rax ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003940d4 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000041ca43 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000049fd82 : push rax ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000051bd4 : push rax ; pop r14 ; ret
0x000002000002e0e8 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000b4767 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000447cad : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004046cf : push rax ; pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004f04b8 : push rax ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000010f04f : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003c9450 : push rax ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000edc9b : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007b217 : push rax ; pop r15 ; pop rsi ; pop rbx ; ret
0x00000200001d4b15 : push rax ; pop r15 ; ret
0x0000020000038de2 : push rax ; pop rbp ; ret
0x0000020000033474 : push rax ; pop rbx ; ret
0x0000020000080964 : push rax ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000200871 : push rax ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021e5fe : push rax ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003cc7c : push rax ; pop rdi ; ret
0x00000200001cd4ed : push rax ; pop rsi ; ret
0x00000200004c0cb2 : push rax ; push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x000002000050c3d8 : push rax ; push rax ; mov qword ptr [rdx + 0x30], rcx ; ret
0x00000200001cbea2 : push rax ; push rax ; test rdx, rdx ; je 0x200001cbeb4 ; jmp rdx
0x00000200001d6aa9 : push rax ; ret
0x000002000025d264 : push rax ; ret 0x25
0x000002000067d9ad : push rax ; ret 0x41ff
0x000002000000f332 : push rax ; ret 0x763c
0x00000200003efb43 : push rax ; ret 0x85ff
0x00000200004fe405 : push rax ; ret 0xa
0x00000200001b923c : push rax ; ret 0xffe8
0x000002000018702c : push rax ; ret 0xffea
0x000002000072412a : push rax ; ret 0xfffd
0x0000020000444484 : push rax ; ret 9
0x000002000022da2a : push rax ; retf ; and al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x00000200004deb17 : push rax ; sar bh, 0x48 ; add esp, 0x28 ; ret
0x0000020000453f36 : push rax ; sar edi, -0x75 ; ret
0x00000200002859e7 : push rax ; sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x000002000020fd5f : push rax ; sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000468624 : push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x00000200000e3f46 : push rax ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000500274 : push rax ; sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200000c622a : push rax ; shr eax, 0x18 ; and al, 1 ; ret
0x0000020000722154 : push rax ; std ; dec dword ptr [rax - 0x75] ; ret 0xb949
0x000002000072213b : push rax ; std ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000722196 : push rax ; std ; dec dword ptr [rcx - 0x75] ; ret 0xb948
0x00000200006056a4 : push rax ; sub al, 0xf6 ; ret 0x7401
0x000002000023a6b0 : push rax ; sub byte ptr [rbx], dl ; ret 0x5328
0x00000200003b9769 : push rax ; sub byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x00000200004096fd : push rax ; sub dh, dh ; ret 0x7501
0x0000020000672b43 : push rax ; test rax, rax ; je 0x20000672b57 ; mov rcx, rdi ; call rax
0x00000200001cbea3 : push rax ; test rdx, rdx ; je 0x200001cbeb3 ; jmp rdx
0x0000020000446f18 : push rax ; xchg eax, edi ; ret 0x84ff
0x000002000067478c : push rax ; xchg eax, esp ; ret
0x000002000048d8e4 : push rax ; xor al, al ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000007584 : push rax ; xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x000002000068926b : push rax ; xor dh, dh ; ret 0xf02
0x000002000036ded6 : push rax ; xor eax, eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004d5abe : push rax ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d214e : push rax ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000055f4ca : push rax ; xor ebp, eax ; ret
0x000002000044cb27 : push rax ; xor rcx, rsp ; call 0x20000148e16
0x000002000051c13b : push rax ; xor rcx, rsp ; call 0x20000148e17
0x00000200000c2651 : push rbp ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x5f6
0x00000200001392ae : push rbp ; add bh, bh ; ret 0x8341
0x00000200005dd518 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000012a175 : push rbp ; add byte ptr [rax], al ; ret
0x00000200004ad508 : push rbp ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000e4721 : push rbp ; add dh, al ; add byte ptr [rax], al ; jmp 0x200000e46f1
0x000002000006c6fb : push rbp ; add dh, dh ; ret 0x7401
0x00000200004a0d44 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000596c6 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003a3653 : push rbp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000200001f67a1 : push rbp ; add dword ptr [rdi + rcx + 0x22], eax ; ret 0xed33
0x00000200005ff6c9 : push rbp ; add dword ptr [rdi + rcx + 0x22], eax ; ret 0xff0
0x00000200000b9bd7 : push rbp ; and byte ptr [rax], al ; ret
0x000002000059fddf : push rbp ; call rax
0x000002000047c83f : push rbp ; cmp al, ch ; ret 0xc6aa
0x00000200006cee35 : push rbp ; cmp byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200004d1f01 : push rbp ; cmp byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7f], cl ; ret 0xb8
0x000002000049a40f : push rbp ; cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2874
0x0000020000162a1f : push rbp ; cmp byte ptr [rax - 0x75], cl ; call rax
0x00000200003b1987 : push rbp ; cmp edi, ecx ; inc dword ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x00000200004935a8 : push rbp ; enter -0x74b8, 0x4d ; mov r8, rdi ; call rax
0x00000200001b1591 : push rbp ; fadd dword ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x000002000061ef92 : push rbp ; fdivr st(7) ; add rsp, 0x48 ; ret
0x000002000026d428 : push rbp ; ficom dword ptr [rax] ; add al, bh ; ret
0x00000200005eafb7 : push rbp ; fidiv word ptr [rbp - 0x3b7cb701] ; pop rbx ; ret
0x00000200000dfcba : push rbp ; fisttp word ptr [rax + 0x33] ; ret 0xe083
0x00000200006449c2 : push rbp ; fsubr st(0) ; ret
0x000002000016d9db : push rbp ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000000e6d7 : push rbp ; in eax, dx ; mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000137f90 : push rbp ; inc byte ptr [rdi] ; add bh, bh ; ret
0x0000020000570709 : push rbp ; insd dword ptr [rdi], dx ; in eax, dx ; push rsi ; ret
0x00000200001321dc : push rbp ; iretd ; mov rcx, rbx ; call 0x2000012e493
0x00000200005323f0 : push rbp ; jmp rsp
0x000002000063c55d : push rbp ; loopne 0x2000063c566 ; ret 0xc13b
0x0000020000397980 : push rbp ; mov byte ptr [rbx + rcx*4 + 0x45], cl ; adc byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005744e7 : push rbp ; mov ch, 0xed ; push rsi ; ret
0x0000020000501465 : push rbp ; mov eax, 0x48c03345 ; mov ecx, edi ; call r15
0x000002000039793e : push rbp ; mov ecx, es ; call 0x20069fbac55
0x000002000016307b : push rbp ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000055161f : push rbp ; mov word ptr [rip - 0x3974bb00], ss ; call 0x2000015d889
0x00000200005fd5ad : push rbp ; or byte ptr [rax - 0x3f], cl ; jmp 0x1ffc2eb22c1
0x000002000036e5b4 : push rbp ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000520142 : push rbp ; or dword ptr [rax], eax ; ret
0x000002000000de53 : push rbp ; or dword ptr [rip - 0x27aeebc9], edi ; ret
0x000002000064e034 : push rbp ; or ecx, dword ptr [rdi] ; ret 0x4589
0x00000200001a9a62 : push rbp ; out -1, eax ; ret 0x5589
0x0000020000132bdf : push rbp ; pop rax ; jmp 0x20000132ba9
0x00000200007122a9 : push rbp ; pop rsp ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005d9616 : push rbp ; push r8 ; call 0x20000208ac2
0x00000200005d9615 : push rbp ; push r8 ; call 0x20000208ac3
0x00000200004b6840 : push rbp ; push rax ; mov rcx, rbx ; call rax
0x000002000008eb71 : push rbp ; push rdi ; str word ptr [rcx - 0x7d] ; ret 0x4d04
0x0000020000678a07 : push rbp ; push rdx ; ret
0x00000200001476cf : push rbp ; ret
0x00000200004d9535 : push rbp ; ret 0x4166
0x000002000044ad96 : push rbp ; ret 0x41ff
0x0000020000519b42 : push rbp ; ret 0x45ff
0x0000020000011412 : push rbp ; ret 0x7ec2
0x000002000066f85e : push rbp ; ret 0xb8ff
0x0000020000551627 : push rbp ; ret 0xffc0
0x0000020000401a07 : push rbp ; ret 0xffd4
0x000002000056bc85 : push rbp ; ret 0xffec
0x000002000059032c : push rbp ; ret 0xfff1
0x0000020000191f6a : push rbp ; ret 0xfff2
0x00000200005dd46b : push rbp ; rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x0000020000646153 : push rbp ; ror byte ptr [rax - 0x73], 0x4d ; fsubr st(0) ; ret 0xa29c
0x0000020000442183 : push rbp ; sahf ; ret
0x0000020000423fb7 : push rbp ; sar dil, cl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000230dc7 : push rbp ; sbb byte ptr [rbp - 0x75], cl ; ret 0x894c
0x0000020000051fe4 : push rbp ; sbb dh, dh ; ret 0xf20
0x000002000060a0fe : push rbp ; scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004aaffd : push rbp ; scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000037baec : push rbp ; std ; jmp qword ptr [rcx]
0x0000020000688cc3 : push rbp ; sub al, ch ; ret 0xb504
0x0000020000057205 : push rbp ; sub cl, ch ; ret 0xfff1
0x0000020000031baf : push rbp ; xchg eax, edi ; call 0x2000003d074
0x00000200004faf4e : push rbp ; xchg eax, edi ; mov rcx, r13 ; call 0x20000120f3c
0x00000200006cb9aa : push rbp ; xor al, 0x44 ; mov eax, edx ; jmp 0x200006cb9bb
0x000002000072f3fd : push rbp ; xor byte ptr [rax - 0x73], cl ; loopne 0x2000072f40a ; ret
0x000002000018104f : push rbp ; xor cl, ch ; in al, dx ; or eax, esi ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000021d9a : push rbp ; xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x00000200004466e6 : push rbx ; adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9c77
0x0000020000472867 : push rbx ; adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200000b4b73 : push rbx ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200000ecf83 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200003fb4dc : push rbx ; adc dh, dh ; ret 0x7504
0x0000020000043df4 : push rbx ; adc dh, dh ; ret 0xf08
0x000002000003334f : push rbx ; adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005d7189 : push rbx ; add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200004e0298 : push rbx ; add al, 0xf6 ; ret 0x7408
0x00000200000e4bc9 : push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x000002000014e4b5 : push rbx ; add byte ptr [rax], al ; add cl, ch ; ret 0xe0
0x000002000013e4f9 : push rbx ; add byte ptr [rax], al ; ret
0x00000200000ebd6a : push rbx ; add byte ptr [rdi], cl ; test byte ptr [rsi - 0xa000000], al ; ret 0xf08
0x00000200004b7556 : push rbx ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x0000020000473358 : push rbx ; add dword ptr [rax - 0x75], ecx ; rol dword ptr [rcx + 0xf], 1 ; ret 0xc933
0x000002000045baf8 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200001504b5 : push rbx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xc0
0x0000020000448209 : push rbx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000200000e6b8b : push rbx ; add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x00000200001c0724 : push rbx ; add eax, 0xe8ce8b48 ; ret 0x1da1
0x00000200002059cd : push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x00000200006e9bcf : push rbx ; and byte ptr [rcx + 0x200], bh ; call r9
0x00000200004b6677 : push rbx ; call 0x200000e1ac5
0x0000020000003203 : push rbx ; cli ; sahf ; ret
0x000002000066e6a0 : push rbx ; cmp byte ptr [rax - 0x75], cl ; call 0x2000004a8c0
0x00000200004d1da2 : push rbx ; cmp byte ptr [rdx], bh ; ret 0x820f
0x0000020000371927 : push rbx ; cmp edi, edi ; push rsi ; ret
0x000002000002b822 : push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d3aba : push rbx ; idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000673230 : push rbx ; insd dword ptr [rdi], dx ; call 0x20000294005
0x00000200006732e3 : push rbx ; insd dword ptr [rdi], dx ; call 0x20000294e25
0x00000200004eb211 : push rbx ; jmp 0x200004eb217
0x00000200001c9ed9 : push rbx ; jno 0x200001c9efc ; add bl, ch ; or dword ptr [rbp - 0x7c], eax ; ret
0x000002000050e1b9 : push rbx ; lodsb al, byte ptr [rsi] ; ret
0x0000020000666e0b : push rbx ; mov ecx, r9d ; call 0x20000294008
0x00000200003ecfb9 : push rbx ; mov rax, r9 ; ret
0x00000200003f7da1 : push rbx ; movsxd rbp, eax ; pop rax ; ret 0xffe9
0x00000200000d28fd : push rbx ; or al, 0 ; mov eax, r9d ; ret
0x00000200004fc3ad : push rbx ; or bl, ch ; ret 0x4b80
0x00000200004bff5b : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200006e97f7 : push rbx ; or byte ptr [rbp - 0x75], al ; ret 0xb9
0x00000200003ee3b5 : push rbx ; or byte ptr [rbx - 0x72b3e7bd], cl ; add al, 0xc2 ; jmp 0x200003ee391
0x00000200000305c3 : push rbx ; or byte ptr [rcx + 0x33], cl ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200006e316f : push rbx ; or byte ptr [rcx + rcx*4 + 0x63], al ; adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200006e5040 : push rbx ; or byte ptr [rcx - 0x74b6ef8d], cl ; ret 0x180f
0x0000020000623744 : push rbx ; or byte ptr [rcx - 0x75], al ; ret 0x8d4c
0x00000200004ff361 : push rbx ; out dx, al ; ret 0x41ff
0x0000020000538369 : push rbx ; pop rax ; ret 0x4cff
0x00000200001d3ab9 : push rbx ; push rbx ; idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x000002000059b3cb : push rbx ; push rsi ; ret 0x7420
0x000002000000e5f4 : push rbx ; ret
0x00000200005866b0 : push rbx ; ret 0xfff0
0x0000020000234e49 : push rbx ; ret 0xfff1
0x0000020000127c72 : push rbx ; sbb byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0x4b88
0x00000200001157b0 : push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000014c573 : push rbx ; sbb byte ptr [rbx], bh ; ret 0x3373
0x0000020000713706 : push rbx ; sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x0000020000053805 : push rbx ; sbb dh, dh ; ret 0xf20
0x0000020000127c76 : push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0x4b88
0x0000020000431182 : push rbx ; sub byte ptr [rbx - 0x7bf00006], al ; ret
0x0000020000154ce5 : push rbx ; xchg eax, edi ; sub dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200004e851f : push rbx ; xor byte ptr [rax + 3], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xb49
0x00000200000f8613 : push rcx ; adc bl, al ; mov eax, 0xc000000d ; ret
0x00000200000f9190 : push rcx ; adc byte ptr [rax + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200005dde57 : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xffd018d0 ; call rax
0x00000200003fff0f : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xffedf818 ; call rax
0x00000200006d9cc8 : push rcx ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000494108 : push rcx ; adc byte ptr [rbx + rbp - 1], dh ; ret 0x8349
0x00000200000ad501 : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000600ed7 : push rcx ; adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x00000200004419f5 : push rcx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200001ff976 : push rcx ; adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200006efd09 : push rcx ; adc cl, byte ptr [rax - 1] ; ret
0x00000200005b0ae4 : push rcx ; adc dh, dh ; ret 0xf01
0x000002000015e18c : push rcx ; add al, 0x48 ; and dword ptr [rcx + 8], 0 ; ret
0x000002000046be5c : push rcx ; add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000048df0f : push rcx ; add al, 0xf6 ; ret 0x7401
0x0000020000516816 : push rcx ; add al, 0xff ; ret 0x533b
0x0000020000281026 : push rcx ; add al, bh ; jmp qword ptr [rdi]
0x00000200004ca508 : push rcx ; add al, bl ; mov eax, 0xc000000d ; ret
0x0000020000367ed9 : push rcx ; add al, byte ptr [rbp + 0x33] ; shr al, 0x69 ; ret
0x0000020000234e62 : push rcx ; add bh, byte ptr [rcx + 0x12a] ; call 0x200001510a9
0x0000020000628bdb : push rcx ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000043eb0b : push rcx ; add byte ptr [rax], al ; add byte ptr [rbp - 0xf28a40], al ; ret
0x000002000014e475 : push rcx ; add byte ptr [rax], al ; add cl, ch ; add ah, cl ; add byte ptr [rax], al ; ret
0x0000020000281022 : push rcx ; add byte ptr [rbx - 0x7ffae60], dl ; jmp qword ptr [rdi]
0x000002000038239f : push rcx ; add byte ptr [rbx], bl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000280f82 : push rcx ; add byte ptr [rcx + 0x6000519d], bl ; jmp qword ptr [rdi]
0x0000020000281926 : push rcx ; add byte ptr [rcx], dh ; ret
0x0000020000281862 : push rcx ; add byte ptr [rcx], dl ; ret 0x51
0x000002000018fa0f : push rcx ; add ch, al ; ret
0x0000020000135734 : push rcx ; add ch, bl ; stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x0000020000554e71 : push rcx ; add cl, byte ptr [rbp + 0x25e8274a] ; ret 0xffbf
0x00000200001356d5 : push rcx ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x0000020000511406 : push rcx ; add cl, byte ptr [rdi] ; mov dh, 5 ; ret
0x00000200000f5ec3 : push rcx ; add dh, dh ; ret 0x7501
0x00000200001b29f2 : push rcx ; add dh, dh ; ret 0xf10
0x0000020000643b6b : push rcx ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000056b0c6 : push rcx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; ret
0x0000020000150475 : push rcx ; add dword ptr [rax], eax ; add cl, ch ; add al, cl ; add byte ptr [rax], al ; ret
0x00000200003af287 : push rcx ; add dword ptr [rbx], edi ; ret 0xf41
0x0000020000222672 : push rcx ; add dword ptr [rcx + 0xf], eax ; ret 0xb841
0x000002000045dbe4 : push rcx ; add dword ptr [rcx - 0x75], eax ; ret
0x00000200001d98c1 : push rcx ; add dword ptr [rdx], edi ; ret 0x473
0x0000020000367eef : push rcx ; add eax, 0xe8c03345 ; push rbx ; ret
0x000002000004e7f3 : push rcx ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x0000020000271019 : push rcx ; add r8b, r14b ; jmp qword ptr [rsi]
0x00000200001ce543 : push rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d47c7 : push rcx ; and byte ptr [rcx - 0x77], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x000002000012e11a : push rcx ; and dh, dh ; ret 0xf01
0x00000200000e2f7d : push rcx ; and dh, dh ; ret 0xf0f
0x000002000057e05b : push rcx ; and dl, dh ; push rsi ; ret
0x000002000013aa1a : push rcx ; call 0x1ff835baa30
0x00000200003b2dea : push rcx ; call rax
0x00000200000bd100 : push rcx ; clc ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000023a409 : push rcx ; cmp byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000023a401 : push rcx ; cmp byte ptr [rax], al ; mov dh, 0x51 ; cmp byte ptr [rax], al ; ret
0x000002000023a405 : push rcx ; cmp byte ptr [rax], al ; ret
0x000002000067e222 : push rcx ; hlt ; ret 0xff
0x00000200005b299c : push rcx ; idiv edi ; setne dl ; jmp 0x200005b29c2
0x0000020000412ed7 : push rcx ; inc byte ptr [rbp - 0x1677f001] ; ret 0x14
0x0000020000552236 : push rcx ; inc dword ptr [rcx - 0x75] ; ret 0x55e9
0x000002000017bb9c : push rcx ; ja 0x2000017bb94 ; dec dword ptr [rcx - 0x75] ; ret 0x4df0
0x0000020000570cb6 : push rcx ; jge 0x20000570cab ; push rsi ; ret
0x000002000046309e : push rcx ; jne 0x200004630af ; test eax, eax ; setg al ; ret
0x00000200005b3e20 : push rcx ; jnp 0x200005b3e1f ; dec dword ptr [rax - 0x75] ; ret
0x00000200000aa891 : push rcx ; jo 0x200000aa882 ; ret 0x8b44
0x000002000003b3fb : push rcx ; leave ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f99a3 : push rcx ; lodsd eax, dword ptr [rsi] ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000603c51 : push rcx ; mov ah, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x000002000015df33 : push rcx ; mov dword ptr ss:[rcx + 8], 0x48 ; ret
0x000002000004c920 : push rcx ; mov qword ptr [rcx + 0x38], rdx ; mov byte ptr [rcx + 0x52], dl ; ret
0x0000020000724e2d : push rcx ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a8
0x0000020000724e2c : push rcx ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a9
0x00000200001c36c8 : push rcx ; mov r9d, 7 ; call 0x200000af911
0x000002000010c08b : push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200001ef953 : push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000020e957 : push rcx ; or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200003d1a39 : push rcx ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000103f88 : push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200003d6f3e : push rcx ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000013053b : push rcx ; or byte ptr [rax], al ; mov al, 1 ; jmp 0x2000013050b
0x000002000013053a : push rcx ; or byte ptr [rax], al ; mov al, 1 ; jmp 0x2000013050c
0x00000200003cef5e : push rcx ; or byte ptr [rbp + 4], dh ; and qword ptr [r9], 0 ; ret
0x00000200005d1a2f : push rcx ; or byte ptr [rbp - 0x76], al ; ret
0x000002000059c34b : push rcx ; or byte ptr [rbx + 0xf481345], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000002000003171e : push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x0000020000497b74 : push rcx ; or byte ptr [rcx - 0x7d], cl ; ret 0x4410
0x00000200000366eb : push rcx ; or byte ptr [rcx - 0xa], dh ; ret 0x7504
0x00000200004fba56 : push rcx ; out 0xa, al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000057ce30 : push rcx ; out dx, eax ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x00000200001db5ff : push rcx ; pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x00000200004bd1d8 : push rcx ; push -0x3fcdfc8b ; ret
0x000002000004c91f : push rcx ; push rcx ; mov qword ptr [rcx + 0x38], rdx ; mov byte ptr [rcx + 0x52], dl ; ret
0x000002000004c926 : push rcx ; push rdx ; ret
0x000002000015e1d5 : push rcx ; push rsp ; mov eax, edx ; ret
0x0000020000215156 : push rcx ; ret
0x00000200000e319a : push rcx ; ret 0x1c
0x00000200000bb603 : push rcx ; ret 0x21
0x00000200004a1088 : push rcx ; ret 0x48ff
0x00000200004801b1 : push rcx ; ret 0x4cff
0x00000200002916ec : push rcx ; ret 0x63
0x000002000000e240 : push rcx ; ret 0xcce4
0x000002000016fb47 : push rcx ; ret 0xffed
0x00000200005901ac : push rcx ; ret 0xfff1
0x0000020000191fb5 : push rcx ; ret 0xfff2
0x00000200005f466f : push rcx ; sar rdi, -0x75 ; ret
0x00000200003b5eea : push rcx ; sbb al, ch ; int1 ; leave ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006f8b78 : push rcx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200004f67ec : push rcx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000002000059a0a0 : push rcx ; sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x00000200003fbd90 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x0000020000600f7e : push rcx ; sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x00000200003be5c6 : push rcx ; sbb dh, dh ; ret 0x4801
0x00000200005a805c : push rcx ; std ; call 0x200001ca105
0x0000020000722245 : push rcx ; std ; inc dword ptr [rbx + rcx*4 + 0x1d] ; in eax, -0x13 ; ret 0x8bff
0x000002000020a7bf : push rcx ; sub byte ptr [rcx - 0x48], al ; jmp qword ptr [rbx]
0x00000200004102ae : push rcx ; sub dh, dh ; ret 0xf02
0x000002000000dd48 : push rcx ; sub esi, eax ; ret
0x0000020000725de5 : push rcx ; xor al, 0xf6 ; ret 0x7401
0x00000200001585eb : push rcx ; xor byte ptr [rax + 0x28c48348], dl ; ret
0x00000200000f92eb : push rcx ; xor byte ptr [rbx + rdi - 0x40], al ; je 0x200000f92eb ; jmp 0x200000f92bf
0x00000200003e668c : push rdi ; adc byte ptr [rbp + 0x40840fd2], al ; ret
0x00000200006ccda3 : push rdi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000050164b : push rdi ; add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x00000200002376e8 : push rdi ; add al, 0xf6 ; ret
0x000002000019446a : push rdi ; add al, 0xf6 ; ret 0x7508
0x0000020000039fec : push rdi ; add byte ptr [rax], al ; movsxd r8, eax ; jne 0x2000003a033 ; ret
0x0000020000471bd6 : push rdi ; add byte ptr [rbp - 0x42], dl ; push rdi ; add byte ptr [rcx], al ; ret
0x0000020000471bde : push rdi ; add byte ptr [rbx - 0x3d], cl ; push rdi ; add byte ptr [rcx], cl ; ret 0x57
0x0000020000471bda : push rdi ; add byte ptr [rcx], al ; ret
0x0000020000471be2 : push rdi ; add byte ptr [rcx], cl ; ret 0x57
0x0000020000235a72 : push rdi ; add byte ptr [rdi], al ; add byte ptr [rbp + 0xf], 0x47 ; ret 0x8545
0x0000020000471bc2 : push rdi ; add byte ptr [rsi - 0x15ffa83e], al ; ret 0x57
0x000002000045a136 : push rdi ; add ch, al ; ret
0x000002000053eedf : push rdi ; add dh, dh ; ret 0xf10
0x0000020000471bc6 : push rdi ; add dl, ch ; ret 0x57
0x00000200003fb257 : push rdi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000150535 : push rdi ; add dword ptr [rax], eax ; add cl, ch ; rol byte ptr [rax], 0 ; ret
0x00000200005cb2f0 : push rdi ; add dword ptr [rdi + rcx + 0x22], eax ; ret 0xff0
0x00000200000cb0cb : push rdi ; add esi, esi ; ret 0xf0f
0x0000020000510bd5 : push rdi ; and al, ch ; fdiv st(6), st(0) ; ret 0x85ff
0x00000200000a8ba8 : push rdi ; and byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200003e6596 : push rdi ; and byte ptr [rdi], cl ; test cl, dl ; ret
0x00000200003d694e : push rdi ; and ch, cl ; ret 0xfffa
0x000002000044cdc4 : push rdi ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200006d508d : push rdi ; call rbx
0x00000200001681a4 : push rdi ; cdq ; in al, dx ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x000002000010332b : push rdi ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000500087 : push rdi ; cmp byte ptr [rbx], dh ; leave ; call rax
0x0000020000500094 : push rdi ; cmp byte ptr [rcx + 1], bh ; call r8
0x000002000063c3c1 : push rdi ; cmp byte ptr [rcx + 2], bh ; call rax
0x000002000063c3f7 : push rdi ; cmp byte ptr [rcx + 3], bh ; call rax
0x00000200001fd9f6 : push rdi ; cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200003e6708 : push rdi ; cmp byte ptr [rdi], cl ; test bh, al ; ret 0x16
0x00000200003c403b : push rdi ; cmp dh, dh ; ret 0xf02
0x0000020000242561 : push rdi ; cmp eax, dword ptr [rax] ; ret 0x3b59
0x0000020000446a55 : push rdi ; cwde ; ret 0x48ff
0x000002000054d0d1 : push rdi ; imul al ; dec dword ptr [rbp - 0x75] ; ret
0x00000200006f22c1 : push rdi ; insb byte ptr [rdi], dx ; enter -0x1701, 0x7e ; call rsp
0x00000200003e6803 : push rdi ; je 0x200003e6792 ; jmp 0x20000552a4a
0x00000200006f945d : push rdi ; jl 0x200006f942b ; dec dword ptr [rax - 1] ; ret
0x00000200004d8007 : push rdi ; or al, 0 ; mov eax, edx ; ret
0x000002000011eb94 : push rdi ; or al, 0x8b ; pop rdi ; sbb al, 0xff ; ret 0xf41
0x000002000070d20e : push rdi ; or al, ch ; imul eax, dword ptr [rsi], -0x5b ; dec dword ptr [rax - 0x75] ; ret
0x00000200006789a6 : push rdi ; or al, ch ; ror dword ptr [rsi - 0x52], cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000067d59c : push rdi ; or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x00000200001e9c62 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200000e6dc5 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000020000488d70 : push rdi ; or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x0000020000226456 : push rdi ; or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0xb941
0x000002000041d7d5 : push rdi ; or byte ptr [rbx], bh ; ret 0x820f
0x00000200000b8876 : push rdi ; or byte ptr [rcx - 0x7d], al ; ret 0x42e0
0x000002000021f910 : push rdi ; pop rax ; call 0x20000214182
0x00000200006d528f : push rdi ; pop rax ; call rbx
0x00000200004dbf2d : push rdi ; push 0xf8 ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0xc2b
0x00000200006d54ec : push rdi ; push rax ; call rbx
0x00000200001a0741 : push rdi ; ret
0x000002000067285e : push rdi ; ret 0x2ff
0x0000020000516b90 : push rdi ; ret 0x48ff
0x000002000066f6ba : push rdi ; ret 0xe9ff
0x00000200004ebf51 : push rdi ; ret 0xfffc
0x0000020000520123 : push rdi ; ret 0xfffd
0x000002000049fe43 : push rdi ; rol dword ptr [rbp - 0x3f6bf036], 1 ; ret
0x00000200000e00e5 : push rdi ; sbb al, 0 ; dec byte ptr [rax - 0x75] ; ret
0x00000200001c19c3 : push rdi ; sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200005094b5 : push rdi ; stc ; ret
0x000002000008eb72 : push rdi ; str word ptr [rcx - 0x7d] ; ret 0x4d04
0x000002000066a27a : push rdi ; xor byte ptr [rax - 0x75], cl ; ret
0x000002000014d7f1 : push rdx ; adc al, 0x8b ; adc al, 0x2b ; ret 0xccc3
0x000002000011bc76 : push rdx ; add al, 0x83 ; ret 0x2307
0x000002000042bb48 : push rdx ; add al, 0xff ; leave ; jne 0x2000042bb47 ; ret
0x0000020000089952 : push rdx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x5189
0x0000020000478358 : push rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200003849c4 : push rdx ; add al, byte ptr [rcx - 0x78] ; add byte ptr [rbp + 3], cl ; ret 0x3b4d
0x000002000014e495 : push rdx ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014e485 ; add byte ptr [rax], al ; ret
0x000002000072d1d6 : push rdx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001124ab : push rdx ; add dword ptr [rax + 0x3b], ecx ; ret
0x0000020000150495 : push rdx ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150465 ; add byte ptr [rax], al ; ret
0x00000200001967f1 : push rdx ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x00000200003d2bdd : push rdx ; add esi, esi ; ret 0xf10
0x000002000010ca7e : push rdx ; and al, 0 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000fcf8b : push rdx ; and byte ptr [rax + 0xf], cl ; rol byte ptr [rcx - 1], 1 ; ret
0x00000200003d31e6 : push rdx ; and byte ptr [rbx + rcx*4 + 0x5a], al ; sbb byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000051e66a : push rdx ; cmc ; ret
0x000002000072f00a : push rdx ; cmp eax, 0x348ffb7 ; ret
0x00000200001a7b35 : push rdx ; inc dword ptr [rcx - 0x73] ; call rbx
0x00000200000b0314 : push rdx ; jmp qword ptr [rbx]
0x000002000003647e : push rdx ; jne 0x20000036494 ; ret
0x00000200005fd2aa : push rdx ; mov cl, 0xa5 ; push rsi ; ret
0x0000020000724e12 : push rdx ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a8
0x0000020000724e11 : push rdx ; mov qword ptr [rsp + 0x20], r15 ; call 0x200001510a9
0x000002000001e29a : push rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200000fe4e2 : push rdx ; or al, 0x8b ; ret 0x25
0x00000200000f2eab : push rdx ; or byte ptr [rax - 0x3f], cl ; call 0x1ffc33276c5
0x00000200000b43fa : push rdx ; or byte ptr [rax - 0x75], cl ; jmp 0x1ffffd9cf53
0x000002000012b67a : push rdx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000130048 : push rdx ; or byte ptr [rax], al ; test eax, eax ; jns 0x2000013005d ; mov r8d, r10d ; jmp 0x2000013001a
0x00000200000ffd99 : push rdx ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200003ffe7f : push rdx ; or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x0000020000073add : push rdx ; or byte ptr [rcx + 0x23], cl ; ret
0x00000200000a23c5 : push rdx ; or byte ptr [rcx + 0x3b], cl ; ret 0xea72
0x00000200000aa87a : push rdx ; or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x00000200004a3811 : push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x000002000040eda3 : push rdx ; or byte ptr [rcx - 0x75], cl ; ret 0x8d4f
0x000002000067285d : push rdx ; push rdi ; ret 0x2ff
0x000002000004c927 : push rdx ; ret
0x0000020000721f66 : push rdx ; ret 0x48ff
0x0000020000443d87 : push rdx ; ret 0x4cff
0x00000200004d6042 : push rdx ; ret 0xffdc
0x00000200001c2ba6 : push rdx ; ret 0xfff0
0x000002000043b97a : push rdx ; salc ; ret 0x90ff
0x000002000064545b : push rdx ; sbb al, 0x8b ; ret 0x25
0x0000020000672451 : push rdx ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x00000200000bfc18 : push rdx ; sbb eax, 0x5fff000 ; ret 0x209c
0x000002000043acba : push rdx ; stc ; ret 0x4cff
0x00000200003d3244 : push rdx ; xor byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200003ef58e : push rdx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ab6e8 : push rsi ; adc byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x3b], r9b ; ret 0x840f
0x000002000039b1ba : push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000020000492d7d : push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000200001ba502 : push rsi ; adc byte ptr [rcx], al ; add bl, ch ; or bh, bh ; ret 0x153b
0x00000200006331ce : push rsi ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x000002000039c27b : push rsi ; add al, 0x8b ; add al, 0xc1 ; jmp 0x1ffc1fc4da4
0x000002000015a526 : push rsi ; add byte ptr es:[rax], al ; nop ; ret
0x00000200001121b0 : push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000038ff1 : push rsi ; and byte ptr [rbp - 0x75], cl ; ret 0xc149
0x000002000066d717 : push rsi ; call 0x20000294004
0x00000200000248c4 : push rsi ; call qword ptr [rbx]
0x00000200005866ab : push rsi ; cmc ; call qword ptr [rax - 0xf3dac17]
0x00000200000a0255 : push rsi ; dec dword ptr [rcx - 0x75] ; ret 0xff48
0x00000200004c931f : push rsi ; je 0x200004c92b0 ; ret
0x0000020000538a76 : push rsi ; js 0x20000538a66 ; ret
0x00000200004a4976 : push rsi ; mov ecx, 0xe1e8ffe3 ; ret 0xffb8
0x00000200001cd77d : push rsi ; mov r8b, dl ; jmp 0x200001cd7cd
0x00000200006740e7 : push rsi ; mov rcx, rdi ; call 0x20000294e28
0x000002000001ebb0 : push rsi ; or byte ptr [rax + 0x9d], dl ; add bl, cl ; ret
0x000002000012f941 : push rsi ; or byte ptr [rax], al ; mov al, byte ptr [rip + 0x2218a2] ; ret
0x000002000012f9f2 : push rsi ; or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004e0d89 : push rsi ; or byte ptr [rbp - 0x75], al ; outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x0000020000499e4b : push rsi ; or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x0000020000646a53 : push rsi ; out dx, al ; dec dword ptr [rax - 0x7d] ; ret 0x890b
0x000002000050d78d : push rsi ; pop rax ; lea rcx, qword ptr [r14 - 0x10] ; call 0x2000013903d
0x000002000067c83e : push rsi ; pop rdx ; ret 0x48ff
0x000002000000eb21 : push rsi ; ret
0x000002000012286d : push rsi ; ret 0x18
0x00000200003a093c : push rsi ; ret 0x19
0x00000200005381ff : push rsi ; ret 0x45ff
0x0000020000278878 : push rsi ; ret 0x68
0x0000020000070b2a : push rsi ; ret 0x7401
0x00000200004f5287 : push rsi ; ret 0x7402
0x00000200000cc619 : push rsi ; ret 0x7403
0x000002000008964e : push rsi ; ret 0x7408
0x00000200001336ab : push rsi ; ret 0x7410
0x000002000059b3cd : push rsi ; ret 0x7420
0x0000020000191a45 : push rsi ; ret 0x7501
0x0000020000195ed2 : push rsi ; ret 0x7503
0x0000020000603706 : push rsi ; ret 0x7573
0x0000020000046325 : push rsi ; ret 0x75f0
0x000002000018807a : push rsi ; ret 0xba01
0x0000020000726779 : push rsi ; ret 0xeb02
0x000002000006cac2 : push rsi ; ret 0xf01
0x0000020000364c53 : push rsi ; ret 0xf02
0x00000200000cb9d8 : push rsi ; ret 0xf03
0x000002000005d582 : push rsi ; ret 0xf04
0x00000200001709d2 : push rsi ; ret 0xf07
0x00000200001748d9 : push rsi ; ret 0xf08
0x0000020000174997 : push rsi ; ret 0xf10
0x00000200001a1b5c : push rsi ; ret 0xf20
0x0000020000077e72 : push rsi ; ret 0xf40
0x00000200003afffc : push rsi ; ret 0xf44
0x0000020000064b6f : push rsi ; ret 0xff0
0x0000020000648bc6 : push rsi ; ret 0xffc4
0x00000200005ba08e : push rsi ; ret 0xffd1
0x000002000068e719 : push rsi ; ret 0xffff
0x00000200001222e5 : push rsi ; ret 8
0x0000020000609ebb : push rsi ; retf 0x48ff ; test eax, eax ; je 0x20000609ecd ; call rax
0x0000020000609f56 : push rsi ; retf 0x48ff ; test eax, eax ; je 0x20000609f68 ; call rax
0x00000200000c3b97 : push rsi ; rol dword ptr [rcx], 0x75 ; or byte ptr [rcx + 0x3b], al ; ret 0x8a41
0x000002000016e9cf : push rsi ; rol dword ptr [rcx], 0x75 ; or dword ptr [rcx + 0x3b], eax ; ret
0x00000200006fe978 : push rsi ; sar edi, 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000505f98 : push rsi ; sbb al, byte ptr [rax] ; ret
0x000002000007caf7 : push rsi ; sbb byte ptr [rax + 0x23], cl ; ret 0xc149
0x00000200000f9b4c : push rsi ; sbb byte ptr [rcx + 0xf], cl ; ret
0x000002000010e030 : push rsi ; stc ; inc dword ptr [rax - 0x9dfe5b1] ; ret
0x00000200007224ad : push rsi ; std ; dec dword ptr [rbx + rcx*4 + 5] ; xor esp, ebp ; ret 0x49ff
0x000002000050e3b6 : push rsi ; stosb byte ptr [rdi], al ; ret
0x0000020000053a98 : push rsi ; sub al, 0x8b ; and byte ptr [rbx], r8b ; ret 0x8d4c
0x000002000037daf7 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x0000020000514c90 : push rsi ; sub rsp, 0x20 ; call 0x2000013b560
0x000002000037da78 : push rsi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006564c4 : push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x00000200002864ed : push rsp ; adc dword ptr [rax], eax ; sysenter
0x0000020000276a29 : push rsp ; adc eax, dword ptr [rax] ; sysenter
0x00000200000628a4 : push rsp ; add al, byte ptr [rax] ; add bh, bh ; ret 0x8348
0x0000020000602474 : push rsp ; add byte ptr [r13 + 3], r8b ; ret 0x8944
0x00000200001e6fc7 : push rsp ; add byte ptr [rax - 0x75], cl ; ret
0x000002000048d8c4 : push rsp ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000209f3 : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000116949 : push rsp ; add byte ptr [rax], al ; ret
0x0000020000035d32 : push rsp ; add dword ptr [rbx + rcx*4], 0x8bc7ffcf ; ret 0xd349
0x000002000016fb42 : push rsp ; add eax, 0x51e99000 ; ret 0xffed
0x000002000051e550 : push rsp ; and al, 0x20 ; call 0x2000014e0e6
0x00000200000809cc : push rsp ; and al, 0x20 ; call qword ptr [rdi]
0x000002000066b581 : push rsp ; and al, 0x20 ; call rbx
0x0000020000718e9a : push rsp ; and al, 0x20 ; lea rcx, qword ptr [rsp + 0x28] ; call rax
0x000002000072f0b1 : push rsp ; and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x00000200004f329c : push rsp ; and al, 0x20 ; mov ecx, edi ; call rsi
0x00000200004b46b0 : push rsp ; and al, 0x20 ; mov rcx, rbp ; call rax
0x0000020000443192 : push rsp ; and al, 0x20 ; mov rdx, rbx ; call r10
0x000002000019ceea : push rsp ; and al, 0x28 ; call 0x200001d9191
0x000002000066838e : push rsp ; and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200001cc376 : push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x000002000019cec4 : push rsp ; and al, 0x28 ; mov rcx, rdi ; call 0x200001d9194
0x000002000012e2ff : push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x000002000010c42a : push rsp ; and al, 0x30 ; lea r12d, dword ptr [r13 + 1] ; call 0x20000058739
0x00000200001d2603 : push rsp ; and al, 0x38 ; mov dword ptr [rsp + 0x40], eax ; call r9
0x00000200000dcef0 : push rsp ; and al, 0x38 ; mov rcx, rbx ; call 0x200001d9194
0x00000200001c6769 : push rsp ; and al, 0x3c ; movzx ecx, ax ; call r9
0x000002000015cb41 : push rsp ; and al, 0x40 ; add rsp, 0x50 ; call r10
0x00000200004f7078 : push rsp ; and al, 0x40 ; call 0x20000120f3a
0x00000200004f709b : push rsp ; and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x200004f7041
0x00000200004e2a4a : push rsp ; and al, 0x40 ; jmp 0x200004e2a16
0x00000200004a5ea7 : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rsp + 0x60] ; call r15
0x000002000050e922 : push rsp ; and al, 0x48 ; call 0x2000013949a
0x000002000039020f : push rsp ; and al, 0x48 ; jmp 0x200003901db
0x0000020000151d28 : push rsp ; and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x000002000019ce95 : push rsp ; and al, 0x48 ; mov rcx, rbx ; call 0x200001d9194
0x00000200004ac163 : push rsp ; and al, 0x50 ; call 0x20000158375
0x00000200005af5c4 : push rsp ; and al, 0x50 ; call r8
0x00000200003b193a : push rsp ; and al, 0x50 ; mov rcx, rbx ; call r15
0x000002000064af02 : push rsp ; and al, 0x54 ; call rax
0x000002000063415c : push rsp ; and al, 0x58 ; call rax
0x0000020000513228 : push rsp ; and al, 0x60 ; mov rbx, rcx ; call 0x2000013a6b9
0x0000020000516443 : push rsp ; and al, 0x60 ; mov rcx, r9 ; call 0x2000013c0e9
0x00000200004aaaf2 : push rsp ; and al, 0x60 ; mov rcx, rbx ; call rsi
0x00000200003c65bc : push rsp ; and al, 0x60 ; mov rcx, rdi ; call r15
0x00000200004fa0bb : push rsp ; and al, 0x68 ; mov rcx, rdi ; call 0x20000120f3d
0x000002000044b144 : push rsp ; and al, 0x70 ; mov rcx, rbp ; call rsi
0x0000020000214d96 : push rsp ; and al, 0x70 ; mov rcx, rsi ; call r9
0x0000020000214de6 : push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x00000200005fe3cf : push rsp ; and al, 0x78 ; mov edx, edi ; call 0x20000225198
0x000002000003befb : push rsp ; call qword ptr [rdx]
0x000002000064af04 : push rsp ; call rax
0x000002000043adb8 : push rsp ; clc ; ret 0x85ff
0x00000200002147c5 : push rsp ; enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x00000200001c0b80 : push rsp ; enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x000002000018ba94 : push rsp ; fadd qword ptr [rax - 1] ; ret
0x00000200006f7ddb : push rsp ; fdiv qword ptr [rax - 1] ; ret
0x0000020000011059 : push rsp ; fild word ptr [rcx - 2] ; ret 0xb87
0x00000200000110ba : push rsp ; jmp 0x1ffd98ad2f2
0x00000200003ecb5c : push rsp ; jp 0x200003ecb7a ; add dh, dh ; ret
0x00000200005738fd : push rsp ; mov bh, 0xed ; dec dword ptr [rbp - 0x75] ; ret 0x8a40
0x0000020000139ac8 : push rsp ; mov bl, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072c11c : push rsp ; mov byte ptr [rdx + 0x200f44ff], bl ; ret
0x000002000013a65f : push rsp ; mov dword ptr [rsi], edx ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000015e1d6 : push rsp ; mov eax, edx ; ret
0x0000020000713cec : push rsp ; mov ebx, 0x158948ff ; push 0xd8 ; ret
0x00000200004077fc : push rsp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006742d3 : push rsp ; mov rcx, rbx ; call 0x20000294e27
0x000002000026483d : push rsp ; or al, 0 ; sysenter
0x00000200000d271c : push rsp ; or al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000fcc6b : push rsp ; or al, byte ptr [rax] ; xor ecx, ecx ; mov al, cl ; ret
0x000002000015dc02 : push rsp ; or bh, bh ; dec r8 ; jne 0x2000015dc08 ; ret
0x000002000015dcb0 : push rsp ; or bh, bh ; dec r8 ; jne 0x2000015dcb6 ; ret
0x00000200002608e5 : push rsp ; or byte ptr [rax], al ; sysenter
0x000002000026be29 : push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000242c2d : push rsp ; or eax, dword ptr [rax] ; sysenter
0x0000020000513d68 : push rsp ; outsd dx, dword ptr [rsi] ; ret 0x84ff
0x000002000011de7c : push rsp ; pop rbp ; sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005c33b8 : push rsp ; pop rdx ; mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000067c640 : push rsp ; pop rsp ; ret 0x48ff
0x000002000067322f : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000294006
0x000002000067322e : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000294007
0x00000200006732e2 : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000294e26
0x00000200006732e1 : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000294e27
0x000002000060bb13 : push rsp ; pushfq ; and bh, bh ; ret
0x00000200001e9b94 : push rsp ; rcl byte ptr [rax], 1 ; call qword ptr [rdi]
0x000002000001f940 : push rsp ; ret
0x000002000018b978 : push rsp ; ret 0x14
0x0000020000672b11 : push rsp ; ret 0x2ff
0x0000020000115eaa : push rsp ; ret 0x4518
0x00000200001a38f3 : push rsp ; ret 0x4870
0x00000200006e8672 : push rsp ; ret 0x49f8
0x00000200001d93a5 : push rsp ; ret 0x7508
0x0000020000413749 : push rsp ; ret 0xe808
0x000002000043bb68 : push rsp ; ret 0xffe8
0x0000020000064f7e : push rsp ; sbb byte ptr [rcx], dl ; add byte ptr [rdx + 0xa412046], cl ; ret 0x4688
0x000002000012e2b8 : push rsp ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x000002000003549d : push rsp ; test byte ptr [rax - 1], al ; ret 0x5489
0x00000200000e3d61 : push rsp ; verw bx ; ret
0x000002000017cf84 : push rsp ; xchg eax, ebp ; out dx, eax ; dec dword ptr [rax - 0x7f] ; ret
0x00000200000146dd : push rsp ; xchg eax, esp ; movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x00000200006740e6 : push si ; mov rcx, rdi ; call 0x20000294e29
0x00000200001c5faa : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000437402 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000010e8b5 : pushfq ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003cc59d : pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001ce935 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000570a2c : pushfq ; and al, 0 ; add al, byte ptr [rax] ; add bh, dh ; ret
0x00000200004eabd1 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004491f5 : pushfq ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ret
0x00000200006d83be : pushfq ; and al, 0x38 ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6d56 : pushfq ; and al, 0x38 ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x349
0x00000200003872fa : pushfq ; and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000cb1ce : pushfq ; and al, 0x68 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000cbf0a : pushfq ; and al, 0x68 ; add al, byte ptr [rax] ; add cl, ch ; ret
0x00000200004a4e46 : pushfq ; and al, 0x70 ; add dword ptr [rax], eax ; add byte ptr [rbx], cl ; fldpi ; ret
0x000002000051fbb1 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f9453 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000002000050c90f : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004432de : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000056f35e : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add cl, ch ; ret 0xed23
0x00000200000d3181 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001f558a : pushfq ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000006b611 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200002376b9 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001b4b57 : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200004f9324 : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001ae7b5 : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000020d873 : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d365c : pushfq ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000617409 : pushfq ; and al, 0xe0 ; add byte ptr [rax], al ; add bh, bh ; ret 0x5ee8
0x00000200006c5128 : pushfq ; and al, 0xf0 ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000060bb14 : pushfq ; and bh, bh ; ret
0x00000200000bfc1f : pushfq ; and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000056a071 : pushfq ; in al, dx ; dec dword ptr [rbx - 0x16afdbbc] ; ret 0xec99
0x00000200006f7feb : pushfq ; inc dword ptr [rbp - 0x75] ; ret 0x8b49
0x0000020000621960 : pushfq ; int1 ; mov dl, 0xff ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000189853 : pushfq ; int1 ; push rsi ; ret
0x00000200004cc8ce : pushfq ; jmp 0x1ffc37fb1d8
0x000002000064cc38 : pushfq ; jmp qword ptr [rcx]
0x0000020000280fc8 : pushfq ; jmp qword ptr [rdi]
0x0000020000157e11 : pushfq ; lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x000002000043ac8b : pushfq ; leave ; dec dword ptr [rax - 0x75] ; ret
0x00000200003ef850 : pushfq ; mov al, 0xfa ; dec dword ptr [rbx + 0x78c085d8] ; ret
0x00000200003d4738 : pushfq ; or dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000281020 : pushfq ; popfq ; push rcx ; add byte ptr [rbx - 0x7ffae60], dl ; jmp qword ptr [rdi]
0x0000020000280f81 : pushfq ; push rcx ; add byte ptr [rcx + 0x6000519d], bl ; jmp qword ptr [rdi]
0x000002000009bbb3 : pushfq ; ret
0x000002000040d3f0 : pushfq ; ret 0x65ff
0x00000200000c2c70 : pushfq ; ret 0x6740
0x000002000067f1e0 : pushfq ; ret 0x8068
0x000002000012a84d : pushfq ; ret 0xd80
0x0000020000559dc0 : pushfq ; ret 0xde9
0x000002000043a0f2 : pushfq ; ret 0xebff
0x0000020000446654 : pushfq ; ret 0xf0ff
0x000002000043a0df : pushfq ; ret 0xf6ff
0x00000200005d0538 : pushfq ; sal byte ptr [r11 + 0x474006a], 1 ; inc edx ; jmp 0x200005d0562
0x0000020000054288 : pushfq ; sbb eax, 0x3480026 ; ret 0x349
0x00000200003d7c60 : pushfq ; xchg eax, ebx ; ret 0x4aff
0x00000200000115c1 : rcl bh, 1 ; mov dl, 0x76 ; ret 0xbb54
0x0000020000531a17 : rcl byte ptr [rax + 0x20c48348], 1 ; pop rbp ; ret
0x000002000018b83f : rcl byte ptr [rax + rax], 0x85 ; ror byte ptr [rdi], 0x84 ; ret 0xf20b
0x0000020000518d43 : rcl byte ptr [rax], 0x48 ; cmp eax, ecx ; jl 0x20000518d3a ; ret
0x000002000024e7c1 : rcl byte ptr [rax], 0x70 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret
0x0000020000231e16 : rcl byte ptr [rax], 0xba ; or eax, 0xb9000000 ; ret 0
0x00000200003eed3c : rcl byte ptr [rax], 0xc3 ; xor eax, eax ; ret
0x00000200003ba5d3 : rcl byte ptr [rax], 0xe9 ; cmp esi, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000705151 : rcl byte ptr [rax], 0xf6 ; ret 0x481f
0x00000200004f406d : rcl byte ptr [rax], 0xf6 ; ret 0x483f
0x00000200000ea5e3 : rcl byte ptr [rax], 0xff ; ret
0x00000200001e9b95 : rcl byte ptr [rax], 1 ; call qword ptr [rdi]
0x00000200004a8fd4 : rcl byte ptr [rax], 3 ; ret 0x5f41
0x00000200004ca7d8 : rcl byte ptr [rbx - 4], 0xff ; add rsp, 0x48 ; ret
0x000002000028882d : rcl byte ptr [rcx], cl ; loopne 0x2000028883c ; and eax, 0x60c000d ; ret 0x2536
0x00000200006d4b33 : rcl byte ptr [rdi], 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200006358eb : rcl byte ptr [rdx], 0x8b ; ror byte ptr [rcx - 0x7cb788bb], 1 ; ret 0xe802
0x000002000054a81c : rcl ch, cl ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000020000713a36 : rcl ch, cl ; ret
0x00000200000960bb : rcl cl, 0xe8 ; bsr edx, eax ; inc dl ; jmp 0x2000009608f
0x00000200000960bb : rcl cl, 0xe8 ; bsr edx, eax ; inc dl ; jmp 0x20000096091
0x0000020000598b92 : rcl dword ptr [rax], 0x3b ; ret 0xee72
0x000002000027e58d : rcl dword ptr [rax], 0x42 ; ret 0x50
0x0000020000425a06 : rcl dword ptr [rax], 0x48 ; dec eax ; jne 0x20000425a04 ; ret
0x000002000067403d : rcl dword ptr [rax], 0x49 ; dec edx ; jne 0x2000067402b ; ret
0x0000020000148e1b : rcl dword ptr [rax], 0x66 ; test ecx, 0x175ffff ; ret
0x000002000050849b : rcl dword ptr [rax], 0xf ; ret 0xd08b
0x000002000026d3c9 : rcl dword ptr [rax], 1 ; add byte ptr [rsi - 0x29], ch ; adc byte ptr [rax], al ; pushfq ; ret
0x000002000041f72a : rcl dword ptr [rax], 1 ; mov dword ptr [r9], eax ; ret
0x00000200000b84fa : rcl dword ptr [rax], 1 ; ret
0x000002000051f8a1 : rcl dword ptr [rbx - 0x1c], cl ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200003ceec2 : rcl dword ptr [rbx], -0xa ; ret 0x7402
0x00000200003cee53 : rcl dword ptr [rbx], -0xa ; ret 0x7502
0x000002000037081a : rcl dword ptr [rbx], -0xa ; ret 0xf02
0x0000020000281861 : rcl dword ptr [rcx], 0x11 ; ret 0x51
0x00000200003c403a : rcl dword ptr [rdi + 0x38], -0xa ; ret 0xf02
0x0000020000471bc1 : rcl dword ptr [rdi], -0x7a ; ret 0x57
0x000002000048a07a : rcl dword ptr [rdi], -0xa ; ret 0xf02
0x00000200003cab2c : rcl dword ptr [rdi], cl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000022b0a2 : rcl dword ptr [rdx], -0x75 ; ret
0x00000200004f40e7 : rcl dword ptr [rdx], 1 ; ret
0x00000200004466b6 : rcl dword ptr [rip - 0x17d2bc], -0xa ; ret 0xf02
0x00000200004f5282 : rcl dword ptr [rip - 0x21f888], -0xa ; ret 0x7402
0x00000200005f6b2b : rcl dword ptr [rip - 0x32d769], -0xa ; ret 0x7402
0x00000200005f6bf6 : rcl dword ptr [rip - 0x32d834], -0xa ; ret 0x7402
0x0000020000364c4e : rcl dword ptr [rip - 0x8f224], -0xa ; ret 0xf02
0x000002000017b8dc : rcl dword ptr [rsp], -0xa ; ret 0x7402
0x00000200003a0ef6 : rcl ecx, -1 ; jmp 0x200003a0e3a
0x00000200005d4f52 : rcl edi, -1 ; call r9
0x0000020000401a4e : rcl esp, -1 ; jmp 0x20000401a1a
0x000002000050f8bd : rcr byte ptr [rax + 0x4d], 3 ; ret 0x3841
0x00000200000e1863 : rcr byte ptr [rax + rax], 0 ; jne 0x200000e1870 ; ret
0x00000200001c57d1 : rcr byte ptr [rax], 0 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000051e0fe : rcr byte ptr [rax], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000224146 : rcr byte ptr [rax], 0x48 ; cmp eax, ecx ; jb 0x20000224149 ; xor eax, eax ; ret
0x000002000067359a : rcr byte ptr [rax], 0x69 ; add byte ptr [rax - 0x75], cl ; ret 0xb9
0x00000200000e3f6c : rcr byte ptr [rax], 0xc3 ; add eax, edx ; jmp 0x200000e3f55
0x00000200000e3f67 : rcr byte ptr [rax], 0xeb ; hlt ; add eax, 0x18 ; ret
0x000002000020c8e5 : rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200001e9b90 : rcr byte ptr [rax], 1 ; mov rdx, qword ptr [rax + rdx*8 + 0x10] ; call qword ptr [rdi]
0x00000200005dde5c : rcr byte ptr [rax], 1 ; sar bh, 1 ; call rax
0x000002000065319a : rcr byte ptr [rbx + rax*2], 0xf ; mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x000002000071803c : rcr byte ptr [rbx - 0x5d], 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b8778 : rcr byte ptr [rcx + 0x4466f9f7], 0x2b ; ret 0x3844
0x00000200006783f6 : rcr byte ptr [rdi + rdi*8 + 0x28c48348], 1 ; ret
0x00000200004c25c4 : rcr byte ptr [rdi], 0 ; add cl, ch ; ret
0x0000020000186951 : rcr byte ptr [rip + 0x48ccfff1], 0x83 ; ret
0x00000200001591ee : rcr byte ptr [rsi + 0x5f], 0x5b ; pop rbp ; pop r12 ; ret
0x00000200000e568c : rcr byte ptr [rsi + 0xb], cl ; add dh, dh ; ret
0x000002000038dac9 : rcr dword ptr [rax], -0xa ; ret
0x0000020000033bf3 : rcr dword ptr [rax], 0x3b ; ret 0xf172
0x0000020000115d72 : rcr dword ptr [rax], cl ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000219d71 : rcr dword ptr [rbp + 0x12b0], -0xa ; ret
0x0000020000075b1d : rcr dword ptr [rbp + 0x28], -0xa ; ret
0x00000200003d3a38 : rcr dword ptr [rbp + 0x3e0], -0xa ; ret
0x00000200001fadd8 : rcr dword ptr [rbp], -0x7c ; fdiv dword ptr [rbp + rcx - 0xa] ; ret
0x000002000008d2fe : rcr dword ptr [rbp], -0xa ; ret
0x00000200006cf07d : rcr dword ptr [rbx + 0x48], cl ; add esp, 8 ; jmp r8
0x00000200005b4678 : rcr dword ptr [rbx], -0x40 ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000141230 : rcr dword ptr [rbx], -0x40 ; sbb eax, -1 ; ret
0x000002000066aa3e : rcr dword ptr [rcx + 0xb4], -1 ; ret
0x0000020000387d1f : rcr dword ptr [rdi + 0x18], -1 ; ret
0x0000020000388c9c : rcr dword ptr [rdi + 0x2c8], -0xa ; ret
0x00000200004492f9 : rcr dword ptr [rdi + 0x3e0], -0xa ; ret
0x0000020000568f4a : rcr dword ptr [rdi + 0x48], -0x77 ; add eax, 0x1417c5 ; ret
0x000002000048b004 : rcr dword ptr [rdi + 0x50], -0xa ; ret
0x00000200003d204d : rcr dword ptr [rdi + 0x600], -0xa ; ret
0x000002000024d250 : rcr dword ptr [rdi + 0xa], cl ; add byte ptr [rax], ch ; ret 0x24
0x00000200003bb6e6 : rcr dword ptr [rdi - 0x10], -0xa ; ret
0x000002000006ec39 : rcr dword ptr [rdi], -0xa ; ret
0x0000020000199f34 : rcr dword ptr [rip + 0x10b8d6], -0xa ; ret
0x000002000058e331 : rcr dword ptr [rip + 0x11bd81], -0xa ; ret
0x000002000058b776 : rcr dword ptr [rip + 0x11e93c], -0xa ; ret
0x0000020000191077 : rcr dword ptr [rip + 0x1214e3], -0xa ; ret
0x000002000056f761 : rcr dword ptr [rip + 0x13a9f1], -0xa ; ret
0x000002000013c67b : rcr dword ptr [rip + 0x1734f7], -0xa ; ret
0x0000020000138fc4 : rcr dword ptr [rip + 0x175ebe], -0xa ; ret
0x0000020000138a5b : rcr dword ptr [rip + 0x1770cf], -0xa ; ret
0x0000020000135d19 : rcr dword ptr [rip + 0x1786e1], -0xa ; ret
0x000002000051d7c0 : rcr dword ptr [rip + 0x18cad2], -0xa ; ret
0x000002000010cf0e : rcr dword ptr [rip + 0x1969ac], -0xa ; ret
0x000002000013b311 : rcr dword ptr [rip + 0x19a721], -0xa ; ret
0x00000200005001e8 : rcr dword ptr [rip + 0x1aa31a], -0xa ; ret
0x00000200000e0152 : rcr dword ptr [rip + 0x1c56b8], -0xa ; ret
0x00000200000e1522 : rcr dword ptr [rip + 0x1c63b0], -0xa ; ret
0x00000200000e2694 : rcr dword ptr [rip + 0x1e72d6], -0xa ; ret
0x00000200004b6145 : rcr dword ptr [rip + 0x1f4405], -0xa ; ret
0x000002000009bede : rcr dword ptr [rip + 0x2079dc], -0xa ; ret
0x000002000048e63f : rcr dword ptr [rip + 0x21bc5b], -0xa ; ret
0x000002000048c6e4 : rcr dword ptr [rip + 0x21df9e], -0xa ; ret
0x0000020000442ac6 : rcr dword ptr [rip + 0x26768c], -0xa ; ret
0x0000020000437c5b : rcr dword ptr [rip + 0x272b87], -0xa ; ret
0x00000200000398a9 : rcr dword ptr [rip + 0x28fa49], -0xa ; ret
0x00000200003eeaae : rcr dword ptr [rip + 0x2bb7ec], -0xa ; ret
0x00000200003e8ef8 : rcr dword ptr [rip + 0x2c1852], -0xa ; ret
0x000002000038475d : rcr dword ptr [rip + 0x325ff5], -0xa ; ret
0x0000020000174e68 : rcr dword ptr [rip + 0x5b60f00], 0x54 ; ret
0x0000020000631889 : rcr dword ptr [rip + 0x78829], -0xa ; ret
0x00000200006315b3 : rcr dword ptr [rip + 0x78b9f], -0xa ; ret
0x000002000022950c : rcr dword ptr [rip + 0x7b7d6], -0xa ; ret
0x000002000060e25c : rcr dword ptr [rip + 0x9c306], -0xa ; ret
0x0000020000201be9 : rcr dword ptr [rip + 0xad299], -0xa ; ret
0x00000200001fc7de : rcr dword ptr [rip + 0xb334c], -0xa ; ret
0x00000200001fc5f2 : rcr dword ptr [rip + 0xb3538], -0xa ; ret
0x00000200005b42ef : rcr dword ptr [rip + 0xf5fa3], -0xa ; ret
0x00000200003e7eab : rcr dword ptr [rip - 0x142699], -0xa ; ret
0x00000200003e7fa0 : rcr dword ptr [rip - 0x14278e], -0xa ; ret
0x000002000043e8e5 : rcr dword ptr [rip - 0x174f7b], -0xa ; ret
0x000002000043e978 : rcr dword ptr [rip - 0x17500e], -0xa ; ret
0x000002000043fe63 : rcr dword ptr [rip - 0x1764f9], -0xa ; ret
0x0000020000475425 : rcr dword ptr [rip - 0x19517b], -0xa ; ret
0x00000200004404b5 : rcr dword ptr [rip - 0x19b00b], -0xa ; ret
0x000002000044d077 : rcr dword ptr [rip - 0x1a6bcd], -0xa ; ret
0x00000200004cc3f5 : rcr dword ptr [rip - 0x215b63], -0xa ; ret
0x00000200004dc199 : rcr dword ptr [rip - 0x22e2b7], -0xa ; ret
0x00000200004e6876 : rcr dword ptr [rip - 0x2307ec], -0xa ; ret
0x00000200005175a0 : rcr dword ptr [rip - 0x2372f6], -0xa ; ret
0x00000200004e594a : rcr dword ptr [rip - 0x242090], -0xa ; ret
0x00000200005114fa : rcr dword ptr [rip - 0x247b90], -0xa ; ret
0x000002000051cdbb : rcr dword ptr [rip - 0x2784e9], -0xa ; ret
0x000002000057dd5e : rcr dword ptr [rip - 0x29dab4], -0xa ; ret
0x000002000057e059 : rcr dword ptr [rip - 0x29ddaf], -0xa ; ret
0x00000200005524a0 : rcr dword ptr [rip - 0x2aebe6], -0xa ; ret
0x0000020000553c9a : rcr dword ptr [rip - 0x2b03e0], -0xa ; ret
0x000002000059b119 : rcr dword ptr [rip - 0x2c56ef], -0xa ; ret
0x000002000056e05d : rcr dword ptr [rip - 0x2c8bb3], -0xa ; ret
0x00000200005731a7 : rcr dword ptr [rip - 0x2cccfd], -0xa ; ret
0x00000200005804cf : rcr dword ptr [rip - 0x2cdf75], -0xa ; ret
0x000002000059a427 : rcr dword ptr [rip - 0x2e3b95], -0xa ; ret
0x000002000059a485 : rcr dword ptr [rip - 0x2e3bf3], -0xa ; ret
0x00000200005a2bb7 : rcr dword ptr [rip - 0x2ecb2d], -0xa ; ret
0x000002000059ed4c : rcr dword ptr [rip - 0x2f0e6a], -0xa ; ret
0x000002000059c967 : rcr dword ptr [rip - 0x2f74bd], -0xa ; ret
0x00000200005ce69f : rcr dword ptr [rip - 0x2f8ca5], -0xa ; ret
0x00000200005ce924 : rcr dword ptr [rip - 0x2f8f2a], -0xa ; ret
0x00000200005ceb02 : rcr dword ptr [rip - 0x2f9108], -0xa ; ret
0x00000200005d7463 : rcr dword ptr [rip - 0x302519], -0xa ; ret
0x000002000061f739 : rcr dword ptr [rip - 0x31979f], -0xa ; ret
0x000002000061f796 : rcr dword ptr [rip - 0x3197fc], -0xa ; ret
0x00000200005f6113 : rcr dword ptr [rip - 0x32cd21], -0xa ; ret
0x00000200005f3745 : rcr dword ptr [rip - 0x34e29b], -0xa ; ret
0x00000200005f38db : rcr dword ptr [rip - 0x34e431], -0xa ; ret
0x00000200005f39b8 : rcr dword ptr [rip - 0x34e50e], -0xa ; ret
0x00000200006020da : rcr dword ptr [rip - 0x351e20], -0xa ; ret
0x00000200006021b2 : rcr dword ptr [rip - 0x351ef8], -0xa ; ret
0x00000200006024be : rcr dword ptr [rip - 0x352204], -0xa ; ret
0x00000200006026a2 : rcr dword ptr [rip - 0x3523e8], -0xa ; ret
0x0000020000602749 : rcr dword ptr [rip - 0x35248f], -0xa ; ret
0x00000200006027aa : rcr dword ptr [rip - 0x3524f0], -0xa ; ret
0x000002000060299c : rcr dword ptr [rip - 0x3526e2], -0xa ; ret
0x0000020000602f9c : rcr dword ptr [rip - 0x352ce2], -0xa ; ret
0x00000200006030fc : rcr dword ptr [rip - 0x352e42], -0xa ; ret
0x00000200006033ab : rcr dword ptr [rip - 0x3530f1], -0xa ; ret
0x000002000060397c : rcr dword ptr [rip - 0x3536c2], -0xa ; ret
0x0000020000603a6e : rcr dword ptr [rip - 0x3537b4], -0xa ; ret
0x0000020000603b1c : rcr dword ptr [rip - 0x353862], -0xa ; ret
0x000002000060ba78 : rcr dword ptr [rip - 0x35d1ee], -0xa ; ret
0x000002000061984d : rcr dword ptr [rip - 0x36b363], -0xa ; ret
0x00000200006198e0 : rcr dword ptr [rip - 0x36b3f6], -0xa ; ret
0x0000020000619972 : rcr dword ptr [rip - 0x36b488], -0xa ; ret
0x0000020000619a04 : rcr dword ptr [rip - 0x36b51a], -0xa ; ret
0x00000200006209a6 : rcr dword ptr [rip - 0x37c0d4], -0xa ; ret
0x0000020000621c55 : rcr dword ptr [rip - 0x37d383], -0xa ; ret
0x000002000068a409 : rcr dword ptr [rip - 0x3e528f], -0xa ; ret
0x000002000068c7ed : rcr dword ptr [rip - 0x3e7673], -0xa ; ret
0x00000200007098b0 : rcr dword ptr [rip - 0x5f75e], -0xa ; ret
0x0000020000364b07 : rcr dword ptr [rip - 0x8f10d], -0xa ; ret
0x0000020000379a0c : rcr dword ptr [rip - 0xd6142], -0xa ; ret
0x00000200000529d5 : rcr dword ptr [rsi + 0x10], -1 ; ret
0x0000020000555dc2 : rcr dword ptr [rsi + 0x6a0], -0xa ; ret
0x0000020000625714 : rcr dword ptr [rsi + 0x80], -0xa ; ret
0x00000200003bc61a : rcr dword ptr [rsi - 0x10], -0xa ; ret
0x0000020000632bf5 : rcr dword ptr [rsi], -0x7c ; fnstenv dword ptr [rbp + rcx - 0xa] ; ret
0x000002000004db11 : rcr dword ptr [rsi], -0xa ; ret
0x00000200000c92a6 : rcr dword ptr [rsi], 1 ; add byte ptr [rax + 0xf], cl ; ret
0x000002000006b7f5 : rcr dword ptr [rsp + 0x28], -0xa ; ret
0x00000200000d6ae8 : rcr dword ptr [rsp], -0xa ; ret
0x00000200006812bb : rcr ebp, -3 ; dec dword ptr [rax - 0x7d] ; ret 0x4158
0x00000200007137ba : rcr ecx, 1 ; ret
0x0000020000405a89 : rcr ecx, cl ; ret 0x8bff
0x00000200001514fb : rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000046a7a : rdmsr ; ret 0x3d83
0x000002000015798b : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x00000200001e01d5 : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; ret
0x00000200003b4815 : rdpmc ; ret 0x25
0x000002000013428d : rdpmc ; rol byte ptr [rcx + 0x69], cl ; ret
0x000002000013476e : rdpmc ; sal byte ptr [rbx], cl ; leave ; call rax
0x000002000015dd10 : rdtsc ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000674b84 : rep stosq qword ptr [rdi], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037608e : repe scasd eax, dword ptr [rdi] ; std ; jmp qword ptr [rcx]
0x00000200001ead9a : repne cmpsb byte ptr [rsi], byte ptr [rdi] ; in eax, -1 ; add rsp, 0x28 ; ret
0x0000020000002843 : ret
0x0000020000019b68 : ret 0
0x000002000006c8c8 : ret 0x10
0x00000200001513a6 : ret 0x100
0x0000020000085ad2 : ret 0x1000
0x00000200003a6947 : ret 0x101
0x00000200001ca428 : ret 0x102
0x00000200005a7b82 : ret 0x102a
0x000002000007b446 : ret 0x1031
0x0000020000268c4c : ret 0x1036
0x000002000019105a : ret 0x103d
0x00000200004cf876 : ret 0x107
0x000002000012eeb1 : ret 0x1073
0x000002000049f262 : ret 0x1077
0x00000200004fa8c7 : ret 0x1078
0x00000200001cd392 : ret 0x107d
0x0000020000179efc : ret 0x108
0x000002000018c65a : ret 0x1087
0x000002000022ab74 : ret 0x109e
0x00000200003750e0 : ret 0x10a8
0x000002000006ee06 : ret 0x10af
0x000002000002beaa : ret 0x10b
0x00000200000a429a : ret 0x10ba
0x0000020000488d3d : ret 0x10bb
0x000002000004fafa : ret 0x10e0
0x0000020000675167 : ret 0x10ff
0x00000200000555ef : ret 0x11
0x0000020000055a69 : ret 0x110
0x000002000046ad35 : ret 0x110a
0x000002000026e610 : ret 0x1115
0x0000020000036d4a : ret 0x1120
0x00000200001c53bd : ret 0x1139
0x00000200004d9fe5 : ret 0x114
0x00000200000605c6 : ret 0x1148
0x0000020000462778 : ret 0x116a
0x00000200001c12b2 : ret 0x1172
0x0000020000491d10 : ret 0x1173
0x0000020000141f74 : ret 0x1174
0x000002000004176c : ret 0x1175
0x00000200005b149d : ret 0x118
0x0000020000469c0f : ret 0x1188
0x000002000026fa44 : ret 0x1190
0x00000200001be1f2 : ret 0x1199
0x00000200001e7c0e : ret 0x11b0
0x00000200002706d4 : ret 0x11d4
0x0000020000270828 : ret 0x11d8
0x0000020000167d14 : ret 0x12
0x000002000022f88e : ret 0x121a
0x0000020000192e5a : ret 0x122c
0x00000200001156ba : ret 0x124
0x000002000044f3ee : ret 0x1246
0x000002000044fc59 : ret 0x1249
0x00000200000490a4 : ret 0x125d
0x00000200000ca88c : ret 0x1274
0x0000020000406525 : ret 0x1275
0x0000020000273e84 : ret 0x127c
0x000002000043496e : ret 0x127d
0x00000200005a3352 : ret 0x128
0x000002000064280b : ret 0x128b
0x000002000044751f : ret 0x1291
0x00000200001a656a : ret 0x12b5
0x000002000043fec2 : ret 0x12e8
0x0000020000029c67 : ret 0x13
0x000002000043cec2 : ret 0x1305
0x00000200002438be : ret 0x1306
0x000002000043bba3 : ret 0x1315
0x000002000023dd16 : ret 0x1316
0x0000020000036f1b : ret 0x132b
0x00000200000349b6 : ret 0x1348
0x0000020000030501 : ret 0x1373
0x000002000005350b : ret 0x1374
0x00000200003b854c : ret 0x1375
0x000002000008a4f1 : ret 0x1376
0x000002000020cda2 : ret 0x138a
0x0000020000026ddf : ret 0x138b
0x00000200000275f2 : ret 0x13df
0x000002000002749b : ret 0x13e0
0x000002000056cca7 : ret 0x13e8
0x000002000007dfb7 : ret 0x13e9
0x000002000014489b : ret 0x13eb
0x00000200004276a3 : ret 0x13f0
0x0000020000427758 : ret 0x13f1
0x000002000018b8f9 : ret 0x14
0x00000200005167db : ret 0x1473
0x00000200000ec6de : ret 0x1474
0x00000200000911b0 : ret 0x1475
0x00000200001c34be : ret 0x1476
0x0000020000729cc5 : ret 0x147d
0x0000020000667b37 : ret 0x147f
0x0000020000053ae4 : ret 0x148
0x00000200003c1107 : ret 0x1480
0x00000200004177e6 : ret 0x148c
0x00000200000ccc42 : ret 0x149
0x00000200000e9f1a : ret 0x14b9
0x00000200000899e1 : ret 0x14e9
0x0000020000217940 : ret 0x14eb
0x000002000040efdd : ret 0x14f1
0x0000020000180f06 : ret 0x14f2
0x00000200007282f7 : ret 0x14ff
0x0000020000137d38 : ret 0x15
0x0000020000139f41 : ret 0x1539
0x00000200000916f3 : ret 0x153b
0x000002000008efbf : ret 0x1573
0x00000200000dcfe0 : ret 0x1574
0x00000200000b0f9c : ret 0x1575
0x00000200001da16f : ret 0x1576
0x0000020000711d4d : ret 0x158
0x000002000012da6b : ret 0x1589
0x000002000070039e : ret 0x159
0x00000200003fb3b0 : ret 0x15bf
0x00000200001b9d48 : ret 0x15eb
0x000002000054a802 : ret 0x15f8
0x00000200004bfb97 : ret 0x15ff
0x0000020000139d6b : ret 0x16
0x00000200004f46d6 : ret 0x160
0x00000200004e4d8a : ret 0x163b
0x000002000023b0e4 : ret 0x164a
0x00000200000c159f : ret 0x1674
0x00000200000339cf : ret 0x1675
0x0000020000090dcb : ret 0x1676
0x00000200003b3e78 : ret 0x1677
0x00000200001ddeba : ret 0x16bb
0x00000200001382ae : ret 0x16e0
0x00000200004eafd0 : ret 0x16e8
0x00000200001b9cef : ret 0x16eb
0x0000020000117de3 : ret 0x17
0x00000200000d658f : ret 0x170
0x00000200004cd27b : ret 0x1700
0x00000200001d2ff9 : ret 0x1763
0x00000200006d0208 : ret 0x1773
0x00000200000948f7 : ret 0x1774
0x00000200001f05d1 : ret 0x1775
0x0000020000080e23 : ret 0x1776
0x0000020000139cdc : ret 0x1777
0x000002000019dbd3 : ret 0x177c
0x00000200004087d3 : ret 0x1789
0x0000020000475564 : ret 0x178b
0x00000200003d13a4 : ret 0x1794
0x00000200001d7a9e : ret 0x1795
0x00000200003cd244 : ret 0x17b7
0x000002000012282c : ret 0x18
0x00000200006e5047 : ret 0x180f
0x00000200003c5175 : ret 0x1818
0x00000200004d11a2 : ret 0x1846
0x00000200000ed1cf : ret 0x1873
0x00000200000cee70 : ret 0x1875
0x00000200000de0ff : ret 0x1876
0x00000200003bd0d0 : ret 0x1879
0x00000200001d6cac : ret 0x188
0x000002000010bf3a : ret 0x1880
0x000002000001fb81 : ret 0x1883
0x000002000011edb2 : ret 0x188a
0x000002000011f6cd : ret 0x188b
0x000002000021ce7c : ret 0x189
0x000002000067861a : ret 0x18a
0x000002000047f871 : ret 0x18ba
0x00000200004af466 : ret 0x18c6
0x00000200004ed0e2 : ret 0x18e8
0x00000200005d01b2 : ret 0x18eb
0x000002000039e644 : ret 0x19
0x00000200000f5cdb : ret 0x190
0x0000020000253eb2 : ret 0x1906
0x0000020000602700 : ret 0x191
0x000002000013cce1 : ret 0x1933
0x00000200004e49d2 : ret 0x1939
0x00000200001d95c3 : ret 0x1973
0x0000020000227f7e : ret 0x1974
0x0000020000206643 : ret 0x1975
0x0000020000729cc0 : ret 0x197c
0x00000200001b8c9a : ret 0x1983
0x00000200001b5bc6 : ret 0x19b8
0x000002000049ef66 : ret 0x19cb
0x000002000004f83e : ret 0x19d9
0x00000200005b29a1 : ret 0x19eb
0x000002000039b5ac : ret 0x19ef
0x00000200001b1f3a : ret 0x19f0
0x00000200001a5223 : ret 0x1a
0x000002000028e196 : ret 0x1a00
0x00000200001144ba : ret 0x1a23
0x000002000038035a : ret 0x1a40
0x0000020000392eea : ret 0x1a4c
0x0000020000390615 : ret 0x1a58
0x00000200003a1a14 : ret 0x1a72
0x0000020000089501 : ret 0x1a74
0x000002000067e6f3 : ret 0x1a75
0x0000020000058db6 : ret 0x1a76
0x0000020000727242 : ret 0x1a7f
0x00000200001c4cb4 : ret 0x1a8
0x00000200001c1142 : ret 0x1aa
0x0000020000386b62 : ret 0x1ac3
0x000002000037e748 : ret 0x1ae8
0x00000200001b9c6d : ret 0x1aeb
0x0000020000383724 : ret 0x1aee
0x00000200000fa3a0 : ret 0x1b
0x00000200001206ba : ret 0x1b32
0x00000200001b3940 : ret 0x1b48
0x000002000019217a : ret 0x1b6e
0x00000200000e2ac1 : ret 0x1b72
0x00000200000ca8f9 : ret 0x1b73
0x0000020000206c14 : ret 0x1b74
0x000002000049f2be : ret 0x1b75
0x0000020000686c52 : ret 0x1b76
0x000002000004ed4a : ret 0x1b8
0x0000020000411620 : ret 0x1b9
0x0000020000036e5a : ret 0x1ba
0x00000200001a6322 : ret 0x1be
0x00000200000e3124 : ret 0x1c
0x000002000012dbce : ret 0x1c74
0x00000200000e3ddd : ret 0x1c75
0x00000200000d79fb : ret 0x1c76
0x000002000020df82 : ret 0x1c77
0x000002000010b292 : ret 0x1c7c
0x0000020000101232 : ret 0x1c80
0x00000200001880b2 : ret 0x1c8f
0x00000200000e5046 : ret 0x1ca2
0x00000200001854b2 : ret 0x1cbb
0x0000020000184f56 : ret 0x1cc0
0x00000200000e32de : ret 0x1cc9
0x00000200000643f6 : ret 0x1ce8
0x00000200004d91f2 : ret 0x1d0e
0x00000200006f67cb : ret 0x1d73
0x00000200000d9e9d : ret 0x1d74
0x00000200000793ef : ret 0x1d76
0x00000200005f9ffa : ret 0x1d77
0x00000200000f7205 : ret 0x1d7c
0x00000200001c072a : ret 0x1da1
0x00000200005b66eb : ret 0x1db9
0x000002000017414a : ret 0x1dce
0x000002000014798d : ret 0x1deb
0x00000200000c9add : ret 0x1e
0x000002000050498a : ret 0x1e72
0x00000200000f8eed : ret 0x1e74
0x0000020000595f40 : ret 0x1e75
0x000002000006ef07 : ret 0x1e76
0x00000200003d9882 : ret 0x1e77
0x00000200001695c6 : ret 0x1e7e
0x00000200004f9923 : ret 0x1e8
0x0000020000002ffe : ret 0x1e89
0x00000200003a0045 : ret 0x1e9
0x0000020000167cb2 : ret 0x1e93
0x00000200001670b2 : ret 0x1e9f
0x000002000061d066 : ret 0x1ea
0x00000200001633c2 : ret 0x1ee1
0x000002000029591c : ret 0x1ee9
0x00000200004ae493 : ret 0x1f
0x0000020000089e02 : ret 0x1f0f
0x00000200000ae6d2 : ret 0x1f3b
0x0000020000010154 : ret 0x1f64
0x00000200001a257b : ret 0x1f72
0x00000200000963d6 : ret 0x1f74
0x00000200000fd23a : ret 0x1f75
0x00000200004155ba : ret 0x1f77
0x00000200004f98d4 : ret 0x1f8
0x00000200001bd1be : ret 0x1f89
0x0000020000156d0a : ret 0x1fae
0x000002000015630a : ret 0x1fb8
0x0000020000208651 : ret 0x1feb
0x000002000049165c : ret 0x1ff
0x00000200000acbf8 : ret 0x200
0x00000200000c853e : ret 0x2006
0x00000200006e9214 : ret 0x200f
0x00000200001cacab : ret 0x201
0x0000020000634072 : ret 0x2073
0x000002000055783f : ret 0x2074
0x00000200000d7158 : ret 0x2075
0x0000020000078548 : ret 0x2076
0x00000200000bfc1e : ret 0x209c
0x00000200000a840e : ret 0x20a9
0x00000200001868e5 : ret 0x20b9
0x00000200000106ed : ret 0x20cc
0x00000200000cfaf2 : ret 0x20ef
0x00000200000b6cfb : ret 0x21
0x00000200006ed0de : ret 0x212
0x00000200002597e6 : ret 0x2146
0x00000200005fec04 : ret 0x2148
0x00000200001e3686 : ret 0x2149
0x00000200000a2444 : ret 0x214c
0x000002000047e57c : ret 0x2172
0x000002000012ae82 : ret 0x2173
0x00000200005aba9b : ret 0x2174
0x00000200005847dd : ret 0x2176
0x00000200001356d9 : ret 0x2177
0x00000200000286b5 : ret 0x2188
0x000002000009d3ba : ret 0x218c
0x000002000001fd01 : ret 0x21d1
0x00000200004577f6 : ret 0x21e
0x00000200006f75fa : ret 0x21f
0x0000020000021f82 : ret 0x22
0x000002000001eab8 : ret 0x2237
0x000002000022d850 : ret 0x224
0x0000020000389bd8 : ret 0x2240
0x00000200005d16fd : ret 0x2241
0x0000020000083b23 : ret 0x225
0x00000200001fda91 : ret 0x2274
0x0000020000055a99 : ret 0x2276
0x000002000011e582 : ret 0x227d
0x00000200000ae3d2 : ret 0x2294
0x000002000017e025 : ret 0x22eb
0x00000200000a85fa : ret 0x22f3
0x0000020000114da0 : ret 0x23
0x0000020000120d3a : ret 0x2302
0x000002000011bc79 : ret 0x2307
0x000002000011fac0 : ret 0x2315
0x0000020000700ed1 : ret 0x233
0x0000020000167036 : ret 0x2341
0x0000020000142b27 : ret 0x2344
0x00000200000d28e6 : ret 0x2345
0x000002000002806b : ret 0x2348
0x000002000002e9b4 : ret 0x2349
0x000002000012738d : ret 0x234c
0x000002000005d40c : ret 0x234d
0x00000200003918a1 : ret 0x2366
0x000002000011a9c2 : ret 0x2368
0x000002000019ea60 : ret 0x2373
0x00000200000e3dd6 : ret 0x2374
0x000002000050b265 : ret 0x2377
0x00000200004d72bb : ret 0x23b8
0x00000200004212b0 : ret 0x23bb
0x000002000000d740 : ret 0x23e8
0x000002000006c72d : ret 0x23e9
0x0000020000686a3b : ret 0x23ff
0x00000200000596c1 : ret 0x24
0x00000200005b2383 : ret 0x2400
0x000002000002909a : ret 0x242
0x00000200004895c1 : ret 0x2474
0x0000020000142372 : ret 0x2475
0x000002000007ce78 : ret 0x2476
0x00000200000b8590 : ret 0x248
0x0000020000107fbf : ret 0x2490
0x0000020000618a78 : ret 0x24c
0x00000200001d213a : ret 0x24e8
0x00000200000fe4e5 : ret 0x25
0x0000020000393ea1 : ret 0x2504
0x000002000007608e : ret 0x251
0x0000020000288836 : ret 0x2536
0x000002000022d8aa : ret 0x253e
0x000002000005e4cf : ret 0x2548
0x0000020000612dad : ret 0x254f
0x00000200001fe270 : ret 0x2574
0x0000020000193594 : ret 0x258
0x000002000024cf16 : ret 0x2596
0x0000020000296440 : ret 0x25ba
0x0000020000132eb4 : ret 0x25e9
0x00000200000e4d68 : ret 0x26
0x000002000003005a : ret 0x264d
0x00000200006f3faa : ret 0x265
0x000002000000e8b8 : ret 0x267
0x0000020000039d6a : ret 0x2674
0x000002000068d842 : ret 0x2675
0x000002000067e8be : ret 0x2676
0x0000020000729c61 : ret 0x267d
0x0000020000132cf0 : ret 0x267e
0x000002000023af74 : ret 0x26a
0x00000200003744b4 : ret 0x26e8
0x0000020000039ded : ret 0x27
0x0000020000148f85 : ret 0x2710
0x00000200001eb77f : ret 0x272
0x0000020000210afa : ret 0x273
0x0000020000057b53 : ret 0x2774
0x0000020000039752 : ret 0x27ce
0x00000200005b66db : ret 0x27e8
0x0000020000617635 : ret 0x2809
0x00000200000cdb3a : ret 0x2834
0x00000200001156f1 : ret 0x2874
0x00000200000d4fea : ret 0x2875
0x0000020000468f4d : ret 0x2877
0x0000020000025572 : ret 0x288f
0x00000200001a2b9a : ret 0x289
0x000002000004eb3a : ret 0x2897
0x00000200000c366e : ret 0x28d9
0x00000200001cda6e : ret 0x28e8
0x0000020000058f31 : ret 0x28e9
0x00000200001499f6 : ret 0x290f
0x00000200000b9fbf : ret 0x2970
0x00000200001741b9 : ret 0x2976
0x000002000018143a : ret 0x2977
0x00000200007006e4 : ret 0x298
0x00000200005e8273 : ret 0x2980
0x00000200000a4dd4 : ret 0x2a
0x00000200000121a6 : ret 0x2a05
0x00000200000ae6ea : ret 0x2a2b
0x0000020000706a9a : ret 0x2a3
0x000002000012ac7a : ret 0x2a40
0x00000200000c33db : ret 0x2a41
0x00000200000fb9ba : ret 0x2a44
0x000002000014bde3 : ret 0x2a74
0x00000200003a3343 : ret 0x2a75
0x00000200000a154a : ret 0x2afa
0x0000020000095250 : ret 0x2b
0x00000200001eae8f : ret 0x2b05
0x0000020000419b07 : ret 0x2b0d
0x00000200006d25d4 : ret 0x2b1a
0x0000020000618ae4 : ret 0x2b1c
0x0000020000479562 : ret 0x2b25
0x0000020000206364 : ret 0x2b32
0x000002000056429d : ret 0x2b38
0x0000020000230bb2 : ret 0x2b3f
0x000002000004f054 : ret 0x2b41
0x0000020000083adc : ret 0x2b44
0x00000200000d708e : ret 0x2b45
0x000002000004267c : ret 0x2b48
0x00000200000426fb : ret 0x2b49
0x0000020000058cff : ret 0x2b4c
0x0000020000027e1a : ret 0x2b4d
0x000002000022a5f7 : ret 0x2b57
0x000002000015e2aa : ret 0x2b64
0x0000020000237369 : ret 0x2b66
0x00000200001fe1f3 : ret 0x2b74
0x0000020000088d8f : ret 0x2b77
0x00000200004a9397 : ret 0x2b7c
0x00000200000aa496 : ret 0x2b7d
0x0000020000715f81 : ret 0x2b8
0x0000020000014b99 : ret 0x2b84
0x00000200001d7ee0 : ret 0x2b9
0x0000020000168490 : ret 0x2ba
0x0000020000559da3 : ret 0x2be9
0x0000020000728467 : ret 0x2bf
0x000002000009179c : ret 0x2bf8
0x0000020000084df7 : ret 0x2c
0x0000020000712ff7 : ret 0x2c0
0x000002000039e29a : ret 0x2c2
0x000002000008bfbf : ret 0x2c50
0x000002000014030f : ret 0x2c6
0x000002000007f7fa : ret 0x2c68
0x000002000050497c : ret 0x2c72
0x0000020000070d29 : ret 0x2c75
0x000002000039db9a : ret 0x2c9
0x00000200003a7942 : ret 0x2ce8
0x00000200001e73a2 : ret 0x2ce9
0x00000200003cf77c : ret 0x2d
0x000002000007d2c6 : ret 0x2d41
0x000002000068d2dd : ret 0x2d74
0x00000200000c3b68 : ret 0x2d76
0x0000020000010f90 : ret 0x2db0
0x000002000020d6dc : ret 0x2deb
0x0000020000071cba : ret 0x2df3
0x000002000005ce9f : ret 0x2e
0x0000020000084965 : ret 0x2e00
0x00000200006fadb2 : ret 0x2e73
0x0000020000688ad4 : ret 0x2e75
0x00000200000696c6 : ret 0x2e7d
0x00000200001a96a2 : ret 0x2e8
0x00000200001ed6a6 : ret 0x2eb
0x000002000019cf47 : ret 0x2eb9
0x0000020000606d2f : ret 0x2ec
0x00000200000637c6 : ret 0x2edc
0x000002000036593c : ret 0x2ee8
0x0000020000054e35 : ret 0x2f
0x0000020000368edf : ret 0x2f74
0x00000200004450a0 : ret 0x2f77
0x0000020000208662 : ret 0x2f89
0x0000020000053b42 : ret 0x2fd4
0x000002000001e920 : ret 0x2fe1
0x000002000067285f : ret 0x2ff
0x0000020000045215 : ret 0x30
0x0000020000151478 : ret 0x300
0x0000020000284965 : ret 0x3011
0x00000200001778f1 : ret 0x302
0x00000200004c0f86 : ret 0x3024
0x00000200006369fc : ret 0x306
0x0000020000083250 : ret 0x3072
0x00000200004bc247 : ret 0x3074
0x000002000021d4ce : ret 0x3075
0x000002000018274a : ret 0x3077
0x00000200003a16cb : ret 0x308
0x00000200000485c6 : ret 0x308e
0x00000200000471c6 : ret 0x30a2
0x000002000001249e : ret 0x30c
0x00000200004b776e : ret 0x30e9
0x00000200000425c6 : ret 0x30ee
0x00000200004dc72b : ret 0x30f
0x00000200002065b4 : ret 0x310
0x000002000000dcc0 : ret 0x3138
0x00000200000328ba : ret 0x3148
0x000002000005bef6 : ret 0x3149
0x000002000003c4b6 : ret 0x314f
0x00000200001d6955 : ret 0x3175
0x00000200001a96ee : ret 0x31b9
0x0000020000064389 : ret 0x31e8
0x00000200001acf7e : ret 0x31e9
0x00000200000315bf : ret 0x31fa
0x00000200004ad4f0 : ret 0x320
0x00000200007001aa : ret 0x322
0x000002000044f1d5 : ret 0x324
0x0000020000071230 : ret 0x3240
0x0000020000064b01 : ret 0x3241
0x0000020000029fba : ret 0x3270
0x000002000020662a : ret 0x3274
0x00000200000722bd : ret 0x3276
0x00000200004e0433 : ret 0x328
0x000002000037c1bb : ret 0x32de
0x0000020000427d84 : ret 0x32e8
0x00000200000311bf : ret 0x32e9
0x000002000046f3eb : ret 0x32ff
0x0000020000120f75 : ret 0x330
0x0000020000205bc6 : ret 0x3302
0x00000200001d93cf : ret 0x3308
0x00000200003db476 : ret 0x3341
0x00000200001bbe52 : ret 0x3344
0x0000020000026460 : ret 0x3345
0x000002000002e3a5 : ret 0x3348
0x000002000009601a : ret 0x3349
0x000002000004f714 : ret 0x334c
0x000002000003aef2 : ret 0x334d
0x00000200000f1758 : ret 0x3364
0x0000020000206639 : ret 0x3366
0x000002000014c576 : ret 0x3373
0x00000200006f275c : ret 0x3374
0x00000200005d17b1 : ret 0x3375
0x0000020000096083 : ret 0x3377
0x00000200006eb6a6 : ret 0x339
0x00000200000d2685 : ret 0x33c3
0x00000200006d0321 : ret 0x33e9
0x00000200005b6662 : ret 0x33eb
0x000002000043a63a : ret 0x33ff
0x00000200006855ca : ret 0x340
0x000002000002a945 : ret 0x341
0x0000020000130067 : ret 0x344
0x000002000001e850 : ret 0x344d
0x00000200000a9feb : ret 0x345
0x00000200003b50c1 : ret 0x3473
0x00000200000b60d3 : ret 0x3474
0x00000200000f5ecd : ret 0x3477
0x000002000002dee8 : ret 0x348
0x0000020000046b72 : ret 0x349
0x000002000051bc1e : ret 0x34bb
0x00000200000339ef : ret 0x34c
0x000002000000dfd0 : ret 0x34c9
0x0000020000039c00 : ret 0x34d
0x00000200004d4eb5 : ret 0x34e9
0x000002000061136f : ret 0x3573
0x00000200003b5ac7 : ret 0x3574
0x00000200003a83e3 : ret 0x3575
0x0000020000025352 : ret 0x35d6
0x0000020000208d6e : ret 0x35e9
0x0000020000273c21 : ret 0x36
0x0000020000121bd6 : ret 0x366
0x0000020000682ac2 : ret 0x369
0x00000200001962d1 : ret 0x36e9
0x00000200003df9ee : ret 0x37
0x00000200001defc3 : ret 0x373
0x00000200001843bf : ret 0x375
0x00000200005049a5 : ret 0x377
0x0000020000039fc5 : ret 0x3774
0x00000200006264c3 : ret 0x37c
0x0000020000135b32 : ret 0x37c2
0x0000020000070183 : ret 0x37e8
0x000002000055a297 : ret 0x37e9
0x00000200000e410a : ret 0x38
0x000002000016a69c : ret 0x3824
0x0000020000372cf1 : ret 0x3840
0x00000200001457e4 : ret 0x3841
0x00000200001b877f : ret 0x3844
0x000002000013fec1 : ret 0x3845
0x00000200001bcabf : ret 0x3848
0x00000200001d694e : ret 0x3874
0x00000200001e5633 : ret 0x3875
0x00000200000c35b1 : ret 0x388
0x000002000020b7bb : ret 0x389
0x000002000000d079 : ret 0x38d8
0x000002000023d529 : ret 0x39
0x0000020000214095 : ret 0x3910
0x0000020000221b21 : ret 0x3918
0x000002000047bd00 : ret 0x3941
0x00000200000e6be4 : ret 0x3944
0x000002000007f5f2 : ret 0x3948
0x00000200000ffc19 : ret 0x3949
0x00000200000f441b : ret 0x394c
0x000002000008fd87 : ret 0x394d
0x000002000001172d : ret 0x394e
0x0000020000145848 : ret 0x3966
0x00000200003b3e55 : ret 0x3973
0x0000020000188c95 : ret 0x3977
0x000002000022a9da : ret 0x3983
0x000002000000d47d : ret 0x3997
0x000002000001e7c8 : ret 0x399b
0x00000200005a68b9 : ret 0x39e8
0x00000200004a15af : ret 0x39ff
0x000002000043d641 : ret 0x3a0
0x000002000050fa81 : ret 0x3a41
0x00000200005bfd96 : ret 0x3a73
0x0000020000028e09 : ret 0x3a75
0x0000020000686c33 : ret 0x3a76
0x00000200000ebc0b : ret 0x3a7c
0x0000020000140624 : ret 0x3a80
0x00000200000f5c40 : ret 0x3ab1
0x0000020000210228 : ret 0x3ae8
0x00000200003ac902 : ret 0x3aeb
0x000002000001e43a : ret 0x3b
0x0000020000100b2a : ret 0x3b04
0x00000200000ecc13 : ret 0x3b05
0x000002000067384a : ret 0x3b08
0x00000200004d6a44 : ret 0x3b10
0x000002000070f28a : ret 0x3b17
0x0000020000125490 : ret 0x3b1b
0x000002000020a1b7 : ret 0x3b1c
0x00000200001c6a09 : ret 0x3b24
0x000002000000d17c : ret 0x3b3
0x00000200000a8902 : ret 0x3b41
0x000002000003401b : ret 0x3b44
0x000002000003b77d : ret 0x3b45
0x000002000018e782 : ret 0x3b48
0x00000200000264fe : ret 0x3b49
0x0000020000036fba : ret 0x3b4c
0x00000200000815d7 : ret 0x3b4d
0x00000200003699a5 : ret 0x3b4e
0x0000020000242564 : ret 0x3b59
0x000002000011b21a : ret 0x3b64
0x000002000005a529 : ret 0x3b66
0x000002000020d5cb : ret 0x3b74
0x0000020000148f3d : ret 0x3b88
0x000002000042dcaa : ret 0x3b9
0x00000200001f5aac : ret 0x3ba
0x00000200006cb1c8 : ret 0x3bb
0x0000020000097307 : ret 0x3bb0
0x00000200004d4d27 : ret 0x3c10
0x00000200004eff1a : ret 0x3c5
0x0000020000417e88 : ret 0x3c72
0x0000020000057ebc : ret 0x3c73
0x0000020000205990 : ret 0x3c74
0x00000200005eae2c : ret 0x3c75
0x00000200001453ea : ret 0x3c80
0x000002000018983f : ret 0x3ce9
0x0000020000080aff : ret 0x3d
0x000002000019bd16 : ret 0x3d3
0x0000020000037124 : ret 0x3d48
0x0000020000047df0 : ret 0x3d72
0x000002000049d459 : ret 0x3d73
0x00000200000f78c1 : ret 0x3d75
0x00000200000f43a1 : ret 0x3d76
0x000002000001fe41 : ret 0x3d78
0x000002000019dc20 : ret 0x3d7c
0x00000200005d3c79 : ret 0x3d80
0x0000020000046a7c : ret 0x3d83
0x00000200000e93a6 : ret 0x3de9
0x000002000024b4f9 : ret 0x3e
0x000002000012398b : ret 0x3e00
0x00000200005ca811 : ret 0x3e75
0x00000200000ecbe8 : ret 0x3e8
0x000002000024b1cc : ret 0x3e9f
0x0000020000149a5d : ret 0x3eb
0x000002000000dfbf : ret 0x3ecb
0x0000020000635938 : ret 0x3ee8
0x00000200003bf892 : ret 0x3ee9
0x0000020000488cd8 : ret 0x3f
0x000002000024c29c : ret 0x3f39
0x0000020000199a16 : ret 0x3f6
0x000002000024ce24 : ret 0x3f61
0x0000020000380ec8 : ret 0x3f74
0x000002000011ffd2 : ret 0x3f75
0x00000200004be6a2 : ret 0x3f77
0x00000200000238c4 : ret 0x3f81
0x0000020000391d70 : ret 0x3fb8
0x00000200003ced1e : ret 0x3fc
0x0000020000052736 : ret 0x3fd
0x000002000048fc5b : ret 0x3ff
0x0000020000602be7 : ret 0x3ffd
0x00000200001c159f : ret 0x40
0x0000020000011a09 : ret 0x4000
0x00000200005992ac : ret 0x4002
0x0000020000142f3d : ret 0x4008
0x0000020000155a91 : ret 0x4010
0x00000200004d0791 : ret 0x402
0x000002000038fdae : ret 0x4074
0x00000200001988c6 : ret 0x408
0x00000200003d6553 : ret 0x40a3
0x00000200001628e7 : ret 0x40b9
0x000002000067300a : ret 0x40c3
0x00000200004aef2a : ret 0x40cc
0x0000020000250848 : ret 0x40e4
0x00000200001dca92 : ret 0x40e8
0x0000020000534ec6 : ret 0x40e9
0x00000200006567ed : ret 0x40ed
0x00000200005db456 : ret 0x40ff
0x00000200002135f8 : ret 0x4102
0x00000200000c87a7 : ret 0x4104
0x00000200000ece90 : ret 0x4105
0x00000200003ddf36 : ret 0x4106
0x000002000006f2dc : ret 0x4108
0x000002000001e2a0 : ret 0x410c
0x00000200000a0f2f : ret 0x4110
0x00000200003a47fd : ret 0x4114
0x0000020000406c3f : ret 0x4118
0x00000200006ec877 : ret 0x4119
0x00000200006e440d : ret 0x411a
0x000002000014aec8 : ret 0x4120
0x00000200001b3dcb : ret 0x4123
0x00000200004b755d : ret 0x4128
0x000002000008ec28 : ret 0x4130
0x0000020000403ba1 : ret 0x4138
0x00000200003d782c : ret 0x413f
0x000002000063c7b4 : ret 0x4140
0x00000200006e9781 : ret 0x4141
0x00000200006812c1 : ret 0x4158
0x000002000002955f : ret 0x4160
0x0000020000055b3f : ret 0x4166
0x00000200000b04d6 : ret 0x417
0x00000200005d98e2 : ret 0x4172
0x0000020000024b8e : ret 0x417c
0x000002000058ce26 : ret 0x4187
0x00000200000c30a4 : ret 0x4188
0x00000200000f0b42 : ret 0x4189
0x00000200001d868d : ret 0x418a
0x00000200001405e0 : ret 0x418d
0x00000200006edcd7 : ret 0x4199
0x00000200000f5d5c : ret 0x41ba
0x0000020000033642 : ret 0x41c3
0x0000020000140838 : ret 0x41c9
0x000002000049a36b : ret 0x41d0
0x000002000046e615 : ret 0x41e0
0x000002000005ab54 : ret 0x41e9
0x0000020000027bd5 : ret 0x41f0
0x000002000061214b : ret 0x41f1
0x00000200001b61c3 : ret 0x41fc
0x0000020000402124 : ret 0x41ff
0x00000200000a098c : ret 0x420f
0x00000200004acdfd : ret 0x4210
0x000002000044f7ba : ret 0x4218
0x0000020000393fad : ret 0x4230
0x00000200003fcdea : ret 0x423b
0x0000020000558aff : ret 0x4266
0x0000020000401d6e : ret 0x4272
0x00000200004cca4f : ret 0x4276
0x000002000006f696 : ret 0x4288
0x000002000008fa21 : ret 0x428d
0x000002000001fcc1 : ret 0x42a
0x00000200000b0847 : ret 0x42c6
0x00000200000b887a : ret 0x42e0
0x000002000011e3e0 : ret 0x42e9
0x0000020000554e0e : ret 0x42f6
0x00000200000131b4 : ret 0x431a
0x0000020000132794 : ret 0x4366
0x000002000002ac26 : ret 0x4374
0x000002000044b55f : ret 0x438
0x0000020000255410 : ret 0x4386
0x0000020000071238 : ret 0x4388
0x000002000004c73e : ret 0x4389
0x00000200005e6d09 : ret 0x438b
0x0000020000535cde : ret 0x43ba
0x00000200000aa843 : ret 0x43c
0x00000200005f79c3 : ret 0x43e9
0x000002000001470d : ret 0x43ef
0x000002000036c74a : ret 0x43f7
0x0000020000141fa7 : ret 0x4402
0x00000200001181cd : ret 0x4404
0x00000200001d1eae : ret 0x4407
0x000002000006ab9e : ret 0x4408
0x00000200000ec9e2 : ret 0x4409
0x00000200000f2639 : ret 0x440c
0x00000200003da8b4 : ret 0x440f
0x0000020000497b78 : ret 0x4410
0x00000200000ec9f3 : ret 0x4413
0x0000020000468628 : ret 0x4414
0x0000020000097f37 : ret 0x4418
0x00000200006d03c7 : ret 0x441a
0x000002000050762f : ret 0x441c
0x00000200001c6906 : ret 0x4424
0x0000020000455eb5 : ret 0x4428
0x0000020000206174 : ret 0x4432
0x0000020000489850 : ret 0x4438
0x000002000005acb9 : ret 0x4466
0x00000200002588b8 : ret 0x4470
0x0000020000084596 : ret 0x4475
0x0000020000108f80 : ret 0x4477
0x000002000000f293 : ret 0x447f
0x00000200000659c3 : ret 0x4488
0x00000200000c5ee2 : ret 0x4489
0x000002000047d252 : ret 0x448b
0x0000020000074c8f : ret 0x44a3
0x000002000012dee9 : ret 0x44c3
0x00000200001d8e28 : ret 0x44c6
0x00000200000d6ef9 : ret 0x44c7
0x0000020000259a54 : ret 0x44e1
0x00000200003646b6 : ret 0x44e9
0x00000200000d104e : ret 0x44f0
0x00000200003d2407 : ret 0x44ff
0x0000020000236eed : ret 0x4502
0x000002000004eb0a : ret 0x4504
0x000002000007025e : ret 0x4508
0x00000200000b7ae2 : ret 0x4509
0x00000200000f0825 : ret 0x450f
0x000002000022633c : ret 0x4510
0x0000020000133b56 : ret 0x4511
0x00000200000eca63 : ret 0x4513
0x0000020000115eab : ret 0x4518
0x00000200006e9738 : ret 0x451a
0x000002000025a7cc : ret 0x451d
0x00000200004ad354 : ret 0x4520
0x000002000042e52f : ret 0x4524
0x00000200005a3e4d : ret 0x4528
0x00000200001d49b9 : ret 0x4540
0x00000200006d0409 : ret 0x4541
0x00000200003ecb52 : ret 0x4560
0x0000020000712295 : ret 0x4564
0x000002000005bead : ret 0x4566
0x0000020000463024 : ret 0x4568
0x000002000017f80a : ret 0x457
0x00000200004bc232 : ret 0x4574
0x00000200005e2840 : ret 0x4575
0x000002000021e1a1 : ret 0x457f
0x000002000007ebb1 : ret 0x4588
0x00000200000302e0 : ret 0x4589
0x0000020000227050 : ret 0x458b
0x0000020000041b6f : ret 0x45b0
0x000002000061a6d4 : ret 0x45c7
0x00000200003fd457 : ret 0x45ff
0x000002000025dda1 : ret 0x46
0x000002000047b8e4 : ret 0x460
0x00000200005b2003 : ret 0x4602
0x000002000051563a : ret 0x4607
0x000002000000f108 : ret 0x4609
0x0000020000625438 : ret 0x4631
0x000002000025cf8c : ret 0x4641
0x000002000025d3b4 : ret 0x466e
0x00000200004cc90b : ret 0x4674
0x0000020000064f87 : ret 0x4688
0x000002000004ea9e : ret 0x4689
0x000002000003e19e : ret 0x46c6
0x00000200003dc129 : ret 0x46e9
0x00000200002600bd : ret 0x47
0x00000200000f8bf9 : ret 0x470f
0x000002000025ea64 : ret 0x4714
0x0000020000149dc3 : ret 0x472
0x00000200001d3716 : ret 0x473
0x00000200000bcb00 : ret 0x474
0x0000020000141828 : ret 0x475
0x0000020000592b0d : ret 0x4766
0x0000020000616d86 : ret 0x477
0x00000200005f8a8f : ret 0x4773
0x00000200006c9994 : ret 0x4774
0x00000200001b9d24 : ret 0x4777
0x000002000066aae6 : ret 0x4779
0x000002000058cb3b : ret 0x4787
0x000002000003cd75 : ret 0x4788
0x00000200000c70bd : ret 0x4789
0x00000200004b9ec0 : ret 0x478b
0x0000020000014b0d : ret 0x47d2
0x00000200005567e9 : ret 0x47e9
0x00000200001cd780 : ret 0x47eb
0x000002000006c655 : ret 0x47f7
0x0000020000262641 : ret 0x48
0x00000200003be5c9 : ret 0x4801
0x000002000005acd8 : ret 0x4802
0x00000200001361e2 : ret 0x4803
0x000002000002511b : ret 0x4804
0x00000200003ddf6f : ret 0x4805
0x0000020000070a8a : ret 0x4806
0x000002000003df75 : ret 0x4807
0x0000020000025918 : ret 0x4808
0x000002000021d02c : ret 0x480b
0x00000200000e51bc : ret 0x480c
0x000002000071eb9a : ret 0x480d
0x00000200001361d7 : ret 0x480f
0x00000200000310e0 : ret 0x4810
0x0000020000132929 : ret 0x4811
0x00000200000eca0d : ret 0x4813
0x00000200003fe8f6 : ret 0x4814
0x0000020000231c3b : ret 0x4818
0x000002000068c112 : ret 0x481c
0x000002000020cba2 : ret 0x481f
0x0000020000049dac : ret 0x4820
0x0000020000025762 : ret 0x4824
0x00000200003ea9f7 : ret 0x4825
0x0000020000054f86 : ret 0x4828
0x000002000036e82d : ret 0x482b
0x000002000002578d : ret 0x4830
0x00000200000257aa : ret 0x4838
0x00000200001c4f3e : ret 0x483d
0x00000200004f4070 : ret 0x483f
0x00000200000257c7 : ret 0x4840
0x000002000073043a : ret 0x4841
0x0000020000092561 : ret 0x4848
0x00000200005bd450 : ret 0x484c
0x00000200001cdb70 : ret 0x4850
0x000002000020a9eb : ret 0x4858
0x00000200000ece0d : ret 0x4860
0x0000020000237452 : ret 0x4864
0x0000020000065043 : ret 0x4865
0x0000020000178109 : ret 0x4868
0x00000200001d6fae : ret 0x4869
0x00000200000257e7 : ret 0x4870
0x0000020000261d08 : ret 0x4872
0x0000020000229d5f : ret 0x4875
0x00000200001356ed : ret 0x4877
0x0000020000025807 : ret 0x4878
0x00000200001c55fd : ret 0x488b
0x00000200001c2663 : ret 0x488d
0x000002000018c7fe : ret 0x48a
0x00000200001d9310 : ret 0x48b
0x000002000009555e : ret 0x48c3
0x00000200000b61fe : ret 0x48cc
0x0000020000374ffc : ret 0x48d
0x00000200005a9cb0 : ret 0x48d8
0x000002000020810c : ret 0x48e0
0x000002000047fbb2 : ret 0x48e8
0x000002000014869c : ret 0x48e9
0x0000020000670e62 : ret 0x48f
0x0000020000033230 : ret 0x48f0
0x000002000020ba1d : ret 0x48f3
0x00000200005b4ee6 : ret 0x48f8
0x00000200003d2276 : ret 0x48ff
0x00000200001d4716 : ret 0x49
0x0000020000140b7e : ret 0x4902
0x000002000008e745 : ret 0x4904
0x0000020000638df5 : ret 0x4906
0x0000020000079a49 : ret 0x4908
0x00000200003e084e : ret 0x4909
0x0000020000070279 : ret 0x490c
0x00000200003da920 : ret 0x490f
0x00000200000d7ce6 : ret 0x4910
0x000002000019d414 : ret 0x4913
0x000002000009cdd4 : ret 0x4918
0x0000020000137a17 : ret 0x491c
0x000002000062371c : ret 0x491f
0x000002000012ef45 : ret 0x4920
0x00000200001c6b2f : ret 0x4924
0x000002000038fb78 : ret 0x4925
0x00000200000b705c : ret 0x4928
0x000002000012f499 : ret 0x4930
0x00000200004b4fb1 : ret 0x4938
0x00000200004f69ac : ret 0x4940
0x00000200001333f0 : ret 0x4942
0x00000200004d17eb : ret 0x4948
0x00000200003b0ebf : ret 0x4950
0x00000200004c0e46 : ret 0x4975
0x000002000002b561 : ret 0x49c3
0x000002000001095a : ret 0x49c8
0x00000200003b8d3c : ret 0x49e0
0x0000020000559d85 : ret 0x49e9
0x000002000004bab5 : ret 0x49f0
0x0000020000148ebe : ret 0x49f8
0x00000200003ed58c : ret 0x49fe
0x000002000040ca4a : ret 0x49ff
0x0000020000267fa1 : ret 0x4a
0x000002000037da7c : ret 0x4a02
0x00000200000ca8ca : ret 0x4a74
0x00000200001c5380 : ret 0x4a8
0x00000200002082e4 : ret 0x4a8d
0x000002000000de66 : ret 0x4adb
0x0000020000268990 : ret 0x4af4
0x00000200003d7c62 : ret 0x4aff
0x000002000026b01d : ret 0x4b
0x0000020000010e9e : ret 0x4b20
0x0000020000096466 : ret 0x4b75
0x00000200004fc3b0 : ret 0x4b80
0x00000200004d77a0 : ret 0x4b83
0x0000020000127c7a : ret 0x4b88
0x00000200000d93ae : ret 0x4b89
0x00000200000d5c7c : ret 0x4b8d
0x000002000016b5dd : ret 0x4ba
0x000002000067a9ef : ret 0x4be8
0x00000200004850b4 : ret 0x4bf
0x000002000071f73e : ret 0x4bff
0x000002000026f299 : ret 0x4c
0x0000020000193ae8 : ret 0x4c02
0x0000020000627a33 : ret 0x4c03
0x0000020000174e10 : ret 0x4c04
0x0000020000039384 : ret 0x4c08
0x0000020000580aec : ret 0x4c0c
0x00000200006d0887 : ret 0x4c0d
0x000002000003130a : ret 0x4c10
0x000002000065120f : ret 0x4c12
0x000002000065f5b5 : ret 0x4c1f
0x000002000046454a : ret 0x4c20
0x00000200000e70bd : ret 0x4c25
0x000002000014ae4c : ret 0x4c28
0x00000200006e3294 : ret 0x4c30
0x0000020000476a31 : ret 0x4c40
0x000002000026cbc0 : ret 0x4c48
0x000002000042bd20 : ret 0x4c4c
0x000002000019d006 : ret 0x4c50
0x0000020000031830 : ret 0x4c65
0x00000200005825fc : ret 0x4c74
0x00000200000842e8 : ret 0x4c89
0x000002000000d382 : ret 0x4c99
0x000002000001e008 : ret 0x4c9a
0x000002000026e08c : ret 0x4c9c
0x0000020000367c54 : ret 0x4ca8
0x000002000013fac6 : ret 0x4cc3
0x0000020000125788 : ret 0x4ce0
0x000002000050d73e : ret 0x4ce8
0x000002000003b13c : ret 0x4cf0
0x00000200000ec9cb : ret 0x4cf8
0x00000200003ed4eb : ret 0x4cfe
0x00000200003d23cf : ret 0x4cff
0x000002000027283d : ret 0x4d
0x000002000053a851 : ret 0x4d02
0x000002000008eaf8 : ret 0x4d04
0x00000200005926ff : ret 0x4d05
0x00000200004d7307 : ret 0x4d07
0x000002000007f200 : ret 0x4d08
0x00000200001c0b68 : ret 0x4d10
0x000002000049950b : ret 0x4d12
0x000002000046cffd : ret 0x4d18
0x00000200004367f5 : ret 0x4d20
0x00000200006040f3 : ret 0x4d38
0x000002000037ec0e : ret 0x4d48
0x00000200003f6eb6 : ret 0x4d74
0x00000200000de3ce : ret 0x4d75
0x000002000061773b : ret 0x4d77
0x00000200000318de : ret 0x4d88
0x0000020000385c1c : ret 0x4d89
0x000002000002b51d : ret 0x4db9
0x0000020000002e1d : ret 0x4dc6
0x00000200006d20ed : ret 0x4de8
0x000002000004b8b5 : ret 0x4df0
0x00000200006e986a : ret 0x4df8
0x00000200003d21d9 : ret 0x4dff
0x0000020000275e15 : ret 0x4e
0x0000020000627e6a : ret 0x4e6d
0x00000200000ed20c : ret 0x4e74
0x0000020000060879 : ret 0x4e8
0x00000200001ad368 : ret 0x4e80
0x00000200006cbc2c : ret 0x4e8d
0x000002000011c2c6 : ret 0x4e9
0x0000020000208801 : ret 0x4eb
0x000002000027a969 : ret 0x4f
0x0000020000136c51 : ret 0x4f02
0x0000020000031daa : ret 0x4f0f
0x00000200001b348a : ret 0x4f6d
0x00000200000d3fa9 : ret 0x4f72
0x00000200000f77de : ret 0x4f73
0x000002000010e9f9 : ret 0x4f76
0x00000200006c591a : ret 0x4feb
0x000002000072912e : ret 0x4ff
0x000002000027e591 : ret 0x50
0x000002000027c16c : ret 0x5036
0x00000200000e163f : ret 0x5074
0x00000200004b708f : ret 0x5077
0x00000200000b0222 : ret 0x508
0x0000020000102fa1 : ret 0x50e9
0x0000020000281865 : ret 0x51
0x00000200000229a9 : ret 0x512d
0x00000200003e6b05 : ret 0x513b
0x00000200003c34f8 : ret 0x5174
0x00000200004baf6d : ret 0x5175
0x00000200001b9cc4 : ret 0x5177
0x000002000007ad0e : ret 0x5189
0x00000200000b8c0a : ret 0x518b
0x00000200000a3eb3 : ret 0x518d
0x000002000007800e : ret 0x521
0x000002000003b546 : ret 0x523
0x00000200004fbc94 : ret 0x528b
0x000002000025ae3c : ret 0x52f9
0x0000020000268354 : ret 0x5309
0x000002000023a6b4 : ret 0x5328
0x00000200001b9b5e : ret 0x533b
0x0000020000674db3 : ret 0x5340
0x0000020000057eac : ret 0x5372
0x00000200004d769b : ret 0x5389
0x00000200003fd6a7 : ret 0x538b
0x0000020000021d09 : ret 0x53e8
0x000002000038fb25 : ret 0x548
0x000002000007d3aa : ret 0x5488
0x00000200000354a1 : ret 0x5489
0x00000200000852cb : ret 0x548b
0x000002000012e258 : ret 0x55
0x000002000016ff0a : ret 0x550
0x0000020000079805 : ret 0x5500
0x000002000024bbb0 : ret 0x553b
0x00000200003e44b9 : ret 0x5574
0x000002000005d036 : ret 0x5589
0x00000200005e6a66 : ret 0x558d
0x000002000001f319 : ret 0x55a5
0x00000200006643c2 : ret 0x55e
0x00000200004dc6c1 : ret 0x55e8
0x00000200003f302f : ret 0x55e9
0x00000200000e9b7c : ret 0x56
0x0000020000578a83 : ret 0x563b
0x0000020000141862 : ret 0x5675
0x000002000009e6a2 : ret 0x5688
0x000002000013a35b : ret 0x56e9
0x0000020000471bb5 : ret 0x57
0x0000020000594940 : ret 0x572
0x00000200000c3b3e : ret 0x573
0x00000200000e654d : ret 0x574
0x000002000025ae38 : ret 0x574c
0x00000200000339e0 : ret 0x575
0x0000020000721c76 : ret 0x5760
0x00000200001a1501 : ret 0x577
0x00000200001d42b9 : ret 0x5774
0x000002000013fdf4 : ret 0x5775
0x000002000007660c : ret 0x5777
0x00000200005e6c79 : ret 0x578d
0x0000020000181316 : ret 0x57d
0x0000020000672fd0 : ret 0x587
0x000002000020f02a : ret 0x5874
0x0000020000027e20 : ret 0x587f
0x000002000036f490 : ret 0x588
0x00000200000abbf3 : ret 0x589
0x0000020000021f59 : ret 0x58aa
0x0000020000471dd5 : ret 0x58b
0x000002000016c10a : ret 0x58e
0x000002000055222f : ret 0x58e9
0x0000020000675171 : ret 0x58ff
0x0000020000022f44 : ret 0x594d
0x000002000064002b : ret 0x5958
0x0000020000643163 : ret 0x5975
0x00000200004ca481 : ret 0x59e8
0x0000020000174e82 : ret 0x5a0
0x00000200003a2e3a : ret 0x5a6
0x000002000023920f : ret 0x5a72
0x00000200004bc21d : ret 0x5a74
0x0000020000087763 : ret 0x5a8d
0x000002000004ff54 : ret 0x5b0
0x000002000040520a : ret 0x5b8d
0x00000200001c4d6e : ret 0x5b9
0x000002000017e704 : ret 0x5ba
0x0000020000011afc : ret 0x5bba
0x00000200004f944b : ret 0x5be9
0x00000200005b7718 : ret 0x5c6
0x00000200001d6722 : ret 0x5c89
0x0000020000656d26 : ret 0x5ccb
0x0000020000220d2f : ret 0x5cf7
0x00000200004c07bf : ret 0x5d00
0x00000200003782ea : ret 0x5d3f
0x00000200000749e9 : ret 0x5d77
0x00000200000546be : ret 0x5e1
0x000002000065c4d4 : ret 0x5e73
0x00000200000ed202 : ret 0x5e74
0x000002000000eefc : ret 0x5e78
0x0000020000223b81 : ret 0x5e9
0x000002000060e516 : ret 0x5eb
0x000002000037457c : ret 0x5ee8
0x000002000028a9c1 : ret 0x5f
0x0000020000118223 : ret 0x5f41
0x000002000008e29d : ret 0x5f6
0x00000200000ffed2 : ret 0x5f75
0x000002000020507a : ret 0x5f8a
0x000002000060b1e1 : ret 0x5f8d
0x0000020000109fa8 : ret 0x5fb8
0x000002000062721f : ret 0x5ff
0x00000200000728d2 : ret 0x600
0x0000020000413a35 : ret 0x6000
0x000002000020bbaa : ret 0x6073
0x00000200001e79f6 : ret 0x60e8
0x000002000012563c : ret 0x610
0x000002000000eff9 : ret 0x6169
0x000002000020d5a5 : ret 0x6174
0x00000200005a3027 : ret 0x61e9
0x00000200000761fd : ret 0x61eb
0x000002000028dcbc : ret 0x61ff
0x00000200000cee69 : ret 0x624
0x00000200001df7f5 : ret 0x6275
0x000002000001102d : ret 0x6280
0x00000200001780c1 : ret 0x62b9
0x0000020000674c37 : ret 0x62ba
0x0000020000108fab : ret 0x62e9
0x000002000002dcc2 : ret 0x63
0x0000020000136520 : ret 0x6348
0x000002000003ad57 : ret 0x6349
0x00000200003cacaf : ret 0x6377
0x00000200002912c8 : ret 0x638c
0x00000200002917e4 : ret 0x63c4
0x000002000006035e : ret 0x63e9
0x0000020000291b90 : ret 0x63eb
0x00000200000f7845 : ret 0x6473
0x00000200004dde82 : ret 0x6483
0x000002000008c4eb : ret 0x6572
0x00000200000928b6 : ret 0x6574
0x00000200000e05d1 : ret 0x65c3
0x00000200004021a9 : ret 0x65ff
0x0000020000140ae4 : ret 0x6602
0x00000200003ac340 : ret 0x6604
0x0000020000110193 : ret 0x6608
0x000002000061923d : ret 0x6610
0x00000200000d7d2c : ret 0x661c
0x0000020000616895 : ret 0x6620
0x00000200005a3c23 : ret 0x6622
0x00000200003ac10d : ret 0x6628
0x00000200001403d1 : ret 0x6630
0x00000200000f5d81 : ret 0x663c
0x000002000017f012 : ret 0x667
0x00000200001363b7 : ret 0x6674
0x00000200000de4e9 : ret 0x6675
0x0000020000630a92 : ret 0x66ba
0x000002000012383c : ret 0x66c3
0x0000020000483650 : ret 0x66e8
0x000002000043b751 : ret 0x66ff
0x000002000000e027 : ret 0x6716
0x000002000000eaa5 : ret 0x6719
0x00000200000c5dc0 : ret 0x673
0x00000200000a73b8 : ret 0x674
0x00000200000c2c71 : ret 0x6740
0x00000200002071af : ret 0x675
0x00000200001f192d : ret 0x676
0x00000200001806da : ret 0x677
0x0000020000504d0e : ret 0x6774
0x00000200000995ba : ret 0x6775
0x00000200003cb4e5 : ret 0x6777
0x000002000047555d : ret 0x677e
0x00000200002788e5 : ret 0x68
0x000002000028f6d0 : ret 0x685a
0x00000200000eb166 : ret 0x6873
0x000002000061eedd : ret 0x6875
0x00000200005a5a31 : ret 0x68e9
0x000002000000d03d : ret 0x6906
0x0000020000631524 : ret 0x692d
0x00000200002061b2 : ret 0x6948
0x000002000003d1a8 : ret 0x694c
0x0000020000463001 : ret 0x6972
0x000002000065b6b9 : ret 0x6975
0x00000200001cd286 : ret 0x6980
0x000002000016f2c6 : ret 0x69e
0x00000200004ba645 : ret 0x69e9
0x0000020000686991 : ret 0x69ff
0x00000200000e5d4d : ret 0x6a73
0x00000200004bc20d : ret 0x6a74
0x0000020000482179 : ret 0x6a75
0x00000200004b48e9 : ret 0x6a77
0x000002000057cab2 : ret 0x6aeb
0x000002000008a585 : ret 0x6b48
0x0000020000205172 : ret 0x6b4c
0x0000020000043c15 : ret 0x6b66
0x0000020000712d4c : ret 0x6b75
0x0000020000447fbc : ret 0x6b9
0x000002000016b33e : ret 0x6ba
0x00000200001e762b : ret 0x6be8
0x000002000011f731 : ret 0x6be9
0x00000200006c9404 : ret 0x6beb
0x0000020000093bda : ret 0x6c20
0x0000020000048040 : ret 0x6c72
0x000002000010eb95 : ret 0x6c77
0x00000200001316d7 : ret 0x6ca3
0x0000020000616d02 : ret 0x6ce8
0x0000020000452802 : ret 0x6cf
0x00000200000d7044 : ret 0x6d76
0x0000020000196e24 : ret 0x6eb
0x00000200001aac56 : ret 0x6ee9
0x0000020000279c69 : ret 0x6f
0x00000200001cf022 : ret 0x6f72
0x00000200000c6d52 : ret 0x6f76
0x00000200000e4bd4 : ret 0x6f77
0x0000020000010bb6 : ret 0x6f9
0x00000200004f70c4 : ret 0x6fe9
0x000002000027cb19 : ret 0x70
0x00000200000728a1 : ret 0x700
0x0000020000415b3b : ret 0x7000
0x0000020000285d3d : ret 0x7005
0x00000200002431d9 : ret 0x7006
0x0000020000284945 : ret 0x700c
0x000002000024ca31 : ret 0x700e
0x0000020000681fe0 : ret 0x70ba
0x00000200005c8e9a : ret 0x70e8
0x000002000061929b : ret 0x7174
0x000002000027dbf4 : ret 0x71d5
0x000002000061cc03 : ret 0x71eb
0x0000020000213d42 : ret 0x7210
0x0000020000036ea0 : ret 0x724
0x000002000023493a : ret 0x726
0x00000200001dd471 : ret 0x7273
0x000002000000c02f : ret 0x7298
0x000002000072a73f : ret 0x72ff
0x00000200005f75ff : ret 0x7372
0x000002000009b00c : ret 0x7374
0x00000200004e7aa6 : ret 0x7375
0x00000200001b9c42 : ret 0x7377
0x00000200000e44db : ret 0x7400
0x000002000005d8c0 : ret 0x7401
0x00000200000aae3e : ret 0x7402
0x00000200000cc61b : ret 0x7403
0x0000020000079f0e : ret 0x7404
0x0000020000157a18 : ret 0x7406
0x0000020000141767 : ret 0x7407
0x0000020000077098 : ret 0x7408
0x000002000005b069 : ret 0x740f
0x000002000005f87a : ret 0x7410
0x000002000006c703 : ret 0x7420
0x0000020000010599 : ret 0x7431
0x0000020000557307 : ret 0x7438
0x0000020000098dc9 : ret 0x743f
0x00000200001f6987 : ret 0x7440
0x00000200001e7889 : ret 0x7455
0x00000200003d5272 : ret 0x7477
0x00000200001a6334 : ret 0x7489
0x0000020000681297 : ret 0x74ff
0x00000200006fc3c0 : ret 0x7500
0x0000020000053797 : ret 0x7501
0x0000020000027bca : ret 0x7502
0x00000200000834bd : ret 0x7503
0x00000200000366f0 : ret 0x7504
0x0000020000157a31 : ret 0x7506
0x0000020000074d53 : ret 0x7507
0x000002000005be74 : ret 0x7508
0x000002000010c675 : ret 0x750e
0x000002000010c63f : ret 0x750f
0x000002000010b0ec : ret 0x7510
0x0000020000054ea2 : ret 0x7520
0x00000200000af6df : ret 0x7539
0x000002000005f775 : ret 0x7540
0x0000020000416b37 : ret 0x7547
0x00000200004add23 : ret 0x7570
0x00000200004bcd12 : ret 0x7572
0x0000020000603708 : ret 0x7573
0x0000020000046327 : ret 0x75f0
0x0000020000388e70 : ret 0x75fe
0x0000020000721d80 : ret 0x75ff
0x000002000000f333 : ret 0x763c
0x0000020000615df9 : ret 0x7675
0x000002000013f3aa : ret 0x767d
0x000002000061412c : ret 0x7701
0x00000200000e68fa : ret 0x772
0x000002000018499e : ret 0x773
0x0000020000028071 : ret 0x774
0x00000200000412ce : ret 0x775
0x0000020000632ad0 : ret 0x776
0x0000020000180a5e : ret 0x777
0x00000200000de46a : ret 0x7774
0x00000200001e23de : ret 0x77b9
0x0000020000132e5d : ret 0x77e
0x000002000014180d : ret 0x77e9
0x000002000036697f : ret 0x7883
0x000002000004c300 : ret 0x789
0x0000020000158542 : ret 0x78e9
0x0000020000425223 : ret 0x7973
0x00000200000e1de1 : ret 0x7983
0x0000020000100b62 : ret 0x79e9
0x000002000000fa12 : ret 0x7a55
0x00000200004c1931 : ret 0x7a72
0x00000200004bc1fd : ret 0x7a74
0x0000020000121bf2 : ret 0x7b72
0x000002000005a73e : ret 0x7b75
0x0000020000195476 : ret 0x7ba
0x0000020000021a79 : ret 0x7c05
0x000002000062b0d1 : ret 0x7c74
0x00000200000c01c3 : ret 0x7c76
0x0000020000403feb : ret 0x7c80
0x00000200000e6b96 : ret 0x7c81
0x00000200000f639d : ret 0x7c89
0x00000200000ad713 : ret 0x7cc0
0x000002000005d527 : ret 0x7ce9
0x00000200000ad71b : ret 0x7d00
0x000002000043d49f : ret 0x7d73
0x0000020000105b5e : ret 0x7d80
0x00000200000f60f4 : ret 0x7d89
0x00000200006706b1 : ret 0x7dff
0x0000020000213293 : ret 0x7e8
0x000002000005304b : ret 0x7e9
0x00000200001ac64c : ret 0x7eb
0x0000020000011413 : ret 0x7ec2
0x0000020000138a1c : ret 0x7f5
0x00000200002336ab : ret 0x7fe8
0x0000020000197217 : ret 0x80
0x0000020000722230 : ret 0x800
0x00000200006c9275 : ret 0x8001
0x00000200001be440 : ret 0x8018
0x000002000042705e : ret 0x8024
0x0000020000144833 : ret 0x8041
0x00000200003912e0 : ret 0x8042
0x000002000067ea2d : ret 0x8068
0x0000020000076b9b : ret 0x8076
0x0000020000011adb : ret 0x807a
0x0000020000102111 : ret 0x80ba
0x00000200001bb6fe : ret 0x80c3
0x0000020000010adb : ret 0x80e5
0x00000200000d01f7 : ret 0x80eb
0x0000020000238d30 : ret 0x8102
0x00000200001949c2 : ret 0x8124
0x00000200000528f7 : ret 0x8141
0x000002000002e3d8 : ret 0x8148
0x00000200000ed1df : ret 0x8149
0x000002000038a6ae : ret 0x8174
0x00000200003dedaa : ret 0x818
0x00000200005732c0 : ret 0x8188
0x00000200001d5b73 : ret 0x8189
0x000002000000d6a8 : ret 0x8199
0x00000200006ed78f : ret 0x81c3
0x000002000022beae : ret 0x81d
0x000002000010690e : ret 0x81e9
0x0000020000073870 : ret 0x81eb
0x0000020000028ea0 : ret 0x81f0
0x00000200005df5f9 : ret 0x81fe
0x00000200001bebe2 : ret 0x820
0x0000020000032b57 : ret 0x820f
0x0000020000021780 : ret 0x82bc
0x00000200000d545e : ret 0x82eb
0x000002000042e34a : ret 0x8303
0x00000200001eb817 : ret 0x8304
0x000002000006accc : ret 0x8308
0x00000200004a9bab : ret 0x8309
0x000002000002675d : ret 0x830f
0x000002000023434e : ret 0x8310
0x00000200005e180d : ret 0x8318
0x00000200006d25ad : ret 0x831a
0x000002000014ae1d : ret 0x8320
0x000002000064f1b6 : ret 0x8328
0x000002000004fc0d : ret 0x8341
0x000002000004d458 : ret 0x8348
0x0000020000024c7c : ret 0x8349
0x00000200000eb24c : ret 0x8366
0x000002000003e288 : ret 0x8388
0x0000020000029161 : ret 0x8389
0x0000020000010681 : ret 0x839
0x0000020000472bf7 : ret 0x83c3
0x00000200002063cc : ret 0x83c7
0x00000200006ef2c3 : ret 0x83f0
0x00000200003d95c0 : ret 0x83ff
0x000002000002c601 : ret 0x840f
0x000002000042dbb9 : ret 0x8423
0x0000020000011a6e : ret 0x842f
0x000002000038eebc : ret 0x8440
0x0000020000194983 : ret 0x8441
0x00000200000da217 : ret 0x8445
0x000002000012cf0b : ret 0x8474
0x000002000013855e : ret 0x8489
0x000002000038a058 : ret 0x84c7
0x00000200003ac934 : ret 0x84eb
0x0000020000225244 : ret 0x84ff
0x000002000015744a : ret 0x850
0x00000200001403d9 : ret 0x8502
0x00000200000ed6e5 : ret 0x8508
0x000002000002ac30 : ret 0x850f
0x00000200004546aa : ret 0x8541
0x0000020000666447 : ret 0x8544
0x00000200000af20c : ret 0x8545
0x0000020000024962 : ret 0x8548
0x0000020000079b9e : ret 0x8549
0x000002000036eff4 : ret 0x854c
0x000002000002a79d : ret 0x854d
0x00000200003918d9 : ret 0x8566
0x0000020000055c60 : ret 0x8577
0x0000020000024b79 : ret 0x8578
0x000002000061a858 : ret 0x8589
0x000002000061a827 : ret 0x85c7
0x00000200003efb44 : ret 0x85ff
0x000002000002ad15 : ret 0x860f
0x000002000012c4f4 : ret 0x864
0x000002000016a6a0 : ret 0x8688
0x000002000003c86b : ret 0x868b
0x000002000072270a : ret 0x86e9
0x00000200000f7491 : ret 0x86eb
0x0000020000026749 : ret 0x870f
0x0000020000638541 : ret 0x873
0x000002000021c02f : ret 0x873b
0x00000200000320ee : ret 0x874
0x00000200004fe2ce : ret 0x8748
0x00000200000415b1 : ret 0x875
0x00000200000f85e3 : ret 0x877
0x000002000003aad6 : ret 0x878b
0x0000020000129daf : ret 0x87e
0x000002000002ab3c : ret 0x88
0x000002000046254c : ret 0x8800
0x00000200000a87af : ret 0x8840
0x000002000006459a : ret 0x8841
0x000002000003db92 : ret 0x8844
0x000002000011e42a : ret 0x8876
0x000002000011f7cd : ret 0x88b
0x00000200001877e7 : ret 0x88e9
0x0000020000137652 : ret 0x89
0x000002000053380d : ret 0x8902
0x000002000039ae22 : ret 0x8908
0x0000020000646a58 : ret 0x890b
0x000002000048e935 : ret 0x8910
0x00000200005a947c : ret 0x8914
0x000002000039adfd : ret 0x8918
0x000002000067cedc : ret 0x8920
0x000002000050ce4c : ret 0x8928
0x000002000008760c : ret 0x8941
0x00000200003fcd56 : ret 0x8942
0x00000200000414d2 : ret 0x8944
0x0000020000034073 : ret 0x8945
0x000002000003396a : ret 0x8948
0x000002000002eddf : ret 0x8949
0x00000200000f9042 : ret 0x894a
0x00000200004d4e04 : ret 0x894b
0x0000020000050675 : ret 0x894c
0x0000020000128509 : ret 0x894d
0x000002000006fe4e : ret 0x8966
0x00000200003844cf : ret 0x89bb
0x0000020000630329 : ret 0x89e8
0x00000200003b0165 : ret 0x89e9
0x000002000036d279 : ret 0x89f0
0x0000020000189c3d : ret 0x89f8
0x00000200003d8106 : ret 0x89ff
0x0000020000669a86 : ret 0x8a
0x000002000020d6bf : ret 0x8a04
0x0000020000248258 : ret 0x8a2
0x000002000004a738 : ret 0x8a40
0x0000020000091659 : ret 0x8a41
0x00000200005d0523 : ret 0x8a42
0x00000200005d081c : ret 0x8a43
0x0000020000067738 : ret 0x8a44
0x00000200003f14fb : ret 0x8a45
0x00000200005d066e : ret 0x8a46
0x00000200000260dc : ret 0x8a8b
0x0000020000022842 : ret 0x8a9b
0x0000020000392c58 : ret 0x8aa3
0x0000020000095de9 : ret 0x8ac3
0x0000020000238c83 : ret 0x8b02
0x0000020000120fa8 : ret 0x8b08
0x00000200006d082b : ret 0x8b0d
0x000002000021e16c : ret 0x8b10
0x00000200000872d7 : ret 0x8b18
0x000002000011bc8c : ret 0x8b20
0x000002000048a90e : ret 0x8b38
0x000002000018e948 : ret 0x8b41
0x00000200000f9f41 : ret 0x8b42
0x00000200001d114c : ret 0x8b44
0x0000020000053aac : ret 0x8b45
0x0000020000027691 : ret 0x8b48
0x000002000002a0ce : ret 0x8b49
0x0000020000058e6f : ret 0x8b4a
0x00000200006c5a5b : ret 0x8b4b
0x00000200000399f2 : ret 0x8b4c
0x0000020000052dfd : ret 0x8b4d
0x00000200001087c5 : ret 0x8b4e
0x000002000009e35e : ret 0x8b50
0x0000020000157ca5 : ret 0x8b66
0x0000020000220c5d : ret 0x8b9
0x000002000037724b : ret 0x8ba
0x0000020000054ec9 : ret 0x8bc3
0x0000020000088b7b : ret 0x8be9
0x0000020000405a8b : ret 0x8bff
0x000002000002ab54 : ret 0x8c
0x00000200005648c6 : ret 0x8c88
0x000002000022afae : ret 0x8ce9
0x0000020000224077 : ret 0x8cff
0x00000200005008c1 : ret 0x8d08
0x00000200000202e9 : ret 0x8d0a
0x000002000003c9d6 : ret 0x8d0f
0x00000200004a9886 : ret 0x8d10
0x0000020000114575 : ret 0x8d41
0x000002000047c90a : ret 0x8d42
0x00000200005b1653 : ret 0x8d43
0x0000020000076121 : ret 0x8d44
0x000002000006236e : ret 0x8d45
0x00000200005b24e0 : ret 0x8d47
0x0000020000036c75 : ret 0x8d48
0x000002000003a930 : ret 0x8d49
0x0000020000085add : ret 0x8d4a
0x0000020000036f7e : ret 0x8d4b
0x000002000002eeb1 : ret 0x8d4c
0x00000200000b1248 : ret 0x8d4d
0x000002000008e71a : ret 0x8d4e
0x000002000009bcf1 : ret 0x8d4f
0x00000200006e9322 : ret 0x8d8b
0x00000200006757db : ret 0x8dff
0x0000020000149d30 : ret 0x8e0f
0x00000200001ad02d : ret 0x8e9
0x0000020000227104 : ret 0x8eb
0x00000200000f9a4c : ret 0x8ee9
0x000002000048b75b : ret 0x8eeb
0x00000200001a9238 : ret 0x8fe9
0x00000200000914fe : ret 0x8feb
0x0000020000728403 : ret 0x8ff
0x00000200003afa11 : ret 0x90
0x00000200000b211a : ret 0x90e8
0x0000020000147842 : ret 0x90e9
0x0000020000230751 : ret 0x90f3
0x000002000043b97c : ret 0x90ff
0x000002000011b12a : ret 0x910
0x000002000040ee01 : ret 0x9175
0x0000020000057e30 : ret 0x9177
0x00000200001115b8 : ret 0x918b
0x000002000009ea51 : ret 0x91ba
0x00000200005e23f3 : ret 0x920f
0x00000200001039e0 : ret 0x9274
0x000002000038adea : ret 0x928b
0x0000020000119068 : ret 0x929
0x00000200004bd272 : ret 0x930f
0x00000200006066dc : ret 0x933b
0x00000200000149e2 : ret 0x938d
0x000002000019fb8e : ret 0x939
0x000002000055a23b : ret 0x93e9
0x00000200004f70a3 : ret 0x93eb
0x0000020000021da2 : ret 0x94
0x00000200005e2409 : ret 0x940f
0x000002000014c9ba : ret 0x9475
0x00000200000cdafb : ret 0x9489
0x00000200003d7290 : ret 0x948b
0x00000200000605a2 : ret 0x94c
0x000002000013a193 : ret 0x94d
0x00000200000e8ad2 : ret 0x94e8
0x000002000072a8ee : ret 0x94e9
0x0000020000473306 : ret 0x95
0x0000020000053af6 : ret 0x950f
0x0000020000401f9a : ret 0x95b8
0x0000020000711c5a : ret 0x95e1
0x00000200003cb8e4 : ret 0x95eb
0x00000200004d4fa3 : ret 0x960f
0x000002000002a92d : ret 0x968
0x00000200001152bf : ret 0x9680
0x00000200006c8a55 : ret 0x96ff
0x00000200005e23e8 : ret 0x970f
0x00000200001131ac : ret 0x971
0x00000200000cefda : ret 0x972
0x0000020000112206 : ret 0x973
0x00000200001a9230 : ret 0x973b
0x00000200000b4014 : ret 0x974
0x000002000009c4d3 : ret 0x975
0x00000200001ff610 : ret 0x977
0x0000020000601a00 : ret 0x97e9
0x00000200001118c8 : ret 0x984
0x000002000051b616 : ret 0x985
0x0000020000714c9a : ret 0x98cc
0x000002000056ca22 : ret 0x98e8
0x000002000009810c : ret 0x98e9
0x00000200007071c6 : ret 0x9931
0x0000020000132e80 : ret 0x9948
0x00000200006f10f2 : ret 0x9958
0x00000200001d86ea : ret 0x9972
0x0000020000714d2a : ret 0x99b3
0x00000200001f320d : ret 0x99ba
0x0000020000384cfd : ret 0x99e8
0x00000200005a8aac : ret 0x99e9
0x000002000071f4f4 : ret 0x9a
0x00000200000cdfb6 : ret 0x9a77
0x00000200006900d6 : ret 0x9a92
0x000002000070b65e : ret 0x9aa6
0x00000200001f31c1 : ret 0x9aba
0x000002000068d5d6 : ret 0x9abd
0x000002000000d0f1 : ret 0x9b64
0x0000020000201766 : ret 0x9b72
0x00000200005171da : ret 0x9ba
0x0000020000516b70 : ret 0x9be
0x000002000002a805 : ret 0x9beb
0x0000020000516a56 : ret 0x9bf
0x00000200004466ee : ret 0x9c77
0x0000020000007117 : ret 0x9ca6
0x0000020000514561 : ret 0x9cd
0x0000020000379852 : ret 0x9ce8
0x000002000061791f : ret 0x9ce9
0x00000200001971a9 : ret 0x9ceb
0x0000020000512508 : ret 0x9d6
0x0000020000614166 : ret 0x9d74
0x00000200001f745a : ret 0x9d9
0x00000200004fe5cd : ret 0x9de8
0x0000020000133d99 : ret 0x9de9
0x000002000000a620 : ret 0x9e
0x000002000000f421 : ret 0x9e53
0x00000200001d9221 : ret 0x9e8
0x00000200006cdd5a : ret 0x9e89
0x000002000037e03c : ret 0x9eb
0x000002000063aff6 : ret 0x9ecb
0x0000020000033239 : ret 0x9ee9
0x00000200000d568a : ret 0x9eeb
0x00000200006cec5d : ret 0x9f39
0x000002000001e049 : ret 0x9f95
0x00000200000f623b : ret 0x9fe9
0x0000020000105e83 : ret 0x9feb
0x000002000043b6a6 : ret 0x9ff
0x00000200000caff3 : ret 0xa
0x00000200006f7af5 : ret 0xa0
0x000002000022f751 : ret 0xa00
0x00000200001057a6 : ret 0xa02
0x000002000050e388 : ret 0xa08
0x000002000043f6b6 : ret 0xa0e8
0x000002000061f9ca : ret 0xa11a
0x00000200000e94c5 : ret 0xa174
0x000002000020429a : ret 0xa1c
0x0000020000421f7d : ret 0xa1e8
0x000002000007929a : ret 0xa1e9
0x000002000070f973 : ret 0xa2
0x000002000072d13a : ret 0xa20b
0x000002000060dfca : ret 0xa234
0x0000020000092914 : ret 0xa275
0x00000200001a14eb : ret 0xa277
0x00000200005df8fa : ret 0xa28f
0x000002000064615a : ret 0xa29c
0x00000200000101be : ret 0xa2be
0x00000200000268ec : ret 0xa2e8
0x00000200004fa6e2 : ret 0xa2e9
0x0000020000115b68 : ret 0xa348
0x000002000020273a : ret 0xa37
0x000002000071003a : ret 0xa3db
0x000002000056d81b : ret 0xa3e8
0x00000200000733ac : ret 0xa3e9
0x0000020000703aca : ret 0xa419
0x000002000040ff97 : ret 0xa473
0x00000200006234ea : ret 0xa4cd
0x00000200006fdf3a : ret 0xa4fc
0x000002000001d43e : ret 0xa54d
0x00000200005ddc6f : ret 0xa572
0x000002000060f40a : ret 0xa59b
0x0000020000702cfa : ret 0xa5ae
0x0000020000507b52 : ret 0xa5c
0x000002000010cb60 : ret 0xa5eb
0x000002000067998e : ret 0xa633
0x00000200006ed6aa : ret 0xa639
0x000002000064fade : ret 0xa652
0x0000020000014b06 : ret 0xa658
0x0000020000721978 : ret 0xa67c
0x00000200001e626c : ret 0xa6e8
0x00000200001dafc6 : ret 0xa73
0x000002000000e9e2 : ret 0xa734
0x00000200005d010e : ret 0xa73b
0x00000200000dc0b5 : ret 0xa74
0x000002000002b16a : ret 0xa75
0x00000200001448bc : ret 0xa76
0x00000200005ff7f2 : ret 0xa76d
0x00000200001e8295 : ret 0xa77
0x00000200003667e2 : ret 0xa774
0x00000200005f657a : ret 0xa7a2
0x00000200000b650a : ret 0xa7e
0x000002000056cb13 : ret 0xa7e8
0x000002000008dc9c : ret 0xa8
0x00000200004d9fdc : ret 0xa814
0x0000020000503dbe : ret 0xa84
0x0000020000014499 : ret 0xa852
0x0000020000578aca : ret 0xa8a6
0x000002000000f90e : ret 0xa8b3
0x0000020000630faa : ret 0xa8b7
0x0000020000627fdd : ret 0xa8ba
0x0000020000648220 : ret 0xa8c3
0x000002000002698e : ret 0xa8e8
0x0000020000446613 : ret 0xa8ff
0x000002000063bb36 : ret 0xa932
0x0000020000502321 : ret 0xa94
0x000002000005220c : ret 0xa948
0x00000200005d998a : ret 0xa966
0x000002000009003c : ret 0xa974
0x00000200005d6b5a : ret 0xa992
0x0000020000580b62 : ret 0xa9c8
0x00000200005cabda : ret 0xa9e4
0x00000200005ca8ea : ret 0xa9e8
0x00000200001967e9 : ret 0xa9e9
0x000002000068bb8e : ret 0xaa2e
0x000002000024d9a0 : ret 0xaa9
0x000002000058062e : ret 0xaabc
0x0000020000082f79 : ret 0xaae9
0x000002000038829c : ret 0xaaeb
0x000002000060a7aa : ret 0xab1f
0x00000200005854d6 : ret 0xab3f
0x000002000009b6ab : ret 0xab75
0x0000020000110cdf : ret 0xab8
0x00000200000a0d2d : ret 0xaba
0x0000020000572baa : ret 0xabe3
0x0000020000002f26 : ret 0xac44
0x000002000000d657 : ret 0xac4b
0x00000200000f3478 : ret 0xac8
0x00000200001a2992 : ret 0xace9
0x000002000059760a : ret 0xad19
0x0000020000584f3a : ret 0xad34
0x00000200000f2296 : ret 0xad40
0x000002000001171c : ret 0xad4d
0x0000020000106c60 : ret 0xad75
0x000002000024dc84 : ret 0xadc
0x0000020000439e0d : ret 0xade8
0x00000200000ebc5e : ret 0xadeb
0x000002000058c37a : ret 0xae44
0x000002000054ed06 : ret 0xae6b
0x000002000009a64a : ret 0xae7
0x0000020000024bda : ret 0xae72
0x0000020000102fee : ret 0xae76
0x000002000007afc6 : ret 0xae9
0x0000020000367dec : ret 0xaf0f
0x00000200005cc01a : ret 0xaf10
0x00000200000efada : ret 0xaf3
0x00000200003bb80b : ret 0xafe8
0x000002000008cb96 : ret 0xb
0x000002000064ab3a : ret 0xb030
0x000002000056edce : ret 0xb034
0x00000200005b3c92 : ret 0xb05a
0x00000200000ee213 : ret 0xb06
0x0000020000057f0c : ret 0xb073
0x00000200001e6392 : ret 0xb08b
0x00000200000110cd : ret 0xb08e
0x00000200004e9c6e : ret 0xb0a5
0x000002000036a819 : ret 0xb0bb
0x0000020000010753 : ret 0xb0be
0x00000200003787fb : ret 0xb0c3
0x0000020000020fe0 : ret 0xb0cc
0x0000020000609f4e : ret 0xb0eb
0x00000200000211ba : ret 0xb1
0x00000200000ebf61 : ret 0xb12
0x000002000046f64a : ret 0xb141
0x00000200000de122 : ret 0xb176
0x000002000063833a : ret 0xb17e
0x00000200006444fa : ret 0xb196
0x0000020000519e9e : ret 0xb19b
0x000002000017af6a : ret 0xb1f
0x00000200004f5ee8 : ret 0xb22
0x00000200004ac54b : ret 0xb272
0x000002000058f16a : ret 0xb2a1
0x000002000053b25e : ret 0xb2a4
0x0000020000472b92 : ret 0xb2c3
0x00000200000e0601 : ret 0xb2eb
0x000002000062affa : ret 0xb32b
0x00000200005328da : ret 0xb367
0x00000200004e3d6a : ret 0xb375
0x00000200004f729a : ret 0xb399
0x000002000000fae0 : ret 0xb3af
0x00000200000117ba : ret 0xb3cc
0x00000200004b624d : ret 0xb40
0x000002000003d7d5 : ret 0xb41
0x000002000054e9b2 : ret 0xb414
0x000002000054d9b2 : ret 0xb424
0x00000200000e7908 : ret 0xb43
0x000002000002e1ec : ret 0xb44
0x0000020000615eba : ret 0xb479
0x0000020000615cfa : ret 0xb47e
0x0000020000026272 : ret 0xb48
0x00000200000f7f7a : ret 0xb49
0x000002000007bf75 : ret 0xb4c
0x00000200003d6928 : ret 0xb4d
0x00000200000c50b9 : ret 0xb4eb
0x0000020000150fba : ret 0xb5
0x00000200004e389e : ret 0xb501
0x0000020000688cc6 : ret 0xb504
0x00000200006885c6 : ret 0xb50b
0x00000200005674fe : ret 0xb551
0x00000200006046ba : ret 0xb591
0x00000200004fc239 : ret 0xb5e8
0x0000020000721639 : ret 0xb5e9
0x00000200001d5f37 : ret 0xb5eb
0x0000020000150eba : ret 0xb6
0x00000200005eda3a : ret 0xb601
0x00000200005fccba : ret 0xb60b
0x0000020000025fc1 : ret 0xb60f
0x00000200002022d0 : ret 0xb640
0x000002000043d313 : ret 0xb66
0x00000200001b746d : ret 0xb673
0x00000200005ad514 : ret 0xb6e9
0x000002000040404e : ret 0xb6eb
0x0000020000150dba : ret 0xb7
0x00000200000d03e6 : ret 0xb70f
0x0000020000512794 : ret 0xb73
0x000002000000e3be : ret 0xb73c
0x0000020000041abb : ret 0xb74
0x00000200001b2ba4 : ret 0xb75
0x00000200001ffdc8 : ret 0xb77
0x00000200005cb96b : ret 0xb775
0x000002000068e7d6 : ret 0xb777
0x0000020000544daa : ret 0xb779
0x000002000000f602 : ret 0xb77e
0x00000200005cc64a : ret 0xb7c7
0x00000200005cbb4a : ret 0xb7d2
0x000002000008692c : ret 0xb7e9
0x000002000007ac86 : ret 0xb8
0x00000200003849ab : ret 0xb802
0x0000020000123f7a : ret 0xb807
0x00000200003fd92d : ret 0xb80b
0x000002000005ab20 : ret 0xb841
0x0000020000033e48 : ret 0xb848
0x000002000006310c : ret 0xb849
0x000002000001105d : ret 0xb87
0x00000200005c465a : ret 0xb89f
0x00000200005b1b2a : ret 0xb8b5
0x000002000053151a : ret 0xb8bb
0x00000200000355dd : ret 0xb8c3
0x00000200004a2d9a : ret 0xb8de
0x0000020000374522 : ret 0xb8e8
0x00000200001b32ac : ret 0xb8eb
0x000002000043a698 : ret 0xb8ff
0x0000020000086197 : ret 0xb9
0x000002000048114f : ret 0xb902
0x0000020000143306 : ret 0xb908
0x00000200001ce4e0 : ret 0xb910
0x0000020000716839 : ret 0xb918
0x00000200006790aa : ret 0xb920
0x0000020000503847 : ret 0xb928
0x000002000070d1cc : ret 0xb930
0x000002000005a735 : ret 0xb941
0x000002000003717e : ret 0xb948
0x000002000005d4c0 : ret 0xb949
0x00000200004ea855 : ret 0xb95
0x0000020000718c6a : ret 0xb96c
0x00000200005930ab : ret 0xb972
0x0000020000716a6a : ret 0xb97e
0x00000200000220f8 : ret 0xb9b4
0x000002000003da58 : ret 0xb9c3
0x00000200005c0cba : ret 0xb9cb
0x00000200000227c6 : ret 0xb9d8
0x0000020000491c6d : ret 0xb9f4
0x000002000044d447 : ret 0xb9ff
0x000002000013a989 : ret 0xba
0x00000200003652b7 : ret 0xba00
0x000002000018807c : ret 0xba01
0x00000200005a0baa : ret 0xba05
0x000002000002d2a8 : ret 0xba0f
0x0000020000471e8a : ret 0xba24
0x0000020000077839 : ret 0xba41
0x000002000002e3f3 : ret 0xba48
0x0000020000032c32 : ret 0xba49
0x0000020000701622 : ret 0xba62
0x0000020000594937 : ret 0xba72
0x0000020000106484 : ret 0xbac3
0x00000200004a93dd : ret 0xbaeb
0x00000200005aeafa : ret 0xbaf0
0x00000200003ef949 : ret 0xbaff
0x00000200001509ba : ret 0xbb
0x0000020000022a72 : ret 0xbb02
0x0000020000686c96 : ret 0xbb1d
0x000002000020b6e9 : ret 0xbb41
0x00000200000880a0 : ret 0xbb48
0x00000200006f9250 : ret 0xbb49
0x00000200000115c6 : ret 0xbb54
0x00000200000a21ba : ret 0xbb6
0x00000200006f057a : ret 0xbb67
0x00000200004b8fea : ret 0xbb72
0x000002000010950d : ret 0xbb83
0x0000020000585baa : ret 0xbbb5
0x00000200006f18b2 : ret 0xbbe6
0x00000200005f492f : ret 0xbbe8
0x000002000072098a : ret 0xbbf0
0x00000200004ae05a : ret 0xbbff
0x00000200001508ba : ret 0xbc
0x000002000008199e : ret 0xbc0f
0x00000200006668de : ret 0xbc46
0x00000200006ddb55 : ret 0xbc49
0x00000200006408d4 : ret 0xbc72
0x0000020000103fd9 : ret 0xbc74
0x00000200004a080a : ret 0xbc87
0x0000020000072f5d : ret 0xbc89
0x000002000020231b : ret 0xbc8b
0x000002000002a7e4 : ret 0xbceb
0x00000200001507ba : ret 0xbd
0x00000200000e9479 : ret 0xbd04
0x00000200006fab07 : ret 0xbd0f
0x000002000057cafa : ret 0xbd1d
0x00000200000bdb69 : ret 0xbd41
0x00000200001876a7 : ret 0xbd48
0x000002000049a95a : ret 0xbd54
0x000002000060ac0b : ret 0xbd75
0x00000200006e7f21 : ret 0xbd83
0x000002000001072a : ret 0xbd97
0x00000200006f5b5a : ret 0xbda5
0x0000020000130051 : ret 0xbdeb
0x00000200001506ba : ret 0xbe
0x0000020000489e4a : ret 0xbe07
0x00000200000f681b : ret 0xbe41
0x000002000056cdda : ret 0xbe42
0x0000020000014a4e : ret 0xbe48
0x0000020000174435 : ret 0xbe49
0x000002000000ff93 : ret 0xbe64
0x000002000043710b : ret 0xbe76
0x000002000066e72f : ret 0xbe8
0x000002000000f795 : ret 0xbe8d
0x0000020000440d06 : ret 0xbea7
0x000002000047ef4a : ret 0xbeb6
0x000002000004d480 : ret 0xbee9
0x00000200001505ba : ret 0xbf
0x000002000048ffba : ret 0xbf0f
0x0000020000106802 : ret 0xbf41
0x00000200001579a2 : ret 0xbf48
0x0000020000062345 : ret 0xbf49
0x00000200004b6b8a : ret 0xbf72
0x0000020000141899 : ret 0xbf75
0x00000200004e199b : ret 0xbfa
0x00000200000f65c3 : ret 0xbfe9
0x00000200003ac914 : ret 0xbfeb
0x000002000067fd05 : ret 0xbfff
0x00000200000c8b34 : ret 0xc
0x00000200001504ba : ret 0xc0
0x000002000006226a : ret 0xc00
0x000002000056b07d : ret 0xc000
0x00000200003f2e35 : ret 0xc002
0x000002000053e173 : ret 0xc003
0x00000200000a64e9 : ret 0xc01b
0x0000020000619272 : ret 0xc024
0x00000200005b24a9 : ret 0xc025
0x00000200005d055f : ret 0xc032
0x00000200001421d6 : ret 0xc033
0x000002000062ead2 : ret 0xc042
0x000002000042ac27 : ret 0xc069
0x000002000013f3b2 : ret 0xc083
0x00000200000b0197 : ret 0xc084
0x00000200000f580d : ret 0xc085
0x000002000036f4a2 : ret 0xc0a3
0x0000020000114684 : ret 0xc0a8
0x000002000000e38b : ret 0xc0bf
0x00000200004a69de : ret 0xc0e3
0x000002000037982e : ret 0xc0e8
0x000002000068e51e : ret 0xc0fa
0x00000200000b312d : ret 0xc0ff
0x00000200001503ba : ret 0xc1
0x0000020000073642 : ret 0xc103
0x00000200003a9bc0 : ret 0xc10b
0x000002000004f812 : ret 0xc123
0x0000020000073572 : ret 0xc12b
0x00000200004bd050 : ret 0xc132
0x000002000007bf8e : ret 0xc133
0x0000020000073834 : ret 0xc13b
0x00000200000a4143 : ret 0xc141
0x0000020000110f8d : ret 0xc148
0x0000020000038ff5 : ret 0xc149
0x00000200001894c7 : ret 0xc166
0x00000200004cc951 : ret 0xc175
0x00000200000d7544 : ret 0xc18
0x0000020000226cc1 : ret 0xc183
0x000002000068d612 : ret 0xc18d
0x000002000068cc46 : ret 0xc197
0x000002000068d3ea : ret 0xc199
0x000002000068c73a : ret 0xc1a5
0x00000200004140aa : ret 0xc1ce
0x00000200001c525a : ret 0xc1f6
0x000002000003547b : ret 0xc1ff
0x00000200001502ba : ret 0xc2
0x00000200000a8bdb : ret 0xc20b
0x00000200001543a0 : ret 0xc223
0x000002000003385d : ret 0xc22b
0x00000200000917b2 : ret 0xc232
0x000002000010b21f : ret 0xc23b
0x000002000067e6ae : ret 0xc243
0x00000200004029da : ret 0xc285
0x0000020000099ed5 : ret 0xc28b
0x00000200004dbf36 : ret 0xc2b
0x00000200004719a2 : ret 0xc2ba
0x000002000000fc89 : ret 0xc2c7
0x00000200000aa8ba : ret 0xc2eb
0x000002000010ac56 : ret 0xc2f6
0x00000200000845f3 : ret 0xc2ff
0x00000200001501ba : ret 0xc3
0x0000020000012554 : ret 0xc302
0x0000020000439b4a : ret 0xc30a
0x00000200001d2111 : ret 0xc30b
0x000002000001309c : ret 0xc313
0x0000020000661d3a : ret 0xc322
0x0000020000707a3e : ret 0xc32a
0x0000020000215fd1 : ret 0xc32b
0x0000020000157df1 : ret 0xc35b
0x0000020000157993 : ret 0xc35f
0x0000020000613ff5 : ret 0xc383
0x0000020000441cfe : ret 0xc384
0x00000200004ac61a : ret 0xc38b
0x000002000072c4b3 : ret 0xc39
0x0000020000668ee9 : ret 0xc3ba
0x00000200004da56b : ret 0xc3c
0x00000200000960c2 : ret 0xc3eb
0x00000200000d4573 : ret 0xc3f
0x00000200001500ba : ret 0xc4
0x0000020000012f6e : ret 0xc406
0x0000020000507a9a : ret 0xc461
0x00000200004227da : ret 0xc468
0x00000200005b5cfa : ret 0xc472
0x000002000067af58 : ret 0xc4b9
0x0000020000002842 : ret 0xc4c3
0x00000200007252d6 : ret 0xc4e8
0x000002000014ffba : ret 0xc5
0x00000200004a8f67 : ret 0xc503
0x00000200000e4e8e : ret 0xc53b
0x0000020000435f9a : ret 0xc541
0x00000200006564cb : ret 0xc556
0x00000200006fb044 : ret 0xc55f
0x00000200004a97b6 : ret 0xc563
0x00000200003de506 : ret 0xc573
0x000002000003a02d : ret 0xc574
0x000002000013fe22 : ret 0xc575
0x00000200006f964a : ret 0xc579
0x00000200006f8316 : ret 0xc58f
0x00000200006f255e : ret 0xc5f2
0x000002000014feba : ret 0xc6
0x00000200005f0a0e : ret 0xc603
0x000002000020caa0 : ret 0xc60f
0x000002000063fdd2 : ret 0xc624
0x00000200001a5eb2 : ret 0xc63b
0x000002000000fd9a : ret 0xc640
0x00000200004d9d12 : ret 0xc649
0x0000020000434be6 : ret 0xc686
0x00000200003c124e : ret 0xc687
0x000002000008e441 : ret 0xc68b
0x00000200004df64a : ret 0xc697
0x000002000047c842 : ret 0xc6aa
0x00000200006344d2 : ret 0xc6dd
0x00000200006390e9 : ret 0xc6e8
0x00000200000f7503 : ret 0xc6e9
0x000002000063780e : ret 0xc6ff
0x000002000014fdba : ret 0xc7
0x000002000021b189 : ret 0xc704
0x0000020000142e04 : ret 0xc708
0x00000200001cd759 : ret 0xc70b
0x00000200004d4f40 : ret 0xc72
0x0000020000709d64 : ret 0xc720
0x000002000062fbd2 : ret 0xc726
0x0000020000148ef7 : ret 0xc73
0x0000020000029084 : ret 0xc73b
0x000002000022d8a4 : ret 0xc74
0x000002000040ec7c : ret 0xc741
0x0000020000058245 : ret 0xc748
0x0000020000074ad2 : ret 0xc749
0x000002000061f43a : ret 0xc74b
0x000002000065ad3a : ret 0xc74f
0x00000200004bf440 : ret 0xc75
0x000002000021a681 : ret 0xc76
0x000002000062c0d2 : ret 0xc761
0x000002000065af62 : ret 0xc767
0x00000200003f231a : ret 0xc76d
0x00000200004e6bfa : ret 0xc76f
0x00000200001a10e2 : ret 0xc77
0x00000200004b6c31 : ret 0xc772
0x00000200003b3e8e : ret 0xc773
0x0000020000392239 : ret 0xc78b
0x00000200004d448c : ret 0xc7b
0x00000200004cc44a : ret 0xc7c9
0x00000200006ec161 : ret 0xc7cb
0x000002000021a621 : ret 0xc7e
0x00000200001a3b2a : ret 0xc7e9
0x00000200001060a8 : ret 0xc7f
0x000002000003ca71 : ret 0xc7ff
0x000002000014fcba : ret 0xc8
0x00000200001b60ed : ret 0xc803
0x000002000005228a : ret 0xc80b
0x000002000000e7d1 : ret 0xc81d
0x0000020000054871 : ret 0xc823
0x000002000062158a : ret 0xc826
0x000002000002dfa3 : ret 0xc82b
0x0000020000106d4f : ret 0xc833
0x00000200001f09bd : ret 0xc83a
0x00000200001c19d4 : ret 0xc83b
0x00000200000cdf16 : ret 0xc85
0x00000200006278ae : ret 0xc85d
0x0000020000397944 : ret 0xc869
0x0000020000555c30 : ret 0xc883
0x0000020000445436 : ret 0xc88a
0x0000020000078934 : ret 0xc88b
0x00000200005ae812 : ret 0xc8b
0x00000200004abdf3 : ret 0xc8ba
0x00000200003b3de8 : ret 0xc8d
0x000002000011c851 : ret 0xc8ff
0x000002000014fbba : ret 0xc9
0x000002000020ce87 : ret 0xc903
0x000002000039f4ca : ret 0xc91f
0x000002000039e6aa : ret 0xc928
0x000002000042a51a : ret 0xc92b
0x000002000039e7ca : ret 0xc92c
0x0000020000037a09 : ret 0xc933
0x000002000065a9f2 : ret 0xc938
0x00000200001023e9 : ret 0xc972
0x00000200003d8eea : ret 0xc973
0x00000200003aba18 : ret 0xc980
0x0000020000612ac4 : ret 0xc983
0x00000200000e47ac : ret 0xc984
0x00000200000b20e8 : ret 0xc985
0x00000200003d1f4a : ret 0xc986
0x000002000070858e : ret 0xc9ae
0x00000200003e524e : ret 0xc9cf
0x00000200005b2420 : ret 0xc9e9
0x00000200003ee3bd : ret 0xc9eb
0x00000200001579ff : ret 0xc9ff
0x000002000014faba : ret 0xca
0x000002000036f6b7 : ret 0xca03
0x00000200004e9c90 : ret 0xca07
0x00000200003911b6 : ret 0xca23
0x00000200004ce36b : ret 0xca2b
0x000002000003c470 : ret 0xca3b
0x00000200004a444a : ret 0xca49
0x00000200006e4654 : ret 0xca6b
0x00000200003b5bba : ret 0xca6f
0x00000200005bfdd0 : ret 0xca72
0x000002000046ecad : ret 0xca74
0x000002000057f92c : ret 0xca83
0x00000200000827d1 : ret 0xca8a
0x00000200000353ff : ret 0xca8b
0x000002000040d22e : ret 0xca90
0x000002000000d1b5 : ret 0xcaba
0x00000200003dffca : ret 0xcafe
0x00000200004a728a : ret 0xcaff
0x000002000014f9ba : ret 0xcb
0x00000200005f34ba : ret 0xcb1f
0x00000200003ddab2 : ret 0xcb23
0x00000200005e153a : ret 0xcb2a
0x00000200003b330a : ret 0xcb5c
0x000002000056fda1 : ret 0xcb75
0x000002000010018e : ret 0xcb83
0x000002000007d7f2 : ret 0xcb8b
0x00000200003ae09a : ret 0xcbab
0x00000200005fa3da : ret 0xcbb6
0x00000200006732f6 : ret 0xcbe9
0x0000020000598d91 : ret 0xcbeb
0x00000200006cd9bb : ret 0xcbff
0x000002000014f8ba : ret 0xcc
0x00000200004ceca7 : ret 0xcc0
0x00000200003e2e1a : ret 0xcc24
0x00000200005de4d2 : ret 0xcc3d
0x000002000048595d : ret 0xcc72
0x00000200001b7457 : ret 0xcc73
0x00000200004962fa : ret 0xcc78
0x000002000039e20a : ret 0xccad
0x000002000000f6d7 : ret 0xccb
0x000002000008e4eb : ret 0xccc3
0x00000200000930ad : ret 0xcccc
0x000002000000e241 : ret 0xcce4
0x000002000063bc15 : ret 0xcceb
0x0000020000402d6c : ret 0xccff
0x000002000014f7ba : ret 0xcd
0x00000200005777ea : ret 0xcd85
0x00000200001dc81a : ret 0xcd8b
0x000002000067694a : ret 0xcda6
0x000002000038ce0a : ret 0xcdc1
0x0000020000493cc8 : ret 0xcdeb
0x0000020000011aa4 : ret 0xcdf4
0x000002000014f6ba : ret 0xce
0x000002000057811f : ret 0xce03
0x00000200005c04d2 : ret 0xce1d
0x000002000046a43a : ret 0xce37
0x00000200005b68f0 : ret 0xce3b
0x00000200003d01b2 : ret 0xce4d
0x00000200004cb9e8 : ret 0xce6
0x00000200001f94db : ret 0xce8b
0x00000200005e7612 : ret 0xcea3
0x0000020000672c10 : ret 0xceb
0x00000200005e4a7a : ret 0xcecf
0x00000200004ae548 : ret 0xceeb
0x000002000014f5ba : ret 0xcf
0x00000200000635b5 : ret 0xcf2b
0x00000200003ca31a : ret 0xcf2d
0x000002000000d0e3 : ret 0xcf31
0x00000200006194e0 : ret 0xcf3b
0x000002000037a75a : ret 0xcf56
0x00000200006113a4 : ret 0xcf72
0x000002000013ec8b : ret 0xcf73
0x0000020000442ff6 : ret 0xcf75
0x00000200004cc9aa : ret 0xcf83
0x00000200000fe528 : ret 0xcf85
0x0000020000595e3a : ret 0xcfe1
0x00000200006d053f : ret 0xcfe8
0x000002000000da35 : ret 0xcff5
0x00000200000b137e : ret 0xd
0x000002000014f4ba : ret 0xd0
0x0000020000594b5a : ret 0xd002
0x0000020000205334 : ret 0xd003
0x000002000023c919 : ret 0xd009
0x000002000059323a : ret 0xd00d
0x000002000009260b : ret 0xd02b
0x0000020000133094 : ret 0xd03b
0x00000200001897cc : ret 0xd075
0x0000020000132d25 : ret 0xd07c
0x000002000009555a : ret 0xd08a
0x000002000002c804 : ret 0xd08b
0x000002000059db3a : ret 0xd09e
0x00000200005caae2 : ret 0xd0af
0x00000200000c2292 : ret 0xd0b
0x00000200006d045c : ret 0xd0ba
0x00000200003ab74d : ret 0xd0f6
0x000002000002e051 : ret 0xd0f7
0x000002000014f3ba : ret 0xd1
0x000002000058385a : ret 0xd115
0x00000200004d5ffa : ret 0xd12b
0x00000200005a2bca : ret 0xd134
0x00000200005925dc : ret 0xd13a
0x000002000007fab0 : ret 0xd148
0x000002000008fc8a : ret 0xd149
0x00000200005bf8da : ret 0xd164
0x000002000020abb0 : ret 0xd166
0x00000200003a1d4a : ret 0xd169
0x000002000002ab7d : ret 0xd172
0x00000200000ff585 : ret 0xd18b
0x00000200001a69d0 : ret 0xd1e9
0x00000200003ac8f5 : ret 0xd1eb
0x000002000057575a : ret 0xd1f6
0x000002000002d388 : ret 0xd1f7
0x000002000014f2ba : ret 0xd2
0x00000200006f53d1 : ret 0xd232
0x000002000002c3e6 : ret 0xd233
0x00000200001a7a28 : ret 0xd241
0x000002000064ddbd : ret 0xd272
0x0000020000404d74 : ret 0xd273
0x0000020000166233 : ret 0xd275
0x00000200006040f7 : ret 0xd27c
0x0000020000394191 : ret 0xd284
0x0000020000033bdb : ret 0xd285
0x00000200002593b4 : ret 0xd2d
0x0000020000635920 : ret 0xd2e8
0x000002000051b3bc : ret 0xd2f6
0x0000020000483e42 : ret 0xd2f7
0x000002000014f1ba : ret 0xd3
0x00000200000b3d21 : ret 0xd300
0x000002000041ca3a : ret 0xd311
0x0000020000376c5a : ret 0xd31a
0x000002000040e3b2 : ret 0xd322
0x0000020000492518 : ret 0xd323
0x000002000009261d : ret 0xd33b
0x000002000021887f : ret 0xd341
0x000002000004658f : ret 0xd348
0x0000020000035d3a : ret 0xd349
0x0000020000653e55 : ret 0xd366
0x00000200004f997d : ret 0xd374
0x0000020000172bbd : ret 0xd379
0x0000020000060077 : ret 0xd38b
0x00000200004c2c12 : ret 0xd3e
0x000002000011e3e8 : ret 0xd3e9
0x00000200006f6c58 : ret 0xd3eb
0x00000200000be0bc : ret 0xd3f
0x000002000014f0ba : ret 0xd4
0x00000200001cded2 : ret 0xd43
0x000002000054f53a : ret 0xd44a
0x000002000057af84 : ret 0xd472
0x00000200005996d2 : ret 0xd47f
0x00000200000a2aff : ret 0xd48
0x000002000048422e : ret 0xd4e8
0x000002000070acc6 : ret 0xd4eb
0x000002000000f49d : ret 0xd4f
0x000002000014efba : ret 0xd5
0x00000200005fff42 : ret 0xd510
0x000002000059066d : ret 0xd523
0x000002000000d48b : ret 0xd54e
0x000002000050a185 : ret 0xd572
0x00000200001a05f8 : ret 0xd575
0x00000200001a70e2 : ret 0xd576
0x00000200006531bc : ret 0xd57c
0x0000020000577798 : ret 0xd585
0x00000200000a274b : ret 0xd58b
0x00000200005f86b2 : ret 0xd591
0x000002000048630c : ret 0xd5eb
0x000002000014eeba : ret 0xd6
0x00000200000baaa3 : ret 0xd60
0x00000200001a0129 : ret 0xd62b
0x00000200004beaf1 : ret 0xd65
0x00000200000ba172 : ret 0xd67
0x00000200000eacbb : ret 0xd68b
0x000002000059ac76 : ret 0xd6b2
0x000002000029403a : ret 0xd6cf
0x0000020000567d1a : ret 0xd6e5
0x00000200003e84aa : ret 0xd6fe
0x000002000014edba : ret 0xd7
0x000002000022f012 : ret 0xd70
0x000002000046ba12 : ret 0xd703
0x000002000007d597 : ret 0xd72
0x00000200001475c1 : ret 0xd73b
0x00000200000d0bbd : ret 0xd74
0x0000020000639ac2 : ret 0xd742
0x00000200000412aa : ret 0xd75
0x000002000007fc1b : ret 0xd76
0x000002000006ac3a : ret 0xd77
0x0000020000089e36 : ret 0xd775
0x0000020000653224 : ret 0xd77c
0x00000200003e5dfa : ret 0xd77d
0x0000020000127992 : ret 0xd78b
0x000002000000763f : ret 0xd791
0x00000200003e40ba : ret 0xd797
0x00000200000802a8 : ret 0xd7c8
0x0000020000116ffe : ret 0xd7e9
0x000002000002961e : ret 0xd7eb
0x0000020000045cd7 : ret 0xd8
0x000002000002861b : ret 0xd80
0x000002000005a5cb : ret 0xd83b
0x0000020000080df8 : ret 0xd878
0x00000200000f89fd : ret 0xd88a
0x00000200002946d3 : ret 0xd88b
0x000002000066662d : ret 0xd89
0x000002000050623a : ret 0xd8dd
0x00000200001989c0 : ret 0xd8f0
0x000002000013c4d5 : ret 0xd8f6
0x000002000014430c : ret 0xd8f7
0x000002000014ebba : ret 0xd9
0x0000020000080db4 : ret 0xd928
0x0000020000517b5a : ret 0xd931
0x0000020000708cd6 : ret 0xd933
0x00000200003c324a : ret 0xd94a
0x0000020000072315 : ret 0xd973
0x00000200004fa6c9 : ret 0xd975
0x00000200000110bd : ret 0xd989
0x00000200001cb658 : ret 0xd98b
0x000002000029659a : ret 0xd998
0x00000200000b4e83 : ret 0xd9e
0x00000200000b4d4e : ret 0xd9f
0x00000200005030d2 : ret 0xd9f1
0x00000200005d3c8c : ret 0xd9f7
0x000002000014eaba : ret 0xda
0x000002000050a4c2 : ret 0xda09
0x00000200005af77a : ret 0xda18
0x000002000037ed15 : ret 0xda75
0x000002000000e7c4 : ret 0xda8
0x00000200004eb63a : ret 0xda89
0x000002000020883d : ret 0xda8b
0x00000200001f5b42 : ret 0xdab9
0x0000020000674859 : ret 0xdaba
0x00000200003793fe : ret 0xdabb
0x0000020000655948 : ret 0xdadf
0x00000200000312e7 : ret 0xdae9
0x000002000014e9ba : ret 0xdb
0x0000020000110902 : ret 0xdb33
0x00000200000b21be : ret 0xdb6
0x00000200005d9916 : ret 0xdb73
0x000002000051ea2a : ret 0xdb75
0x00000200004bc25c : ret 0xdb8
0x0000020000511582 : ret 0xdb83
0x00000200000287de : ret 0xdb84
0x00000200001181ab : ret 0xdb85
0x00000200000b4907 : ret 0xdb9
0x0000020000508494 : ret 0xdba
0x00000200004be6e7 : ret 0xdbb
0x0000020000223d57 : ret 0xdbe9
0x0000020000120c3c : ret 0xdbeb
0x000002000014e8ba : ret 0xdc
0x00000200006190b7 : ret 0xdc00
0x000002000039d0ba : ret 0xdc07
0x000002000063419b : ret 0xdc72
0x00000200001fb221 : ret 0xdc75
0x00000200005865fa : ret 0xdcaf
0x000002000025ba0c : ret 0xdcd
0x0000020000582952 : ret 0xdce6
0x00000200004088f2 : ret 0xdce9
0x00000200004c4c3a : ret 0xdcf3
0x000002000001f852 : ret 0xdd
0x00000200004d05d2 : ret 0xdd1c
0x00000200004b52f4 : ret 0xdd6
0x0000020000213f19 : ret 0xdd75
0x00000200004cb582 : ret 0xdda9
0x00000200000c15da : ret 0xdde9
0x00000200001449a5 : ret 0xddeb
0x000002000014e6ba : ret 0xde
0x00000200006d967c : ret 0xde03
0x00000200004c7642 : ret 0xde6d
0x000002000037f838 : ret 0xde72
0x00000200002059c0 : ret 0xde75
0x0000020000192bf9 : ret 0xde9
0x000002000037467a : ret 0xde9b
0x00000200004eaf1a : ret 0xdeb3
0x00000200000e3f70 : ret 0xdeeb
0x000002000014e5ba : ret 0xdf
0x00000200001c3462 : ret 0xdf25
0x0000020000020960 : ret 0xdf27
0x00000200001c189e : ret 0xdf3
0x000002000020a0d5 : ret 0xdf7f
0x000002000014a23d : ret 0xdf8b
0x00000200004da76a : ret 0xdf91
0x000002000022594a : ret 0xdfdd
0x000002000051bbd7 : ret 0xdfe8
0x00000200004fb8c5 : ret 0xdfeb
0x00000200004d3b3a : ret 0xdffd
0x000002000019531e : ret 0xdfff
0x0000020000067c40 : ret 0xe
0x000002000014e4ba : ret 0xe0
0x000002000007bafc : ret 0xe025
0x0000020000206cba : ret 0xe059
0x0000020000237169 : ret 0xe07c
0x0000020000168506 : ret 0xe083
0x0000020000083bdc : ret 0xe0c1
0x0000020000064b96 : ret 0xe0d3
0x0000020000065b25 : ret 0xe0ff
0x000002000014e3ba : ret 0xe1
0x00000200006e5d5e : ret 0xe10
0x0000020000148f55 : ret 0xe100
0x0000020000295f76 : ret 0xe12f
0x00000200005dfa92 : ret 0xe13f
0x00000200004c0782 : ret 0xe153
0x000002000014be0d : ret 0xe175
0x00000200003aba64 : ret 0xe180
0x00000200000f92d3 : ret 0xe181
0x0000020000055a9d : ret 0xe183
0x00000200005ea2e6 : ret 0xe192
0x000002000020411a : ret 0xe199
0x00000200000b4ff1 : ret 0xe1c1
0x00000200000a9289 : ret 0xe1d
0x000002000014e2ba : ret 0xe2
0x0000020000474a7a : ret 0xe22b
0x00000200004a8e0d : ret 0xe272
0x000002000009fe5f : ret 0xe275
0x000002000009de88 : ret 0xe279
0x000002000020c746 : ret 0xe281
0x00000200002274ca : ret 0xe283
0x0000020000380600 : ret 0xe2c1
0x00000200000105be : ret 0xe2c5
0x00000200001a7b0b : ret 0xe2d3
0x00000200004a8b41 : ret 0xe2d4
0x00000200005e14be : ret 0xe2d8
0x00000200000dbd4e : ret 0xe2eb
0x000002000014e1ba : ret 0xe3
0x00000200005c6b02 : ret 0xe35
0x0000020000140401 : ret 0xe372
0x0000020000543893 : ret 0xe373
0x00000200000959e6 : ret 0xe380
0x00000200001b572c : ret 0xe383
0x000002000068667c : ret 0xe3ba
0x0000020000472e9a : ret 0xe3ca
0x000002000014e0ba : ret 0xe4
0x00000200001f372e : ret 0xe42e
0x000002000048d61a : ret 0xe460
0x00000200001846c6 : ret 0xe472
0x00000200001f144e : ret 0xe474
0x000002000010a0a9 : ret 0xe475
0x00000200005f7e62 : ret 0xe477
0x00000200001417bc : ret 0xe484
0x0000020000496b6a : ret 0xe48b
0x00000200005c520a : ret 0xe4e
0x0000020000133df7 : ret 0xe4e9
0x000002000006c60f : ret 0xe4eb
0x000002000014dfba : ret 0xe5
0x000002000062664a : ret 0xe532
0x0000020000535022 : ret 0xe564
0x00000200001b743e : ret 0xe573
0x000002000008a191 : ret 0xe574
0x00000200003c03b4 : ret 0xe575
0x000002000037623e : ret 0xe5a0
0x00000200004f3b52 : ret 0xe5d4
0x0000020000413c79 : ret 0xe5e8
0x0000020000186e76 : ret 0xe5eb
0x00000200000a3b0f : ret 0xe5f
0x000002000014deba : ret 0xe6
0x0000020000539832 : ret 0xe66d
0x00000200001a1431 : ret 0xe672
0x000002000017ff28 : ret 0xe675
0x00000200003a4e0e : ret 0xe681
0x0000020000059b58 : ret 0xe683
0x00000200004e813a : ret 0xe68e
0x00000200000d5440 : ret 0xe6eb
0x00000200001f601a : ret 0xe6f7
0x000002000014ddba : ret 0xe7
0x00000200001f9e4a : ret 0xe707
0x0000020000103d7f : ret 0xe72
0x000002000016d74b : ret 0xe74
0x00000200005e9ec9 : ret 0xe75
0x00000200001ad47f : ret 0xe76
0x00000200000ef79c : ret 0xe77
0x000002000057a2e1 : ret 0xe772
0x00000200004b8eab : ret 0xe775
0x0000020000540bc3 : ret 0xe77c
0x00000200005448c3 : ret 0xe77f
0x00000200001f81ea : ret 0xe780
0x0000020000544f2c : ret 0xe7a6
0x00000200004d5f82 : ret 0xe7b2
0x0000020000545992 : ret 0xe7be
0x00000200000e3b85 : ret 0xe7e9
0x000002000020314e : ret 0xe7f0
0x00000200000f5cc4 : ret 0xe7f7
0x000002000014dcba : ret 0xe8
0x0000020000366c15 : ret 0xe802
0x00000200000f4f6b : ret 0xe804
0x00000200005ecf01 : ret 0xe806
0x00000200001bbdac : ret 0xe808
0x0000020000711e0d : ret 0xe80c
0x000002000045b787 : ret 0xe810
0x00000200005d1472 : ret 0xe817
0x000002000041fa1b : ret 0xe818
0x00000200005b3000 : ret 0xe81a
0x0000020000392fdf : ret 0xe820
0x00000200005a56d5 : ret 0xe826
0x0000020000501d72 : ret 0xe828
0x00000200006304c9 : ret 0xe82a
0x00000200000c385b : ret 0xe82b
0x00000200003db7dd : ret 0xe82c
0x0000020000442483 : ret 0xe830
0x000002000056223a : ret 0xe838
0x000002000041f957 : ret 0xe83b
0x000002000018f770 : ret 0xe840
0x00000200004f9fa6 : ret 0xe848
0x000002000038bb7c : ret 0xe84c
0x000002000054964e : ret 0xe850
0x000002000054a320 : ret 0xe86a
0x00000200004e00a2 : ret 0xe86b
0x000002000007403d : ret 0xe874
0x000002000005adc6 : ret 0xe875
0x00000200000aa4de : ret 0xe87c
0x00000200004accce : ret 0xe883
0x000002000054b131 : ret 0xe889
0x000002000054b23e : ret 0xe88c
0x000002000054bd3d : ret 0xe8a8
0x00000200000679a1 : ret 0xe8c0
0x000002000006c0e8 : ret 0xe8c1
0x000002000063e4de : ret 0xe8cb
0x00000200004b4ff4 : ret 0xe8d0
0x00000200000f5c1b : ret 0xe8d1
0x00000200000c05ff : ret 0xe8d3
0x000002000011b5db : ret 0xe8eb
0x000002000054d442 : ret 0xe8fa
0x00000200003d8b80 : ret 0xe8ff
0x000002000014dbba : ret 0xe9
0x0000020000195dc5 : ret 0xe902
0x00000200005d2dc1 : ret 0xe904
0x0000020000136401 : ret 0xe907
0x00000200000cea84 : ret 0xe908
0x00000200001b748f : ret 0xe90f
0x000002000045e925 : ret 0xe910
0x000002000019d44c : ret 0xe913
0x000002000053c845 : ret 0xe918
0x00000200004ad4d3 : ret 0xe920
0x00000200005aa0d5 : ret 0xe940
0x0000020000553701 : ret 0xe950
0x0000020000153cc1 : ret 0xe955
0x00000200005c4106 : ret 0xe961
0x00000200005541be : ret 0xe962
0x00000200000ca914 : ret 0xe972
0x000002000037ec29 : ret 0xe975
0x00000200001d9362 : ret 0xe97c
0x00000200004ebcfa : ret 0xe980
0x00000200004426b5 : ret 0xe981
0x000002000055418e : ret 0xe983
0x0000020000597942 : ret 0xe990
0x000002000011d529 : ret 0xe9c1
0x000002000018fe80 : ret 0xe9c3
0x0000020000554e90 : ret 0xe9c7
0x00000200006403f6 : ret 0xe9cf
0x00000200003c90ed : ret 0xe9e0
0x00000200005a0b6a : ret 0xe9fd
0x00000200003d1114 : ret 0xe9ff
0x000002000014daba : ret 0xea
0x00000200005563a4 : ret 0xea07
0x0000020000435a1a : ret 0xea08
0x000002000009d901 : ret 0xea2
0x00000200005edf61 : ret 0xea2b
0x000002000021941a : ret 0xea3c
0x000002000057a6ce : ret 0xea5a
0x00000200000a23c9 : ret 0xea72
0x00000200000aab5d : ret 0xea75
0x00000200001c7c09 : ret 0xea8b
0x000002000055d64a : ret 0xea98
0x00000200000ef557 : ret 0xeac1
0x000002000045cc4b : ret 0xead1
0x000002000055d156 : ret 0xeae0
0x00000200005c3e8e : ret 0xeae3
0x000002000055a136 : ret 0xeae6
0x00000200001831b0 : ret 0xeae8
0x0000020000436022 : ret 0xeaeb
0x000002000055d26b : ret 0xeaec
0x000002000009ca56 : ret 0xeaf
0x0000020000144f31 : ret 0xeb02
0x000002000020d6f7 : ret 0xeb03
0x00000200001f06c6 : ret 0xeb04
0x00000200004e79cb : ret 0xeb06
0x00000200006d0443 : ret 0xeb07
0x00000200000e6dc9 : ret 0xeb08
0x0000020000207434 : ret 0xeb0c
0x000002000020d69e : ret 0xeb10
0x000002000020d694 : ret 0xeb14
0x000002000020d68a : ret 0xeb18
0x000002000020d680 : ret 0xeb1c
0x00000200004faf20 : ret 0xeb20
0x00000200006173ca : ret 0xeb24
0x00000200000f524b : ret 0xeb28
0x000002000055f153 : ret 0xeb2b
0x0000020000234f52 : ret 0xeb37
0x000002000060a820 : ret 0xeb38
0x0000020000140323 : ret 0xeb57
0x00000200000ca982 : ret 0xeb72
0x0000020000614193 : ret 0xeb75
0x000002000067a153 : ret 0xeb7c
0x000002000038f624 : ret 0xeb8b
0x000002000049a3c1 : ret 0xeba9
0x00000200006f0391 : ret 0xebb9
0x00000200004a7301 : ret 0xebc1
0x000002000049a3a4 : ret 0xebc9
0x000002000005a4d0 : ret 0xebd3
0x000002000010023f : ret 0xebe0
0x000002000020b4e3 : ret 0xebe9
0x0000020000563edb : ret 0xebef
0x0000020000563f0d : ret 0xebf0
0x0000020000211e10 : ret 0xebf8
0x0000020000565f43 : ret 0xebfb
0x00000200003d2afa : ret 0xebff
0x00000200005668c5 : ret 0xec0c
0x000002000019474a : ret 0xec10
0x0000020000033543 : ret 0xec72
0x0000020000058be7 : ret 0xec75
0x000002000016720a : ret 0xec79
0x0000020000167a4d : ret 0xec8c
0x000002000056a079 : ret 0xec99
0x000002000016962e : ret 0xecc8
0x000002000019b71a : ret 0xecd9
0x000002000016ad68 : ret 0xece3
0x000002000016b976 : ret 0xece6
0x000002000016b1df : ret 0xece9
0x00000200000e77b6 : ret 0xeceb
0x000002000041066a : ret 0xecf0
0x0000020000402cca : ret 0xecf9
0x000002000014b132 : ret 0xed0e
0x000002000056f365 : ret 0xed23
0x00000200000a090e : ret 0xed33
0x00000200005c5ace : ret 0xed72
0x000002000008eb26 : ret 0xed74
0x00000200006d6441 : ret 0xed75
0x000002000016e771 : ret 0xed81
0x0000020000571cfc : ret 0xed82
0x00000200001bdefa : ret 0xed83
0x00000200000988b9 : ret 0xed85
0x0000020000570a09 : ret 0xed8b
0x000002000016ffaa : ret 0xeda6
0x000002000057478f : ret 0xeda8
0x000002000016f86f : ret 0xedb4
0x0000020000574b76 : ret 0xedb7
0x00000200001a9be2 : ret 0xedbf
0x000002000000f516 : ret 0xede5
0x00000200000a7b71 : ret 0xede9
0x000002000009a164 : ret 0xedeb
0x00000200004dee52 : ret 0xedfd
0x0000020000170954 : ret 0xee1c
0x00000200001b4cc6 : ret 0xee56
0x00000200004c79c6 : ret 0xee57
0x00000200001420fa : ret 0xee72
0x0000020000578f08 : ret 0xee73
0x0000020000195d59 : ret 0xee9
0x00000200003abc5a : ret 0xee91
0x0000020000579a80 : ret 0xeea1
0x00000200003aa65a : ret 0xeea7
0x000002000019d24e : ret 0xeeb
0x000002000017493c : ret 0xeeb4
0x000002000017564f : ret 0xeebc
0x0000020000175d23 : ret 0xeecc
0x0000020000166868 : ret 0xeee8
0x000002000017689b : ret 0xeeed
0x0000020000176dc2 : ret 0xeef3
0x000002000049b6fc : ret 0xef3
0x0000020000178eb2 : ret 0xef43
0x000002000053d0e2 : ret 0xef47
0x000002000017b27a : ret 0xef55
0x00000200005f33fc : ret 0xef72
0x0000020000674360 : ret 0xef75
0x00000200000a2b28 : ret 0xef77
0x0000020000132e6e : ret 0xef7c
0x00000200005e487e : ret 0xef7d
0x000002000017c73e : ret 0xef81
0x000002000017ca6b : ret 0xef88
0x000002000053e1cd : ret 0xefd1
0x0000020000580a5f : ret 0xefd8
0x0000020000559ddf : ret 0xefe9
0x0000020000629b8f : ret 0xefeb
0x0000020000164dba : ret 0xeff7
0x0000020000010d22 : ret 0xeffe
0x00000200000dcef8 : ret 0xf
0x0000020000231999 : ret 0xf00
0x0000020000055837 : ret 0xf000
0x000002000023fe25 : ret 0xf009
0x00000200000f9e39 : ret 0xf00b
0x0000020000246509 : ret 0xf00d
0x0000020000274ee5 : ret 0xf00f
0x000002000005b221 : ret 0xf01
0x0000020000275649 : ret 0xf010
0x000002000023f4e5 : ret 0xf011
0x000002000026329d : ret 0xf014
0x0000020000264379 : ret 0xf016
0x00000200001ae142 : ret 0xf017
0x0000020000253b29 : ret 0xf01a
0x000002000023bf6d : ret 0xf01b
0x00000200002629c5 : ret 0xf01f
0x0000020000037902 : ret 0xf02
0x0000020000020250 : ret 0xf023
0x00000200000d027c : ret 0xf024
0x0000020000619045 : ret 0xf025
0x0000020000034355 : ret 0xf03
0x00000200005cd498 : ret 0xf03b
0x000002000005b122 : ret 0xf04
0x0000020000076963 : ret 0xf06
0x000002000003b2a8 : ret 0xf066
0x00000200000cd3f2 : ret 0xf07
0x0000020000141cf8 : ret 0xf072
0x0000020000667b4b : ret 0xf07e
0x0000020000032b87 : ret 0xf08
0x0000020000584e6d : ret 0xf0a8
0x00000200000f6f31 : ret 0xf0c3
0x00000200001854ba : ret 0xf0c9
0x00000200005b58fe : ret 0xf0d2
0x00000200001d2cea : ret 0xf0e8
0x000002000045c6d2 : ret 0xf0eb
0x00000200000cb0ce : ret 0xf0f
0x000002000018618e : ret 0xf0fd
0x000002000044047f : ret 0xf0ff
0x0000020000059dab : ret 0xf10
0x000002000013b366 : ret 0xf104
0x0000020000127ce6 : ret 0xf122
0x00000200003d0591 : ret 0xf12b
0x000002000049925f : ret 0xf13
0x00000200000d19aa : ret 0xf15
0x00000200000eab3a : ret 0xf164
0x0000020000033bf6 : ret 0xf172
0x000002000003a00b : ret 0xf174
0x000002000039c92c : ret 0xf175
0x000002000067459f : ret 0xf176
0x00000200001881ef : ret 0xf177
0x00000200001c314e : ret 0xf179
0x00000200002162dd : ret 0xf18
0x000002000012e5fd : ret 0xf18b
0x0000020000189513 : ret 0xf18f
0x000002000018966f : ret 0xf19d
0x0000020000549f66 : ret 0xf1b
0x00000200003f2e19 : ret 0xf1c
0x000002000060a09a : ret 0xf1dc
0x0000020000497e46 : ret 0xf1e
0x00000200005ec9b1 : ret 0xf1e8
0x0000020000183f9f : ret 0xf1e9
0x00000200000bf5bc : ret 0xf1f
0x0000020000051fe7 : ret 0xf20
0x000002000018b846 : ret 0xf20b
0x00000200005fec5a : ret 0xf23b
0x0000020000046a78 : ret 0xf24
0x00000200004a05da : ret 0xf252
0x0000020000224688 : ret 0xf272
0x000002000045e607 : ret 0xf275
0x00000200003b2aba : ret 0xf286
0x0000020000381098 : ret 0xf28b
0x00000200005b75e1 : ret 0xf2a
0x000002000010fa5a : ret 0xf2a3
0x000002000013f04a : ret 0xf2b5
0x0000020000727d42 : ret 0xf2d1
0x00000200001c8a36 : ret 0xf2db
0x0000020000510cb6 : ret 0xf2e8
0x000002000001f0d2 : ret 0xf3
0x00000200004b3dba : ret 0xf30
0x00000200004ad488 : ret 0xf320
0x0000020000189a1a : ret 0xf336
0x000002000036f6b2 : ret 0xf35d
0x00000200006d109f : ret 0xf375
0x00000200003e4639 : ret 0xf38
0x000002000001ef49 : ret 0xf38c
0x0000020000190162 : ret 0xf393
0x000002000039b9da : ret 0xf3a7
0x0000020000197f91 : ret 0xf3b2
0x00000200005a007a : ret 0xf3e7
0x000002000021edfa : ret 0xf3ed
0x0000020000208cec : ret 0xf3f
0x000002000021864a : ret 0xf3f6
0x000002000012bd39 : ret 0xf3f7
0x0000020000077e74 : ret 0xf40
0x000002000021cffa : ret 0xf40b
0x000002000002b9c3 : ret 0xf41
0x000002000005f799 : ret 0xf42
0x00000200005a25f7 : ret 0xf42d
0x00000200000eae44 : ret 0xf43
0x00000200004ea9ee : ret 0xf432
0x00000200000462ca : ret 0xf44
0x000002000000f0b7 : ret 0xf44f
0x000002000007c9d7 : ret 0xf45
0x0000020000369b22 : ret 0xf45a
0x00000200006178a2 : ret 0xf46
0x0000020000148f03 : ret 0xf472
0x000002000019aa5b : ret 0xf47e
0x000002000005f6c8 : ret 0xf48
0x00000200005a57ae : ret 0xf480
0x0000020000092559 : ret 0xf49
0x00000200006e374f : ret 0xf4a
0x0000020000027e74 : ret 0xf4c
0x00000200000c36ef : ret 0xf4d
0x000002000019cf61 : ret 0xf4de
0x00000200000e1e8a : ret 0xf4eb
0x00000200005a98d2 : ret 0xf4ee
0x000002000043ca66 : ret 0xf500
0x00000200003d59d2 : ret 0xf503
0x00000200000b053a : ret 0xf50a
0x00000200001dab5a : ret 0xf51
0x000002000008f385 : ret 0xf53
0x00000200005aa800 : ret 0xf541
0x0000020000112e4e : ret 0xf55
0x0000020000002ffa : ret 0xf56
0x00000200001a85aa : ret 0xf562
0x000002000000e50a : ret 0xf564
0x000002000020961a : ret 0xf56d
0x000002000048f368 : ret 0xf57
0x000002000008eb99 : ret 0xf575
0x00000200001a12a1 : ret 0xf582
0x0000020000455ffa : ret 0xf5a1
0x00000200005ade1e : ret 0xf5ae
0x000002000045769a : ret 0xf5b7
0x000002000002b9ca : ret 0xf5eb
0x00000200002008aa : ret 0xf5ec
0x00000200001ca2ec : ret 0xf5f7
0x00000200000a103a : ret 0xf5ff
0x000002000038847e : ret 0xf602
0x00000200001f09da : ret 0xf606
0x000002000004c2f1 : ret 0xf618
0x000002000010e2ea : ret 0xf61f
0x0000020000063c22 : ret 0xf633
0x00000200001c52cd : ret 0xf640
0x00000200000401c0 : ret 0xf641
0x00000200005b2d3a : ret 0xf64d
0x00000200000e545a : ret 0xf65c
0x00000200004d0ac3 : ret 0xf66
0x00000200006d7d09 : ret 0xf675
0x00000200001e114a : ret 0xf67c
0x00000200001181e0 : ret 0xf685
0x00000200006ea4d2 : ret 0xf6a9
0x0000020000128303 : ret 0xf6b9
0x00000200005084a3 : ret 0xf6c3
0x0000020000086068 : ret 0xf6e8
0x00000200001956c9 : ret 0xf6e9
0x00000200001da322 : ret 0xf6f2
0x000002000012aa2b : ret 0xf6f7
0x0000020000439345 : ret 0xf6ff
0x000002000045f3cf : ret 0xf7
0x00000200001403b5 : ret 0xf702
0x00000200006eaac5 : ret 0xf70c
0x00000200001acf0f : ret 0xf712
0x000002000023695e : ret 0xf72
0x00000200001add91 : ret 0xf72d
0x0000020000452f44 : ret 0xf73
0x000002000007f747 : ret 0xf74
0x00000200000b3ce6 : ret 0xf740
0x000002000002e255 : ret 0xf741
0x0000020000032ae0 : ret 0xf748
0x000002000008fc7f : ret 0xf749
0x000002000004e444 : ret 0xf75
0x00000200005b120a : ret 0xf75d
0x00000200001efe56 : ret 0xf76
0x0000020000654727 : ret 0xf766
0x00000200001b05a8 : ret 0xf769
0x00000200000c3b34 : ret 0xf77
0x0000020000369713 : ret 0xf774
0x0000020000537b02 : ret 0xf799
0x000002000042a706 : ret 0xf79b
0x00000200001b488a : ret 0xf7a0
0x000002000048be9d : ret 0xf7d
0x00000200004d66ba : ret 0xf7dc
0x00000200003b89c3 : ret 0xf7e8
0x000002000045a598 : ret 0xf7f7
0x0000020000448086 : ret 0xf7ff
0x00000200005dd1a4 : ret 0xf803
0x00000200006fa482 : ret 0xf80b
0x000002000072872a : ret 0xf81c
0x00000200000cb90b : ret 0xf824
0x0000020000074d3a : ret 0xf825
0x00000200003730b1 : ret 0xf83b
0x0000020000123d5a : ret 0xf849
0x0000020000020d49 : ret 0xf854
0x000002000012d10f : ret 0xf874
0x00000200001bb06e : ret 0xf87a
0x0000020000082363 : ret 0xf883
0x0000020000295e50 : ret 0xf88b
0x00000200001b22f5 : ret 0xf8a8
0x00000200004a8316 : ret 0xf8b4
0x00000200005f9ff2 : ret 0xf8ba
0x00000200006c72c0 : ret 0xf8bf
0x00000200004a81b6 : ret 0xf8c2
0x00000200001d0dfa : ret 0xf8cd
0x00000200000e59da : ret 0xf8d1
0x00000200003c373a : ret 0xf8d8
0x00000200001bd79a : ret 0xf904
0x00000200004ddc3a : ret 0xf91d
0x000002000043590a : ret 0xf93b
0x0000020000010e78 : ret 0xf958
0x000002000008e675 : ret 0xf983
0x00000200006320dd : ret 0xf98b
0x0000020000710e6e : ret 0xf992
0x000002000000daa9 : ret 0xf9d3
0x000002000009bbe6 : ret 0xf9e3
0x00000200000d18ea : ret 0xf9e9
0x00000200004ecc52 : ret 0xfa06
0x000002000001051f : ret 0xfa65
0x0000020000265d74 : ret 0xfa7
0x00000200001a9cda : ret 0xfa73
0x0000020000129676 : ret 0xfa8
0x000002000022ff66 : ret 0xfa80
0x00000200004370ba : ret 0xfa81
0x00000200000baa02 : ret 0xfa83
0x00000200001ea225 : ret 0xfa8b
0x00000200003efb2a : ret 0xfaad
0x0000020000668ff1 : ret 0xfaba
0x0000020000108d4a : ret 0xfac9
0x000002000008d3e6 : ret 0xfacb
0x000002000018f72a : ret 0xfad9
0x0000020000156df6 : ret 0xfaf3
0x00000200001563f6 : ret 0xfafd
0x000002000018e40a : ret 0xfb1e
0x000002000000e1e6 : ret 0xfb26
0x00000200003938fa : ret 0xfb5e
0x00000200006c8952 : ret 0xfb8
0x00000200006c7138 : ret 0xfb83
0x00000200005a93b6 : ret 0xfb8b
0x000002000006d486 : ret 0xfb91
0x00000200004ee1c0 : ret 0xfba
0x00000200006ec802 : ret 0xfbd9
0x00000200006ecf6a : ret 0xfbe5
0x00000200003b86bf : ret 0xfbe8
0x00000200000f1c36 : ret 0xfc0
0x00000200000a9a4a : ret 0xfc0b
0x000002000000e1a2 : ret 0xfc19
0x000002000009de29 : ret 0xfc24
0x00000200000960b7 : ret 0xfc3
0x0000020000436a86 : ret 0xfc6b
0x00000200001b9e9e : ret 0xfc7
0x000002000038813a : ret 0xfc8e
0x00000200005fa00c : ret 0xfcba
0x000002000071f040 : ret 0xfcc0
0x0000020000148a32 : ret 0xfd0
0x0000020000554e35 : ret 0xfd30
0x0000020000721649 : ret 0xfd3d
0x000002000037c172 : ret 0xfd4f
0x0000020000485371 : ret 0xfd5
0x00000200000d8a42 : ret 0xfd6e
0x0000020000722b22 : ret 0xfd78
0x00000200005ac98a : ret 0xfd9
0x0000020000184aea : ret 0xfd98
0x00000200001fcc16 : ret 0xfdc4
0x00000200003d117a : ret 0xfde9
0x00000200006fa597 : ret 0xfe00
0x00000200004db914 : ret 0xfe14
0x00000200007254a3 : ret 0xfe39
0x000002000067f3ea : ret 0xfe49
0x00000200006dfa75 : ret 0xfe83
0x00000200003b0760 : ret 0xfe9
0x00000200001dbe0a : ret 0xfe91
0x00000200001d1377 : ret 0xfeb
0x0000020000728356 : ret 0xfeb6
0x00000200004f3dc3 : ret 0xfeb8
0x00000200001b77aa : ret 0xfec
0x0000020000102ff3 : ret 0xfee9
0x0000020000679076 : ret 0xfef2
0x000002000000b0b2 : ret 0xff
0x000002000005c33e : ret 0xff0
0x000002000003cd26 : ret 0xff00
0x0000020000157a25 : ret 0xff02
0x000002000011f7db : ret 0xff04
0x00000200000b086c : ret 0xff10
0x0000020000378667 : ret 0xff24
0x000002000006ee59 : ret 0xff25
0x0000020000410afd : ret 0xff3
0x0000020000681db2 : ret 0xff31
0x000002000003c769 : ret 0xff33
0x000002000041371a : ret 0xff38
0x000002000001086e : ret 0xff3f
0x000002000006fc0e : ret 0xff41
0x00000200006f568f : ret 0xff46
0x0000020000099c8c : ret 0xff48
0x00000200000c122a : ret 0xff49
0x000002000007b088 : ret 0xff4a
0x0000020000372034 : ret 0xff56
0x0000020000058eb2 : ret 0xff66
0x00000200003729d6 : ret 0xff75
0x000002000039820e : ret 0xff7c
0x00000200000d55ed : ret 0xff80
0x000002000037459e : ret 0xff83
0x00000200003f42d2 : ret 0xff85
0x000002000040bb36 : ret 0xff88
0x000002000040d8b2 : ret 0xff8b
0x00000200005ecd42 : ret 0xff8f
0x0000020000703bd0 : ret 0xff96
0x00000200006f233d : ret 0xff98
0x000002000070b90b : ret 0xff9a
0x000002000066e693 : ret 0xff9d
0x00000200001543b5 : ret 0xffa
0x0000020000653c08 : ret 0xffa1
0x0000020000724e1a : ret 0xffa2
0x00000200007119f7 : ret 0xffa3
0x00000200005d0f3b : ret 0xffa4
0x00000200005ac88f : ret 0xffa5
0x00000200005c6d5b : ret 0xffa6
0x000002000063d4ba : ret 0xffa7
0x00000200005f8ef9 : ret 0xffa8
0x00000200005ccf3e : ret 0xffa9
0x000002000059ba55 : ret 0xffaa
0x00000200005613b8 : ret 0xffab
0x00000200005f3991 : ret 0xffac
0x000002000058cd59 : ret 0xffad
0x000002000057e3e7 : ret 0xffae
0x0000020000549266 : ret 0xffaf
0x00000200005cad11 : ret 0xffb0
0x000002000062cb10 : ret 0xffb1
0x000002000053cd20 : ret 0xffb2
0x00000200004f4d54 : ret 0xffb3
0x00000200004da396 : ret 0xffb4
0x0000020000541254 : ret 0xffb5
0x00000200004dbec3 : ret 0xffb6
0x0000020000540de2 : ret 0xffb7
0x000002000007c7e4 : ret 0xffb8
0x000002000003b2b1 : ret 0xffb9
0x0000020000040199 : ret 0xffba
0x000002000047962e : ret 0xffbb
0x00000200004a462b : ret 0xffbc
0x000002000048ccea : ret 0xffbd
0x0000020000561925 : ret 0xffbe
0x0000020000554e78 : ret 0xffbf
0x000002000045e39a : ret 0xffc0
0x000002000068a157 : ret 0xffc1
0x0000020000443fb4 : ret 0xffc2
0x00000200003c4de8 : ret 0xffc3
0x00000200004704ca : ret 0xffc4
0x00000200004856c8 : ret 0xffc5
0x00000200003c6d7f : ret 0xffc6
0x00000200003ece78 : ret 0xffc7
0x00000200004b4f12 : ret 0xffc8
0x000002000038aa66 : ret 0xffc9
0x00000200003bccdc : ret 0xffca
0x00000200004a192a : ret 0xffcb
0x000002000039cdb5 : ret 0xffcc
0x00000200005c5fc7 : ret 0xffcd
0x00000200005f5317 : ret 0xffce
0x000002000044cb2d : ret 0xffcf
0x000002000050cb4c : ret 0xffd0
0x000002000040b9e2 : ret 0xffd1
0x0000020000421583 : ret 0xffd3
0x0000020000401a08 : ret 0xffd4
0x0000020000381214 : ret 0xffd5
0x0000020000474a8e : ret 0xffd7
0x000002000037337b : ret 0xffd8
0x0000020000505fad : ret 0xffd9
0x00000200003a15f8 : ret 0xffdb
0x00000200003814f6 : ret 0xffdc
0x00000200004c9d94 : ret 0xffdd
0x00000200005b79d6 : ret 0xffde
0x00000200004aa943 : ret 0xffdf
0x00000200004abccc : ret 0xffe2
0x0000020000473693 : ret 0xffe3
0x00000200001e3f13 : ret 0xffe4
0x0000020000438bf4 : ret 0xffe5
0x0000020000443fa7 : ret 0xffe6
0x0000020000219368 : ret 0xffe7
0x00000200001b921c : ret 0xffe8
0x0000020000192004 : ret 0xffe9
0x000002000018702d : ret 0xffea
0x000002000014683c : ret 0xffeb
0x0000020000168c7e : ret 0xffec
0x000002000013e26c : ret 0xffed
0x0000020000155fbd : ret 0xffee
0x0000020000176044 : ret 0xffef
0x00000200000266f3 : ret 0xfff
0x00000200000f6e49 : ret 0xfff0
0x0000020000057208 : ret 0xfff1
0x0000020000191af6 : ret 0xfff2
0x0000020000198607 : ret 0xfff3
0x000002000010c433 : ret 0xfff4
0x0000020000031f75 : ret 0xfff5
0x00000200003e4e47 : ret 0xfff6
0x0000020000208daf : ret 0xfff7
0x00000200000471b1 : ret 0xfff8
0x000002000003518a : ret 0xfff9
0x0000020000045d1a : ret 0xfffa
0x0000020000194e6d : ret 0xfffb
0x0000020000098368 : ret 0xfffc
0x000002000002cb6d : ret 0xfffd
0x000002000002f149 : ret 0xfffe
0x0000020000074bfc : ret 0xffff
0x0000020000021afa : ret 1
0x0000020000034b8e : ret 2
0x000002000004787d : ret 3
0x0000020000014bed : ret 4
0x0000020000242375 : ret 5
0x0000020000036b8b : ret 6
0x000002000006c150 : ret 7
0x00000200000cb67a : ret 8
0x0000020000038688 : ret 9
0x00000200000abad2 : retf -0x317d ; call rbx
0x000002000006ef6c : retf -0x3eb8 ; call 0x1ffc22a387d
0x00000200000785ac : retf -0x3eb8 ; call 0x1ffc22acebd
0x00000200000ea1f9 : retf -0x3eb8 ; call 0x1ffc231ea0a
0x00000200001b66dd : retf -0x3eb8 ; call 0x1ffc23eaeee
0x00000200001dbd41 : retf -0x3eb8 ; call 0x1ffc2410652
0x00000200004d1636 : retf -0x3eb8 ; call 0x1ffc2705e47
0x00000200004d20e2 : retf -0x3eb8 ; call 0x1ffc27068f3
0x000002000050c0b9 : retf -0x3eb8 ; call 0x1ffc27408ca
0x000002000050e014 : retf -0x3eb8 ; call 0x1ffc2742825
0x00000200006f61d1 : retf -0x3eb8 ; call 0x1ffc292a9e2
0x00000200006f645b : retf -0x3eb8 ; call 0x1ffc292ac6c
0x00000200001b1772 : retf -0x3eb8 ; jmp 0x1ffc23e648d
0x00000200003c172e : retf -0x3eb8 ; jmp 0x1ffc2c75f6d
0x0000020000573cd3 : retf -0x3eb8 ; jmp 0x1ffc2e28512
0x000002000063d8b4 : retf -0x3eb8 ; jmp 0x1ffc2ef20f3
0x0000020000101ddb : retf -0x3eb8 ; jmp 0x20048d2a909
0x00000200000423bd : retf -0x76b8 ; and al, 0x20 ; call r11
0x000002000068e722 : retf -1 ; nop ; jmp 0x2000068a979
0x00000200003eddb8 : retf 0x234c ; leave ; jmp 0x200003edd85
0x00000200000914f8 : retf 0x34d ; ror dword ptr [rax - 1], -0x3e ; jmp 0x20000091496
0x0000020000609ebc : retf 0x48ff ; test eax, eax ; je 0x20000609ecc ; call rax
0x0000020000609f57 : retf 0x48ff ; test eax, eax ; je 0x20000609f67 ; call rax
0x0000020000132bdd : retf 0x553b ; pop rax ; jmp 0x20000132bab
0x000002000048cdb8 : retf ; add rsp, 0x20 ; pop rbx ; jmp 0x20000068fd8
0x000002000066c54f : retf ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000064dc68 : retf ; add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000022da2b : retf ; and al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x00000200000c0f21 : retf ; and dword ptr [rcx - 0x3f], ecx ; call 0x1ffc32f5c44
0x000002000022beec : retf ; call 0x1ffc3ae07f6
0x00000200003fcb89 : retf ; call 0x20000027bc0
0x00000200006077d4 : retf ; call 0x2000002b788
0x00000200003fd453 : retf ; call 0x2000002c2f8
0x0000020000192001 : retf ; call 0x2000002e2e3
0x0000020000403d81 : retf ; call 0x20000030f74
0x0000020000403dd2 : retf ; call 0x20000031494
0x00000200006eb24c : retf ; call 0x20000035d78
0x000002000003bdc3 : retf ; call 0x2000003c71d
0x000002000043a081 : retf ; call 0x20000063d98
0x0000020000438428 : retf ; call 0x20000063dd8
0x000002000043a0be : retf ; call 0x20000068fd4
0x000002000043b0b1 : retf ; call 0x200000690a4
0x00000200004a42c8 : retf ; call 0x200000690a9
0x0000020000447d8b : retf ; call 0x200000690e4
0x000002000043b3d5 : retf ; call 0x2000006a614
0x00000200005ece61 : retf ; call 0x2000006fe28
0x00000200001c3ff2 : retf ; call 0x200000702b3
0x00000200004417c6 : retf ; call 0x200000702b4
0x00000200004463d9 : retf ; call 0x20000070844
0x00000200003d5a6b : retf ; call 0x20000073894
0x00000200003e505c : retf ; call 0x2000008221b
0x00000200001eb26d : retf ; call 0x2000008756b
0x00000200001b9f45 : retf ; call 0x2000009c100
0x0000020000473db2 : retf ; call 0x2000009d46c
0x00000200001e80bd : retf ; call 0x200000a4303
0x00000200003c91c7 : retf ; call 0x200000b975f
0x00000200000b9fb7 : retf ; call 0x200000b9ff8
0x000002000049293d : retf ; call 0x200000bc6c8
0x0000020000640470 : retf ; call 0x200000bc773
0x00000200000c4bda : retf ; call 0x200000c5b08
0x000002000009a352 : retf ; call 0x200000c889c
0x00000200001674e8 : retf ; call 0x200000c94df
0x000002000050a47a : retf ; call 0x200001017cc
0x00000200001ebce4 : retf ; call 0x20000105bfc
0x00000200004e7e1d : retf ; call 0x20000114978
0x00000200004f5d67 : retf ; call 0x2000011d888
0x0000020000128f11 : retf ; call 0x20000128fa0
0x00000200001321e0 : retf ; call 0x2000012e48f
0x0000020000514e46 : retf ; call 0x2000013b6bc
0x0000020000067c3d : retf ; call 0x20000153ec3
0x00000200005381fc : retf ; call 0x2000015d884
0x0000020000646a21 : retf ; call 0x2000015d888
0x0000020000532b83 : retf ; call 0x2000015dcfc
0x000002000019ce08 : retf ; call 0x200001d90df
0x00000200000ea7ed : retf ; call 0x200001d90e3
0x00000200000dcef5 : retf ; call 0x200001d918f
0x00000200005d95fa : retf ; call 0x20000208a40
0x0000020000117de0 : retf ; call 0x20000294003
0x00000200005f8b93 : retf ; call 0x20000294e23
0x0000020000668b09 : retf ; call 0x20000294e24
0x0000020000635f89 : retf ; call 0x20000294e27
0x00000200003a43dc : retf ; call 0x200003a0667
0x0000020000497d15 : retf ; call 0x200003f3a60
0x000002000040957f : retf ; call 0x200004095b4
0x00000200004f86fb : retf ; call 0x200004149a7
0x00000200005ba358 : retf ; call 0x200004265bb
0x00000200005ba4e2 : retf ; call 0x2000042670b
0x0000020000604a31 : retf ; call 0x2000045e0b8
0x00000200000e4107 : retf ; call 0x20000470387
0x00000200004736f0 : retf ; call 0x20000473714
0x00000200001c159c : retf ; call 0x200005cd7cb
0x00000200001cef0f : retf ; call 0x2000060e2df
0x000002000061fe70 : retf ; call 0x2000061bb71
0x0000020000666737 : retf ; call 0x200006792c7
0x00000200001c1d1f : retf ; call r10
0x00000200004bd6d6 : retf ; call r11
0x00000200006d9348 : retf ; call r12
0x00000200001413e2 : retf ; call r14
0x00000200003b193f : retf ; call r15
0x00000200000ef8be : retf ; call rax
0x0000020000727f04 : retf ; call rbx
0x00000200001ddcd9 : retf ; call rdi
0x00000200006e009b : retf ; call rdx
0x00000200004aaaf7 : retf ; call rsi
0x00000200000966fe : retf ; je 0x2000009677e ; call rax
0x00000200000ecfb7 : retf ; jmp 0x200000ecd9b
0x0000020000180efe : retf ; jmp 0x20000180e09
0x000002000045acfd : retf ; lea rdx, qword ptr [rbx + 0x18] ; call rax
0x00000200000f2783 : retf ; mov dword ptr [rbx + 0xd0], edi ; jmp 0x200000f2757
0x0000020000412759 : retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006890d7 : retf ; mov edx, 0xa0 ; call 0x20000145350
0x00000200004bca65 : retf ; mov edx, 0xe ; call 0x200000e1c11
0x00000200004926da : retf ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200003ff402 : retf ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004c6fee : retf ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x000002000059456a : retf ; mov qword ptr [rsp + 0x30], rdi ; call rax
0x00000200001b1c9b : retf ; mov r8, qword ptr [rip + 0x19f85d] ; call r8
0x000002000064bb85 : retf ; mov rax, qword ptr [rbp + 0x50] ; jmp 0x2000064bb55
0x00000200004b42b0 : retf ; mov rax, qword ptr [rip + 0x1a0b78] ; call rax
0x000002000018ec85 : retf ; mov rax, qword ptr [rip + 0x1c2903] ; call rax
0x0000020000129ff2 : retf ; mov rax, qword ptr [rip + 0x227506] ; call rax
0x0000020000129f77 : retf ; mov rax, qword ptr [rip + 0x227581] ; call rax
0x00000200000b4cd1 : retf ; mov rax, qword ptr [rip + 0x29c8b7] ; call rax
0x00000200004b3eca : retf ; mov rax, qword ptr [rip - 0x205aaa] ; call rax
0x00000200004d9a00 : retf ; mov rax, qword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x0000020000672d1a : retf ; mov rcx, r14 ; call rax
0x0000020000676e84 : retf ; mov rdi, rax ; call qword ptr [rip - 0x3d4f86]
0x000002000067d5a0 : retf ; mov rsi, rax ; call qword ptr [rdi]
0x000002000002a107 : retf ; xor r12d, r12d ; call rsi
0x000002000022beeb : retfq ; call 0x1ffc3ae07f7
0x0000020000666bea : rol ah, cl ; ret
0x00000200003cd494 : rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200000296d0 : rol al, 0xe0 ; add esi, dword ptr [rdx] ; add r8b, byte ptr [rcx + 0x22] ; ret
0x0000020000106a5d : rol bh, 1 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000010d0c9 : rol bh, 1 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000619a94 : rol bl, 0x33 ; leave ; jmp rax
0x00000200000a3483 : rol bl, 0x41 ; mov eax, ecx ; ret
0x000002000067d09a : rol bl, 0x48 ; add eax, -8 ; ret
0x00000200001301ea : rol bl, 0x48 ; jmp rcx
0x00000200005f52fd : rol bl, 0x48 ; lea eax, dword ptr [rcx - 0x10] ; ret
0x00000200000ec9a0 : rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000520506 : rol bl, 0x48 ; mov eax, dword ptr [rcx + 0x6a8] ; ret
0x000002000014d8a7 : rol bl, 0x48 ; mov eax, ecx ; ret
0x00000200001c6182 : rol bl, 0x48 ; mov eax, edx ; ret
0x000002000013fe4c : rol bl, 0x48 ; sbb eax, eax ; sbb rax, -1 ; ret
0x0000020000647d42 : rol bl, 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000010fdcf : rol bl, 0x49 ; mov eax, dword ptr [rax + 0x80] ; ret
0x000002000013fedb : rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000024c87 : rol bl, 0x49 ; mov eax, ecx ; ret
0x00000200003a51d8 : rol bl, 0x49 ; mov eax, edx ; jmp 0x200003a519b
0x00000200005f3403 : rol bl, 0x4c ; mov dword ptr [rcx], ecx ; ret
0x00000200000dc095 : rol bl, 0x4d ; mov dword ptr [rax], ecx ; ret
0x0000020000616641 : rol bl, 0x66 ; mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x000002000012d10c : rol bl, 0x85 ; ret 0xf874
0x00000200000b423a : rol bl, 0x8b ; ret 0x8b44
0x000002000002b9c7 : rol bl, 0x8b ; ret 0xf5eb
0x00000200003ee02a : rol bl, 0xb8 ; adc byte ptr [rdx], al ; add al, al ; ret
0x0000020000730027 : rol bl, 0xb8 ; adc dword ptr [rax], eax ; add al, al ; ret
0x00000200000ea95d : rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000039776 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004e64fb : rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x000002000065d0ee : rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200003b07b3 : rol bl, 0xb8 ; jns 0x200003b07bf ; add al, al ; ret
0x000002000047a90a : rol bl, 0xb8 ; jns 0x2000047a916 ; add al, al ; ret
0x000002000047b352 : rol bl, 0xb8 ; jns 0x2000047b35e ; add al, al ; ret
0x000002000047c5be : rol bl, 0xb8 ; jns 0x2000047c5ca ; add al, al ; ret
0x00000200000b5981 : rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000015e205 : rol bl, 0xcc ; mov al, byte ptr [rip + 0x1f3616] ; ret
0x0000020000520411 : rol bl, 0xcc ; mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x000002000015e231 : rol bl, 0xcc ; mov eax, ecx ; ret
0x000002000066231d : rol bl, 0xcc ; ret 0
0x000002000013fb1d : rol bl, 0xcc ; xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x000002000012ed23 : rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000020000189c36 : rol byte ptr [r11 - 0x7cb70820], 1 ; ret 0x89f8
0x000002000064699b : rol byte ptr [r11], 1 ; ret 0xc23b
0x00000200004aea87 : rol byte ptr [r13 + rcx*4 + 0x46], 1 ; ret 0x8948
0x000002000022d3fc : rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200003948dc : rol byte ptr [r15 + rcx - 0x4a], 1 ; ret
0x0000020000401a01 : rol byte ptr [r9 - 0x75], 1 ; salc ; call 0x2000014dc67
0x00000200005589cc : rol byte ptr [r9 - 0x75], 1 ; salc ; call rax
0x000002000067adc3 : rol byte ptr [rax + 0x48], 0x3b ; ret 0xe77c
0x000002000067a14f : rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x0000020000148eff : rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x00000200003f97cc : rol byte ptr [rax + 0x48], 3 ; ret 0x3b49
0x000002000067a5b4 : rol byte ptr [rax + 0x4c], 0x8b ; ret
0x0000020000159fbc : rol byte ptr [rax + 0x75], 0xd0 ; sfence ; ret
0x0000020000241141 : rol byte ptr [rax + rax], 0x5e ; ret
0x000002000021b1ba : rol byte ptr [rax + rcx*2], 0x3b ; ret 0xec72
0x0000020000118191 : rol byte ptr [rax + rcx*2], 0x89 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4508
0x00000200001a30ca : rol byte ptr [rax + rcx*2], 0xff ; ret 0xff48
0x00000200004d405b : rol byte ptr [rax + rcx*4 + 0x6d], cl ; cmp ch, al ; ret 0xffb9
0x00000200001d7999 : rol byte ptr [rax - 0x6bf033c6], 0xc0 ; ret
0x00000200004c7b55 : rol byte ptr [rax - 0x76], 0xcd ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x000002000072bdf8 : rol byte ptr [rax - 0x78], 0x7c ; and al, 0x30 ; call r12
0x0000020000590268 : rol byte ptr [rax - 0x7bf0a3c8], 0x13 ; ret
0x0000020000456fb4 : rol byte ptr [rax], 0 ; add al, ch ; ret
0x00000200000561b7 : rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x00000200000cf56f : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x000002000020d875 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004962f1 : rol byte ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x42], al ; js 0x200004962eb ; ret 0xcc78
0x000002000061d5db : rol byte ptr [rax], 0 ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200000c2342 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x0000020000436e2c : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x7ebeefb8], cl ; ret
0x00000200006e9f4b : rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200004b59a0 : rol byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200000d4b8d : rol byte ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000fcd3a : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret
0x0000020000266844 : rol byte ptr [rax], 0 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], bh ; ret
0x000002000014f255 : rol byte ptr [rax], 0 ; add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x000002000015049b : rol byte ptr [rax], 0 ; ret
0x000002000055f14b : rol byte ptr [rax], 0 ; ror byte ptr [rdi], 0x45 ; fsubr st(1) ; ret 0xeb2b
0x00000200000b596e : rol byte ptr [rax], 0 ; sal byte ptr [rbx + rax - 0x75], 0xc1 ; ret
0x00000200004149bc : rol byte ptr [rax], 0x70 ; xor byte ptr [rax], al ; jne 0x200004149cb ; ret
0x00000200004927ac : rol byte ptr [rax], 0x75 ; sub edi, edi ; ret 0xfa83
0x00000200000f2786 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp 0x200000f2754
0x00000200000e503e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001512b6 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000400cd7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005df4bc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000157b05 : rol byte ptr [rax], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000017224d : rol byte ptr [rbp + 0x23], 1 ; ret 0xbee9
0x00000200001956c6 : rol byte ptr [rbp + 0x23], 1 ; ret 0xf6e9
0x00000200000cd8a1 : rol byte ptr [rbp + 0x2b], 1 ; ret
0x0000020000233603 : rol byte ptr [rbp + 0x2b], 1 ; ret 0x24e8
0x00000200002336a8 : rol byte ptr [rbp + 0x2b], 1 ; ret 0x7fe8
0x00000200001d921e : rol byte ptr [rbp + 0x2b], 1 ; ret 0x9e8
0x00000200000c0132 : rol byte ptr [rbp + 0x33], 1 ; ror byte ptr [rax - 0x73], 0x3d ; ret
0x00000200001bc8b8 : rol byte ptr [rbp + 0x3b], 0xc1 ; jl 0x200001bc8b0 ; xor eax, eax ; ret
0x000002000050a182 : rol byte ptr [rbp + 0x3b], 0xc2 ; jb 0x2000050a165 ; mov rax, rdx ; ret
0x000002000050a182 : rol byte ptr [rbp + 0x3b], 0xc2 ; jb 0x2000050a166 ; mov rax, rdx ; ret
0x00000200001c62bd : rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x00000200000ce190 : rol byte ptr [rbp + 0x3b], 1 ; ret
0x000002000040c3fc : rol byte ptr [rbp + 0x3b], cl ; pop rax ; adc byte ptr [rdi + rbp - 1], dh ; ret 0x3b41
0x00000200000d7041 : rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x000002000064ea1d : rol byte ptr [rbp + 0x410e78c0], 0xff ; ret
0x000002000050831a : rol byte ptr [rbp + 0xf0689c0], 0x95 ; ret
0x00000200000ffc81 : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8388
0x00000200001f391c : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8b4c
0x0000020000501800 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000200004ced8d : rol byte ptr [rbp + 0xf], 0x45 ; ret 0xbb41
0x000002000002a7e0 : rol byte ptr [rbp + 0xf], 0x4c ; ret 0xbceb
0x00000200000e9324 : rol byte ptr [rbp + 0xf], 0xa3 ; ret
0x0000020000368487 : rol byte ptr [rbp + 0xf], cl ; rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x00000200001d0df4 : rol byte ptr [rbp + rcx*4 + 0x42], 1 ; and al, ch ; ret 0xf8cd
0x00000200004aea88 : rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x8948
0x00000200001124a8 : rol byte ptr [rbp + rcx*4 + 0x52], cl ; add dword ptr [rax + 0x3b], ecx ; ret
0x0000020000709cef : rol byte ptr [rbp - 0x26baf040], 0x8b ; ret
0x000002000057b3bb : rol byte ptr [rbp - 0x3cbaf037], 0x8b ; fsubr st(1) ; ret
0x000002000042602a : rol byte ptr [rbp - 0x5c77f001], cl ; call qword ptr [rbx]
0x00000200004538a6 : rol byte ptr [rbp - 0x73], cl ; add r8d, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x000002000071ebab : rol byte ptr [rbp - 0x73], cl ; add r8d, ebp ; ret
0x0000020000230d5d : rol byte ptr [rbp - 0x75], 0x44 ; ret
0x000002000019ea70 : rol byte ptr [rbp - 0x75], 0xc6 ; shr r8d, 0x10 ; call r10
0x000002000022d3fd : rol byte ptr [rbp - 0x75], 1 ; ret 0x1ba
0x00000200000dece9 : rol byte ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200000aa835 : rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x00000200004b047b : rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x00000200001334fb : rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x00000200000ed1d4 : rol byte ptr [rbp - 0x75], cl ; ret 0xf49
0x00000200006d039a : rol byte ptr [rbp - 0x75], cl ; ret 0xf741
0x00000200004e92c2 : rol byte ptr [rbp - 0x77fc8740], 1 ; pop rdi ; sub al, 0x8b ; ret 0x8b48
0x0000020000063de2 : rol byte ptr [rbp - 0x7c], cl ; ret
0x0000020000491c67 : rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x000002000045c70f : rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x0000020000398ac9 : rol byte ptr [rbx + 0x3480039], 0xca ; jmp rcx
0x000002000051157c : rol byte ptr [rbx + 0x3589ffdb], 1 ; ret 0xdb83
0x00000200000ca97b : rol byte ptr [rbx + rax*4], 0xc3 ; and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x0000020000602f04 : rol byte ptr [rbx + rax*4], 0xfa ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x000002000021d9ac : rol byte ptr [rbx + rbp - 0x3d], 0x3b ; ret
0x00000200003db245 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003da9fe : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200000f72bc : rol byte ptr [rbx + rcx*4 + 0x44], 1 ; ret 0x4504
0x0000020000162f33 : rol byte ptr [rbx + rcx*4 + 0x45], 1 ; cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x000002000068d167 : rol byte ptr [rbx + rcx*4 + 5], cl ; mov cl, 0xae ; sar bh, 0xff ; ret 0x3b41
0x00000200005dd46c : rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x000002000012e07c : rol byte ptr [rbx - 0x3700fd20], 0xc3 ; xor eax, eax ; ret
0x00000200001f13e7 : rol byte ptr [rbx - 0x3df4fe20], cl ; ret
0x00000200001b841c : rol byte ptr [rbx - 0x3f7cf520], 0xa ; ret
0x000002000043b1e9 : rol byte ptr [rbx - 0x4117fc1d], cl ; push rax ; ret
0x00000200000ad70c : rol byte ptr [rbx - 0x74b7f820], 0x8c ; ret 0x7cc0
0x000002000008c2e4 : rol byte ptr [rbx - 0x74bef71e], cl ; ret
0x0000020000024b75 : rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x000002000002ab38 : rol byte ptr [rbx - 0x75], 0x8c ; ret 0x88
0x0000020000189c37 : rol byte ptr [rbx - 0x7cb70820], 1 ; ret 0x89f8
0x00000200002353d6 : rol byte ptr [rbx - 0x8bec019], 1 ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x00000200003a51d0 : rol byte ptr [rbx], 0x23 ; rol dword ptr [rcx + 1], 0 ; xor eax, eax ; ret
0x000002000038ddd8 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; call rax
0x0000020000107ed3 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; ret
0x00000200004c50b7 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000038cdcb : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; xor r8d, r8d ; call rax
0x00000200000121a3 : rol byte ptr [rbx], 1 ; ret 0x2a05
0x000002000061c0c4 : rol byte ptr [rbx], 1 ; ret 0x4589
0x000002000064699c : rol byte ptr [rbx], 1 ; ret 0xc23b
0x0000020000490f77 : rol byte ptr [rbx], 1 ; ret 0xe8c1
0x0000020000085ac9 : rol byte ptr [rcx + 0x1ff000e2], cl ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200003a4d2c : rol byte ptr [rcx + 0x22], 1 ; ret
0x000002000022d846 : rol byte ptr [rcx + 0x22], 1 ; rol dword ptr [rcx + 0x22], cl ; ret
0x000002000043db08 : rol byte ptr [rcx + 0x23], 0xc0 ; or eax, 5 ; ret
0x0000020000215d3c : rol byte ptr [rcx + 0x23], 1 ; adc al, 0xb ; ret 0x8941
0x00000200001a7bc7 : rol byte ptr [rcx + 0x23], 1 ; add al, 0xb ; ret 0x8b41
0x000002000010c7a7 : rol byte ptr [rcx + 0x23], 1 ; add dword ptr [rbx], ecx ; ret 0x8941
0x00000200001a7b15 : rol byte ptr [rcx + 0x23], cl ; adc eax, dword ptr [rcx + 0x2b] ; ret 0x2341
0x0000020000295351 : rol byte ptr [rcx + 0x3b], 1 ; ret
0x00000200000f9817 : rol byte ptr [rcx + 0x3b], cl ; ret
0x000002000007b31e : rol byte ptr [rcx + 0x400e2], 1 ; add byte ptr [rbx], dh ; ret 0x8348
0x00000200006d25f1 : rol byte ptr [rcx + 0x44], 0xb ; ret
0x000002000037f725 : rol byte ptr [rcx + 0x5f], 0x41 ; pop rsi ; pop r12 ; ret
0x00000200004acc60 : rol byte ptr [rcx + 0x5f], 0x41 ; pop rsi ; ret
0x000002000013428f : rol byte ptr [rcx + 0x69], cl ; ret
0x00000200001001b5 : rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200001dd4c3 : rol byte ptr [rcx + 0xf], 0x44 ; ret
0x00000200003f33db : rol byte ptr [rcx + 0xf], 0x44 ; ret 0x3de9
0x0000020000073830 : rol byte ptr [rcx + 0xf], 0x44 ; ret 0xc13b
0x000002000010773b : rol byte ptr [rcx + 0xf], 0x45 ; ret 0x4489
0x00000200000b3b24 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x0000020000471ddd : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3d83
0x00000200005b26a7 : rol byte ptr [rcx + 0xf], 0xa3 ; ret
0x000002000003b779 : rol byte ptr [rcx + 0xf], 0xb6 ; ret 0x3b45
0x00000200000c42e4 : rol byte ptr [rcx + 0xf], 0xb6 ; ret 0xf44
0x0000020000547786 : rol byte ptr [rcx + 0xf], 0xb7 ; add byte ptr [r9 - 0x75], r8b ; ret 0xe8c1
0x00000200001fb4c2 : rol byte ptr [rcx + 0xf], 1 ; ret 0x8b44
0x0000020000095c20 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0xdae9
0x000002000013e2c4 : rol byte ptr [rcx + 0xf], cl ; mov dh, 0x41 ; inc byte ptr [rcx + 0x3b] ; ret
0x00000200006e8ccc : rol byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; rol byte ptr [rcx - 1], cl ; ret 0xd348
0x000002000014d724 : rol byte ptr [rcx + 3], 1 ; ret
0x00000200000f0821 : rol byte ptr [rcx + rax*2], 0x8b ; ret 0x450f
0x00000200000f9f45 : rol byte ptr [rcx + rax*2], 0x8b ; ret 0xf983
0x00000200000ca8f5 : rol byte ptr [rcx + rcx*2], 0x3b ; ret 0x1b73
0x00000200001a2533 : rol byte ptr [rcx + rcx*2], 0xff ; ret 0xff48
0x00000200003c5546 : rol byte ptr [rcx + rcx*4 + 0x64], 0x24 ; xor al, 0xe9 ; ret
0x0000020000614655 : rol byte ptr [rcx + rcx*4 + 0x74], 0x24 ; sub bh, bh ; ret
0x000002000003364c : rol byte ptr [rcx + rcx*4 + 0xc], 0x81 ; ret
0x00000200001e298e : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200006f8661 : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006f9d51 : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rbp + 0x23], cl ; ret
0x00000200001ea4f6 : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rbx + rsi - 0x7c], cl ; ret
0x00000200005d16f4 : rol byte ptr [rcx - 0x3f], 0xe8 ; add al, cl ; call 0x200421f490a
0x000002000003261e : rol byte ptr [rcx - 0x40], 0xe8 ; add eax, dword ptr [rbp + 0x22] ; ret
0x00000200004508bb : rol byte ptr [rcx - 0x41], 0x22 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000c2a2a : rol byte ptr [rcx - 0x42], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000aadf5 : rol byte ptr [rcx - 0x46], 1 ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x00000200006e9205 : rol byte ptr [rcx - 0x46], 2 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x473
0x00000200007157b4 : rol byte ptr [rcx - 0x47], 0xff ; inc dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200000f9f77 : rol byte ptr [rcx - 0x4e], cl ; add dword ptr [rax - 0x77], ecx ; adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x00000200001495d6 : rol byte ptr [rcx - 0x73], 0x49 ; xor dword ptr [rax - 0x39], ecx ; ret 1
0x000002000037b309 : rol byte ptr [rcx - 0x73], 0x50 ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000055f4c7 : rol byte ptr [rcx - 0x73], 0x50 ; xor ebp, eax ; ret
0x00000200000f76f9 : rol byte ptr [rcx - 0x73], 1 ; inc dword ptr [r11] ; ret 0xc0ff
0x0000020000223aa0 : rol byte ptr [rcx - 0x75], 0x84 ; ret
0x00000200004beea5 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x18 ; ret
0x0000020000101eab : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x000002000014aea9 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c1561 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x48 ; ret
0x0000020000095ecf : rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200002155b9 : rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x00000200001dc746 : rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x00000200005c5bf3 : rol byte ptr [rcx - 0x75], 0xd7 ; mov rcx, rdi ; call 0x20000431ed1
0x00000200000ac802 : rol byte ptr [rcx - 0x75], 1 ; or byte ptr [r8 + 0x23], cl ; ret
0x00000200000f0a31 : rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000189be0 : rol byte ptr [rcx - 0x75], 1 ; ret 0x2b4c
0x000002000060e513 : rol byte ptr [rcx - 0x75], 1 ; ret 0x5eb
0x00000200000bfea4 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8348
0x0000020000131bad : rol byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x0000020000235395 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8b4d
0x0000020000227e21 : rol byte ptr [rcx - 0x75], 1 ; ret 0xca8b
0x0000020000204d5a : rol byte ptr [rcx - 0x75], 1 ; ret 0xe0c1
0x00000200000c3855 : rol byte ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x45 ; ret 0xe82b
0x0000020000401a02 : rol byte ptr [rcx - 0x75], 1 ; salc ; call 0x2000014dc66
0x00000200005589cd : rol byte ptr [rcx - 0x75], 1 ; salc ; call rax
0x000002000012aa3f : rol byte ptr [rcx - 0x75], cl ; ret
0x0000020000654751 : rol byte ptr [rcx - 0x75], cl ; ret 0x2366
0x0000020000673007 : rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x000002000048729f : rol byte ptr [rcx - 0x75], cl ; ret 0x4489
0x000002000051f8a7 : rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200000e9e67 : rol byte ptr [rcx - 0x75], cl ; ret 0x950f
0x000002000036f294 : rol byte ptr [rcx - 0x75], cl ; ret 0xe0c1
0x00000200001a7b08 : rol byte ptr [rcx - 0x75], cl ; ret 0xe2d3
0x00000200000e3b82 : rol byte ptr [rcx - 0x75], cl ; ret 0xe7e9
0x00000200001ca2e9 : rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x000002000012aa28 : rol byte ptr [rcx - 0x75], cl ; ret 0xf6f7
0x00000200000ea3dd : rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000045a595 : rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000008cc0d : rol byte ptr [rcx - 0x75], cl ; sal bh, 0xf1 ; ret
0x000002000072d99e : rol byte ptr [rcx - 0x76], 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000020000402fef : rol byte ptr [rcx - 0x76], 1 ; ret 0x8348
0x0000020000152072 : rol byte ptr [rcx - 0x77], 1 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200007157a2 : rol byte ptr [rcx - 0x77], 4 ; mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000577db5 : rol byte ptr [rcx - 0x77], 8 ; pop rbx ; ret
0x00000200001bd64b : rol byte ptr [rcx - 0x77], 9 ; ret
0x00000200006c711a : rol byte ptr [rcx - 0x78], 1 ; adc byte ptr [rbp + 3], cl ; ret
0x000002000052054d : rol byte ptr [rcx - 0x78], 8 ; mov byte ptr [r9], al ; ret
0x000002000021217d : rol byte ptr [rcx - 0x7c], 1 ; ret 0x674
0x0000020000227ec6 : rol byte ptr [rcx - 0x7d], 0xcc ; inc dword ptr [rcx + 0x3a] ; ret 0xb77
0x00000200006e977e : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4141
0x00000200006d0406 : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4541
0x000002000036db1b : rol byte ptr [rcx - 0x7f], cl ; ret
0x0000020000115cba : rol byte ptr [rcx - 0x80], 0xe8 ; mov byte ptr [rdx], r8b ; ret
0x00000200004db4a1 : rol byte ptr [rcx - 0xa], 0xc0 ; jne 0x200004db4b0 ; ret
0x00000200000c0678 : rol byte ptr [rcx - 0xa], 1 ; ret
0x00000200004e7989 : rol byte ptr [rcx - 0xa], cl ; ret 0x7501
0x00000200004e7a6e : rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x00000200005a3002 : rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x00000200005a2ff6 : rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x00000200000fcf90 : rol byte ptr [rcx - 1], 1 ; ret
0x00000200006e8cd0 : rol byte ptr [rcx - 1], cl ; ret 0xd348
0x00000200006f7ea2 : rol byte ptr [rcx], 0 ; add byte ptr [rbx], bh ; ret
0x000002000021f7a6 : rol byte ptr [rcx], 0xac ; ret
0x0000020000121e32 : rol byte ptr [rcx], 0xf ; test dword ptr [rcx], eax ; ret
0x000002000024b574 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; ret
0x00000200001fe14e : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; mov rdx, rdi ; call rax
0x000002000001249b : rol byte ptr [rcx], 1 ; ret 0x30c
0x0000020000520163 : rol byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000662325 : rol byte ptr [rdi + 0x2edfc05], 0 ; ret
0x00000200004db4a4 : rol byte ptr [rdi + 0x75], 1 ; ret
0x00000200000fd319 : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; ret
0x00000200005b68ec : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0xce3b
0x00000200000e05fd : rol byte ptr [rdi + rcx + 0x49], 0xc2 ; jmp 0x200000e05ba
0x000002000019906b : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret
0x000002000020742f : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret 0xeb0c
0x00000200004419f1 : rol byte ptr [rdi + rcx - 0x49], 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200003948dd : rol byte ptr [rdi + rcx - 0x4a], 1 ; ret
0x0000020000036e55 : rol byte ptr [rdi + rcx - 0x4a], 4 ; ret 0x1ba
0x000002000015e339 : rol byte ptr [rdi - 0x33333cfe], 0xcc ; mov al, 1 ; ret
0x000002000000ea72 : rol byte ptr [rdi - 0x3a], cl ; ret
0x000002000066edce : rol byte ptr [rdi], 0x75 ; jmp 0x1ff8bafffca
0x000002000009c0f2 : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; ret
0x0000020000140247 : rol byte ptr [rdx - 0x75], 0x44 ; ret
0x00000200004d9fd8 : rol byte ptr [rdx - 0x75], 0x44 ; ret 0xa814
0x00000200006c72ba : rol byte ptr [rdx], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0xf8bf
0x0000020000611e1c : rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x0000020000033a68 : rol byte ptr [rdx], 0x48 ; lea eax, dword ptr [rcx + rax*4] ; ret
0x000002000020a21d : rol byte ptr [rdx], 0x48 ; mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x000002000006fe54 : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x00000200000b4dd1 : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x0000020000650a18 : rol byte ptr [rdx], 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200005b8183 : rol byte ptr [rdx], 0x83 ; ret 0x4102
0x000002000014d46c : rol byte ptr [rdx], 0x89 ; xlatb ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200003dcc1b : rol byte ptr [rdx], 0xc1 ; ret 0x4108
0x000002000045c711 : rol byte ptr [rdx], 0xc3 ; xor eax, eax ; ret
0x0000020000104797 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000200000124a3 : rol byte ptr [rdx], 2 ; ret
0x0000020000422413 : rol byte ptr [rip + 0x49c10348], 0x3b ; ret 0x870f
0x00000200001ea9fc : rol byte ptr [rip - 0x72b726d5], 4 ; ret 0xcb8b
0x000002000003363a : rol byte ptr [rsi], 0x48 ; shl eax, 4 ; add rax, rdx ; ret
0x0000020000434b5e : rol byte ptr [rsi], 1 ; add byte ptr [rax], al ; ret
0x0000020000002840 : rol cl, 0xc2 ; ret
0x00000200001e1c1a : rol cl, 0xe0 ; adc byte ptr [rax + 3], cl ; ret 0x3b4c
0x000002000044944f : rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x000002000038961b : rol cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x0000020000625430 : rol cl, 0xe0 ; or eax, 0x23184633 ; ret 0x4631
0x00000200004d4929 : rol cl, 0xe2 ; add al, 0x83 ; ret 0xe830
0x000002000045c261 : rol cl, 0xe8 ; or al, 0x3b ; ret
0x00000200003ddf6d : rol cl, 1 ; ret 0x4805
0x00000200004dcd88 : rol dh, 0xff ; add rsp, 0x48 ; ret
0x00000200004a3db6 : rol dword ptr [r9 + 0x3b], cl ; ret
0x000002000012a344 : rol dword ptr [r9 - 0x77], 0x40 ; pop rsp ; ret
0x0000020000159ef9 : rol dword ptr [rax + 0x48000000], 0xf ; ret
0x00000200004a062d : rol dword ptr [rax + 0x75], 3 ; xor al, al ; ret
0x00000200000ca8b8 : rol dword ptr [rax + 0x77501f9], -1 ; ret
0x00000200004393c4 : rol dword ptr [rax + 0xf], -0x7b ; ret
0x000002000064bf87 : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5489
0x000002000040c12d : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5589
0x00000200001b2a94 : rol dword ptr [rax + rcx*4 + 0x4d], -0x7e ; jmp 0x2000012c1f8
0x000002000013fe90 : rol dword ptr [rax + rdi + 0x1a], 0x75 ; add al, 0x48 ; mov eax, ecx ; ret
0x00000200004c5f18 : rol dword ptr [rax - 0x588dfd06], cl ; mov al, 2 ; ret
0x0000020000151d44 : rol dword ptr [rax - 0x76], -0x3a ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000209f8e : rol dword ptr [rax], -1 ; add byte ptr [rax], al ; setbe al ; ret
0x000002000066f9f1 : rol dword ptr [rax], 0 ; add al, ch ; pop rsi ; ret 0xffbb
0x00000200001de451 : rol dword ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000002000014f275 : rol dword ptr [rax], 0 ; add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x000002000015039b : rol dword ptr [rax], 0 ; ret
0x00000200001a764f : rol dword ptr [rax], 0x46 ; ret
0x0000020000644d18 : rol dword ptr [rbp + 0x23], 1 ; sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x00000200000ff7e2 : rol dword ptr [rbp + 0x33037510], -0x40 ; ret
0x0000020000435fde : rol dword ptr [rbp + 0x440f41c0], -0x40 ; ret
0x000002000048c049 : rol dword ptr [rbp + 0xa4], 3 ; ret
0x000002000050fbff : rol dword ptr [rbp + 0xf], -0x51 ; ret
0x0000020000294d46 : rol dword ptr [rbp + 0xf], 0x47 ; ret 0x3b44
0x00000200002942e4 : rol dword ptr [rbp + 0xf], 0x47 ; ret 0x8944
0x000002000046d286 : rol dword ptr [rbp + 3], cl ; ret
0x00000200001ac7c6 : rol dword ptr [rbp - 0x19], 0x3b ; ret
0x00000200005f4eb3 : rol dword ptr [rbp - 0x33], -1 ; jmp 0x200005f4e81
0x000002000049fe45 : rol dword ptr [rbp - 0x3f6bf036], 1 ; ret
0x00000200005e9ebd : rol dword ptr [rbp - 0x73], 0x45 ; add ah, byte ptr [rbx] ; ret 0x8d45
0x0000020000640d56 : rol dword ptr [rbp - 0x75], 1 ; ret
0x0000020000117194 : rol dword ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200000ca9db : rol dword ptr [rbp - 0x75], cl ; ret
0x0000020000464853 : rol dword ptr [rbp - 0x76], cl ; ret
0x000002000050702b : rol dword ptr [rbp - 0x78], 8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000c3b00 : rol dword ptr [rbp - 0xd78a37], 1 ; ret
0x00000200001bd6bf : rol dword ptr [rbx + 0x18], 3 ; ret 0xc23b
0x00000200003daac0 : rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x00000200006cf145 : rol dword ptr [rbx + 0x3483fe1], 1 ; ret
0x000002000008e9ad : rol dword ptr [rbx + 0x34d07e3], cl ; ret
0x00000200006144c3 : rol dword ptr [rbx + 0xe7208f8], -1 ; ret
0x00000200001405f5 : rol dword ptr [rbx + rbp - 0x3f], 1 ; mov eax, r8d ; ret
0x000002000050c8b7 : rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x48d
0x00000200003e6759 : rol dword ptr [rbx + rdi - 0x40], 0xf ; xchg ebp, ecx ; ret 0x16
0x0000020000140f4a : rol dword ptr [rbx - 0x35c40036], 0xf ; ret 0x6348
0x000002000061a1af : rol dword ptr [rbx - 0x73], 0xc ; or eax, dword ptr [rcx + 3] ; ret
0x00000200000d07c7 : rol dword ptr [rbx - 0x74b7f020], 0x4c ; ret
0x000002000020ef42 : rol dword ptr [rbx - 0xb7c01e], 1 ; ret 0xc148
0x00000200005cea33 : rol dword ptr [rcx + 0x10], 3 ; ret
0x00000200005cea96 : rol dword ptr [rcx + 0x18], 3 ; ret
0x00000200002049e8 : rol dword ptr [rcx + 0x20], 3 ; ret 0xc23b
0x000002000022d849 : rol dword ptr [rcx + 0x22], cl ; ret
0x00000200003da896 : rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200003daf27 : rol dword ptr [rcx + 0x33], -0x3f ; ret
0x0000020000590331 : rol dword ptr [rcx + 0x3b], -0x38 ; jb 0x200005902fd ; jmp 0x200004ac570
0x00000200004a3db7 : rol dword ptr [rcx + 0x3b], cl ; ret
0x00000200004052ca : rol dword ptr [rcx + 0x5f], 0x5f ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011de9c : rol dword ptr [rcx + 0x68], 3 ; ret
0x000002000066aadd : rol dword ptr [rcx + 0xa0], 0x33 ; imul byte ptr [rbx] ; ret 0x4779
0x000002000066a9b3 : rol dword ptr [rcx + 0xbc], 3 ; ret 0x8445
0x0000020000617afd : rol dword ptr [rcx + 0xf], -0x49 ; leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001967ff : rol dword ptr [rcx + 0xf], -0x4a ; ret 0x8341
0x0000020000041415 : rol dword ptr [rcx + 0xf], -0x51 ; ret 0x341
0x0000020000086693 : rol dword ptr [rcx + 0xf], 0x44 ; ret 0x3b48
0x0000020000082d63 : rol dword ptr [rcx + 0xf], 0x44 ; ret 0x4589
0x000002000047335c : rol dword ptr [rcx + 0xf], 1 ; ret 0xc933
0x00000200004a3db3 : rol dword ptr [rcx + 0xf], 1 ; rol dword ptr [r9 + 0x3b], cl ; ret
0x00000200003a51d3 : rol dword ptr [rcx + 1], 0 ; xor eax, eax ; ret
0x0000020000616b99 : rol dword ptr [rcx + 3], -0x3e ; jmp 0x20000616ba5
0x00000200003da9c7 : rol dword ptr [rcx + 3], -0x3f ; ret
0x0000020000463fe1 : rol dword ptr [rcx + 8], 3 ; ret 0x840f
0x00000200005829db : rol dword ptr [rcx + rax*2], 0x3b ; ret
0x00000200005903de : rol dword ptr [rcx + rbp*8], 0x42 ; ret 0xfff1
0x000002000008e4d8 : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4408
0x000002000072c2e5 : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x6602
0x00000200005829d7 : rol dword ptr [rcx + rcx*2], -0x7d ; rol dword ptr [rcx + rax*2], 0x3b ; ret
0x000002000013e2e5 : rol dword ptr [rcx + rcx*2], 0x63 ; ret 0x8348
0x00000200004bd1d5 : rol dword ptr [rcx + rdi + 0x51], 0x68 ; jne 0x200004bd1e8 ; xor al, al ; ret
0x00000200004a33ad : rol dword ptr [rcx - 0x10], 0x48 ; test eax, eax ; jle 0x200004a33be ; ret
0x0000020000083b1d : rol dword ptr [rcx - 0x3f], -0x20 ; add cl, byte ptr [rbx] ; ret 0x225
0x000002000020b9e5 : rol dword ptr [rcx - 0x47], 1 ; add byte ptr [rax + rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x0000020000090563 : rol dword ptr [rcx - 0x49], 1 ; adc byte ptr [rax + rdi - 0x41], al ; ret
0x0000020000213f12 : rol dword ptr [rcx - 0x73], 1 ; add dword ptr [r9 + 0x3b], eax ; ret 0xdd75
0x000002000013c320 : rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200000e215b : rol dword ptr [rcx - 0x75], -0x40 ; add rsp, 0x38 ; ret
0x00000200000e7126 : rol dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200000c0055 : rol dword ptr [rcx - 0x75], 1 ; ret
0x00000200003dad6b : rol dword ptr [rcx - 0x75], 1 ; ret 0x48c3
0x00000200001ab27a : rol dword ptr [rcx - 0x75], 1 ; ret 0xf45
0x00000200001942c4 : rol dword ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x000002000005915d : rol dword ptr [rcx - 0x75], cl ; ret
0x00000200001b5182 : rol dword ptr [rcx - 0x75], cl ; ret 0x3b49
0x000002000012b0ea : rol dword ptr [rcx - 0x75], cl ; ret 0xe0c1
0x00000200006361aa : rol dword ptr [rcx - 0x76], 1 ; add ah, byte ptr [rdx] ; ret
0x000002000013c328 : rol dword ptr [rcx - 0x76], 1 ; shr ebx, -0x21 ; xor eax, eax ; ret
0x000002000036848b : rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x000002000012a345 : rol dword ptr [rcx - 0x77], 0x40 ; pop rsp ; ret
0x000002000036960d : rol dword ptr [rcx - 0x7d], -0x3e ; add al, byte ptr [rbp - 0x75] ; ret
0x00000200002172b5 : rol dword ptr [rcx - 0xff37], 1 ; jmp qword ptr [rbx]
0x00000200002059ca : rol dword ptr [rcx - 1], cl ; push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x00000200002198b9 : rol dword ptr [rcx - 1], cl ; ret 0x8b41
0x000002000007f62c : rol dword ptr [rcx], 0 ; add byte ptr [rsi - 1], ah ; ret
0x00000200004ab7ee : rol dword ptr [rcx], 0 ; add dh, dh ; ret 0xf02
0x00000200006750f8 : rol dword ptr [rcx], 0 ; mov eax, dword ptr [rip + 0x1bfb3] ; ret
0x00000200005373a7 : rol dword ptr [rcx], 0x74 ; or esi, esi ; ret
0x000002000021d103 : rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x000002000040cbfe : rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x00000200000c3b99 : rol dword ptr [rcx], 0x75 ; or byte ptr [rcx + 0x3b], al ; ret 0x8a41
0x000002000016e9d1 : rol dword ptr [rcx], 0x75 ; or dword ptr [rcx + 0x3b], eax ; ret
0x00000200000d0a1d : rol dword ptr [rcx], 0x75 ; out -0x75, eax ; ret
0x0000020000058e21 : rol dword ptr [rdi + 0x2d04], 3 ; ret 0x850f
0x000002000048c8a6 : rol dword ptr [rdi + 0xa0], 3 ; ret
0x000002000048ca74 : rol dword ptr [rdi + 0xa4], 3 ; ret
0x0000020000096874 : rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x000002000003335a : rol dword ptr [rdi + rcx + 0x22], -0x40 ; ret
0x00000200001c45df : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0x8b48
0x00000200004cb1c2 : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0x8b49
0x000002000047360a : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0x8d48
0x0000020000382178 : rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x00000200001d95ed : rol dword ptr [rdi + rcx - 0x49], cl ; enter 0xf44, -0x49 ; ret 0x4166
0x00000200004a5e14 : rol dword ptr [rdi + rcx - 0x49], cl ; ret 0x8b48
0x000002000013d1a9 : rol dword ptr [rdi], cl ; add byte ptr [rcx - 1], al ; ret 0x8348
0x00000200000b0452 : rol dword ptr [rdx + 0x10], -0x7d ; jmp qword ptr [rax]
0x00000200000ca1a7 : rol dword ptr [rdx + 0x10], 0x48 ; add esp, 0x38 ; ret
0x00000200007195ab : rol dword ptr [rdx - 0x5c], 1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000062b9ec : rol dword ptr [rdx - 0x75], 4 ; ret
0x00000200004bcade : rol dword ptr [rdx], -0x15 ; call 0x200330ecc9f
0x000002000025386d : rol dword ptr [rdx], -0x15 ; ret
0x00000200003ddf33 : rol dword ptr [rdx], -0x3f ; ret 0x4106
0x000002000041aa05 : rol dword ptr [rdx], -0x75 ; ret
0x000002000039c78a : rol dword ptr [rdx], -0x7d ; ret 0x4802
0x000002000057b94b : rol dword ptr [rdx], -0x7d ; ret 0x8902
0x00000200002281eb : rol dword ptr [rdx], -1 ; ret 0xf983
0x00000200001420f6 : rol dword ptr [rdx], 0x48 ; cmp eax, edx ; jb 0x200001420f2 ; ret
0x00000200004a3854 : rol dword ptr [rdx], 0x48 ; dec edx ; jne 0x200004a3853 ; ret
0x00000200004f45cd : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx + 0x28], ecx ; ret
0x0000020000148d41 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x0000020000140c7d : rol dword ptr [rdx], 0x4d ; cmp ecx, eax ; jb 0x20000140c70 ; mov rax, r10 ; ret
0x0000020000140bb6 : rol dword ptr [rdx], 0x4d ; test eax, eax ; jne 0x20000140baf ; ret
0x00000200000dc007 : rol dword ptr [rdx], 0x74 ; add eax, 0x28c48348 ; ret
0x00000200001bc012 : rol dword ptr [rip + 0x126000], 3 ; ret
0x00000200004746fe : rol dword ptr [rip + 0x236174], 3 ; ret
0x00000200001fb9f9 : rol dword ptr [rip + 0xb4441], 3 ; ret 0xc23b
0x00000200001eb83b : rol dword ptr [rip + 0xb4a9f], 3 ; ret
0x00000200005f2d37 : rol dword ptr [rip - 0x329699], 3 ; ret 0xe083
0x00000200005f2dab : rol dword ptr [rip - 0x329711], 3 ; ret 0xe083
0x00000200000adbb4 : rol dword ptr [rsi + 0x10], 3 ; ret
0x00000200003d4b76 : rol dword ptr [rsi + 0x4d8], -0xa ; ret
0x0000020000519145 : rol dword ptr [rsi + 0xa4], 3 ; ret
0x0000020000579c0f : rol dword ptr [rsi + 8], 3 ; ret 0x850f
0x000002000025dd9d : rol dword ptr [rsi], -0x63 ; ret 0x46
0x000002000015e235 : rol ebx, -0x34 ; mov eax, 0xc0000002 ; ret
0x00000200003ec0da : rol ebx, -0x3f ; call 0x200331babf4
0x00000200000b5975 : rol ebx, -0x48 ; xor al, 0 ; add al, al ; ret
0x00000200005c865d : rol ebx, -0x75 ; ret 0xccc3
0x00000200003f25cd : rol ebx, -0x76 ; ret 0x724
0x00000200004b8beb : rol ebx, -1 ; ret 0x8349
0x0000020000492b93 : rol ebx, 0x41 ; movsx eax, cl ; xor eax, 0x20 ; ret
0x000002000038ff20 : rol ebx, 0x41 ; movzx eax, cx ; sub eax, 0x20 ; ret
0x00000200000b28fa : rol ebx, 0x44 ; mov rax, cr0 ; ret
0x00000200001c4ca3 : rol ebx, 1 ; sbb byte ptr [rax], al ; ret
0x0000020000157af3 : rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200002310ae : rol ecx, -0x18 ; or al, 0x23 ; ret 0xc63b
0x000002000020a1ab : rol ecx, 1 ; cli ; add al, 0x8b ; ret 0xe8c1
0x00000200003ddf31 : rol ecx, 1 ; rol dword ptr [rdx], -0x3f ; ret 0x4106
0x00000200004e218f : rol edi, 0x44 ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x00000200000eca62 : rol edx, 0x13 ; mov dword ptr [r9 + 4], r10d ; ret
0x000002000028a9c8 : rol edx, 0x5f ; add ah, cl ; ret 0x5f
0x00000200000eca61 : rol r10d, 0x13 ; mov dword ptr [r9 + 4], r10d ; ret
0x000002000013ffb4 : ror byte ptr [r13 - 0x75], 1 ; ret
0x000002000044299a : ror byte ptr [r8 + 0x63], 1 ; ret 0x8348
0x0000020000049cf7 : ror byte ptr [r8 + 0x63], 1 ; ror dword ptr [rax + 0x2b], cl ; ret 0x8548
0x0000020000159f0b : ror byte ptr [r8 + 0xf], 1 ; ret
0x00000200003f5ca1 : ror byte ptr [r8 + 3], 1 ; ret
0x0000020000505435 : ror byte ptr [r8 + 3], 1 ; ret 0xce8b
0x00000200006449be : ror byte ptr [r8 - 0x73], 1 ; push rbp ; fsubr st(0) ; ret
0x000002000048bef6 : ror byte ptr [r8 - 0x75], 1 ; ret
0x0000020000442996 : ror byte ptr [r8 - 0x75], 1 ; ror byte ptr [r8 + 0x63], 1 ; ret 0x8348
0x0000020000404cba : ror byte ptr [r8 - 0x77], 0x44 ; and al, 0x20 ; call r10
0x000002000065d2c8 : ror byte ptr [r8 - 0x7d], 1 ; ret 0x4540
0x000002000051431f : ror byte ptr [r8 - 0x7d], 1 ; ret 0xe804
0x000002000002a6dc : ror byte ptr [r9 + 0xf], 0xbd ; enter 0xf41, -0x49 ; ret
0x000002000040e5f5 : ror byte ptr [r9 + 3], 1 ; ret 0x3b48
0x00000200000c36e7 : ror byte ptr [r9 - 0x3f], 1 ; call 0x1ffc24783fc
0x00000200004e194d : ror byte ptr [r9 - 0x4a173783], 0xa1 ; ret
0x00000200004d952d : ror byte ptr [r9 - 0x73], 0x4f ; sbb byte ptr [rax - 0x73], cl ; push rbp ; ret 0x4166
0x00000200000727aa : ror byte ptr [rax + 0x23], 0xc1 ; ret
0x0000020000191fc7 : ror byte ptr [rax + 0x23], 0xf8 ; jmp 0x200000be210
0x0000020000186ba1 : ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x0000020000722871 : ror byte ptr [rax + 0x23], 1 ; ret 0x234c
0x0000020000585305 : ror byte ptr [rax + 0x23], 1 ; ror dword ptr [rbx - 0x40], -0x17 ; ret
0x000002000036613b : ror byte ptr [rax + 0x23], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001e238a : ror byte ptr [rax + 0x23], cl ; ret 0x8d45
0x00000200000fd228 : ror byte ptr [rax + 0x23], cl ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200000c6d68 : ror byte ptr [rax + 0x2b], 0x4f ; adc byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000132da0 : ror byte ptr [rax + 0x2b], 1 ; ret
0x000002000058f375 : ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x0000020000085ada : ror byte ptr [rax + 0x2b], 1 ; ret 0x8d4a
0x0000020000142009 : ror byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 0x2f], -8 ; ret
0x00000200000a2673 : ror byte ptr [rax + 0x33], 0x47 ; sub byte ptr [rcx + 0x23], cl ; ret
0x00000200001f58ef : ror byte ptr [rax + 0x33], 1 ; fimul dword ptr [rax - 0x75] ; ret
0x00000200006d67c6 : ror byte ptr [rax + 0x33], 1 ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x0000020000614162 : ror byte ptr [rax + 0x39], 0x1c ; ret 0x9d74
0x0000020000563634 : ror byte ptr [rax + 0x39], 0x6c ; ret
0x00000200000de641 : ror byte ptr [rax + 0x39], 1 ; sete al ; ret
0x0000020000057eb8 : ror byte ptr [rax + 0x3b], 0x1c ; ret 0x3c73
0x0000020000057ea8 : ror byte ptr [rax + 0x3b], 0x1c ; ret 0x5372
0x0000020000057f08 : ror byte ptr [rax + 0x3b], 0x1c ; ret 0xb073
0x00000200004add1f : ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7570
0x00000200000d0bba : ror byte ptr [rax + 0x3b], 0xc2 ; je 0x200000d0bd3 ; ret
0x0000020000054c18 : ror byte ptr [rax + 0x3b], 0xca ; seta al ; ret
0x0000020000126efb : ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x0000020000190f35 : ror byte ptr [rax + 0x3b], 1 ; ret
0x0000020000184fb6 : ror byte ptr [rax + 0x3b], 1 ; ret 0x830f
0x0000020000231ee7 : ror byte ptr [rax + 0x4a880242], 1 ; ret
0x000002000003d1a5 : ror byte ptr [rax + 0x63], 1 ; ret 0x694c
0x000002000044299b : ror byte ptr [rax + 0x63], 1 ; ret 0x8348
0x000002000008e717 : ror byte ptr [rax + 0x63], 1 ; ret 0x8d4e
0x0000020000049cf8 : ror byte ptr [rax + 0x63], 1 ; ror dword ptr [rax + 0x2b], cl ; ret 0x8548
0x0000020000148f52 : ror byte ptr [rax + 0x69], 1 ; ret 0xe100
0x00000200004084bf : ror byte ptr [rax + 0x6b], 0xc0 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200000a4e8d : ror byte ptr [rax + 0x8e81], 0 ; ret
0x000002000020752b : ror byte ptr [rax + 0xb], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000814db : ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200001d1374 : ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x00000200003699a2 : ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x000002000005929a : ror byte ptr [rax + 0xf], 0x44 ; ret
0x0000020000159f0c : ror byte ptr [rax + 0xf], 1 ; ret
0x00000200005f77d7 : ror byte ptr [rax + 0xf], 1 ; ret 0x348
0x000002000022a9d6 : ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x00000200003e7330 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7501
0x000002000047b325 : ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000020000202663 : ror byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200000e3df2 : ror byte ptr [rax + 3], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070a9e7 : ror byte ptr [rax + 3], 1 ; enter 0xf45, -0x4a ; ret 0x8b41
0x00000200000fe254 : ror byte ptr [rax + 3], 1 ; ret
0x0000020000505436 : ror byte ptr [rax + 3], 1 ; ret 0xce8b
0x000002000052018d : ror byte ptr [rax + 5], cl ; add al, 0x10 ; add byte ptr [rax], al ; add rax, rdx ; ret
0x0000020000012496 : ror byte ptr [rax + rcx], 0 ; cwde ; rol byte ptr [rcx], 1 ; ret 0x30c
0x00000200006d7587 : ror byte ptr [rax - 0x2d], 1 ; ret 0x341
0x000002000037d08c : ror byte ptr [rax - 0x2d], 1 ; ret 0x344
0x000002000014917e : ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200002353dc : ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x00000200006cd9b8 : ror byte ptr [rax - 0x2d], 1 ; ret 0xcbff
0x00000200006d9679 : ror byte ptr [rax - 0x2d], 1 ; ret 0xde03
0x00000200006c5f4d : ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200003fea29 : ror byte ptr [rax - 0x2f], 0xe8 ; ret
0x0000020000033628 : ror byte ptr [rax - 0x3f], 0xe0 ; add al, 0x48 ; add eax, ecx ; ret
0x0000020000490932 : ror byte ptr [rax - 0x3f], 0xe1 ; add eax, dword ptr [rbx] ; ret 0x8948
0x000002000007784c : ror byte ptr [rax - 0x3f], 0xe8 ; or dword ptr [rax + 0x23], ecx ; ret 0x2b49
0x00000200000993bd : ror byte ptr [rax - 0x3f], 0xe8 ; or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200000df074 : ror byte ptr [rax - 0x3f], 0xea ; and byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf49
0x000002000036e82a : ror byte ptr [rax - 0x3f], 1 ; ret 0x482b
0x00000200000b1e3c : ror byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000022aabb : ror byte ptr [rax - 0x3f], cl ; call qword ptr [rdx]
0x00000200003ee429 : ror byte ptr [rax - 0x44473cf6], 0 ; add al, al ; ret
0x000002000023524a : ror byte ptr [rax - 0x48], 0x7f ; out 0x30, eax ; ret 0x3b88
0x00000200000c33d4 : ror byte ptr [rax - 0x4914e4bd], 0x8a ; ret 0x2a41
0x0000020000460ec5 : ror byte ptr [rax - 0x57], 5 ; jmp rax
0x00000200004348e7 : ror byte ptr [rax - 0x73], 0x14 ; ret
0x000002000036837f : ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x00000200000c0135 : ror byte ptr [rax - 0x73], 0x3d ; ret
0x00000200005c2a9d : ror byte ptr [rax - 0x73], 0x4d ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000646154 : ror byte ptr [rax - 0x73], 0x4d ; fsubr st(0) ; ret 0xa29c
0x00000200000a23c2 : ror byte ptr [rax - 0x73], 0x52 ; or byte ptr [rcx + 0x3b], cl ; ret 0xea72
0x000002000021ce73 : ror byte ptr [rax - 0x73], 0x71 ; add al, 0x3b ; ret 0x470f
0x00000200005c20c2 : ror byte ptr [rax - 0x73], 0xc ; ret
0x000002000003aad2 : ror byte ptr [rax - 0x73], 0xc ; ret 0x878b
0x00000200003d1846 : ror byte ptr [rax - 0x73], 0xd ; jp 0x200003d17f5 ; ret
0x00000200003ef943 : ror byte ptr [rax - 0x73], 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xbaff
0x0000020000049e35 : ror byte ptr [rax - 0x73], 0xd ; ret
0x00000200003fd8b4 : ror byte ptr [rax - 0x73], 1 ; or al, 0x49 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200006449bf : ror byte ptr [rax - 0x73], 1 ; push rbp ; fsubr st(0) ; ret
0x0000020000134df8 : ror byte ptr [rax - 0x73], 4 ; adc ecx, dword ptr [rbp + 0x33] ; ret 0x8349
0x000002000036837b : ror byte ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x0000020000729f25 : ror byte ptr [rax - 0x73], 5 ; ja 0x20000729fa4 ; ret 0x48ff
0x00000200000b6506 : ror byte ptr [rax - 0x73], 5 ; ret 0xa7e
0x000002000051d0d3 : ror byte ptr [rax - 0x73], cl ; sbb r15b, dil ; ret 0x8948
0x0000020000141a87 : ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x0000020000096567 : ror byte ptr [rax - 0x75], 0x1c ; ret 0x8148
0x00000200001002fb : ror byte ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x0000020000446f6b : ror byte ptr [rax - 0x75], 0x4c ; and al, 0x78 ; call 0x20000068fd9
0x00000200001aef45 : ror byte ptr [rax - 0x75], 0x4c ; ret
0x0000020000162a1c : ror byte ptr [rax - 0x75], 0x55 ; cmp byte ptr [rax - 0x75], cl ; call rax
0x0000020000163078 : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000022ea29 : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x10 ; ret
0x000002000023964b : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, ecx ; ret
0x000002000063ec84 : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, r8d ; ret
0x000002000008ea05 : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004c19a7 : ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x00000200004d5a90 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x00000200001a219f : ror byte ptr [rax - 0x75], 0x8c ; ret
0x000002000038cdf7 : ror byte ptr [rax - 0x75], 0xcb ; call rax
0x0000020000443c0e : ror byte ptr [rax - 0x75], 0xcd ; call 0x2000006a617
0x0000020000443ba2 : ror byte ptr [rax - 0x75], 0xcd ; xor edx, edx ; call 0x200000702b9
0x000002000053cdc1 : ror byte ptr [rax - 0x75], 0xce ; call 0x20000068fd6
0x00000200004465a3 : ror byte ptr [rax - 0x75], 0xce ; xor edx, edx ; call 0x200000702b9
0x000002000045e394 : ror byte ptr [rax - 0x75], 0xcf ; call 0x2000006a616
0x0000020000501469 : ror byte ptr [rax - 0x75], 0xcf ; call r15
0x0000020000233472 : ror byte ptr [rax - 0x75], 0xd0 ; sub r8d, r14d ; call 0x2000022f739
0x00000200004be40d : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call r10
0x000002000010b1fd : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call rsi
0x00000200001b496a : ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200001c1d19 : ror byte ptr [rax - 0x75], 0xd7 ; mov rcx, rbx ; call r10
0x00000200001e4447 : ror byte ptr [rax - 0x75], 1 ; int 0xe8
0x00000200003fd630 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x20000027bc3
0x0000020000114631 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x20000070846
0x00000200004444e9 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x20000070847
0x000002000048f114 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x200000bc6cb
0x000002000020bb8a : ror byte ptr [rax - 0x75], 1 ; ret
0x0000020000134a46 : ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001d84fc : ror byte ptr [rax - 0x75], 1 ; ret 0x2349
0x00000200001c7843 : ror byte ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200002087fe : ror byte ptr [rax - 0x75], 1 ; ret 0x4eb
0x00000200006cee39 : ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200001b6482 : ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000721c86 : ror byte ptr [rax - 0x75], 1 ; ret 0xd148
0x00000200003fcb86 : ror byte ptr [rax - 0x75], 1 ; retf ; call 0x20000027bc3
0x00000200004463d6 : ror byte ptr [rax - 0x75], 1 ; retf ; call 0x20000070847
0x0000020000442997 : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [r8 + 0x63], 1 ; ret 0x8348
0x0000020000089127 : ror byte ptr [rax - 0x75], 4 ; ret
0x00000200001f5944 : ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x0000020000062d04 : ror byte ptr [rax - 0x75], 4 ; ret 0xba48
0x0000020000666e4c : ror byte ptr [rax - 0x75], cl ; and al, 0x30 ; call 0x20000294e29
0x000002000041e1c5 : ror byte ptr [rax - 0x75], cl ; and al, 0x50 ; call 0x20000045499
0x00000200003f608a : ror byte ptr [rax - 0x75], cl ; and al, 0x50 ; call 0x200003c2358
0x00000200006cf08b : ror byte ptr [rax - 0x75], cl ; and byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x0000020000674c4d : ror byte ptr [rax - 0x75], cl ; enter -0x3518, 1 ; ret 0x48ff
0x0000020000533fbf : ror byte ptr [rax - 0x75], cl ; enter -0x718, -0x65 ; ret 0x33ff
0x00000200006748b9 : ror byte ptr [rax - 0x75], cl ; enter 0x5ee8, 5 ; ret 0x48ff
0x0000020000674da1 : ror byte ptr [rax - 0x75], cl ; enter 0x76e8, 0 ; ret 0x48ff
0x00000200005a72d0 : ror byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 1] ; ret
0x0000020000430eee : ror byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000042113f : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000043cdb
0x0000020000573fe6 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000702b6
0x00000200004441b3 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000702b7
0x000002000066f858 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000294e27
0x0000020000506a0d : ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x00000200005e7a11 : ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000008e4e4 : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200000c0150 : ror byte ptr [rax - 0x75], cl ; ret
0x000002000047a28a : ror byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200001bb6fb : ror byte ptr [rax - 0x75], cl ; ret 0x80c3
0x0000020000073655 : ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000132e7d : ror byte ptr [rax - 0x75], cl ; ret 0x9948
0x00000200004c0fb5 : ror byte ptr [rax - 0x75], cl ; ret 0xba41
0x0000020000058d1c : ror byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000191ffe : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000002e2e6
0x00000200001c3fef : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000702b6
0x00000200004417c3 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000702b7
0x00000200001e80ba : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000a4306
0x00000200005f8b90 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e26
0x0000020000668b06 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000294e27
0x00000200005ba4df : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000042670e
0x00000200004b30f9 : ror byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x0000020000100d1d : ror byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x000002000072f0af : ror byte ptr [rax - 0x75dfdbac], cl ; ret 0x8348
0x000002000007affb : ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000020000095e5a : ror byte ptr [rax - 0x77], 0x41 ; adc bl, ch ; ret 0x894c
0x00000200006104fe : ror byte ptr [rax - 0x77], 0x41 ; ret
0x00000200005c15ef : ror byte ptr [rax - 0x77], 0x42 ; ret
0x000002000051f165 : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call 0x2000014e629
0x0000020000404cbb : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r10
0x00000200005e6b5a : ror byte ptr [rax - 0x77], 0x54 ; ret
0x000002000036fa17 : ror byte ptr [rax - 0x77], 0x83 ; or byte ptr [rax], bl ; add byte ptr [rbx], ch ; ret
0x000002000054d439 : ror byte ptr [rax - 0x77], 0x85 ; add byte ptr [rbx], 0 ; add cl, ch ; ret 0xe8fa
0x00000200000ef078 : ror byte ptr [rax - 0x77], 0xc ; ret
0x00000200006f1d38 : ror byte ptr [rax - 0x77], 0xc ; ret 0x81f0
0x000002000007afc2 : ror byte ptr [rax - 0x77], 0xc ; ret 0xae9
0x00000200006d4981 : ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000048e87e : ror byte ptr [rax - 0x77], 1 ; and al, 0x48 ; call 0x200003cab18
0x000002000015e229 : ror byte ptr [rax - 0x77], 1 ; mov eax, 0xc00000bb ; ret
0x000002000052037d : ror byte ptr [rax - 0x77], 1 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000049a0f4 : ror byte ptr [rax - 0x77], 3 ; mov qword ptr [rbx + 8], rax ; jmp 0x2000049a0ca
0x00000200007187e2 : ror byte ptr [rax - 0x77], 5 ; xchg rax, rdx ; ret
0x00000200005dc22e : ror byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200004184ec
0x00000200004ee17b : ror byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x38 ; call rdi
0x000002000043c074 : ror byte ptr [rax - 0x77], cl ; sub r8b, r13b ; sar byte ptr [rdi], cl ; ret
0x00000200000645ae : ror byte ptr [rax - 0x79], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x000002000013fb21 : ror byte ptr [rax - 0x79], 1 ; ret
0x0000020000110b8f : ror byte ptr [rax - 0x7b], 0xc0 ; jle 0x20000110b9c ; ret
0x00000200000b55da : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x200000b55ed ; mov qword ptr [r8], rcx ; ret
0x00000200000e9e64 : ror byte ptr [rax - 0x7b], 1 ; rol byte ptr [rcx - 0x75], cl ; ret 0x950f
0x00000200005d8eed : ror byte ptr [rax - 0x7b], cl ; leave ; jne 0x200005d8efe ; xor eax, eax ; ret
0x00000200003d139e : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x1794
0x00000200004a0644 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x000002000010af94 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x00000200000e44d7 : ror byte ptr [rax - 0x7d], 0x3c ; ret 0x7400
0x0000020000367c50 : ror byte ptr [rax - 0x7d], 0xbc ; ret 0x4ca8
0x0000020000673f9f : ror byte ptr [rax - 0x7d], 0xc0 ; adc byte ptr [rbp + 0x3b], al ; ret 0xef72
0x0000020000598b8f : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rbx], bh ; ret 0xee72
0x000002000057a2da : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200005c5ac8 : ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x00000200001420f3 : ror byte ptr [rax - 0x7d], 0xc1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200001c6b60 : ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x00000200005c5aea : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x0000020000033bf0 : ror byte ptr [rax - 0x7d], 0xc1 ; sbb byte ptr [rbx], bh ; ret 0xf172
0x00000200006040f0 : ror byte ptr [rax - 0x7d], 0xc2 ; cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x0000020000068d49 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000b7a1c : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x00000200000bb8a2 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5f], al ; ret
0x00000200004c540c : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000122a62 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000122ac9 ; ret
0x00000200004dedd5 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004dee3c ; ret
0x0000020000513d47 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000513db4 ; pop rbx ; pop rbp ; ret
0x00000200005302fa : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000530363 ; ret
0x000002000053206f : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200005320d8 ; ret
0x00000200005f906b : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200005f90d4 ; ret
0x000002000060dd9f : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000060de08 ; ret
0x000002000052dc96 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r13 ; pop rbp ; ret
0x000002000050d2ef : ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000119179 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; ret
0x000002000046f481 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000020000163a6b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000020000059275 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x0000020000446f2b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001df033 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x00000200006f4f0d : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000d112b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x000002000052dc5c : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x0000020000033470 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000040a4a2 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x000002000009c74c : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000043601b : ror byte ptr [rax - 0x7d], 0xc4 ; sub bl, al ; mov eax, edx ; jmp 0x20000436016
0x000002000004815b : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x00000200001be6af : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x0000020000097723 : ror byte ptr [rax - 0x7d], 0xc5 ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000642194 : ror byte ptr [rax - 0x7d], 0xc7 ; add bh, bh ; ret 0x3b45
0x00000200001f62e4 : ror byte ptr [rax - 0x7d], 0xc7 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200001418bd : ror byte ptr [rax - 0x7d], 0xd8 ; inc ebx ; xor eax, eax ; ret
0x000002000071462d : ror byte ptr [rax - 0x7d], 0xf8 ; jb 0x2000071460f ; ret
0x00000200000fa735 : ror byte ptr [rax - 0x7d], 0xf9 ; dec byte ptr [rdi] ; ret 0x4589
0x000002000013f3cc : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000020000481416 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4102
0x000002000065d2c9 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x0000020000468cfe : ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x0000020000514320 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe804
0x000002000040ebfc : ror byte ptr [rax - 0x7d], 1 ; ret 0xe808
0x00000200001dc571 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000200005104ef : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000704962 : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200005f7679 : ror byte ptr [rax - 0x7f], 0xc4 ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000200000ef099 : ror byte ptr [rax - 0x7f], 1 ; ret 0
0x0000020000141cf2 : ror byte ptr [rax - 1], 0xc1 ; cmp rax, rdx ; jb 0x20000141cf4 ; ret
0x000002000066edf8 : ror byte ptr [rax - 1], 0xca ; jne 0x2000066edf8 ; xor eax, eax ; ret
0x00000200003ca80a : ror byte ptr [rax - 1], 1 ; ret
0x0000020000401e1b : ror byte ptr [rax - 1], 1 ; ret 0x3966
0x0000020000420caf : ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004b59e5 : ror byte ptr [rax - 1], 1 ; ret 0x4566
0x00000200001e6269 : ror byte ptr [rax - 1], 1 ; ret 0xa6e8
0x000002000018fe7a : ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x000002000065d0e6 : ror byte ptr [rax], 0x41 ; cmp edx, ecx ; jb 0x2000065d0de ; xor eax, eax ; ret
0x00000200000c3954 : ror byte ptr [rax], 0x49 ; dec ecx ; jne 0x200000c394d ; ret
0x0000020000186e72 : ror byte ptr [rax], 0x49 ; inc edx ; jmp 0x20000186e62
0x000002000008e7e0 : ror byte ptr [rax], 0x75 ; idiv edi ; ret 0x8348
0x000002000066e878 : ror byte ptr [rax], 0x83 ; jmp qword ptr [rax]
0x00000200006e98e9 : ror byte ptr [rax], 0x83 ; ret
0x00000200001d5cef : ror byte ptr [rax], 0x8b ; ret
0x0000020000197396 : ror byte ptr [rax], 0xe9 ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, esp ; push rsi ; ret 0xf03
0x0000020000039771 : ror byte ptr [rax], 0xeb ; in al, dx ; xor eax, eax ; ret
0x000002000020c90d : ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000009bafd : ror byte ptr [rax], 1 ; ret
0x0000020000120a2a : ror byte ptr [rax], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000ad58b : ror byte ptr [rax], cl ; mov rax, r8 ; add rsp, 0x38 ; ret
0x0000020000511aba : ror byte ptr [rbp + 0x1de8704a], 0xc6 ; ret
0x0000020000722121 : ror byte ptr [rbp + 0x23], 1 ; ret 0x31e9
0x000002000018a1f3 : ror byte ptr [rbp + 0x23], 1 ; ret 0xae9
0x00000200001cd56e : ror byte ptr [rbp + 0x2750143], 0x8b ; ret
0x00000200000ac7ea : ror byte ptr [rbp + 0x2b], 1 ; ret
0x000002000007d59c : ror byte ptr [rbp + 0x2b], cl ; ret 0x894c
0x0000020000544d47 : ror byte ptr [rbp + 0x50e8184a], cl ; ret
0x00000200004cc799 : ror byte ptr [rbp + 0x72e8034a], cl ; ret
0x00000200000c264f : ror byte ptr [rbp + 0xf440255], 0x22 ; ret 0x5f6
0x00000200000937c0 : ror byte ptr [rbp + 0xf], 0x44 ; ret
0x0000020000514147 : ror byte ptr [rbp + 3], cl ; ret 0x3b4d
0x00000200004e278c : ror byte ptr [rbp + rcx*4 + 0x15], 0x8c ; jg 0x200004e274d ; jmp qword ptr [rcx]
0x0000020000569d15 : ror byte ptr [rbp + rcx*4 + 0x2d], cl ; ret
0x00000200006f75f6 : ror byte ptr [rbp + rcx*4 + 0xd], 1 ; ret 0x21f
0x00000200000eab36 : ror byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf164
0x00000200002008a6 : ror byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf5ec
0x00000200001e94fb : ror byte ptr [rbp - 0x74b3c0b6], cl ; ret
0x00000200005005f7 : ror byte ptr [rbp - 0x74bb9da1], cl ; ret
0x000002000038b80e : ror byte ptr [rbp - 0x75], 0x14 ; ret 0x8b48
0x000002000050a169 : ror byte ptr [rbp - 0x75], 0x1c ; ret
0x000002000019b386 : ror byte ptr [rbp - 0x75], 0x8c ; ret
0x000002000013ffb5 : ror byte ptr [rbp - 0x75], 1 ; ret
0x0000020000077945 : ror byte ptr [rbp - 0x75], 4 ; ret
0x00000200004c3e3d : ror byte ptr [rbp - 0x75], cl ; ret
0x00000200006cec5a : ror byte ptr [rbp - 0x75], cl ; ret 0x9f39
0x00000200005caadb : ror byte ptr [rbp - 0x76b3feb8], 0x3d ; ret 0xd0af
0x000002000009e07b : ror byte ptr [rbp - 0x77], 1 ; and dh, dh ; ret
0x0000020000490130 : ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200003ef6e8 : ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x200003ef6f8 ; call r8
0x0000020000208a91 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x20000208a5a ; ret
0x00000200001c7857 : ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001c7867 ; call r9
0x00000200000b8181 : ror byte ptr [rbp - 0x7b], 0xd2 ; jne 0x200000b8192 ; mov eax, ecx ; ret
0x0000020000173c59 : ror byte ptr [rbx + 0x1dd44805], 1 ; add byte ptr [rbx], ah ; ret
0x00000200006806cc : ror byte ptr [rbx + 0x200f44d1], cl ; ret
0x00000200000b0374 : ror byte ptr [rbx + 0x21e783fd], 0x83 ; jmp qword ptr [rax]
0x0000020000630e71 : ror byte ptr [rbx + 0x41182454], 0xff ; ret
0x000002000014da29 : ror byte ptr [rbx + 0x5a300fd0], 0x58 ; pop rcx ; ret
0x000002000066d8c2 : ror byte ptr [rbx + 0x6736e8e8], 1 ; ret 0x48ff
0x000002000006ef00 : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x1e76
0x0000020000078541 : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x2076
0x0000020000055a92 : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x2276
0x000002000007ce71 : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x2476
0x0000020000468dda : ror byte ptr [rbx + 0xfc085d8], 0x88 ; ret
0x0000020000729f9d : ror byte ptr [rbx + rbp - 0x38], cl ; mov rax, r9 ; ret
0x0000020000115ea2 : ror byte ptr [rbx + rcx*4 + 0x64], 0xc2 ; adc byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4518
0x00000200004d4f4a : ror byte ptr [rbx + rcx*4 - 0x37], 1 ; jne 0x200004d4f5b ; mov al, 1 ; ret
0x00000200001d3d4a : ror byte ptr [rbx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x00000200005db53b : ror byte ptr [rbx - 0x3b7cb73d], 0x40 ; pop rbx ; ret
0x000002000038b84c : ror byte ptr [rbx - 0x3b7cb73e], 1 ; pop rbp ; ret
0x000002000013fabd : ror byte ptr [rcx + 0x15837005], cl ; add byte ptr [rcx - 0x75], al ; ret 0x4cc3
0x000002000013faf5 : ror byte ptr [rcx + 0x176bec05], 0 ; xor eax, eax ; ret
0x000002000009baf9 : ror byte ptr [rcx + 0x21], 1 ; ror byte ptr [rax], 1 ; ret
0x00000200000804b9 : ror byte ptr [rcx + 0x23], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x000002000007f741 : ror byte ptr [rcx + 0x23], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf74
0x00000200000fd234 : ror byte ptr [rcx + 0x23], 1 ; add dword ptr [rax + 0x3b], ecx ; ret 0x1f75
0x00000200000804b6 : ror byte ptr [rcx + 0x23], 1 ; ror byte ptr [rcx + 0x23], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x00000200004bc26f : ror byte ptr [rcx + 0x23], cl ; enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x0000020000059231 : ror byte ptr [rcx + 0x2b], 1 ; ret
0x0000020000179d48 : ror byte ptr [rcx + 0x2b], 1 ; ror dword ptr [rax - 9], 1 ; ret 0xfff
0x0000020000178678 : ror byte ptr [rcx + 0x2b], cl ; ror dword ptr [rax - 9], 1 ; ret 0xfff
0x000002000013fe3f : ror byte ptr [rcx + 0x33], cl ; ret 0x8549
0x00000200001d961f : ror byte ptr [rcx + 0x39], 0x54 ; ret 0x7508
0x0000020000073e7f : ror byte ptr [rcx + 0x39], 9 ; seta al ; ret
0x0000020000192a10 : ror byte ptr [rcx + 0x3b], 0xc ; sal byte ptr [rdx - 0xd], 0x8b ; ret 0x1589
0x00000200001e5f52 : ror byte ptr [rcx + 0x3b], 0xc8 ; seta al ; ret
0x000002000020bb1f : ror byte ptr [rcx + 0x3b], 0xca ; jb 0x2000020bb0b ; ret
0x000002000020c483 : ror byte ptr [rcx + 0x3b], 0xd2 ; jb 0x2000020c463 ; mov al, 1 ; ret
0x000002000021bba1 : ror byte ptr [rcx + 0x3b], 1 ; ret
0x00000200006f1e84 : ror byte ptr [rcx + 0x3b], 1 ; ret 0x830f
0x00000200000fcbee : ror byte ptr [rcx + 0x3b], cl ; ret
0x00000200002251c7 : ror byte ptr [rcx + 0x44402444], 0x8b ; ret 0x8d48
0x000002000002b668 : ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x00000200004cdc04 : ror byte ptr [rcx + 0x4589df4d], cl ; ret
0x00000200000e9ae0 : ror byte ptr [rcx + 0x69], 1 ; ret
0x00000200003e39d2 : ror byte ptr [rcx + 0xf402454], 0xb6 ; ret
0x00000200003c34a8 : ror byte ptr [rcx + 0xf], 0x44 ; ror byte ptr [rcx - 0x7d], cl ; ret 0xff10
0x0000020000140e2f : ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x00000200000809ee : ror byte ptr [rcx + 0xf], 0xaf ; ret 0x148
0x000002000002a6dd : ror byte ptr [rcx + 0xf], 0xbd ; enter 0xf41, -0x49 ; ret
0x00000200003d6f3b : ror byte ptr [rcx + 3], 1 ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000040e5f6 : ror byte ptr [rcx + 3], 1 ; ret 0x3b48
0x0000020000058d19 : ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004e7b06 : ror byte ptr [rcx + rcx*2], 3 ; ret 0x3b48
0x000002000063bc0e : ror byte ptr [rcx + rcx*4 + 0x44], 0x24 ; push rax ; inc edx ; jmp 0x2000063bbeb
0x0000020000107cb8 : ror byte ptr [rcx + rcx*4 + 0x49], 0x18 ; ret
0x00000200006fb18a : ror byte ptr [rcx + rcx*4 + 5], 0xce ; ret 0xffbc
0x00000200000959de : ror byte ptr [rcx + rdi + 0x42], cl ; or byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xe380
0x00000200001e4e7f : ror byte ptr [rcx + rdi + 5], 0x81 ; ret 0x16
0x00000200005f8408 : ror byte ptr [rcx - 0x17dfdb84], 0xe2 ; ret
0x00000200006cd1b2 : ror byte ptr [rcx - 0x2d], cl ; ret 0x34d
0x0000020000674057 : ror byte ptr [rcx - 0x3ab261f3], 0xff ; ret
0x000002000050831c : ror byte ptr [rcx - 0x3c6af0fa], 0x8a ; ret
0x00000200005f5905 : ror byte ptr [rcx - 0x3f], 0xe8 ; add al, 0xf6 ; ret 0x7403
0x000002000045e2ae : ror byte ptr [rcx - 0x3f], 0xe8 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x00000200000c36e8 : ror byte ptr [rcx - 0x3f], 1 ; call 0x1ffc24783fb
0x000002000020e8b5 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x00000200001298ce : ror byte ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004e194e : ror byte ptr [rcx - 0x4a173783], 0xa1 ; ret
0x00000200001e6040 : ror byte ptr [rcx - 0x73], 0x14 ; ret 0x8b4c
0x00000200003eaeb5 : ror byte ptr [rcx - 0x73], 0x4e ; or byte ptr [rbp - 0x75], cl ; ret 0x8966
0x00000200004d952e : ror byte ptr [rcx - 0x73], 0x4f ; sbb byte ptr [rax - 0x73], cl ; push rbp ; ret 0x4166
0x00000200004534d9 : ror byte ptr [rcx - 0x74b3dbac], 1 ; ret 0x349
0x00000200000b4b71 : ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x000002000012d106 : ror byte ptr [rcx - 0x74beafbf], 0xc0 ; ret
0x000002000009255d : ror byte ptr [rcx - 0x75], 0x4c ; ret 0x4848
0x00000200001d0397 : ror byte ptr [rcx - 0x75], 0x4c ; ret 0x4918
0x000002000050e609 : ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000067f1e8 : ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x000002000050dfe5 : ror byte ptr [rcx - 0x75], 0x94 ; ret
0x00000200001d8689 : ror byte ptr [rcx - 0x75], 0xc ; ret 0x418a
0x0000020000162c82 : ror byte ptr [rcx - 0x75], 0xca ; call r10
0x000002000064dc65 : ror byte ptr [rcx - 0x75], 0xcb ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200001a6e57 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r12 ; call r15
0x000002000064f67b : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r12 ; call rax
0x00000200001eb267 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, rbx ; call 0x20000087571
0x0000020000601f40 : ror byte ptr [rcx - 0x75], 0xe3 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000714884 : ror byte ptr [rcx - 0x75], 0xe3 ; pop rbp ; ret
0x00000200005745d9 : ror byte ptr [rcx - 0x75], 1 ; iretd ; call 0x20000070846
0x000002000044ca15 : ror byte ptr [rcx - 0x75], 1 ; iretd ; call 0x20000070847
0x00000200000f9194 : ror byte ptr [rcx - 0x75], 1 ; ret
0x000002000008dba3 : ror byte ptr [rcx - 0x75], 1 ; ret 0x48f0
0x0000020000060c5b : ror byte ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200004fbc0a : ror byte ptr [rcx - 0x75], 1 ; ret 0xf748
0x000002000007e29f : ror byte ptr [rcx - 0x75], 4 ; ret
0x0000020000406740 : ror byte ptr [rcx - 0x75], cl ; fadd dword ptr [rcx - 0x75] ; ret 0x8b4c
0x000002000043329a : ror byte ptr [rcx - 0x75], cl ; int 0xe8
0x0000020000448e18 : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000702b7
0x0000020000144343 : ror byte ptr [rcx - 0x75], cl ; ret
0x00000200001c4d6b : ror byte ptr [rcx - 0x75], cl ; ret 0x5b9
0x00000200001b2447 : ror byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x000002000020a7ef : ror byte ptr [rcx - 0x7699c7bf], 0x41 ; ret
0x000002000037ed60 : ror byte ptr [rcx - 0x77], 0x13 ; ret
0x00000200006e98e3 : ror byte ptr [rcx - 0x77], 1 ; adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x00000200000e1f09 : ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x000002000008fcd9 : ror byte ptr [rcx - 0x77], 8 ; ret
0x00000200001d93d2 : ror byte ptr [rcx - 0x77], 9 ; ret
0x0000020000431723 : ror byte ptr [rcx - 0x7b17dfa8], cl ; jmp 0x200004316f5
0x00000200006358ee : ror byte ptr [rcx - 0x7cb788bb], 1 ; ret 0xe802
0x00000200005ec863 : ror byte ptr [rcx - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret
0x00000200006068a8 : ror byte ptr [rcx - 0x7d], 0xc1 ; or byte ptr [rbp + 0x3b], al ; ret
0x0000020000485956 : ror byte ptr [rcx - 0x7d], 0xc1 ; or byte ptr [rbp + 0x3b], al ; ret 0xcc72
0x000002000054c895 : ror byte ptr [rcx - 0x7d], 0xc2 ; and byte ptr [rax - 0x7d], cl ; ret
0x000002000045a59d : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x200490830ad
0x00000200000998ce : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4808
0x000002000048e88b : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4810
0x00000200006f70c9 : ror byte ptr [rcx - 0x7d], cl ; enter 0x4d42, 0x23 ; ret 0x8b49
0x0000020000136635 : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000200004942a6 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000200003c34ac : ror byte ptr [rcx - 0x7d], cl ; ret 0xff10
0x0000020000140348 : ror byte ptr [rcx - 1], 0xca ; cmp r8, r10 ; jb 0x20000140343 ; ret
0x0000020000138874 : ror byte ptr [rcx - 1], 1 ; leave ; jne 0x20000138868 ; mov al, dl ; ret
0x0000020000558afc : ror byte ptr [rcx - 1], 1 ; ret 0x4266
0x00000200004b473d : ror byte ptr [rcx - 1], 1 ; ret 0x4366
0x0000020000592b0a : ror byte ptr [rcx - 1], 1 ; ret 0x4766
0x00000200004c8aa7 : ror byte ptr [rcx - 1], cl ; jrcxz 0x200004c8a6d ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200006f6b6a : ror byte ptr [rcx - 9], 1 ; ret 0x1ff
0x000002000012438d : ror byte ptr [rdi - 0x75], 4 ; ret
0x00000200001513c1 : ror byte ptr [rdi], 0x30 ; ret
0x00000200001e01d4 : ror byte ptr [rdi], 0x32 ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000534ec3 : ror byte ptr [rdi], 0x42 ; ret 0x40e9
0x0000020000376266 : ror byte ptr [rdi], 0x44 ; ret
0x000002000017ea40 : ror byte ptr [rdi], 0x44 ; ret 0x13e9
0x00000200005f7185 : ror byte ptr [rdi], 0x44 ; ret 0x189
0x00000200005e7622 : ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x00000200005e6a63 : ror byte ptr [rdi], 0x44 ; ret 0x558d
0x00000200005e6c76 : ror byte ptr [rdi], 0x44 ; ret 0x578d
0x00000200005e7189 : ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x00000200005e6749 : ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x00000200005e6417 : ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x00000200001d5b70 : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200003d0179 : ror byte ptr [rdi], 0x44 ; ret 0x8b49
0x0000020000377248 : ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x0000020000377bec : ror byte ptr [rdi], 0x44 ; ret 0x8d48
0x00000200005e6586 : ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x00000200001d5b5a : ror byte ptr [rdi], 0x44 ; ret 0xaba
0x000002000007363f : ror byte ptr [rdi], 0x44 ; ret 0xc103
0x000002000047d259 : ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x00000200006f6411 : ror byte ptr [rdi], 0x44 ; ror dword ptr [rcx - 0x75], -0x6c ; ret
0x000002000055f14e : ror byte ptr [rdi], 0x45 ; fsubr st(1) ; ret 0xeb2b
0x00000200005cca26 : ror byte ptr [rdi], 0x45 ; ret 0x4489
0x0000020000095557 : ror byte ptr [rdi], 0x4e ; ret 0xd08a
0x00000200003d6092 : ror byte ptr [rdi], 0x82 ; ret
0x000002000070fc89 : ror byte ptr [rdi], 0x83 ; add dword ptr [rax], 0 ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000054a88 : ror byte ptr [rdi], 0x83 ; ret 0
0x0000020000032c29 : ror byte ptr [rdi], 0x83 ; stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x00000200005665b9 : ror byte ptr [rdi], 0x84 ; adc r12b, bpl ; dec dword ptr [rax - 0x7d] ; ret 0x6608
0x0000020000602e0f : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x8b440000 ; ret
0x0000020000111106 : ror byte ptr [rdi], 0x84 ; add dword ptr [rdi - 0x74bbfff7], eax ; ret
0x00000200004aaf93 : ror byte ptr [rdi], 0x84 ; add eax, 0x8b4c0000 ; ret
0x00000200001220a6 : ror byte ptr [rdi], 0x84 ; cli ; ret 8
0x000002000017ddac : ror byte ptr [rdi], 0x84 ; cmp esi, dword ptr [rax - 0x74b30011] ; ret
0x00000200005a3979 : ror byte ptr [rdi], 0x84 ; imul eax, dword ptr [rcx], 0x8b440000 ; ret
0x00000200000d3165 : ror byte ptr [rdi], 0x84 ; insb byte ptr [rdi], dx ; or eax, dword ptr [rax] ; add bh, bh ; ret
0x0000020000148aa0 : ror byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x0000020000428b57 : ror byte ptr [rdi], 0x84 ; jmp rbx
0x000002000060432c : ror byte ptr [rdi], 0x84 ; leave ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x000002000058719b : ror byte ptr [rdi], 0x84 ; mov ebp, 0xe9fffffe ; ret 0xfffe
0x00000200004b3db2 : ror byte ptr [rdi], 0x84 ; mov edi, 0xf6000001 ; ret 0xf30
0x00000200004e7e24 : ror byte ptr [rdi], 0x84 ; mov spl, 0xb ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000012d984 : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000515e90 : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000020000729c24 : ror byte ptr [rdi], 0x84 ; or eax, 0x6b000001 ; ret
0x0000020000401162 : ror byte ptr [rdi], 0x84 ; or eax, 0xf7001577 ; ret
0x00000200003e42bc : ror byte ptr [rdi], 0x84 ; out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x0000020000615df1 : ror byte ptr [rdi], 0x84 ; pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x000002000018a6c3 : ror byte ptr [rdi], 0x84 ; pop rsp ; ret 0xfff1
0x000002000056b0c3 : ror byte ptr [rdi], 0x84 ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; ret
0x00000200003ecb59 : ror byte ptr [rdi], 0x84 ; push rsp ; jp 0x200003ecb7d ; add dh, dh ; ret
0x0000020000083e72 : ror byte ptr [rdi], 0x84 ; ret
0x00000200000310f0 : ror byte ptr [rdi], 0x84 ; ret 0
0x00000200003d13a1 : ror byte ptr [rdi], 0x84 ; ret 0x1794
0x00000200003df9eb : ror byte ptr [rdi], 0x84 ; ret 0x37
0x0000020000516b6d : ror byte ptr [rdi], 0x84 ; ret 0x9be
0x0000020000503dbb : ror byte ptr [rdi], 0x84 ; ret 0xa84
0x00000200000ebf5e : ror byte ptr [rdi], 0x84 ; ret 0xb12
0x00000200004f5ee5 : ror byte ptr [rdi], 0x84 ; ret 0xb22
0x00000200000d4570 : ror byte ptr [rdi], 0x84 ; ret 0xc3f
0x00000200004beaee : ror byte ptr [rdi], 0x84 ; ret 0xd65
0x000002000009ca53 : ror byte ptr [rdi], 0x84 ; ret 0xeaf
0x0000020000563f0a : ror byte ptr [rdi], 0x84 ; ret 0xebf0
0x000002000018b843 : ror byte ptr [rdi], 0x84 ; ret 0xf20b
0x0000020000395df5 : ror byte ptr [rdi], 0x84 ; ret 0xffee
0x000002000058820a : ror byte ptr [rdi], 0x84 ; ret 0xfff0
0x00000200005539fd : ror byte ptr [rdi], 0x84 ; ret 0xfff7
0x00000200006e7c77 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000002000004c0bd : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000011324b : ror byte ptr [rdi], 0x84 ; ret 1
0x0000020000650b7f : ror byte ptr [rdi], 0x84 ; ret 2
0x0000020000059dd0 : ror byte ptr [rdi], 0x84 ; ret 4
0x00000200000e64b5 : ror byte ptr [rdi], 0x84 ; ret 7
0x00000200006fe46e : ror byte ptr [rdi], 0x84 ; sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000aa1f2 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; adc dword ptr [rsi], ecx ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000050a95a : ror byte ptr [rdi], 0x84 ; test dword ptr [rax], 0x8b440000 ; ret
0x0000020000124e44 : ror byte ptr [rdi], 0x84 ; test dword ptr [rcx + 0x3b4c0008], ebp ; ret
0x00000200005f6061 : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000043d5d6 : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; call qword ptr [rdx]
0x0000020000134943 : ror byte ptr [rdi], 0x84 ; xor al, 0x1e ; or byte ptr [rax], al ; mov ecx, edi ; call rax
0x000002000012b28f : ror byte ptr [rdi], 0x85 ; adc esi, dword ptr [rbx + 8] ; add byte ptr [rsi - 1], ah ; ret 0xb70f
0x000002000070e55e : ror byte ptr [rdi], 0x85 ; add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000017530d : ror byte ptr [rdi], 0x85 ; cli ; ret
0x000002000038db28 : ror byte ptr [rdi], 0x85 ; cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000006a6d5 : ror byte ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004e3290 : ror byte ptr [rdi], 0x85 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000a570b : ror byte ptr [rdi], 0x85 ; insb byte ptr [rdi], dx ; or byte ptr [rax], al ; add dh, dh ; ret
0x0000020000482cfd : ror byte ptr [rdi], 0x85 ; jl 0x20000482cfb ; sldt word ptr [rcx - 0x75] ; ret 0x8b48
0x000002000050c389 : ror byte ptr [rdi], 0x85 ; jmp qword ptr [rdx]
0x00000200000ae14a : ror byte ptr [rdi], 0x85 ; jmp rbx
0x00000200000ffb6b : ror byte ptr [rdi], 0x85 ; jo 0x200000ffba7 ; or al, byte ptr [rax] ; ret
0x0000020000643c1f : ror byte ptr [rdi], 0x85 ; nop ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200005801a7 : ror byte ptr [rdi], 0x85 ; popfq ; ret 0xffef
0x00000200000361c8 : ror byte ptr [rdi], 0x85 ; ret
0x000002000002fe96 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000200000e7905 : ror byte ptr [rdi], 0x85 ; ret 0xb43
0x00000200000d7541 : ror byte ptr [rdi], 0x85 ; ret 0xc18
0x00000200004cb9e5 : ror byte ptr [rdi], 0x85 ; ret 0xce6
0x00000200005668c2 : ror byte ptr [rdi], 0x85 ; ret 0xec0c
0x00000200004908f3 : ror byte ptr [rdi], 0x85 ; ret 0xf4c
0x0000020000035187 : ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x00000200003a7746 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x000002000021ad9d : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000002000038d18e : ror byte ptr [rdi], 0x85 ; ret 2
0x000002000009fc71 : ror byte ptr [rdi], 0x85 ; ret 4
0x0000020000462d90 : ror byte ptr [rdi], 0x85 ; xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000002000004b8ac : ror byte ptr [rdi], 0x85 ; xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x000002000046788d : ror byte ptr [rdi], 0x85 ; xchg eax, esp ; xor eax, 0x458b0011 ; ret
0x00000200003e675c : ror byte ptr [rdi], 0x87 ; int 0xc2
0x00000200003e6674 : ror byte ptr [rdi], 0x87 ; ret
0x00000200003e65f4 : ror byte ptr [rdi], 0x87 ; xchg eax, ebp ; ret
0x00000200006f01f1 : ror byte ptr [rdi], 0x88 ; add dword ptr ds:[rbx], eax ; add bh, bh ; ret
0x0000020000587953 : ror byte ptr [rdi], 0x88 ; add eax, 0xe9fff0c4 ; xlatb ; ret
0x0000020000049c73 : ror byte ptr [rdi], 0x88 ; and al, byte ptr [rip - 0x49f10000] ; ret
0x0000020000703021 : ror byte ptr [rdi], 0x88 ; call qword ptr [rsi]
0x00000200003e2c71 : ror byte ptr [rdi], 0x88 ; clc ; ret
0x00000200004f929c : ror byte ptr [rdi], 0x88 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000058010e : ror byte ptr [rdi], 0x88 ; jmp 0x200005800da
0x0000020000440d3d : ror byte ptr [rdi], 0x88 ; jmp rcx
0x0000020000036eb2 : ror byte ptr [rdi], 0x88 ; mov esi, 0xf600132b ; ret
0x00000200000dcc97 : ror byte ptr [rdi], 0x88 ; push -0x74fff435 ; ret
0x000002000045bf46 : ror byte ptr [rdi], 0x88 ; push rbx ; ret
0x00000200005b3e1d : ror byte ptr [rdi], 0x88 ; push rcx ; jnp 0x200005b3e22 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000168e62 : ror byte ptr [rdi], 0x88 ; push rdx ; ret
0x000002000045bf63 : ror byte ptr [rdi], 0x88 ; push rsi ; ret
0x00000200000628a1 : ror byte ptr [rdi], 0x88 ; push rsp ; add al, byte ptr [rax] ; add bh, bh ; ret 0x8348
0x00000200000e786b : ror byte ptr [rdi], 0x88 ; ret
0x00000200003b3891 : ror byte ptr [rdi], 0x88 ; ret 0
0x000002000043cebf : ror byte ptr [rdi], 0x88 ; ret 0x1305
0x0000020000711d4a : ror byte ptr [rdi], 0x88 ; ret 0x158
0x00000200003a096e : ror byte ptr [rdi], 0x88 ; ret 0x19
0x0000020000700ece : ror byte ptr [rdi], 0x88 ; ret 0x233
0x00000200005787a9 : ror byte ptr [rdi], 0x88 ; ret 0xee57
0x00000200005a57ab : ror byte ptr [rdi], 0x88 ; ret 0xf480
0x00000200003be85f : ror byte ptr [rdi], 0x88 ; ret 0xfffe
0x000002000040c9c8 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000200005cc91f : ror byte ptr [rdi], 0x88 ; ret 2
0x00000200005e40c5 : ror byte ptr [rdi], 0x88 ; ret 4
0x00000200003725ba : ror byte ptr [rdi], 0x88 ; shl dword ptr [rax - 1], cl ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200004fef55 : ror byte ptr [rdi], 0x88 ; xchg eax, ebx ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000045beda : ror byte ptr [rdi], 0x88 ; xchg eax, ebx ; ret
0x00000200006f5356 : ror byte ptr [rdi], 0x88 ; xchg eax, ebx ; ret 2
0x00000200001b5fa0 : ror byte ptr [rdi], 0x89 ; adc ebx, eax ; idiv edi ; jmp 0x200001321fe
0x00000200003845dc : ror byte ptr [rdi], 0x89 ; jmp rcx
0x0000020000417096 : ror byte ptr [rdi], 0x89 ; ret
0x00000200003fc578 : ror byte ptr [rdi], 0x8e ; ret
0x00000200003c47c9 : ror byte ptr [rdi], 0x8e ; sbb r11b, byte ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000557f57 : ror byte ptr [rdi], 0x8f ; ret 0xfffe
0x00000200000c9573 : ror byte ptr [rdi], 0x94 ; ret
0x000002000064443d : ror byte ptr [rdi], 0x94 ; ret 0x5489
0x0000020000721636 : ror byte ptr [rdi], 0x94 ; ret 0xb5e9
0x0000020000163a68 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000020000228f16 : ror byte ptr [rdi], 0x95 ; ret
0x00000200001fdba7 : ror byte ptr [rdi], 0x95 ; ret 0x8941
0x00000200005b6692 : ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x0000020000366011 : ror byte ptr [rdi], 0x99 ; ret
0x00000200004c5033 : ror byte ptr [rdi], 0x9e ; ret
0x00000200000b28f3 : ror byte ptr [rdi], 0xb6 ; leave ; mov cr8, rcx ; ret
0x000002000003c46d : ror byte ptr [rdi], 0xb6 ; ret 0xca3b
0x00000200004a637f : ror byte ptr [rdi], 0xb7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200003ab4d2 : ror byte ptr [rdi], 0xb7 ; add r9b, byte ptr [r8 + 0x2b] ; ret
0x0000020000653571 : ror byte ptr [rdi], 0xb7 ; or dil, r15b ; ret 0x341
0x0000020000105d6a : ror byte ptr [rdi], 0xb7 ; ret
0x000002000055fd80 : ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x000002000020a007 : ror byte ptr [rdi], 0xb7 ; ret 0xe77
0x0000020000131628 : ror byte ptr [rdi], 1 ; ret 0x3b49
0x000002000013166a : ror byte ptr [rdi], 1 ; ret 0x8d48
0x00000200000ae615 : ror byte ptr [rdi], 1 ; ret 0xd08b
0x0000020000159fbf : ror byte ptr [rdi], 1 ; scasb al, byte ptr [rdi] ; clc ; ret
0x00000200000b1976 : ror byte ptr [rdi], 1 ; sub dword ptr [rdx + 0x48000000], 0x2b ; ret 0x3b49
0x00000200002953cf : ror byte ptr [rdi], 1 ; test byte ptr [rdi], bl ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x349
0x0000020000077166 : ror byte ptr [rdi], 1 ; test byte ptr [rdx - 0x9ffef9f], bl ; ret
0x000002000013ea1b : ror byte ptr [rdi], 1 ; xchg al, ch ; ret
0x00000200003e66bd : ror byte ptr [rdi], 1 ; xchg dword ptr [rax], esi ; ret
0x00000200001efce4 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200004e7b0d : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000014da2b : ror byte ptr [rdi], 1 ; xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x0000020000499ca6 : ror byte ptr [rdi], cl ; mov byte ptr [rsi - 0x9fff0f6], ah ; ret 0x7510
0x00000200003f79fc : ror byte ptr [rdi], cl ; mov byte ptr [rsp + rbp*8 + 0x15], ch ; add dh, dh ; ret 0x7520
0x00000200003b8d4d : ror byte ptr [rdi], cl ; mov edx, 0x820f1de1 ; ret 0xfff1
0x000002000051f5f5 : ror byte ptr [rdi], cl ; ret
0x0000020000464323 : ror byte ptr [rdi], cl ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rbp + 3], al ; ret
0x000002000012ddde : ror byte ptr [rdi], cl ; test byte ptr [rcx - 0x8fff797], ch ; ret
0x000002000018a74c : ror byte ptr [rdi], cl ; test byte ptr [rcx], cl ; ret
0x00000200004c7e10 : ror byte ptr [rdi], cl ; test byte ptr [rdx - 0x75000000], cl ; ret
0x00000200003e66a1 : ror byte ptr [rdi], cl ; test byte ptr [rsi], ch ; ret
0x00000200001d78c1 : ror byte ptr [rdi], cl ; test dword ptr [rax + rax + 0x3b450000], eax ; ret
0x000002000043467d : ror byte ptr [rdi], cl ; test dword ptr [rax + rax], eax ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200003cc08d : ror byte ptr [rdi], cl ; test dword ptr [rcx], eax ; ret
0x0000020000099e6f : ror byte ptr [rdi], cl ; test dword ptr [rdi - 0x75000000], esp ; ret
0x0000020000066c59 : ror byte ptr [rdi], cl ; test dword ptr [rdx + rax - 0x6cc80000], edx ; ret 0
0x0000020000131bc9 : ror byte ptr [rdi], cl ; test dword ptr [rdx], esi ; or byte ptr [rax], al ; ret
0x00000200004ab283 : ror byte ptr [rdi], cl ; test eax, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x000002000009b157 : ror byte ptr [rdi], cl ; test ebp, eax ; ret 0xe
0x000002000005f2bf : ror byte ptr [rdi], cl ; test ebp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000b74b1 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc28b
0x000002000050536d : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x348
0x000002000009de26 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfc24
0x00000200004ce864 : ror byte ptr [rdx + 0x2b], 0x4c ; ret
0x0000020000614143 : ror byte ptr [rdx + 0x39], 0x1c ; ret 0xbc74
0x00000200000ffdcc : ror byte ptr [rdx + 0x417f2401], 0x3a ; ret
0x0000020000149a55 : ror byte ptr [rdx + 0xa30380c], 0x48 ; inc edx ; jmp 0x20000149a6b
0x00000200000c1226 : ror byte ptr [rdx + 9], 0xc ; ret 0xff49
0x0000020000201bec : ror byte ptr [rdx], cl ; add dh, dh ; ret
0x000002000000d175 : ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x0000020000257fc8 : ror byte ptr [rsi + rdx], 0 ; ret
0x00000200003b5290 : ror byte ptr [rsi - 0x75], 4 ; ret 0xb948
0x0000020000275de9 : ror byte ptr [rsi], 0x8e ; ret 0x4e
0x000002000071817a : ror byte ptr [rsi], cl ; mov ebx, 0x58948ff ; ret
0x00000200003ccd38 : ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x0000020000275564 : ror dl, 1 ; adc al, byte ptr [rax] ; ret
0x00000200003a15e5 : ror dword ptr [r15], -0x49 ; ret
0x00000200001396ad : ror dword ptr [r9 + 0x12482], 0 ; ret
0x00000200004fa8b3 : ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200001f58ec : ror dword ptr [rax + 0x23], cl ; ror byte ptr [rax + 0x33], 1 ; fimul dword ptr [rax - 0x75] ; ret
0x0000020000105082 : ror dword ptr [rax + 0x2b], 0x42 ; sbb byte ptr [rax + 3], cl ; ret
0x000002000008439e : ror dword ptr [rax + 0x2b], 0x46 ; sbb byte ptr [rax + 3], cl ; ret
0x00000200004fa8b6 : ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x0000020000049cfb : ror dword ptr [rax + 0x2b], cl ; ret 0x8548
0x00000200006e508e : ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x0000020000678616 : ror dword ptr [rax + 0x39], 0x1d ; ret 0x18a
0x00000200001efce0 : ror dword ptr [rax + 0x39], 0x5d ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x000002000010c678 : ror dword ptr [rax + 0x39], cl ; pop rcx ; xor byte ptr [rbp + rcx*8 - 0x15], dh ; ret 0xcccc
0x0000020000097228 : ror dword ptr [rax + 0x3b], -0x30 ; jb 0x2000009723b ; mov al, r8b ; ret
0x00000200006142cc : ror dword ptr [rax + 0x3b], -0x30 ; setae al ; ret
0x0000020000141cf5 : ror dword ptr [rax + 0x3b], -0x3e ; jb 0x20000141cf1 ; ret
0x0000020000425220 : ror dword ptr [rax + 0x3b], 1 ; ret 0x7973
0x000002000020f5b6 : ror dword ptr [rax + 0x3b], cl ; ret 0xf74
0x000002000071234f : ror dword ptr [rax + 0x3d], -0x80 ; add byte ptr [rax], al ; add byte ptr [rdx - 0x4c], dh ; ret
0x000002000010b318 : ror dword ptr [rax + 0xb], -0x3f ; ret
0x000002000009a330 : ror dword ptr [rax + 0xb], 1 ; ret 0x348
0x000002000005d30c : ror dword ptr [rax + 0xf], -0x51 ; ret
0x000002000042521c : ror dword ptr [rax + 0xf], -0x51 ; ror dword ptr [rax + 0x3b], 1 ; ret 0x7973
0x000002000047e554 : ror dword ptr [rax + 0xf], -0x5d ; ret 0x1172
0x000002000047e578 : ror dword ptr [rax + 0xf], -0x5d ; ret 0x2172
0x000002000039af44 : ror dword ptr [rax + 0xf], -0x5d ; ret 0x820f
0x00000200007231a6 : ror dword ptr [rax + 0xf], -0x5d ; ret 0xf72
0x0000020000388663 : ror dword ptr [rax + 0xf], 0x43 ; ret 0xccc3
0x00000200001284f7 : ror dword ptr [rax + 3], 1 ; ret 0x8b49
0x00000200001b8f31 : ror dword ptr [rax + 3], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200006f7a2b : ror dword ptr [rax + 3], cl ; sar bh, cl ; ret
0x000002000038a9ae : ror dword ptr [rax + 9], 0x54 ; ret
0x0000020000257fd5 : ror dword ptr [rax + rax], -0x31 ; ret
0x00000200005c26c3 : ror dword ptr [rax + rcx*2 - 0x7d], -0x3c ; pop rbp ; jmp 0x2000038e9c1
0x0000020000100f78 : ror dword ptr [rax - 0x2d], 1 ; ret 0x8341
0x000002000036d913 : ror dword ptr [rax - 0x2f], -0x16 ; jne 0x2000036d8fc ; ret
0x000002000036db4d : ror dword ptr [rax - 0x2f], -0x16 ; jne 0x2000036db2c ; mov qword ptr [r8], r10 ; ret
0x0000020000142025 : ror dword ptr [rax - 0x2f], -8 ; dec rax ; ret
0x00000200004b3038 : ror dword ptr [rax - 0x2f], -8 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014200c : ror dword ptr [rax - 0x2f], -8 ; ret
0x000002000011d719 : ror dword ptr [rax - 0x3b7cb7fd], 0x30 ; pop rbx ; ret
0x00000200003d59e5 : ror dword ptr [rax - 0x3f], -0x12 ; add ecx, dword ptr [rax + 3] ; ret 0x348
0x00000200000c0f95 : ror dword ptr [rax - 0x3f], -0x18 ; adc cl, byte ptr [rcx + 0x23] ; ret
0x000002000013a998 : ror dword ptr [rax - 0x3f], -0x18 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x00000200000f9294 : ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x0000020000129670 : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rbx], dh ; ret 0xfa8
0x00000200001a2c3a : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x000002000011850d : ror dword ptr [rax - 0x3f], -0x18 ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200006d2768 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret
0x000002000011d9db : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0x2b49
0x0000020000036fa6 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x000002000005b48d : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret
0x00000200000b3616 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret 0x2b49
0x00000200000a5e19 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret 0xba49
0x00000200001a1012 : ror dword ptr [rax - 0x3f], -0x20 ; add cl, byte ptr [rcx + 0x3b] ; ret 0x2373
0x000002000045d474 : ror dword ptr [rax - 0x3f], -0x20 ; add ecx, dword ptr [rax + 0xb] ; ret 0x894a
0x000002000010a6d7 : ror dword ptr [rax - 0x3f], -8 ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200000d3fa2 : ror dword ptr [rax - 0x3f], 1 ; clc ; add ecx, dword ptr [rax + 0x3b] ; ret 0x4f72
0x00000200000610c3 : ror dword ptr [rax - 0x3f], 1 ; clc ; add ecx, dword ptr [rax + 0x3b] ; ret 0x820f
0x0000020000098d32 : ror dword ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200001d8798 : ror dword ptr [rax - 0x73], 0x14 ; ret 0xb70f
0x0000020000484c53 : ror dword ptr [rax - 0x73], 1 ; out -0x18, eax ; ret
0x00000200006cda39 : ror dword ptr [rax - 0x73], cl ; or byte ptr [r8 + 0x63], cl ; ret 0x8348
0x00000200000966fb : ror dword ptr [rax - 0x75], -0x35 ; je 0x20000096781 ; call rax
0x0000020000096048 : ror dword ptr [rax - 0x75], -0x38 ; call rdx
0x000002000019ca50 : ror dword ptr [rax - 0x75], -0x64 ; ret 0xd80
0x00000200004d8346 : ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x00000200001c4dc9 : ror dword ptr [rax - 0x75], 0x14 ; ret 0x8548
0x00000200005ec797 : ror dword ptr [rax - 0x75], 0x7c ; ret
0x000002000043b37a : ror dword ptr [rax - 0x75], 1 ; iretd ; call 0x20000068fd7
0x000002000010af37 : ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x000002000045acdf : ror dword ptr [rax - 0x75], 1 ; mov rdx, rdi ; call qword ptr [rax]
0x00000200006ee6db : ror dword ptr [rax - 0x75], 1 ; or byte ptr [r8 - 0x7d], cl ; ret 0x4810
0x00000200000426a0 : ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000372db3 : ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x000002000017e0ab : ror dword ptr [rax - 0x75], 1 ; ret 0x348
0x00000200000b5931 : ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000097806 : ror dword ptr [rax - 0x75], 1 ; ret 0x8b44
0x00000200004e8523 : ror dword ptr [rax - 0x75], 1 ; ret 0xb49
0x0000020000100dc8 : ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000072865a : ror dword ptr [rax - 0x75], 4 ; ret 0xf41
0x0000020000591a35 : ror dword ptr [rax - 0x75], 5 ; ret
0x00000200000da4cd : ror dword ptr [rax - 0x75], cl ; add eax, 0x27702b ; call rax
0x00000200001b649c : ror dword ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0xb] ; fild dword ptr [rbp + 0x22] ; ret
0x0000020000546f47 : ror dword ptr [rax - 0x75], cl ; iretd ; call 0x200005d3162
0x00000200004be410 : ror dword ptr [rax - 0x75], cl ; iretd ; call r10
0x0000020000141582 : ror dword ptr [rax - 0x75], cl ; iretd ; call r15
0x00000200006729e0 : ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000010b200 : ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200001ab5c7 : ror dword ptr [rax - 0x75], cl ; iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200001dc67a : ror dword ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000070ae1 : ror dword ptr [rax - 0x75], cl ; ret
0x00000200006333bd : ror dword ptr [rax - 0x75], cl ; ret 0xb48
0x000002000039e6a4 : ror dword ptr [rax - 0x75], cl ; xor r8b, r13b ; ret 0xc928
0x0000020000513111 : ror dword ptr [rax - 0x77], 0x42 ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000045f745 : ror dword ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r12
0x00000200000f8b85 : ror dword ptr [rax - 0x77], 5 ; ret
0x0000020000235ef1 : ror dword ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000013211c
0x00000200003957c8 : ror dword ptr [rax - 0x77], cl ; jne 0x20000395842 ; call qword ptr [rsi]
0x00000200006718dc : ror dword ptr [rax - 0x7b], 1 ; sal byte ptr [rbx + rdx + 0x44], 0x8b ; ret 0x345
0x00000200004c0f93 : ror dword ptr [rax - 0x7d], -0x36 ; adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x0000020000435695 : ror dword ptr [rax - 0x7d], -0x3c ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000141e72 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000020000207487 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x0000020000417f86 : ror dword ptr [rax - 0x7d], -0x3c ; pop rdi ; ret
0x00000200004f822b : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop r14 ; ret
0x000002000002abb2 : ror dword ptr [rax - 0x7d], -0x3c ; ret
0x0000020000236881 : ror dword ptr [rax - 0x7d], -0x3c ; xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200001c0b65 : ror dword ptr [rax - 0x7d], -0x3e ; adc byte ptr [rbp + 0x3b], cl ; ret
0x000002000012d455 : ror dword ptr [rax - 0x7d], 0x38 ; add byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x00000200005d8da3 : ror dword ptr [rax - 0x7d], 1 ; ret
0x000002000010a082 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4804
0x0000020000603e86 : ror dword ptr [rax - 0x7d], 1 ; ret 0x490c
0x00000200000c16f0 : ror dword ptr [rax - 0x7d], 1 ; ret 0x8b18
0x0000020000632948 : ror dword ptr [rax - 0x7d], 1 ; ret 0xb902
0x000002000020d8eb : ror dword ptr [rax - 0x7d], cl ; ret
0x0000020000724d99 : ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000070d80a : ror dword ptr [rax - 0x7d], cl ; ret 0xe828
0x00000200000914fb : ror dword ptr [rax - 1], -0x3e ; jmp 0x20000091493
0x00000200003b5672 : ror dword ptr [rax - 1], 1 ; ret
0x0000020000407d18 : ror dword ptr [rax - 1], 1 ; ret 0x4466
0x00000200001359fe : ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200000a7a47 : ror dword ptr [rax - 1], 1 ; ret 0xc148
0x00000200005a68a4 : ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200006d0dd0 : ror dword ptr [rax - 9], 1 ; loop 0x200006d0e0d ; ret 0x8948
0x00000200006d16dd : ror dword ptr [rax - 9], 1 ; loop 0x200006d171a ; ret 0x8948
0x00000200006d1baf : ror dword ptr [rax - 9], 1 ; loop 0x200006d1bec ; ret 0x8948
0x00000200006d2023 : ror dword ptr [rax - 9], 1 ; loop 0x200006d2060 ; ret 0x8948
0x00000200006d2db8 : ror dword ptr [rax - 9], 1 ; loop 0x200006d2df5 ; ret 0x8948
0x00000200006d5f4b : ror dword ptr [rax - 9], 1 ; loop 0x200006d5f88 ; ret 0x8948
0x00000200006d60ac : ror dword ptr [rax - 9], 1 ; loop 0x200006d60e9 ; ret 0x8948
0x00000200006d68da : ror dword ptr [rax - 9], 1 ; loop 0x200006d6917 ; ret 0x8948
0x00000200006d7119 : ror dword ptr [rax - 9], 1 ; loop 0x200006d7156 ; ret 0x8948
0x00000200006d7ab2 : ror dword ptr [rax - 9], 1 ; loop 0x200006d7aef ; ret 0x8948
0x00000200006d7f4f : ror dword ptr [rax - 9], 1 ; loop 0x200006d7f8c ; ret 0x8948
0x00000200006d85f6 : ror dword ptr [rax - 9], 1 ; loop 0x200006d8633 ; ret 0x8948
0x00000200006d8e4a : ror dword ptr [rax - 9], 1 ; loop 0x200006d8e87 ; ret 0x8948
0x00000200006d92fa : ror dword ptr [rax - 9], 1 ; loop 0x200006d9337 ; ret 0x8948
0x00000200006d99d4 : ror dword ptr [rax - 9], 1 ; loop 0x200006d9a11 ; ret 0x8948
0x00000200006da222 : ror dword ptr [rax - 9], 1 ; loop 0x200006da25f ; ret 0x8948
0x00000200006da6c6 : ror dword ptr [rax - 9], 1 ; loop 0x200006da703 ; ret 0x8948
0x00000200006daf08 : ror dword ptr [rax - 9], 1 ; loop 0x200006daf45 ; ret 0x8948
0x00000200006db782 : ror dword ptr [rax - 9], 1 ; loop 0x200006db7bf ; ret 0x8948
0x00000200006dbc7c : ror dword ptr [rax - 9], 1 ; loop 0x200006dbcb9 ; ret 0x8948
0x00000200006dc1fd : ror dword ptr [rax - 9], 1 ; loop 0x200006dc23a ; ret 0x8948
0x00000200006dc8b0 : ror dword ptr [rax - 9], 1 ; loop 0x200006dc8ed ; ret 0x8948
0x00000200006dd11d : ror dword ptr [rax - 9], 1 ; loop 0x200006dd15a ; ret 0x8948
0x00000200006ddd5a : ror dword ptr [rax - 9], 1 ; loop 0x200006ddd97 ; ret 0x8948
0x00000200006de5dd : ror dword ptr [rax - 9], 1 ; loop 0x200006de61a ; ret 0x8948
0x00000200006deac8 : ror dword ptr [rax - 9], 1 ; loop 0x200006deb05 ; ret 0x8948
0x00000200006deff0 : ror dword ptr [rax - 9], 1 ; loop 0x200006df02d ; ret 0x8948
0x00000200006df46d : ror dword ptr [rax - 9], 1 ; loop 0x200006df4aa ; ret 0x8948
0x00000200006df93e : ror dword ptr [rax - 9], 1 ; loop 0x200006df97b ; ret 0x8948
0x00000200006dfe31 : ror dword ptr [rax - 9], 1 ; loop 0x200006dfe6e ; ret 0x8948
0x00000200006e01fb : ror dword ptr [rax - 9], 1 ; loop 0x200006e0238 ; ret 0x8948
0x00000200006e05cd : ror dword ptr [rax - 9], 1 ; loop 0x200006e060a ; ret 0x8948
0x00000200006e09c5 : ror dword ptr [rax - 9], 1 ; loop 0x200006e0a02 ; ret 0x8948
0x00000200006e0dc8 : ror dword ptr [rax - 9], 1 ; loop 0x200006e0e05 ; ret 0x8948
0x00000200006e11c5 : ror dword ptr [rax - 9], 1 ; loop 0x200006e1202 ; ret 0x8948
0x00000200006e15d9 : ror dword ptr [rax - 9], 1 ; loop 0x200006e1616 ; ret 0x8948
0x00000200006e19db : ror dword ptr [rax - 9], 1 ; loop 0x200006e1a18 ; ret 0x8948
0x00000200006e1dfb : ror dword ptr [rax - 9], 1 ; loop 0x200006e1e38 ; ret 0x8948
0x00000200006e2209 : ror dword ptr [rax - 9], 1 ; loop 0x200006e2246 ; ret 0x8948
0x00000200006e25da : ror dword ptr [rax - 9], 1 ; loop 0x200006e2617 ; ret 0x8948
0x00000200006e29dc : ror dword ptr [rax - 9], 1 ; loop 0x200006e2a19 ; ret 0x8948
0x00000200006e2e75 : ror dword ptr [rax - 9], 1 ; loop 0x200006e2eb2 ; ret 0x8948
0x00000200006e335f : ror dword ptr [rax - 9], 1 ; loop 0x200006e339c ; ret 0x8948
0x00000200006e3ec9 : ror dword ptr [rax - 9], 1 ; loop 0x200006e3f06 ; ret 0x8948
0x00000200006e4895 : ror dword ptr [rax - 9], 1 ; loop 0x200006e48d2 ; ret 0x8948
0x00000200006e4d4a : ror dword ptr [rax - 9], 1 ; loop 0x200006e4d87 ; ret 0x8948
0x00000200006e5324 : ror dword ptr [rax - 9], 1 ; loop 0x200006e5361 ; ret 0x8948
0x00000200006e54f6 : ror dword ptr [rax - 9], 1 ; loop 0x200006e5533 ; ret 0x8948
0x00000200006e59b4 : ror dword ptr [rax - 9], 1 ; loop 0x200006e59f1 ; ret 0x8948
0x00000200006e61cd : ror dword ptr [rax - 9], 1 ; loop 0x200006e620a ; ret 0x8948
0x00000200006e65fc : ror dword ptr [rax - 9], 1 ; loop 0x200006e6639 ; ret 0x8948
0x00000200006e6ab2 : ror dword ptr [rax - 9], 1 ; loop 0x200006e6aef ; ret 0x8948
0x00000200006e731f : ror dword ptr [rax - 9], 1 ; loop 0x200006e735c ; ret 0x8948
0x00000200006e78e6 : ror dword ptr [rax - 9], 1 ; loop 0x200006e7923 ; ret 0x8948
0x00000200006e7c3f : ror dword ptr [rax - 9], 1 ; loop 0x200006e7c7c ; ret 0x8948
0x00000200006e7f1c : ror dword ptr [rax - 9], 1 ; loop 0x200006e7f59 ; ret 0xbd83
0x00000200006e81e3 : ror dword ptr [rax - 9], 1 ; loop 0x200006e8220 ; ret 0x8948
0x000002000066f282 : ror dword ptr [rax - 9], 1 ; ret 0xf000
0x000002000017867b : ror dword ptr [rax - 9], 1 ; ret 0xfff
0x0000020000082a48 : ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000180f61 : ror dword ptr [rax], -0x10 ; jmp qword ptr [rcx]
0x0000020000507b91 : ror dword ptr [rax], -0x18 ; cmp ch, bh ; ret 0x89ff
0x0000020000418c98 : ror dword ptr [rax], -0x18 ; int1 ; hlt ; ret 0x48ff
0x00000200001d9663 : ror dword ptr [rax], -0x3d ; xor eax, eax ; ret
0x00000200004620bf : ror dword ptr [rax], -0x7d ; ret 0x4904
0x00000200000aae3b : ror dword ptr [rax], -0x7d ; ret 0x7402
0x000002000009fadb : ror dword ptr [rax], 0 ; jne 0x2000009fac7 ; mov qword ptr [r8 + 0x40], rcx ; ret
0x00000200005c5aed : ror dword ptr [rax], 0x3b ; ret 0xed72
0x00000200004be47b : ror dword ptr [rax], 0x41 ; cmp eax, eax ; jb 0x200004be47b ; xor al, al ; ret
0x000002000009c0d1 : ror dword ptr [rax], 0x41 ; cmp edx, eax ; jb 0x2000009c0cf ; ret
0x00000200005b5c9b : ror dword ptr [rax], 0x44 ; cmp ecx, edx ; jb 0x200005b5c98 ; ret
0x000002000036c9ea : ror dword ptr [rax], 0x48 ; cmp ecx, edx ; jbe 0x2000036c9e3 ; ret
0x00000200001000cd : ror dword ptr [rax], 0x48 ; dec edx ; jne 0x200001000c3 ; ret
0x000002000021eae8 : ror dword ptr [rax], 0x49 ; dec edx ; jne 0x2000021ead7 ; ret
0x00000200000dc087 : ror dword ptr [rax], 0x4d ; test eax, eax ; jne 0x200000dc09e ; ret
0x00000200000dc086 : ror dword ptr [rax], 0x4d ; test eax, eax ; jne 0x200000dc09f ; ret
0x000002000026263d : ror dword ptr [rax], 0x69 ; ret 0x48
0x00000200003f72cc : ror dword ptr [rax], 0x75 ; add ebx, eax ; bts dword ptr [rdx], 0x18 ; ret
0x0000020000026681 : ror dword ptr [rax], 0xf ; test dword ptr [rbx - 0x7cffec1b], esi ; jmp qword ptr [rax]
0x00000200000fdc62 : ror dword ptr [rax], cl ; ret
0x00000200000609e7 : ror dword ptr [rbp + 0x23], cl ; ret
0x000002000066f27c : ror dword ptr [rbp + 0x3348ff4e], 1 ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x0000020000113b40 : ror dword ptr [rbp + 0x33], -0x7c ; ret 0x5b0
0x000002000051b406 : ror dword ptr [rbp + 0x33], 1 ; ret
0x00000200001243a5 : ror dword ptr [rbp + 0x33], 4 ; ret
0x00000200001d9aa6 : ror dword ptr [rbp + 0x39], -0x74 ; ret
0x0000020000080662 : ror dword ptr [rbp + 0x39], -0x74 ; ret 0xd7c8
0x00000200001101ac : ror dword ptr [rbp + 0x39], 0x7c ; ret
0x00000200001ea0bd : ror dword ptr [rbp + 0x3b], -0x36 ; jb 0x200001ea098 ; ret
0x00000200001406c5 : ror dword ptr [rbp + 0x3b], -0x38 ; jb 0x200001406bd ; mov rax, r10 ; ret
0x000002000037efa2 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x000002000037ef30 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe875
0x000002000037ec26 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe975
0x000002000012743b : ror dword ptr [rbp + 0xf], 0x44 ; ret 0x345
0x00000200001f106f : ror dword ptr [rbp + 3], cl ; ret
0x000002000066d0c1 : ror dword ptr [rbp + rcx*4 + 0x35], -0x7d ; pop rcx ; ret
0x000002000066d124 : ror dword ptr [rbp + rcx*4 + 0x35], 0x24 ; pop rcx ; ret
0x00000200005d8d24 : ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x00000200001b22f1 : ror dword ptr [rbp - 0x75], -0x7c ; ret 0xf8a8
0x0000020000050671 : ror dword ptr [rbp - 0x75], 0x1c ; ret 0x894c
0x00000200005fa778 : ror dword ptr [rbp - 0x75], 1 ; ret
0x000002000064943e : ror dword ptr [rbp - 0x75], cl ; ret 0x1e8
0x0000020000185265 : ror dword ptr [rbp - 0x77], cl ; ret 0xe908
0x0000020000038ca8 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x20000038cbf ; ret
0x0000020000140691 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000014068b ; ret
0x00000200004496d3 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200004496c8 ; ret
0x00000200004496d2 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200004496c9 ; ret
0x0000020000272839 : ror dword ptr [rbp], -0x4b ; ret 0x4d
0x00000200005c291f : ror dword ptr [rbx + 0x4d8d48c2], cl ; out -1, eax ; ret 0x348
0x00000200001583e0 : ror dword ptr [rbx + rbp - 0x3f], 0x49 ; mov eax, eax ; pop rsi ; pop rdi ; ret
0x000002000070f8bd : ror dword ptr [rbx + rbp*8], -0x1e ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000233568 : ror dword ptr [rbx + rcx*4 - 0x40], 1 ; jmp 0x2000022f7aa
0x000002000020bb1c : ror dword ptr [rbx + rsi - 0x40], 1 ; cmp rcx, r10 ; jb 0x2000020bb0e ; ret
0x0000020000530716 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x00000200001f9f71 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x0000020000057b6e : ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000161f41 : ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x0000020000530834 : ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x0000020000585308 : ror dword ptr [rbx - 0x40], -0x17 ; ret
0x000002000013435a : ror dword ptr [rbx - 0x50f0ba3a], cl ; ret 0xf741
0x000002000007118f : ror dword ptr [rbx - 0x72b1efbd], 0xc ; ret
0x00000200006303eb : ror dword ptr [rbx - 0x7422143e], cl ; ret
0x0000020000231978 : ror dword ptr [rbx - 0x75], 0xc ; ret 0xff48
0x00000200003e6afe : ror dword ptr [rbx - 0x77], 0x44 ; shl dword ptr [rax], -1 ; ret 0x513b
0x0000020000231995 : ror dword ptr [rbx - 0x7d], 0x24 ; ret 0xf00
0x00000200001396ae : ror dword ptr [rcx + 0x12482], 0 ; ret
0x00000200003b5b43 : ror dword ptr [rcx + 0x2b], 1 ; ret 0x2b49
0x0000020000087acb : ror dword ptr [rcx + 0x2b], cl ; ret
0x00000200000809ae : ror dword ptr [rcx + 0x4920244c], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000020000143f7f : ror dword ptr [rcx + 0x63], 1 ; ret
0x000002000045ea6a : ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x000002000001fcb8 : ror dword ptr [rcx + 0x7f], cl ; wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x0000020000132e79 : ror dword ptr [rcx + 0xf], -0x51 ; ror byte ptr [rax - 0x75], cl ; ret 0x9948
0x00000200003ac911 : ror dword ptr [rcx + 3], -0x3e ; jmp 0x200003ac8d9
0x00000200006134c7 : ror dword ptr [rcx + 3], cl ; ret
0x00000200006caf2b : ror dword ptr [rcx + rcx*4 + 0x18], -0x7d ; ret 0x48f8
0x00000200006e0888 : ror dword ptr [rcx + rcx*4 + 0x38], -0x7d ; ret 0x48f8
0x00000200003aa663 : ror dword ptr [rcx + rcx*4 + 0x4d], 1 ; mov cl, ch ; ret 0xfff7
0x000002000020a314 : ror dword ptr [rcx + rcx*4 + 0xa], 0x41 ; mov eax, eax ; ret
0x00000200006e00db : ror dword ptr [rcx + rcx*4], -0x7d ; ret 0x48f8
0x000002000050864e : ror dword ptr [rcx - 0x17dfdb84], cl ; add al, 0xfa ; ret 0x48ff
0x00000200000f9b30 : ror dword ptr [rcx - 0x17dfdb94], cl ; ret 1
0x000002000036d8d5 : ror dword ptr [rcx - 0x2f], -0x17 ; jne 0x2000036d8a5 ; ret
0x0000020000712c07 : ror dword ptr [rcx - 0x39], cl ; ret
0x00000200001583e3 : ror dword ptr [rcx - 0x75], -0x40 ; pop rsi ; pop rdi ; ret
0x0000020000141d1c : ror dword ptr [rcx - 0x75], -0x40 ; ret
0x000002000012a84a : ror dword ptr [rcx - 0x75], -0x64 ; ret 0xd80
0x000002000050df04 : ror dword ptr [rcx - 0x75], -0x6c ; ret
0x00000200001b445d : ror dword ptr [rcx - 0x75], -0x74 ; ret
0x000002000012b753 : ror dword ptr [rcx - 0x75], -0x74 ; ret 0xd80
0x000002000002a929 : ror dword ptr [rcx - 0x75], -0x7c ; ret 0x968
0x00000200004f9977 : ror dword ptr [rcx - 0x75], 1 ; add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x000002000020cd94 : ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x0000020000100d20 : ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x000002000042d746 : ror dword ptr [rcx - 0x75], 9 ; mov qword ptr [rdx], rcx ; ret
0x00000200000a6c7f : ror dword ptr [rcx - 0x75], cl ; iretd ; call r12
0x00000200006c65d5 : ror dword ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x75] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x000002000020c03a : ror dword ptr [rcx - 0x75], cl ; ret
0x000002000011d27f : ror dword ptr [rcx - 0x77], 0x42 ; push rax ; mov byte ptr [r10 + 0x5f], r11b ; ret
0x00000200001bbaa1 : ror dword ptr [rcx - 0x77], 1 ; adc bl, al ; and qword ptr [r8], 0 ; ret
0x00000200006cdbfb : ror dword ptr [rcx - 0x77], 1 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x00000200000842e4 : ror dword ptr [rcx - 0x79], 0x34 ; ret 0x4c89
0x00000200006f1e1b : ror dword ptr [rcx - 0x7d], -0x38 ; and dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x00000200005f82d8 : ror dword ptr [rcx - 0x7d], -0x3c ; adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200003c8e18 : ror dword ptr [rcx - 0x7d], -0x40 ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200006cdfff : ror dword ptr [rcx - 0x7d], 1 ; ret 0x4808
0x00000200006c553d : ror dword ptr [rcx - 0x7f], 1 ; ret 0xbf
0x000002000041c4ae : ror dword ptr [rcx - 1], -0x36 ; jne 0x2000041c485 ; ret
0x00000200001411a9 : ror dword ptr [rcx - 1], -0x38 ; jne 0x200001411a9 ; xor rax, rax ; ret
0x0000020000158527 : ror dword ptr [rcx - 1], -0x38 ; jne 0x20000158526 ; ret
0x000002000013f997 : ror dword ptr [rcx - 1], 1 ; leave ; jne 0x2000013f947 ; mov eax, edx ; ret
0x000002000013f997 : ror dword ptr [rcx - 1], 1 ; leave ; jne 0x2000013f948 ; mov eax, edx ; ret
0x0000020000202667 : ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200004c0dd8 : ror dword ptr [rcx - 9], 1 ; fimul dword ptr [rbx - 0x936ccf0] ; ret 0xf01
0x000002000024b891 : ror dword ptr [rcx], 0 ; lodsb al, byte ptr [rsi] ; ret 9
0x000002000015c229 : ror dword ptr [rcx], cl ; add byte ptr [rax], al ; nop ; ret
0x00000200003a15e6 : ror dword ptr [rdi], -0x49 ; ret
0x000002000010681b : ror dword ptr [rdi], -0x49 ; ret 0x4166
0x00000200001067ff : ror dword ptr [rdi], -0x49 ; ret 0xbf41
0x000002000013fb16 : ror dword ptr [rdi], -0x4a ; ret
0x00000200005474e1 : ror dword ptr [rdi], -0x4a ; ret 0xf44
0x00000200003d9855 : ror dword ptr [rdi], -0x5d ; ret
0x000002000027a965 : ror dword ptr [rdi], -0x5d ; ret 0x4f
0x000002000012d011 : ror dword ptr [rdi], -0x6b ; ret 0xc28b
0x00000200003f26fc : ror dword ptr [rdi], -0x79 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200004bae1e : ror dword ptr [rdi], -0x79 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000699ef : ror dword ptr [rdi], -0x7a ; in al, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000070f890 : ror dword ptr [rdi], -0x7b ; cmp eax, 0x8b000174 ; ret 0x8d48
0x00000200006fdb9c : ror dword ptr [rdi], -0x7b ; ficomp word ptr [rdx + 2] ; add bh, bh ; ret
0x00000200004ea8ab : ror dword ptr [rdi], -0x7b ; mov byte ptr [rbp - 0x74b7fff5], dl ; ret 0x8b48
0x00000200006147cb : ror dword ptr [rdi], -0x7b ; popfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000003120f : ror dword ptr [rdi], -0x7b ; ret 1
0x000002000005a88c : ror dword ptr [rdi], -0x7c ; xor byte ptr [rax + 0x3b660011], cl ; ret 0x840f
0x00000200000b4065 : ror dword ptr [rdi], -0x7d ; ret 0xfffd
0x00000200001222f6 : ror dword ptr [rdi], -0x7d ; ret 8
0x00000200004709c8 : ror dword ptr [rdi], -0x7e ; outsd dx, dword ptr [rsi] ; ret 0x10
0x00000200003c3faf : ror dword ptr [rdi], -0x7e ; ret 0xfffd
0x00000200001942c7 : ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x00000200000c14fb : ror dword ptr [rdi], 0x44 ; ret 0x3b48
0x00000200000adebe : ror dword ptr [rdi], 0x44 ; ret 0xf741
0x00000200000c3858 : ror dword ptr [rdi], 0x45 ; ret 0xe82b
0x00000200001ffc61 : ror dword ptr [rdi], 1 ; adc dword ptr [rbp + 0xffffffe], -0x49 ; ret 0x394d
0x00000200006cd1a0 : ror dword ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; sar edi, cl ; ret
0x00000200000893cc : ror dword ptr [rdi], 1 ; test esp, esi ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x0000020000559ddc : ror dword ptr [rdi], cl ; lahf ; ret 0xefe9
0x0000020000559da0 : ror dword ptr [rdi], cl ; popfq ; ret 0x2be9
0x0000020000559dbe : ror dword ptr [rdi], cl ; pushfq ; ret 0xde9
0x0000020000559d82 : ror dword ptr [rdi], cl ; sahf ; ret 0x49e9
0x00000200005c4b8e : ror dword ptr [rdi], cl ; test byte ptr [rdx], ch ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x0000020000025d4d : ror dword ptr [rdi], cl ; test dword ptr [rbx - 0x9fffffe], ebx ; ret
0x00000200005b66e8 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x1db9
0x00000200005b66d8 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x27e8
0x000002000055a25c : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0x6fe9
0x000002000055a294 : ror dword ptr [rdi], cl ; xchg eax, edi ; ret 0x37e9
0x00000200004088ef : ror dword ptr [rdi], cl ; xchg eax, edx ; ret 0xdce9
0x000002000055a238 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0x93e9
0x00000200004087d0 : ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x1789
0x0000020000138872 : ror dword ptr [rdx - 0x3600b630], 0x75 ; out 0x8a, al ; ret 0xccc3
0x0000020000102a3b : ror dword ptr [rdx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x00000200001d9295 : ror dword ptr [rdx - 0x75], 0x44 ; ret 0x4808
0x00000200006789a9 : ror dword ptr [rsi - 0x52], cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000262ac9 : ror dword ptr [rsi], 0 ; insd dword ptr [rdi], dx ; ret 0xe
0x000002000060c53b : ror eax, 1 ; mov bl, 0xff ; add rsp, 0x48 ; ret
0x00000200003dae02 : ror eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x0000020000162818 : ror eax, cl ; mov eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001630d4 : ror eax, cl ; mov eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003dafda : ror eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003daa5e : ror eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x0000020000669de0 : ror ecx, -1 ; test rax, rax ; je 0x20000669df4 ; jmp rax
0x00000200003daebf : ror ecx, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003db50b : ror ecx, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003dad67 : ror ecx, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200006030ff : ror edx, 1 ; push rsi ; ret
0x0000020000602f9f : ror edx, cl ; push rsi ; ret
0x00000200000108a2 : ror esi, -0x1c ; leave ; movsxd rax, eax ; ret
0x0000020000435694 : ror qword ptr [rax - 0x7d], -0x3c ; and byte ptr [rcx + 0x5e], al ; ret
0x00000200000fdc61 : ror qword ptr [rax], cl ; ret
0x00000200003dae01 : ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003dafd9 : ror r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003daa5d : ror r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200003daebe : ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003db50a : ror r9d, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003dad66 : ror r9d, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200004466c2 : sahf ; adc al, byte ptr [rax] ; mov rcx, rbp ; call 0x2000006a619
0x0000020000625715 : sahf ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x0000020000611f47 : sahf ; add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200001ebfce : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000054d291 : sahf ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb70da9], cl ; ret
0x000002000054bcb7 : sahf ; call 0x1ffc2e005c1
0x00000200000a4dc6 : sahf ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000038a7f4 : sahf ; cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, byte ptr [rax] ; mov al, 6 ; ret
0x000002000048c6e6 : sahf ; fbld dword ptr [rcx] ; add dh, dh ; ret
0x000002000000d0e9 : sahf ; fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x00000200005d961a : sahf ; hlt ; ret 0x4cff
0x00000200004fb4f0 : sahf ; lea rcx, qword ptr [rbp - 9] ; mov rdx, rsi ; call r12
0x000002000000d655 : sahf ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x0000020000722fc2 : sahf ; loope 0x20000722f89 ; call qword ptr [rax]
0x0000020000722fc2 : sahf ; loope 0x20000722f8a ; call qword ptr [rax]
0x00000200000e915f : sahf ; mov al, byte ptr [rip - 0x79f10000] ; sysenter
0x000002000043842f : sahf ; mov rsi, r14 ; jmp 0x200004383fc
0x000002000043720e : sahf ; nop ; ret
0x000002000050214e : sahf ; or eax, 0x8948ffda ; adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x00000200005797ac : sahf ; out dx, al ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0x00000200006c626b : sahf ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006cd926 : sahf ; pop rax ; add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x0000020000379a0f : sahf ; push rsi ; ret
0x0000020000003205 : sahf ; ret
0x00000200004f5e79 : sahf ; ret 0x45ff
0x00000200004f7096 : sahf ; ret 0x48ff
0x0000020000559d84 : sahf ; ret 0x49e9
0x00000200004f707d : sahf ; ret 0x4cff
0x00000200003d91cb : sahf ; ret 0xe8ff
0x0000020000408066 : sahf ; sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x0000020000403fc4 : sahf ; sar bh, 0xc0 ; add rsp, 0x38 ; ret
0x00000200004b1db6 : sahf ; sar bh, 0xc0 ; ret
0x00000200001ff576 : sahf ; sbb dl, byte ptr [rip + 0x73d03b00] ; or al, 0x8b ; ret 0x8b4d
0x00000200001709cf : sahf ; sbb esi, ebp ; push rsi ; ret 0xf07
0x000002000041d7d2 : sal ah, 0x8b ; push rdi ; or byte ptr [rbx], bh ; ret 0x820f
0x000002000008d940 : sal al, 0x4c ; cmpxchg dword ptr [rcx], eax ; jne 0x2000008d923 ; ret
0x000002000048b65e : sal al, 0xc3 ; xor eax, eax ; ret
0x000002000002556d : sal al, 0xf ; mov cl, 0x1d ; ret 0x288f
0x000002000059ac71 : sal al, 0xf ; mov cl, 0xd ; ret 0xd6b2
0x0000020000124b3a : sal al, 1 ; and dword ptr [r10], eax ; ret
0x00000200000f0ab3 : sal al, 1 ; and dword ptr [r8], eax ; jmp 0x200000f0a83
0x00000200005f5fd5 : sal al, 1 ; and dword ptr [r8], eax ; ret
0x000002000011b5d2 : sal al, 1 ; inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x2000011b5cf
0x000002000060b83d : sal bh, 0xd0 ; and eax, 0xc0000001 ; ret
0x00000200000e61c8 : sal bh, 0xd0 ; and eax, 0xc000000d ; ret
0x00000200004c2bb9 : sal bh, 0xd0 ; and eax, 0xc0000034 ; ret
0x00000200003ee017 : sal bh, 0xd0 ; and eax, 0xc00002b9 ; ret
0x00000200001b6547 : sal bh, 0xd8 ; inc eax ; ret
0x000002000008cc10 : sal bh, 0xf1 ; ret
0x0000020000415b39 : sal bh, 1 ; ret 0x7000
0x000002000056b07b : sal bh, 1 ; ret 0xc000
0x0000020000208dad : sal bh, 1 ; ret 0xfff7
0x0000020000029fb7 : sal bh, 5 ; ret 0x3270
0x000002000019d1fd : sal bl, 0xf ; jg 0x2000019d209 ; ret
0x000002000020b738 : sal bl, 1 ; nop ; test al, 1 ; je 0x2000020b72b ; xor al, al ; ret
0x0000020000672ec2 : sal bl, cl ; ret 0x48ff
0x00000200005d0539 : sal byte ptr [r11 + 0x474006a], 1 ; inc edx ; jmp 0x200005d0561
0x000002000046e451 : sal byte ptr [rax + 0x48], 3 ; ret
0x000002000048a02c : sal byte ptr [rax + rax*2 - 0x75], 0x43 ; adc al, 0x23 ; ret 0xc084
0x000002000068d83b : sal byte ptr [rax + rbp - 0x75], cl ; xor al, 0x3b ; ret 0x2675
0x00000200000e9adb : sal byte ptr [rax + rbp*2 + 0x4c], 0x8b ; ror byte ptr [rcx + 0x69], 1 ; ret
0x000002000070d12b : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret
0x00000200000e1ef5 : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret 0x2b49
0x000002000066410a : sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x00000200003e6630 : sal byte ptr [rax + rbx*2 + 0x44], 0x3b ; ret
0x0000020000672b0b : sal byte ptr [rax + rbx*2 - 0x7d], 0x3d ; lahf ; push rsp ; ret 0x2ff
0x00000200001d1276 : sal byte ptr [rax + rcx + 0x41], 0xff ; ret
0x000002000043c58a : sal byte ptr [rax + rcx + 0x48], 0x8b ; enter 0x3be8, -0x36 ; ret 0x48ff
0x00000200006729db : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200006f2b4d : sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0x00000200006808fd : sal byte ptr [rax + rcx + 0x48], cl ; add esp, 0x30 ; pop rbx ; jmp r10
0x0000020000462057 : sal byte ptr [rax + rcx + 0x48], cl ; mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000378954 : sal byte ptr [rax + rdi - 0x75], cl ; ret 0xe8c1
0x000002000009c0c5 : sal byte ptr [rax + rdx + 0x48], 0x39 ; add dword ptr [rsp - 1], esi ; ret 0x8348
0x00000200006729bf : sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x00000200006728ab : sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x0000020000663f31 : sal byte ptr [rax + rdx + 0x49], 0x3b ; ret 0xb74
0x0000020000372f03 : sal byte ptr [rax + rdx + 0x49], 0x8b ; iretd ; call rax
0x00000200004ba640 : sal byte ptr [rax + rdx + 0x49], 3 ; ret 0x69e9
0x000002000042076c : sal byte ptr [rax + rdx - 0x75], 0x50 ; add al, 0xf6 ; ret 0x7520
0x00000200003e65b7 : sal byte ptr [rax + rdx*2 + 0x44], 0x3b ; ret
0x0000020000416ba2 : sal byte ptr [rax + rsi + 0x44], 0x8b ; ret
0x000002000018e14b : sal byte ptr [rax + rsi + 0x4c], 0x33 ; fisttp dword ptr [rcx - 9] ; ret
0x000002000020c488 : sal byte ptr [rax - 0x3fcd3cff], cl ; ret
0x0000020000554e2e : sal byte ptr [rax - 2], 0xff ; dec dword ptr [rax - 0x7f] ; ret 0xfd30
0x0000020000268c43 : sal byte ptr [rax], 0xf1 ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1036
0x00000200005f53d6 : sal byte ptr [rbp + 0x10], 0xff ; ret
0x000002000065e45c : sal byte ptr [rbp + 0x12], 0x39 ; ret
0x000002000010b4a8 : sal byte ptr [rbp + 0x14], cl ; add rsp, 0x28 ; ret
0x00000200000c4d41 : sal byte ptr [rbp + 0x15], cl ; mov eax, 1 ; ret
0x000002000003d0f2 : sal byte ptr [rbp + 0x16], 0x48 ; add esp, 0x28 ; ret
0x000002000046ec4f : sal byte ptr [rbp + 0x18], 0xbb ; and eax, 0x8bc00002 ; ret
0x00000200000fcdc2 : sal byte ptr [rbp + 0x19], 0x48 ; btr eax, 0xd ; ret
0x000002000042ff7c : sal byte ptr [rbp + 0x19], 0x8b ; ret
0x00000200006471db : sal byte ptr [rbp + 0x19], 0xf6 ; ret 0x7401
0x000002000043df46 : sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200001bf79c : sal byte ptr [rbp + 0x1d], 0xff ; ret
0x000002000048009e : sal byte ptr [rbp + 0x21], 0xff ; ret
0x00000200000e29f4 : sal byte ptr [rbp + 0x24], 0x48 ; mov eax, ecx ; ret
0x000002000056dc8e : sal byte ptr [rbp + 0x29], 0x8b ; pop rbp ; mov al, 0xf6 ; ret
0x0000020000643c85 : sal byte ptr [rbp + 0x2e], 0xff ; ret
0x000002000040e8cc : sal byte ptr [rbp + 0x2f], 0xff ; ret
0x000002000043ef7b : sal byte ptr [rbp + 0x30], 0x8b ; ret
0x0000020000201f5f : sal byte ptr [rbp + 0x31], 0xff ; ret 0x8348
0x00000200006360c0 : sal byte ptr [rbp + 0x3e], 0xff ; ret 0xc28b
0x0000020000404047 : sal byte ptr [rbp + 0x41], 1 ; sub edx, eax ; mov eax, edx ; jmp 0x2000040400e
0x000002000018e869 : sal byte ptr [rbp + 0x42], 0x8b ; ret
0x000002000064f263 : sal byte ptr [rbp + 0x44], 0x8b ; ret 0x8d4c
0x000002000020ba83 : sal byte ptr [rbp + 0x4c], 0x8b ; ret
0x000002000064fdb9 : sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x0000020000621233 : sal byte ptr [rbp + 0x5b], 0xf7 ; ret 0
0x0000020000206a74 : sal byte ptr [rbp + 0x6c], 0xff ; ret
0x0000020000645457 : sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200001be40f : sal byte ptr [rbp + 0xa], 0x48 ; mov edx, ebx ; mov rcx, rdi ; call rsi
0x00000200006df033 : sal byte ptr [rbp + 0xa], 0x8b ; salc ; mov rcx, rbx ; call r12
0x0000020000667187 : sal byte ptr [rbp + 0xb], 0xff ; ret
0x000002000043eb10 : sal byte ptr [rbp + 0xd], 0xff ; ret
0x00000200001315ee : sal byte ptr [rbp + 1], 0xc3 ; jmp rax
0x00000200001c4611 : sal byte ptr [rbp + 1], 0xc3 ; mov rax, qword ptr [rax + 0x18] ; ret
0x00000200000645b4 : sal byte ptr [rbp + 1], cl ; ret
0x00000200005d4117 : sal byte ptr [rbp + 2], 0x8b ; ret
0x000002000067c1b9 : sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x00000200004a0647 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x000002000010af97 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x0000020000123838 : sal byte ptr [rbp + 3], 0x8b ; ret 0x66c3
0x000002000002a934 : sal byte ptr [rbp + 3], 1 ; mov al, 1 ; ret
0x00000200004ad6a9 : sal byte ptr [rbp + 3], cl ; mov al, 1 ; ret
0x00000200000b8184 : sal byte ptr [rbp + 3], cl ; mov eax, ecx ; ret
0x0000020000202655 : sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x000002000008ece1 : sal byte ptr [rbp + 4], 0x41 ; mov eax, eax ; ret
0x00000200001bf846 : sal byte ptr [rbp + 4], 0xff ; ret
0x00000200005cee24 : sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200001d898d : sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x00000200000b55dd : sal byte ptr [rbp + 4], cl ; mov qword ptr [r8], rcx ; ret
0x00000200000b8c26 : sal byte ptr [rbp + 4], cl ; or byte ptr [rcx + 9], 4 ; ret
0x000002000046536b : sal byte ptr [rbp + 5], 0x48 ; add esp, 0x28 ; ret
0x0000020000036446 : sal byte ptr [rbp + 5], 0x48 ; mov eax, dword ptr [rcx + 8] ; ret
0x000002000021793b : sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x2000021795c
0x000002000037e037 : sal byte ptr [rbp + 5], cl ; mov eax, r10d ; jmp 0x2000037e04d
0x00000200001234ee : sal byte ptr [rbp + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000ea410 : sal byte ptr [rbp + 6], 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x000002000049e067 : sal byte ptr [rbp + 6], 0x48 ; test edx, edx ; je 0x2000049e05d ; ret
0x000002000020296e : sal byte ptr [rbp + 6], 0x8b ; ret
0x00000200000ec999 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004b1aae : sal byte ptr [rbp + 6], 1 ; mov eax, 1 ; ret
0x0000020000101835 : sal byte ptr [rbp + 6], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000dc091 : sal byte ptr [rbp + 7], 0x33 ; rol bl, 0x4d ; mov dword ptr [rax], ecx ; ret
0x000002000053d332 : sal byte ptr [rbp + 7], 0x8b ; ret
0x00000200005404f0 : sal byte ptr [rbp + 7], 0xf ; mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x000002000021c3c9 : sal byte ptr [rbp + 7], 0xff ; ret
0x000002000039b2f1 : sal byte ptr [rbp + 7], cl ; xor al, al ; add rsp, 0x28 ; ret
0x000002000003c901 : sal byte ptr [rbp + 8], 0x3a ; xchg eax, ecx ; ret
0x00000200005b6697 : sal byte ptr [rbp + 8], 1 ; xor eax, eax ; ret
0x000002000048bbd1 : sal byte ptr [rbp + 8], cl ; xor eax, eax ; ret
0x00000200001245e0 : sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x000002000009b536 : sal byte ptr [rbp + rax + 0x39], 0x50 ; or byte ptr [rbp + 1], dh ; ret
0x000002000066cfa9 : sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x0000020000672b46 : sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x00000200001032e6 : sal byte ptr [rbp + rax + 0x48], 0x8b ; ret
0x0000020000461c1f : sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x00000200003fc73d : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x00000200003ac92f : sal byte ptr [rbp + rax + 0x49], 3 ; ret 0x84eb
0x0000020000643198 : sal byte ptr [rbp + rax + 0x66], 0x3b ; ret 0x775
0x00000200000c0088 : sal byte ptr [rbp + rax + 0x66], cl ; mov dword ptr [rcx], r11d ; ret
0x00000200002392cf : sal byte ptr [rbp + rax + 0xf], 0xaf ; ret 0xc803
0x000002000003864e : sal byte ptr [rbp + rax - 0x18], 0x1e ; ret
0x000002000020baa3 : sal byte ptr [rbp + rax*2 + 0x4c], 0x8b ; ret
0x00000200003ac8fd : sal byte ptr [rbp + rbx + 0x49], 3 ; ret 0x3aeb
0x0000020000514379 : sal byte ptr [rbp + rbx*2 + 0x44], 0x8b ; ret
0x0000020000137aba : sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x0000020000663f7b : sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x0000020000423e79 : sal byte ptr [rbp + rcx + 0x49], cl ; mov ecx, edx ; call 0x20000520188
0x00000200006423a7 : sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x000002000041da21 : sal byte ptr [rbp + rcx + 0xf], 0xb6 ; ret
0x000002000010f26d : sal byte ptr [rbp + rcx - 0x18], cl ; ret
0x0000020000055f81 : sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x000002000020ba93 : sal byte ptr [rbp + rdx*2 + 0x4c], 0x8b ; ret
0x0000020000141f4d : sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x00000200004d2a62 : sal byte ptr [rbp - 0x11], 0x49 ; cmp eax, eax ; je 0x200004d2a3b ; ret
0x00000200003ef4bd : sal byte ptr [rbp - 0x13], cl ; mov eax, 0xc000000d ; ret
0x00000200004b00c4 : sal byte ptr [rbp - 0x14], 0xeb ; ret 0xcccc
0x00000200005111d6 : sal byte ptr [rbp - 0x15], 0x85 ; sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x00000200006f58a2 : sal byte ptr [rbp - 0x15], 1 ; ret
0x00000200001048fb : sal byte ptr [rbp - 0x16], cl ; ret
0x0000020000482026 : sal byte ptr [rbp - 0x17], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000672455 : sal byte ptr [rbp - 0x17], cl ; ret
0x0000020000674c61 : sal byte ptr [rbp - 0x18], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000003d986 : sal byte ptr [rbp - 0x19], 0xe9 ; ret
0x0000020000689154 : sal byte ptr [rbp - 0x1a], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000797e7 : sal byte ptr [rbp - 0x1a], 0xe9 ; ret
0x00000200006f9aee : sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x00000200003ef45d : sal byte ptr [rbp - 0x20], 0x41 ; cmp ecx, 6 ; jne 0x200003ef4c9 ; ret
0x0000020000210369 : sal byte ptr [rbp - 0x26], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000facfe : sal byte ptr [rbp - 0x28], 0x41 ; mov eax, ecx ; ret
0x0000020000198df6 : sal byte ptr [rbp - 0x29], 0xe9 ; jmp rsi
0x000002000016fd43 : sal byte ptr [rbp - 0x29], 0xeb ; ret
0x000002000066844b : sal byte ptr [rbp - 0x2a], 0xc3 ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000014d8a3 : sal byte ptr [rbp - 0x2b], 0x33 ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000014216b : sal byte ptr [rbp - 0x2e], 0x48 ; sub eax, ecx ; sar rax, 1 ; ret
0x000002000013fed7 : sal byte ptr [rbp - 0x34], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000600a30 : sal byte ptr [rbp - 0x35], 0x48 ; add esp, 0x38 ; ret
0x000002000014d85a : sal byte ptr [rbp - 0x3a], cl ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200006fa11f : sal byte ptr [rbp - 0x3d], 1 ; xor eax, eax ; ret
0x00000200001421d4 : sal byte ptr [rbp - 0x3e], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200004babcc : sal byte ptr [rbp - 0x4a], 0x8b ; xor al, 0x33 ; ret 0xc148
0x00000200004bf35b : sal byte ptr [rbp - 0x52], 0xe9 ; ret
0x0000020000510bf0 : sal byte ptr [rbp - 0x58], 0x8b ; ret
0x00000200001cccfc : sal byte ptr [rbp - 0x7b], 0x8b ; ret
0x000002000047a383 : sal byte ptr [rbp - 0xa], cl ; ret
0x00000200006e31f1 : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0x8b411ff2 ; ret
0x000002000007007b : sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x0000020000141824 : sal byte ptr [rbp - 0xd], 0x3a ; ret 0x475
0x000002000070eb31 : sal byte ptr [rbp - 0xd], 0xeb ; xchg eax, edx ; mov al, 1 ; ret
0x0000020000465357 : sal byte ptr [rbp - 0xe], 1 ; ret
0x00000200001cda82 : sal byte ptr [rbp - 0xf], 0x48 ; add esp, 0x28 ; ret
0x000002000011527f : sal byte ptr [rbp - 9], 0x49 ; mov ecx, eax ; jmp rdx
0x00000200005a89fd : sal byte ptr [rbx + 0x44], 0x8b ; ret
0x00000200005d053a : sal byte ptr [rbx + 0x474006a], 1 ; inc edx ; jmp 0x200005d0560
0x00000200004c452c : sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x00000200000cac11 : sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x00000200000727e4 : sal byte ptr [rbx + 0xc], 1 ; mov qword ptr [r10], rdx ; mov rax, r8 ; ret
0x000002000002a96c : sal byte ptr [rbx + rax + 0x32], 0xc0 ; ret
0x0000020000404eb9 : sal byte ptr [rbx + rax + 0x48], 0x8b ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000669de5 : sal byte ptr [rbx + rax + 0x48], 0xff ; loopne 0x20000669e3c ; jmp rax
0x00000200001cbe01 : sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x000002000049275d : sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x00000200000a5e79 : sal byte ptr [rbx + rax + 0x4d], 0xb ; ret
0x0000020000235ac1 : sal byte ptr [rbx + rax - 0x3a], cl ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200000c95ad : sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200000b5971 : sal byte ptr [rbx + rax - 0x75], 0xc1 ; ret
0x00000200003efc32 : sal byte ptr [rbx + rax*2 - 0xa], cl ; ret 0x7501
0x000002000021506f : sal byte ptr [rbx + rbx - 0xa], cl ; ret 0x7502
0x00000200003e654d : sal byte ptr [rbx + rbx*8 + 0x32], 0xc0 ; ret
0x00000200004cb8df : sal byte ptr [rbx + rcx + 0x48], 0x8b ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006d1935 : sal byte ptr [rbx + rcx - 0x3a], 3 ; add byte ptr [rax - 1], cl ; ret
0x00000200006718df : sal byte ptr [rbx + rdx + 0x44], 0x8b ; ret 0x345
0x0000020000116901 : sal byte ptr [rbx + rdx + 0x48], 0x8b ; ret 0x2b48
0x000002000013d246 : sal byte ptr [rbx + rdx + 0x49], 0x81 ; ret
0x00000200000f8574 : sal byte ptr [rbx + rdx*2 - 0xa], 1 ; ret
0x000002000060bb6d : sal byte ptr [rbx - 0x3b7cb701], cl ; pop rbx ; ret
0x00000200005f9bb4 : sal byte ptr [rbx], 0xc0 ; add rsp, 0x38 ; ret
0x0000020000108787 : sal byte ptr [rbx], 0xc0 ; mov word ptr [r10 + 2], r8w ; ret
0x000002000015e2d1 : sal byte ptr [rbx], 0xc0 ; ret
0x000002000070b906 : sal byte ptr [rbx], 0xc9 ; call 0x200000b7b3d
0x00000200001b9217 : sal byte ptr [rbx], 0xd2 ; call 0x20000045495
0x0000020000420627 : sal byte ptr [rbx], 0xd2 ; call 0x20000045496
0x00000200001056b9 : sal byte ptr [rbx], 0xd2 ; call 0x20000045499
0x0000020000442717 : sal byte ptr [rbx], 0xd2 ; call 0x200000702b6
0x000002000046b1ce : sal byte ptr [rbx], 0xd2 ; call qword ptr [rdi]
0x0000020000124513 : sal byte ptr [rbx], 0xd2 ; call r9
0x00000200004d4059 : sal byte ptr [rbx], 0xd2 ; mov byte ptr [rbp + 0x3a], r13b ; call 0x200000702b9
0x0000020000443caf : sal byte ptr [rbx], 0xd2 ; mov rcx, r12 ; call 0x200000702b9
0x0000020000440476 : sal byte ptr [rbx], 0xd2 ; mov rcx, r13 ; call 0x200000702b9
0x0000020000442a1f : sal byte ptr [rbx], 0xd2 ; mov rcx, r14 ; call 0x200000702b9
0x0000020000448e16 : sal byte ptr [rbx], 0xd2 ; mov rcx, r15 ; call 0x200000702b9
0x0000020000443fac : sal byte ptr [rbx], 0xd2 ; mov rcx, rbp ; call 0x200000702b8
0x00000200004476c5 : sal byte ptr [rbx], 0xd2 ; mov rcx, rbp ; call 0x200000702b9
0x00000200001c3fed : sal byte ptr [rbx], 0xd2 ; mov rcx, rbx ; call 0x200000702b8
0x00000200004417c1 : sal byte ptr [rbx], 0xd2 ; mov rcx, rbx ; call 0x200000702b9
0x0000020000573fe4 : sal byte ptr [rbx], 0xd2 ; mov rcx, rdi ; call 0x200000702b8
0x00000200004441b1 : sal byte ptr [rbx], 0xd2 ; mov rcx, rdi ; call 0x200000702b9
0x00000200004489f1 : sal byte ptr [rbx], 0xd2 ; mov rcx, rsi ; call 0x200000702b9
0x000002000016605a : sal byte ptr [rbx], 0xd2 ; xor ecx, ecx ; call 0x20000042297
0x00000200003ed34e : sal byte ptr [rbx], 1 ; rol bl, 0x49 ; mov eax, eax ; ret
0x000002000016605c : sal byte ptr [rbx], cl ; leave ; call 0x20000042295
0x0000020000604f1c : sal byte ptr [rbx], cl ; leave ; call 0x20000066c29
0x0000020000134770 : sal byte ptr [rbx], cl ; leave ; call rax
0x000002000058a685 : sal byte ptr [rbx], cl ; leave ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x00000200002306fb : sal byte ptr [rbx], cl ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200007162c6 : sal byte ptr [rcx + 0x1115ff1e], cl ; scasb al, byte ptr [rdi] ; ret
0x0000020000430d9e : sal byte ptr [rcx + 0x49], 0x8b ; ret
0x000002000014579d : sal byte ptr [rcx + 0x49], 0xff ; ret 0xf45
0x00000200000e1b8e : sal byte ptr [rcx + 0x4d], 0x8b ; ret 0x2b4c
0x0000020000637166 : sal byte ptr [rcx + rax*4 + 0x44], 0x8b ; ret
0x00000200003ac90f : sal byte ptr [rcx + rax*8 + 0x49], 3 ; ret 0xbfeb
0x00000200002162d5 : sal byte ptr [rcx + rbp + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x0000020000144f20 : sal byte ptr [rcx + rbp + 0x49], 0xff ; ret
0x0000020000171420 : sal byte ptr [rcx + rbx - 0x75], 1 ; ret 0x41f0
0x0000020000634157 : sal byte ptr [rcx + rbx*2 + 0x48], 0x8d ; push rsp ; and al, 0x58 ; call rax
0x00000200004ab171 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; out dx, eax ; call rax
0x0000020000672a36 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x00000200005415bc : sal byte ptr [rcx + rcx + 0x49], 0x8b ; iretd ; call rax
0x0000020000643057 : sal byte ptr [rcx + rcx + 0x66], 0x3b ; ret 0x850f
0x0000020000672a4b : sal byte ptr [rcx + rcx - 0x75], 0xd7 ; mov rcx, rbx ; call rax
0x000002000068f263 : sal byte ptr [rcx + rdi + 0x41], 0x8b ; ret 0xff41
0x0000020000141fa2 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret 0x4402
0x00000200000d5426 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret 0x4810
0x0000020000385fb7 : sal byte ptr [rcx + rdx + 0x48], 0x8b ; ret 0xc148
0x0000020000707f1c : sal byte ptr [rcx + rdx - 0x75], cl ; ret 0xd148
0x00000200003e671f : sal byte ptr [rcx + rdx*2 + 0x44], 0x3b ; ret
0x0000020000137038 : sal byte ptr [rcx + rsi*2 + 0x4d], 0x8b ; ret
0x0000020000432512 : sal byte ptr [rcx + rsi*8 + 0x48], 0x8b ; enter -0x4c18, 0x6a ; ret
0x0000020000457ff6 : sal byte ptr [rcx - 0xa], cl ; ret 0x7503
0x00000200000c91b4 : sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x0000020000227f79 : sal byte ptr [rdi + 0x41], 0x84 ; ret 0x1974
0x00000200000eb86d : sal byte ptr [rdi + 0x47], 1 ; ret
0x0000020000054ce2 : sal byte ptr [rdi + rax + 0x3c], 2 ; je 0x20000054cfa ; mov eax, ecx ; ret
0x00000200000c35ac : sal byte ptr [rdi + rax + 0x41], 0x2a ; ret 0x388
0x00000200001dce9f : sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x00000200005e4a90 : sal byte ptr [rdi + rax + 0x48], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000595e63 : sal byte ptr [rdi + rax + 0x4c], 0x89 ; xlatb ; or bh, bh ; ret 0xc1ff
0x00000200001319f5 : sal byte ptr [rdi + rax - 0x3a], cl ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200001f2c50 : sal byte ptr [rdi + rax - 1], cl ; sub byte ptr [rax], 0x1f ; add byte ptr [rax], al ; ret
0x00000200003d8bea : sal byte ptr [rdi + rax*4 + 0x4c], 0x8b ; ret
0x000002000022f038 : sal byte ptr [rdi + rax*8 + 0x44], 0x8b ; ret
0x000002000021a0a5 : sal byte ptr [rdi + rbp + 0x44], 0x8b ; ret
0x00000200003ac8f0 : sal byte ptr [rdi + rbp + 0x49], 3 ; ret 0xd1eb
0x00000200003b2de5 : sal byte ptr [rdi + rbp*2 + 0x48], 0x8b ; push rcx ; call rax
0x000002000038e155 : sal byte ptr [rdi + rbx*2 + 0x48], 0x83 ; ret
0x00000200005db554 : sal byte ptr [rdi + rbx*2 - 0xa], cl ; ret
0x00000200002065af : sal byte ptr [rdi + rcx + 0x48], 0x83 ; ret 0x310
0x00000200000fcf6b : sal byte ptr [rdi + rcx + 0x48], 0x8b ; ret 0x8b44
0x0000020000514159 : sal byte ptr [rdi + rcx + 0x48], 0xff ; ret 0x3b49
0x00000200004c8a9f : sal byte ptr [rdi + rcx + 0x4c], 0x8b ; ret 0x8b49
0x0000020000618871 : sal byte ptr [rdi + rdi*4 + 0x48], 0x8b ; and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x00000200000ff546 : sal byte ptr [rdi + rdi*4 + 0x4d], 0x8b ; or byte ptr [rbx], al ; ret
0x00000200005111da : sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x0000020000572f6c : sal byte ptr [rdi - 0x1a], 1 ; ret
0x0000020000369472 : sal byte ptr [rdx + 0x21], 0xf6 ; ret 0x7504
0x000002000019508b : sal byte ptr [rdx + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200005c20be : sal byte ptr [rdx + 0x48], 3 ; ror byte ptr [rax - 0x73], 0xc ; ret
0x00000200001e7d69 : sal byte ptr [rdx + 0xd], 0xff ; ret
0x000002000009722b : sal byte ptr [rdx + 4], 1 ; mov al, r8b ; ret
0x00000200001c28a7 : sal byte ptr [rdx + rax - 0x4e], 1 ; mov al, dl ; ret
0x00000200001cbd72 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 0x28 ; ret
0x00000200004fd8b3 : sal byte ptr [rdx + rbp + 0x44], 0x8a ; ret
0x00000200003a3353 : sal byte ptr [rdx + rbx + 0x44], 0x8a ; ret 0x8d48
0x00000200000b8179 : sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret 0x2b49
0x00000200007201e9 : sal byte ptr [rdx + rbx - 0x75], 5 ; xchg byte ptr [rsi], cl ; ret
0x00000200004b1a9e : sal byte ptr [rdx + rbx - 0x75], cl ; ret 0xc2ff
0x0000020000141771 : sal byte ptr [rdx + rcx + 0x48], 0xff ; ret 0xc2f6
0x00000200001f35f8 : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x0000020000439f55 : sal byte ptr [rdx + rdx + 0x48], 0x8b ; ret
0x0000020000061b9b : sal byte ptr [rdx + rdx + 0x4d], 0x3b ; ret 0x870f
0x000002000020794c : sal byte ptr [rdx + rdx*4 + 0x44], 0x8b ; ret
0x00000200005febcb : sal byte ptr [rdx + rdx*8 + 0x48], 0x8b ; ret
0x000002000061cb5f : sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x00000200004cbad6 : sal byte ptr [rdx + rsi*8 - 0x75], cl ; and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x000002000009c0d5 : sal byte ptr [rdx - 0x10], 1 ; ret
0x000002000020c427 : sal byte ptr [rdx - 0x11], 0xb0 ; add ebx, eax ; xor al, al ; ret
0x0000020000024c83 : sal byte ptr [rdx - 0x1d], cl ; xor eax, eax ; ret
0x00000200004b4c11 : sal byte ptr [rdx - 0x1e], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020c486 : sal byte ptr [rdx - 0x2e], cl ; mov al, 1 ; ret
0x0000020000079a4d : sal byte ptr [rdx - 0x42], cl ; ret
0x0000020000054f8a : sal byte ptr [rdx - 0xc], 1 ; mov rax, r8 ; ret
0x0000020000192a14 : sal byte ptr [rdx - 0xd], 0x8b ; ret 0x1589
0x000002000020c443 : sal byte ptr [rdx - 0xd], 1 ; mov al, 1 ; ret
0x00000200004f9934 : sal byte ptr [rdx], 0xc0 ; ret
0x000002000070dbc0 : sal byte ptr [rip + 0x45c7c7bf], 1 ; ret
0x000002000010b6bb : sal byte ptr [rsi + 5], 1 ; add rsp, 0x28 ; ret
0x0000020000517f31 : sal byte ptr [rsi + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000067c1b5 : sal byte ptr [rsi + rax + 0x3a], cl ; sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x000002000059c858 : sal byte ptr [rsi + rax + 0x48], cl ; mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x00000200001f327e : sal byte ptr [rsi + rax - 0x48], 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000061ec4a : sal byte ptr [rsi + rax - 0x48], 1 ; xor al, 0 ; add al, al ; ret
0x00000200003efc2d : sal byte ptr [rsi + rbp + 0x48], 0x85 ; sal byte ptr [rbx + rax*2 - 0xa], cl ; ret 0x7501
0x0000020000440604 : sal byte ptr [rsi + rbp*8 + 0x49], cl ; mov ecx, ecx ; call 0x2000006fe29
0x0000020000137e36 : sal byte ptr [rsi + rcx + 0x44], 0x8b ; ret
0x000002000020865d : sal byte ptr [rsi + rcx + 0x45], 0x3b ; ret 0x2f89
0x0000020000499f1f : sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x0000020000590614 : sal byte ptr [rsi + rcx - 0x75], cl ; ret
0x00000200006fe6e1 : sal byte ptr [rsi + rdi*2 + 0x44], 0x8b ; ret
0x00000200003fc00d : sal byte ptr [rsi + rdx + 0x48], 0x8b ; ret
0x00000200005af5bf : sal byte ptr [rsi + rdx + 0x48], 0x8d ; push rsp ; and al, 0x50 ; call r8
0x00000200001048ed : sal byte ptr [rsi + rdx + 0x49], 0x3b ; ret
0x00000200004d5f6f : sal byte ptr [rsi + rsi*4 + 0x44], 0x8b ; ret
0x0000020000233e92 : sal byte ptr [rsi - 0x1b], 1 ; add dword ptr [r9 + 0x14], edx ; xor eax, eax ; ret
0x00000200001c0ff7 : sal byte ptr [rsi - 9], cl ; ret 0xfff
0x00000200006fe171 : sal byte ptr [rsp + 0x44], 0x8b ; ret
0x0000020000131d9b : sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x00000200003db8db : sal byte ptr [rsp + rax + 0x48], 0x8b ; pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200005ec86f : sal byte ptr [rsp + rax + 0x49], 0x83 ; and byte ptr [rax], al ; mov al, r10b ; ret
0x0000020000026a9f : sal byte ptr [rsp + rax - 0x76], cl ; add al, 0x48 ; ret
0x00000200001418ee : sal byte ptr [rsp + rax - 0x7c], cl ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000063ac05 : sal byte ptr [rsp + rax*2 - 0xa], cl ; ret
0x00000200005e3709 : sal byte ptr [rsp + rbp + 0x41], 0x3b ; ret 0x1c76
0x00000200001b5dc3 : sal byte ptr [rsp + rcx + 0x48], 0x8d ; and al, 0x30 ; call rax
0x000002000042922c : sal byte ptr [rsp + rcx + 0x49], 0x3b ; ret
0x00000200001f46f6 : sal byte ptr [rsp + rcx + 0x49], 0x8b ; ret 0x8348
0x0000020000582601 : sal byte ptr [rsp + rcx*2 + 0x48], 0x83 ; ret
0x0000020000648eb8 : sal byte ptr [rsp + rcx*2 - 0x75], cl ; ret 0x8b4c
0x00000200004c192c : sal byte ptr [rsp + rdi + 0x44], 0x3b ; ret 0x7a72
0x00000200000f2634 : sal byte ptr [rsp + rdi + 0x48], 0x83 ; ret 0x440c
0x000002000002deb1 : sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x00000200001f3248 : sal byte ptr [rsp + rdi - 0x75], 1 ; ret 0x8d4d
0x00000200000c4e6d : sal byte ptr [rsp + rdx + 0x48], 0x8b ; ret
0x00000200001fef0a : sal byte ptr [rsp + rdx + 0x48], 0x8b ; xlatb ; call rax
0x0000020000141a74 : sal byte ptr [rsp + rdx + 0x48], 0xff ; ret 0xff49
0x00000200005f9fa4 : sal byte ptr [rsp + rdx + 0x49], 0x83 ; ret
0x00000200001b64fc : sal byte ptr [rsp + rdx*8 + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000003391a : sal byte ptr [rsp + rsi*8 - 0x48], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000006f2d6 : sal ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000508499 : sal dh, 0xc1 ; adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200006f9078 : sal dh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e7334 : sal dh, 1 ; ret 0x7501
0x0000020000416b35 : sal dh, 1 ; ret 0x7547
0x0000020000089eb1 : sal dh, 1 ; ret 0xf01
0x000002000066b17b : sal dh, 5 ; add ebx, dword ptr [rdi - 0x32] ; jmp qword ptr [rcx]
0x000002000065a3e5 : sal dh, 5 ; cdq ; insb byte ptr [rdi], dx ; iretd ; jmp qword ptr [rcx]
0x000002000066acd7 : sal dh, 5 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; movsxd rcx, esi ; jmp qword ptr [rcx]
0x000002000065c68b : sal dh, 5 ; iretq ; jmp qword ptr [rcx]
0x000002000067949d : sal dh, 5 ; loope 0x20000679523 ; int 0xff
0x00000200006754cb : sal dh, 5 ; mov bl, 0xbb ; int 0xff
0x000002000066ba75 : sal dh, 5 ; or dword ptr [rsi - 0x32], edx ; jmp qword ptr [rcx]
0x0000020000104d90 : sal dh, 5 ; out dx, al ; ret 0x24
0x0000020000675a0f : sal dh, 5 ; outsd dx, dword ptr [rsi] ; mov dh, 0xcd ; jmp qword ptr [rcx]
0x0000020000675d1f : sal dh, 5 ; pop rdi ; mov bl, 0xcd ; jmp qword ptr [rcx]
0x0000020000184e48 : sal dh, 5 ; ret 0x1c
0x0000020000107fbc : sal dh, 5 ; ret 0x2490
0x000002000008bfbc : sal dh, 5 ; ret 0x2c50
0x0000020000054e31 : sal dh, 5 ; ret 0x2f
0x000002000066f463 : sal dh, 5 ; sbb ebx, dword ptr [rsi + rcx*8] ; jmp qword ptr [rcx]
0x000002000067c9d4 : sal dh, 5 ; stosb byte ptr [rdi], al ; int 0xff
0x000002000067c8f9 : sal dh, 5 ; test dword ptr [rdi - 0x33], eax ; jmp qword ptr [rcx]
0x00000200000e4ce8 : sal dh, 5 ; xchg eax, esi ; ret
0x0000020000680d4c : sal dh, 5 ; xor al, byte ptr [rbx] ; int 0xff
0x000002000066af4d : sal dh, 5 ; xor dword ptr [rcx - 0x32], esp ; jmp qword ptr [rcx]
0x000002000014722d : sal dh, cl ; ret
0x000002000045fdd1 : sal dh, cl ; ret 0xf07
0x000002000016ba78 : sal dl, 1 ; in al, dx ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x00000200004a9899 : sal dword ptr [rax + rcx - 0xa], 1 ; ret 0x7504
0x00000200001e46c1 : sal dword ptr [rax + rdx + 0x48], -0x75 ; ret
0x00000200004a5213 : sal dword ptr [rax - 0xf17001d], -0x41 ; ret 0x48ff
0x0000020000194a2c : sal dword ptr [rax], -0xd ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x000002000027cb15 : sal dword ptr [rax], 0x23 ; ret 0x70
0x00000200003b51df : sal dword ptr [rbp + 0x23], -1 ; ret 0xfa83
0x00000200004bf129 : sal dword ptr [rbp + 2], 0x32 ; leave ; mov al, cl ; ret
0x000002000067158a : sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x000002000002a81e : sal dword ptr [rbp + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000412d60 : sal dword ptr [rbp + 9], -0xa ; ret
0x000002000064210e : sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x0000020000482c84 : sal dword ptr [rbp - 0x14], 1 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000024a0c : sal dword ptr [rbp - 0xb], cl ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001182db : sal dword ptr [rbp - 0xe], 1 ; sub rax, rdx ; ret
0x00000200004a8e9c : sal dword ptr [rbx + 2], -1 ; ret
0x000002000014cad4 : sal dword ptr [rbx + 3], -0x50 ; add ebx, eax ; xor al, al ; ret
0x00000200005bca50 : sal dword ptr [rbx + 3], 1 ; mov al, 1 ; ret
0x000002000037ec06 : sal dword ptr [rbx + 3], 1 ; mov eax, ecx ; ret
0x00000200000e0535 : sal dword ptr [rbx + 5], 0x48 ; add esp, 0x28 ; ret
0x000002000020730d : sal dword ptr [rbx + rax + 0x32], -0x40 ; ret
0x000002000012dbdc : sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200000bc4ec : sal dword ptr [rbx - 0x15], -0x2f ; xor al, al ; ret
0x0000020000209fd7 : sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x000002000003998a : sal dword ptr [rbx], -0x40 ; cmp r8, rcx ; setae al ; ret
0x00000200003daf42 : sal dword ptr [rbx], 0x44 ; and al, 0x38 ; ret
0x00000200001be084 : sal dword ptr [rbx], 1 ; fild dword ptr [rbp + 0x33] ; rol byte ptr [rcx + 0x3b], cl ; ret
0x000002000007309d : sal dword ptr [rbx], 1 ; ret 0xc148
0x000002000056b079 : sal dword ptr [rbx], 1 ; sal bh, 1 ; ret 0xc000
0x0000020000105719 : sal dword ptr [rbx], cl ; idiv bh ; xor eax, eax ; ret
0x00000200000536d0 : sal dword ptr [rcx + rbx - 0x75], 1 ; ret 0x41f0
0x000002000017136c : sal dword ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x0000020000219589 : sal dword ptr [rcx + rdi - 0x75], cl ; ret 0x8d4d
0x00000200001001be : sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x00000200001405f3 : sal dword ptr [rcx + rdx*8 + 0x44], 0x2b ; rol dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200005a2bb9 : sal dword ptr [rcx + rdx*8], cl ; push rsi ; ret
0x00000200004344e3 : sal dword ptr [rcx], -0x16 ; dec dword ptr [rax - 0x75] ; shr al, 1 ; push rcx ; ret
0x0000020000381df5 : sal dword ptr [rdi + 0x14], -1 ; ret 0x8349
0x000002000008df6d : sal dword ptr [rdi + 1], 1 ; ret
0x00000200000a64e4 : sal dword ptr [rdi + 6], 0x4d ; cmp eax, edx ; sbb eax, eax ; ret
0x000002000066e18c : sal dword ptr [rdi + 7], 0x45 ; sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x000002000056b4c2 : sal dword ptr [rdi + rdi*8 + 0x2b504689], 1 ; ret
0x000002000049f267 : sal dword ptr [rdx + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000020000024c78 : sal dword ptr [rdx + 0xe], -1 ; ret 0x8349
0x00000200006d0204 : sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x000002000008fe7c : sal dword ptr [rdx + 6], 0x41 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000008fe96 : sal dword ptr [rdx + 6], 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000012dbc9 : sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x0000020000644d1b : sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x0000020000120fae : sal dword ptr [rdx - 0x12], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003fea24 : sal dword ptr [rdx - 0x15], 1 ; mov rax, r8 ; shr rax, 1 ; ret
0x000002000010ba22 : sal dword ptr [rdx - 0x16], 1 ; xor eax, eax ; ret
0x00000200003ecd2a : sal dword ptr [rdx - 0x17], -1 ; ret
0x00000200000fa9b9 : sal dword ptr [rdx - 0x17], 1 ; mov eax, 0x10 ; ret
0x000002000065d0ea : sal dword ptr [rdx - 0x18], 1 ; xor eax, eax ; ret
0x00000200004a8dbb : sal dword ptr [rdx - 0x20], -0x75 ; ret 0x48c3
0x000002000036dafb : sal dword ptr [rdx - 0x72], 1 ; xor al, al ; ret
0x000002000054c335 : sal dword ptr [rip - 0x2964bb], -0x75 ; ret
0x00000200004cc936 : sal dword ptr [rsi + 0x2c], -0x75 ; ror dword ptr [rax - 0x75], 1 ; ret
0x000002000051d22d : sal dword ptr [rsi + 0xe], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005eaf04 : sal dword ptr [rsi + 9], 0x41 ; lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x200005eaf2e
0x00000200003f2417 : sal dword ptr [rsi + rbx + 0xf], -0x4a ; ret
0x0000020000144ec6 : sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x0000020000042580 : sal eax, 0x48 ; mov dword ptr [rsp + 0x20], eax ; call r11
0x00000200001d3d5a : sal eax, 0x48 ; mov eax, ecx ; ret
0x000002000051b3a3 : sal edi, 1 ; ret 0xfff9
0x0000020000085d8a : sal edi, 1 ; ret 0xffff
0x0000020000520149 : sal edi, cl ; ret 0xccff
0x00000200006cdbf9 : sal edi, cl ; ror dword ptr [rcx - 0x77], 1 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x00000200006cdffd : sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret 0x4808
0x00000200006cd19e : sal edi, cl ; ror dword ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; sar edi, cl ; ret
0x00000200005f8245 : sal esi, 1 ; ret
0x000002000013cd6a : sal esi, 1 ; ret 0x7507
0x0000020000382fbf : sal esi, cl ; ret
0x00000200000791e3 : sal esi, cl ; ret 0xf01
0x0000020000270825 : salc ; adc dword ptr [rax], eax ; ret 0x11d8
0x0000020000454106 : salc ; adc ebp, eax ; inc dword ptr [rbp - 0x7c] ; in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x0000020000417453 : salc ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x000002000045c052 : salc ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; sbb dh, bh ; ret
0x0000020000075e1f : salc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014ee9b : salc ; add byte ptr [rax], al ; ret
0x000002000003b740 : salc ; add eax, dword ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x000002000010b78d : salc ; add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000003201 : salc ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x00000200000f3a72 : salc ; and eax, 0x76860f00 ; ret
0x0000020000441c1d : salc ; call 0x2000002aca8
0x00000200004f4d51 : salc ; call 0x20000030f73
0x000002000066e690 : salc ; call 0x2000004a8bb
0x0000020000437961 : salc ; call 0x20000063ac4
0x000002000009b5ee : salc ; call 0x2000009782b
0x0000020000381211 : salc ; call 0x200000dd4c7
0x00000200004d56e8 : salc ; call 0x2000011f0a3
0x0000020000401a05 : salc ; call 0x2000014dc63
0x000002000000a39a : salc ; call qword ptr [rcx]
0x00000200003d222a : salc ; call r10
0x00000200000a6ccb : salc ; call r12
0x000002000014131a : salc ; call r14
0x000002000008f43b : salc ; call rax
0x0000020000562fe6 : salc ; call rsi
0x0000020000513466 : salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200005674f8 : salc ; dec dword ptr [rax - 0x75] ; shr al, 1 ; ret 0xb551
0x000002000039020a : salc ; fdiv st(7), st(0) ; mov r10, qword ptr [rsp + 0x48] ; jmp 0x200003901e0
0x0000020000405a65 : salc ; in al, dx ; dec dword ptr [rdx - 0x4e0e172d] ; ret 0xebff
0x0000020000405ac1 : salc ; in al, dx ; dec dword ptr [rdx - 0x4e6a172d] ; ret 0x48ff
0x000002000016a41b : salc ; in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x000002000056c717 : salc ; in al, dx ; push rsi ; ret
0x0000020000433936 : salc ; insb byte ptr [rdi], dx ; ret
0x00000200000e2696 : salc ; jb 0x200000e26bc ; add dh, dh ; ret
0x000002000012afee : salc ; je 0x2000012afff ; add byte ptr [rsi - 1], ah ; ret 0xf44
0x000002000000a2b6 : salc ; jmp qword ptr [rcx]
0x0000020000721735 : salc ; jne 0x2000072172a ; jmp 0x200007217ad
0x00000200005ce926 : salc ; jo 0x200005ce8fe ; push rsi ; ret
0x00000200004becfa : salc ; lea rcx, qword ptr [r14 + rdi] ; call 0x200000e1ac8
0x0000020000492cb0 : salc ; lock dec dword ptr [rbx - 0x74b383aa] ; ret
0x000002000000e4ec : salc ; loopne 0x2000000e4e3 ; ret
0x000002000000e4eb : salc ; loopne 0x2000000e4e4 ; ret
0x000002000000e4ea : salc ; loopne 0x2000000e4e5 ; ret
0x000002000022950e : salc ; mov bh, 7 ; add dh, dh ; ret
0x00000200005ba352 : salc ; mov dl, 0xf2 ; dec dword ptr [rax - 0x75] ; retf ; call 0x200004265c1
0x000002000051ee38 : salc ; mov dword ptr [rsp + 0x20], r12d ; call 0x2000013f459
0x00000200004fc732 : salc ; mov eax, 0xc000000d ; ret
0x000002000011913b : salc ; mov qword ptr [r11 - 0x28], rax ; call r10
0x00000200000e77b0 : salc ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000e77ab
0x0000020000437f00 : salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200005337f8 : salc ; mov rcx, qword ptr [rsp + 0x40] ; call 0x2000015dcc5
0x0000020000514e43 : salc ; mov rcx, r11 ; call 0x2000013b6bf
0x0000020000412756 : salc ; mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001a6e5a : salc ; mov rcx, r12 ; call r15
0x000002000064f67e : salc ; mov rcx, r12 ; call rax
0x00000200003f81a3 : salc ; mov rcx, r13 ; call rax
0x0000020000512fee : salc ; mov rcx, r14 ; call 0x2000013a8b3
0x00000200004f31c2 : salc ; mov rcx, r14 ; call r9
0x000002000040ca43 : salc ; mov rcx, r15 ; call 0x20000030f77
0x00000200001375ce : salc ; mov rcx, r15 ; call r14
0x00000200003f7f13 : salc ; mov rcx, r15 ; call rax
0x0000020000537c13 : salc ; mov rcx, r8 ; call 0x20000157d57
0x000002000048e86d : salc ; mov rcx, r9 ; call 0x200003cab16
0x0000020000679377 : salc ; mov rcx, rax ; call r15
0x000002000051000a : salc ; mov rcx, rbp ; call 0x20000139813
0x000002000050fff6 : salc ; mov rcx, rbp ; call 0x20000139863
0x000002000050ffe2 : salc ; mov rcx, rbp ; call 0x200001398b3
0x000002000050ffce : salc ; mov rcx, rbp ; call 0x20000139903
0x0000020000190ca7 : salc ; mov rcx, rbp ; call 0x2000022cf36
0x00000200003ff600 : salc ; mov rcx, rbp ; call rax
0x00000200001eb26a : salc ; mov rcx, rbx ; call 0x2000008756e
0x000002000049293a : salc ; mov rcx, rbx ; call 0x200000bc6cb
0x0000020000067c3a : salc ; mov rcx, rbx ; call 0x20000153ec6
0x00000200005381f9 : salc ; mov rcx, rbx ; call 0x2000015d887
0x00000200003d0400 : salc ; mov rcx, rbx ; call r10
0x00000200004bd6d3 : salc ; mov rcx, rbx ; call r11
0x00000200006d9345 : salc ; mov rcx, rbx ; call r12
0x00000200001413df : salc ; mov rcx, rbx ; call r14
0x00000200005a1dc1 : salc ; mov rcx, rbx ; call rax
0x00000200004926d7 : salc ; mov rcx, rbx ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000051010b : salc ; mov rcx, rdi ; call 0x2000013971f
0x000002000055d3be : salc ; mov rcx, rdi ; call 0x2000040963a
0x00000200005005ba : salc ; mov rcx, rdi ; call qword ptr [rax]
0x000002000014140f : salc ; mov rcx, rdi ; call r14
0x000002000066b4f6 : salc ; mov rcx, rdi ; call r15
0x000002000021b145 : salc ; mov rcx, rdi ; call r9
0x00000200006077c9 : salc ; mov rcx, rdi ; call rax
0x00000200001a741d : salc ; mov rcx, rdi ; call rbx
0x000002000064b932 : salc ; mov rcx, rsi ; call rax
0x00000200003efea4 : salc ; or al, 0xff ; ret
0x00000200003efea0 : salc ; or byte ptr [rcx - 0xf32984], cl ; ret
0x000002000017f41e : salc ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x4489
0x0000020000713c46 : salc ; push rdi ; ret
0x000002000057dd62 : salc ; push rsi ; ret
0x00000200001a1171 : salc ; ret
0x000002000054e34a : salc ; ret 0x15
0x000002000043b989 : salc ; ret 0x48ff
0x00000200004a17e7 : salc ; ret 0x49ff
0x0000020000403dd5 : salc ; ret 0x65ff
0x000002000043b97b : salc ; ret 0x90ff
0x000002000068aad6 : salc ; ret 0xffc1
0x000002000040cd46 : salc ; sub al, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022b2e6 : salc ; sub dword ptr [rax], ecx ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000001fb7a : salc ; xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x00000200004c13e6 : sar ah, 0x48 ; add esp, 0x28 ; ret
0x000002000009d0cd : sar ah, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bcd74 : sar al, 0xff ; add rsp, 0x68 ; ret
0x00000200004deb18 : sar bh, 0x48 ; add esp, 0x28 ; ret
0x0000020000484295 : sar bh, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004b31ac : sar bh, 0x48 ; add esp, 0x58 ; ret
0x00000200003cab3f : sar bh, 0x48 ; lea eax, dword ptr [rax + rdx*4] ; ret
0x000002000042fab1 : sar bh, 0x8b ; ret
0x0000020000408067 : sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x0000020000403fc5 : sar bh, 0xc0 ; add rsp, 0x38 ; ret
0x00000200004b1db7 : sar bh, 0xc0 ; ret
0x000002000051ce5a : sar bh, 0xeb ; ret 0xd233
0x000002000045acfa : sar bh, 0xeb ; retf ; lea rdx, qword ptr [rbx + 0x18] ; call rax
0x000002000068d16d : sar bh, 0xff ; ret 0x3b41
0x00000200005d3075 : sar bh, 1 ; add rsp, 0x28 ; ret
0x00000200005d4821 : sar bh, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005dde5e : sar bh, 1 ; call rax
0x00000200005d3088 : sar bh, 1 ; je 0x200005d309b ; mov eax, 0xc0000001 ; ret
0x00000200001e9c60 : sar bh, 1 ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200005cee5c : sar bh, 1 ; ret
0x00000200000e77b4 : sar bh, 1 ; ret 0xeceb
0x000002000045650b : sar bh, 1 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005efbfd : sar bh, 1 ; xor eax, eax ; ret
0x0000020000423fb9 : sar bh, cl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000424490 : sar bh, cl ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005b9fb7 : sar bh, cl ; mov rcx, qword ptr [rip - 0x317120] ; call rax
0x00000200006f7a2e : sar bh, cl ; ret
0x00000200004fb10f : sar bh, cl ; ret 0x5489
0x000002000043aa3c : sar bl, 1 ; ret 0x8bff
0x000002000013f3a7 : sar byte ptr [r11], 1 ; ret 0x767d
0x0000020000033c9d : sar byte ptr [rax + 0x10], 0xff ; ret 0x8348
0x00000200004febe3 : sar byte ptr [rax + 0x17], 0x8b ; ret
0x00000200004fefd5 : sar byte ptr [rax + 0x17], 0xff ; ret
0x0000020000667ff0 : sar byte ptr [rax + 0x18], 0xff ; ret
0x00000200000b23dc : sar byte ptr [rax + 0x18], 0xff ; ret 0x8348
0x00000200005ef1a0 : sar byte ptr [rax + 0x1a], 0xff ; ret
0x00000200006eebe4 : sar byte ptr [rax + 0x1b], 0xff ; ret 0x8b49
0x0000020000715f7b : sar byte ptr [rax + 0x200f44ff], 1 ; ret 0x2b8
0x00000200000e7d58 : sar byte ptr [rax + 0x27], 0xff ; ret
0x000002000038b7bb : sar byte ptr [rax + 0x28], 0x8a ; ret
0x00000200000d3367 : sar byte ptr [rax + 0x2f], 0xff ; ret 0x8348
0x0000020000711861 : sar byte ptr [rax + 0x38], 0xe8 ; xchg eax, edi ; ret
0x00000200006eebbb : sar byte ptr [rax + 0x44], 0xff ; ret 0x8b49
0x00000200000d3b19 : sar byte ptr [rax + 0x4b], 0xff ; ret 0x8348
0x00000200001ba538 : sar byte ptr [rax + 0xa], 0xff ; ret
0x000002000065d452 : sar byte ptr [rax + 0xc], 0x8b ; ret
0x00000200000717d7 : sar byte ptr [rax + 0xd], 0xff ; ret 0x8348
0x000002000011ea80 : sar byte ptr [rax + 0xe], 0x4c ; sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x00000200000ecaf6 : sar byte ptr [rax + 1], cl ; ret
0x0000020000061a82 : sar byte ptr [rax + 3], 0x2b ; ret 0xd08b
0x00000200004e92c4 : sar byte ptr [rax + 3], 0x88 ; pop rdi ; sub al, 0x8b ; ret 0x8b48
0x00000200000d812a : sar byte ptr [rax + 5], 0x48 ; add esp, 0x28 ; ret
0x00000200000cac68 : sar byte ptr [rax + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001bba9c : sar byte ptr [rax + 7], 0x49 ; sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x00000200007103c9 : sar byte ptr [rax + 7], 0xff ; ret
0x0000020000186e6d : sar byte ptr [rax + 9], 0x49 ; add eax, 8 ; inc r10 ; jmp 0x20000186e67
0x00000200003f94c9 : sar byte ptr [rax + 9], 0xf6 ; ret
0x0000020000436edf : sar byte ptr [rax + 9], 0xff ; ret
0x00000200004dcfbe : sar byte ptr [rax - 0x3b7cb701], 0x20 ; pop rbx ; ret
0x000002000066d8bf : sar byte ptr [rax - 0x75], 0xd0 ; mov ebp, eax ; call 0x20000294009
0x0000020000074d4f : sar byte ptr [rax - 0xa], 0xf6 ; ret 0x7507
0x00000200000e19b1 : sar byte ptr [rax - 0xc], 0x48 ; mov eax, edx ; ret
0x00000200000e7a2d : sar byte ptr [rax - 0xf], 0x48 ; mov eax, edx ; ret
0x000002000050b298 : sar byte ptr [rax], 0x83 ; xchg eax, esp ; add eax, 0x850f0000 ; ret
0x00000200001d941d : sar byte ptr [rax], 1 ; setne al ; ret
0x0000020000617b83 : sar byte ptr [rbp + 0xd], 0x8b ; sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200006ce2ff : sar byte ptr [rbx + 2], 0x3a ; ret
0x0000020000724d93 : sar byte ptr [rbx - 0x74340001], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000021dfc9 : sar byte ptr [rbx], 0x94 ; ret
0x00000200002226e1 : sar byte ptr [rbx], 0xac ; ret
0x0000020000220c65 : sar byte ptr [rbx], 0xbc ; ret
0x00000200000f92de : sar byte ptr [rbx], 0xc1 ; ja 0x200000f92e9 ; ret
0x00000200001d9360 : sar byte ptr [rbx], 0xc2 ; jl 0x200001d9356 ; or eax, 0xffffffff ; ret
0x00000200002433b1 : sar byte ptr [rbx], 1 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret 0x3b
0x0000020000598474 : sar byte ptr [rbx], 1 ; ret
0x000002000013f3a8 : sar byte ptr [rbx], 1 ; ret 0x767d
0x000002000043dd2f : sar byte ptr [rcx + 0x1a], 0x8b ; ret
0x0000020000513782 : sar byte ptr [rcx + 0x2a], 0x8b ; ret
0x0000020000499f46 : sar byte ptr [rcx + 0x5b], 0xf7 ; fdivr dword ptr [rbx] ; ret
0x00000200000b1b85 : sar byte ptr [rcx + 0x77], 0x8b ; ret
0x00000200005f28e4 : sar byte ptr [rcx + 0xa], 0xbb ; and eax, 0xe9c00002 ; ret 0
0x000002000049ee69 : sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x000002000013004c : sar byte ptr [rcx + 5], 0x45 ; mov eax, edx ; jmp 0x20000130016
0x000002000009c775 : sar byte ptr [rcx + 5], 0x48 ; add esp, 0x58 ; ret
0x00000200001cdc7c : sar byte ptr [rcx + 5], 0x48 ; and dword ptr [rcx + 0x70], 0 ; ret
0x00000200001f6e06 : sar byte ptr [rcx + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001d6df9 : sar byte ptr [rcx + 6], 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x0000020000219360 : sar byte ptr [rcx + 8], 0x48 ; mov ecx, esi ; call 0x20000095660
0x00000200004dc4aa : sar byte ptr [rcx + 8], 0x8b ; ret
0x0000020000062e01 : sar byte ptr [rcx + 9], 0xf6 ; ret 0xf20
0x000002000070dd2c : sar byte ptr [rcx - 0x3b7cb701], 1 ; pop rbx ; ret
0x000002000023d525 : sar byte ptr [rcx], 0 ; xchg eax, edx ; ret 0x39
0x0000020000109504 : sar byte ptr [rcx], 0x83 ; add rax, qword ptr [rax] ; add byte ptr [rdi], cl ; ret 0xbb83
0x0000020000405339 : sar byte ptr [rdi + 0xc], 0xf ; cdq ; ret
0x000002000043c07a : sar byte ptr [rdi], cl ; ret
0x0000020000511f5f : sar byte ptr [rdx + 1], 0xf ; ret 0x8a44
0x0000020000210da0 : sar byte ptr [rdx + 2], 0x3a ; ret 0x973
0x0000020000668da5 : sar byte ptr [rdx + rax], 0xf ; xchg eax, ebp ; ret
0x0000020000132bdb : sar byte ptr [rdx + rcx*8 + 0x3b], cl ; push rbp ; pop rax ; jmp 0x20000132bad
0x000002000067efb4 : sar byte ptr [rdx], 1 ; ret 0x48ff
0x00000200005f7180 : sar byte ptr [rip - 0x3ffffffb], 0xf ; ret 0x189
0x0000020000441de6 : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000630ea : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f6646 : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x00000200000937ed : sar ch, 0x4d ; add eax, ecx ; jmp 0x200000937bd
0x000002000048a1c5 : sar ch, 0xff ; push rsi ; ret 0xf04
0x0000020000388e6d : sar dh, 0x83 ; ret 0x75fe
0x0000020000147f68 : sar dh, 0xff ; push rsi ; ret
0x00000200000960c0 : sar dh, 1 ; ret 0xc3eb
0x0000020000204f16 : sar dh, cl ; ret
0x00000200003cab3e : sar dil, 0x48 ; lea eax, dword ptr [rax + rdx*4] ; ret
0x0000020000423fb8 : sar dil, cl ; add rsp, 0x50 ; pop rbx ; ret
0x000002000006fbac : sar dword ptr [rax + 1], cl ; jmp 0x2000006fb7d
0x00000200000eb26f : sar dword ptr [rax - 0x3ffffda1], cl ; ret
0x00000200000f9f08 : sar dword ptr [rax - 0x3ffffff3], 1 ; ret
0x00000200000115be : sar dword ptr [rax - 0x45], -0x30 ; xlatb ; mov dl, 0x76 ; ret 0xbb54
0x0000020000488e9b : sar dword ptr [rax], 1 ; ret
0x000002000017141c : sar dword ptr [rbp + rbx + 0x3b], 1 ; sal byte ptr [rcx + rbx - 0x75], 1 ; ret 0x41f0
0x0000020000173b18 : sar dword ptr [rbp + rbx - 0x7d], 1 ; cli ; push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x00000200003b3e73 : sar dword ptr [rbx + rbx + 0x4d], 0x3b ; ret 0x1677
0x00000200000c6dfa : sar dword ptr [rbx + rcx*4 + 0x48], -0x75 ; ret
0x00000200004ee555 : sar dword ptr [rbx - 0x3ffffff3], cl ; jmp 0x200004ee527
0x000002000067a0df : sar dword ptr [rbx], 1 ; ret
0x00000200001f34f6 : sar dword ptr [rdi + 3], 1 ; xor eax, eax ; ret
0x00000200003ecb4c : sar dword ptr [rdi], 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x00000200000f1a3a : sar dword ptr [rdx + 0x40], 0xf ; ret 0x4589
0x00000200001bc8bb : sar dword ptr [rdx + rbp*8 + 0x33], -0x40 ; ret
0x000002000054c42a : sar dword ptr [rdx - 0x7ffffe00], 0x23 ; ret 0xc23b
0x00000200004700b4 : sar dword ptr [rdx - 0xff01], 0x23 ; ret 0xf883
0x00000200000960ae : sar dword ptr [rdx], -0x36 ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x0000020000095de4 : sar dword ptr [rdx], -0x36 ; cmovg eax, edx ; ret
0x0000020000204fd0 : sar dword ptr [rsi + 7], 0x2a ; fucompp ; ret
0x000002000003b11c : sar dword ptr [rsi + rbx - 0x7d], 1 ; cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000024b4f5 : sar dword ptr [rsi], 0 ; scasd eax, dword ptr [rdi] ; ret 0x3e
0x000002000066eb19 : sar dword ptr [rsi], cl ; ret
0x00000200001e6eea : sar eax, 0x10 ; add rax, rcx ; ret
0x000002000013a6a5 : sar eax, 0x10 ; add rsp, 0x28 ; ret
0x0000020000141605 : sar eax, 0x10 ; and eax, 0x7fff ; ret
0x00000200006fa0bd : sar eax, 0x10 ; ret
0x0000020000142027 : sar eax, 1 ; dec rax ; ret
0x00000200004b303a : sar eax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014200e : sar eax, 1 ; ret
0x0000020000520560 : sar eax, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x00000200006fa109 : sar ecx, 0x10 ; mov rax, rcx ; ret
0x00000200004abb3c : sar edi, -0x15 ; ret
0x000002000068d70e : sar edi, -0x18 ; ret
0x00000200004497a8 : sar edi, -0x75 ; ret
0x000002000068a40d : sar edi, -0xa ; ret
0x0000020000148e1f : sar edi, -1 ; jne 0x20000148e2a ; ret
0x00000200003e3113 : sar edi, -1 ; mov esi, r13d ; jmp 0x200003df3df
0x000002000068d4a6 : sar edi, -3 ; add rsp, 0x28 ; ret
0x000002000068c758 : sar edi, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068da16 : sar edi, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000068a337 : sar edi, 0x48 ; add esp, 0x28 ; ret
0x000002000043acb4 : sar edi, 0x48 ; mov ecx, edi ; call 0x2000006a618
0x00000200005bfc51 : sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059280e : sar edi, 1 ; cmovne rax, rdx ; jmp 0x20000592830
0x00000200003a0ef7 : sar edi, 1 ; jmp 0x200003a0e39
0x000002000058e0e1 : sar edi, 1 ; jmp 0x200004a4a2a
0x0000020000725d33 : sar edi, 1 ; nop ; jmp 0x20000709870
0x00000200006fe979 : sar edi, 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000415926 : sar edi, cl ; add rsp, 0x58 ; ret
0x0000020000562888 : sar edi, cl ; nop ; jmp 0x2000041f2a0
0x00000200005781b6 : sar edi, cl ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000057821f
0x000002000057d6ee : sar edi, cl ; ret
0x000002000036423c : sar edi, cl ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000f6d2 : sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x000002000042448f : sar r15b, cl ; add rsp, 0x60 ; pop rbx ; ret
0x000002000052055f : sar r8, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x00000200001e6ee9 : sar rax, 0x10 ; add rax, rcx ; ret
0x000002000013a6a4 : sar rax, 0x10 ; add rsp, 0x28 ; ret
0x00000200006fa0bc : sar rax, 0x10 ; ret
0x0000020000142026 : sar rax, 1 ; dec rax ; ret
0x00000200004b3039 : sar rax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014200d : sar rax, 1 ; ret
0x00000200006fa108 : sar rcx, 0x10 ; mov rax, rcx ; ret
0x00000200005f4670 : sar rdi, -0x75 ; ret
0x000002000050c786 : sbb ah, ah ; cld ; dec dword ptr [rbx + rcx*4 - 0x39] ; call 0x200001389d5
0x000002000000f737 : sbb ah, al ; ret
0x0000020000290f00 : sbb ah, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x11060016 ; ret 0xf00d
0x000002000027112c : sbb ah, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x11062306 ; ret 0xf00d
0x0000020000012b96 : sbb ah, byte ptr [rax] ; sbb esp, dword ptr [rax] ; sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200002874d4 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x00000200002486c4 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x0000020000275bcc : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; cmp eax, dword ptr [rsi] ; sysenter
0x00000200002609b8 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x0000020000199f3f : sbb ah, byte ptr [rdx - 0xc] ; push rsi ; ret
0x00000200002438b8 : sbb ah, byte ptr [rip + 0x608000b] ; ret 0x1306
0x000002000023dd10 : sbb ah, byte ptr [rip + 0x60c000b] ; ret 0x1316
0x0000020000722f6e : sbb ah, ch ; ret 0x75ff
0x0000020000722fea : sbb ah, dl ; ret 0x48ff
0x0000020000112740 : sbb al, 0 ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rcx + rax*2 - 0x75] ; ret
0x00000200000e1864 : sbb al, 0 ; add byte ptr [rbp + 1], dh ; ret
0x00000200005b66fe : sbb al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000f8ba6 : sbb al, 0 ; add rsp, 0x28 ; ret
0x000002000018ec8b : sbb al, 0 ; call rax
0x00000200000e00e6 : sbb al, 0 ; dec byte ptr [rax - 0x75] ; ret
0x000002000010a1a3 : sbb al, 0 ; jae 0x2000010a1ac ; ret
0x00000200000e45f4 : sbb al, 0 ; jne 0x200000e4607 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dcddc : sbb al, 0 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200001030bb : sbb al, 0 ; ret
0x0000020000038fec : sbb al, 0x13 ; add byte ptr [rbp - 0x75], cl ; push rsi ; and byte ptr [rbp - 0x75], cl ; ret 0xc149
0x00000200006277f0 : sbb al, 0x16 ; mov dl, 0xff ; add rsp, 0x68 ; ret
0x0000020000012b9a : sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x0000020000600b78 : sbb al, 0x22 ; ret
0x00000200002252f4 : sbb al, 0x23 ; ret
0x0000020000387b58 : sbb al, 0x23 ; ret 0x4409
0x0000020000081493 : sbb al, 0x2d ; add byte ptr [rcx - 0x73], cl ; pop rdx ; dec dword ptr [rax - 0x75] ; ret
0x00000200003ffeae : sbb al, 0x3b ; ret
0x00000200001bc546 : sbb al, 0x3b ; ret 0x974
0x00000200003a27f0 : sbb al, 0x41 ; call rdx
0x00000200004aa278 : sbb al, 0x41 ; mov eax, ecx ; ret
0x000002000051e6ca : sbb al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003f2947 : sbb al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000022f79c : sbb al, 0x48 ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000020c8d8 : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x2000020c922
0x000002000020d094 : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x2000020d0de
0x00000200003958fc : sbb al, 0x49 ; mov ecx, ebp ; call qword ptr [r14]
0x00000200003efc90 : sbb al, 0x4f ; ret 0x48ff
0x0000020000201707 : sbb al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000427323 : sbb al, 0x73 ; or dword ptr [rdx], eax ; ret
0x00000200001a576e : sbb al, 0x73 ; or esi, esi ; ret
0x00000200001bc541 : sbb al, 0x76 ; sbb eax, 0x3b1c438b ; ret 0x974
0x000002000027d318 : sbb al, 0x77 ; push rax ; add byte ptr [rdi + 0x5078], bl ; ret
0x00000200002215f7 : sbb al, 0x81 ; loop 0x20000221583 ; inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x0000020000718a50 : sbb al, 0x86 ; ret
0x00000200005bb1b2 : sbb al, 0x89 ; pop rbp ; ret
0x0000020000680600 : sbb al, 0x8a ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000015dc7b : sbb al, 0x8b ; jmp r11
0x0000020000482483 : sbb al, 0x8b ; ret
0x000002000064545c : sbb al, 0x8b ; ret 0x25
0x000002000044cdc9 : sbb al, 0x8b ; ret 0xc148
0x00000200004e9c87 : sbb al, 0x8b ; ret 0xe8c1
0x00000200005edf5f : sbb al, 0x8b ; ret 0xea2b
0x00000200006c9d20 : sbb al, 0x8b ; ret 0xf41
0x0000020000434d10 : sbb al, 0x8b ; xchg dword ptr [rax + rax + 0x3480000], edx ; ret 0x3d48
0x0000020000408b81 : sbb al, 0x8d ; add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200005ef337 : sbb al, 0xa1 ; dec dword ptr [rax - 0x75] ; pushfq ; ret
0x00000200001ecd77 : sbb al, 0xb ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004f6e19 : sbb al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014ab01 : sbb al, 0xb ; je 0x2000014aad6 ; and bh, bh ; ret 0x3b41
0x0000020000191a42 : sbb al, 0xbd ; push rsi ; ret 0x7501
0x000002000027c11d : sbb al, 0xc ; add byte ptr [rsi + rax], cl ; ret
0x0000020000672840 : sbb al, 0xc3 ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x00000200000cee89 : sbb al, 0xc3 ; shr rdx, 0x20 ; xsave ptr [rcx] ; ret
0x0000020000714da0 : sbb al, 0xc8 ; ret
0x00000200004f5120 : sbb al, 0xc9 ; ret
0x00000200004395a0 : sbb al, 0xc9 ; ret 0xe9ff
0x000002000067f45d : sbb al, 0xcd ; jmp qword ptr [rcx]
0x000002000066f467 : sbb al, 0xce ; jmp qword ptr [rcx]
0x000002000070d127 : sbb al, 0xd0 ; inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x0000020000405ac0 : sbb al, 0xd6 ; in al, dx ; dec dword ptr [rdx - 0x4e6a172d] ; ret 0x48ff
0x000002000056c618 : sbb al, 0xe5 ; dec dword ptr [rax - 0x75] ; ret
0x000002000062aff8 : sbb al, 0xe8 ; ret 0xb32b
0x000002000018e787 : sbb al, 0xe9 ; ret
0x000002000020c8dc : sbb al, 0xeb ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x000002000002dee2 : sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000043b3f0 : sbb al, 0xf2 ; ret 0x48ff
0x00000200001a6633 : sbb al, 0xf6 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001427a4 : sbb al, 0xf6 ; ret
0x00000200005c40a3 : sbb al, 0xf6 ; ret 0x7401
0x00000200003d2c97 : sbb al, 0xf6 ; ret 0x7501
0x000002000011eb98 : sbb al, 0xff ; ret 0xf41
0x00000200000bc87c : sbb al, 1 ; add byte ptr [rax], al ; jmp 0x200000bc84a
0x00000200006c592e : sbb al, 3 ; ret
0x000002000020a14d : sbb al, 5 ; add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x00000200002800be : sbb al, 6 ; andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x000002000026dfa6 : sbb al, 6 ; sysenter
0x0000020000544d49 : sbb al, bpl ; push rax ; ret
0x000002000016fa3e : sbb al, bpl ; ret
0x00000200000131b0 : sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x000002000011e920 : sbb al, byte ptr [r8 - 0x80] ; call qword ptr [rcx]
0x00000200001127ca : sbb al, byte ptr [r8] ; jmp 0x20000112751
0x00000200000131ad : sbb al, byte ptr [rax + 0x1a] ; sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x000002000011e921 : sbb al, byte ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000592eee : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004f2cc5 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200001063cc : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x000002000001e2b3 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x00000200001442b2 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000194e67 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200001510a6
0x00000200001a21c8 : sbb al, byte ptr [rax] ; add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001a5c6e : sbb al, byte ptr [rax] ; add rcx, r8 ; jmp rcx
0x00000200001d5cc3 : sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013e28c : sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004b42b6 : sbb al, byte ptr [rax] ; call rax
0x00000200000ead14 : sbb al, byte ptr [rax] ; je 0x200000ead14 ; mov rax, qword ptr [rax + 8] ; ret
0x00000200001127cb : sbb al, byte ptr [rax] ; jmp 0x20000112750
0x000002000038a7f6 : sbb al, byte ptr [rax] ; mov al, 6 ; ret
0x0000020000505f99 : sbb al, byte ptr [rax] ; ret
0x00000200006e971f : sbb al, byte ptr [rbp - 0x75] ; ret 0x2b44
0x00000200005bdec7 : sbb al, byte ptr [rbx + rcx*4 - 0x3d] ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000067258c : sbb al, byte ptr [rbx - 0x3e74fe1f] ; ret
0x0000020000226340 : sbb al, byte ptr [rcx + 0x3b] ; ret
0x00000200000cac0e : sbb al, byte ptr [rcx + 0x3b] ; sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x000002000001d43a : sbb al, byte ptr [rcx + 0x3e] ; ret 0xa54d
0x0000020000448053 : sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200000d5f9f : sbb al, byte ptr [rcx - 0x75] ; ret
0x000002000005bfb3 : sbb al, byte ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200001d7afb : sbb al, byte ptr [rdi + rcx + 0x20] ; ret
0x00000200000131b1 : sbb al, byte ptr [rdx + 0x1a] ; ret 0x431a
0x0000020000026d3a : sbb al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x00000200003b5eeb : sbb al, ch ; int1 ; leave ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000167b03 : sbb al, ch ; jmp rbx
0x000002000056a18b : sbb al, ch ; push qword ptr [rdx - 0x74b70053] ; ret
0x0000020000544d4a : sbb al, ch ; push rax ; ret
0x000002000016fa3f : sbb al, ch ; ret
0x000002000006c3ad : sbb al, cl ; call 0x1ffc24204c0
0x00000200006ef381 : sbb al, cl ; call 0x20075312e93
0x000002000043c5af : sbb al, cl ; dec dword ptr [rax - 0x75] ; retf ; call 0x20000068fd9
0x00000200000b8350 : sbb al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x200000b8355 ; ret
0x000002000067a14a : sbb al, dh ; dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x0000020000167b02 : sbb al, r13b ; jmp rbx
0x000002000006c3ac : sbb al, r9b ; call 0x1ffc24204c1
0x00000200006ef380 : sbb al, r9b ; call 0x20075312e94
0x00000200000b834f : sbb al, sil ; cmpxchg qword ptr [rcx], rdx ; jne 0x200000b8356 ; ret
0x00000200004280c6 : sbb bh, bh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021431e : sbb bh, bh ; jne 0x20000214331 ; and qword ptr [rdx + 8], 0 ; ret
0x0000020000387d21 : sbb bh, bh ; ret
0x00000200000b23de : sbb bh, bh ; ret 0x8348
0x000002000051d0d7 : sbb bh, bh ; ret 0x8948
0x0000020000133092 : sbb bh, bh ; ret 0xd03b
0x00000200005ec861 : sbb bh, bh ; ror byte ptr [rcx - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret
0x00000200004a16c2 : sbb bh, byte ptr [rax + rax*8] ; inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x000002000011bc7f : sbb bh, byte ptr [rbx] ; ret
0x00000200000131ab : sbb bh, byte ptr [rdi] ; sbb al, byte ptr [rax + 0x1a] ; sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x00000200003c7c85 : sbb bh, dh ; jrcxz 0x200003c7c18 ; ret
0x00000200000e3f6d : sbb bl, al ; add eax, edx ; jmp 0x200000e3f54
0x0000020000672824 : sbb bl, al ; bts dword ptr [r8 + 0x20], 0x19 ; ret
0x000002000000e7c0 : sbb bl, bh ; ret 0xda8
0x00000200003c47cd : sbb bl, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000505df2 : sbb bl, byte ptr [rax] ; ret
0x000002000002177a : sbb bl, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x82bc
0x000002000026dfa0 : sbb bl, byte ptr [rip + 0x6040008] ; sbb al, 6 ; sysenter
0x000002000028e8d0 : sbb bl, byte ptr [rsi] ; or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x0000020000205a5e : sbb bl, ch ; add eax, 0xb19e2c1 ; ret 0x8189
0x000002000055c625 : sbb bl, ch ; add eax, dword ptr [rbx - 0x7af0e907] ; cld ; ret 0xffea
0x00000200000e3f68 : sbb bl, ch ; hlt ; add eax, 0x18 ; ret
0x00000200000fce27 : sbb bl, ch ; out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200004fc730 : sbb bl, ch ; salc ; mov eax, 0xc000000d ; ret
0x000002000020c8e6 : sbb bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000002267a : sbb bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x00000200004d5263 : sbb bl, dh ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x00000200000145b1 : sbb bl, dh ; ret
0x00000200000f97c4 : sbb byte ptr [edi], cl ; xchg eax, esp ; ret 0x2349
0x000002000050a024 : sbb byte ptr [r10], dil ; ret 0x470f
0x00000200005cea97 : sbb byte ptr [r11], al ; ret
0x00000200001bd6c0 : sbb byte ptr [r11], al ; ret 0xc23b
0x000002000055d4f6 : sbb byte ptr [r11], r15b ; ret 0x877
0x000002000048a027 : sbb byte ptr [r11], spl ; ret 0xc084
0x000002000013b848 : sbb byte ptr [r13 + 0x3b], cl ; ret
0x00000200003ee3b8 : sbb byte ptr [r13 + r9*4 + 4], cl ; ret 0xc9eb
0x00000200000e3d9e : sbb byte ptr [r13 - 0x75], cl ; adc byte ptr [r13 - 0x75], cl ; ret
0x00000200003ecd00 : sbb byte ptr [r13 - 0x75], r9b ; adc dword ptr [rbp - 0x75], ecx ; ret 0xc1f6
0x0000020000054247 : sbb byte ptr [r14 + 3], r12b ; ret 0xffb9
0x00000200000a4311 : sbb byte ptr [r14 + 3], spl ; ret
0x000002000012f5f5 : sbb byte ptr [r14 + 3], spl ; ret 0x3b66
0x000002000011493c : sbb byte ptr [r14 + 3], spl ; ret 0x840f
0x000002000003b2ad : sbb byte ptr [r14 + 3], spl ; ret 0xffb9
0x00000200001f8712 : sbb byte ptr [r14 + 6], sil ; mov eax, 1 ; ret
0x0000020000617b87 : sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000676274 : sbb byte ptr [r8 + 0x3b], cl ; ret
0x00000200004590bb : sbb byte ptr [r8 + 0x3b], r9b ; ret
0x00000200003d1a7d : sbb byte ptr [r8 + 0x3b], r9b ; ret 0xe575
0x000002000010adc3 : sbb byte ptr [r8 + 0x41891041], cl ; pop rax ; ret
0x000002000058f24c : sbb byte ptr [r8 + 0x450f4901], bpl ; ret 0x3b49
0x0000020000159ee1 : sbb byte ptr [r8 + 0xf], cl ; ret
0x000002000012b887 : sbb byte ptr [r8 + 1], cl ; ret
0x00000200001585c8 : sbb byte ptr [r8 + 2], dil ; ret
0x000002000047ce74 : sbb byte ptr [r8 + 3], cl ; ret
0x0000020000462997 : sbb byte ptr [r8 + 3], cl ; ret 0x3b48
0x000002000012ffac : sbb byte ptr [r8 + 3], r9b ; ret
0x000002000043ad12 : sbb byte ptr [r8 + 3], r9b ; ret 0xd233
0x00000200004d9531 : sbb byte ptr [r8 - 0x73], r9b ; push rbp ; ret 0x4166
0x00000200001ef94f : sbb byte ptr [r8 - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200004ea5b3 : sbb byte ptr [r8 - 0x75], cl ; ret 0x3345
0x00000200006f8b91 : sbb byte ptr [r8 - 0x75], cl ; ret 0x8b48
0x0000020000110f7a : sbb byte ptr [r8 - 0x75], cl ; ret 0xc148
0x00000200006cd8e9 : sbb byte ptr [r8 - 0x75], r9b ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200006ccea9 : sbb byte ptr [r8 - 0x75], r9b ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200001157ac : sbb byte ptr [r8 - 0x75], r9b ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000b05fb : sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200006452ce : sbb byte ptr [r8 - 1], cl ; ret 0x8b4d
0x00000200000d5f55 : sbb byte ptr [r9 + 0x3b], cl ; ret 0x830f
0x0000020000065018 : sbb byte ptr [r9 - 0x75], r8b ; ret
0x0000020000100ece : sbb byte ptr [r9 - 0x75], r9b ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200005a9af4 : sbb byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000050ba41 : sbb byte ptr [r9], r8b ; pop rdi ; sbb al, 0x3b ; ret
0x000002000007caf8 : sbb byte ptr [rax + 0x23], cl ; ret 0xc149
0x0000020000208e9c : sbb byte ptr [rax + 0x2e], ah ; add dword ptr [rax], eax ; add eax, r10d ; jmp 0x20000208eb0
0x0000020000364961 : sbb byte ptr [rax + 0x3b], cl ; ret
0x00000200003d1a7e : sbb byte ptr [rax + 0x3b], cl ; ret 0xe575
0x00000200003fdad7 : sbb byte ptr [rax + 0x3b], r9b ; ret 0xe575
0x0000020000147075 : sbb byte ptr [rax + 0x41057420], ch ; or dword ptr [rax], 0xffffffff ; ret
0x000002000010adc4 : sbb byte ptr [rax + 0x41891041], cl ; pop rax ; ret
0x000002000058f24d : sbb byte ptr [rax + 0x450f4901], ch ; ret 0x3b49
0x0000020000427703 : sbb byte ptr [rax + 0x48000000], 0x8b ; cmp dh, dh ; ret
0x0000020000408b3f : sbb byte ptr [rax + 0x6b], cl ; ret
0x00000200006e60ef : sbb byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200006ce1dc : sbb byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200006ce1db : sbb byte ptr [rax + 0xb], r9b ; ret 0x8b48
0x0000020000159ee2 : sbb byte ptr [rax + 0xf], cl ; ret
0x000002000012b888 : sbb byte ptr [rax + 1], cl ; ret
0x00000200003ecbbd : sbb byte ptr [rax + 2], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000200001585c9 : sbb byte ptr [rax + 2], bh ; ret
0x00000200000843a2 : sbb byte ptr [rax + 3], cl ; ret
0x0000020000462998 : sbb byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200006fc976 : sbb byte ptr [rax + 3], cl ; ret 0x8948
0x000002000043ad13 : sbb byte ptr [rax + 3], cl ; ret 0xd233
0x00000200000843a1 : sbb byte ptr [rax + 3], r9b ; ret
0x00000200000b573a : sbb byte ptr [rax + rax], al ; add byte ptr [rax], al ; jne 0x200000b578f ; xor al, al ; ret
0x00000200006e8deb : sbb byte ptr [rax + rax], dl ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000062e149 : sbb byte ptr [rax + rbp*8 + 0x44], dh ; xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x00000200000b62b0 : sbb byte ptr [rax - 0x73], cl ; add eax, 0xaac68 ; ret
0x00000200000b628a : sbb byte ptr [rax - 0x73], cl ; add eax, 0xaaeee ; ret
0x000002000007b285 : sbb byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200004d9532 : sbb byte ptr [rax - 0x73], cl ; push rbp ; ret 0x4166
0x00000200006cd8ea : sbb byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200006cceaa : sbb byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x0000020000642132 : sbb byte ptr [rax - 0x75], cl ; jl 0x20000642163 ; and byte ptr [rcx - 0x75], cl ; ret 0x48c3
0x00000200006421c7 : sbb byte ptr [rax - 0x75], cl ; jl 0x200006421f8 ; and byte ptr [rcx - 0x75], cl ; ret 0xccc3
0x00000200001157ad : sbb byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000127c73 : sbb byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0x4b88
0x00000200001ef950 : sbb byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001e9b91 : sbb byte ptr [rax - 0x75], cl ; push rsp ; rcl byte ptr [rax], 1 ; call qword ptr [rdi]
0x00000200000de0e7 : sbb byte ptr [rax - 0x75], cl ; ret
0x00000200001157b1 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000e1ef7 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200004ea5b4 : sbb byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200002261af : sbb byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200006f8b92 : sbb byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200005c9838 : sbb byte ptr [rax - 0x75], cl ; ret 0xb48
0x0000020000110f7b : sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000020fd60 : sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200000ec242 : sbb byte ptr [rax - 0x75], cl ; ret 0xe6eb
0x000002000066e68d : sbb byte ptr [rax - 0x75], cl ; salc ; call 0x2000004a8be
0x0000020000141467 : sbb byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call r14
0x0000020000037261 : sbb byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x000002000066e68c : sbb byte ptr [rax - 0x75], r9b ; salc ; call 0x2000004a8bf
0x0000020000376c54 : sbb byte ptr [rax - 0x77], cl ; adc r8b, r13b ; ret 0xd31a
0x0000020000516b89 : sbb byte ptr [rax - 0x77], cl ; js 0x20000516bb6 ; call 0x2000013c33c
0x0000020000516bf4 : sbb byte ptr [rax - 0x77], cl ; js 0x20000516c21 ; call 0x2000013c33c
0x00000200001cbe67 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbe77 ; jmp rcx
0x00000200001cbe66 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001cbe78 ; jmp rcx
0x00000200003fc73a : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x0000020000672452 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x0000020000070078 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200000b05fc : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000020000468625 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x00000200004c0cf2 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200006305ec : sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000070fe4f : sbb byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x00000200005b2ffd : sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x000002000042cd1c : sbb byte ptr [rax - 0x7d], cl ; ret 0xe820
0x000002000020d687 : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb18
0x00000200000acbf5 : sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x000002000014ce04 : sbb byte ptr [rax - 0xb7ffec], al ; ret
0x000002000051de9a : sbb byte ptr [rax - 1], cl ; leave ; jne 0x2000051de9b ; ret
0x000002000051de99 : sbb byte ptr [rax - 1], cl ; leave ; jne 0x2000051de9c ; ret
0x000002000008fe4a : sbb byte ptr [rax - 1], cl ; ret
0x00000200006452cf : sbb byte ptr [rax - 1], cl ; ret 0x8b4d
0x00000200005fc4ba : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000f6f0a : sbb byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x00000200001441ba : sbb byte ptr [rax], ah ; mov eax, 0xffff ; ret
0x0000020000142b5a : sbb byte ptr [rax], ah ; or eax, 0xffffffff ; ret
0x00000200004f8515 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000157a5e : sbb byte ptr [rax], al ; add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x000002000012e673 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000043daf6 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; cmove eax, ecx ; ret
0x000002000011b0b0 : sbb byte ptr [rax], al ; add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000200001c4a25 : sbb byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011de7e : sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000674e77 : sbb byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f8ef4 : sbb byte ptr [rax], al ; call 0x20000085105
0x00000200001c2e67 : sbb byte ptr [rax], al ; call r8
0x0000020000123035 : sbb byte ptr [rax], al ; call rax
0x00000200004d25ab : sbb byte ptr [rax], al ; jne 0x200004d25b4 ; ret
0x00000200004d25bf : sbb byte ptr [rax], al ; jne 0x200004d25c8 ; ret
0x00000200001bbf11 : sbb byte ptr [rax], al ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c5370 : sbb byte ptr [rax], al ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001c57d2 : sbb byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000520399 : sbb byte ptr [rax], al ; mov qword ptr [rip + 0x18a37e], rax ; ret
0x00000200001028b2 : sbb byte ptr [rax], al ; ret
0x00000200004b501a : sbb byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000448084 : sbb byte ptr [rax], dl ; ret 0xf7ff
0x00000200001441b9 : sbb byte ptr [rax], spl ; mov eax, 0xffff ; ret
0x0000020000142b59 : sbb byte ptr [rax], spl ; or eax, 0xffffffff ; ret
0x000002000013b849 : sbb byte ptr [rbp + 0x3b], cl ; ret
0x000002000009b6a8 : sbb byte ptr [rbp + 0x3b], cl ; ret 0xab75
0x000002000060ac08 : sbb byte ptr [rbp + 0x3b], cl ; ret 0xbd75
0x00000200005f7159 : sbb byte ptr [rbp + rax + 0x41], dh ; bts dword ptr [rcx], 0x1d ; ret
0x00000200005f7158 : sbb byte ptr [rbp + rax + 0x41], sil ; bts dword ptr [rcx], 0x1d ; ret
0x00000200003ee3b9 : sbb byte ptr [rbp + rcx*4 + 4], cl ; ret 0xc9eb
0x00000200005e2cb1 : sbb byte ptr [rbp - 0x48f076f4], cl ; ret 0x8348
0x0000020000254e5c : sbb byte ptr [rbp - 0x6a72fff5], dl ; or eax, dword ptr [rax] ; ret
0x00000200006e97f5 : sbb byte ptr [rbp - 0x74baf7ad], cl ; ret 0xb9
0x00000200006d0459 : sbb byte ptr [rbp - 0x75], al ; ret 0xd0ba
0x00000200000e3d9f : sbb byte ptr [rbp - 0x75], cl ; adc byte ptr [r13 - 0x75], cl ; ret
0x00000200003ecd01 : sbb byte ptr [rbp - 0x75], cl ; adc dword ptr [rbp - 0x75], ecx ; ret 0xc1f6
0x0000020000083f32 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000083f60 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ebde7 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200000ebe1d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c99c5 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200004c99f3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b071 : sbb byte ptr [rbp - 0x75], cl ; jae 0x2000051b09f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000706902 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000706930 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007055f1 : sbb byte ptr [rbp - 0x75], cl ; jnp 0x2000070561f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000230dc8 : sbb byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200004c22d6 : sbb byte ptr [rbx + 0x1fbc81], cl ; add byte ptr [rbx], bh ; ret
0x00000200004c22d5 : sbb byte ptr [rbx + 0x1fbc81], r9b ; add byte ptr [rbx], bh ; ret
0x00000200001c19c4 : sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200000e4e65 : sbb byte ptr [rbx + 0x28c81], cl ; add byte ptr [rbx], ch ; ret 0xd233
0x0000020000600e4e : sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x0000020000125674 : sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200006531a0 : sbb byte ptr [rbx + rdi], al ; ret
0x000002000065319f : sbb byte ptr [rbx + rdi], r8b ; ret
0x00000200000ebb88 : sbb byte ptr [rbx + rdx*2], 0 ; add byte ptr [rax + 3], cl ; ret 0x1ba
0x00000200006674ac : sbb byte ptr [rbx - 0x3174b72b], cl ; call 0x20000294e29
0x0000020000510008 : sbb byte ptr [rbx - 0x3274b72a], cl ; call 0x20000139815
0x000002000055c6fe : sbb byte ptr [rbx - 0x617efb8], cl ; ret
0x00000200006d8ca2 : sbb byte ptr [rbx - 0x74befbb5], cl ; ret
0x000002000059a0a1 : sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x000002000018d8cc : sbb byte ptr [rbx - 9], dh ; ret 0x600
0x000002000019941a : sbb byte ptr [rbx], 0 ; call rax
0x00000200006c85f2 : sbb byte ptr [rbx], ah ; ret
0x0000020000625436 : sbb byte ptr [rbx], ah ; ret 0x4631
0x00000200001a2990 : sbb byte ptr [rbx], ah ; ret 0xace9
0x000002000048a028 : sbb byte ptr [rbx], ah ; ret 0xc084
0x00000200002099a2 : sbb byte ptr [rbx], ah ; ret 0xc80b
0x00000200005cea98 : sbb byte ptr [rbx], al ; ret
0x00000200001bd6c1 : sbb byte ptr [rbx], al ; ret 0xc23b
0x000002000014c574 : sbb byte ptr [rbx], bh ; ret 0x3373
0x000002000055d4f7 : sbb byte ptr [rbx], bh ; ret 0x877
0x0000020000033bf4 : sbb byte ptr [rbx], bh ; ret 0xf172
0x00000200003f7cc9 : sbb byte ptr [rbx], bpl ; ret
0x000002000015a0e4 : sbb byte ptr [rbx], ch ; add byte ptr [rax], al ; nop ; ret
0x00000200003f7cca : sbb byte ptr [rbx], ch ; ret
0x0000020000253965 : sbb byte ptr [rbx], cl ; add byte ptr [rip + 0x1806d106], cl ; ret 0xf011
0x0000020000263295 : sbb byte ptr [rbx], cl ; add byte ptr [rip + 0x1866d406], cl ; ret 0xf014
0x00000200006ed78d : sbb byte ptr [rbx], cl ; ret 0x81c3
0x0000020000674d9f : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter 0x76e8, 0 ; ret 0x48ff
0x00000200006c85f1 : sbb byte ptr [rbx], r12b ; ret
0x0000020000625435 : sbb byte ptr [rbx], r12b ; ret 0x4631
0x00000200000c66f2 : sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x00000200000e9e61 : sbb byte ptr [rcx + 0x23], cl ; ror byte ptr [rax - 0x7b], 1 ; rol byte ptr [rcx - 0x75], cl ; ret 0x950f
0x000002000056d421 : sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x00000200000d5f56 : sbb byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x00000200000b87cf : sbb byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000370255 : sbb byte ptr [rcx + 0x66887], cl ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x0000020000490910 : sbb byte ptr [rcx + 0xc8d9855], cl ; ret 0x341
0x00000200003c40e2 : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; call 0x1ffc2f8cc3d
0x000002000007382c : sbb byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c0 ; ret 0xc13b
0x00000200000f9b4d : sbb byte ptr [rcx + 0xf], cl ; ret
0x00000200006cd946 : sbb byte ptr [rcx + 3], cl ; ret
0x00000200001d039c : sbb byte ptr [rcx + 3], cl ; ret 0x4810
0x00000200006c7bd1 : sbb byte ptr [rcx + 3], cl ; ret 0xc9ff
0x00000200000c622d : sbb byte ptr [rcx + rax], ah ; ret
0x00000200000728ce : sbb byte ptr [rcx + rbx*8 - 9], dh ; ret 0x600
0x0000020000666553 : sbb byte ptr [rcx + rcx*4 + 0x1a], cl ; mov rax, r9 ; ret
0x000002000015e3a9 : sbb byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x20 ; ret
0x0000020000065019 : sbb byte ptr [rcx - 0x75], al ; ret
0x00000200001370a7 : sbb byte ptr [rcx - 0x75], al ; ret 0x44c3
0x000002000046bdb4 : sbb byte ptr [rcx - 0x75], al ; ret 0x66c3
0x00000200003d31eb : sbb byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000100ecf : sbb byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x0000020000713707 : sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x0000020000404f94 : sbb byte ptr [rcx - 0x75], cl ; imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000008f887 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000008f8b5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000093152 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000093180 ; mov rsp, r11 ; pop rdi ; ret
0x000002000009c6fb : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000009c729 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000a7c57 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000a7c85 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000b8303 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000b8331 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000d798f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000d79bd ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f559b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f55c9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013734a : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000137378 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013a618 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000013a646 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013d75c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000013d78a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001d9796 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001d97cc ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ff36b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ff399 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002072fb : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000207329 ; mov rsp, r11 ; pop rdi ; ret
0x000002000020ad00 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000020ad2e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000382712 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000382740 ; mov rsp, r11 ; pop rdi ; ret
0x000002000040782a : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000407858 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004341b4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004341e2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000442fe5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000443013 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045a2b5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000045a2e3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045af3d : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000045af6b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000467a36 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000467a64 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046c12b : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000046c159 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046ca0f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000046ca3d ; mov rsp, r11 ; pop rdi ; ret
0x000002000048569e : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004856cc ; mov rsp, r11 ; pop rbp ; ret
0x000002000048f9c9 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000048f9f7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004bc31b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004bc349 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c15f9 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004c1627 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c650c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004c653a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c7a61 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004c7a8f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ce51c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ce54a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004cf608 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004cf636 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d7868 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004d7896 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004da6dd : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004da70b ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e29a5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e29d3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050ae2c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000050ae5a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000512ee8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000512f16 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005133f1 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051341f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005134e5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000513513 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051c14c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051c17a ; mov rsp, r11 ; pop rdi ; ret
0x000002000051e63d : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051e66b ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b684c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005b687a ; mov rsp, r11 ; pop rdi ; ret
0x00000200005cdaa4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005cdad2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005ce40d : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005ce43b ; mov rsp, r11 ; pop rdi ; ret
0x00000200005da0bb : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005da0e9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f5b80 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005f5bae ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f94cc : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005f94fa ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fbf15 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005fbf43 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000603def : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000603e1d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000605686 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006056b4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006065b6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006065e4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062acf6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062ad24 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064c07c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000064c0aa ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d1db : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000064d209 ; mov rsp, r11 ; pop rdi ; ret
0x000002000068d191 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000068d1bf ; mov rsp, r11 ; pop rdi ; ret
0x00000200006f836f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006f839d ; mov rsp, r11 ; pop rdi ; ret
0x00000200000c021b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000c0249 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000e3796 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000e37c4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f460f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000f463d ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ff1a4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000ff1d2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010ab49 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010ab7f ; mov rsp, r11 ; pop rbp ; ret
0x000002000010f2bd : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010f2eb ; mov rsp, r11 ; pop rbp ; ret
0x000002000010fcad : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010fcdb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000111158 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000111186 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000111475 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001114a3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000119448 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000119476 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001efcf9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001efd27 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204578 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200002045a6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022af41 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000022af6f ; mov rsp, r11 ; pop rbp ; ret
0x000002000022fafa : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000022fb28 ; mov rsp, r11 ; pop rbp ; ret
0x000002000023502d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000023505b ; mov rsp, r11 ; pop rbp ; ret
0x000002000036d5b7 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000036d5e5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004261bb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004261e9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000045f6c5 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000045f6f3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000477626 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000477654 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000484aeb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000484b19 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c2caf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004c2cdd ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c34d1 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004c34ff ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7212 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004c7240 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c9284 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004c92b2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004cd046 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004cd074 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d8b71 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004d8b9f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004df568 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004df596 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004df659 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004df687 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f2cd9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004f2d07 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f3b02 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004f3b30 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fdd3e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004fdd6c ; mov rsp, r11 ; pop rbp ; ret
0x000002000050511f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000050514d ; mov rsp, r11 ; pop rbp ; ret
0x000002000051d5a9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051d5d7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051ed22 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051ed58 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005b57ad : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005b57db ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c31f7 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005c3225 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005d37c6 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005d37f4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dab21 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005dab4f ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dcd80 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005dcdb6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ecbb8 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005ecbe6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005eccbf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005ecced ; mov rsp, r11 ; pop rbp ; ret
0x000002000061bb5e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000061bb8c ; mov rsp, r11 ; pop rbp ; ret
0x000002000061e280 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000061e2ae ; mov rsp, r11 ; pop rbp ; ret
0x000002000062515c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000062518a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000633a8f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000633abd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000635d38 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000635d6e ; mov rsp, r11 ; pop rbp ; ret
0x000002000064115b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000641191 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006470dd : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000064710b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000648b32 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000648b60 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717404 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000717432 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000717b3c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000717b6a ; mov rsp, r11 ; pop rbp ; ret
0x000002000072a1bf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000072a1ed ; mov rsp, r11 ; pop rbp ; ret
0x000002000072cfd8 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000072d00e ; mov rsp, r11 ; pop rbp ; ret
0x000002000004a638 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000004a6a1 ; ret
0x000002000008a2ad : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008a314 ; ret
0x00000200000cf7b2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000cf81b ; ret
0x00000200000fd68e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fd6f5 ; ret
0x0000020000106f6b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106fd4 ; ret
0x000002000010f332 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010f399 ; ret
0x00000200001169ba : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000116a21 ; ret
0x000002000011ebd8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011ec27 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011fd79 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011fde2 ; ret
0x0000020000122ea9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000122f10 ; ret
0x000002000013ebe2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013ec49 ; ret
0x00000200001c78c2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c792b ; ret
0x00000200001d5758 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d57bf ; ret
0x00000200001fbbb8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fbc21 ; ret
0x000002000020f25b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020f2c4 ; ret
0x000002000020f388 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020f3f1 ; ret
0x000002000020f434 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020f49d ; ret
0x0000020000375840 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003758a9 ; ret
0x00000200003a5832 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a589b ; ret
0x00000200003d8e75 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d8ede ; ret
0x00000200003e7dac : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e7e13 ; ret
0x00000200004431b9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000443222 ; ret
0x00000200004592e3 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045934c ; ret
0x000002000046341f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000463488 ; ret
0x00000200004684c4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046852d ; ret
0x000002000047c9f1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047ca5a ; ret
0x0000020000495c29 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000495c90 ; ret
0x000002000049afef : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049b056 ; ret
0x000002000049e652 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049e6bb ; ret
0x00000200004a472d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a4796 ; ret
0x00000200004a590e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a595a ; pop rsi ; ret
0x00000200004abb1e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004abb87 ; ret
0x00000200004abe50 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004abeb9 ; ret
0x00000200004be224 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004be28d ; ret
0x00000200004c5c0e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c5c75 ; ret
0x00000200004cba04 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cba6b ; ret
0x00000200004cdf67 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cdfce ; ret
0x00000200004d5216 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d527f ; ret
0x00000200004df471 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004df4da ; ret
0x00000200004ee1a4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ee20d ; ret
0x00000200004f2041 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f20a8 ; ret
0x00000200004fc452 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fc4bb ; ret
0x00000200005032a3 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050330a ; ret
0x00000200005051c8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050522f ; ret
0x000002000051c463 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051c4ca ; ret
0x000002000051de7d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051dee6 ; ret
0x00000200005cc4a5 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cc50d ; ret
0x00000200005cd380 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cd3e7 ; ret
0x00000200005d2d95 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d2dfe ; ret
0x00000200005ea9bd : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005eaa24 ; ret
0x00000200005fe51a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fe566 ; pop rsi ; ret
0x0000020000609a77 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000609ade ; ret
0x0000020000609c4e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000609cb5 ; ret
0x000002000060be3e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060bea5 ; ret
0x000002000060d220 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060d289 ; ret
0x000002000060d428 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060d491 ; ret
0x000002000061bd52 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061bdb9 ; ret
0x0000020000621397 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006213fe ; ret
0x000002000062dadc : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062db43 ; ret
0x0000020000649366 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006493cd ; ret
0x00000200006ef08a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ef0f1 ; ret
0x00000200006fc401 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006fc468 ; ret
0x0000020000701701 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000701768 ; ret
0x00000200007050a9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000705110 ; ret
0x000002000070ce70 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070ced7 ; ret
0x000002000070d6e4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070d74b ; ret
0x000002000070dcdf : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070dd46 ; ret
0x0000020000717f1d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000717f84 ; ret
0x00000200003fbd91 : sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200004abbcf : sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x0000020000437efd : sbb byte ptr [rcx - 0x75], cl ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000437efc : sbb byte ptr [rcx - 0x75], r9b ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000200064 : sbb byte ptr [rcx - 0x76], al ; ret 0xccc3
0x0000020000633f0c : sbb byte ptr [rcx - 0x77], cl ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x000002000056bcf6 : sbb byte ptr [rcx - 0x77], cl ; and al, 0x18 ; jmp 0x20000437f1e
0x00000200000b85ad : sbb byte ptr [rcx - 0x77], cl ; or byte ptr [r9 + 0x3b], cl ; ret
0x0000020000633f0b : sbb byte ptr [rcx - 0x77], r9b ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x000002000056bcf5 : sbb byte ptr [rcx - 0x77], r9b ; and al, 0x18 ; jmp 0x20000437f1f
0x0000020000145671 : sbb byte ptr [rcx - 0x78], al ; add ecx, dword ptr [rcx - 1] ; ret
0x0000020000600f7f : sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x000002000020c8e2 : sbb byte ptr [rcx - 0x7d], cl ; rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200001dc575 : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000200001f4153 : sbb byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x0000020000081b37 : sbb byte ptr [rcx - 0xa], al ; ret
0x0000020000630e75 : sbb byte ptr [rcx - 1], al ; ret
0x00000200004f42c3 : sbb byte ptr [rcx - 1], al ; ret 0x8349
0x00000200004c3a3e : sbb byte ptr [rcx - 1], cl ; enter -0xf8b, -0x75 ; ret 0x8b48
0x00000200005a9af5 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000057da4 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x000002000050ba42 : sbb byte ptr [rcx], al ; pop rdi ; sbb al, 0x3b ; ret
0x00000200004b4984 : sbb byte ptr [rcx], ch ; mov bh, 0xff ; add rsp, 0x28 ; ret
0x0000020000064f7f : sbb byte ptr [rcx], dl ; add byte ptr [rdx + 0xa412046], cl ; ret 0x4688
0x000002000050796b : sbb byte ptr [rdi + rbp - 0x75], dh ; ret 0xd8f7
0x00000200003a3dd0 : sbb byte ptr [rdi + rcx - 0x49], al ; pop rsi ; add al, byte ptr [rcx - 0x7d] ; ret
0x00000200006e9015 : sbb byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0xc748
0x00000200004054a0 : sbb byte ptr [rdi], ah ; ret 0xebff
0x000002000072c3da : sbb byte ptr [rdi], cl ; mov bh, 0xd ; ret 0x8bff
0x00000200006201a7 : sbb byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200000e3f47 : sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000617b88 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200005fb44d : sbb byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], dh ; ret 0xf20
0x00000200000731af : sbb byte ptr [rdi], cl ; test byte ptr [rsi], dl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0x600
0x0000020000072a57 : sbb byte ptr [rdi], cl ; test dword ptr [rdx - 0x74fffff7], esp ; ret 0xe083
0x00000200000e42ad : sbb byte ptr [rdi], cl ; test dword ptr [rdx], eax ; jo 0x200000e42c7 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a6e23 : sbb byte ptr [rdi], cl ; test ecx, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000f97c5 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2349
0x0000020000481bf1 : sbb byte ptr [rdi], dl ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006201a6 : sbb byte ptr [rdi], r9b ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200006275ff : sbb byte ptr [rdx - 0x3b7cb701], dh ; jo 0x2000062766c ; ret
0x00000200000031ff : sbb byte ptr [rdx], 0xd6 ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x00000200001fda8f : sbb byte ptr [rdx], bh ; ret 0x2274
0x00000200000b60d1 : sbb byte ptr [rdx], bh ; ret 0x3474
0x000002000050a025 : sbb byte ptr [rdx], bh ; ret 0x470f
0x000002000000ed36 : sbb byte ptr [rdx], dh ; ret
0x00000200000b60d0 : sbb byte ptr [rdx], r15b ; ret 0x3474
0x00000200002373bd : sbb byte ptr [rsi + 3], ah ; leave ; mov word ptr [r10], cx ; ret
0x00000200000a4312 : sbb byte ptr [rsi + 3], ah ; ret
0x000002000012f5f6 : sbb byte ptr [rsi + 3], ah ; ret 0x3b66
0x0000020000054173 : sbb byte ptr [rsi + 3], ah ; ret 0x840f
0x000002000005a732 : sbb byte ptr [rsi + 3], ah ; ret 0xb941
0x000002000003b2ae : sbb byte ptr [rsi + 3], ah ; ret 0xffb9
0x000002000016ac48 : sbb byte ptr [rsi + 3], r12b ; ret
0x0000020000054172 : sbb byte ptr [rsi + 3], r12b ; ret 0x840f
0x000002000005a731 : sbb byte ptr [rsi + 3], r12b ; ret 0xb941
0x00000200001f8713 : sbb byte ptr [rsi + 6], dh ; mov eax, 1 ; ret
0x00000200000117b7 : sbb byte ptr [rsi - 0x24], cl ; ret 0xb3cc
0x0000020000215534 : sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000013453c : sbb byte ptr [rsi - 0x77], ah ; or eax, 0x170f24 ; ret
0x0000020000532685 : sbb ch, ah ; push rdi ; ret
0x00000200004ef318 : sbb ch, al ; inc dword ptr [rbp - 0x848b40] ; ret
0x000002000014485e : sbb ch, bl ; adc ecx, dword ptr [rcx - 1] ; ret
0x000002000051f142 : sbb ch, bl ; ret 0x8bff
0x00000200004be6e5 : sbb ch, bl ; ret 0xdbb
0x00000200006d2d22 : sbb ch, byte ptr [rbx] ; fadd dword ptr [rcx - 0x75] ; ret 0xc383
0x00000200003c0c62 : sbb ch, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000056ec19 : sbb ch, ch ; push rsi ; ret
0x00000200000d8dca : sbb cl, bh ; dec dword ptr [rbx - 0x74cbdba4] ; ret
0x00000200005f39bb : sbb cl, bl ; push rsi ; ret
0x00000200006f6aec : sbb cl, byte ptr [r9 - 0x75] ; sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x0000020000690248 : sbb cl, byte ptr [rax + 0x2b] ; ret 0x2b48
0x0000020000624eea : sbb cl, byte ptr [rax + 0x2b] ; ret 0x894c
0x00000200006c53a7 : sbb cl, byte ptr [rax + 0x69] ; ret 0xe100
0x000002000024f56d : sbb cl, byte ptr [rax + rax] ; or dword ptr [rsi], eax ; call qword ptr [rsi]
0x000002000017577a : sbb cl, byte ptr [rax - 0x3f] ; call 0x1ffc23aa095
0x000002000021d106 : sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200000b817b : sbb cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x00000200005f7e35 : sbb cl, byte ptr [rax - 1] ; ret
0x00000200001ab537 : sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000089614 : sbb cl, byte ptr [rax - 1] ; ret 0x8148
0x0000020000444166 : sbb cl, byte ptr [rax] ; ret
0x00000200003c517d : sbb cl, byte ptr [rbp + rcx*4 + 0xd] ; jnp 0x200003c5147 ; ret
0x00000200000b88d3 : sbb cl, byte ptr [rbx + 0x8890] ; add dh, dh ; ret 0x7502
0x000002000026eee9 : sbb cl, byte ptr [rbx] ; add byte ptr [rip + 0x1a062506], cl ; ret 0xf016
0x00000200005bdd02 : sbb cl, byte ptr [rcx + rcx*4 + 0x74] ; and al, 0x20 ; call r10
0x00000200000875d8 : sbb cl, byte ptr [rcx - 0x75] ; ret
0x00000200006f6aed : sbb cl, byte ptr [rcx - 0x75] ; sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x0000020000143303 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0xb908
0x0000020000534110 : sbb cl, byte ptr [rdx - 0x1b] ; push rsi ; ret
0x000002000007cc82 : sbb cl, byte ptr [rsi - 0x74bbffdd] ; ret
0x0000020000445fd8 : sbb cl, ch ; ret
0x000002000040c2fa : sbb cl, ch ; ret 0xfffc
0x00000200003b7e1e : sbb dh, bh ; fisttp dword ptr [rax + 0x63] ; ret
0x000002000045c058 : sbb dh, bh ; ret
0x000002000058e082 : sbb dh, byte ptr [rax] ; mov esp, 0xf6ccccff ; ret
0x000002000013fe93 : sbb dh, byte ptr [rbp + 4] ; mov rax, rcx ; ret
0x0000020000500275 : sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200003717fa : sbb dh, byte ptr [rdi + rdi*8] ; push rsi ; ret 0xf04
0x0000020000114682 : sbb dh, byte ptr [rdx] ; ret 0xc0a8
0x000002000066f7c8 : sbb dh, cl ; jmp qword ptr [rcx]
0x000002000027ef08 : sbb dh, dh ; jo 0x2000027ef10 ; ret
0x00000200000376fb : sbb dh, dh ; ret
0x00000200003be5c7 : sbb dh, dh ; ret 0x4801
0x00000200003d7b9d : sbb dh, dh ; ret 0x7503
0x00000200004a9892 : sbb dh, dh ; ret 0x7508
0x0000020000194480 : sbb dh, dh ; ret 0x7510
0x0000020000051fe5 : sbb dh, dh ; ret 0xf20
0x00000200001ddb90 : sbb dh, dl ; dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000088ffc : sbb dl, byte ptr [rax] ; ret
0x00000200001ff577 : sbb dl, byte ptr [rip + 0x73d03b00] ; or al, 0x8b ; ret 0x8b4d
0x0000020000003200 : sbb dl, dh ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x000002000017f277 : sbb dl, dl ; out dx, eax ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000615e94 : sbb dword ptr [rax + 0x3b], ecx ; ret
0x0000020000729cc2 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x147d
0x000002000036e129 : sbb dword ptr [rax + 0x57], 0 ; add byte ptr [rbx], bh ; ret 0x860f
0x00000200001971a1 : sbb dword ptr [rax + 0x8000000], 0x48 ; inc edx ; jmp 0x20000197150
0x00000200001fffb9 : sbb dword ptr [rax + 0xf000000], -0x49 ; ret 0x8b4c
0x00000200006e369e : sbb dword ptr [rax + 4], 0 ; add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e36b3
0x00000200006cb039 : sbb dword ptr [rax + 4], 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006cb04e
0x00000200006d67d7 : sbb dword ptr [rax + 4], 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006d67ec
0x00000200006dfcf6 : sbb dword ptr [rax + 4], 0 ; add byte ptr [rax + rcx*2], al ; mov eax, edx ; jmp 0x200006dfd0b
0x00000200000e1e57 : sbb dword ptr [rax + 8], edi ; ret
0x0000020000092ab6 : sbb dword ptr [rax + rax], eax ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x0000020000253ead : sbb dword ptr [rax + rax], ecx ; add eax, dword ptr [rsi] ; ret 0x1906
0x0000020000061048 : sbb dword ptr [rax - 0x3f], ecx ; call qword ptr [rax]
0x00000200006fb06d : sbb dword ptr [rax - 0x3f], ecx ; clc ; adc byte ptr [rax + 0x2b], cl ; ret 0x349
0x0000020000057718 : sbb dword ptr [rax - 0x3f], ecx ; clc ; adc byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000a1344 : sbb dword ptr [rax - 0x3f], ecx ; sti ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000232527 : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, edx ; ret
0x000002000012dee1 : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x00000200000e1b1d : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x00000200001a5152 : sbb dword ptr [rax - 0x75], ecx ; ret
0x0000020000148f48 : sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200004e7e1a : sbb dword ptr [rax - 0x75], ecx ; retf ; call 0x2000011497b
0x000002000017f605 : sbb dword ptr [rax - 0x75], ecx ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200001754b8 : sbb dword ptr [rax - 0x7f], ecx ; ret
0x00000200004a8bd8 : sbb dword ptr [rax], 0x8b000006 ; ret 0x8b48
0x00000200006449af : sbb dword ptr [rax], eax ; add al, byte ptr [rax] ; call 0x200004f0c0a
0x0000020000130e78 : sbb dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000103694 : sbb dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200001036cf ; ret
0x000002000013c43b : sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011b62b : sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013175c : sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000013d135 : sbb dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200001b1ca1 : sbb dword ptr [rax], eax ; call r8
0x000002000003974c : sbb dword ptr [rax], eax ; jmp 0x20000039744
0x00000200003a430f : sbb dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010b852 : sbb dword ptr [rax], eax ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000967f4 : sbb dword ptr [rax], eax ; mov dword ptr [rcx], 0 ; ret
0x00000200003a3c36 : sbb dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013e4f3 : sbb dword ptr [rax], eax ; mov qword ptr [rcx + 0x5340], rax ; ret
0x000002000010ca70 : sbb dword ptr [rax], eax ; mov qword ptr [rdx], rax ; ret
0x0000020000134ab5 : sbb dword ptr [rax], eax ; ret
0x000002000013e357 : sbb dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200001b9234 : sbb dword ptr [rax], eax ; xor r8d, r8d ; xor edx, edx ; call 0x20000045499
0x000002000016fc38 : sbb dword ptr [rbp + 0x45ffedc7], -0x75 ; ret 0x8a40
0x000002000019fcc8 : sbb dword ptr [rbp + 0x48fff535], -0x75 ; ret
0x00000200000ffc16 : sbb dword ptr [rbp - 0x75], eax ; ret 0x3949
0x00000200000a101e : sbb dword ptr [rbp - 0x75], ecx ; ret
0x00000200000cd134 : sbb dword ptr [rbp - 0x7c], eax ; ret
0x0000020000195ecf : sbb dword ptr [rbp - 0xd], ebp ; push rsi ; ret 0x7503
0x0000020000025577 : sbb dword ptr [rbx + 0x288fba05], ecx ; add byte ptr [rbx], bh ; ret
0x000002000016d742 : sbb dword ptr [rbx + 0x531c83], ecx ; add byte ptr [rax + 3], cl ; ret 0xe74
0x0000020000369e8d : sbb dword ptr [rbx + 0x6b890], ecx ; add dh, dh ; ret 0x7401
0x00000200000ad4fe : sbb dword ptr [rbx + rcx*4 + 0x51], ecx ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000016d7cb : sbb dword ptr [rbx + rdx*2], 0 ; add byte ptr [rax + 3], cl ; ret 0x840f
0x0000020000041ab4 : sbb dword ptr [rbx + rdx*2], 0 ; add byte ptr [rax + 3], cl ; ret 0xb74
0x000002000016d744 : sbb dword ptr [rbx + rdx*2], 0 ; add byte ptr [rax + 3], cl ; ret 0xe74
0x0000020000205a63 : sbb dword ptr [rbx], ecx ; ret 0x8189
0x0000020000613e05 : sbb dword ptr [rbx], edi ; ret
0x0000020000033875 : sbb dword ptr [rbx], esp ; ret 0xc22b
0x000002000007c142 : sbb dword ptr [rcx + 0x23], ecx ; ret 0xc148
0x00000200005dd1c7 : sbb dword ptr [rcx + 0x3b], eax ; fisttp word ptr [rdi] ; ret 0x8b48
0x000002000055c609 : sbb dword ptr [rcx + rcx - 0x7d], esi ; stc ; adc cl, byte ptr [rdi] ; test dword ptr [rax], ebx ; ret
0x000002000007809c : sbb dword ptr [rcx - 0x3f], ecx ; call qword ptr [rax]
0x000002000008cc9f : sbb dword ptr [rcx - 0x3f], ecx ; cld ; adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200000fe4df : sbb dword ptr [rcx - 0x75], eax ; push rdx ; or al, 0x8b ; ret 0x25
0x000002000010a105 : sbb dword ptr [rcx - 0x75], eax ; ret
0x000002000014c513 : sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x000002000068d139 : sbb dword ptr [rcx - 0x75], eax ; ret 0xff41
0x000002000005f668 : sbb dword ptr [rcx - 0x75], ecx ; ret 0x8b4c
0x0000020000712c39 : sbb dword ptr [rcx - 0x77], ecx ; add bh, bh ; ret 0x8349
0x00000200001f1543 : sbb dword ptr [rcx - 0x7d], ecx ; enter 0x48ff, -0x3f ; call qword ptr [rax]
0x00000200000c5ccf : sbb dword ptr [rcx - 1], eax ; ret
0x0000020000218264 : sbb dword ptr [rcx], eax ; add bh, bh ; ret
0x0000020000616b94 : sbb dword ptr [rdi + 8], esi ; movzx eax, cx ; add eax, r10d ; jmp 0x20000616baa
0x00000200005f0a4d : sbb dword ptr [rdi + rcx - 0x49], eax ; ret 0x8b48
0x00000200005b22bc : sbb dword ptr [rdi + rdi*8 + 0x3b105f89], esi ; ret
0x0000020000605034 : sbb dword ptr [rdi - 0x4e], esi ; ret
0x0000020000645a3a : sbb dword ptr [rdi], ecx ; ret 0xd233
0x0000020000590316 : sbb dword ptr [rdx + rdx*8 - 0x49f0ea88], eax ; ret 0xf42
0x00000200001f810b : sbb dword ptr [rip - 0x74b80000], eax ; ret
0x00000200001ebfcd : sbb dword ptr [rsi + 0x48000000], -9 ; ret
0x000002000055485d : sbb dword ptr [rsi - 0x65], -0x17 ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000025755e : sbb dword ptr [rsi], eax ; sysenter
0x00000200003f3bb9 : sbb dword ptr [rsi], edx ; add dh, dh ; ret 0xf04
0x000002000013fe52 : sbb eax, -1 ; ret
0x000002000015c5dc : sbb eax, 0x15d ; jmp r11
0x00000200002171a6 : sbb eax, 0x24748b44 ; xor al, 0xff ; ret
0x00000200004d3093 : sbb eax, 0x2896600 ; ret
0x00000200001c19cf : sbb eax, 0x2b000001 ; ret 0xc83b
0x000002000036f48b : sbb eax, 0x341fffe ; ret 0x588
0x0000020000054289 : sbb eax, 0x3480026 ; ret 0x349
0x00000200001bc543 : sbb eax, 0x3b1c438b ; ret 0x974
0x000002000049f25d : sbb eax, 0x3b48ffeb ; ret 0x1077
0x000002000040bf2d : sbb eax, 0x48001513 ; add esp, 0x20 ; pop rbx ; ret
0x000002000071e702 : sbb eax, 0x4890ffa2 ; add esp, 0x20 ; pop rbp ; ret
0x00000200000f1749 : sbb eax, 0x48d4c00 ; add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200001d8a9f : sbb eax, 0x48ffe8bb ; add esp, 0x28 ; ret
0x000002000022d8ef : sbb eax, 0x48fff1b5 ; add esp, 0x50 ; pop rbp ; ret
0x000002000013ba4f : sbb eax, 0x48fff78b ; add esp, 0x28 ; ret
0x0000020000174e69 : sbb eax, 0x5b60f00 ; push rsp ; ret
0x00000200000bfc19 : sbb eax, 0x5fff000 ; ret 0x209c
0x000002000026dfa1 : sbb eax, 0x6040008 ; sbb al, 6 ; sysenter
0x00000200001803e5 : sbb eax, 0x73d03b00 ; or al, 0x8b ; ret 0x8b4d
0x000002000015c822 : sbb eax, 0x79 ; sub r11, rax ; jmp r11
0x00000200006797dd : sbb eax, 0x7b0d8b48 ; ret
0x00000200004a986a : sbb eax, 0x80828bc3 ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000200006eaac0 : sbb eax, 0x8348028b ; ret 0xf70c
0x000002000059fb0f : sbb eax, 0x83fff3d5 ; ret
0x00000200006f67cd : sbb eax, 0x84018b48 ; ret
0x00000200007280a4 : sbb eax, 0x8442408a ; ret
0x000002000037f50d : sbb eax, 0x84cf8b48 ; ret
0x0000020000606799 : sbb eax, 0x8b000001 ; ret 0x8941
0x0000020000533327 : sbb eax, 0x8b000002 ; ret
0x0000020000464300 : sbb eax, 0x8b44001f ; ret
0x00000200000d8a13 : sbb eax, 0x8b480000 ; sub byte ptr [r13 + 0x43], sil ; call rdi
0x00000200004f6cb9 : sbb eax, 0x8b48000b ; ret 0x8b48
0x000002000068493d : sbb eax, 0x8b4c0000 ; ret
0x0000020000230052 : sbb eax, 0x8b4d0012 ; adc al, 0xc2 ; jmp 0x20000230064
0x000002000012f5eb : sbb eax, 0x8bffca83 ; ret 0xf066
0x00000200004f2eff : sbb eax, 0x8bffda1f ; ret
0x000002000000d0ec : sbb eax, 0xb05bdeae ; ret 0x9b64
0x00000200004cb0d2 : sbb eax, 0xc0330000 ; ret
0x00000200000c0c21 : sbb eax, 0xc033000d ; ret
0x00000200005f3748 : sbb eax, 0xc3f6ffcb ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x000002000058b3ae : sbb eax, 0xe990ffb3 ; ret
0x000002000072030f : sbb eax, 0xffc30eac ; jmp 0x200006f024f
0x000002000050e9d8 : sbb eax, 0xffd9197b ; call 0x20000139678
0x0000020000026f81 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f4fb1 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200004f44df : sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000196b69 : sbb eax, dword ptr [rax] ; call rax
0x00000200004a03ad : sbb eax, dword ptr [rax] ; ret
0x00000200000f218f : sbb eax, dword ptr [rax] ; test eax, eax ; js 0x200000f21a0 ; xor al, al ; ret
0x0000020000123b64 : sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000200000e08d2 : sbb eax, dword ptr [rbp + rcx*4 + 0x42] ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200006ca2c1 : sbb eax, dword ptr [rbx + rcx*4 - 0x18] ; lea rcx, qword ptr [rax + 8] ; call r10
0x00000200006c7ff7 : sbb eax, dword ptr [rbx - 0x7cb70740] ; ret
0x00000200000834ba : sbb eax, dword ptr [rcx - 0xa] ; ret 0x7503
0x0000020000675b28 : sbb eax, dword ptr [rcx - 1] ; ret 0xff49
0x00000200001b24fb : sbb eax, dword ptr [rdi + rcx - 0x49] ; ret 0x8b41
0x000002000022554c : sbb eax, dword ptr [rdx] ; add al, al ; jmp 0x200002255bf
0x000002000045c70e : sbb eax, eax ; add eax, 2 ; ret
0x00000200001ac04e : sbb eax, eax ; add eax, 3 ; ret
0x00000200004a2862 : sbb eax, eax ; add rsp, 0x28 ; ret
0x00000200001db601 : sbb eax, eax ; and eax, 0x128 ; ret
0x00000200004d34f4 : sbb eax, eax ; and eax, 0x80000005 ; pop r14 ; ret
0x00000200004acd95 : sbb eax, eax ; and eax, 0x80000005 ; ret
0x00000200001b841b : sbb eax, eax ; and eax, 0xa ; add eax, 0xa ; ret
0x00000200000dcce0 : sbb eax, eax ; and eax, 0xc0000001 ; ret
0x00000200004e64f5 : sbb eax, eax ; and eax, 0xc0000004 ; ret
0x000002000048005f : sbb eax, eax ; and eax, 0xc000000d ; ret
0x0000020000033862 : sbb eax, eax ; and eax, 0xc0000022 ; ret
0x00000200001c53da : sbb eax, eax ; and eax, 0xc0000023 ; ret
0x00000200005d8ac3 : sbb eax, eax ; and eax, 0xc000004b ; ret
0x00000200003a6352 : sbb eax, eax ; and eax, 0xc00000a5 ; ret
0x00000200004af5ee : sbb eax, eax ; and eax, 0xc00000bb ; ret
0x0000020000225188 : sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000012e07b : sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x00000200000ea248 : sbb eax, eax ; and eax, dword ptr [rip + 0x266e50] ; ret
0x00000200000727a9 : sbb eax, eax ; and rax, rcx ; ret
0x0000020000191fc6 : sbb eax, eax ; and rdi, rax ; jmp 0x200000be211
0x00000200001b6546 : sbb eax, eax ; neg eax ; inc eax ; ret
0x000002000060b83c : sbb eax, eax ; not eax ; and eax, 0xc0000001 ; ret
0x00000200000e61c7 : sbb eax, eax ; not eax ; and eax, 0xc000000d ; ret
0x00000200004c2bb8 : sbb eax, eax ; not eax ; and eax, 0xc0000034 ; ret
0x00000200003ee016 : sbb eax, eax ; not eax ; and eax, 0xc00002b9 ; ret
0x000002000006ce58 : sbb eax, eax ; ret
0x00000200001411b3 : sbb eax, eax ; sbb eax, -1 ; ret
0x000002000013fe4f : sbb eax, eax ; sbb rax, -1 ; ret
0x0000020000672832 : sbb eax, ebx ; bts dword ptr [r8 + 0x20], 0x1d ; ret
0x00000200004a15df : sbb eax, ebx ; ret 0x83ff
0x00000200006ef4e3 : sbb eax, esi ; call qword ptr [rax]
0x00000200001db132 : sbb eax, esi ; cmp byte ptr [r10], al ; call r8
0x00000200006e4791 : sbb ebp, 4 ; add byte ptr [rcx - 0x75], al ; fadd dword ptr [rbp + 3] ; ret 0x348
0x0000020000073e4f : sbb ebp, ebx ; fmul qword ptr [rax - 0x75] ; ret
0x00000200000c33d7 : sbb ebp, ebx ; mov dh, 0x8a ; ret 0x2a41
0x000002000006fbaa : sbb ebp, ebx ; sar dword ptr [rax + 1], cl ; jmp 0x2000006fb7f
0x00000200000c33d6 : sbb ebp, r11d ; mov dh, 0x8a ; ret 0x2a41
0x00000200003c48e0 : sbb ebx, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000191b89 : sbb ebx, dword ptr [rbp + 0x14] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000676f1d : sbb ebx, dword ptr [rcx] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x000002000066f466 : sbb ebx, dword ptr [rsi + rcx*8] ; jmp qword ptr [rcx]
0x000002000067282b : sbb ebx, eax ; bts dword ptr [r8 + 0x20], 0x1b ; ret
0x000002000046fb49 : sbb ebx, ecx ; ret 0x41ff
0x00000200003d5a6d : sbb ebx, esi ; leave ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000a2ce9 : sbb ecx, dword ptr [r9 - 0x75] ; ret
0x000002000002e9b1 : sbb ecx, dword ptr [rax + 0x33] ; ret 0x2349
0x000002000066d045 : sbb ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000366846 : sbb ecx, dword ptr [rax + 0x3b] ; ret 0x1f75
0x0000020000120c23 : sbb ecx, dword ptr [rax + 0x63] ; ret 0x348
0x000002000065d5cb : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000b0e5e : sbb ecx, dword ptr [rax - 0x75] ; ret
0x0000020000180f24 : sbb ecx, dword ptr [rax - 0x75] ; ret 0x2b48
0x00000200000d032e : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000135052 : sbb ecx, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0x21
0x00000200003b3e75 : sbb ecx, dword ptr [rbp + 0x3b] ; ret 0x1677
0x000002000067f3e6 : sbb ecx, dword ptr [rbp + rcx*4 + 5] ; ret 0xfe49
0x0000020000474b25 : sbb ecx, dword ptr [rcx - 0x75] ; add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x00000200000a2cea : sbb ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000c41f1 : sbb ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000044f991 : sbb ecx, dword ptr [rcx] ; ret 0x4cff
0x00000200001b449c : sbb ecx, dword ptr [rdi] ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8348
0x00000200003e9636 : sbb ecx, dword ptr [rdi] ; test dword ptr [rcx + 0x3b000001], ebx ; ret 0x820f
0x000002000014185a : sbb ecx, dword ptr [rdx + 0x148a4201] ; or dword ptr [rdx], edi ; ret 0x5675
0x00000200005f38de : sbb ecx, ebx ; push rsi ; ret
0x00000200006666e3 : sbb ecx, ebx ; ret 0x41ff
0x000002000010986f : sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x000002000058bc3e : sbb ecx, esi ; inc dword ptr [rbp - 0x75] ; ret
0x000002000001189a : sbb edi, dword ptr [rax + 0x6e] ; ret
0x00000200000e1e37 : sbb edi, dword ptr [rax + 4] ; ret
0x000002000049ecbf : sbb edi, dword ptr [rbp - 0x96b1401] ; ret 0x7504
0x0000020000011899 : sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x00000200001b9b90 : sbb edi, eax ; jmp qword ptr [rcx]
0x00000200001b970b : sbb edi, eax ; push rsi ; ret
0x00000200005766c7 : sbb edi, ebx ; in eax, dx ; push rsi ; ret
0x00000200004a0edf : sbb edi, ebx ; ret 0x48ff
0x000002000000dbdf : sbb edi, edi ; add ah, byte ptr [rax + 0x6b] ; ret
0x00000200000c54b1 : sbb edi, edi ; ret 0x8148
0x00000200006eebe6 : sbb edi, edi ; ret 0x8b49
0x00000200003d3845 : sbb edx, -0x37 ; push rsi ; ret
0x00000200000e5453 : sbb edx, 2 ; add byte ptr [rax], al ; add eax, ebp ; ret 0xf65c
0x000002000000f600 : sbb edx, eax ; ret 0xb77e
0x0000020000022d69 : sbb edx, ebx ; sub r15b, byte ptr [rsi - 0x50] ; or dl, byte ptr [rcx + 0x21] ; ret
0x000002000051bbf3 : sbb edx, edx ; ret 0x4cff
0x00000200006ca310 : sbb esi, dword ptr [rbx] ; leave ; call r9
0x0000020000670565 : sbb esi, dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000294e29
0x0000020000663fe8 : sbb esi, dword ptr [rbx] ; shr al, cl ; xor byte ptr [rsi], cl ; ret
0x0000020000672c0a : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672c25
0x0000020000672cd7 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672cf2
0x0000020000672d8b : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672da6
0x0000020000672e2e : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x20000672e49
0x00000200000e3f62 : sbb esi, dword ptr [rdx + 6] ; ret
0x000002000012fac1 : sbb esi, dword ptr [rip + 0x40017] ; add byte ptr [rax], al ; call rdi
0x0000020000577784 : sbb esi, ebp ; inc dword ptr [rcx - 0x7b] ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200001709d0 : sbb esi, ebp ; push rsi ; ret 0xf07
0x00000200001d4711 : sbb esi, ecx ; verw ax ; ret 0x49
0x0000020000037264 : sbb esi, esi ; ret
0x00000200006471dd : sbb esi, esi ; ret 0x7401
0x0000020000215071 : sbb esi, esi ; ret 0x7502
0x0000020000120db8 : sbb esi, esi ; ret 0x7503
0x000002000006386c : sbb esi, esi ; ret 0x7508
0x0000020000439cc1 : sbb esi, esp ; ret 0x48ff
0x0000020000012b98 : sbb esp, dword ptr [rax] ; sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200004ccbe1 : sbb esp, dword ptr [rbp + rbx*8 - 1] ; test rax, rax ; je 0x200004ccbf5 ; call rax
0x0000020000722835 : sbb esp, dword ptr [rdi - 3] ; inc dword ptr [rcx + rcx*4 + 5] ; jmp 0x2000072280a
0x00000200007233a1 : sbb esp, edx ; ret 0x48ff
0x00000200004fc72f : sbb r11b, bpl ; salc ; mov eax, 0xc000000d ; ret
0x00000200003c47cc : sbb r11b, byte ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200004d5262 : sbb r11b, sil ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x00000200004280c5 : sbb r15b, dil ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051d0d6 : sbb r15b, dil ; ret 0x8948
0x00000200003ffea8 : sbb r15b, r15b ; ret
0x0000020000133091 : sbb r15b, r15b ; ret 0xd03b
0x00000200004a03ac : sbb r8, qword ptr [rax] ; ret
0x00000200001a5c6d : sbb r8b, byte ptr [rax] ; add rcx, r8 ; jmp rcx
0x000002000005bfb2 : sbb r8b, byte ptr [rcx - 0x80] ; call qword ptr [rcx]
0x000002000040c2f9 : sbb r9b, bpl ; ret 0xfffc
0x00000200003c517c : sbb r9b, byte ptr [r13 + r9*4 + 0xd] ; jnp 0x200003c5148 ; ret
0x00000200000d8dc9 : sbb r9b, dil ; dec dword ptr [rbx - 0x74cbdba4] ; ret
0x00000200004642ff : sbb rax, -0x74bbffe1 ; ret
0x000002000013fe51 : sbb rax, -1 ; ret
0x00000200000727a8 : sbb rax, rax ; and rax, rcx ; ret
0x0000020000191fc5 : sbb rax, rax ; and rdi, rax ; jmp 0x200000be212
0x000002000013fe4e : sbb rax, rax ; sbb rax, -1 ; ret
0x0000020000114681 : sbb sil, byte ptr [r10] ; ret 0xc0a8
0x0000020000020343 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000007eb3e : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], cl ; ret 0xf748
0x000002000039d12e : scasb al, byte ptr [rdi] ; call rcx
0x000002000015850e : scasb al, byte ptr [rdi] ; clc ; ret
0x00000200000c3a8d : scasb al, byte ptr [rdi] ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x000002000043931e : scasb al, byte ptr [rdi] ; cld ; ret 0xe9ff
0x0000020000409e0e : scasb al, byte ptr [rdi] ; cmp eax, 0xb60fffd5 ; ret
0x0000020000492337 : scasb al, byte ptr [rdi] ; cmp ecx, dword ptr [rdi] ; add dh, dh ; ret
0x0000020000583c20 : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000000d0ed : scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x000002000000dfb8 : scasb al, byte ptr [rdi] ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x000002000053c21e : scasb al, byte ptr [rdi] ; int 0xb2
0x0000020000596493 : scasb al, byte ptr [rdi] ; jmp qword ptr [rcx]
0x000002000001f989 : scasb al, byte ptr [rdi] ; jp 0x2000001f9ad ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004c2dbc : scasb al, byte ptr [rdi] ; leave ; dec dword ptr [rax - 0x75] ; ret
0x0000020000184f8b : scasb al, byte ptr [rdi] ; lock dec dword ptr [rbx + 0x5c62bc3] ; call rdx
0x000002000052e246 : scasb al, byte ptr [rdi] ; mov bl, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000105e80 : scasb al, byte ptr [rdi] ; mov eax, r10d ; jmp 0x20000105e28
0x00000200000b030e : scasb al, byte ptr [rdi] ; mov gs, word ptr [rcx] ; add byte ptr [rcx - 0x73], al ; push rdx ; jmp qword ptr [rbx]
0x00000200000b628f : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; ret
0x00000200001244e6 : scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000b3a86 : scasb al, byte ptr [rdi] ; or eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x00000200000b3b51 : scasb al, byte ptr [rdi] ; or eax, 0x48c03300 ; add esp, 0x18 ; ret
0x0000020000450dfc : scasb al, byte ptr [rdi] ; out 1, al ; add byte ptr [rax], al ; jne 0x20000450d9d ; call 0x200000bd0e9
0x00000200001747da : scasb al, byte ptr [rdi] ; out dx, al ; inc dword ptr [rcx - 0xa] ; ret 0xf08
0x0000020000174815 : scasb al, byte ptr [rdi] ; out dx, al ; push rsi ; ret 0x7401
0x00000200005485f2 : scasb al, byte ptr [rdi] ; push qword ptr [rdx] ; ret
0x00000200005866aa : scasb al, byte ptr [rdi] ; push rsi ; cmc ; call qword ptr [rax - 0xf3dac17]
0x00000200000648c2 : scasb al, byte ptr [rdi] ; ret
0x00000200000a4dd3 : scasb al, byte ptr [rdi] ; ret 0x2a
0x0000020000491886 : scasb al, byte ptr [rdi] ; ret 0x48ff
0x00000200005145a7 : scasb al, byte ptr [rdi] ; ret 0x49ff
0x000002000072ccc6 : scasb al, byte ptr [rdi] ; ret 0xa8ff
0x00000200003fcd83 : scasb al, byte ptr [rdi] ; ret 0xe9ff
0x000002000047d88b : scasb al, byte ptr [rdi] ; ret 0xebff
0x0000020000574d96 : scasb al, byte ptr [rdi] ; ret 0xffdd
0x000002000068d16c : scasb al, byte ptr [rdi] ; sar bh, 0xff ; ret 0x3b41
0x000002000022f149 : scasb al, byte ptr [rdi] ; xor byte ptr [rcx], bl ; add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x00000200000e68f4 : scasd eax, dword ptr [rdi] ; add al, 0 ; add al, ch ; ret 0x772
0x00000200000abbee : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0x589
0x0000020000516ca0 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add al, ch ; mov dh, 0x6f ; ret
0x00000200004bae21 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001c46bd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004b43f8 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; pop rsi ; adc esi, esi ; ret 0xf04
0x00000200001d03ef : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x348
0x0000020000097a49 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000031801 : scasd eax, dword ptr [rdi] ; call 0x2000003d073
0x0000020000031800 : scasd eax, dword ptr [rdi] ; call 0x2000003d074
0x0000020000547250 : scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0x1800ea17]
0x00000200004ab002 : scasd eax, dword ptr [rdi] ; call rax
0x0000020000141313 : scasd eax, dword ptr [rdi] ; cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x0000020000439a1d : scasd eax, dword ptr [rdi] ; cmc ; ret 0x48ff
0x000002000018d3c9 : scasd eax, dword ptr [rdi] ; cmp al, 0x1c ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000020000532d17 : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x7b] ; ret
0x000002000060a0ff : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006662a0 : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000b55bb : scasd eax, dword ptr [rdi] ; fimul word ptr [rax - 0x75] ; ret
0x000002000068aa31 : scasd eax, dword ptr [rdi] ; fld qword ptr [rcx - 0x75] ; ret
0x000002000066cf99 : scasd eax, dword ptr [rdi] ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000000c544 : scasd eax, dword ptr [rdi] ; lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x000002000021d9a8 : scasd eax, dword ptr [rdi] ; mov dword ptr [rbx + rcx*4 - 0x40], 0x3bc32b44 ; ret
0x00000200004aaffe : scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000000efd1 : scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; or ah, cl ; jge 0x2000000f007 ; ret
0x00000200000b62d1 : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; ret
0x000002000017de9a : scasd eax, dword ptr [rdi] ; out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000401a4d : scasd eax, dword ptr [rdi] ; rcl esp, -1 ; jmp 0x20000401a1b
0x0000020000010821 : scasd eax, dword ptr [rdi] ; ret
0x00000200000809b5 : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000020000041418 : scasd eax, dword ptr [rdi] ; ret 0x341
0x000002000068f76f : scasd eax, dword ptr [rdi] ; ret 0x344
0x0000020000162ba2 : scasd eax, dword ptr [rdi] ; ret 0x348
0x0000020000617b8a : scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000024b4f8 : scasd eax, dword ptr [rdi] ; ret 0x3e
0x00000200001628e6 : scasd eax, dword ptr [rdi] ; ret 0x40b9
0x00000200003efcfd : scasd eax, dword ptr [rdi] ; ret 0x48ff
0x0000020000442b1d : scasd eax, dword ptr [rdi] ; ret 0x4dff
0x00000200002788c4 : scasd eax, dword ptr [rdi] ; ret 0x68
0x000002000059c352 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000089c2e : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000200001087c4 : scasd eax, dword ptr [rdi] ; ret 0x8b4e
0x00000200002364d0 : scasd eax, dword ptr [rdi] ; ret 0x9948
0x0000020000367deb : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000200006f8d8c : scasd eax, dword ptr [rdi] ; ret 0xba41
0x000002000013f3b1 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x0000020000058d40 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x000002000045e2b5 : scasd eax, dword ptr [rdi] ; ret 0xc149
0x00000200002392d3 : scasd eax, dword ptr [rdi] ; ret 0xc803
0x00000200003db3f0 : scasd eax, dword ptr [rdi] ; ret 0xccc3
0x00000200000a7d81 : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000200000df07b : scasd eax, dword ptr [rdi] ; ret 0xf49
0x0000020000132ef9 : scasd eax, dword ptr [rdi] ; ret 0xf4c
0x000002000013435f : scasd eax, dword ptr [rdi] ; ret 0xf741
0x000002000012a8e1 : scasd eax, dword ptr [rdi] ; ret 0xf749
0x00000200005d0f65 : scasd eax, dword ptr [rdi] ; ret 0xffa4
0x00000200000914f7 : scasd eax, dword ptr [rdi] ; retf 0x34d ; ror dword ptr [rax - 1], -0x3e ; jmp 0x20000091497
0x00000200006e8ccf : scasd eax, dword ptr [rdi] ; rol byte ptr [rcx - 1], cl ; ret 0xd348
0x00000200006cf144 : scasd eax, dword ptr [rdi] ; rol dword ptr [rbx + 0x3483fe1], 1 ; ret
0x00000200003da895 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200003daf26 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3f ; ret
0x00000200003da9c6 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x0000020000085ad9 : scasd eax, dword ptr [rdi] ; ror byte ptr [rax + 0x2b], 1 ; ret 0x8d4a
0x0000020000132e7c : scasd eax, dword ptr [rdi] ; ror byte ptr [rax - 0x75], cl ; ret 0x9948
0x000002000042521f : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x3b], 1 ; ret 0x7973
0x00000200000f9293 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x0000020000202666 : scasd eax, dword ptr [rdi] ; ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200003e7333 : scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7501
0x00000200006cd1a2 : scasd eax, dword ptr [rdi] ; sar edi, cl ; ret
0x00000200001b4cc3 : scasd eax, dword ptr [rdi] ; shr al, 1 ; ret 0xee56
0x000002000037608f : scasd eax, dword ptr [rdi] ; std ; jmp qword ptr [rcx]
0x00000200004d047d : scasd eax, dword ptr [rdi] ; sti ; dec dword ptr [rax - 0x75] ; ret
0x000002000062a2fe : scasd eax, dword ptr [rdi] ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000010c655 : scasd eax, dword ptr [rdi] ; xor bh, dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000062df65 : scasd eax, dword ptr [rdi] ; xor dl, dl ; inc dword ptr [rcx + rdi + 0x2d] ; clc ; ret 7
0x00000200001e94ab : seta al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000054c1c : seta al ; ret
0x000002000065119d : seta cl ; mov eax, ecx ; ret
0x00000200004e7b0e : setae al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000039990 : setae al ; ret
0x0000020000238aa3 : setb al ; mov eax, r8d ; ret
0x000002000045079d : setb al ; movzx eax, al ; ret
0x0000020000121f1f : setb al ; ret
0x00000200001e592a : setb cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000013c31e : setb cl ; mov eax, r9d ; ret
0x000002000009d2c2 : setb cl ; test cl, cl ; sete al ; ret
0x0000020000238aa2 : setb r8b ; mov eax, r8d ; ret
0x000002000013c31d : setb r9b ; mov eax, r9d ; ret
0x000002000004e1bc : setbe al ; ret
0x00000200000d2681 : setbe dl ; mov eax, edx ; ret
0x0000020000616157 : sete al ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000162d74 : sete al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000007068b : sete al ; add rsp, 0x28 ; ret
0x00000200001be6ad : sete al ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000154459 : sete al ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000104995 : sete al ; add rsp, 0x38 ; ret
0x0000020000163a69 : sete al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005302f8 : sete al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000095ecd : sete al ; mov eax, r8d ; ret
0x000002000008ea03 : sete al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003660d : sete al ; ret
0x0000020000057b6c : sete cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000014affc : sete cl ; mov eax, ecx ; ret
0x0000020000511272 : sete cl ; mov eax, r9d ; ret
0x000002000071e698 : sete r8b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000095ecc : sete r8b ; mov eax, r8d ; ret
0x0000020000511271 : sete r9b ; mov eax, r9d ; ret
0x00000200004630a3 : setg al ; ret
0x0000020000408065 : setle al ; inc eax ; add rsp, 0x28 ; ret
0x0000020000403fc3 : setle al ; inc eax ; add rsp, 0x38 ; ret
0x00000200004b1db5 : setle al ; inc eax ; ret
0x0000020000207323 : setle al ; ret
0x00000200000b7a1a : setne al ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052dd95 : setne al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000042a9f0 : setne al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b2c17 : setne al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037f5a0 : setne al ; add rsp, 0x28 ; ret
0x000002000016199a : setne al ; add rsp, 0x30 ; pop rbp ; ret
0x000002000052de0f : setne al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000052dc5a : setne al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000052fdbc : setne al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000053206d : setne al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000038392e : setne al ; mov byte ptr [rdx], al ; xor eax, eax ; ret
0x00000200005b65ec : setne al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000531aae : setne al ; pop rbp ; ret
0x000002000004d96b : setne al ; ret
0x0000020000123b5f : setne byte ptr [rip + 0x1b1f72] ; xor eax, eax ; ret
0x000002000009781d : setne cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000531ada : setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200005b6693 : setne dl ; cmp edx, eax ; jne 0x200005b66ab ; xor eax, eax ; ret
0x00000200005b299f : setne dl ; jmp 0x200005b29bf
0x00000200000b74b2 : setne dl ; mov eax, edx ; ret
0x00000200000f75ab : setns al ; add rsp, 0x28 ; ret
0x0000020000500985 : setns al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000070b6a9 : setns cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000015850d : sfence ; ret
0x00000200004a0dc6 : sgdt ptr [rax] ; add bh, bh ; ret 0x9489
0x000002000014fc35 : sgdt ptr [rax] ; add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x00000200006cef60 : sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x000002000027d418 : shl al, 1 ; jo 0x2000027d425 ; adc al, 0xe2 ; jo 0x2000027d429 ; clc ; ret
0x0000020000405808 : shl byte ptr [r14 + 0x3b], 1 ; ret 0x870f
0x00000200004fe5c8 : shl byte ptr [r14 - 0x77], 0x45 ; ret 0x9de8
0x00000200004fe530 : shl byte ptr [r14 - 0x77], 0x45 ; ret 0xb5e8
0x0000020000405804 : shl byte ptr [r14 - 0x77], cl ; shl byte ptr [r14 + 0x3b], 1 ; ret 0x870f
0x0000020000118724 : shl byte ptr [rax + 0x75], 0x84 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000024d06d : shl byte ptr [rax + rax], 0x12 ; and dword ptr [rdx], ecx ; add byte ptr [rsi + rax], cl ; ret
0x000002000066e402 : shl byte ptr [rax], 0x45 ; cmp ecx, edx ; jb 0x2000066e401 ; xor eax, eax ; ret
0x0000020000500bc1 : shl byte ptr [rax], 0x75 ; or al, byte ptr [rcx + 3] ; int 0x80
0x000002000044ce39 : shl byte ptr [rax], 0x83 ; cli ; add esi, dword ptr [rdx - 0x10] ; xor eax, eax ; ret
0x000002000000eb1c : shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x000002000051b427 : shl byte ptr [rbx + rax], 0x3a ; ret 0x1275
0x000002000038c0f0 : shl byte ptr [rbx - 0x74fffe76], 1 ; ret 0xe8c1
0x000002000010b21d : shl byte ptr [rbx], 0xc2 ; cmp eax, edx ; jne 0x2000010b1e6 ; jmp 0x200001a74f3
0x00000200004ac930 : shl byte ptr [rbx], 0xf4 ; dec dword ptr [rax - 0x75] ; ret
0x000002000005ff5f : shl byte ptr [rbx], 1 ; ret
0x0000020000483e40 : shl byte ptr [rbx], 1 ; ret 0xd2f7
0x00000200000f9e37 : shl byte ptr [rbx], 1 ; ret 0xf00b
0x00000200004ad6e5 : shl byte ptr [rcx + rax], 1 ; ret
0x00000200005a31d8 : shl byte ptr [rcx], 0x74 ; ret 0x4108
0x0000020000538a3e : shl byte ptr [rcx], cl ; out dx, eax ; dec dword ptr [rbx + 0x14e9807d] ; ret
0x000002000025083f : shl byte ptr [rdx], 0 ; add byte ptr [rax], al ; enter 0x40e3, 0 ; ret 0x40e4
0x00000200000260d6 : shl byte ptr [rdx], 0x35 ; add byte ptr [rcx - 1], al ; ret 0x8a8b
0x00000200004e0980 : shl byte ptr [rdx], 0xf9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000fcc92 : shl byte ptr [rdx], 1 ; ret
0x00000200003ee019 : shl byte ptr [rip - 0x3ffffd47], 1 ; ret
0x00000200004c2bbb : shl byte ptr [rip - 0x3fffffcc], 1 ; ret
0x0000020000033863 : shl byte ptr [rip - 0x3fffffde], 0xc3 ; xor eax, eax ; ret
0x00000200000e61ca : shl byte ptr [rip - 0x3ffffff3], 1 ; ret
0x000002000060b83f : shl byte ptr [rip - 0x3fffffff], 1 ; ret
0x00000200004d34f5 : shl byte ptr [rip - 0x7ffffffb], 0x41 ; pop rsi ; ret
0x0000020000405809 : shl byte ptr [rsi + 0x3b], 1 ; ret 0x870f
0x0000020000109fa0 : shl byte ptr [rsi + 0x41], 0x23 ; leave ; jmp qword ptr [r10 + rax*8]
0x000002000005acc7 : shl byte ptr [rsi + 0x41], 0x23 ; ret 0x4466
0x000002000014c99b : shl byte ptr [rsi + 0x41], 0x2b ; ret
0x0000020000615699 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x00000200004912b1 : shl byte ptr [rsi + 0x41], 0x33 ; sub byte ptr [r14 + 0x23], spl ; ret 0x4166
0x000002000045b884 : shl byte ptr [rsi + 0x41], 0x3b ; ret
0x00000200004e0eb8 : shl byte ptr [rsi + 0x41], 0x83 ; ret
0x0000020000026986 : shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xa8e8
0x00000200005d09e2 : shl byte ptr [rsi + 0x45], 0x3b ; ret
0x00000200005bfdcc : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xca72
0x0000020000634197 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xdc72
0x00000200006341aa : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x00000200001d93c6 : shl byte ptr [rsi + 0x45], 0x89 ; or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x00000200004fe5c9 : shl byte ptr [rsi - 0x77], 0x45 ; ret 0x9de8
0x00000200004fe531 : shl byte ptr [rsi - 0x77], 0x45 ; ret 0xb5e8
0x00000200000ee9a0 : shl byte ptr [rsi - 0x77], 0x4c ; ret
0x000002000011134a : shl byte ptr [rsi - 0x77], 0x4d ; ret
0x000002000043c238 : shl byte ptr [rsi - 0x77], 0x7d ; ret 0x854d
0x0000020000134530 : shl byte ptr [rsi - 0x77], 0xc ; ret 0x366
0x0000020000365938 : shl byte ptr [rsi - 0x77], cl ; ret 0x2ee8
0x0000020000405805 : shl byte ptr [rsi - 0x77], cl ; shl byte ptr [r14 + 0x3b], 1 ; ret 0x870f
0x0000020000730437 : shl byte ptr [rsi - 0x7d], 1 ; ret 0x4841
0x00000200006307ed : shl dword ptr [rax + 0x45], -0x75 ; ret 0xd08b
0x000002000011c958 : shl dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000047abaf : shl dword ptr [rax - 0x18000000], 0x2b ; ret 0xffc6
0x00000200003725bd : shl dword ptr [rax - 1], cl ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200003e6b02 : shl dword ptr [rax], -1 ; ret 0x513b
0x00000200004315ba : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x200004315c9 ; ret
0x000002000043291e : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x2000043292d ; ret
0x00000200001befbd : shl dword ptr [rax], 0x75 ; ret
0x000002000038eea6 : shl dword ptr [rbx - 0x74fffe76], 1 ; ret 0xe8c1
0x00000200002916dd : shl dword ptr [rbx], 0x23 ; ret 0x63
0x00000200001cd9a1 : shl dword ptr [rbx], cl ; ret
0x00000200001f6905 : shl dword ptr [rdi + rax], 0x3a ; ret 0xa74
0x0000020000064b04 : shl dword ptr [rdi + rcx], 0x32 ; ret 0x3d83
0x00000200006f452c : shl dword ptr [rdi + rdi*8 + 0x974c085], -1 ; ret
0x000002000051fbeb : shl dword ptr [rdx - 0x25], -1 ; ja 0x2000051fbf8 ; ret
0x00000200000fe4d6 : shl dword ptr [rip - 0x1000], 0x3b ; ret
0x000002000072103c : shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x000002000005acb5 : shl dword ptr [rsi + 0x41], 0x23 ; ret 0x4466
0x00000200001d87d6 : shl dword ptr [rsi + 0x41], 0x2b ; ret
0x0000020000615695 : shl dword ptr [rsi + 0x41], 0x2b ; shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000206ac6 : shl dword ptr [rsi - 0x77], 0x42 ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000020663c : shl dword ptr [rsi - 0x77], 0x47 ; or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x00000200000298dd : shl dword ptr [rsi - 0x77], 0x4d ; call 0x1ffc34f2436
0x0000020000718a79 : shl eax, 0x14 ; mov dword ptr [rip - 0x475bf2], eax ; ret
0x00000200006fa0b9 : shl eax, 0x19 ; sar rax, 0x10 ; ret
0x000002000020a016 : shl eax, 0xa ; add eax, ecx ; ret
0x00000200001ca3bd : shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200005371cb : shl eax, 2 ; call 0x2000015d886
0x000002000020a0e0 : shl eax, 2 ; cdq ; idiv ecx ; add eax, r9d ; ret
0x0000020000205ee5 : shl eax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000018a71c : shl eax, 3 ; sub r14, rax ; jmp 0x200000a69df
0x000002000046f527 : shl eax, 4 ; add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000003362a : shl eax, 4 ; add rax, rcx ; ret
0x000002000003363d : shl eax, 4 ; add rax, rdx ; ret
0x000002000036defa : shl eax, cl ; add rsp, 0x28 ; ret
0x0000020000208a32 : shl eax, cl ; dec eax ; lock or dword ptr [r10], eax ; ret
0x000002000011e4f1 : shl eax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000124b37 : shl eax, cl ; not eax ; lock and dword ptr [r10], eax ; ret
0x00000200000f0ab0 : shl eax, cl ; not eax ; lock and dword ptr [r8], eax ; jmp 0x200000f0a86
0x00000200001d9698 : shl eax, cl ; not rax ; and qword ptr [r8], rax ; ret
0x000002000013c2dc : shl eax, cl ; or qword ptr [r8], rax ; ret
0x000002000017f951 : shl ebx, -0x11 ; dec dword ptr [rbp - 0x75] ; ret 0xb70f
0x0000020000471dd9 : shl ebx, 1 ; inc dword ptr [rbp - 0x6af0be40] ; ret 0x3d83
0x00000200003f9a57 : shl ebx, 3 ; jmp 0x200003f99af
0x0000020000718a63 : shl ecx, 0xc ; mov dword ptr [rip - 0x475bdc], ecx ; ret
0x00000200006ed78b : shl edx, 0x18 ; or eax, edx ; ret
0x000002000015798e : shl edx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x000002000015dd13 : shl edx, 0x20 ; or rax, rdx ; ret
0x00000200001c783e : shl edx, 0x20 ; or rdx, rax ; mov rax, rdx ; ret
0x000002000066d916 : shl edx, 0xc ; call 0x20000294006
0x00000200005d01aa : shl edx, 0xc ; or r8d, ecx ; or r8d, edx ; jmp 0x200005d01d5
0x0000020000515644 : shl edx, 0xf ; call 0x2000013b956
0x000002000038120c : shl edx, 4 ; add rdx, r14 ; call 0x200000dd4cc
0x000002000067361e : shl edx, 4 ; call 0x20000294006
0x000002000013e16c : shl edx, cl ; or qword ptr [r8 + r9*8 + 8], rdx ; ret
0x00000200006f452b : shl qword ptr [r15 + rdi*8 + 0x974c085], -1 ; ret
0x00000200005371ca : shl r8, 2 ; call 0x2000015d887
0x00000200006fa0b8 : shl rax, 0x19 ; sar rax, 0x10 ; ret
0x0000020000205ee4 : shl rax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000018a71b : shl rax, 3 ; sub r14, rax ; jmp 0x200000a69e0
0x0000020000033629 : shl rax, 4 ; add rax, rcx ; ret
0x000002000003363c : shl rax, 4 ; add rax, rdx ; ret
0x000002000036def9 : shl rax, cl ; add rsp, 0x28 ; ret
0x000002000011e4f0 : shl rax, cl ; mov qword ptr [r8], rax ; ret
0x00000200001d9697 : shl rax, cl ; not rax ; and qword ptr [r8], rax ; ret
0x000002000013c2db : shl rax, cl ; or qword ptr [r8], rax ; ret
0x000002000015798d : shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x000002000015dd12 : shl rdx, 0x20 ; or rax, rdx ; ret
0x00000200001c783d : shl rdx, 0x20 ; or rdx, rax ; mov rax, rdx ; ret
0x000002000066d915 : shl rdx, 0xc ; call 0x20000294007
0x000002000038120b : shl rdx, 4 ; add rdx, r14 ; call 0x200000dd4cd
0x000002000067361d : shl rdx, 4 ; call 0x20000294007
0x000002000013e16b : shl rdx, cl ; or qword ptr [r8 + r9*8 + 8], rdx ; ret
0x00000200004a17e4 : shr al, 0x12 ; salc ; ret 0x49ff
0x00000200005a90b7 : shr al, 0x2b ; ret 0xffe6
0x0000020000643b69 : shr al, 0x51 ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200001c2ba4 : shr al, 0x52 ; ret 0xfff0
0x0000020000367ef3 : shr al, 0x53 ; ret
0x00000200004b4f0f : shr al, 0x5b ; ret 0xffc8
0x0000020000367edd : shr al, 0x69 ; ret
0x00000200001c2b84 : shr al, 0x72 ; ret 0xfff0
0x00000200004aac77 : shr al, 0x7f ; ret 0x48ff
0x000002000019e350 : shr al, 0x8a ; adc dh, dh ; inc dword ptr [rax + rdi + 0x2d] ; ret
0x00000200001c2b62 : shr al, 0x94 ; ret 0xfff0
0x00000200001c2b3a : shr al, 0xbc ; ret 0xfff0
0x000002000055ddfd : shr al, 0xc1 ; mov bl, 9 ; add dh, dh ; ret
0x0000020000674392 : shr al, 0xd4 ; ret 0xffff
0x000002000056a1ad : shr al, 0xdd ; mov dl, 0xad ; dec dword ptr [rax - 0x75] ; ret
0x0000020000188098 : shr al, 0xfa ; ret 6
0x0000020000596cbd : shr al, 1 ; add dword ptr [rdx - 0x4e], ebx ; call qword ptr [rax - 0xd3d6e17]
0x000002000042693a : shr al, 1 ; and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000596cf7 : shr al, 1 ; mov edi, 0x90ffa90e ; jmp 0x200004c2fb5
0x000002000050119b : shr al, 1 ; pop rdi ; ret
0x00000200003a1529 : shr al, 1 ; push rcx ; ret
0x000002000072c11a : shr al, 1 ; push rsp ; mov byte ptr [rdx + 0x200f44ff], bl ; ret
0x00000200001c037e : shr al, 1 ; ret
0x00000200005674fc : shr al, 1 ; ret 0xb551
0x00000200001b4cc4 : shr al, 1 ; ret 0xee56
0x0000020000436a84 : shr al, 1 ; ret 0xfc6b
0x000002000040549e : shr al, 1 ; sbb byte ptr [rdi], ah ; ret 0xebff
0x00000200001c02c1 : shr al, 1 ; std ; ret
0x00000200004c0c92 : shr al, 2 ; and al, 1 ; ret
0x00000200004ad6e1 : shr al, 2 ; not al ; and al, 1 ; ret
0x00000200004ad6c0 : shr al, 3 ; and al, 1 ; ret
0x00000200000a639f : shr al, 4 ; and al, 1 ; ret
0x00000200004b9b98 : shr al, cl ; adc dh, dh ; mov edx, 0x1d8b48ff ; ret
0x0000020000443ba7 : shr al, cl ; add eax, edi ; ret 0x48ff
0x00000200004efdf5 : shr al, cl ; and eax, 0x8affda50 ; ret
0x00000200003809bb : shr al, cl ; call rcx
0x0000020000238a25 : shr al, cl ; cmc ; ret
0x00000200001cce3d : shr al, cl ; insd dword ptr [rdi], dx ; ret
0x00000200004881dd : shr al, cl ; int 0x80
0x0000020000578a4d : shr al, cl ; int 0xc3
0x000002000043162c : shr al, cl ; jle 0x20000431620 ; ret
0x000002000072409c : shr al, cl ; jle 0x200007240b6 ; mov bh, 0xff ; nop ; jmp 0x200007002b3
0x00000200004312fe : shr al, cl ; lodsb al, byte ptr [rsi] ; out dx, eax ; ret
0x00000200003b586d : shr al, cl ; lodsd eax, dword ptr [rsi] ; cmc ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000054724c : shr al, cl ; loop 0x20000547209 ; call qword ptr [rax - 0x1800ea17]
0x000002000041d162 : shr al, cl ; mov al, 0xb4 ; ret 0x65ff
0x00000200006004db : shr al, cl ; mov bh, 0x28 ; ret
0x000002000059425d : shr al, cl ; mov ebp, 0x8bffd00b ; ret
0x00000200005e5315 : shr al, cl ; mov ecx, 0x8bffa5e9 ; ret
0x000002000063a85e : shr al, cl ; mov esp, 0x8bffc5a5 ; ret
0x000002000049e403 : shr al, cl ; movsxd rbx, esp ; ret
0x000002000022a810 : shr al, cl ; or ah, byte ptr [rsi - 0x7cb7fffa] ; ret
0x000002000012047d : shr al, cl ; or eax, 0x8bfff27d ; ret
0x000002000070d4cb : shr al, cl ; outsd dx, dword ptr [rsi] ; ret 0xff9d
0x000002000007221b : shr al, cl ; pop rbx ; and al, byte ptr [rsi] ; add dh, dh ; ret
0x0000020000446651 : shr al, cl ; pop rcx ; pushfq ; ret 0xf0ff
0x0000020000537f98 : shr al, cl ; pop rdx ; ret
0x0000020000548bc0 : shr al, cl ; pop rdx ; ret 0xffd4
0x0000020000435450 : shr al, cl ; pop rdx ; scasb al, byte ptr [rdi] ; ret
0x00000200001b923a : shr al, cl ; push rax ; ret 0xffe8
0x0000020000648bc4 : shr al, cl ; push rsi ; ret 0xffc4
0x0000020000139ac6 : shr al, cl ; push rsp ; mov bl, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000f30e7 : shr al, cl ; ret
0x000002000004faf8 : shr al, cl ; ret 0x10e0
0x0000020000669a84 : shr al, cl ; ret 0x8a
0x000002000057caf8 : shr al, cl ; ret 0xbd1d
0x000002000049a958 : shr al, cl ; ret 0xbd54
0x000002000062ead0 : shr al, cl ; ret 0xc042
0x0000020000575758 : shr al, cl ; ret 0xd1f6
0x00000200003aa658 : shr al, cl ; ret 0xeea7
0x000002000040b9e0 : shr al, cl ; ret 0xffd1
0x00000200001f8be4 : shr al, cl ; ret 9
0x000002000043720c : shr al, cl ; sahf ; nop ; ret
0x0000020000600b76 : shr al, cl ; sbb al, 0x22 ; ret
0x000002000014ce02 : shr al, cl ; sbb byte ptr [rax - 0xb7ffec], al ; ret
0x00000200004efd71 : shr al, cl ; test eax, 0x8bffda50 ; ret
0x0000020000474d71 : shr al, cl ; test eax, 0x8bffe200 ; ret
0x000002000060a413 : shr al, cl ; xchg eax, edi ; in eax, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000040d53c : shr al, cl ; xchg eax, edx ; ret
0x0000020000367fb4 : shr al, cl ; xchg eax, edx ; ret 0xffff
0x00000200004f521b : shr al, cl ; xchg esi, eax ; ret
0x000002000060035e : shr al, cl ; xor al, 0x2a ; ret
0x000002000051ce56 : shr al, cl ; xor al, 0x36 ; sar bh, 0xeb ; ret 0xd233
0x00000200000c3a8a : shr al, cl ; xor al, 0xae ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000663fea : shr al, cl ; xor byte ptr [rsi], cl ; ret
0x000002000017ea9e : shr bh, 1 ; push rsi ; ret
0x000002000017f278 : shr bh, cl ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200005b9db8 : shr bl, 0 ; add rsp, 0x18 ; ret
0x00000200006869a6 : shr bl, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000621f98 : shr bl, 0 ; add rsp, 0x38 ; ret
0x0000020000622227 : shr bl, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005f006c : shr bl, 0 ; ret
0x00000200000ec23c : shr bl, 0x5e ; mov rcx, qword ptr [rdx + 0x18] ; mov rax, rdx ; jmp 0x200000ec237
0x00000200000d5437 : shr bl, 0xa9 ; test r9, r9 ; cmove rax, rdx ; jmp 0x200000d5432
0x0000020000408b91 : shr bl, 0xc ; inc r10d ; jmp 0x20000408b82
0x00000200004ed0d9 : shr bl, 0xc9 ; mov ebx, 0xc0000001 ; jmp 0x200004ed0ae
0x00000200003844c6 : shr bl, 0xc9 ; mov ebx, 0xc000008a ; jmp 0x2000038449b
0x00000200006fe1d5 : shr bl, 0xca ; mov ebx, 0xc000009a ; jmp 0x200006fe1ab
0x000002000036a1fd : shr bl, 0xcd ; or dword ptr [rip - 0xba8b6], ecx ; ret
0x00000200004ae94b : shr bl, 0xde ; call 0x200000d7db2
0x0000020000475731 : shr bl, 0xe4 ; cmp r9, 1 ; je 0x20000475744 ; ret
0x000002000011ea8e : shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x00000200004e7b1d : shr bl, 0xf1 ; mov eax, dword ptr [rcx + 0xc4] ; ret
0x00000200003ec0d5 : shr bl, 0xf2 ; mov al, r9b ; ret
0x000002000071e045 : shr bl, 0xfa ; add rsp, 0x20 ; pop rbp ; ret
0x000002000016308b : shr bl, 0xfa ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006e0842 : shr bl, 1 ; or cl, byte ptr [rax - 0x75] ; retf ; call rdx
0x00000200004496a9 : shr bl, 2 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006438d8 : shr bl, 2 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200004c67a9 : shr bl, 2 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001bf0dd : shr bl, 3 ; mov r8b, 1 ; mov al, r8b ; ret
0x0000020000142b2a : shr bl, 3 ; xor r8d, r8d ; mov eax, r8d ; ret
0x000002000057d1b7 : shr bl, 4 ; call rax
0x00000200005eab99 : shr bl, 5 ; mov eax, 0xc0000056 ; ret
0x00000200003a51e1 : shr bl, cl ; enter 0x58b8, 0 ; add al, al ; ret
0x00000200001ac70a : shr bl, cl ; sub ecx, dword ptr [rbp + 0x3b] ; ret
0x000002000014a9af : shr bl, cl ; xlatb ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005cee55 : shr byte ptr [rax + 0x48], 3 ; add eax, 0xffd06b4a ; ret
0x00000200006660cb : shr byte ptr [rax + 0x4c850f02], cl ; in eax, dx ; ret 0xe9ff
0x0000020000157699 : shr byte ptr [rax + rax], 0 ; ret
0x00000200002285ff : shr byte ptr [rax - 0x9148af9], 1 ; ret 0xf07
0x00000200000c6468 : shr byte ptr [rax], 0x83 ; call qword ptr [rax]
0x000002000067ab60 : shr byte ptr [rbx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000140af8 : shr byte ptr [rbx], 0xc1 ; ret
0x00000200004fd578 : shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x200004fd58e ; ret
0x000002000022f885 : shr byte ptr [rbx], cl ; xchg byte ptr [rax + rbx*2 + 0x35f70000], al ; ret 0x121a
0x0000020000627e25 : shr byte ptr [rcx - 0x3e], 1 ; int 0xd
0x000002000044773c : shr byte ptr [rsi], 1 ; ret 0x8bff
0x000002000019ebf0 : shr cl, 0x13 ; or ch, dh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x00000200005fd3e6 : shr cl, 0x14 ; add eax, 0x8b4c0000 ; ret
0x0000020000233588 : shr cl, 0x16 ; ret 0xffff
0x000002000068e461 : shr cl, 0x1e ; ret 0xffff
0x00000200005b49e4 : shr cl, 0x20 ; mov esi, dr0 ; jmp qword ptr [rcx]
0x00000200005a758c : shr cl, 0x21 ; ret
0x0000020000538118 : shr cl, 0x22 ; ret
0x000002000059e186 : shr cl, 0x25 ; ret
0x000002000068e457 : shr cl, 0x28 ; ret 0xffff
0x00000200005a2c20 : shr cl, 0x29 ; cmp esi, esp ; push rsi ; ret
0x000002000054727d : shr cl, 0x2e ; jmp rdi
0x00000200003a003d : shr cl, 0x30 ; in eax, -1 ; inc dword ptr [rbp - 0x75] ; ret 0x1e9
0x000002000023356b : shr cl, 0x33 ; ret 0xffff
0x000002000053810d : shr cl, 0x38 ; ret
0x000002000058e95f : shr cl, 0x39 ; xchg eax, ebx ; int1 ; push rsi ; ret
0x000002000068e744 : shr cl, 0x53 ; ret
0x000002000068e73a : shr cl, 0x5d ; ret
0x0000020000192017 : shr cl, 0x5d ; ret 0xfff2
0x000002000058e14a : shr cl, 0x5f ; jb 0x2000058e147 ; push rdi ; ret
0x00000200001aae82 : shr cl, 0x62 ; mov bl, 0xf6 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000585e61 : shr cl, 0x63 ; ret 0xfff0
0x000002000058fee2 : shr cl, 0x65 ; ret
0x000002000068e730 : shr cl, 0x67 ; ret
0x0000020000587bb1 : shr cl, 0x67 ; ret 0xfff0
0x0000020000191f0e : shr cl, 0x70 ; ret
0x000002000054d467 : shr cl, 0x72 ; sti ; call 0x1ffc3e01e77
0x00000200001a6630 : shr cl, 0x79 ; sbb al, 0xf6 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000596d6d : shr cl, 0x7a ; ret 0xfff2
0x0000020000193d44 : shr cl, 0x82 ; adc eax, 0x8b48fff3 ; ret 0xb948
0x00000200003bb3c3 : shr cl, 0x87 ; idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x00000200001f93fb : shr cl, 0x89 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000205744 : shr cl, 0x8d ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000189872 : shr cl, 0x93 ; pushfq ; int1 ; push rsi ; ret
0x00000200003e3134 : shr cl, 0x98 ; ret
0x0000020000561e33 : shr cl, 0x99 ; ret
0x00000200005417a0 : shr cl, 0x9b ; mul esi ; dec dword ptr [rax - 9] ; ret
0x00000200001c5fa8 : shr cl, 0x9c ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000054c7e9 : shr cl, 0xa0 ; ret
0x0000020000174127 : shr cl, 0xa0 ; xchg eax, ebp ; out dx, al ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200005380a4 : shr cl, 0xa1 ; ret
0x0000020000121e93 : shr cl, 0xa2 ; ret 8
0x0000020000574cfa : shr cl, 0xa8 ; ret 0xffed
0x000002000053809a : shr cl, 0xab ; ret
0x0000020000574cf0 : shr cl, 0xb2 ; ret 0xffed
0x000002000022c392 : shr cl, 0xb3 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001a17ab : shr cl, 0xb6 ; mov ebp, esi ; push rsi ; ret
0x000002000058ff8f : shr cl, 0xb8 ; ret 0xfff1
0x0000020000192193 : shr cl, 0xbb ; ret
0x000002000059e1ee : shr cl, 0xbd ; ret 0xfff3
0x000002000059e235 : shr cl, 0xc1 ; ret
0x00000200005a50d1 : shr cl, 0xcb ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000588215 : shr cl, 0xcc ; ret 0xfff0
0x000002000053df38 : shr cl, 0xd5 ; movsxd rsp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e3122 : shr cl, 0xd5 ; ret 0xffff
0x00000200005ee9fc : shr cl, 0xdb ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x000002000054c7d0 : shr cl, 0xdf ; ret
0x000002000068e789 : shr cl, 0xe ; ret
0x000002000017b221 : shr cl, 0xe1 ; outsd dx, dword ptr [rsi] ; out dx, eax ; push rsi ; ret
0x00000200005881fc : shr cl, 0xe5 ; ret 0xfff0
0x000002000060d7fe : shr cl, 0xe6 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001b6d2f : shr cl, 0xe9 ; in eax, -9 ; push rsi ; ret 0x7503
0x00000200005800c9 : shr cl, 0xe9 ; ret
0x0000020000197c5c : shr cl, 0xe9 ; stosd dword ptr [rdi], eax ; push rsi ; ret
0x0000020000596d8c : shr cl, 0xec ; ret
0x0000020000561ddc : shr cl, 0xf0 ; ret
0x000002000056c05e : shr cl, 0xf2 ; leave ; in al, dx ; push rsi ; ret
0x000002000055c6e6 : shr cl, 0xf3 ; ret
0x00000200005323f5 : shr cl, 0xf4 ; jmp rsp
0x00000200005ee9db : shr cl, 0xfc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200001726be : shr cl, 1 ; ret
0x00000200000d8c58 : shr cl, 1 ; ret 0xfffe
0x00000200003ee425 : shr cl, 4 ; xor eax, eax ; mov byte ptr [rdx], cl ; ret
0x0000020000169476 : shr cl, 8 ; ret 0xffec
0x000002000072829a : shr cl, cl ; mov spl, 0xfe ; dec dword ptr [rax - 9] ; ret
0x0000020000089bdb : shr cl, cl ; ret
0x000002000017615e : shr dh, cl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000441dfb : shr dword ptr [rax + 0x48407401], -0x75 ; ret
0x0000020000193d63 : shr dword ptr [rax + 0x484a7401], -0x75 ; ret 0xb948
0x00000200005fb71a : shr dword ptr [rax + 0x484c7401], -0x75 ; ret
0x0000020000057149 : shr dword ptr [rax + 0x49427401], -0x75 ; ret
0x00000200000b41a9 : shr dword ptr [rax - 0x3fccfff3], 1 ; ret
0x0000020000024c7f : shr dword ptr [rax], 0x41 ; cmp edx, edx ; jb 0x20000024c72 ; xor eax, eax ; ret
0x00000200000f5247 : shr dword ptr [rax], 0x48 ; add edx, 0x28 ; jmp 0x200000f5219
0x0000020000278875 : shr dword ptr [rax], 0x56 ; ret 0x68
0x00000200000d08a3 : shr dword ptr [rbx + 0xc], cl ; add bh, bh ; ret 0x9489
0x000002000020a14a : shr dword ptr [rbx - 0x40], 0x1c ; add eax, 0xac00 ; ret
0x00000200005829cc : shr dword ptr [rbx], -0x10 ; inc dword ptr [rbx] ; ret
0x0000020000143fca : shr dword ptr [rbx], -0x3e ; ret
0x00000200000f7580 : shr dword ptr [rbx], 1 ; ret 0x2b41
0x000002000056bdbe : shr dword ptr [rdi - 0x163c7401], cl ; ret 0xffec
0x00000200006160a6 : shr eax, 0x10 ; add eax, ecx ; ret
0x000002000019ea75 : shr eax, 0x10 ; call r10
0x00000200001fde2c : shr eax, 0x10 ; mov rax, r8 ; ret
0x000002000022c347 : shr eax, 0x11 ; not eax ; and eax, 1 ; ret
0x00000200000c622b : shr eax, 0x18 ; and al, 1 ; ret
0x00000200000c00d0 : shr eax, 0x19 ; and eax, 1 ; ret
0x00000200000c447f : shr eax, 0x1c ; not eax ; and eax, 1 ; ret
0x0000020000072643 : shr eax, 0x1f ; ret
0x00000200001a2c3c : shr eax, 0x38 ; mov word ptr [r8], ax ; ret
0x000002000009baca : shr eax, 0x38 ; ret
0x00000200000c50b4 : shr eax, 0x3f ; add rax, rdx ; jmp 0x200000c5075
0x00000200000fdc13 : shr eax, 0xb ; and al, 1 ; ret
0x00000200005201a7 : shr eax, 0xc ; and rax, rcx ; ret
0x00000200001f2ba7 : shr eax, 0xc ; ret
0x0000020000102695 : shr eax, 0xe ; ret
0x0000020000665601 : shr eax, 0xf ; and al, 1 ; ret
0x00000200003fe9f7 : shr eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200002278e6 : shr eax, 1 ; and eax, 1 ; add rsp, 0x48 ; ret
0x0000020000441ada : shr eax, 1 ; and eax, 1 ; ret
0x00000200000960bc : shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x2000009608e
0x00000200000960bc : shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x20000096090
0x00000200003fea2b : shr eax, 1 ; ret
0x000002000012e3c5 : shr eax, 3 ; add eax, 0x48 ; ret
0x00000200000e84bb : shr eax, 3 ; and eax, 1 ; ret
0x000002000009c07e : shr eax, 3 ; and eax, 4 ; ret
0x000002000012ebbe : shr eax, 3 ; ret
0x0000020000054ec4 : shr eax, 4 ; add rax, rdx ; ret
0x000002000013f487 : shr eax, 4 ; and eax, 1 ; ret
0x000002000015dcc2 : shr eax, 7 ; and eax, 0xfffff ; ret
0x000002000015dd05 : shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x0000020000108425 : shr eax, cl ; and r8d, 7 ; mov eax, r8d ; ret
0x0000020000442211 : shr eax, cl ; in eax, dx ; sub bh, cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200003dab08 : shr eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x0000020000681832 : shr eax, cl ; movsb byte ptr [rdi], byte ptr [rsi] ; xor bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000444482 : shr eax, cl ; push rax ; ret 9
0x0000020000628bd9 : shr eax, cl ; push rcx ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003fcfa3 : shr eax, cl ; ret
0x000002000010bf38 : shr eax, cl ; ret 0x1880
0x0000020000703ac8 : shr eax, cl ; ret 0xa419
0x0000020000505df0 : shr eax, cl ; sbb bl, byte ptr [rax] ; ret
0x00000200003dac6a : shr eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003b67e5 : shr eax, cl ; xchg eax, ebp ; jp 0x200003b67bc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003db2c2 : shr eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200006eec37 : shr ebx, -0x1d ; mov eax, 0xc000000d ; ret
0x000002000013c32b : shr ebx, -0x21 ; xor eax, eax ; ret
0x00000200000727f0 : shr ebx, -0x29 ; xor eax, eax ; ret
0x000002000013e39f : shr ebx, -0x39 ; mov eax, 0xc000000d ; ret
0x000002000002a800 : shr ebx, -0x6f ; mov r8b, r10b ; jmp 0x2000002a7a8
0x0000020000141cdb : shr ebx, -0xd ; mov rax, r11 ; ret
0x000002000013fe47 : shr ebx, 0xc ; xor rax, rax ; ret
0x0000020000079284 : shr ebx, 1 ; mov word ptr [rax + 0x23], cs ; ret
0x000002000017f603 : shr ebx, cl ; sbb dword ptr [rax - 0x75], ecx ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000067258a : shr ecx, 0x1a ; and ecx, 1 ; mov eax, ecx ; ret
0x0000020000189850 : shr ecx, 0x2b ; pushfq ; int1 ; push rsi ; ret
0x00000200000b01b1 : shr ecx, 0x3a ; and ecx, 0x3f ; mov eax, ecx ; ret
0x00000200001ba368 : shr ecx, 0x62 ; sub al, 0xf8 ; inc dword ptr [rbp + 0x23] ; ret
0x0000020000088e4e : shr ecx, 0xd ; test r9b, 1 ; je 0x20000088e61 ; ret
0x00000200004da392 : shr ecx, 1 ; call 0x20000026650
0x00000200004b728b : shr ecx, 1 ; call 0x200000e1f21
0x000002000036d8d7 : shr ecx, 1 ; jne 0x2000036d8a3 ; ret
0x000002000068fd6c : shr ecx, 1 ; mov dword ptr [r8], ecx ; ret
0x00000200000c4d70 : shr ecx, cl ; xchg eax, edx ; out dx, al ; or al, 0 ; xor eax, eax ; ret
0x000002000043041f : shr edi, 1 ; add edi, r14d ; jmp 0x200004303ef
0x00000200001b9ceb : shr edx, 0x10 ; mov eax, edx ; jmp 0x200001b9d0c
0x00000200005b665d : shr edx, 0x17 ; cmp r8d, edx ; jmp 0x200005b669d
0x00000200001b9d43 : shr edx, 0x20 ; mov rax, rdx ; jmp 0x200001b9d65
0x00000200001579ae : shr edx, 0x20 ; wrmsr ; pop rdi ; ret
0x000002000015e268 : shr edx, 0x20 ; wrmsr ; ret
0x00000200003708c4 : shr edx, 0x20 ; wrmsr ; wbinvd ; ret
0x0000020000110f8f : shr edx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200000cee8c : shr edx, 0x20 ; xsave ptr [rcx] ; ret
0x00000200001e9b03 : shr edx, 0xc ; and rdx, r13 ; call qword ptr [rdi]
0x00000200003797ff : shr edx, 0xc ; and rdx, rax ; call qword ptr [rsi]
0x000002000008e8ad : shr edx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200001ab29d : shr edx, 0xd ; mov byte ptr [r9 + 0x31], dl ; ret
0x000002000036d915 : shr edx, 1 ; jne 0x2000036d8fa ; ret
0x000002000036db4f : shr edx, 1 ; jne 0x2000036db2a ; mov qword ptr [r8], r10 ; ret
0x00000200000c3bd8 : shr edx, 3 ; cmp rcx, rdx ; seta al ; ret
0x00000200001b9c69 : shr edx, 8 ; mov eax, edx ; jmp 0x200001b9c8e
0x00000200000f5e0e : shr edx, cl ; test r9, r9 ; js 0x200000f5e2a ; mov rax, rdx ; ret
0x000002000057b037 : shr esi, 1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000015e394 : shr esi, 1 ; ret
0x0000020000198601 : shr esi, cl ; call qword ptr [rax - 0xc3d9e17]
0x000002000015e386 : shr esp, 1 ; ret
0x00000200001fde2b : shr r8, 0x10 ; mov rax, r8 ; ret
0x000002000019ea74 : shr r8d, 0x10 ; call r10
0x00000200003dab07 : shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003dac69 : shr r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003db2c1 : shr r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200004b728a : shr r9, 1 ; call 0x200000e1f22
0x000002000036d8d6 : shr r9, 1 ; jne 0x2000036d8a4 ; ret
0x00000200004da391 : shr r9d, 1 ; call 0x20000026651
0x00000200004da390 : shr r9d, 1 ; call 0x20000026652
0x00000200001a2c3b : shr rax, 0x38 ; mov word ptr [r8], ax ; ret
0x000002000009bac9 : shr rax, 0x38 ; ret
0x00000200000c50b3 : shr rax, 0x3f ; add rax, rdx ; jmp 0x200000c5076
0x00000200005201a6 : shr rax, 0xc ; and rax, rcx ; ret
0x00000200001f2ba6 : shr rax, 0xc ; ret
0x00000200003fe9f6 : shr rax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fea2a : shr rax, 1 ; ret
0x0000020000054ec3 : shr rax, 4 ; add rax, rdx ; ret
0x00000200000b01b0 : shr rcx, 0x3a ; and ecx, 0x3f ; mov eax, ecx ; ret
0x00000200001b9cea : shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b9d0d
0x00000200005b665c : shr rdx, 0x17 ; cmp r8d, edx ; jmp 0x200005b669e
0x00000200001b9d42 : shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b9d66
0x00000200001579ad : shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x000002000015e267 : shr rdx, 0x20 ; wrmsr ; ret
0x00000200003708c3 : shr rdx, 0x20 ; wrmsr ; wbinvd ; ret
0x0000020000110f8e : shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200000cee8b : shr rdx, 0x20 ; xsave ptr [rcx] ; ret
0x00000200001e9b02 : shr rdx, 0xc ; and rdx, r13 ; call qword ptr [rdi]
0x00000200003797fe : shr rdx, 0xc ; and rdx, rax ; call qword ptr [rsi]
0x000002000008e8ac : shr rdx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000002000036d914 : shr rdx, 1 ; jne 0x2000036d8fb ; ret
0x000002000036db4e : shr rdx, 1 ; jne 0x2000036db2b ; mov qword ptr [r8], r10 ; ret
0x00000200001b9c68 : shr rdx, 8 ; mov eax, edx ; jmp 0x200001b9c8f
0x00000200006cef63 : sidt ptr [rdx] ; ret
0x0000020000090632 : sldt word ptr [rax + r15 - 0x41] ; ret
0x0000020000090633 : sldt word ptr [rax + rdi - 0x41] ; ret
0x0000020000568dc2 : sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x0000020000055258 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x000002000008911a : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000002eeab : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200000c5b5b : sldt word ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000002ad0f : sldt word ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000127ca3 : sldt word ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0xc748
0x0000020000092e77 : sldt word ptr [rax] ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x000002000009f3f7 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008cdfe : sldt word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072cc4c : sldt word ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x000002000072296f : sldt word ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200001e9788 : sldt word ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0x3b48
0x00000200000878da : sldt word ptr [rax] ; add byte ptr [rcx + 0xb], cl ; ret
0x00000200000a722f : sldt word ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200005fd7b7 : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000523e4 : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001812fe : sldt word ptr [rax] ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4588
0x000002000022610a : sldt word ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200004f6a8c : sldt word ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004df19e : sldt word ptr [rax] ; and r14, rdi ; call 0x20000109f81
0x000002000018a6e9 : sldt word ptr [rax] ; jmp 0x200000a69c7
0x00000200001f1345 : sldt word ptr [rax] ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x000002000011191f : sldt word ptr [rax] ; mov rbx, rcx ; call 0x2000015dbc8
0x0000020000093d0d : sldt word ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000081f46 : sldt word ptr [rbx + rcx*4 + 0x65] ; sub al, 0xf6 ; ret
0x0000020000151302 : sldt word ptr [rcx + 0x72] ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200001b9e99 : sldt word ptr [rcx + rax + 0x25] ; ret 0xfc7
0x00000200000824bb : sldt word ptr [rcx - 0x75] ; ret
0x00000200001d6e09 : sldt word ptr [rcx - 0x75] ; ret 0x8b48
0x00000200001b449d : sldt word ptr [rdi + rcx - 0x49] ; ret 0x8348
0x00000200001ed69d : stc ; adc byte ptr [rcx + 0x3b], cl ; enter 0x575, 0x41 ; mov eax, edx ; jmp 0x200001ed6b4
0x0000020000575d1f : stc ; adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x16001213], bh ; ret
0x000002000055c60d : stc ; adc cl, byte ptr [rdi] ; test dword ptr [rax], ebx ; ret
0x00000200000e1ea3 : stc ; adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x00000200001755d0 : stc ; add al, 0 ; nop ; jmp 0x20000061878
0x00000200000a0f33 : stc ; add al, 0x72 ; ret
0x0000020000207566 : stc ; add al, 0x75 ; jge 0x200002074fe ; je 0x20000207581 ; ret 0x1a8
0x00000200005a606f : stc ; add byte ptr [r8], al ; adc dword ptr [rdi], ecx ; ret 0x4789
0x0000020000482f48 : stc ; add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000020000032c2c : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x000002000014f975 : stc ; add byte ptr [rax], al ; add cl, ch ; add cl, ah ; add byte ptr [rax], al ; ret
0x000002000013f53d : stc ; add byte ptr [rax], al ; add eax, dword ptr [rsi] ; setbe al ; ret
0x000002000015e289 : stc ; add byte ptr [rax], al ; mov word ptr [rdx], ax ; ret
0x00000200005901e0 : stc ; add cl, byte ptr [rdi] ; test ecx, esi ; ret 0xfff1
0x00000200004fac84 : stc ; add cl, byte ptr [rdx + 0x470f44ca] ; ret 0x2a40
0x000002000058821d : stc ; add dh, byte ptr [rbx - 0x10] ; jmp 0x2000049447b
0x0000020000472b8d : stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x0000020000025c1f : stc ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200001c4c9c : stc ; add dword ptr [rdi], ecx ; ret 0x521
0x000002000012e669 : stc ; add eax, 0xf1f508d ; ret 0xb8c3
0x000002000020a0e5 : stc ; add eax, r9d ; ret
0x00000200000e1e49 : stc ; add esi, dword ptr [rdi + 0x24] ; mov eax, 1 ; ret
0x000002000010d105 : stc ; and byte ptr [rax + rax], al ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x000002000020c408 : stc ; and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x000002000041581d : stc ; call 0x20000401a57
0x0000020000143fc4 : stc ; cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x000002000020731f : stc ; cmp ecx, 1 ; setle al ; ret
0x000002000050903e : stc ; cmp esi, dword ptr [rdx + rdx - 1] ; ret 0x8966
0x00000200000fa738 : stc ; dec byte ptr [rdi] ; ret 0x4589
0x000002000013da60 : stc ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000114bf8 : stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000592af2 : stc ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004e0982 : stc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000074865 : stc ; dec dword ptr [rax - 0x7f] ; ret 1
0x00000200000d8dcb : stc ; dec dword ptr [rbx - 0x74cbdba4] ; ret
0x00000200005c0303 : stc ; fdivr dword ptr [rax + 0x79db85ff] ; add al, 0x8b ; ret
0x000002000072225b : stc ; in eax, dx ; ret 0x41ff
0x000002000010e031 : stc ; inc dword ptr [rax - 0x9dfe5b1] ; ret
0x000002000045bed7 : stc ; inc dword ptr [rbp - 0x6c77f040] ; ret
0x00000200000f9f2d : stc ; inc dword ptr [rcx - 0x75] ; ret 0x950f
0x0000020000611a3e : stc ; jae 0x20000611a4d ; movzx eax, cx ; ret
0x00000200001b8403 : stc ; jb 0x200001b8416 ; mov eax, 1 ; ret
0x000002000056bcab : stc ; jmp 0x20000437eea
0x00000200006fcc6d : stc ; jmp qword ptr [rax]
0x00000200001b2f8c : stc ; jmp qword ptr [rcx]
0x0000020000713137 : stc ; jmp qword ptr [rsi + 0x3b]
0x00000200006fcc42 : stc ; jmp rax
0x00000200000c95a9 : stc ; jo 0x200000c95b9 ; add al, al ; je 0x200000c95bc ; mov al, 1 ; ret
0x00000200002912c4 : stc ; mov ah, byte ptr [rbx] ; ret 0x638c
0x0000020000609435 : stc ; mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000650a3a : stc ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067172b : stc ; mov ebp, 1 ; call 0x20000294009
0x0000020000508d6c : stc ; mov ecx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200001583cb : stc ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000668cfc : stc ; mov rbp, r8 ; mov rsi, rdx ; call 0x20000674f81
0x00000200001e07ab : stc ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x0000020000132f35 : stc ; mov rcx, rax ; dec r9 ; jne 0x20000132f2d ; ret
0x00000200001e9b62 : stc ; mov rcx, rdi ; mov rdx, rax ; call qword ptr [rdi]
0x00000200000f342b : stc ; or cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000400cba : stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x00000200000e1e54 : stc ; or dword ptr [rdi + 0x19], esi ; mov eax, 8 ; ret
0x00000200006c5915 : stc ; or dword ptr [rsp + rax - 0x75], esi ; ret 0x4feb
0x000002000000e0a9 : stc ; or r12b, byte ptr [r15 - 0x7f] ; ret
0x00000200001808a0 : stc ; out dx, eax ; dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x00000200001808cd : stc ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000066e942 : stc ; out dx, eax ; ret
0x00000200004f994f : stc ; pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x000002000010647c : stc ; pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000000e717 : stc ; pop rdx ; ret
0x00000200004be024 : stc ; push qword ptr [rbp + 0xe] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000de5a3 : stc ; ret
0x00000200005086c3 : stc ; ret 0x45ff
0x00000200005d917d : stc ; ret 0x48ff
0x000002000043acbb : stc ; ret 0x4cff
0x000002000043ac25 : stc ; ret 0x85ff
0x0000020000580de3 : stc ; ret 0xffb3
0x0000020000443fb3 : stc ; ret 0xffc2
0x000002000059d4c7 : stc ; ret 0xffef
0x00000200000b596d : stc ; rol byte ptr [rax], 0 ; sal byte ptr [rbx + rax - 0x75], 0xc1 ; ret
0x0000020000600e4d : stc ; sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x000002000018d8cb : stc ; sbb byte ptr [rbx - 9], dh ; ret 0x600
0x00000200000728cd : stc ; sbb byte ptr [rcx + rbx*8 - 9], dh ; ret 0x600
0x000002000003974b : stc ; sbb dword ptr [rax], eax ; jmp 0x20000039745
0x00000200003e9635 : stc ; sbb ecx, dword ptr [rdi] ; test dword ptr [rcx + 0x3b000001], ebx ; ret 0x820f
0x000002000009c4d8 : stc ; std ; ja 0x2000009c4e5 ; mov al, 1 ; ret
0x000002000015e37f : stc ; sub al, 0x1f ; add bl, al ; movzx edx, cx ; in al, dx ; ret
0x000002000052038a : stc ; sub al, 0xd8 ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x0000020000600ef1 : stc ; sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x000002000066caea : stc ; test rax, rax ; je 0x2000066cb6b ; mov r8d, esi ; call rax
0x000002000043b923 : stc ; test rcx, rcx ; je 0x2000043b93f ; call 0x20000063d9d
0x000002000051000f : stc ; xchg eax, edi ; ret 0x8bff
0x000002000038a6f0 : stc ; xor byte ptr [rdx - 0x30], dh ; mov rax, r8 ; ret
0x00000200006d017f : stc ; xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x200006d0199
0x000002000015e1a8 : std ; adc al, 0 ; ret
0x000002000026dd31 : std ; adc byte ptr [rax], al ; ret
0x00000200000ed206 : std ; add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4e74
0x00000200001c69f7 : std ; add byte ptr [rdx + rcx - 0x75], dh ; add al, byte ptr [rcx + 0x23] ; ret
0x0000020000380f1c : std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x000002000048cbf2 : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200000937ee : std ; add r8, r9 ; jmp 0x200000937bc
0x000002000068d4a8 : std ; add rsp, 0x28 ; ret
0x000002000010ce67 : std ; and al, 0 ; ret
0x000002000029052d : std ; and al, byte ptr [rax] ; mov edx, 0xd70022ff ; jmp qword ptr [rdx]
0x00000200005a805d : std ; call 0x200001ca104
0x0000020000722fa0 : std ; call rcx
0x00000200000e6192 : std ; cmp byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000379654 : std ; dec dword ptr [rax - 0x39] ; ret
0x0000020000722228 : std ; dec dword ptr [rax - 0x73] ; add dword ptr [rax - 0x7f], ecx ; ret 0x800
0x00000200000aeb44 : std ; dec dword ptr [rax - 0x75] ; ret
0x0000020000722155 : std ; dec dword ptr [rax - 0x75] ; ret 0xb949
0x000002000072213c : std ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000720521 : std ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006812bd : std ; dec dword ptr [rax - 0x7d] ; ret 0x4158
0x000002000072336c : std ; dec dword ptr [rbp + rcx*4 + 0x15] ; cmp esp, edx ; ret 0x48ff
0x00000200007224ae : std ; dec dword ptr [rbx + rcx*4 + 5] ; xor esp, ebp ; ret 0x49ff
0x0000020000686a35 : std ; dec dword ptr [rbx - 0x3d8d9ceb] ; jmp qword ptr [rbx]
0x0000020000722b3c : std ; dec dword ptr [rcx + rcx*4 + 0x2d] ; mov bl, 0xe9 ; ret 0xe9ff
0x0000020000722197 : std ; dec dword ptr [rcx - 0x75] ; ret 0xb948
0x000002000054d130 : std ; imul al ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000722c2f : std ; in al, -0x3e ; inc dword ptr [rcx - 0x73] ; add dword ptr [r11], r12d ; ret 0xd2f7
0x0000020000575f48 : std ; in eax, dx ; push rsi ; ret
0x0000020000722793 : std ; inc dword ptr [rax + rcx*4 + 0x2d] ; sub edx, ebp ; ret 0x44ff
0x000002000043dd2c : std ; inc dword ptr [rbp - 0x74e58640] ; ret
0x0000020000722246 : std ; inc dword ptr [rbx + rcx*4 + 0x1d] ; in eax, -0x13 ; ret 0x8bff
0x0000020000722837 : std ; inc dword ptr [rcx + rcx*4 + 5] ; jmp 0x20000722808
0x0000020000722836 : std ; inc dword ptr [rcx + rcx*4 + 5] ; jmp 0x20000722809
0x000002000009c4d9 : std ; ja 0x2000009c4e4 ; mov al, 1 ; ret
0x00000200005165a0 : std ; ja 0x2000051655d ; jmp 0x200005b2894
0x00000200004dd0ea : std ; jbe 0x200004dd114 ; call 0x200000ffb22
0x000002000043654a : std ; jmp 0x1ffc2c87554
0x0000020000037574 : std ; jmp 0x200000373af
0x0000020000376090 : std ; jmp qword ptr [rcx]
0x0000020000721814 : std ; ljmp ptr [rbx] ; ret 0x8489
0x000002000008ec4c : std ; lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200000d5688 : std ; or al, dl ; jmp 0x200000d562d
0x000002000039f95b : std ; or byte ptr [rdi], cl ; test dword ptr [rdx], esi ; ret 0x19
0x0000020000581d7c : std ; or eax, 0xb70ffff0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200001056be : std ; push rsi ; ret
0x0000020000141998 : std ; ret
0x000002000043a80f : std ; ret 0x4cff
0x000002000043a879 : std ; ret 0x85ff
0x0000020000507b95 : std ; ret 0x89ff
0x000002000043a905 : std ; ret 0xe9ff
0x000002000062cb0f : std ; ret 0xffb1
0x000002000050195f : std ; ret 0xffc4
0x00000200002916dc : std ; shl dword ptr [rbx], 0x23 ; ret 0x63
0x00000200001755cf : std ; stc ; add al, 0 ; nop ; jmp 0x20000061879
0x00000200006176e0 : std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x000002000015e0e3 : sti ; adc al, 0 ; ret
0x000002000043e8f1 : sti ; adc al, byte ptr [rax] ; mov rcx, r14 ; call 0x2000006a619
0x00000200000a1347 : sti ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200003f86ef : sti ; adc byte ptr [rbx + 5], dh ; mov eax, r8d ; jmp 0x200003f86c3
0x00000200004dcad8 : sti ; add al, 0x72 ; loop 0x200004dcb2e ; add esp, 0x20 ; pop rbx ; ret
0x00000200006fe471 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014f9b5 : sti ; add byte ptr [rax], al ; add cl, ch ; ret 0xcb
0x0000020000021288 : sti ; add byte ptr [rbx], dh ; fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x0000020000212439 : sti ; add cl, byte ptr [rax - 0x75] ; ret
0x0000020000118d75 : sti ; add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000232971 : sti ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x0000020000054317 : sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000005202e : sti ; add ecx, dword ptr [rax - 1] ; ret
0x00000200000a2c3a : sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000d66de : sti ; add esi, dword ptr [rbp - 0xb] ; jmp 0x200000d66cd
0x00000200001c8d05 : sti ; add rsp, 0x28 ; ret
0x00000200004e6fdb : sti ; and dword ptr [rbp + rcx + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x000002000046bc20 : sti ; and eax, 0x74c00002 ; and al, 0x8b ; ret
0x0000020000493cc2 : sti ; and eax, dword ptr [rax] ; add al, al ; je 0x20000493c91 ; jmp 0x20000493c9e
0x000002000054d46a : sti ; call 0x1ffc3e01e74
0x000002000056784d : sti ; call rdx
0x00000200001b47eb : sti ; cdq ; idiv edi ; mov eax, 0xc00000bb ; ret
0x0000020000217f8b : sti ; cmp rbx, qword ptr [rbx + 8] ; jne 0x20000217fa0 ; mov eax, r10d ; jmp 0x20000217fa7
0x00000200000a9f69 : sti ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f0627 : sti ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000047d30 : sti ; dec dword ptr [rbp + 0x3b] ; ret 0x850f
0x0000020000465dfe : sti ; dec dword ptr [rbx + 0x18c87] ; add byte ptr [rbx], ah ; ret
0x00000200003f94c4 : sti ; dec dword ptr [rbx + 0x78c085e8] ; or esi, esi ; ret
0x00000200001a082d : sti ; dec dword ptr [rcx + 0xf] ; ret 0x8b4c
0x00000200006ec4e4 : sti ; dec dword ptr [rcx + rcx*4 + 0x15] ; ret
0x00000200000287d9 : sti ; fdiv dword ptr [rcx] ; add bl, ch ; ret 0xdb84
0x00000200001e6711 : sti ; idiv bh ; add rsp, 0x68 ; ret
0x0000020000441de9 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c556b : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200000630ed : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f6649 : sti ; idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0x8b48
0x00000200005766c8 : sti ; in eax, dx ; push rsi ; ret
0x0000020000591d65 : sti ; int1 ; push rsi ; ret
0x00000200001b8c94 : sti ; jmp 0x200001b8cd3
0x0000020000596d82 : sti ; jmp 0x200004c2ff0
0x00000200003fafdd : sti ; jno 0x200003fafb4 ; inc dword ptr [rbp - 0x1b7af040] ; ret 0x15
0x00000200006092ff : sti ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000000e1e8 : sti ; mov eax, dword ptr [rax + 0x7242b8f] ; sahf ; ret
0x00000200005ae080 : sti ; mov edx, 0x6ce990ff ; ret 0xfff5
0x00000200006f420f : sti ; mov r13d, ebx ; jmp 0x200006f41e7
0x000002000010603b : sti ; or dword ptr [rax], eax ; ret
0x000002000043a0d1 : sti ; out dx, al ; ret 0xe9ff
0x00000200004cccd5 : sti ; outsb dx, byte ptr [rsi] ; ret 0x48ff
0x0000020000379c21 : sti ; pop rsi ; dec dword ptr [rax + 0x3b] ; ret
0x000002000049d129 : sti ; popfq ; ret
0x00000200001419a4 : sti ; ret
0x000002000051e555 : sti ; ret 0x85ff
0x000002000043aa3d : sti ; ret 0x8bff
0x00000200000f3cbf : sti ; ret 0xa
0x0000020000540de1 : sti ; ret 0xffb7
0x0000020000473669 : sti ; ret 0xffe6
0x0000020000585ee5 : sti ; ret 0xfff0
0x000002000055f14a : sti ; rol byte ptr [rax], 0 ; ror byte ptr [rdi], 0x45 ; fsubr st(1) ; ret 0xeb2b
0x00000200000f8ba5 : sti ; sbb al, 0 ; add rsp, 0x28 ; ret
0x0000020000592eed : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004f2cc4 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x0000020000686a34 : sti ; std ; dec dword ptr [rbx - 0x3d8d9ceb] ; jmp qword ptr [rbx]
0x00000200004b2ff9 : sti ; sub ebp, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000151306 : stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200000b1979 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b49
0x00000200003b64d2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x000002000014ef95 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ef7a ; add byte ptr [rax], al ; ret
0x000002000013e31c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000470c87 : stosb byte ptr [rdi], al ; add byte ptr [rbx], cl ; add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x0000020000150f95 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150f5a ; add byte ptr [rax], al ; ret
0x000002000025baf5 : stosb byte ptr [rdi], al ; and eax, 0xc140200 ; add byte ptr [rsi + rax], cl ; ret
0x000002000000a30e : stosb byte ptr [rdi], al ; call qword ptr [rdx]
0x00000200005adaac : stosb byte ptr [rdi], al ; cmc ; call rcx
0x0000020000674332 : stosb byte ptr [rdi], al ; cwde ; ret
0x000002000068a037 : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000036cf5c : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret 0xb48
0x0000020000407acc : stosb byte ptr [rdi], al ; in al, dx ; push qword ptr [rdx - 0x6b6516ff] ; ret 0xccff
0x000002000067c9d7 : stosb byte ptr [rdi], al ; int 0xff
0x0000020000372936 : stosb byte ptr [rdi], al ; je 0x2000037293d ; push rsi ; ret
0x00000200004914b0 : stosb byte ptr [rdi], al ; mov bh, 0xff ; mov al, byte ptr [rdx + rcx] ; ret
0x000002000001ff92 : stosb byte ptr [rdi], al ; mov dword ptr [rax], 0xb5000000 ; ret
0x000002000043189f : stosb byte ptr [rdi], al ; mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000574ba7 : stosb byte ptr [rdi], al ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; push rdi ; ret
0x000002000062a67a : stosb byte ptr [rdi], al ; or ebp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001633da : stosb byte ptr [rdi], al ; out 0x1e, al ; add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x000002000067108a : stosb byte ptr [rdi], al ; pop qword ptr [rax + rax] ; add rsp, 0x38 ; ret
0x00000200000267aa : stosb byte ptr [rdi], al ; ret
0x00000200001c4d82 : stosb byte ptr [rdi], al ; ret 0x18
0x000002000045f6a3 : stosb byte ptr [rdi], al ; ret 0x84ff
0x0000020000439305 : stosb byte ptr [rdi], al ; ret 0xe9ff
0x0000020000516835 : stosb byte ptr [rdi], al ; ret 0xebff
0x0000020000439344 : stosb byte ptr [rdi], al ; ret 0xf6ff
0x0000020000726f3a : stosb byte ptr [rdi], al ; ret 0xff
0x000002000001fb78 : stosb byte ptr [rdi], al ; salc ; xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x000002000013da5f : stosb byte ptr [rdi], al ; stc ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005adaab : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; cmc ; call rcx
0x0000020000055189 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000005a8a9 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x000002000005518a : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000005a8aa : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x000002000005518b : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000005a8ab : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x00000200000a5db9 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 9] ; jmp 0x20048cce919
0x000002000005518c : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000005a8ac : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x0000020000174c51 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 9] ; jmp 0x1ffc3c651ef
0x00000200000a5dba : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 9] ; jmp 0x20048cce918
0x000002000005518d : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000005a8ad : stosb byte ptr [rdi], al ; sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x0000020000174c52 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 9] ; jmp 0x1ffc3c651ee
0x00000200000a5dbb : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 9] ; jmp 0x20048cce917
0x000002000005518e : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000020a954 : stosb byte ptr [rdi], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004babf5 : stosd dword ptr [rdi], eax ; adc byte ptr [rax - 1], cl ; ret 0xc2eb
0x00000200000aa1f5 : stosd dword ptr [rdi], eax ; adc dword ptr [rsi], ecx ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000052e31e : stosd dword ptr [rdi], eax ; adc eax, dword ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000052e3ae : stosd dword ptr [rdi], eax ; adc eax, dword ptr [rax] ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000055b39 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000014efb5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd5
0x00000200000c71d0 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000150fb5 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb5
0x000002000012e2b9 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000674b86 : stosd dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000011728 : stosd dword ptr [rdi], eax ; and bpl, 0xe4 ; ret 0x394e
0x0000020000653c05 : stosd dword ptr [rdi], eax ; call 0x2000006fe23
0x0000020000653c04 : stosd dword ptr [rdi], eax ; call 0x2000006fe24
0x00000200000733a6 : stosd dword ptr [rdi], eax ; idiv bh ; inc dword ptr [rcx - 0x75] ; ret 0xa3e9
0x0000020000407a98 : stosd dword ptr [rdi], eax ; in al, dx ; push qword ptr [rdx - 0x6e4116ff] ; ret 0xccff
0x000002000063b255 : stosd dword ptr [rdi], eax ; jmp rcx
0x00000200004f153f : stosd dword ptr [rdi], eax ; mov cl, 0xff ; test rcx, rcx ; je 0x200004f1559 ; ret
0x0000020000135737 : stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x0000020000551eb6 : stosd dword ptr [rdi], eax ; mov ebp, 0x8b45ffe8 ; ret
0x00000200001420d4 : stosd dword ptr [rdi], eax ; mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000072f39b : stosd dword ptr [rdi], eax ; or eax, 0xd830000 ; or bh, byte ptr [rdx - 0x49] ; call qword ptr [rax]
0x000002000066f571 : stosd dword ptr [rdi], eax ; pop rax ; ret 0xccff
0x0000020000197c5f : stosd dword ptr [rdi], eax ; push rsi ; ret
0x0000020000027128 : stosd dword ptr [rdi], eax ; ret
0x0000020000040270 : stosd dword ptr [rdi], eax ; ret 0
0x000002000050e927 : stosd dword ptr [rdi], eax ; ret 0x49ff
0x00000200005dc235 : stosd dword ptr [rdi], eax ; ret 0xffe3
0x000002000044e3dc : stosd dword ptr [rdi], eax ; sar edi, -0x75 ; ret
0x000002000011b629 : stosd dword ptr [rdi], eax ; sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000678c45 : stosd dword ptr [rdi], eax ; xchg eax, edx ; ret 0xff
0x00000200006eb24f : stosd dword ptr [rdi], eax ; xchg eax, esp ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000674b85 : stosq qword ptr [rdi], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7dac : str word ptr [rax + 3] ; iretd ; jmp rcx
0x00000200000938cd : str word ptr [rax - 0x75] ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x000002000008c9be : str word ptr [rax - 0x75] ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x000002000048e36c : str word ptr [rax - 0x75] ; int 0xe8
0x000002000048eebb : str word ptr [rax - 0x75] ; je 0x2000048eeee ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000499f6d : str word ptr [rax - 0x75] ; or byte ptr [r15 + r9 - 0x49], r8b ; ret
0x000002000048d989 : str word ptr [rax - 0x75] ; pop rax ; or dh, dh ; ret
0x000002000008b6e2 : str word ptr [rax - 0x75] ; ret
0x000002000048e53f : str word ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200001d49b5 : str word ptr [rax - 0x7d] ; ret 0x4540
0x0000020000481fdd : str word ptr [rbx + 0x418b3052] ; add al, 0x2b ; ret 0xc085
0x00000200004878ff : str word ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200000876ba : str word ptr [rcx + 0xb] ; ret
0x00000200005ac985 : str word ptr [rcx + rcx*4 + 0x35] ; ret 0xfd9
0x000002000008eb73 : str word ptr [rcx - 0x7d] ; ret 0x4d04
0x0000020000718960 : str word ptr [rdi] ; add al, ch ; ret
0x000002000049650b : str word ptr [rdx - 0x759fdba4] ; ret
0x000002000048e36a : sub ah, byte ptr [rcx + 0xf] ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200000fe597 : sub ah, byte ptr [rip + 0x4750100] ; lock dec dword ptr [rcx] ; ret
0x0000020000151399 : sub ah, byte ptr [rsi - 9] ; ret 0x200
0x000002000067aa71 : sub al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005118d1 : sub al, 0 ; add byte ptr [rax], al ; call 0x20000141177
0x0000020000043fcd : sub al, 0 ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x000002000008c83a : sub al, 0 ; setne al ; ret
0x000002000007c66d : sub al, 0x10 ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22b0f8c
0x0000020000728610 : sub al, 0x12 ; ret 0x41ff
0x000002000000d0eb : sub al, 0x1d ; scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x000002000015e380 : sub al, 0x1f ; add bl, al ; movzx edx, cx ; in al, dx ; ret
0x00000200001bacad : sub al, 0x35 ; clc ; push rsi ; ret
0x00000200006717f0 : sub al, 0x36 ; ret 0x41ff
0x000002000061324a : sub al, 0x3b ; ret 0x820f
0x00000200000722e8 : sub al, 0x3d ; and al, 0 ; cmp rcx, rdx ; jae 0x2000007231c ; ret
0x0000020000115cbc : sub al, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x0000020000365f59 : sub al, 0x48 ; mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x0000020000271014 : sub al, 0x50 ; add byte ptr [r15 + 0x51], r9b ; add r8b, r14b ; jmp qword ptr [rsi]
0x0000020000722195 : sub al, 0x50 ; std ; dec dword ptr [rcx - 0x75] ; ret 0xb948
0x00000200004801b0 : sub al, 0x51 ; ret 0x4cff
0x00000200000117fa : sub al, 0x66 ; imul ebp, esi, 0x48fca0a ; pop rbp ; ret
0x00000200003a47fb : sub al, 0x83 ; ret 0x4114
0x00000200004f6efe : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000053a99 : sub al, 0x8b ; and byte ptr [rbx], r8b ; ret 0x8d4c
0x000002000010c783 : sub al, 0x8b ; inc byte ptr [rcx - 0x75] ; ret
0x000002000037be69 : sub al, 0x8b ; ret
0x00000200004e92c9 : sub al, 0x8b ; ret 0x8b48
0x000002000050164e : sub al, 0x8b ; ret 0xff48
0x00000200004cc938 : sub al, 0x8b ; ror dword ptr [rax - 0x75], 1 ; ret
0x00000200000b870c : sub al, 0x8d ; outsd dx, dword ptr [rsi] ; inc dword ptr [rcx - 0x76] ; or ecx, dword ptr [rcx - 1] ; ret
0x0000020000505e24 : sub al, 0x8e ; ret
0x000002000072336a : sub al, 0x9d ; std ; dec dword ptr [rbp + rcx*4 + 0x15] ; cmp esp, edx ; ret 0x48ff
0x000002000010ebe0 : sub al, 0xa2 ; add eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000248254 : sub al, 0xa2 ; or byte ptr [rax], al ; ret 0x8a2
0x00000200006d04d0 : sub al, 0xb ; xchg eax, ebx ; dec dword ptr [rax + 0xb] ; ret 0x894c
0x00000200003c5ed0 : sub al, 0xb1 ; ret
0x0000020000621c58 : sub al, 0xc8 ; push rsi ; ret
0x0000020000155fba : sub al, 0xd0 ; ret 0xffee
0x000002000052038b : sub al, 0xd8 ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200004ae301 : sub al, 0xe ; add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x00000200004f4538 : sub al, 0xe1 ; and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000010733 : sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x0000020000567847 : sub al, 0xec ; inc dword ptr [rax + rdi + 0x2d] ; sti ; call rdx
0x000002000017831c : sub al, 0xef ; inc dword ptr [rbp - 0x75] ; ret
0x00000200000e29d4 : sub al, 0xf ; test dword ptr [rcx - 0x14000002], ebx ; ret
0x000002000042b1e0 : sub al, 0xf4 ; ret
0x0000020000375213 : sub al, 0xf6 ; call qword ptr [rax]
0x000002000037520d : sub al, 0xf6 ; inc dword ptr [rbx - 0x9d3e2f3] ; call qword ptr [rax]
0x0000020000081f4b : sub al, 0xf6 ; ret
0x00000200006056a5 : sub al, 0xf6 ; ret 0x7401
0x0000020000054ea0 : sub al, 0xf6 ; ret 0x7520
0x00000200001ba36b : sub al, 0xf8 ; inc dword ptr [rbp + 0x23] ; ret
0x0000020000505eba : sub al, 0xf8 ; ret 0xfffb
0x000002000040cd47 : sub al, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000037202d : sub al, 0xff ; inc dword ptr [rcx - 0x76] ; fucomp st(1) ; ret 0xff56
0x0000020000193f38 : sub al, 0xff ; ret
0x0000020000458da0 : sub al, 2 ; sar edi, -0x75 ; ret
0x00000200003b5ae1 : sub al, 3 ; ret 0x4489
0x000002000067d040 : sub al, 9 ; ret
0x00000200001f02f6 : sub al, bpl ; ret
0x0000020000014bda : sub al, byte ptr [rax + 1] ; add byte ptr [rax], al ; add ah, cl ; ret
0x00000200005c4b91 : sub al, byte ptr [rax + rax] ; add byte ptr [rbx], bh ; ret
0x000002000011198c : sub al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000485599 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005e7d3f : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x4466
0x00000200003ff35b : sub al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004c5eff : sub al, byte ptr [rax] ; mov al, dl ; ret
0x0000020000600d50 : sub al, byte ptr [rbx - 0x74bbffdf] ; ret 0x8b48
0x000002000014786c : sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x000002000013c53e : sub al, byte ptr [rcx + rcx*4 + 0x69] ; ret
0x0000020000144894 : sub al, byte ptr [rcx - 0x3a] ; add ch, byte ptr [rsi] ; inc r10 ; jmp 0x200001448b8
0x00000200000a3480 : sub al, byte ptr [rcx - 0x75] ; rol bl, 0x41 ; mov eax, ecx ; ret
0x0000020000144576 : sub al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000234e65 : sub al, byte ptr [rcx] ; add byte ptr [rax], al ; call 0x200001510a6
0x00000200007077ac : sub al, byte ptr [rcx] ; add byte ptr [rbx], ch ; ret 0x8b48
0x000002000005a8ae : sub al, byte ptr [rdi + rcx + 0x22] ; ret 0x8b48
0x000002000017f7c8 : sub al, byte ptr [rdi + rcx - 0x4a] ; ret
0x000002000000eb1a : sub al, byte ptr [rdx] ; shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x00000200006f1e47 : sub al, byte ptr [rip - 0x74b80000] ; ret 0xb948
0x00000200004a0077 : sub al, ch ; mov bl, 0x38 ; ret 0x85ff
0x0000020000728c3e : sub al, ch ; mov esp, 0x8bffa24f ; ret
0x000002000008cf83 : sub al, ch ; ret
0x0000020000584f38 : sub al, ch ; ret 0xad34
0x0000020000688cc4 : sub al, ch ; ret 0xb504
0x000002000043c078 : sub al, ch ; sar byte ptr [rdi], cl ; ret
0x000002000063b253 : sub al, ch ; stosd dword ptr [rdi], eax ; jmp rcx
0x000002000045c8af : sub al, cl ; dec dword ptr [rax - 0x7f] ; ret
0x000002000017ea9d : sub al, dl ; out dx, eax ; push rsi ; ret
0x00000200005eaf0b : sub ax, dx ; jmp 0x200005eaf27
0x00000200000c3b04 : sub bh, bh ; ret
0x0000020000162d3b : sub bh, bh ; ret 0x5589
0x00000200004b2611 : sub bh, bh ; ret 0x8e9
0x00000200001a23cd : sub bh, bh ; ret 0x9489
0x000002000036c8dd : sub bh, bh ; ret 0xff48
0x000002000010101d : sub bh, byte ptr [rax + rcx*2 + 0x4120558b] ; call rdx
0x000002000070c252 : sub bh, byte ptr [rax - 0x44] ; push qword ptr [rbx] ; shr al, cl ; ret
0x0000020000022d6c : sub bh, byte ptr [rsi - 0x50] ; or dl, byte ptr [rcx + 0x21] ; ret
0x0000020000177cde : sub bh, ch ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x0000020000442214 : sub bh, cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000036ca9d : sub bl, ah ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003b2eae : sub bl, al ; add rsp, 0x28 ; ret
0x00000200000ecae8 : sub bl, al ; lea r8, qword ptr [rsp] ; jmp 0x200000ecaba
0x000002000043601f : sub bl, al ; mov eax, edx ; jmp 0x20000436012
0x00000200000fdb42 : sub bl, al ; mov rax, qword ptr [rcx + 0x3a0] ; ret
0x0000020000713d32 : sub bl, al ; ret
0x0000020000563230 : sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003f72d3 : sub bl, byte ptr [rax] ; ret
0x00000200005aa7fa : sub bl, byte ptr [rsi - 0x3d] ; call qword ptr [rax - 0xabe3d17]
0x0000020000563231 : sub bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000f524c : sub bl, ch ; ret
0x00000200000222aa : sub bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x00000200001941ff : sub bl, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000164105 : sub byte ptr [r10], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006f7d00 : sub byte ptr [r11 + 0x234803e1], al ; ret 0xc148
0x000002000038e20f : sub byte ptr [r11], r15b ; ret
0x0000020000139622 : sub byte ptr [r13 + 0x1b], sil ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200000d8a18 : sub byte ptr [r13 + 0x43], sil ; call rdi
0x00000200001327ba : sub byte ptr [r13 - 0x75], al ; ret 0xf43
0x00000200003e662c : sub byte ptr [r13 - 0x7b], r8b ; sal byte ptr [rax + rbx*2 + 0x44], 0x3b ; ret
0x00000200004912b5 : sub byte ptr [r14 + 0x23], spl ; ret 0x4166
0x00000200006f97f9 : sub byte ptr [r8 + 0x23], cl ; ret 0x3148
0x00000200001e4a62 : sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x00000200001290df : sub byte ptr [r8 + 0x23], r9b ; ret 0x8948
0x000002000012d692 : sub byte ptr [r8 + 0x23], r9b ; ret 0xb48
0x00000200000fc8f5 : sub byte ptr [r8 + 0x23], r9b ; ret 0xba48
0x00000200006f6af0 : sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x00000200000852b8 : sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x0000020000159eeb : sub byte ptr [r8 + 0xf], cl ; ret
0x000002000066eaca : sub byte ptr [r8 + 3], cl ; ret 0x348
0x00000200001db11c : sub byte ptr [r8 + 3], cl ; ret 0x349
0x00000200001a841d : sub byte ptr [r8 - 0x2d], cl ; call 0x20048dca775
0x00000200001a849b : sub byte ptr [r8 - 0x2d], cl ; call 0x20048dca7f3
0x00000200003f9692 : sub byte ptr [r8 - 0x75], cl ; or ecx, ebp ; add al, 0xce ; ret
0x000002000059ebe9 : sub byte ptr [r8 - 0x75], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000050979 : sub byte ptr [r8 - 0x75], r9b ; ret
0x000002000018b5de : sub byte ptr [r8 - 0x75], r9b ; ret 0xc148
0x00000200001894dd : sub byte ptr [r8 - 0x7d], r9b ; enter 0x48ff, 0x2b ; ret 0x348
0x000002000013da64 : sub byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000179f56 : sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x00000200000f3d03 : sub byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200000a2676 : sub byte ptr [r9 + 0x23], r9b ; ret
0x00000200001b17b0 : sub byte ptr [r9 + 0x23], r9b ; ret 0x3148
0x00000200001f2761 : sub byte ptr [r9 + 0x23], r9b ; ret 0x8948
0x00000200004fc6b7 : sub byte ptr [r9 + 0x3b], cl ; ret
0x000002000009e0a5 : sub byte ptr [r9 - 0x77], r9b ; sub sil, sil ; ret 0xf01
0x00000200000fa9a9 : sub byte ptr [rax + 0x20000000], 0x75 ; adc edi, edi ; ret 0x8349
0x00000200001f72de : sub byte ptr [rax + 0x23], cl ; ret 0x2348
0x00000200006f97fa : sub byte ptr [rax + 0x23], cl ; ret 0x3148
0x0000020000130c9f : sub byte ptr [rax + 0x23], cl ; ret 0x3b49
0x00000200001290e0 : sub byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200001f113a : sub byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000012d693 : sub byte ptr [rax + 0x23], cl ; ret 0xb48
0x00000200000fc8f6 : sub byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200001e4a63 : sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x0000020000130c9e : sub byte ptr [rax + 0x23], r9b ; ret 0x3b49
0x00000200001f1139 : sub byte ptr [rax + 0x23], r9b ; ret 0x8d48
0x000002000050bcfd : sub byte ptr [rax + 0x2b], cl ; ret 0x8966
0x00000200006f6af1 : sub byte ptr [rax + 0x33], cl ; ret 0x2348
0x0000020000674003 : sub byte ptr [rax + 0x39], cl ; add dh, byte ptr [rbp - 0xf] ; ret
0x00000200000ec3ff : sub byte ptr [rax + 0x3b], cl ; ret
0x000002000056d42e : sub byte ptr [rax + 0x3b], cl ; ret 0x1376
0x00000200001cf01f : sub byte ptr [rax + 0x3b], cl ; ret 0x6f72
0x0000020000233924 : sub byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000852b9 : sub byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000054f87 : sub byte ptr [rax + 0x3b], cl ; sal byte ptr [rdx - 0xc], 1 ; mov rax, r8 ; ret
0x0000020000080872 : sub byte ptr [rax + 0xf], al ; mov dh, 0xd5 ; call qword ptr [rdi]
0x0000020000159eec : sub byte ptr [rax + 0xf], cl ; ret
0x00000200006c57df : sub byte ptr [rax + 3], cl ; ret 0x341
0x000002000066eacb : sub byte ptr [rax + 3], cl ; ret 0x348
0x00000200001db11d : sub byte ptr [rax + 3], cl ; ret 0x349
0x00000200002438b5 : sub byte ptr [rax + rax], ah ; sbb ah, byte ptr [rip + 0x608000b] ; ret 0x1306
0x000002000051a3c1 : sub byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001a841e : sub byte ptr [rax - 0x2d], cl ; call 0x20048dca774
0x00000200001a849c : sub byte ptr [rax - 0x2d], cl ; call 0x20048dca7f2
0x000002000068f0d9 : sub byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000676ad4 : sub byte ptr [rax - 0x5e], dl ; jmp qword ptr [rsi - 0x77]
0x00000200000f3426 : sub byte ptr [rax - 0x67ff51f], al ; or cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000200006f59b9 : sub byte ptr [rax - 0x73], cl ; add eax, 0xffa6723f ; ret
0x0000020000668390 : sub byte ptr [rax - 0x73], cl ; and al, 0x20 ; call r8
0x000002000022ab66 : sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x00000200005d16c2 : sub byte ptr [rax - 0x74befabf], cl ; ret 0x8844
0x00000200005eaceb : sub byte ptr [rax - 0x75], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x000002000019cec6 : sub byte ptr [rax - 0x75], cl ; iretd ; call 0x200001d9192
0x000002000011821b : sub byte ptr [rax - 0x75], cl ; jl 0x2000011824c ; xor byte ptr [rcx - 0x76], al ; ret 0x5f41
0x000002000059ebea : sub byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200003f9693 : sub byte ptr [rax - 0x75], cl ; or ecx, ebp ; add al, 0xce ; ret
0x00000200001c0b82 : sub byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000005097a : sub byte ptr [rax - 0x75], cl ; ret
0x00000200004279fc : sub byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000127c77 : sub byte ptr [rax - 0x75], cl ; ret 0x4b88
0x00000200004b4973 : sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200004b11a3 : sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000bcacb : sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000010208d : sub byte ptr [rax - 0x75], cl ; ret 0xb48
0x000002000018b5df : sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000049d755 : sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x00000200006077c6 : sub byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rax
0x00000200006077c5 : sub byte ptr [rax - 0x75], r9b ; salc ; mov rcx, rdi ; call rax
0x00000200006f339c : sub byte ptr [rax - 0x77], cl ; add edi, edi ; ret
0x00000200007071fb : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200003a345c
0x00000200003a6655 : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x000002000042793e : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x000002000053524c : sub byte ptr [rax - 0x77], cl ; imul r8d ; push 0x89 ; ret 0x48ff
0x000002000008e0ca : sub byte ptr [rax - 0x77], cl ; je 0x2000008e0fb ; and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000455ff3 : sub byte ptr [rax - 0x77], cl ; je 0x20000456023 ; and al, ch ; ret 0xf5a1
0x00000200001023aa : sub byte ptr [rax - 0x77], cl ; jl 0x200001023db ; and byte ptr [rax + 0x3b], cl ; ret 0x3c73
0x00000200006f339b : sub byte ptr [rax - 0x77], r9b ; add edi, edi ; ret
0x000002000046bb63 : sub byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; test byte ptr [rdi], bl ; call qword ptr [rax]
0x00000200002198d5 : sub byte ptr [rax - 0x7b], cl ; leave ; je 0x200002198e7 ; mov dword ptr [rcx], r10d ; ret
0x00000200006728a8 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x00000200006688a6 : sub byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; jne 0x2000066889f ; xor al, al ; ret
0x00000200001894de : sub byte ptr [rax - 0x7d], cl ; enter 0x48ff, 0x2b ; ret 0x348
0x000002000013da65 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000020000120f72 : sub byte ptr [rax - 0x7d], cl ; ret 0x330
0x000002000014aec5 : sub byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000014acfc : sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000053a386 : sub byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000020000482326 : sub byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000200000e274f : sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000037daf8 : sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x000002000050dc96 : sub byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000070d0a4 : sub byte ptr [rax - 0x7d], cl ; ret 0xe818
0x00000200000f5248 : sub byte ptr [rax - 0x7d], cl ; ret 0xeb28
0x0000020000125801 : sub byte ptr [rax - 0x7f], cl ; ret
0x0000020000179f57 : sub byte ptr [rax - 0x7f], cl ; ret 0x108
0x00000200000f3d04 : sub byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001f2c54 : sub byte ptr [rax], 0x1f ; add byte ptr [rax], al ; ret
0x00000200000f8e7f : sub byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x0000020000221006 : sub byte ptr [rax], al ; add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x000002000066c09a : sub byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; mov rsi, rax ; call rbx
0x00000200005d5ea8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200000c8a07 : sub byte ptr [rax], al ; add dword ptr [rdi], ecx ; test ecx, eax ; ret
0x00000200000c8b2e : sub byte ptr [rax], al ; add dword ptr [rdi], ecx ; test edi, eax ; ret 0xc
0x000002000011a0ee : sub byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000238bfa : sub byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000c8ad5 : sub byte ptr [rax], al ; and dword ptr [rdi], ecx ; test dword ptr [rsi], ecx ; ret
0x00000200000cf25a : sub byte ptr [rax], al ; call rax
0x00000200003e6542 : sub byte ptr [rax], al ; je 0x200003e6550 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200003eed36 : sub byte ptr [rax], al ; je 0x200003eed47 ; add rax, 0x10 ; ret
0x00000200001cf8c2 : sub byte ptr [rax], al ; mov eax, 4 ; ret
0x0000020000026a9c : sub byte ptr [rax], al ; test dl, dl ; je 0x20000026aaf ; mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000485f2c : sub byte ptr [rax], bh ; ret
0x0000020000139623 : sub byte ptr [rbp + 0x1b], dh ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200000d8a19 : sub byte ptr [rbp + 0x43], dh ; call rdi
0x000002000000e4e9 : sub byte ptr [rbp + 0x48], al ; salc ; loopne 0x2000000e4e6 ; ret
0x000002000007655d : sub byte ptr [rbp + 0x5b], bl ; ret
0x000002000000d73a : sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x2000000d769 ; ret 0x23e8
0x0000020000616d3a : sub byte ptr [rbp + 0x7f3d8043], cl ; call qword ptr [rax]
0x0000020000116c18 : sub byte ptr [rbp + rcx*4 + 0x14], cl ; or byte ptr [rcx - 0x75], al ; ret
0x0000020000209616 : sub byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf56d
0x0000020000585e74 : sub byte ptr [rbp - 0x2e166f01], ch ; ret 0xfff0
0x000002000061bc59 : sub byte ptr [rbp - 0x73], al ; inc dword ptr [r9 + 3] ; ret 0x4489
0x00000200004176ec : sub byte ptr [rbp - 0x74bbf5fc], cl ; ret
0x000002000046eb92 : sub byte ptr [rbp - 0x75], al ; ret
0x000002000065b2e0 : sub byte ptr [rbp - 0x75], al ; ret 0x44c7
0x00000200001327bb : sub byte ptr [rbp - 0x75], al ; ret 0xf43
0x0000020000097803 : sub byte ptr [rbp - 0x75], al ; ror dword ptr [rax - 0x75], 1 ; ret 0x8b44
0x000002000008e043 : sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000a291a : sub byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200003e662d : sub byte ptr [rbp - 0x7b], al ; sal byte ptr [rax + rbx*2 + 0x44], 0x3b ; ret
0x00000200001f470a : sub byte ptr [rbp - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x49], 0x8b ; ret 0x8348
0x00000200001beb94 : sub byte ptr [rbp - 0x7eb7ffef], cl ; ret
0x0000020000088ef3 : sub byte ptr [rbx + 0x17407fa], al ; ret
0x00000200006f7d01 : sub byte ptr [rbx + 0x234803e1], al ; ret 0xc148
0x0000020000053a96 : sub byte ptr [rbx + 0x468b2c56], cl ; and byte ptr [rbx], al ; ret 0x8d4c
0x0000020000053a95 : sub byte ptr [rbx + 0x468b2c56], r9b ; and byte ptr [rbx], al ; ret 0x8d4c
0x000002000013440b : sub byte ptr [rbx + 0x5f282444], cl ; pop rsi ; ret
0x00000200001521b3 : sub byte ptr [rbx + 0x5f], bl ; pop r12 ; add rsp, 8 ; ret
0x00000200007196b4 : sub byte ptr [rbx + 0x8894108], cl ; ret
0x0000020000600e5a : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000004 ; ret
0x0000020000600ef2 : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x0000020000112a96 : sub byte ptr [rbx + r15 - 0x40], al ; ja 0x20000112a98 ; sbb eax, eax ; ret
0x000002000021e294 : sub byte ptr [rbx + r8 + 0x79], al ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000021e295 : sub byte ptr [rbx + rax + 0x79], al ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000611eee : sub byte ptr [rbx + rcx*4 + 0x49], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x491c
0x000002000020a1d3 : sub byte ptr [rbx + rdi + 0x41], cl ; and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x0000020000112a97 : sub byte ptr [rbx + rdi - 0x40], al ; ja 0x20000112a97 ; sbb eax, eax ; ret
0x000002000012fda8 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rbp ; ret
0x00000200004a0fb4 : sub byte ptr [rbx - 0x40], al ; inc dword ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x0000020000416459 : sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x0000020000431183 : sub byte ptr [rbx - 0x7bf00006], al ; ret
0x0000020000561e03 : sub byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test al, ah ; ret
0x00000200004819b0 : sub byte ptr [rbx], al ; add byte ptr [rax], al ; call 0x2000014dc06
0x000002000049792f : sub byte ptr [rbx], al ; ret 0x518d
0x000002000038e210 : sub byte ptr [rbx], bh ; ret
0x000002000014d233 : sub byte ptr [rbx], bh ; ret 0x830f
0x000002000012e301 : sub byte ptr [rbx], dh ; leave ; call rax
0x0000020000601f13 : sub byte ptr [rbx], dh ; ret 0x8b48
0x00000200004cc797 : sub byte ptr [rbx], dh ; ror byte ptr [rbp + 0x72e8034a], cl ; ret
0x00000200004e278a : sub byte ptr [rbx], dh ; ror byte ptr [rbp + rcx*4 + 0x15], 0x8c ; jg 0x200004e274f ; jmp qword ptr [rcx]
0x00000200007162c4 : sub byte ptr [rbx], dh ; sal byte ptr [rcx + 0x1115ff1e], cl ; scasb al, byte ptr [rdi] ; ret
0x00000200000376f6 : sub byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x000002000023a6b1 : sub byte ptr [rbx], dl ; ret 0x5328
0x00000200000a2677 : sub byte ptr [rcx + 0x23], cl ; ret
0x00000200001b17b1 : sub byte ptr [rcx + 0x23], cl ; ret 0x3148
0x00000200001f2762 : sub byte ptr [rcx + 0x23], cl ; ret 0x8948
0x0000020000601fa3 : sub byte ptr [rcx + 0x33402474], cl ; ret 0x8b48
0x0000020000024c80 : sub byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx - 0x1d], cl ; xor eax, eax ; ret
0x00000200004fc6b8 : sub byte ptr [rcx + 0x3b], cl ; ret
0x0000020000633158 : sub byte ptr [rcx + 0x4120247c], cl ; call rsi
0x0000020000443190 : sub byte ptr [rcx + 0x48202454], cl ; mov edx, ebx ; call r10
0x000002000066cee6 : sub byte ptr [rcx + 0x4920244c], cl ; mov ecx, esi ; call rax
0x00000200001d6aa2 : sub byte ptr [rcx + 0x50], cl ; movaps xmmword ptr [r10 + 0x50], xmm1 ; ret
0x00000200000c52e3 : sub byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000008eab5 : sub byte ptr [rcx + 0x5e], al ; ret
0x000002000039cb4e : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200006ffa43 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e630c : sub byte ptr [rcx + 0x5f], al ; ret
0x000002000024d310 : sub byte ptr [rcx + 0xa], 0 ; xchg eax, esp ; imul ecx, dword ptr [rdx], 0 ; in al, dx ; ret 0x24
0x0000020000035476 : sub byte ptr [rcx + 0xf], al ; mov bh, 0xc ; ret 0xc1ff
0x000002000047ce27 : sub byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x000002000003a6e0 : sub byte ptr [rcx + 3], al ; and byte ptr [r8 - 0x7f], r9b ; ret
0x000002000061bc8e : sub byte ptr [rcx + 3], al ; ret 0x4489
0x00000200006e5026 : sub byte ptr [rcx + 3], cl ; ret
0x000002000056aa93 : sub byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call r10
0x0000020000567912 : sub byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call rax
0x0000020000567700 : sub byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x20 ; call r10
0x0000020000406d74 : sub byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x20 ; call 0x200004c3038
0x00000200003cf06d : sub byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x20 ; call rax
0x000002000056ab5b : sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x00000200005eee91 : sub byte ptr [rcx - 0x17dfdbbc], cl ; leave ; ret 0xffbe
0x000002000020a7c0 : sub byte ptr [rcx - 0x48], al ; jmp qword ptr [rbx]
0x000002000045dd52 : sub byte ptr [rcx - 0x75], al ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000053aec : sub byte ptr [rcx - 0x75], al ; ret
0x000002000066f6a5 : sub byte ptr [rcx - 0x75], al ; xlatb ; call rdi
0x000002000008f4f6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008f55d ; ret
0x000002000008fa4d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008fa99 ; pop rdi ; ret
0x00000200000a4d68 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000a4dd1 ; ret
0x00000200000b6c99 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000b6ce5 ; pop rdi ; ret
0x00000200000bf297 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000bf2e3 ; pop rsi ; ret
0x00000200000c4795 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000c47fe ; ret
0x00000200000cd34a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000cd3b3 ; ret
0x00000200000e26fc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e2763 ; ret
0x00000200000e4216 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e427f ; ret
0x00000200000e7946 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e7994 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000ebdeb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ebe52 ; ret
0x00000200000f8d66 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f8db2 ; pop rsp ; ret
0x0000020000100c3d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000100c89 ; pop rdi ; ret
0x0000020000102bfd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000102c49 ; pop rsi ; ret
0x000002000010ab4d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010abb4 ; ret
0x000002000010d446 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010d495 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011a2c5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011a32c ; ret
0x000002000011cf3b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011cf89 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000129ac4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000129b2b ; ret
0x000002000012f4f1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012f558 ; ret
0x00000200001338b6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000133904 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000135f7f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000135fe6 ; ret
0x000002000013ac3f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013aca6 ; ret
0x000002000013d0e9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013d150 ; ret
0x000002000014676a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001467d1 ; ret
0x00000200001c4c8a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c4cf1 ; ret
0x00000200001cf264 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cf2b2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001d522b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d5292 ; ret
0x00000200001d979a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d9803 ; ret
0x00000200001da97e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001da9e5 ; ret
0x00000200001dd509 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dd570 ; ret
0x00000200001e0790 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e07f9 ; ret
0x00000200001e1e7d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e1ee4 ; ret
0x00000200001e577c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e57e5 ; ret
0x00000200001eb152 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb1bb ; ret
0x00000200001eb7b1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb7fd ; pop rsi ; ret
0x00000200001ee6c3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ee72a ; ret
0x00000200001f4692 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f46fb ; ret
0x00000200001fa30b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fa374 ; ret
0x00000200001fb48d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fb4d9 ; pop rsi ; ret
0x00000200001ff909 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ff972 ; ret
0x0000020000202bc6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000202c12 ; pop rsi ; ret
0x0000020000202f08 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000202f6f ; ret
0x000002000020316a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200002031d1 ; ret
0x0000020000203917 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020397e ; ret
0x0000020000204947 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200002049ae ; ret
0x00000200002322d0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000023231e ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000236a33 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000236a9c ; ret
0x0000020000368ae9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000368b35 ; pop rsi ; ret
0x000002000036d779 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036d7e0 ; ret
0x000002000037a81f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037a886 ; ret
0x0000020000383bcc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000383c1b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000038603e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038608a ; pop rsi ; ret
0x00000200003887a8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038880f ; ret
0x000002000038adb6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038ae1d ; ret
0x00000200003a0fa8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a0ff4 ; pop rsi ; ret
0x00000200003a6207 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a6253 ; pop rdi ; ret
0x00000200003b0b9f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b0bee ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b0c26 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b0c8d ; ret
0x00000200003b2dc3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b2e0f ; pop rdi ; ret
0x00000200003b35d9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b3628 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e4f51 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e4f9d ; pop rdi ; ret
0x00000200003e7b4e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e7bb5 ; ret
0x00000200003e9992 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e99de ; pop rsi ; ret
0x00000200003fdf6e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fdfbc ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000404cdb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000404d42 ; ret
0x0000020000405197 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004051fe ; ret
0x000002000040a07f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040a0cb ; pop rsi ; ret
0x000002000040ab22 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040ab6e ; pop rsi ; ret
0x0000020000412b7a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000412be1 ; ret
0x000002000041586c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004158d3 ; ret
0x00000200004230a5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004230f3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004241f4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042425b ; ret
0x000002000043dbce : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043dc35 ; ret
0x0000020000450c97 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000450ce3 ; pop rsi ; ret
0x000002000045a611 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045a660 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000045addf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045ae48 ; ret
0x00000200004604d7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000460523 ; pop rdi ; ret
0x0000020000460626 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000460672 ; pop rsi ; ret
0x0000020000466a9e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466b07 ; ret
0x0000020000466d95 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466dfc ; ret
0x000002000046c08e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046c0da ; pop rsi ; ret
0x000002000046d6b6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d702 ; pop rsi ; ret
0x000002000046f134 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046f180 ; pop rsi ; ret
0x00000200004700fd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000470164 ; ret
0x0000020000471ed5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000471f3e ; ret
0x000002000047d42b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047d479 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000047fd8b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047fdf4 ; ret
0x00000200004823d9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000482442 ; ret
0x000002000048a309 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048a358 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000048d501 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048d568 ; ret
0x000002000049aaa3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049ab0a ; ret
0x000002000049ad11 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049ad78 ; ret
0x000002000049e310 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049e35c ; pop rsi ; ret
0x00000200004a41f1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a423d ; pop rsi ; ret
0x00000200004a760b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a7657 ; pop rdi ; ret
0x00000200004ac57a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ac5e3 ; ret
0x00000200004aec2f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aec7e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b2c93 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b2ce1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b4203 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b424f ; pop rdi ; ret
0x00000200004bdf93 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bdffc ; ret
0x00000200004c1fad : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c2016 ; ret
0x00000200004c3653 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c36ba ; ret
0x00000200004c3a65 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c3ace ; ret
0x00000200004c7348 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c73af ; ret
0x00000200004c749b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c7502 ; ret
0x00000200004c9c58 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c9cbf ; ret
0x00000200004cda80 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cdae7 ; ret
0x00000200004cf17a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cf1c8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004cfb16 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cfb7d ; ret
0x00000200004d0214 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d027b ; ret
0x00000200004d1216 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d127f ; ret
0x00000200004d1729 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d1775 ; pop rsi ; ret
0x00000200004d1f30 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d1f97 ; ret
0x00000200004d6296 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d62e2 ; pop rsi ; ret
0x00000200004d63a6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d640f ; ret
0x00000200004d69a1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d6a08 ; ret
0x00000200004df81e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004df86c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004e2e60 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e2eac ; pop rsi ; ret
0x00000200004e3a82 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e3ae9 ; ret
0x00000200004e4fc9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e5017 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004e6b5f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e6bc6 ; ret
0x00000200004ee011 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ee078 ; ret
0x00000200004ef22f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ef27d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004effb2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f001b ; ret
0x00000200004f22d8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f233f ; ret
0x00000200004f2445 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f2493 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f36c0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f370e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f8784 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f87eb ; ret
0x0000020000500397 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005003fe ; ret
0x0000020000508343 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005083ac ; ret
0x000002000050d22f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050d298 ; ret
0x000002000050dad3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050db3a ; ret
0x000002000050db9d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050dc04 ; ret
0x000002000050dd8a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050ddf1 ; ret
0x0000020000510f71 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000510fd8 ; ret
0x000002000051191f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511986 ; ret
0x0000020000511a51 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511ab8 ; ret
0x0000020000514bfd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000514c64 ; ret
0x000002000051761b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000517667 ; pop rdi ; ret
0x000002000051a4ff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a566 ; ret
0x000002000051bc0a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051bc71 ; ret
0x000002000051e45b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051e4aa ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000051ed26 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051ed8d ; ret
0x000002000051fbc1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051fc28 ; ret
0x000002000051ff4b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051ffb2 ; ret
0x00000200005acbdc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005acc43 ; ret
0x00000200005bf2b0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bf319 ; ret
0x00000200005c04a3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c050a ; ret
0x00000200005c1276 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c12c4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c6328 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c6391 ; ret
0x00000200005c9ab2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c9afe ; pop rsi ; ret
0x00000200005ce237 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ce29e ; ret
0x00000200005d0dcf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d0e38 ; ret
0x00000200005da1ce : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005da237 ; ret
0x00000200005da29c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005da303 ; ret
0x00000200005da856 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005da8a2 ; pop rdi ; ret
0x00000200005dcd84 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dcdeb ; ret
0x00000200005e86fe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e8765 ; ret
0x00000200005efb66 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005efbcf ; ret
0x00000200005f72f8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f7361 ; ret
0x00000200005fc6da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fc726 ; pop rsi ; ret
0x0000020000606dc7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000606e13 ; pop rsi ; ret
0x0000020000607ecf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000607f36 ; ret
0x00000200006091a0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000609207 ; ret
0x000002000060c4fb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060c564 ; ret
0x000002000060d16d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060d1d6 ; ret
0x000002000061018e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006101f5 ; ret
0x00000200006183e7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061844e ; ret
0x0000020000619e3a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000619e86 ; pop rsi ; ret
0x0000020000624376 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006243dd ; ret
0x000002000062aeb2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062af1b ; ret
0x000002000062bafa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062bb61 ; ret
0x000002000062f26d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062f2d4 ; ret
0x0000020000631adf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000631b2d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000635d3c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000635da3 ; ret
0x0000020000635fd3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000636021 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000638872 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006388db ; ret
0x0000020000638a92 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000638afb ; ret
0x0000020000639cb8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000639d07 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063a047 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063a096 ; pop rdi ; pop r12 ; pop rdi ; ret
0x000002000063a349 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063a398 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064115f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006411c6 ; ret
0x0000020000645841 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064588f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006461ba : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000646221 ; ret
0x000002000064995f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006499ab ; pop rsi ; ret
0x000002000064af5e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064afaa ; pop rsi ; ret
0x000002000064b05d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b0a9 ; pop rsi ; ret
0x000002000064b145 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b191 ; pop rsi ; ret
0x000002000064b20e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b275 ; ret
0x000002000064b2d2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b339 ; ret
0x000002000064c684 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c6d2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000652774 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006527c0 ; pop rdi ; ret
0x000002000065dc38 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065dc9f ; ret
0x0000020000664b8a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000664bf1 ; ret
0x0000020000667bc8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000667c31 ; ret
0x0000020000671d9b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000671e04 ; ret
0x0000020000671e69 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000671ed2 ; ret
0x0000020000673947 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006739b0 ; ret
0x0000020000673a17 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000673a80 ; ret
0x0000020000675fbb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000676024 ; ret
0x000002000067c576 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067c5df ; ret
0x000002000067c8da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067c943 ; ret
0x000002000067e553 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067e5a1 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006eb038 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006eb084 ; pop rsp ; ret
0x00000200006fd6b5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006fd71c ; ret
0x00000200006fe1ca : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006fe216 ; pop rsi ; ret
0x0000020000703e73 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000703eda ; ret
0x0000020000704d13 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000704d7a ; ret
0x000002000070b7e4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070b84b ; ret
0x000002000070db63 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070dbca ; ret
0x0000020000710922 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000710989 ; ret
0x000002000071165c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007116c3 ; ret
0x000002000071272d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000712794 ; ret
0x0000020000712a8a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000712af1 ; ret
0x0000020000716ca2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000716d09 ; ret
0x000002000072b3a0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072b407 ; ret
0x000002000072b9b1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072ba18 ; ret
0x000002000072cfdc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072d043 ; ret
0x0000020000388299 : sub byte ptr [rcx - 0x75], cl ; ret 0xaaeb
0x0000020000053aeb : sub byte ptr [rcx - 0x75], r8b ; ret
0x00000200001c0a19 : sub byte ptr [rcx - 0x77], al ; add al, 0x8a ; inc dword ptr [r10 + 0xc] ; ret
0x00000200001c0a50 : sub byte ptr [rcx - 0x77], al ; add al, 0x8a ; inc dword ptr [r10 + 8] ; ret
0x00000200001b9bd0 : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x3b41
0x00000200001b9b58 : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x533b
0x000002000009e0a6 : sub byte ptr [rcx - 0x77], cl ; sub sil, sil ; ret 0xf01
0x00000200000d2715 : sub byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x000002000064f131 : sub byte ptr [rcx - 0x7d], al ; call qword ptr [rsi]
0x00000200001f1a33 : sub byte ptr [rcx - 0x7eb7cbb9], cl ; ret
0x00000200001f1a32 : sub byte ptr [rcx - 0x7eb7cbb9], r9b ; ret
0x0000020000159559 : sub byte ptr [rcx - 1], al ; ret 0x8944
0x0000020000390c5e : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x0000020000391fb5 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001db604 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000719664 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200000e1c72 : sub byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000013440f : sub byte ptr [rdi + 0x5e], bl ; ret
0x000002000013d356 : sub byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000e3d60 : sub byte ptr [rdi + rcx], dl ; jmp 0x200000e3d2e
0x00000200005cc05c : sub byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x00000200001f2c55 : sub byte ptr [rdi], bl ; add byte ptr [rax], al ; ret
0x00000200003f5d17 : sub byte ptr [rdi], cl ; test dword ptr [rsi], edi ; add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f5c93 : sub byte ptr [rdi], cl ; test esi, ebp ; add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007b114 : sub byte ptr [rdi], cl ; xchg dword ptr [rax], esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000048602c : sub byte ptr [rdi], dh ; ret
0x00000200005cc05b : sub byte ptr [rdi], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x000002000007b113 : sub byte ptr [rdi], r9b ; xchg dword ptr [rax], esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000015defe : sub byte ptr [rdx + 0x10], cl ; movaps xmmword ptr [rcx + 0x10], xmm1 ; ret
0x0000020000545c00 : sub byte ptr [rdx + 0xfc084ff], bh ; test bl, al ; ret 0xffe7
0x0000020000545bf0 : sub byte ptr [rdx + 0xfc084ff], bh ; test ebp, eax ; ret 0xffe7
0x000002000038b7bd : sub byte ptr [rdx - 0x3b7cb73d], cl ; pop rbx ; ret
0x0000020000497913 : sub byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000023815a : sub byte ptr [rdx], bh ; ret
0x0000020000164106 : sub byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x000002000004d805 : sub byte ptr [rdx], dl ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x000002000000e5ee : sub byte ptr [rip - 0x659e84ce], ah ; push rbx ; ret
0x00000200006cb10a : sub byte ptr [rip - 0x74bf0000], al ; ret
0x00000200004912b6 : sub byte ptr [rsi + 0x23], ah ; ret 0x4166
0x000002000070ea0b : sub byte ptr [rsi + 0x2b], ah ; ret
0x00000200003b976a : sub byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x00000200005f4e24 : sub byte ptr [rsi - 0x33], al ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200000f8e80 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000019b35e : sub byte ptr [rsp + rsi*8 - 0x48f0be01], bl ; ret 0x8b4c
0x000002000050efc6 : sub ch, byte ptr [rcx + rbx*8 - 1] ; call 0x20000139713
0x000002000015932e : sub ch, byte ptr [rdx] ; and al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004dd0ee : sub ch, byte ptr [rdx] ; ret 0x66ff
0x00000200005f6b2e : sub ch, cl ; push rsi ; ret 0x7402
0x00000200007231f2 : sub ch, dl ; ret 0x4cff
0x0000020000538a44 : sub cl, 0x14 ; ret
0x0000020000538883 : sub cl, 0xa3 ; ret
0x0000020000561dfa : sub cl, 0xd2 ; ret
0x00000200004ebcfb : sub cl, 0xff ; add rsp, 0x68 ; ret
0x0000020000167a4a : sub cl, bpl ; ret 0xec8c
0x0000020000073f12 : sub cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x0000020000082ed0 : sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001a8573 : sub cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200006120cd : sub cl, byte ptr [rax - 0x7d] ; ret 0x4d02
0x0000020000174c53 : sub cl, byte ptr [rax - 9] ; jmp 0x1ffc3c651ed
0x00000200000a5dbc : sub cl, byte ptr [rax - 9] ; jmp 0x20048cce916
0x000002000022b133 : sub cl, byte ptr [rax] ; add byte ptr [rax], al ; jne 0x2000022b144 ; xor eax, eax ; ret
0x00000200004b3b82 : sub cl, byte ptr [rax] ; mov eax, r9d ; ret
0x000002000016e8f3 : sub cl, byte ptr [rcx + 0x3b] ; ret
0x000002000005518f : sub cl, byte ptr [rcx - 0x75] ; ret 0x8b4d
0x000002000059be8a : sub cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x000002000049650a : sub cl, byte ptr [rdi] ; add byte ptr [rdx - 0x759fdba4], cl ; ret
0x00000200001b7ff2 : sub cl, byte ptr [rdx] ; clc ; push rsi ; ret
0x000002000051e132 : sub cl, ch ; adc byte ptr [rax], dl ; ret 0xb8ff
0x000002000059e478 : sub cl, ch ; leave ; ret
0x00000200004f4eda : sub cl, ch ; loopne 0x200004f4e98 ; ret
0x000002000055c789 : sub cl, ch ; push rax ; ret
0x000002000054d0cf : sub cl, ch ; push rdi ; imul al ; dec dword ptr [rbp - 0x75] ; ret
0x0000020000188e61 : sub cl, ch ; ret
0x000002000051a4e4 : sub cl, ch ; ret 0x4cff
0x000002000044437f : sub cl, ch ; ret 0xccff
0x0000020000167a4b : sub cl, ch ; ret 0xec8c
0x0000020000057206 : sub cl, ch ; ret 0xfff1
0x000002000066e610 : sub cl, dh ; jmp qword ptr [rcx]
0x000002000061ccd8 : sub dh, al ; add byte ptr [rax], al ; ret
0x000002000061ccba : sub dh, al ; add byte ptr [rcx], al ; ret
0x00000200004b1cda : sub dh, byte ptr [rdx - 0x45] ; dec dword ptr [rax - 0x75] ; and byte ptr [r11], r15b ; ret
0x000002000004f90a : sub dh, dh ; ret
0x000002000036db28 : sub dh, dh ; ret 0x7401
0x0000020000681827 : sub dh, dh ; ret 0x7408
0x00000200004096fe : sub dh, dh ; ret 0x7501
0x000002000021b1a2 : sub dh, dh ; ret 0x7502
0x0000020000090ab1 : sub dh, dh ; ret 0x7503
0x000002000009e0aa : sub dh, dh ; ret 0xf01
0x00000200004102af : sub dh, dh ; ret 0xf02
0x0000020000120bcd : sub dh, dh ; ret 0xf03
0x000002000041745a : sub dh, dh ; ret 0xf20
0x000002000040cbfc : sub dh, dh ; rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x0000020000063979 : sub dl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x00000200004408b2 : sub dl, byte ptr [rsi - 0x19] ; dec dword ptr [rbx + 0x35cfe8cf] ; ret
0x00000200001eee89 : sub dword ptr [rax + 0x2b], ecx ; ret 0x8b4c
0x00000200001aac4f : sub dword ptr [rax + 0x3b], ecx ; ret 0xf49
0x0000020000512fbd : sub dword ptr [rax + 0x66000000], 0x23 ; ret 0xb66
0x000002000018ec8a : sub dword ptr [rax + rax], ebx ; call rax
0x00000200004c6189 : sub dword ptr [rax + rcx*8], -1 ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001894fb : sub dword ptr [rax - 0x3f], ecx ; call 0x1ffc33bde16
0x00000200000b56c6 : sub dword ptr [rax - 0x73], ecx ; add eax, 0xabb12 ; ret
0x00000200000332a7 : sub dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000543f1a : sub dword ptr [rax - 0x75], ecx ; ret
0x000002000072d309 : sub dword ptr [rax - 0x75], ecx ; ret 0x8348
0x00000200001d15b3 : sub dword ptr [rax - 0x75], ecx ; ret 0xffb9
0x0000020000111973 : sub dword ptr [rax - 0x77], ecx ; pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x000002000056970d : sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200006f7daf : sub dword ptr [rax - 0x7d], ecx ; ret 0x4920
0x00000200001417e9 : sub dword ptr [rax - 1], ecx ; ret 0xe484
0x00000200001d5c2a : sub dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 - 0x3d], cl ; call rdi
0x0000020000154ce7 : sub dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000209073 : sub dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000b49de : sub dword ptr [rax], eax ; call rax
0x000002000009625d : sub dword ptr [rax], eax ; jb 0x20000096266 ; ret
0x0000020000122b66 : sub dword ptr [rax], eax ; jb 0x20000122b78 ; mov al, 1 ; ret
0x00000200001622c7 : sub dword ptr [rax], eax ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001c1c24 : sub dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000022b2e7 : sub dword ptr [rax], ecx ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200000e4668 : sub dword ptr [rbp + 0xf00001c], -0x4a ; ret
0x000002000036df3f : sub dword ptr [rbp - 0x26], 0xc48348ff ; ret
0x00000200001dbb8b : sub dword ptr [rbp - 0x49f0fffb], ecx ; ret
0x000002000001fd18 : sub dword ptr [rbp - 0x6e], esi ; ret
0x0000020000682ae9 : sub dword ptr [rbp - 0x74da862e], eax ; ret 0xba0f
0x00000200006795fd : sub dword ptr [rbx + 0x158b48ff], edi ; pop rcx ; ret
0x00000200001dcabf : sub dword ptr [rbx + 0xf000000], -0x49 ; ret
0x00000200000eadea : sub dword ptr [rbx + 2], 0 ; add bh, bh ; ret 0x5489
0x0000020000666739 : sub dword ptr [rbx], 1 ; add dh, dh ; ret
0x000002000000dfbb : sub dword ptr [rbx], ecx ; push 0xb8 ; ret 0x3ecb
0x00000200005a2c22 : sub dword ptr [rbx], edi ; hlt ; push rsi ; ret
0x0000020000037aa5 : sub dword ptr [rbx], edx ; add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200005c98a1 : sub dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x000002000015df02 : sub dword ptr [rcx + 0x10], ecx ; ret
0x0000020000583eaf : sub dword ptr [rcx + 3], edi ; int 0x29
0x0000020000089e2f : sub dword ptr [rcx + rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xd775
0x00000200000ffa80 : sub dword ptr [rcx - 0x10], ecx ; dec rax ; jne 0x200000ffa47 ; ret
0x00000200004a17df : sub dword ptr [rcx - 0x3fffff66], edi ; call 0x200000cee05
0x00000200002162d7 : sub dword ptr [rcx - 0x75], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x000002000056d41d : sub dword ptr [rcx - 0x75], eax ; sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x0000020000726fae : sub dword ptr [rcx - 0x75], ecx ; ret 0x2b48
0x00000200000a2621 : sub dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x00000200002255fa : sub dword ptr [rcx - 0x75], ecx ; ret 0x8b44
0x0000020000644d9c : sub dword ptr [rcx - 0x80], eax ; loopne 0x20000644daa ; mov al, r8b ; ret
0x00000200006502f1 : sub dword ptr [rcx - 1], eax ; ret 0x8348
0x0000020000144f22 : sub dword ptr [rcx - 1], ecx ; ret
0x00000200001f6527 : sub dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000063e40 : sub dword ptr [rcx], ecx ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200000d10c7 : sub dword ptr [rcx], ecx ; ret
0x00000200001cd994 : sub dword ptr [rcx], edx ; add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x000002000012e903 : sub dword ptr [rdi + rcx + 0x20], eax ; ret
0x0000020000027536 : sub dword ptr [rdi + rcx - 0x49], eax ; adc bpl, cl ; ret
0x00000200005f6ee3 : sub dword ptr [rdi], ebx ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200006276e3 : sub dword ptr [rdi], edx ; mov dl, 0xff ; add rsp, 0x68 ; ret
0x00000200000b3963 : sub dword ptr [rdx + 0x1f], ebx ; add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x00000200000b1978 : sub dword ptr [rdx + 0x48000000], 0x2b ; ret 0x3b49
0x00000200001d6aa7 : sub dword ptr [rdx + 0x50], ecx ; ret
0x0000020000643d5f : sub dword ptr [rdx - 0x15], esi ; or eax, 0xffffffff ; ret
0x0000020000410233 : sub dword ptr [rdx], ecx ; ret 0xccff
0x00000200000d832a : sub dword ptr [rip + 0x1ddd38], edx ; ret
0x00000200000d8322 : sub dword ptr [rip + 0x1ddd50], edx ; ret
0x00000200000b9bd5 : sub dword ptr [rip + 0x20f355], eax ; ret
0x0000020000517c83 : sub dword ptr [rip + 0x6348ffb5], edx ; ret
0x00000200000ca202 : sub dword ptr [rip + 0x87504a8], ecx ; ret
0x00000200000bfbfe : sub dword ptr [rip - 0x33333400], ecx ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x0000020000544eeb : sub dword ptr [rsi - 0x74b30019], esp ; ret
0x000002000001d436 : sub dword ptr [rsi], eax ; fcomp dword ptr [r10] ; ret 0xa54d
0x0000020000600b72 : sub dword ptr [rsp + rcx + 0x33], esi ; shr al, cl ; sbb al, 0x22 ; ret
0x000002000015e0d3 : sub eax, 0x10000 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000038ff26 : sub eax, 0x20 ; ret
0x0000020000011a9f : sub eax, 0x337635d ; ret 0xcdf4
0x000002000068c4cf : sub eax, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004feea7 : sub eax, 0x48000000 ; add esp, 0x40 ; pop rbx ; ret
0x00000200004f6a8b : sub eax, 0x4800000f ; add esp, 0x38 ; ret
0x00000200001db96b : sub eax, 0x48000022 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004b1afb : sub eax, 0x48ffb81e ; add esp, 0x58 ; ret
0x00000200001d2de3 : sub eax, 0x48ffeaf4 ; add esp, 0x38 ; ret
0x000002000022dcdf : sub eax, 0x48fff1b1 ; add esp, 0x68 ; ret
0x0000020000674e83 : sub eax, 0x48ffffff ; add esp, 0x30 ; pop rbx ; ret
0x0000020000081494 : sub eax, 0x5a8d4900 ; dec dword ptr [rax - 0x75] ; ret
0x000002000011a41e : sub eax, 0x6052ff41 ; add rsp, 0x38 ; ret
0x000002000042ff77 : sub eax, 0x85000000 ; sal byte ptr [rbp + 0x19], 0x8b ; ret
0x0000020000532d16 : sub eax, 0x8548ffaf ; ret
0x00000200004cb376 : sub eax, 0x8b000cec ; ret
0x000002000050a152 : sub eax, 0x8b44ffda ; ret 0x8545
0x000002000066be1e : sub eax, 0x8b4c0000 ; ret
0x00000200001ba893 : sub eax, 0x8b4cfff8 ; ret
0x0000020000140312 : sub eax, 0x8b4dd8f7 ; ret 0xd233
0x00000200003e399f : sub eax, 0x8bffc856 ; ret
0x0000020000645fe7 : sub eax, 0x8bffeaa3 ; ret
0x00000200006f3031 : sub eax, 0x8bffffff ; ret
0x0000020000715782 : sub eax, 0xb6158d48 ; ret
0x00000200000b3a85 : sub eax, 0xb8000dae ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001711cc : sub eax, 0xc148ffee ; call 0x1ffc39b52ed
0x0000020000442c27 : sub eax, 0xe8002675 ; loopne 0x20000442cae ; ret 0x65ff
0x000002000044807f : sub eax, 0xe8cf8b48 ; sbb byte ptr [rax], dl ; ret 0xf7ff
0x0000020000592088 : sub eax, 0xe990ffd0 ; ret
0x0000020000618fe1 : sub eax, 0xf6000001 ; ret 0xf20
0x000002000009e643 : sub eax, 0xf6000004 ; ret
0x00000200000cc440 : sub eax, 0xf6fffffa ; ret
0x00000200003d1c1a : sub eax, 0xf6fffffe ; ret
0x00000200001481ed : sub eax, 7 ; movzx eax, r8w ; ret
0x000002000067ab61 : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000020ef3 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret
0x00000200004b7809 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000095cd8 : sub eax, dword ptr [rax] ; add dword ptr [rbp + 0x15], esi ; lock dec dword ptr [rcx] ; ret
0x000002000009d479 : sub eax, dword ptr [rax] ; je 0x2000009d488 ; mov eax, dword ptr [rax + 8] ; ret
0x000002000009d48d : sub eax, dword ptr [rax] ; sete al ; ret
0x00000200001181a8 : sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x00000200004fd579 : sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x00000200005202e7 : sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x0000020000520417 : sub eax, dword ptr [rcx + 8] ; ret
0x0000020000508480 : sub eax, dword ptr [rcx - 1] ; ret 0x8349
0x00000200000925fc : sub eax, dword ptr [rcx - 2] ; ret 0x8b41
0x000002000066e949 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; call 0x2000066ac36
0x000002000066673a : sub eax, dword ptr [rcx] ; add dh, dh ; ret
0x000002000000d90c : sub eax, dword ptr [rdi - 0x67] ; ret
0x00000200003dae29 : sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x00000200003dae2a : sub eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000002000000d0db : sub eax, dword ptr [rdx + rbp*2] ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000010ca6c : sub eax, dword ptr [rip + 0x19b4ce] ; mov qword ptr [rdx], rax ; ret
0x00000200006104fd : sub eax, eax ; mov qword ptr [rcx + 0x48], rax ; ret
0x00000200003da898 : sub eax, eax ; ret
0x00000200000b8180 : sub eax, eax ; test r10, r10 ; jne 0x200000b8193 ; mov eax, ecx ; ret
0x000002000045689e : sub eax, ecx ; dec dword ptr [rbx + 0x78c085d8] ; ret
0x00000200000e215a : sub eax, ecx ; mov eax, r8d ; add rsp, 0x38 ; ret
0x00000200000e7125 : sub eax, ecx ; mov eax, r8d ; ret
0x00000200001583e2 : sub eax, ecx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x000002000042d745 : sub eax, ecx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x000002000049d60e : sub eax, ecx ; movzx eax, r8w ; ret
0x00000200000267c4 : sub eax, ecx ; ret
0x0000020000142024 : sub eax, ecx ; sar rax, 1 ; dec rax ; ret
0x000002000014200b : sub eax, ecx ; sar rax, 1 ; ret
0x00000200000dbd4d : sub eax, edx ; jmp 0x200000dbd34
0x000002000045c6d1 : sub eax, edx ; jmp 0x2000045c6c6
0x00000200005eaf0c : sub eax, edx ; jmp 0x200005eaf26
0x000002000064b521 : sub eax, edx ; jmp 0x2000064b52b
0x00000200001182df : sub eax, edx ; ret
0x00000200003db475 : sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x0000020000233477 : sub eax, esi ; call 0x2000022f734
0x00000200005371c8 : sub eax, esi ; shl r8, 2 ; call 0x2000015d889
0x00000200003da897 : sub eax, r8d ; ret
0x00000200004b2ffa : sub ebp, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000222a9 : sub ebp, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000543ea1 : sub ebp, dword ptr [rbp - 0x19] ; dec dword ptr [rax - 0x75] ; ret
0x00000200005974ce : sub ebp, ecx ; push rsi ; ret
0x00000200001d1272 : sub ebp, edi ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret
0x0000020000482d49 : sub ebx, 0xc18b48e7 ; ret
0x0000020000230051 : sub ebx, dword ptr [rip - 0x74b2ffee] ; adc al, 0xc2 ; jmp 0x20000230065
0x000002000015c828 : sub ebx, eax ; jmp r11
0x0000020000208ab1 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ef570 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000377226 : sub ebx, edi ; lea r8, qword ptr [rbx + 0x1000] ; call rax
0x00000200004f5d63 : sub ebx, edx ; mov rcx, rbx ; call 0x2000011d88c
0x00000200004cf98b : sub ecx, -1 ; add rsp, 0x28 ; ret
0x000002000010a3cc : sub ecx, 0x20 ; jne 0x2000010a3fd ; lea eax, dword ptr [rcx + 6] ; ret
0x000002000019863b : sub ecx, 0x2b ; ret
0x0000020000198615 : sub ecx, 0x53 ; ret
0x000002000010a3c3 : sub ecx, 0xf ; jne 0x2000010a3dd ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000209fb0 : sub ecx, 2 ; dec r8d ; jns 0x20000209fb1 ; mov eax, edx ; ret
0x0000020000073fcf : sub ecx, dword ptr [rax + 0x3b] ; ret 0x860f
0x0000020000174432 : sub ecx, dword ptr [rax + 3] ; ret 0xbe49
0x00000200004dd0ac : sub ecx, dword ptr [rax + rax] ; mov al, 1 ; ret
0x00000200001bd971 : sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000468621 : sub ecx, dword ptr [rax - 0x75] ; push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x000002000066e9b9 : sub ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax + 0x3b] ; ret
0x000002000041f23e : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000002000022b0b7 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; jne 0x2000022b0c8 ; xor eax, eax ; ret
0x000002000022b0d3 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; jne 0x2000022b0e4 ; xor eax, eax ; ret
0x00000200001ac70c : sub ecx, dword ptr [rbp + 0x3b] ; ret
0x00000200004f5143 : sub ecx, dword ptr [rbx] ; add byte ptr [rcx - 1], al ; ret 0x3b44
0x0000020000577ad0 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000119bc9 : sub ecx, dword ptr [rdi + 0x19] ; add byte ptr [rbx], al ; ret
0x00000200001003dc : sub ecx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000022b0b6 : sub ecx, dword ptr gs:[rax] ; add byte ptr [rax], al ; jne 0x2000022b0c9 ; xor eax, eax ; ret
0x000002000036ca99 : sub ecx, eax ; call 0x2000012f5a5
0x0000020000159dd1 : sub ecx, eax ; jmp r9
0x00000200000b867c : sub ecx, eax ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000140b97 : sub ecx, eax ; mov eax, r9d ; ret
0x0000020000666f70 : sub ecx, eax ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000729f9f : sub ecx, eax ; mov rax, r9 ; ret
0x00000200004ac5cd : sub ecx, eax ; mov rax, rcx ; ret
0x0000020000188094 : sub ecx, eax ; xor r8d, r8d ; call 0x200001f439f
0x00000200004be65a : sub ecx, ebp ; dec dword ptr [rax + 0x3b] ; ret 0x6777
0x0000020000381e1a : sub ecx, ebx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200003da891 : sub ecx, ecx ; imul eax, r9d ; sub eax, r8d ; ret
0x000002000014066d : sub ecx, ecx ; mov eax, r9d ; ret
0x000002000036b4f6 : sub ecx, edx ; add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x00000200000824a9 : sub ecx, edx ; lock cmpxchg qword ptr [r8], rcx ; jne 0x2000008249e ; ret
0x000002000066e1bc : sub ecx, edx ; mov dword ptr [r8], ecx ; ret
0x000002000066e190 : sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x00000200004ce36c : sub ecx, edx ; mov eax, ecx ; ret
0x000002000011ea84 : sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x0000020000505541 : sub ecx, edx ; ret
0x0000020000577db2 : sub ecx, edx ; xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x000002000008fcd6 : sub ecx, edx ; xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x00000200000c28db : sub ecx, esi ; je 0x200000c2866 ; jmp 0x200000c28a9
0x000002000066e1bb : sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x0000020000577db1 : sub ecx, r10d ; xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x0000020000381e19 : sub ecx, r11d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000575f47 : sub edi, ebp ; in eax, dx ; push rsi ; ret
0x00000200001583ca : sub edi, ecx ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x000002000000eef3 : sub edi, edi ; mov ecx, 0xcac82fee ; jne 0x2000000ee91 ; ret 0x5e78
0x00000200001e2bca : sub edi, edi ; ret
0x000002000049410b : sub edi, edi ; ret 0x8349
0x00000200004927af : sub edi, edi ; ret 0xfa83
0x0000020000158558 : sub edx, 0x40 ; ja 0x20000158555 ; ret
0x0000020000036eb6 : sub edx, dword ptr [rbx] ; add dh, dh ; ret
0x00000200000632dc : sub edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add dword ptr [r9 + 0x23], ecx ; ret 0x3b49
0x0000020000010fe5 : sub edx, dword ptr [rdi + 0x2a] ; mov r11d, r10d ; ret
0x00000200006f58a1 : sub edx, eax ; jne 0x200006f5894 ; ret
0x00000200002328a7 : sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x000002000040404b : sub edx, eax ; mov eax, edx ; jmp 0x2000040400a
0x00000200000c8867 : sub edx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000200002087fd : sub edx, eax ; mov rax, rdx ; jmp 0x2000020880c
0x0000020000722798 : sub edx, ebp ; ret 0x44ff
0x00000200000f9b2f : sub edx, ebx ; mov dword ptr [rsp + 0x20], ebp ; call 0x20000115d84
0x00000200003db50e : sub edx, ecx ; mov eax, r10d ; ret
0x00000200001bbaa0 : sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x00000200000b491a : sub edx, ecx ; mov qword ptr [r8], rdx ; test eax, eax ; js 0x200000b4939 ; ret
0x00000200000b6346 : sub edx, ecx ; mov qword ptr [r8], rdx ; test eax, eax ; js 0x200000b636c ; ret
0x0000020000441c1c : sub edx, esi ; call 0x2000002aca9
0x00000200000a6cca : sub edx, esi ; call r12
0x0000020000721734 : sub edx, esi ; jne 0x2000072172b ; jmp 0x200007217ae
0x00000200004becf9 : sub edx, esi ; lea rcx, qword ptr [r14 + rdi] ; call 0x200000e1ac9
0x000002000040404a : sub edx, r8d ; mov eax, edx ; jmp 0x2000040400b
0x00000200006c7030 : sub esi, dword ptr [rbx] ; leave ; call r9
0x00000200005829cd : sub esi, eax ; inc dword ptr [rbx] ; ret
0x000002000018a720 : sub esi, eax ; jmp 0x200000a69db
0x00000200000117b1 : sub esi, eax ; pop rsi ; jmp 0x200000117cc
0x000002000000dd49 : sub esi, eax ; ret
0x00000200001942e5 : sub esi, ebx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001b8208 : sub esi, esi ; ret
0x0000020000514c92 : sub esp, 0x20 ; call 0x2000013b55e
0x00000200004a0075 : sub esp, 0x28 ; call 0x200000c3936
0x000002000051c161 : sub esp, 0x28 ; call 0x2000013e26a
0x00000200006cef89 : sub esp, 0x28 ; call rax
0x00000200004ff35a : sub esp, 0x30 ; mov rsi, rcx ; call 0x2000012e1c1
0x000002000000e1ec : sub esp, dword ptr [rdi + rax] ; sahf ; ret
0x0000020000437c5e : sub esp, dword ptr [rdi] ; add dh, dh ; ret
0x000002000002b341 : sub esp, dword ptr [rsi + 0x41] ; add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200004216a5 : sub esp, dword ptr [rsi] ; ret 0xe9ff
0x00000200000d8329 : sub qword ptr [rip + 0x1ddd38], rdx ; ret
0x00000200000d8321 : sub qword ptr [rip + 0x1ddd50], rdx ; ret
0x00000200000b9bd4 : sub qword ptr [rip + 0x20f355], rax ; ret
0x00000200003db50d : sub r10d, r9d ; mov eax, r10d ; ret
0x000002000015c827 : sub r11, rax ; jmp r11
0x000002000018a71f : sub r14, rax ; jmp 0x200000a69dc
0x0000020000022d6b : sub r15b, byte ptr [rsi - 0x50] ; or dl, byte ptr [rcx + 0x21] ; ret
0x00000200004f7d1a : sub r15b, r15b ; ret
0x00000200000e7124 : sub r8, rcx ; mov eax, r8d ; ret
0x00000200001583e1 : sub r8, rcx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x000002000045c6d0 : sub r8, rdx ; jmp 0x2000045c6c7
0x0000020000115cbb : sub r8b, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x0000020000505e23 : sub r8b, 0x8e ; ret
0x0000020000155fb9 : sub r8b, 0xd0 ; ret 0xffee
0x0000020000505eb9 : sub r8b, 0xf8 ; ret 0xfffb
0x0000020000728c3d : sub r8b, r13b ; mov esp, 0x8bffa24f ; ret
0x000002000043c077 : sub r8b, r13b ; sar byte ptr [rdi], cl ; ret
0x00000200001481ec : sub r8d, 7 ; movzx eax, r8w ; ret
0x00000200001405f6 : sub r8d, ecx ; mov eax, r8d ; ret
0x000002000049d60d : sub r8d, ecx ; movzx eax, r8w ; ret
0x0000020000233476 : sub r8d, r14d ; call 0x2000022f735
0x00000200000c28da : sub r9, r14 ; je 0x200000c2867 ; jmp 0x200000c28aa
0x0000020000159dd0 : sub r9, r8 ; jmp r9
0x0000020000666f6f : sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000729f9e : sub r9, rax ; mov rax, r9 ; ret
0x000002000011ea83 : sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x0000020000188e60 : sub r9b, bpl ; ret
0x000002000054d0ce : sub r9b, r13b ; push rdi ; imul al ; dec dword ptr [rbp - 0x75] ; ret
0x0000020000140b96 : sub r9d, eax ; mov eax, r9d ; ret
0x000002000014066c : sub r9d, ecx ; mov eax, r9d ; ret
0x000002000066e18f : sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x00000200003dac6c : sub r9d, r8d ; mov eax, r9d ; ret
0x00000200001ba892 : sub rax, -0x74b30008 ; ret
0x000002000050a151 : sub rax, -0x74bb0026 ; ret 0x8545
0x00000200000dbd4c : sub rax, r10 ; jmp 0x200000dbd35
0x00000200006104fc : sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x000002000042d744 : sub rax, rcx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x00000200000267c3 : sub rax, rcx ; ret
0x0000020000142023 : sub rax, rcx ; sar rax, 1 ; dec rax ; ret
0x000002000014200a : sub rax, rcx ; sar rax, 1 ; ret
0x00000200001182de : sub rax, rdx ; ret
0x00000200004f5d62 : sub rbx, rdx ; mov rcx, rbx ; call 0x2000011d88d
0x000002000010a3c2 : sub rcx, 0xf ; jne 0x2000010a3de ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000022b0d2 : sub rcx, qword ptr [r8] ; add byte ptr [rax], al ; jne 0x2000022b0e5 ; xor eax, eax ; ret
0x0000020000188093 : sub rcx, r8 ; xor r8d, r8d ; call 0x200001f43a0
0x00000200004ac5cc : sub rcx, rax ; mov rax, rcx ; ret
0x000002000036b4f5 : sub rcx, rdx ; add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x000002000008fcd5 : sub rcx, rdx ; xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x00000200001583c9 : sub rdi, r9 ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000158557 : sub rdx, 0x40 ; ja 0x20000158556 ; ret
0x0000020000158556 : sub rdx, 0x40 ; ja 0x20000158557 ; ret
0x00000200000f9b2e : sub rdx, r11 ; mov dword ptr [rsp + 0x20], ebp ; call 0x20000115d85
0x0000020000721733 : sub rdx, r14 ; jne 0x2000072172c ; jmp 0x200007217af
0x00000200006f58a0 : sub rdx, r8 ; jne 0x200006f5895 ; ret
0x00000200000c8866 : sub rdx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000200001bba9f : sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x00000200002087fc : sub rdx, rax ; mov rax, rdx ; jmp 0x2000020880d
0x00000200000a6cc9 : sub rdx, rsi ; call r12
0x0000020000514c91 : sub rsp, 0x20 ; call 0x2000013b55f
0x00000200004a0074 : sub rsp, 0x28 ; call 0x200000c3937
0x000002000051c160 : sub rsp, 0x28 ; call 0x2000013e26b
0x00000200006cef88 : sub rsp, 0x28 ; call rax
0x000002000009e0a9 : sub sil, sil ; ret 0xf01
0x0000020000020859 : sysenter
0x00000200003af7b9 : test ah, ah ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000464325 : test ah, al ; add byte ptr [rax], al ; add byte ptr [rbp + 3], al ; ret
0x000002000016d9d9 : test ah, al ; push rbp ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000077901 : test ah, bh ; add al, 0 ; add dh, dh ; ret
0x00000200000e8ded : test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000141b98 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200000b230a : test ah, bl ; mov ch, 0xd ; add bh, dh ; ret 0x700
0x0000020000175598 : test ah, ch ; mov esp, 0xa7e9ffee ; ret 0xffee
0x0000020000051fd3 : test ah, cl ; call 0x1ffc3fb1ff1
0x000002000007ad07 : test ah, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x5189
0x0000020000046726 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004fe34d : test ah, dl ; ret 0xa
0x00000200001e1887 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000020000628389 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x000002000049c458 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004af544 : test al, 0 ; add byte ptr [rax], al ; ret
0x000002000013014f : test al, 0 ; add byte ptr [rax], al ; test rcx, rcx ; je 0x20000130163 ; call rcx
0x0000020000431128 : test al, 0x10 ; je 0x20000431135 ; xor al, al ; ret
0x0000020000484b26 : test al, 0x10 ; jne 0x20000484b33 ; xor eax, eax ; ret
0x0000020000602ed9 : test al, 0x10 ; jne 0x20000602ee6 ; mov al, 1 ; ret
0x0000020000671308 : test al, 0x16 ; ret
0x000002000000fece : test al, 0x17 ; pop rdi ; jg 0x2000000fef4 ; ret
0x000002000038a0c2 : test al, 0x1a ; add dh, dh ; ret
0x0000020000147076 : test al, 0x20 ; je 0x20000147087 ; or dword ptr [r8], 0xffffffff ; ret
0x000002000042afc6 : test al, 0x20 ; jne 0x2000042afd3 ; xor al, al ; ret
0x00000200005826e5 : test al, 0x26 ; lock inc dword ptr [rbx - 0x7cb70740] ; ret
0x000002000036b9c1 : test al, 0x3f ; je 0x2000036b9d2 ; add rsp, 0x28 ; ret
0x0000020000198dab : test al, 0x40 ; je 0x20000198dc7 ; mov ecx, r14d ; call 0x200001c4fd9
0x0000020000383cb8 : test al, 0x40 ; jne 0x20000383ce3 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200006fcc40 : test al, 0x45 ; stc ; jmp rax
0x00000200004db4a3 : test al, 0x47 ; jne 0x200004db4ae ; ret
0x000002000043a0eb : test al, 0x48 ; lea ecx, dword ptr [rbp - 0x10] ; call 0x20000063ddc
0x0000020000090631 : test al, 0x4a ; sldt word ptr [rax + rdi - 0x41] ; ret
0x000002000044cc9c : test al, 0x59 ; ret 0x41ff
0x0000020000439404 : test al, 0x6e ; ret
0x0000020000662214 : test al, 0x6f ; add eax, 0xc4834800 ; pop rax ; ret
0x0000020000675a5c : test al, 0x7c ; ret
0x0000020000510bf2 : test al, 0x8b ; ret
0x000002000001e362 : test al, 0x92 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x00000200000102a4 : test al, 0x9d ; ret
0x00000200004a4d2c : test al, 0xb5 ; jrcxz 0x200004a4d35 ; call 0x20000030f76
0x00000200001c5800 : test al, 0xc7 ; adc eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000713a6c : test al, 0xde ; ret
0x000002000049e3f3 : test al, 0xe8 ; jae 0x2000049e3d7 ; ret
0x0000020000183f9a : test al, 0xf0 ; dec dword ptr [rbp - 0x75] ; ret 0xf1e9
0x0000020000175d1e : test al, 0xf8 ; call qword ptr [rax - 0x11333d17]
0x000002000000b052 : test al, 0xfe ; adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x00000200005dcb2f : test al, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005e4b8c : test al, 0xff ; add rsp, 0x38 ; ret
0x0000020000631100 : test al, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015d879 : test al, 1 ; add byte ptr [rax], al ; ret
0x0000020000082fe9 : test al, 1 ; je 0x20000082fe1 ; xor al, al ; ret
0x000002000008c74e : test al, 1 ; je 0x2000008c743 ; xor al, al ; ret
0x00000200001bc877 : test al, 1 ; je 0x200001bc88a ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000020b73b : test al, 1 ; je 0x2000020b728 ; xor al, al ; ret
0x000002000036c918 : test al, 1 ; je 0x2000036c921 ; ret
0x000002000003609b : test al, 1 ; jne 0x200000360a4 ; ret
0x000002000003609a : test al, 1 ; jne 0x200000360a5 ; ret
0x0000020000036099 : test al, 1 ; jne 0x200000360a6 ; ret
0x000002000008f12b : test al, 1 ; jne 0x2000008f12a ; ret
0x00000200000960e3 : test al, 1 ; jne 0x200000960ec ; ret
0x000002000018a633 : test al, 1 ; jne 0x2000018a617 ; jmp 0x200000a6845
0x00000200001c4d89 : test al, 1 ; jne 0x200001c4d9c ; mov eax, 0xc00000bb ; ret
0x000002000008e7d6 : test al, 2 ; je 0x2000008e7e4 ; mov eax, edx ; ret
0x000002000008e7d6 : test al, 2 ; je 0x2000008e7e5 ; mov eax, edx ; ret
0x00000200001bb6f6 : test al, 2 ; je 0x200001bb704 ; xor edx, edx ; mov rax, rdx ; ret
0x00000200001bb6f6 : test al, 2 ; je 0x200001bb705 ; xor edx, edx ; mov rax, rdx ; ret
0x000002000066610b : test al, 2 ; je 0x20000666121 ; mov edx, edi ; call 0x20000294e29
0x000002000067f7b2 : test al, 2 ; je 0x2000067f7bf ; xor eax, eax ; ret
0x00000200004df14e : test al, 3 ; sete al ; ret
0x000002000044b886 : test al, 4 ; add byte ptr [rax], al ; jne 0x2000044b8d5 ; ret
0x000002000037f446 : test al, 4 ; je 0x2000037f456 ; add dword ptr [rcx + 0x40], r11d ; ret
0x00000200000ca204 : test al, 4 ; jne 0x200000ca214 ; ret
0x000002000013c291 : test al, 4 ; jne 0x2000013c2a4 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bdacb : test al, 4 ; jne 0x200001bdadd ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001c5362 : test al, 4 ; jne 0x200001c5375 ; mov eax, 0xc0000001 ; ret
0x00000200001c5381 : test al, 4 ; jne 0x200001c5394 ; mov eax, 0xc0000022 ; ret
0x00000200001c5752 : test al, 4 ; jne 0x200001c5765 ; mov eax, 0xc0000022 ; ret
0x00000200001c57b2 : test al, 4 ; jne 0x200001c57c5 ; mov eax, 0xc0000022 ; ret
0x00000200001c57e2 : test al, 4 ; jne 0x200001c57f5 ; mov eax, 0xc0000022 ; ret
0x000002000043d68e : test al, 4 ; jne 0x2000043d697 ; ret
0x00000200004f47bd : test al, 4 ; jne 0x200004f47ca ; mov al, 1 ; ret
0x00000200005a8231 : test al, 4 ; jne 0x200005a8250 ; call 0x200001ca10f
0x0000020000411a4a : test al, 5 ; add byte ptr [rax], al ; ja 0x20000411a5d ; mov al, r8b ; ret
0x0000020000411962 : test al, 5 ; add byte ptr [rax], al ; ret
0x0000020000554de2 : test al, 6 ; add byte ptr [rax], al ; jmp 0x200003f100a
0x000002000052050b : test al, 6 ; add byte ptr [rax], al ; ret
0x00000200000c977a : test al, 6 ; jne 0x20000195524 ; ret
0x000002000012501e : test al, 8 ; add dh, dh ; ret
0x00000200004ee623 : test al, 8 ; je 0x200004ee633 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x00000200000f4886 : test al, 8 ; jne 0x200000f4893 ; mov eax, ecx ; ret
0x00000200001cba86 : test al, 8 ; jne 0x200001cba99 ; mov eax, 0xc0000022 ; ret
0x0000020000561e09 : test al, ah ; ret
0x0000020000109aa6 : test al, al ; je 0x20000109ab9 ; mov eax, 1 ; ret
0x000002000010a3a5 : test al, al ; je 0x2000010a3b6 ; add rsp, 0x28 ; ret
0x000002000012df43 : test al, al ; je 0x2000012df58 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003d0f1 : test al, al ; jne 0x2000003d113 ; add rsp, 0x28 ; ret
0x0000020000123837 : test al, al ; jne 0x20000123843 ; mov eax, edx ; ret
0x0000020000123837 : test al, al ; jne 0x20000123844 ; mov eax, edx ; ret
0x000002000013fed6 : test al, al ; jne 0x2000013feac ; xor eax, eax ; ret
0x000002000013fc81 : test al, al ; jne 0x200001bb618 ; ret
0x000002000047b33c : test al, al ; jne 0x2000047b349 ; xor eax, eax ; ret
0x000002000047c5a8 : test al, al ; jne 0x2000047c5b5 ; xor eax, eax ; ret
0x00000200004df02b : test al, al ; jne 0x200005a0541 ; ret
0x0000020000689153 : test al, al ; jne 0x20000689146 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cdc7b : test al, al ; jns 0x200001cdc8d ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001d6df8 : test al, al ; jns 0x200001d6e0b ; mov eax, 0xc0000022 ; ret
0x000002000021935f : test al, al ; jns 0x20000219374 ; mov rcx, rsi ; call 0x20000095661
0x00000200000cac67 : test al, al ; js 0x200000cac7a ; mov eax, 1 ; ret
0x0000020000205e5c : test al, al ; js 0x20000205e6f ; mov eax, 0xc00000bb ; ret
0x00000200000555ed : test al, al ; ret 0x11
0x00000200006141d8 : test al, al ; setne al ; add rsp, 0x28 ; ret
0x0000020000531ad8 : test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200004dbe20 : test al, bh ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000191ff4 : test al, ch ; jne 0x20000191fd6 ; jmp 0x200000be24b
0x00000200004ab7ed : test al, cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x00000200004bf128 : test al, cl ; jne 0x200004bf136 ; xor cl, cl ; mov al, cl ; ret
0x00000200005829cb : test al, cl ; sub esi, eax ; inc dword ptr [rbx] ; ret
0x00000200000310f2 : test al, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000616a3f : test al, dl ; add eax, 0x3b480000 ; ret
0x00000200000dc0bb : test al, dl ; jne 0x200000dc0d6 ; mov al, 1 ; ret
0x00000200000dc0c9 : test al, dl ; jne 0x200000dc0dc ; xor al, al ; ret
0x0000020000191ff3 : test al, r13b ; jne 0x20000191fd7 ; jmp 0x200000be24c
0x000002000048d595 : test ax, ax ; je 0x2000048d5a8 ; add rsp, 0x28 ; ret
0x0000020000141f4b : test ax, ax ; jne 0x20000141f47 ; mov rax, rcx ; ret
0x0000020000141f66 : test ax, ax ; jne 0x20000141f62 ; mov rax, rcx ; ret
0x00000200001421d2 : test ax, ax ; jne 0x200001421a0 ; xor eax, eax ; ret
0x000002000014d8a1 : test ax, ax ; jne 0x2000014d882 ; xor eax, eax ; ret
0x000002000043113b : test ax, cx ; jne 0x20000431133 ; mov al, 1 ; ret
0x000002000051b953 : test bh, ah ; test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000466449 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200003e670b : test bh, al ; ret 0x16
0x00000200000e4101 : test bh, bh ; jne 0x200000e4116 ; mov rcx, rbx ; call 0x2000047038d
0x000002000050f643 : test bh, bh ; jne 0x2000050f659 ; xor bl, bl ; call 0x200001396c1
0x00000200006fe470 : test bh, bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000198693 : test bh, cl ; ret
0x00000200001220a8 : test bh, dl ; ret 8
0x00000200003a4211 : test bl, 0x20 ; jmp 0x200003a4121
0x00000200003a4209 : test bl, 0x40 ; jmp 0x200003a4121
0x00000200003a4219 : test bl, 0x40 ; jmp 0x200003a418f
0x00000200003a41d0 : test bl, ah ; jmp 0x200003a4120
0x0000020000545c06 : test bl, al ; ret 0xffe7
0x000002000043d598 : test bl, bh ; call qword ptr [rdx]
0x0000020000713ac0 : test bl, bh ; ret
0x000002000011e59d : test bl, bl ; jne 0x2000011e5cb ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a4203 : test bl, bl ; js 0x200003a418f ; jmp 0x200003a41b4
0x00000200005114fd : test bl, bl ; push rsi ; ret
0x00000200006f52eb : test bl, bl ; ret 2
0x000002000007a31e : test bl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp + 0x33], al ; in al, -0x75 ; ret
0x00000200000729fa : test bl, dh ; or dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xff0
0x000002000009b04b : test bl, dl ; ret
0x00000200003a41cf : test bl, r12b ; jmp 0x200003a4121
0x00000200000f5b06 : test bpl, r14b ; je 0x200000f5a91 ; jmp 0x200000f5ad6
0x000002000001fcf9 : test byte ptr [r14], dil ; leave ; ret 0x21d1
0x00000200000786ba : test byte ptr [rax + 0x10], bl ; add dh, dh ; ret
0x00000200005bdc95 : test byte ptr [rax + 0x39], 5 ; ret
0x00000200006176d9 : test byte ptr [rax + 0x69000000], bh ; ret
0x00000200000eaa39 : test byte ptr [rax + 0xe9be0], al ; add rax, r8 ; jmp rax
0x0000020000063105 : test byte ptr [rax + rax - 0x74b80000], dl ; ret 0xb849
0x00000200004ee826 : test byte ptr [rax + rax - 0x74bc0000], dl ; ret
0x00000200006cb1c1 : test byte ptr [rax + rax - 0x74bf0000], dh ; ret 0x3bb
0x00000200006d0bae : test byte ptr [rax + rax - 0x74bf0000], dh ; ret 0xba49
0x0000020000098fbc : test byte ptr [rax + rax - 0x7eb80000], bh ; ret
0x0000020000151471 : test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x0000020000141bf7 : test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x000002000064d005 : test byte ptr [rax + rax - 0xbf0000], ah ; ret 0x8349
0x000002000039e7ae : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000e4967 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000042848a : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000717ed : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000045bd55 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xffb9
0x00000200000abff6 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200003f98bd : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b48
0x00000200005b00db : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000060183c : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001ab495 : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001ab455 : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200003b0eb7 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4950
0x00000200006119fc : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200005f1ed2 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x000002000003ea50 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000566aff : test byte ptr [rax + rbx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000033961 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8948
0x00000200001c68fb : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x000002000039f7e8 : test byte ptr [rax + rbx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200001691fd : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000007d802 : test byte ptr [rax + rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000cba09 : test byte ptr [rax + rcx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000050f95f : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000cb2d7 : test byte ptr [rax + rcx*8], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000061d82b : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x00000200003d5277 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x0000020000034a9b : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200000615be : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004a4dc4 : test byte ptr [rax + rdi*2], ah ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200004fa42b : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000128656 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x00000200004f94a0 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000976fe : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x3345
0x000002000044f7b1 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rdx - 0x77], cl ; ret 0x4218
0x000002000012a415 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200003f85a3 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000573d55 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsp ; ret
0x00000200003b80e5 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret
0x00000200001868bb : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add cl, ch ; call qword ptr [rdi]
0x000002000054ad80 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add cl, ch ; ret 0xe874
0x000002000017bc6c : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200006119ec : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x000002000018b85f : test byte ptr [rax - 0x17000df5], ch ; jmp qword ptr [rdi]
0x000002000010122e : test byte ptr [rax - 0x73], 0x35 ; ret 0x1c80
0x00000200006452cb : test byte ptr [rax - 0x73], 0x4b ; sbb byte ptr [rax - 1], cl ; ret 0x8b4d
0x00000200003df231 : test byte ptr [rax - 0x74ffffc2], bh ; ret
0x00000200000bd6c8 : test byte ptr [rax - 0x74fffffe], ah ; ret
0x0000020000077f5d : test byte ptr [rax - 0x74ffffff], al ; ret
0x000002000065064d : test byte ptr [rax - 0x75000000], dh ; ret 0xd148
0x000002000072cb7f : test byte ptr [rax - 0x75], 0x1d ; loope 0x2000072cbcf ; ret 0x45ff
0x00000200005109c4 : test byte ptr [rax - 0x75], 0x41 ; cmp byte ptr [rax - 1], cl ; ret
0x00000200000e722e : test byte ptr [rax - 0x75], 0xd3 ; mov rcx, r13 ; call r12
0x0000020000093b1f : test byte ptr [rax - 0x75], cl ; ret
0x000002000040c9c2 : test byte ptr [rax - 0x7affffff], dh ; ror byte ptr [rdi], 0x88 ; ret 1
0x000002000003549e : test byte ptr [rax - 1], al ; ret 0x5489
0x00000200005148ce : test byte ptr [rax], 0 ; add cl, ch ; ret 0xfffc
0x00000200005137aa : test byte ptr [rax], 0 ; jmp 0x20000513776
0x00000200001f4d0f : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba48
0x00000200004534e9 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xbee9
0x00000200000d37cc : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x00000200001104da : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], cl ; ret
0x0000020000652d6e : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000015923a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cli ; ret
0x000002000015920a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, cr3 ; ret
0x0000020000143eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005389ed : test byte ptr [rax], bh ; ret
0x000002000011e2b9 : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200004805d2 : test byte ptr [rax], dh ; adc byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005a88e : test byte ptr [rax], dh ; mov byte ptr [rcx], dl ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200001ccd04 : test byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret
0x000002000038a7e3 : test byte ptr [rax], dl ; clc ; xchg eax, esp ; push 0 ; ret
0x00000200004e696f : test byte ptr [rax], dl ; ret
0x00000200001244e4 : test byte ptr [rbp + 0x480008ae], ch ; add esp, 0x28 ; ret
0x00000200000bf8b3 : test byte ptr [rbp + 0xf], 0x20 ; ret 0x894c
0x0000020000045fdd : test byte ptr [rbp + rcx - 0x44800000], al ; ret
0x000002000058719d : test byte ptr [rbp - 0x16000002], bh ; ret 0xfffe
0x00000200005744a4 : test byte ptr [rbp - 0x1600000b], ch ; ret 0xedb4
0x0000020000575d22 : test byte ptr [rbp - 0x16001213], bh ; ret
0x00000200006ff4d0 : test byte ptr [rbp - 0x31], al ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000635272 : test byte ptr [rbp - 0x3c74bce4], 0x83 ; ret
0x0000020000146975 : test byte ptr [rbp - 0x74fffffa], al ; ret
0x000002000050fd9a : test byte ptr [rbp - 0x75000000], bh ; pop rdi ; adc bh, bh ; ret
0x0000020000127d38 : test byte ptr [rbp - 0x75000000], cl ; ret 0x8d48
0x000002000058370a : test byte ptr [rbp - 0x75000000], dl ; ret
0x0000020000427058 : test byte ptr [rbp - 0x75ffec0e], cl ; ret 0x8024
0x00000200003d2bd7 : test byte ptr [rbp - 0x76000000], ch ; push rdx ; add esi, esi ; ret 0xf10
0x000002000012c1fc : test byte ptr [rbp - 0x8fffffe], dh ; ret
0x0000020000025c73 : test byte ptr [rbp - 0x9fffffe], bl ; ret
0x00000200005f3e30 : test byte ptr [rbp - 0x9ffffff], cl ; ret 0xf01
0x00000200005665bb : test byte ptr [rbx + 0x10], cl ; in al, dx ; dec dword ptr [rax - 0x7d] ; ret 0x6608
0x00000200005f114a : test byte ptr [rbx + 0x5c893059], 0x24 ; js 0x200005f10e7 ; ret
0x0000020000208326 : test byte ptr [rbx + 0x97301fa], 0xff ; ret 0x8348
0x0000020000440d39 : test byte ptr [rbx + 0xfc085f8], 0x88 ; jmp rcx
0x0000020000097bba : test byte ptr [rbx + rax - 0x72bf0000], dl ; jmp qword ptr [r11]
0x000002000018a767 : test byte ptr [rbx + rbp - 0x12], 0xe9 ; pop rdi ; ret
0x00000200000d3167 : test byte ptr [rbx + rcx], ch ; add bh, bh ; ret
0x000002000055c57e : test byte ptr [rbx + rdi*8 - 0x5a160001], ch ; ret
0x000002000006711c : test byte ptr [rbx - 0x16000002], ch ; call qword ptr [rax]
0x0000020000057811 : test byte ptr [rbx - 0x16000008], dl ; ret
0x0000020000093810 : test byte ptr [rbx - 0x2674b706], 0xf7 ; ret 0xfffe
0x00000200000f537c : test byte ptr [rbx - 0x38dcbef9], 0x3b ; ret
0x00000200004e22e8 : test byte ptr [rbx - 0x74fff40d], bh ; ret
0x00000200003865f9 : test byte ptr [rbx - 0x74ffffed], bl ; ret 0x8b48
0x0000020000707ab5 : test byte ptr [rbx - 0x74ffffff], al ; ret 0x8d48
0x000002000070f295 : test byte ptr [rbx - 0x75000000], bl ; ret
0x0000020000409238 : test byte ptr [rbx - 0x75000000], dh ; ret
0x00000200005442c9 : test byte ptr [rbx - 0x9001890], bl ; ret
0x00000200000c71cf : test byte ptr [rbx - 0xa000000], ch ; ret
0x0000020000433a23 : test byte ptr [rbx - 0xdbaf03d], 0x23 ; ret 0x8b44
0x00000200003f1c7d : test byte ptr [rbx], ah ; xor al, 0x16 ; add byte ptr [rbx], ah ; ret
0x0000020000122036 : test byte ptr [rbx], al ; ret 8
0x0000020000538183 : test byte ptr [rbx], bl ; ret
0x0000020000577751 : test byte ptr [rbx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000446448 : test byte ptr [rbx], ch ; ret 0x48ff
0x00000200005a9d3c : test byte ptr [rbx], cl ; adc dh, ch ; dec dword ptr [rax - 0x75] ; ret
0x000002000007f217 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x00000200001579f1 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x00000200000b12dc : test byte ptr [rbx], cl ; ret
0x00000200001f08c0 : test byte ptr [rbx], dh ; int1 ; dec dword ptr [rax - 0x7d] ; ret 0x4910
0x000002000071eddd : test byte ptr [rbx], dh ; ret 0xfffc
0x0000020000188076 : test byte ptr [rbx], dl ; insd dword ptr [rdi], dx ; int1 ; push rsi ; ret 0xba01
0x000002000059026d : test byte ptr [rbx], dl ; ret
0x0000020000177cdc : test byte ptr [rcx + 0x28], ch ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x00000200004642ed : test byte ptr [rcx + 0x33000000], dl ; fild dword ptr [rbp + 0x3b] ; ret
0x00000200004523c2 : test byte ptr [rcx + 0x48001232], cl ; add esp, 0x28 ; ret
0x00000200003b3c72 : test byte ptr [rcx + 0x480018e8], ah ; add esp, 0x28 ; ret
0x000002000000df80 : test byte ptr [rcx + 0x62], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x00000200001a129b : test byte ptr [rcx + 0xf], 0x45 ; fsubp st(1) ; ret 0xf582
0x00000200004f949a : test byte ptr [rcx + 0xf], al ; ret
0x0000020000086a83 : test byte ptr [rcx + 1], cl ; add byte ptr [rax], al ; call rax
0x00000200004ea358 : test byte ptr [rcx + 2], 1 ; jne 0x200004ea369 ; xor eax, eax ; ret
0x000002000016f1c8 : test byte ptr [rcx - 0x1258], dh ; ret
0x0000020000545bd1 : test byte ptr [rcx - 0x3c], dl ; out -1, eax ; jmp 0x200003c1eda
0x00000200003d2be3 : test byte ptr [rcx - 0x75000000], ah ; add al, 0x8a ; ret 0xbb
0x00000200005b348f : test byte ptr [rcx - 0x75], 0x43 ; or byte ptr [rcx + 0x23], cl ; ret 0x8948
0x00000200000dedde : test byte ptr [rcx - 0x75], al ; ret
0x00000200003b4c22 : test byte ptr [rcx - 0x75ffe724], ah ; ret
0x000002000021b886 : test byte ptr [rcx - 0x76bb7fbb], cl ; jne 0x2000021b81f ; call r9
0x00000200003cb20e : test byte ptr [rcx - 0x7efffff9], al ; jmp qword ptr [rax]
0x000002000012dde0 : test byte ptr [rcx - 0x8fff797], ch ; ret
0x0000020000532e8d : test byte ptr [rcx - 0x9001acf], cl ; ret
0x000002000063b786 : test byte ptr [rcx - 0xa000000], cl ; ret
0x0000020000452182 : test byte ptr [rcx - 0xa000000], dh ; ret
0x00000200005fb44f : test byte ptr [rcx - 0xa000000], dh ; ret 0xf20
0x00000200005aded3 : test byte ptr [rcx - 0xa4a], ah ; ret 0x3b41
0x000002000066d2a0 : test byte ptr [rcx], ah ; add byte ptr [rax], al ; mov rcx, rdi ; call rsi
0x0000020000412e8a : test byte ptr [rcx], ah ; ret
0x00000200006f53de : test byte ptr [rcx], ah ; ret 2
0x00000200003951de : test byte ptr [rcx], al ; adc byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200005902cf : test byte ptr [rcx], al ; ret 0xfff1
0x00000200003faf76 : test byte ptr [rcx], ch ; ret
0x000002000051b955 : test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003af807 : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000168c77 : test byte ptr [rcx], cl ; mov esp, 0x66e9ffec ; ret 0xffec
0x000002000018a74e : test byte ptr [rcx], cl ; ret
0x0000020000079b97 : test byte ptr [rcx], dh ; add al, 0 ; add byte ptr [rax - 1], cl ; ret 0x8549
0x0000020000486304 : test byte ptr [rcx], dh ; enter 0, 0 ; inc rdx ; jmp 0x200004862ec
0x00000200000f1838 : test byte ptr [rcx], dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000200003ff189 : test byte ptr [rdi + 0x3b000000], dl ; ret
0x0000020000520140 : test byte ptr [rdi + 0x55], ah ; or dword ptr [rax], eax ; ret
0x0000020000395d59 : test byte ptr [rdi + 7], ah ; add byte ptr [rax], al ; mov rcx, r13 ; call qword ptr [r14]
0x0000020000728cd2 : test byte ptr [rdi + rbx*8 - 0x74bb0002], bl ; ret
0x0000020000100d6e : test byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200000ae3ca : test byte ptr [rdi - 0x21], ah ; or eax, 0xd8b4800 ; ret 0x2294
0x00000200000f4422 : test byte ptr [rdi - 0x43], dh ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200001533ae : test byte ptr [rdi - 0x74b7fff8], 5 ; jmp rsp
0x000002000021c8ce : test byte ptr [rdi - 0x75000000], dl ; pop rbp ; out -1, eax ; ret
0x00000200004b3db4 : test byte ptr [rdi - 0x9ffffff], bh ; ret 0xf30
0x0000020000147ed8 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000002000047080f : test byte ptr [rdi], 0x44 ; ret
0x0000020000430a3a : test byte ptr [rdi], 0x4f ; ret
0x000002000018a81e : test byte ptr [rdi], 0x84 ; leave ; int1 ; push rsi ; ret 0xf01
0x0000020000478355 : test byte ptr [rdi], 0x84 ; push rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000a39d7 : test byte ptr [rdi], 0x84 ; ret
0x0000020000043fd2 : test byte ptr [rdi], 0x84 ; ret 0
0x00000200006eb6a3 : test byte ptr [rdi], 0x84 ; ret 0x339
0x00000200000c71cd : test byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000009e640 : test byte ptr [rdi], 0x84 ; sub eax, 0xf6000004 ; ret
0x00000200005192ee : test byte ptr [rdi], 0x85 ; add esp, dword ptr [rax - 0x74b7fff7] ; ret
0x000002000057ce2d : test byte ptr [rdi], 0x85 ; push rcx ; out dx, eax ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x0000020000071f14 : test byte ptr [rdi], 0x85 ; ret
0x0000020000040592 : test byte ptr [rdi], 0x85 ; ret 0
0x00000200003cd241 : test byte ptr [rdi], 0x85 ; ret 0x17b7
0x00000200004dbf33 : test byte ptr [rdi], 0x85 ; ret 0xc2b
0x00000200004d4489 : test byte ptr [rdi], 0x85 ; ret 0xc7b
0x00000200006ca7c5 : test byte ptr [rdi], 0x85 ; ret 1
0x0000020000449a36 : test byte ptr [rdi], 0x88 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003f3fe6 : test byte ptr [rdi], 0x88 ; ret
0x000002000054daeb : test byte ptr [rdi], 0x88 ; ret 0
0x00000200000dd14a : test byte ptr [rdi], 0x94 ; ret 0x5488
0x00000200004a16c8 : test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x00000200001f6792 : test byte ptr [rdi], 0x99 ; ret
0x000002000006810e : test byte ptr [rdi], 0xb6 ; ret 0xca3b
0x0000020000169344 : test byte ptr [rdi], ah ; ret 0xffec
0x000002000007907b : test byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rcx + 0xb], cl ; ret 0x2548
0x00000200002953d1 : test byte ptr [rdi], bl ; adc byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x349
0x00000200000786c2 : test byte ptr [rdi], bl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000046bb68 : test byte ptr [rdi], bl ; call qword ptr [rax]
0x000002000049eece : test byte ptr [rdi], ch ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000020000590371 : test byte ptr [rdi], cl ; ret 0xfff1
0x00000200003bee63 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000470c86 : test byte ptr [rdx + 0x470b00], ch ; add rax, r10 ; jmp rax
0x0000020000065b1d : test byte ptr [rdx + 0x64e54], dh ; add rax, rdx ; jmp rax
0x00000200001f7e7c : test byte ptr [rdx + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b22e9 : test byte ptr [rdx + rax], ch ; add dh, dh ; ret 0xff0
0x00000200003ecb5b : test byte ptr [rdx + rdi*2 + 0x16], dl ; add dh, dh ; ret
0x00000200003d9bb3 : test byte ptr [rdx - 0x1000000], bh ; ret
0x00000200004e346c : test byte ptr [rdx - 0x74bb38bb], 0x4d ; ret
0x000002000038ec8a : test byte ptr [rdx - 0x74ffe591], bl ; ret
0x00000200003af275 : test byte ptr [rdx - 0x74ffe6e3], bl ; ret
0x0000020000428cdf : test byte ptr [rdx - 0x74ffec1e], cl ; ret
0x00000200004f0cd0 : test byte ptr [rdx - 0x75000000], ch ; ret
0x00000200004c7e12 : test byte ptr [rdx - 0x75000000], cl ; ret
0x00000200003b4fd6 : test byte ptr [rdx - 0x9ffe727], cl ; ret
0x0000020000077168 : test byte ptr [rdx - 0x9ffef9f], bl ; ret
0x0000020000087821 : test byte ptr [rdx - 0x9fffffa], ah ; ret
0x0000020000087ca9 : test byte ptr [rdx - 0xa000000], dh ; ret
0x00000200005a2ff0 : test byte ptr [rdx - 0xc], cl ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x0000020000435495 : test byte ptr [rdx*2 + 0x3b480013], al ; ret
0x00000200003a08fb : test byte ptr [rdx], ah ; ret
0x000002000018a664 : test byte ptr [rdx], ah ; ret 0xfff1
0x0000020000387af8 : test byte ptr [rdx], al ; ret
0x00000200000a70d9 : test byte ptr [rdx], bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000408d07 : test byte ptr [rdx], bl ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200004fff8e : test byte ptr [rdx], bl ; add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x00000200005c4b90 : test byte ptr [rdx], ch ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x000002000003a08b : test byte ptr [rdx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000040ec74 : test byte ptr [rdx], dh ; hlt ; adc al, 0 ; xor eax, eax ; jmp 0x2000040ec47
0x0000020000448e83 : test byte ptr [rdx], dl ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000006a619
0x0000020000548bba : test byte ptr [rip + 0x33ffe843], bh ; shr al, cl ; pop rdx ; ret 0xffd4
0x0000020000729c26 : test byte ptr [rip + 0x6b000001], cl ; ret
0x00000200001b8244 : test byte ptr [rip - 0x37000008], 0x75 ; out dx, al ; ret
0x0000020000045fde : test byte ptr [rip - 0x44800000], cl ; ret
0x00000200006fd68f : test byte ptr [rip - 0x74fffda2], cl ; ret
0x000002000040285d : test byte ptr [rip - 0x7cffffff], ah ; call qword ptr [rbx]
0x0000020000401164 : test byte ptr [rip - 0x8ffea89], cl ; ret
0x000002000009e642 : test byte ptr [rip - 0x9fffffc], ch ; ret
0x0000020000618fe0 : test byte ptr [rip - 0x9ffffff], ch ; ret 0xf20
0x000002000050d08f : test byte ptr [rsi + 0x48000000], bh ; mov ecx, ebx ; call rax
0x0000020000134945 : test byte ptr [rsi + rbx], dh ; or byte ptr [rax], al ; mov ecx, edi ; call rax
0x0000020000167964 : test byte ptr [rsi + rcx*4], dl ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000100943 : test byte ptr [rsi + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000611f46 : test byte ptr [rsi - 0x15000000], bl ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000369831 : test byte ptr [rsi - 0x70], al ; add byte ptr [rax], al ; ret
0x00000200001a1806 : test byte ptr [rsi - 0x73], al ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a8274 : test byte ptr [rsi - 0x74fff197], al ; ret
0x00000200006ed23a : test byte ptr [rsi - 0x74fffce2], ah ; ret
0x0000020000230cd4 : test byte ptr [rsi - 0x75000000], bh ; ret
0x0000020000375d48 : test byte ptr [rsi - 0x7eb70023], dh ; ret
0x0000020000633113 : test byte ptr [rsi - 0x9000000], al ; ret
0x0000020000492336 : test byte ptr [rsi - 0x9fff0c5], ch ; ret
0x00000200000ebd6d : test byte ptr [rsi - 0xa000000], al ; ret 0xf08
0x00000200003d7db0 : test byte ptr [rsi - 0xa000000], dl ; ret
0x00000200000fb58f : test byte ptr [rsi - 0xfff59a], cl ; ret
0x000002000045dc08 : test byte ptr [rsi - 0xffffff], dh ; ret 0x3b41
0x0000020000425411 : test byte ptr [rsi], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x3b45
0x00000200003faf5e : test byte ptr [rsi], ah ; ret
0x000002000018a820 : test byte ptr [rsi], bh ; leave ; int1 ; push rsi ; ret 0xf01
0x000002000001fcfa : test byte ptr [rsi], bh ; leave ; ret 0x21d1
0x000002000008afd9 : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200001284b3 : test byte ptr [rsi], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003e66a3 : test byte ptr [rsi], ch ; ret
0x00000200004f6e17 : test byte ptr [rsi], ch ; sbb al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000731b1 : test byte ptr [rsi], dl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 9], al ; ret 0x600
0x000002000053563a : test byte ptr [rsp + rdi*2 - 0x1b], cl ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000048cce2 : test ch, 0xff ; mov rcx, rdi ; call 0x20000068fd8
0x00000200004aa0cd : test ch, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000057ad48 : test ch, al ; ret 0xffee
0x000002000018d589 : test ch, bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000181ae5 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000431728 : test ch, bl ; ret
0x00000200003faeac : test ch, bl ; ret 0x15
0x00000200007224f0 : test ch, bl ; ret 0xa8ff
0x0000020000102edc : test ch, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000054b019 : test ch, cl ; mov eax, ebp ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e42be : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200000f5b07 : test ch, dh ; je 0x200000f5a90 ; jmp 0x200000f5ad5
0x0000020000545c1b : test ch, dh ; ret 0xffe7
0x000002000017531f : test ch, dl ; ret
0x000002000050849a : test cl, 0x10 ; cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x0000020000088fe8 : test cl, 0x10 ; je 0x20000088ff3 ; ret
0x00000200003ac185 : test cl, 0x10 ; jne 0x200003ac193 ; mov eax, edx ; ret
0x00000200003ac185 : test cl, 0x10 ; jne 0x200003ac194 ; mov eax, edx ; ret
0x000002000012ed05 : test cl, 0x20 ; je 0x2000012ed13 ; inc eax ; ret
0x00000200000b2802 : test cl, 0x20 ; jne 0x200000b2810 ; xor eax, eax ; ret
0x000002000012ed1d : test cl, 0x3f ; je 0x2000012ed2b ; inc eax ; ret
0x00000200004a062c : test cl, 0x40 ; jne 0x200004a063b ; xor al, al ; ret
0x00000200005d2139 : test cl, 0xe2 ; add al, 0x83 ; ret 0xe830
0x0000020000427314 : test cl, 0xf8 ; jne 0x2000042731f ; ret
0x0000020000088e52 : test cl, 1 ; je 0x20000088e5d ; ret
0x00000200000fcdd7 : test cl, 1 ; jne 0x200000fcde5 ; xor eax, eax ; ret
0x000002000040cbfd : test cl, 1 ; jne 0x2000040cc4c ; mov qword ptr [r9], r10 ; ret
0x00000200000dc006 : test cl, 2 ; je 0x200000dc019 ; add rsp, 0x28 ; ret
0x000002000014c673 : test cl, 2 ; jne 0x2000014c683 ; xor dl, dl ; mov al, dl ; ret
0x00000200003f72cb : test cl, 8 ; jne 0x200003f72d6 ; ret
0x00000200004fb15d : test cl, 8 ; jne 0x200004fb178 ; xor al, al ; ret
0x0000020000612162 : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000688c48 : test cl, ah ; jmp qword ptr [rcx]
0x000002000037be62 : test cl, ah ; mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x000002000009997d : test cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000a7096 : test cl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000046ba7e : test cl, al ; call qword ptr [rax]
0x000002000057900b : test cl, al ; jl 0x20000579004 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b21ed : test cl, al ; jne 0x200000b21f9 ; xor eax, eax ; ret
0x0000020000295915 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1ee9
0x00000200007099ac : test cl, bh ; ret
0x00000200000c1372 : test cl, bl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000056b196 : test cl, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000200004f511a : test cl, ch ; add dword ptr [rax], eax ; add al, ch ; sbb al, 0xc9 ; ret
0x000002000007e6c4 : test cl, ch ; or al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000157a11 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x000002000060432e : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200003b07a8 : test cl, cl ; jne 0x200003b07c1 ; xor eax, eax ; ret
0x000002000061ca4a : test cl, cl ; jne 0x2000061ca5c ; mov eax, 1 ; ret
0x000002000061cb8d : test cl, cl ; jne 0x2000061cb9a ; mov al, 1 ; ret
0x00000200003f72c7 : test cl, cl ; js 0x200003f72f8 ; test cl, 8 ; jne 0x200003f72da ; ret
0x000002000059e389 : test cl, cl ; ret
0x000002000009d2c5 : test cl, cl ; sete al ; ret
0x0000020000531aac : test cl, cl ; setne al ; pop rbp ; ret
0x0000020000596d98 : test cl, dh ; ret
0x00000200000f1b99 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x000002000008260d : test cl, dl ; add eax, 0x8b4c0000 ; ret
0x00000200003e6599 : test cl, dl ; ret
0x000002000051657b : test cl, dl ; ret 9
0x0000020000148e1d : test cx, 0xffff ; jne 0x20000148e2c ; ret
0x0000020000231ec5 : test cx, ax ; jne 0x20000231ed6 ; mov byte ptr [rdx + 2], cl ; ret
0x000002000003013b : test cx, cx ; je 0x2000003014e ; add rsp, 0x28 ; ret
0x00000200003d2f22 : test dh, 0xff ; add rsp, 0x28 ; ret
0x000002000054432b : test dh, ah ; push 0xe7 ; push rsi ; ret
0x000002000059e44b : test dh, bh ; ret
0x0000020000175334 : test dh, ch ; ret
0x00000200001ebe2a : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200001361d0 : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x480f
0x0000020000387aec : test dh, cl ; ret 0x1a
0x000002000013fe7d : test dh, dh ; jne 0x2000013fe10 ; xor rax, rax ; ret
0x00000200001418f1 : test dh, dh ; jne 0x20000141886 ; xor eax, eax ; ret
0x0000020000141984 : test dh, dh ; jne 0x2000014194a ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000416b36 : test dl, 0x47 ; jne 0x20000416b41 ; ret
0x0000020000369475 : test dl, 4 ; jne 0x20000369484 ; xor al, al ; ret
0x0000020000135ca6 : test dl, ah ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x0000020000611f02 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x00000200000824b8 : test dl, bh ; cmc ; sldt word ptr [rcx - 0x75] ; ret
0x00000200000c9b71 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000043d5a4 : test dl, bl ; call qword ptr [rdx]
0x00000200005902ad : test dl, bl ; ret 0xfff1
0x0000020000516572 : test dl, bl ; ret 9
0x000002000045be94 : test dl, cl ; ret
0x00000200006c73e2 : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000026a9e : test dl, dl ; je 0x20000026aad ; mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000033919 : test dl, dl ; je 0x2000003391a ; mov eax, 1 ; ret
0x000002000050a010 : test dl, dl ; jne 0x2000050a019 ; ret
0x00000200000ecaf5 : test dl, dl ; js 0x200000ecafe ; ret
0x000002000059e48f : test dl, dl ; ret
0x00000200000c63fa : test dword ptr [r10 + 0x98], edx ; jne 0x200000c640d ; ret
0x00000200004cceaa : test dword ptr [r8 + rax], 0x45c70000 ; call qword ptr [rax]
0x00000200000ffb6d : test dword ptr [rax + 0x30], esi ; or al, byte ptr [rax] ; ret
0x0000020000007582 : test dword ptr [rax + 0x50], ecx ; xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x000002000057f925 : test dword ptr [rax + 0xf000000], eax ; xchg eax, ebp ; ret 0xca83
0x00000200006c54da : test dword ptr [rax + 1], ecx ; add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200001d78c3 : test dword ptr [rax + rax + 0x3b450000], eax ; ret
0x0000020000041ac4 : test dword ptr [rax + rax - 0x41f10000], ebx ; xchg eax, edi ; ret
0x00000200001e7eca : test dword ptr [rax + rax - 0x74b80000], esp ; ret
0x000002000070fcbc : test dword ptr [rax + rax - 0x7cb80000], edi ; ret 0x4908
0x00000200004cceab : test dword ptr [rax + rax], 0x45c70000 ; call qword ptr [rax]
0x000002000043467f : test dword ptr [rax + rax], eax ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200000a570d : test dword ptr [rax + rcx], ebp ; add dh, dh ; ret
0x0000020000482cff : test dword ptr [rax + rsi*8 + 0xf], edi ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000647c5d : test dword ptr [rax - 0x1000000], eax ; ret
0x0000020000643c21 : test dword ptr [rax - 0x1000000], edx ; ret
0x000002000054d43c : test dword ptr [rax - 0x16fffffd], eax ; ret 0xe8fa
0x0000020000192863 : test dword ptr [rax - 0x17000d21], ebx ; ret
0x00000200004e30af : test dword ptr [rax - 0x73], 0x8348431c ; ret
0x000002000046bcfc : test dword ptr [rax - 0x73], 0x83484b1c ; ret
0x00000200003a49eb : test dword ptr [rax - 0x74ffe663], esi ; ret
0x000002000012031d : test dword ptr [rax - 0x74fff72a], esi ; ret
0x00000200001ccbef : test dword ptr [rax - 0x75000000], edx ; ret
0x0000020000119d67 : test dword ptr [rax - 0x75000000], esp ; ret
0x0000020000435903 : test dword ptr [rax - 0x77], 0xe820247c ; ret 0xf93b
0x0000020000448211 : test dword ptr [rax - 0x9ffffff], ebx ; ret 0x7402
0x00000200005fb458 : test dword ptr [rax - 0xa000000], ebp ; ret 0xf08
0x0000020000031984 : test dword ptr [rax - 0xfffff5], esi ; ret 0x854d
0x00000200004a13f9 : test dword ptr [rax - 0xffffff], eax ; ret 0xd7eb
0x000002000050a95d : test dword ptr [rax], 0x8b440000 ; ret
0x00000200005cd843 : test dword ptr [rax], 0x8b4c0000 ; ret
0x00000200004af956 : test dword ptr [rax], eax ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200004f6cb7 : test dword ptr [rax], eax ; sbb eax, 0x8b48000b ; ret 0x8b48
0x00000200004978af : test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200000c8c4b : test dword ptr [rax], ebx ; ret
0x00000200000f2665 : test dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x000002000045e80d : test dword ptr [rax], edi ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200001ccbf9 : test dword ptr [rax], edx ; add byte ptr [rbx], bh ; ret
0x00000200000ff7e3 : test dword ptr [rax], edx ; jne 0x200000ff7f0 ; xor eax, eax ; ret
0x0000020000116b37 : test dword ptr [rax], edx ; or dword ptr [r8], r8d ; ret
0x0000020000596ca3 : test dword ptr [rax], edx ; ret 0xfff2
0x000002000005056b : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001ebe1e : test dword ptr [rax], esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x00000200004270fd : test dword ptr [rax], esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000019808c : test dword ptr [rax], esp ; mov ch, 0xf3 ; push rsi ; ret
0x000002000008eb70 : test dword ptr [rbp + 0x57], edx ; str word ptr [rcx - 0x7d] ; ret 0x4d04
0x00000200000416f6 : test dword ptr [rbp + 0xf000003], ebx ; mov dh, 0x97 ; ret
0x00000200000c0c1f : test dword ptr [rbp + rbx - 0x3fccfff3], edi ; ret
0x000002000004653c : test dword ptr [rbp + rcx], edi ; add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x000002000046788f : test dword ptr [rbp + rsi + 0x458b0011], edx ; ret
0x000002000059fe13 : test dword ptr [rbp - 0x17000c22], esp ; ret
0x00000200003edf76 : test dword ptr [rbp - 0x74ffe999], esi ; ret
0x0000020000493fdb : test dword ptr [rbp - 0x74fff0bf], ebp ; ret
0x00000200004bbfd6 : test dword ptr [rbp - 0x74fff27b], ebx ; ret
0x00000200004fdde6 : test dword ptr [rbp - 0x74fff539], edi ; ret
0x0000020000063dc2 : test dword ptr [rbp - 0x75ffeeda], esi ; ret
0x00000200000ac336 : test dword ptr [rbp - 0x9fff20c], edx ; ret
0x000002000043c55c : test dword ptr [rbp - 0xa000000], edi ; ret
0x00000200004ee59f : test dword ptr [rbx + 0x38], ecx ; jne 0x200004ee5b2 ; add rsp, 0x38 ; ret
0x00000200000fd270 : test dword ptr [rbx + 0x4f], ecx ; or al, byte ptr [rax] ; or eax, 0xffffffff ; ret
0x0000020000064970 : test dword ptr [rbx + 0xf000000], esp ; mov dh, 0x93 ; ret
0x0000020000111b30 : test dword ptr [rbx + rax*4 + 9], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x000002000053fe13 : test dword ptr [rbx - 0x17001974], ebp ; ret
0x00000200004878fc : test dword ptr [rbx - 0x74fff047], eax ; ret
0x000002000050afce : test dword ptr [rbx - 0x74fff5ce], ebx ; ret
0x000002000002d2a2 : test dword ptr [rbx - 0x74fffffd], edi ; ret 0xba0f
0x0000020000496f8b : test dword ptr [rbx - 0x74ffffff], ecx ; ret
0x00000200004f1e35 : test dword ptr [rbx - 0x75000000], eax ; ret
0x00000200003a83f2 : test dword ptr [rbx - 0x75ffe689], eax ; ret
0x000002000007bc0c : test dword ptr [rbx - 0x75ffefd1], ecx ; ret
0x0000020000026684 : test dword ptr [rbx - 0x7cffec1b], esi ; jmp qword ptr [rax]
0x000002000042774e : test dword ptr [rbx - 0x9ffec0f], ecx ; ret
0x00000200000706b4 : test dword ptr [rbx - 0x9ffef5b], edx ; ret 0xf01
0x000002000007d089 : test dword ptr [rbx - 0x9ffefdc], ebx ; ret
0x00000200000bbf94 : test dword ptr [rbx - 0x9fff2ad], ecx ; ret 0xf01
0x0000020000025d4f : test dword ptr [rbx - 0x9fffffe], ebx ; ret
0x0000020000520291 : test dword ptr [rbx], 0xc0ffffd8 ; ret
0x000002000057b035 : test dword ptr [rbx], eax ; shr esi, 1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000168c9b : test dword ptr [rbx], ebp ; ret
0x0000020000065375 : test dword ptr [rbx], ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000dd610 : test dword ptr [rbx], ebx ; ret
0x00000200000e2311 : test dword ptr [rbx], ecx ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200004ba5f8 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x00000200003ac12e : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], al ; ret
0x0000020000096d7b : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x0000020000642a5e : test dword ptr [rbx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000020efa3 : test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000012b291 : test dword ptr [rbx], edx ; jae 0x2000012b2a4 ; add byte ptr [rsi - 1], ah ; ret 0xb70f
0x00000200000eeb3a : test dword ptr [rbx], esi ; add byte ptr [rbx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e9638 : test dword ptr [rcx + 0x3b000001], ebx ; ret 0x820f
0x0000020000124e47 : test dword ptr [rcx + 0x3b4c0008], ebp ; ret
0x000002000014c94c : test dword ptr [rcx + 0x41000000], ecx ; mov al, bl ; ret
0x000002000044b884 : test dword ptr [rcx + 0x4a8], ebx ; jne 0x2000044b8d7 ; ret
0x000002000044b883 : test dword ptr [rcx + 0x4a8], r11d ; jne 0x2000044b8d8 ; ret
0x000002000057ce2f : test dword ptr [rcx + 0x4c], edx ; out dx, eax ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x00000200003cef5d : test dword ptr [rcx + 8], edx ; jne 0x200003cef6f ; and qword ptr [r9], 0 ; ret
0x000002000043a7f5 : test dword ptr [rcx + rax - 0x74b80000], esi ; ret
0x0000020000129aa9 : test dword ptr [rcx + rax*4 + 8], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000004f00f : test dword ptr [rcx + rax], ebx ; add byte ptr [rbp - 0x7b], al ; in al, -0x75 ; ret 0x840f
0x00000200003d7db9 : test dword ptr [rcx + rax], esp ; add dh, dh ; ret
0x0000020000118d0e : test dword ptr [rcx + rbp - 0x49f0fff7], ebp ; ret
0x00000200000e29d6 : test dword ptr [rcx - 0x14000002], ebx ; ret
0x0000020000580106 : test dword ptr [rcx - 0x14001040], ebp ; ret 0xc085
0x00000200003857c3 : test dword ptr [rcx - 0x74ffe52b], ebx ; ret
0x0000020000049ce8 : test dword ptr [rcx - 0x74ffeda7], edx ; ret
0x000002000048d40e : test dword ptr [rcx - 0x74fff095], ecx ; ret
0x00000200001374f8 : test dword ptr [rcx - 0x74fff7fc], edi ; ret
0x00000200004141f6 : test dword ptr [rcx - 0x74ffffff], ecx ; ret
0x00000200003b0123 : test dword ptr [rcx - 0x9ffe6ef], ebx ; ret
0x0000020000105dcd : test dword ptr [rcx - 0x9fff603], eax ; ret
0x00000200000a56bf : test dword ptr [rcx - 0x9fffff8], esp ; ret
0x00000200004af98b : test dword ptr [rcx - 0x9ffffff], ecx ; ret
0x0000020000462d92 : test dword ptr [rcx - 0xa000000], edx ; ret 0x7402
0x00000200003a4110 : test dword ptr [rcx - 0xa000000], esi ; ret
0x00000200004b43ee : test dword ptr [rcx - 0xa000000], esi ; ret 0xf01
0x00000200000eb507 : test dword ptr [rcx], eax ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000009de42 : test dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000200003f268a : test dword ptr [rcx], eax ; je 0x200003f262d ; mov eax, 0xc0000022 ; ret
0x00000200000c8af8 : test dword ptr [rcx], eax ; ret
0x00000200000ae101 : test dword ptr [rcx], ecx ; add eax, 0xb60f0000 ; ret 0x8d48
0x0000020000574cc3 : test dword ptr [rcx], ecx ; ret 0xffed
0x0000020000193c43 : test dword ptr [rcx], edx ; adc al, 0xf3 ; push rsi ; ret 0xf10
0x00000200000b8d2b : test dword ptr [rcx], esp ; add al, byte ptr [rax] ; add al, ch ; ret
0x00000200003f2af2 : test dword ptr [rcx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000070985d : test dword ptr [rcx], esp ; ret 1
0x000002000043b67d : test dword ptr [rdi + 0x28], esi ; je 0x2000043b697 ; call 0x20000068fd8
0x000002000045a58f : test dword ptr [rdi + 0x33000000], eax ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000003d3c3 : test dword ptr [rdi + 0x480012ee], esp ; mov ecx, esi ; call rbx
0x000002000007ffea : test dword ptr [rdi + rax + 0x10], esi ; add byte ptr [rsi - 1], ah ; ret
0x00000200000ffd17 : test dword ptr [rdi + rbp - 0x7475fff6], ebx ; ret 0
0x000002000013d981 : test dword ptr [rdi + rcx*8 - 0x49f0fff9], edx ; ret
0x00000200004d8005 : test dword ptr [rdi + rdx*2 - 0x3d74fff4], ebp ; ret
0x00000200004e3292 : test dword ptr [rdi - 0x1000000], esp ; ret
0x000002000067c8fc : test dword ptr [rdi - 0x33], eax ; jmp qword ptr [rcx]
0x0000020000480f7a : test dword ptr [rdi - 0x74ffeff8], ebx ; ret
0x00000200004b70d0 : test dword ptr [rdi - 0x74fff240], edi ; ret
0x00000200000d4967 : test dword ptr [rdi - 0x74fff3c4], ebp ; ret
0x00000200004f4822 : test dword ptr [rdi - 0x74fff4cf], esp ; ret
0x000002000051dd18 : test dword ptr [rdi - 0x74fff692], edi ; ret
0x0000020000099e71 : test dword ptr [rdi - 0x75000000], esp ; ret
0x0000020000383ec2 : test dword ptr [rdi - 0x9ffe519], eax ; ret
0x0000020000097a48 : test dword ptr [rdi - 0xa000000], ebp ; ret
0x00000200000778b0 : test dword ptr [rdi - 0xfffff9], esi ; ret
0x0000020000383e42 : test dword ptr [rdi], eax ; call 0x1ffc42f3e69
0x00000200000564ec : test dword ptr [rdi], eax ; or byte ptr [rax], al ; add dh, dh ; ret
0x000002000020cdc3 : test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000013a5f2 : test dword ptr [rdi], ebp ; jmp 0x2000013a603
0x0000020000709678 : test dword ptr [rdi], ebp ; ret 1
0x00000200000aa8b4 : test dword ptr [rdi], ebx ; add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x200000aa885
0x0000020000426088 : test dword ptr [rdi], ebx ; call qword ptr [rbx]
0x00000200004a0dc5 : test dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x0000020000031fe6 : test dword ptr [rdi], edi ; add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret
0x0000020000012dce : test dword ptr [rdi], edx ; adc eax, dword ptr [rip + 0x3b92050b] ; ret
0x00000200000c63fb : test dword ptr [rdx + 0x98], edx ; jne 0x200000c640c ; ret
0x00000200004b94df : test dword ptr [rdx + 0xc], ecx ; jne 0x200004b94f0 ; mov al, r9b ; ret
0x00000200004c0b9d : test dword ptr [rdx + 0xd], edx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000047677a : test dword ptr [rdx + 1], edi ; add byte ptr [rax], al ; inc edx ; jmp 0x2000047676b
0x0000020000066c5b : test dword ptr [rdx + rax - 0x6cc80000], edx ; ret 0
0x000002000043b54e : test dword ptr [rdx + rax], esi ; add al, ch ; pop rax ; ret
0x00000200003bbc00 : test dword ptr [rdx + rcx - 0x74b30000], eax ; ret
0x00000200001719b7 : test dword ptr [rdx - 0x12], eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000010ca4d : test dword ptr [rdx - 0x4e], edx ; or dword ptr [rax], eax ; xor al, al ; ret
0x000002000010d08f : test dword ptr [rdx - 0x53], eax ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000418155 : test dword ptr [rdx - 0x74ffeb7b], eax ; ret
0x000002000046b217 : test dword ptr [rdx - 0x74ffeefa], ebx ; ret
0x00000200004f42df : test dword ptr [rdx - 0x74fff4cb], esp ; add al, 0x3b ; ret
0x000002000051dc06 : test dword ptr [rdx - 0x74fff691], ebx ; ret
0x000002000012e2a8 : test dword ptr [rdx - 0x74fff79b], ebx ; ret
0x00000200006fe8e8 : test dword ptr [rdx - 0x74fffdb1], ebx ; ret
0x0000020000072a59 : test dword ptr [rdx - 0x74fffff7], esp ; ret 0xe083
0x00000200000537ff : test dword ptr [rdx - 0x76000000], ebp ; push rbx ; sbb dh, dh ; ret 0xf20
0x00000200003d50a6 : test dword ptr [rdx - 0x9ffe89b], esi ; ret
0x00000200001063d3 : test dword ptr [rdx - 8], ebp ; or dword ptr [rax], eax ; ret
0x00000200000e42af : test dword ptr [rdx], eax ; jo 0x200000e42c5 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001029d3 : test dword ptr [rdx], ebp ; adc byte ptr [rdx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000056309f : test dword ptr [rdx], ebp ; jmp 0x200005630aa
0x00000200000a1606 : test dword ptr [rdx], ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001e3e94 : test dword ptr [rdx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c2af7 : test dword ptr [rdx], ecx ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000007c31e : test dword ptr [rdx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0x8d4c
0x00000200000ce6fc : test dword ptr [rdx], edi ; add dword ptr [rax], eax ; add bh, bh ; ret
0x0000020000079815 : test dword ptr [rdx], edi ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf40
0x000002000046e7b7 : test dword ptr [rdx], edi ; ficom word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000013f036 : test dword ptr [rdx], edi ; mov edi, 0xb60f0007 ; ret
0x000002000003e139 : test dword ptr [rdx], esi ; add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000131bcb : test dword ptr [rdx], esi ; or byte ptr [rax], al ; ret
0x000002000039f95e : test dword ptr [rdx], esi ; ret 0x19
0x000002000048c60b : test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e4633 : test dword ptr [rdx], esp ; fcom qword ptr [rsi] ; add dh, dh ; ret 0xf38
0x000002000043535b : test dword ptr [rip - 0x74ffecaa], eax ; ret
0x00000200004cb375 : test dword ptr [rip - 0x74fff314], ebp ; ret
0x000002000070f892 : test dword ptr [rip - 0x74fffe8c], edi ; ret 0x8d48
0x0000020000606798 : test dword ptr [rip - 0x74ffffff], ebx ; ret 0x8941
0x0000020000408b0d : test dword ptr [rsi + 0x3c], edi ; adc eax, 0x1518d00 ; mov eax, edx ; ret
0x0000020000130539 : test dword ptr [rsi + 0x51], eax ; or byte ptr [rax], al ; mov al, 1 ; jmp 0x2000013050d
0x00000200000fcc69 : test dword ptr [rsi + 0x54], eax ; or al, byte ptr [rax] ; xor ecx, ecx ; mov al, cl ; ret
0x000002000015c8ab : test dword ptr [rsi + 2], edx ; add byte ptr [rax], al ; call r10
0x00000200001ed93f : test dword ptr [rsi + rax], ebx ; add bh, bh ; ret 0x8348
0x00000200004e9941 : test dword ptr [rsi + rbx*4 + 0xb], ebx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fc9b2 : test dword ptr [rsi + rdi*8 - 1], ebx ; dec dword ptr [rax - 0x75] ; ret 0x349
0x0000020000389ca6 : test dword ptr [rsi - 0x74ffe552], ebx ; ret
0x00000200003e7c93 : test dword ptr [rsi - 0x74ffe94f], esp ; ret
0x000002000040490d : test dword ptr [rsi - 0x74ffeab9], ecx ; ret
0x0000020000485aa0 : test dword ptr [rsi - 0x74fff030], esp ; ret
0x0000020000493048 : test dword ptr [rsi - 0x74fff0c2], edx ; ret
0x0000020000493ca9 : test dword ptr [rsi - 0x74fff0c4], eax ; ret
0x00000200004c2fe8 : test dword ptr [rsi - 0x74fff2c3], eax ; ret
0x0000020000137b26 : test dword ptr [rsi - 0x74fff7fe], eax ; ret
0x000002000046cf6c : test dword ptr [rsi - 0x75000000], ebp ; ret
0x00000200004a443a : test dword ptr [rsi - 0x75000000], ebx ; ret
0x0000020000419681 : test dword ptr [rsi - 0x75000000], ecx ; ret
0x0000020000133cd2 : test dword ptr [rsi - 0x75000000], esp ; ret 0x6b48
0x00000200004edef5 : test dword ptr [rsi - 0x75fff487], esp ; ret 0xccc3
0x00000200005abd3b : test dword ptr [rsi - 0x7afffffe], eax ; ret
0x0000020000415340 : test dword ptr [rsi - 0x7d000000], edx ; ret
0x00000200000879e4 : test dword ptr [rsi - 0x9fff04e], esp ; ret
0x00000200004c61d0 : test dword ptr [rsi - 0x9fff2e0], esi ; ret 0xf03
0x000002000010e02f : test dword ptr [rsi - 7], edx ; inc dword ptr [rax - 0x9dfe5b1] ; ret
0x000002000037d0d9 : test dword ptr [rsi], 0xc748ffd2 ; ret
0x0000020000295028 : test dword ptr [rsi], eax ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x0000020000092c3d : test dword ptr [rsi], eax ; add al, 0 ; add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x0000020000252a4e : test dword ptr [rsi], eax ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x0000020000434264 : test dword ptr [rsi], ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000200000fb996 : test dword ptr [rsi], ecx ; add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x75], al ; ret
0x00000200000c8ad9 : test dword ptr [rsi], ecx ; ret
0x00000200003f5d19 : test dword ptr [rsi], edi ; add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006492d : test dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000070e560 : test dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000486db0 : test dword ptr [rsi], edx ; ret
0x00000200001228b0 : test dword ptr [rsi], esp ; mov edi, 0xb60f0008 ; ret
0x000002000055c602 : test dword ptr [rsi], esp ; ret
0x0000020000709681 : test dword ptr [rsi], esp ; ret 1
0x00000200001d898b : test dx, dx ; jne 0x200001d899c ; mov dword ptr [r8], eax ; ret
0x0000020000590df6 : test eax, 0x1e6 ; jne 0x20000590e0b ; call 0x200000bd0e9
0x00000200004149bb : test eax, 0x307000 ; jne 0x200004149cc ; ret
0x0000020000124e48 : test eax, 0x3b4c0008 ; ret
0x00000200000550d7 : test eax, 0x3d85c7ff ; lodsb al, byte ptr [rsi] ; ret
0x000002000062066c : test eax, 0x40001 ; je 0x2000062067f ; mov al, 1 ; ret
0x00000200000fa93b : test eax, 0x48000a6f ; add esp, 0x20 ; pop rbx ; ret
0x000002000068f82c : test eax, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x000002000068f1c2 : test eax, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x000002000068f18f : test eax, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x00000200000d5439 : test eax, 0x48c9854d ; cmove eax, edx ; jmp 0x200000d5430
0x000002000062f563 : test eax, 0x48ffb198 ; add esp, 0x68 ; ret
0x0000020000202c63 : test eax, 0x48fff461 ; add esp, 0x60 ; pop rbx ; ret
0x00000200001424af : test eax, 0x48fffffd ; add esp, 0x38 ; ret
0x000002000021a618 : test eax, 0x4baffeb ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0xc7e
0x000002000053da35 : test eax, 0x81000002 ; ret
0x000002000011d369 : test eax, 0x81480003 ; ret
0x0000020000111c4b : test eax, 0x8b000007 ; ret
0x00000200001bbe73 : test eax, 0x8b000d8f ; ret
0x000002000022ea27 : test eax, 0x8b48c032 ; pop rsp ; and al, 0x10 ; ret
0x00000200005194e3 : test eax, 0x8bffb2bf ; ret
0x00000200003f0a5b : test eax, 0x8bffc784 ; ret
0x00000200004efd73 : test eax, 0x8bffda50 ; ret
0x0000020000474d73 : test eax, 0x8bffe200 ; ret
0x0000020000144767 : test eax, 0x8bfffde0 ; ret
0x0000020000020fd9 : test eax, 0x9ba2 ; add byte ptr [rax], al ; ret 0xb0cc
0x0000020000596cfb : test eax, 0xa9e990ff ; ret 0xfff2
0x00000200006ed531 : test eax, 0xb041ffbe ; add eax, ebp ; push rax ; ret
0x000002000056f764 : test eax, 0xc3f60013 ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x000002000059b11c : test eax, 0xc3f6ffd3 ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x000002000068fb22 : test eax, 0xdb8ff ; add al, al ; ret
0x000002000014ef75 : test eax, 0xe9000000 ; add dl, dh ; add byte ptr [rax], al ; ret
0x0000020000580107 : test eax, 0xebffefc0 ; ret 0xc085
0x00000200005857b8 : test eax, 0xf6fff0b2 ; ret
0x00000200003d3bb2 : test eax, 0xf6fffffd ; ret
0x000002000012dde1 : test eax, 0xf7000869 ; ret
0x0000020000644d71 : test eax, 0xfffff ; jne 0x20000644dcf ; xor al, al ; ret
0x000002000019689a : test eax, 0xfffff37d ; ret
0x00000200000e19c6 : test eax, 0xffffff ; je 0x200000e19d5 ; ret
0x00000200000d4b8c : test eax, eax ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200006f7ea1 : test eax, eax ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x0000020000426239 : test eax, eax ; call qword ptr [rbx]
0x00000200000eb230 : test eax, eax ; cmove eax, ecx ; ret
0x000002000047d258 : test eax, eax ; cmove eax, edx ; ret
0x0000020000435fdf : test eax, eax ; cmove eax, r8d ; ret
0x0000020000141fc3 : test eax, eax ; cmovg eax, ecx ; ret
0x00000200005a757c : test eax, eax ; cmovns ebx, dword ptr [rbp - 0x39] ; jmp 0x200004f3833
0x00000200000e05fc : test eax, eax ; cmovns r8d, edx ; jmp 0x200000e05bb
0x000002000003642e : test eax, eax ; je 0x20000036437 ; ret
0x000002000003867f : test eax, eax ; je 0x20000038694 ; mov rdx, rax ; call 0x200000d497d
0x000002000004c464 : test eax, eax ; je 0x2000004c474 ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000086a80 : test eax, eax ; je 0x20000086bd9 ; call rax
0x000002000009b535 : test eax, eax ; je 0x2000009b547 ; cmp dword ptr [rax + 8], edx ; jne 0x2000009b548 ; ret
0x00000200000b4931 : test eax, eax ; je 0x200000b492a ; mov qword ptr [r8], r10 ; ret
0x00000200000b6364 : test eax, eax ; je 0x200000b6356 ; mov qword ptr [r8], r10 ; ret
0x00000200000c59f9 : test eax, eax ; je 0x200000c5a12 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dcd66 : test eax, eax ; je 0x200000dcd79 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e2e60 : test eax, eax ; je 0x200000e2e6e ; mov dword ptr [r8], r9d ; ret
0x00000200001032e5 : test eax, eax ; je 0x200001032f6 ; mov rax, qword ptr [rax + 0x40] ; ret
0x00000200001152c8 : test eax, eax ; je 0x200001152d8 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x00000200001245df : test eax, eax ; je 0x200001245ef ; xor edx, edx ; call r8
0x0000020000129b22 : test eax, eax ; je 0x20000129b2b ; ret
0x000002000012e201 : test eax, eax ; je 0x2000012e20d ; jmp r8
0x000002000013e27e : test eax, eax ; je 0x2000013e288 ; call rax
0x00000200001b5dc2 : test eax, eax ; je 0x200001b5ddb ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200001c28a6 : test eax, eax ; je 0x200001c28b4 ; mov dl, 1 ; mov al, dl ; ret
0x00000200001c665c : test eax, eax ; je 0x200001c6668 ; call rax
0x00000200001cbd71 : test eax, eax ; je 0x200001cbd7b ; call rax
0x00000200001cbdad : test eax, eax ; je 0x200001cbdb7 ; call rax
0x00000200001cbe28 : test eax, eax ; je 0x200001cbe32 ; call rax
0x00000200001cbe89 : test eax, eax ; je 0x200001cbe93 ; call rax
0x00000200001fef09 : test eax, eax ; je 0x200001fef28 ; mov rdx, rdi ; call rax
0x0000020000372f02 : test eax, eax ; je 0x20000372f1d ; mov rcx, r15 ; call rax
0x000002000037a95c : test eax, eax ; je 0x2000037a96e ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x000002000038ac98 : test eax, eax ; je 0x2000038acb9 ; call rax
0x00000200003ac90e : test eax, eax ; je 0x200003ac8d9 ; add rax, r10 ; jmp 0x200003ac8dc
0x00000200003ac8fc : test eax, eax ; je 0x200003ac923 ; add rax, r10 ; jmp 0x200003ac945
0x00000200003ac8ef : test eax, eax ; je 0x200003ac928 ; add rax, r10 ; jmp 0x200003ac8cf
0x00000200003ac92e : test eax, eax ; je 0x200003ac93d ; add rax, r10 ; jmp 0x200003ac8c1
0x00000200003b2de4 : test eax, eax ; je 0x200003b2e5f ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x00000200003be266 : test eax, eax ; je 0x200003be274 ; call rax
0x00000200003e654c : test eax, eax ; je 0x200003e6531 ; xor al, al ; ret
0x00000200003ef6ea : test eax, eax ; je 0x200003ef6f6 ; call r8
0x0000020000461c1e : test eax, eax ; je 0x20000461c2e ; mov rcx, rbx ; call rax
0x00000200004705cb : test eax, eax ; je 0x200004705de ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047126f : test eax, eax ; je 0x20000470fb6 ; call rax
0x000002000048b658 : test eax, eax ; je 0x2000048b669 ; add rax, -0x10 ; ret
0x000002000048d596 : test eax, eax ; je 0x2000048d5a7 ; add rsp, 0x28 ; ret
0x00000200004ab170 : test eax, eax ; je 0x200004ab185 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004b7fbf : test eax, eax ; je 0x200004b7fd2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ccbe6 : test eax, eax ; je 0x200004ccbf0 ; call rax
0x00000200004cf5e7 : test eax, eax ; je 0x200004cf5f1 ; call rax
0x00000200004cf968 : test eax, eax ; je 0x200004cf972 ; call rax
0x00000200004dd8a2 : test eax, eax ; je 0x200004dd8b5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e004a : test eax, eax ; je 0x200004e0075 ; call rax
0x0000020000505f88 : test eax, eax ; je 0x20000505f98 ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x0000020000511b54 : test eax, eax ; je 0x20000511b5e ; call rax
0x00000200005415bb : test eax, eax ; je 0x200005415cf ; mov rcx, r15 ; call rax
0x00000200005d005c : test eax, eax ; je 0x200005d0068 ; jmp qword ptr [rax]
0x00000200005e6869 : test eax, eax ; je 0x200005e6873 ; call rax
0x00000200005f919c : test eax, eax ; je 0x200005f91bb ; call rax
0x0000020000609ebf : test eax, eax ; je 0x20000609ec9 ; call rax
0x0000020000609f5a : test eax, eax ; je 0x20000609f64 ; call rax
0x000002000061cb5e : test eax, eax ; je 0x2000061cb9a ; add rax, rdx ; jmp 0x2000061cb71
0x0000020000634156 : test eax, eax ; je 0x200006341bc ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x0000020000669de4 : test eax, eax ; je 0x20000669df0 ; jmp rax
0x000002000066caec : test eax, eax ; je 0x2000066cb69 ; mov r8d, esi ; call rax
0x000002000066cfa8 : test eax, eax ; je 0x2000066cfb8 ; mov cl, r9b ; call rax
0x000002000066e40d : test eax, eax ; je 0x2000066e412 ; mov dword ptr [r8], r9d ; ret
0x00000200006728aa : test eax, eax ; je 0x200006728c5 ; mov rcx, rbx ; call rax
0x0000020000672912 : test eax, eax ; je 0x2000067291f ; call rax
0x00000200006729be : test eax, eax ; je 0x200006729d9 ; mov rcx, rdi ; call rax
0x0000020000672a35 : test eax, eax ; je 0x20000672a49 ; mov rcx, rbx ; call rax
0x0000020000672a4a : test eax, eax ; je 0x20000672a60 ; mov edx, edi ; mov rcx, rbx ; call rax
0x0000020000672b45 : test eax, eax ; je 0x20000672b55 ; mov rcx, rdi ; call rax
0x0000020000672b5d : test eax, eax ; je 0x20000672b6d ; mov rcx, rdi ; call rax
0x0000020000672bb6 : test eax, eax ; je 0x20000672bc6 ; mov rcx, rdi ; call rax
0x0000020000110b91 : test eax, eax ; jle 0x20000110b9a ; ret
0x00000200004a33b1 : test eax, eax ; jle 0x200004a33ba ; ret
0x0000020000036445 : test eax, eax ; jne 0x20000036456 ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000038caa : test eax, eax ; jne 0x20000038cbd ; ret
0x000002000007007a : test eax, eax ; jne 0x20000070079 ; mov rax, rcx ; ret
0x000002000008ece0 : test eax, eax ; jne 0x2000008ecef ; mov eax, r8d ; ret
0x0000020000091512 : test eax, eax ; jne 0x2000009151b ; ret
0x00000200000b5944 : test eax, eax ; jne 0x200000b5943 ; mov rax, rcx ; ret
0x00000200000dc08a : test eax, eax ; jne 0x200000dc09b ; ret
0x00000200000dc090 : test eax, eax ; jne 0x200000dc0a1 ; xor eax, eax ; ret
0x00000200000de4db : test eax, eax ; jne 0x200000de57b ; ret
0x00000200000e29f3 : test eax, eax ; jne 0x200000e2a22 ; mov rax, rcx ; ret
0x00000200000ea40f : test eax, eax ; jne 0x200000ea422 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000ea94b : test eax, eax ; jne 0x200000ea954 ; ret
0x00000200000ead08 : test eax, eax ; jne 0x200000ead15 ; xor eax, eax ; ret
0x00000200000eb844 : test eax, eax ; jne 0x200000eb851 ; mov al, 1 ; ret
0x00000200000ec998 : test eax, eax ; jne 0x200000ec9ab ; mov eax, 0xc0000001 ; ret
0x00000200000fcdc1 : test eax, eax ; jne 0x200000fcde7 ; btr rax, 0xd ; ret
0x00000200000fce15 : test eax, eax ; jne 0x200000fce2e ; ret
0x000002000010af96 : test eax, eax ; jne 0x2000010afa2 ; mov al, dl ; ret
0x000002000010af96 : test eax, eax ; jne 0x2000010afa3 ; mov al, dl ; ret
0x000002000011527e : test eax, eax ; jne 0x20000115281 ; mov rcx, r8 ; jmp rdx
0x00000200001234ed : test eax, eax ; jne 0x20000123500 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001315ed : test eax, eax ; jne 0x200001315f6 ; ret
0x0000020000140693 : test eax, eax ; jne 0x20000140689 ; ret
0x0000020000140bb9 : test eax, eax ; jne 0x20000140bac ; ret
0x0000020000141f4c : test eax, eax ; jne 0x20000141f46 ; mov rax, rcx ; ret
0x0000020000141f67 : test eax, eax ; jne 0x20000141f61 ; mov rax, rcx ; ret
0x000002000014206d : test eax, eax ; jne 0x2000014208f ; xor eax, eax ; ret
0x00000200001421d3 : test eax, eax ; jne 0x2000014219f ; xor eax, eax ; ret
0x000002000014d8a2 : test eax, eax ; jne 0x2000014d881 ; xor eax, eax ; ret
0x000002000016fd42 : test eax, eax ; jne 0x2000016fd22 ; jmp 0x2000016fd10
0x00000200000c00b8 : test eax, eax ; jne 0x20000192718 ; ret
0x00000200000ffb6a : test eax, eax ; jne 0x200001a2bea ; ret
0x00000200001a9d68 : test eax, eax ; jne 0x200001a9d67 ; mov rax, rcx ; ret
0x00000200001c4610 : test eax, eax ; jne 0x200001c4619 ; ret
0x00000200001cda81 : test eax, eax ; jne 0x200001cda7e ; add rsp, 0x28 ; ret
0x0000020000208a93 : test eax, eax ; jne 0x20000208a58 ; ret
0x0000020000210313 : test eax, eax ; jne 0x2000021031c ; ret
0x0000020000210368 : test eax, eax ; jne 0x2000021034f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021793a : test eax, eax ; jne 0x20000217949 ; mov r8, r10 ; jmp 0x2000021795d
0x000002000043158d : test eax, eax ; jne 0x20000431596 ; ret
0x0000020000442240 : test eax, eax ; jne 0x2000044223a ; ret
0x00000200004496d5 : test eax, eax ; jne 0x200004496c6 ; ret
0x000002000046536a : test eax, eax ; jne 0x2000046537b ; add rsp, 0x28 ; ret
0x0000020000482025 : test eax, eax ; jne 0x2000048201b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049e051 : test eax, eax ; jne 0x2000049e065 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x000002000049e066 : test eax, eax ; jne 0x2000049e079 ; test rdx, rdx ; je 0x2000049e05e ; ret
0x00000200004a0646 : test eax, eax ; jne 0x200004a0652 ; mov al, dl ; ret
0x00000200004a0646 : test eax, eax ; jne 0x200004a0653 ; mov al, dl ; ret
0x00000200004b1ab7 : test eax, eax ; jne 0x200004b1aa7 ; xor eax, eax ; ret
0x0000020000600a2f : test eax, eax ; jne 0x20000600a06 ; add rsp, 0x38 ; ret
0x0000020000619a8c : test eax, eax ; jne 0x20000619a9f ; mov eax, 0xc00000bb ; ret
0x0000020000644dc2 : test eax, eax ; jne 0x20000644d7e ; mov al, 1 ; ret
0x000002000064dc56 : test eax, eax ; jne 0x2000064dc67 ; add rsp, 0x28 ; ret
0x0000020000666f23 : test eax, eax ; jne 0x20000666f2c ; ret
0x000002000066844a : test eax, eax ; jne 0x20000668428 ; ret
0x000002000066de34 : test eax, eax ; jne 0x2000066de41 ; xor eax, eax ; ret
0x0000020000673337 : test eax, eax ; jne 0x2000067334a ; mov eax, 0xc000042a ; ret
0x00000200006733bb : test eax, eax ; jne 0x200006733ce ; mov eax, 0xc000042a ; ret
0x0000020000674c60 : test eax, eax ; jne 0x20000674c55 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007193a5 : test eax, eax ; jne 0x200007193b6 ; add rsp, 0x28 ; ret
0x000002000009c774 : test eax, eax ; jns 0x2000009c785 ; add rsp, 0x58 ; ret
0x000002000013004b : test eax, eax ; jns 0x2000013005a ; mov r8d, r10d ; jmp 0x20000130017
0x0000020000141fb6 : test eax, eax ; jns 0x20000141fc5 ; or eax, 0xffffffff ; ret
0x00000200001f6e05 : test eax, eax ; jns 0x200001f6e18 ; mov eax, 1 ; ret
0x00000200000b491f : test eax, eax ; js 0x200000b4934 ; ret
0x00000200000b634b : test eax, eax ; js 0x200000b6367 ; ret
0x00000200000d4539 : test eax, eax ; js 0x200000d4546 ; xor eax, eax ; ret
0x00000200000d8129 : test eax, eax ; js 0x200000d813a ; add rsp, 0x28 ; ret
0x00000200000e19b0 : test eax, eax ; js 0x200000e19ae ; mov rax, rdx ; ret
0x00000200000e19b0 : test eax, eax ; js 0x200000e19af ; mov rax, rdx ; ret
0x00000200000e7a2c : test eax, eax ; js 0x200000e7a27 ; mov rax, rdx ; ret
0x00000200000e7a2c : test eax, eax ; js 0x200000e7a28 ; mov rax, rdx ; ret
0x00000200000f2191 : test eax, eax ; js 0x200000f219e ; xor al, al ; ret
0x000002000047ffce : test eax, eax ; js 0x2000047ffdb ; xor eax, eax ; ret
0x0000020000482d1b : test eax, eax ; js 0x20000482d28 ; xor eax, eax ; ret
0x0000020000070689 : test eax, eax ; sete al ; add rsp, 0x28 ; ret
0x00000200004630a1 : test eax, eax ; setg al ; ret
0x000002000037f59e : test eax, eax ; setne al ; add rsp, 0x28 ; ret
0x00000200001d29f3 : test eax, eax ; setne al ; ret
0x00000200000f75a9 : test eax, eax ; setns al ; add rsp, 0x28 ; ret
0x00000200000dd67c : test eax, ebp ; ret 0xb
0x0000020000389849 : test eax, ebx ; or byte ptr [rax], al ; add dh, dh ; ret
0x000002000007f62b : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret
0x000002000005ed43 : test eax, ecx ; je 0x2000005ed56 ; mov eax, 1 ; ret
0x000002000020730c : test eax, ecx ; je 0x20000207319 ; xor al, al ; ret
0x000002000043113c : test eax, ecx ; jne 0x20000431132 ; mov al, 1 ; ret
0x000002000012d010 : test eax, ecx ; setne dl ; mov eax, edx ; ret
0x0000020000392fd8 : test eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200004ab285 : test eax, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x00000200006f6c26 : test eax, edi ; mov al, 2 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000514560 : test eax, edx ; int 9
0x0000020000386b61 : test eax, edx ; ret
0x0000020000596d0b : test eax, esi ; ret 0xfff2
0x000002000055ee75 : test eax, esi ; xor bl, ch ; jmp qword ptr [rcx]
0x000002000005be6e : test eax, esp ; or al, 0 ; add dh, dh ; ret 0x7508
0x0000020000635692 : test ebp, 0x8b34ebff ; ret
0x0000020000027a71 : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000009b159 : test ebp, eax ; ret 0xe
0x0000020000545bf6 : test ebp, eax ; ret 0xffe7
0x0000020000122147 : test ebp, eax ; ret 8
0x000002000005f2c1 : test ebp, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200003ed047 : test ebp, ebx ; dec dword ptr [rax - 1] ; ret
0x0000020000066e9e : test ebp, ecx ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; lodsd eax, dword ptr [rsi] ; ret
0x00000200000ccbb8 : test ebp, edi ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000051f177 : test ebp, edx ; ret 0x8bff
0x0000020000089eaa : test ebp, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x000002000046378b : test ebp, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000040acd : test ebp, esp ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x00000200000890f3 : test ebx, ebp ; or byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x00000200001841c7 : test ebx, ebx ; je 0x200001841d6 ; or rax, r10 ; jmp 0x200001841d9
0x00000200000a4e58 : test ebx, ebx ; jne 0x200000a4e4c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ba91f : test ebx, ebx ; jne 0x200000ba91b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f04d2 : test ebx, ebx ; jne 0x200000f04e5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001098c2 : test ebx, ebx ; jne 0x200001098ee ; add rsp, 0x40 ; pop rbx ; ret
0x000002000011449f : test ebx, ebx ; jne 0x200001144b2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d4c15 : test ebx, ebx ; jne 0x200001d4be2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d4d38 : test ebx, ebx ; jne 0x200001d4d0e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ea6f9 : test ebx, ebx ; jne 0x200001ea6f4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000222974 : test ebx, ebx ; jne 0x2000022296f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004daec0 : test ebx, ebx ; jne 0x200004dae9e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005ddf20 : test ebx, ebx ; jne 0x200005ddf1d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007094c2 : test ebx, edi ; ret 1
0x0000020000121e45 : test ebx, esi ; ret 8
0x000002000041469f : test ebx, esp ; add byte ptr [rax], al ; add dh, bh ; ret
0x000002000012208b : test ebx, esp ; ret 8
0x0000020000148e1e : test ecx, 0x175ffff ; ret
0x0000020000209f8d : test ecx, 0xff00 ; setbe al ; ret
0x00000200000a6e25 : test ecx, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000231ec6 : test ecx, eax ; jne 0x20000231ed5 ; mov byte ptr [rdx + 2], cl ; ret
0x00000200000c8a0b : test ecx, eax ; ret
0x0000020000724ff7 : test ecx, ebp ; ret 0x44ff
0x0000020000393ee8 : test ecx, ebx ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200004ace5b : test ecx, ebx ; cmp cl, byte ptr [rsi] ; add byte ptr [rbx], bh ; ret 0x8b44
0x0000020000580227 : test ecx, ebx ; ret
0x00000200003ca7d2 : test ecx, ecx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200000d543b : test ecx, ecx ; cmove rax, rdx ; jmp 0x200000d542e
0x000002000012a341 : test ecx, ecx ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x0000020000674a10 : test ecx, ecx ; cmovne eax, edx ; ret
0x000002000003013c : test ecx, ecx ; je 0x2000003014d ; add rsp, 0x28 ; ret
0x000002000008cb2e : test ecx, ecx ; je 0x2000008cb43 ; mov rcx, rdx ; call r9
0x000002000010fb56 : test ecx, ecx ; je 0x2000010fb5c ; and qword ptr [rcx], 0 ; ret
0x0000020000130154 : test ecx, ecx ; je 0x2000013015e ; call rcx
0x00000200001c18dc : test ecx, ecx ; je 0x200001c18ec ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001c18e7 : test ecx, ecx ; je 0x200001c18f7 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001c7859 : test ecx, ecx ; je 0x200001c7865 ; call r9
0x00000200001cbd2d : test ecx, ecx ; je 0x200001cbd37 ; call rcx
0x00000200001cbd50 : test ecx, ecx ; je 0x200001cbd5a ; call rcx
0x00000200001cbd8d : test ecx, ecx ; je 0x200001cbd99 ; jmp rcx
0x00000200001cbddc : test ecx, ecx ; je 0x200001cbde8 ; jmp rcx
0x00000200001cbe4c : test ecx, ecx ; je 0x200001cbe56 ; call rcx
0x00000200001cbe69 : test ecx, ecx ; je 0x200001cbe75 ; jmp rcx
0x00000200001d6e14 : test ecx, ecx ; je 0x200001d6e28 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d896d : test ecx, ecx ; je 0x200001d8980 ; mov eax, 0xc0000225 ; ret
0x00000200002198d7 : test ecx, ecx ; je 0x200002198e5 ; mov dword ptr [rcx], r10d ; ret
0x0000020000372c23 : test ecx, ecx ; je 0x2000036a306 ; call rcx
0x000002000037a622 : test ecx, ecx ; je 0x2000037a62c ; call rcx
0x000002000037f3bb : test ecx, ecx ; je 0x2000037f3c9 ; add dword ptr [rcx], r11d ; ret
0x0000020000438bec : test ecx, ecx ; je 0x20000438bff ; xor edx, edx ; call 0x20000294e28
0x000002000043b925 : test ecx, ecx ; je 0x2000043b93d ; call 0x20000063d9b
0x0000020000442416 : test ecx, ecx ; je 0x2000044242e ; call 0x20000068fd7
0x0000020000442b18 : test ecx, ecx ; je 0x20000442b28 ; call 0x20000068fd7
0x0000020000444291 : test ecx, ecx ; je 0x200004442a1 ; call 0x20000068fd7
0x0000020000472bf1 : test ecx, ecx ; je 0x20000472c2e ; mov eax, r10d ; ret
0x0000020000472bf1 : test ecx, ecx ; je 0x20000472c2f ; mov eax, r10d ; ret
0x00000200004c441b : test ecx, ecx ; je 0x200004c442b ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004f1543 : test ecx, ecx ; je 0x200004f1555 ; ret
0x000002000058cd53 : test ecx, ecx ; je 0x2000058cd62 ; call 0x20000068fd6
0x000002000058cdc1 : test ecx, ecx ; je 0x2000058cdd7 ; call 0x20000068fd6
0x000002000066da48 : test ecx, ecx ; je 0x2000066da5c ; xor edx, edx ; call 0x20000294e29
0x00000200000249f0 : test ecx, ecx ; jne 0x200000249e8 ; mov eax, 0xc0000109 ; ret
0x00000200000339ad : test ecx, ecx ; jne 0x200000339ba ; xor eax, eax ; ret
0x00000200000366df : test ecx, ecx ; jne 0x200000366ee ; mov rax, r9 ; ret
0x0000020000051962 : test ecx, ecx ; jne 0x2000005196b ; ret
0x000002000008cc07 : test ecx, ecx ; jne 0x2000008cc10 ; ret
0x000002000009bb0a : test ecx, ecx ; jne 0x2000009bb19 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000a4e39 : test ecx, ecx ; jne 0x200000a4e42 ; ret
0x00000200000c5d24 : test ecx, ecx ; jne 0x200000c5d2d ; ret
0x00000200000e2c37 : test ecx, ecx ; jne 0x200000e2c33 ; ret
0x00000200000e44bb : test ecx, ecx ; jne 0x200000e44b3 ; mov rax, rdx ; ret
0x00000200000f9ed3 : test ecx, ecx ; jne 0x200000f9ee6 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200001145c2 : test ecx, ecx ; jne 0x20000114562 ; mov rax, r8 ; ret
0x0000020000123833 : test ecx, ecx ; jne 0x20000123847 ; test al, al ; jne 0x20000123847 ; mov eax, edx ; ret
0x00000200001301e5 : test ecx, ecx ; jne 0x200001301f2 ; xor al, al ; ret
0x00000200001400d9 : test ecx, ecx ; jne 0x200001400e6 ; xor eax, eax ; ret
0x000002000014010d : test ecx, ecx ; jne 0x2000014011a ; xor eax, eax ; ret
0x0000020000140d31 : test ecx, ecx ; jne 0x20000140d3e ; xor eax, eax ; ret
0x0000020000033845 : test ecx, ecx ; jne 0x200001687f6 ; ret
0x00000200001c2902 : test ecx, ecx ; jne 0x200001c28e4 ; xor eax, eax ; ret
0x00000200001c538c : test ecx, ecx ; jne 0x200001c539f ; mov eax, 0xc000000d ; ret
0x00000200001d931f : test ecx, ecx ; jne 0x200001d932e ; or eax, 0xffffffff ; ret
0x0000020000206eb5 : test ecx, ecx ; jne 0x20000206ec8 ; mov eax, 0xc000000d ; ret
0x00000200002091e7 : test ecx, ecx ; jne 0x200002091e3 ; ret
0x000002000036d89a : test ecx, ecx ; jne 0x2000036d8a3 ; ret
0x000002000038a715 : test ecx, ecx ; jne 0x2000038a728 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003b1167 : test ecx, ecx ; jne 0x200003b1167 ; jmp 0x200003b1188
0x00000200003eed02 : test ecx, ecx ; jne 0x200003eed15 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004062ec : test ecx, ecx ; jne 0x200004062cb ; mov eax, r10d ; jmp 0x200004062d6
0x000002000041621f : test ecx, ecx ; jne 0x20000416230 ; add rsp, 0x28 ; ret
0x00000200004167bd : test ecx, ecx ; jne 0x200004167c6 ; ret
0x000002000043886f : test ecx, ecx ; jne 0x200004388da ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044006d : test ecx, ecx ; jne 0x2000044007e ; add rsp, 0x28 ; ret
0x000002000048dd29 : test ecx, ecx ; jne 0x2000048dd3c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004bfe41 : test ecx, ecx ; jne 0x200004bfe52 ; add rsp, 0x28 ; ret
0x00000200004daaf2 : test ecx, ecx ; jne 0x200004dab05 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005ba4dc : test ecx, ecx ; jne 0x200005ba4bb ; mov rcx, rbx ; call 0x20000426711
0x00000200005ce6d9 : test ecx, ecx ; jne 0x200005ce6ec ; mov eax, 0xc000000d ; ret
0x00000200005ceea9 : test ecx, ecx ; jne 0x200005ceebc ; mov eax, 0xc000000d ; ret
0x00000200005d8eef : test ecx, ecx ; jne 0x200005d8efc ; xor eax, eax ; ret
0x0000020000614261 : test ecx, ecx ; jne 0x2000061426e ; xor al, al ; ret
0x000002000062e130 : test ecx, ecx ; jne 0x2000062e11e ; mov rax, rcx ; ret
0x000002000070cd29 : test ecx, ecx ; jne 0x2000070cd32 ; ret
0x000002000071755d : test ecx, ecx ; jne 0x2000071754d ; ret
0x00000200004b3fd0 : test ecx, ecx ; jns 0x200004b3fe1 ; add rsp, 0x28 ; ret
0x00000200000f5e11 : test ecx, ecx ; js 0x200000f5e27 ; mov rax, rdx ; ret
0x00000200000f5e11 : test ecx, ecx ; js 0x200000f5e28 ; mov rax, rdx ; ret
0x00000200001221c0 : test ecx, ecx ; ret 8
0x00000200004f98e8 : test ecx, edx ; je 0x200004f98f5 ; mov al, 1 ; ret
0x000002000049fe46 : test ecx, edx ; sete al ; ret
0x00000200004c4c90 : test ecx, edx ; setne al ; ret
0x000002000042622b : test ecx, esi ; call qword ptr [rbx]
0x00000200005901e3 : test ecx, esi ; ret 0xfff1
0x0000020000688ae2 : test ecx, esp ; jmp qword ptr [rcx]
0x0000020000508cf3 : test ecx, esp ; push rax ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000029c65 : test ecx, esp ; ret 0x13
0x00000200000c8b32 : test edi, eax ; ret 0xc
0x000002000038e924 : test edi, edi ; je 0x2000038e8ed ; jmp 0x2000038e8c9
0x00000200003e3ed7 : test edi, edi ; je 0x200003e3eeb ; mov rcx, r14 ; call r15
0x00000200003cc5ff : test edi, edx ; enter 0x17, -0xa ; ret
0x000002000017530f : test edi, edx ; ret
0x0000020000121e56 : test edi, edx ; ret 8
0x0000020000040c9d : test edi, esi ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8e ; ret
0x00000200005d190e : test edi, esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x00000200001214d1 : test edi, esi ; leave ; or byte ptr [rax], al ; ret
0x000002000055c62c : test edi, esp ; ret 0xffea
0x0000020000415b3a : test edx, 0x307000 ; jne 0x20000415b4b ; ret
0x0000020000520124 : test edx, 0xfffffffd ; je 0x20000520135 ; ret
0x00000200000692a4 : test edx, eax ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200006fa11e : test edx, eax ; jne 0x200006fa0eb ; xor eax, eax ; ret
0x00000200000ac36e : test edx, ebp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003b68f4 : test edx, ebp ; ret
0x0000020000174993 : test edx, ecx ; mov ah, 0xee ; push rsi ; ret 0xf10
0x000002000008decb : test edx, edx ; je 0x2000008ded9 ; add eax, dword ptr [rdx + 0x60] ; ret
0x00000200000b4f6e : test edx, edx ; je 0x200000b4f6b ; mov eax, 0xc000000d ; ret
0x00000200000c0087 : test edx, edx ; je 0x200000c0098 ; mov word ptr [rcx], r11w ; ret
0x00000200000e1fff : test edx, edx ; je 0x200000e2010 ; mov word ptr [rcx], r11w ; ret
0x00000200000ffbb1 : test edx, edx ; je 0x200000ffbc0 ; mov dword ptr [rcx + 0x2c], edx ; ret
0x0000020000124607 : test edx, edx ; je 0x20000124611 ; call rdx
0x00000200001b5de7 : test edx, edx ; je 0x20000131616 ; call rdx
0x0000020000131d9a : test edx, edx ; je 0x20000131da8 ; xor ecx, ecx ; call rdx
0x00000200001777de : test edx, edx ; je 0x200001777e8 ; call rax
0x00000200001c4dcf : test edx, edx ; je 0x200001c4dd9 ; call rdx
0x00000200001cbe00 : test edx, edx ; je 0x200001cbe0c ; jmp rdx
0x00000200001cbea5 : test edx, edx ; je 0x200001cbeb1 ; jmp rdx
0x00000200003fc73c : test edx, edx ; je 0x200003fc74c ; mov rcx, rsi ; call rdx
0x0000020000423e78 : test edx, edx ; je 0x20000423e92 ; mov rcx, r10 ; call 0x20000520189
0x000002000049275c : test edx, edx ; je 0x20000492768 ; jmp r10
0x000002000049e06b : test edx, edx ; je 0x2000049e059 ; ret
0x000002000059c857 : test edx, edx ; je 0x2000059c869 ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005b9a01 : test edx, edx ; je 0x200005b9a0d ; mov dword ptr [rdx], eax ; ret
0x00000200000645b3 : test edx, edx ; jne 0x200000645bc ; ret
0x00000200000657ff : test edx, edx ; jne 0x20000065808 ; ret
0x000002000009d2e3 : test edx, edx ; jne 0x2000009d2ec ; ret
0x00000200000b55dc : test edx, edx ; jne 0x200000b55eb ; mov qword ptr [r8], rcx ; ret
0x00000200000b8183 : test edx, edx ; jne 0x200000b8190 ; mov eax, ecx ; ret
0x00000200000b8c25 : test edx, edx ; jne 0x200000b8c35 ; or byte ptr [rcx + 9], 4 ; ret
0x00000200000c4d40 : test edx, edx ; jne 0x200000c4d62 ; mov eax, 1 ; ret
0x00000200000fdb70 : test edx, edx ; jne 0x200000fdb79 ; ret
0x00000200001048fa : test edx, edx ; jne 0x200001048ec ; ret
0x000002000010b4a7 : test edx, edx ; jne 0x2000010b4c7 ; add rsp, 0x28 ; ret
0x0000020000068fad : test edx, edx ; jne 0x2000017799c ; ret
0x0000020000131bc8 : test edx, edx ; jne 0x200001b5e0a ; ret
0x00000200001bf2e4 : test edx, edx ; jne 0x200001bf2d6 ; ret
0x00000200001d898c : test edx, edx ; jne 0x200001d899b ; mov dword ptr [r8], eax ; ret
0x0000020000202654 : test edx, edx ; jne 0x20000202661 ; xor eax, eax ; ret
0x000002000037e036 : test edx, edx ; jne 0x2000037e045 ; mov eax, r10d ; jmp 0x2000037e04e
0x00000200003ef4bc : test edx, edx ; jne 0x200003ef4b6 ; mov eax, 0xc000000d ; ret
0x000002000048bbd0 : test edx, edx ; jne 0x2000048bbe2 ; xor eax, eax ; ret
0x000002000049f2ae : test edx, edx ; jne 0x2000049f2bb ; xor eax, eax ; ret
0x00000200004a061d : test edx, edx ; jne 0x200004a0626 ; ret
0x00000200004ad6a8 : test edx, edx ; jne 0x200004ad6b5 ; mov al, 1 ; ret
0x00000200005cee23 : test edx, edx ; jne 0x200005cee32 ; lea eax, dword ptr [rdx + 1] ; ret
0x0000020000672454 : test edx, edx ; jne 0x20000672445 ; ret
0x00000200006f8d05 : test edx, edx ; jne 0x20000722718 ; ret
0x00000200005c8657 : test edx, edx ; sete cl ; mov eax, ecx ; ret
0x00000200000b74b0 : test edx, edx ; setne dl ; mov eax, edx ; ret
0x0000020000075e1e : test edx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000003b73f : test edx, esi ; add eax, dword ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x80], al ; ret
0x000002000012afed : test edx, esi ; je 0x2000012b000 ; add byte ptr [rsi - 1], ah ; ret 0xf44
0x00000200006fa11d : test edx, r8d ; jne 0x200006fa0ec ; xor eax, eax ; ret
0x000002000004f568 : test esi, eax ; or eax, 0xc1490000 ; call qword ptr [rax]
0x00000200003f5c95 : test esi, ebp ; add al, 0x16 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000038db2a : test esi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000055c635 : test esi, ebx ; ret 0xffea
0x00000200000ac352 : test esi, ecx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000006485f : test esi, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x00000200004e67be : test esi, ecx ; ret
0x000002000011832a : test esi, ecx ; xor dword ptr [rcx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004af95f : test esi, edi ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003ed903 : test esi, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000043d576 : test esi, edi ; call qword ptr [rdx]
0x0000020000168c89 : test esi, edi ; mov ebx, 0x6ce9ffec ; ret 0xffec
0x00000200001ced9c : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000002c6b8 : test esi, edx ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000594ab7 : test esi, edx ; push rsi ; ret
0x0000020000387904 : test esi, esi ; ret 0x1a
0x000002000042603e : test esi, esp ; call qword ptr [rbx]
0x000002000048c661 : test esi, esp ; jbe 0x2000048c67b ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000425fe0 : test esp, eax ; call qword ptr [rbx]
0x0000020000545c29 : test esp, eax ; ret 0xffe7
0x00000200000bf0ae : test esp, eax ; xor cl, byte ptr [rip - 0x14e07700] ; ret 0x8b48
0x000002000010b0f4 : test esp, ebp ; ret
0x00000200000a56ea : test esp, ebx ; or dword ptr [rax], eax ; add dh, dh ; ret
0x000002000059e4d1 : test esp, ebx ; ret
0x00000200004af975 : test esp, ecx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000005ff8f : test esp, ecx ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x000002000020efcf : test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200003cab2a : test esp, edi ; rcl dword ptr [rdi], cl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000893ce : test esp, esi ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0xc149
0x0000020000456771 : test esp, esi ; call qword ptr [rcx]
0x00000200003fafe4 : test esp, esp ; ret 0x15
0x000002000049275b : test r10, r10 ; je 0x20000492769 ; jmp r10
0x00000200000b8182 : test r10, r10 ; jne 0x200000b8191 ; mov eax, ecx ; ret
0x000002000010b4a6 : test r10d, r10d ; jne 0x2000010b4c8 ; add rsp, 0x28 ; ret
0x000002000049f2ad : test r10d, r10d ; jne 0x2000049f2bc ; xor eax, eax ; ret
0x00000200000b74af : test r10d, r10d ; setne dl ; mov eax, edx ; ret
0x00000200003e3ed6 : test r15, r15 ; je 0x200003e3eec ; mov rcx, r14 ; call r15
0x00000200000b4930 : test r8, r8 ; je 0x200000b492b ; mov qword ptr [r8], r10 ; ret
0x00000200000b6363 : test r8, r8 ; je 0x200000b6357 ; mov qword ptr [r8], r10 ; ret
0x00000200000e2e5f : test r8, r8 ; je 0x200000e2e6f ; mov dword ptr [r8], r9d ; ret
0x00000200001245de : test r8, r8 ; je 0x200001245f0 ; xor edx, edx ; call r8
0x000002000012e200 : test r8, r8 ; je 0x2000012e20e ; jmp r8
0x00000200003ef6e9 : test r8, r8 ; je 0x200003ef6f7 ; call r8
0x000002000066e40c : test r8, r8 ; je 0x2000066e413 ; mov dword ptr [r8], r9d ; ret
0x0000020000038ca9 : test r8, r8 ; jne 0x20000038cbe ; ret
0x0000020000091511 : test r8, r8 ; jne 0x2000009151c ; ret
0x00000200000dc089 : test r8, r8 ; jne 0x200000dc09c ; ret
0x00000200000dc08f : test r8, r8 ; jne 0x200000dc0a2 ; xor eax, eax ; ret
0x0000020000140692 : test r8, r8 ; jne 0x2000014068a ; ret
0x0000020000140bb8 : test r8, r8 ; jne 0x20000140bad ; ret
0x000002000014206c : test r8, r8 ; jne 0x20000142090 ; xor eax, eax ; ret
0x00000200000ffb69 : test r8, r8 ; jne 0x200001a2beb ; ret
0x0000020000208a92 : test r8, r8 ; jne 0x20000208a59 ; ret
0x00000200004496d4 : test r8, r8 ; jne 0x200004496c7 ; ret
0x000002000049e050 : test r8, r8 ; jne 0x2000049e066 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200004db4a2 : test r8b, 0x47 ; jne 0x200004db4af ; ret
0x000002000008e7d5 : test r8b, 2 ; je 0x2000008e7e5 ; mov eax, edx ; ret
0x000002000008e7d5 : test r8b, 2 ; je 0x2000008e7e6 ; mov eax, edx ; ret
0x000002000013fc80 : test r8b, r8b ; jne 0x200001bb619 ; ret
0x000002000047b33b : test r8b, r8b ; jne 0x2000047b34a ; xor eax, eax ; ret
0x000002000047c5a7 : test r8b, r8b ; jne 0x2000047c5b6 ; xor eax, eax ; ret
0x00000200004149ba : test r8d, 0x307000 ; jne 0x200004149cd ; ret
0x00000200000e05fb : test r8d, r8d ; cmovns r8d, edx ; jmp 0x200000e05bc
0x00000200003e654b : test r8d, r8d ; je 0x200003e6532 ; xor al, al ; ret
0x000002000008ecdf : test r8d, r8d ; jne 0x2000008ecf0 ; mov eax, r8d ; ret
0x000002000066de33 : test r8d, r8d ; jne 0x2000066de42 ; xor eax, eax ; ret
0x000002000047ffcd : test r8d, r8d ; js 0x2000047ffdc ; xor eax, eax ; ret
0x00000200000d543a : test r9, r9 ; cmove rax, rdx ; jmp 0x200000d542f
0x000002000008cb2d : test r9, r9 ; je 0x2000008cb44 ; mov rcx, rdx ; call r9
0x00000200001c7858 : test r9, r9 ; je 0x200001c7866 ; call r9
0x00000200001c2901 : test r9, r9 ; jne 0x200001c28e5 ; xor eax, eax ; ret
0x000002000036d899 : test r9, r9 ; jne 0x2000036d8a4 ; ret
0x00000200000f5e10 : test r9, r9 ; js 0x200000f5e28 ; mov rax, rdx ; ret
0x00000200000f5e10 : test r9, r9 ; js 0x200000f5e29 ; mov rax, rdx ; ret
0x00000200003ac184 : test r9b, 0x10 ; jne 0x200003ac194 ; mov eax, edx ; ret
0x00000200003ac184 : test r9b, 0x10 ; jne 0x200003ac195 ; mov eax, edx ; ret
0x0000020000088e51 : test r9b, 1 ; je 0x20000088e5e ; ret
0x00000200003b07a7 : test r9b, r9b ; jne 0x200003b07c2 ; xor eax, eax ; ret
0x00000200004f98e7 : test r9d, r10d ; je 0x200004f98f6 ; mov al, 1 ; ret
0x00000200004f98e6 : test r9w, r10w ; je 0x200004f98f7 ; mov al, 1 ; ret
0x0000020000129b21 : test rax, r8 ; je 0x20000129b2c ; ret
0x000002000047d257 : test rax, rax ; cmove eax, edx ; ret
0x000002000003642d : test rax, rax ; je 0x20000036438 ; ret
0x0000020000086a7f : test rax, rax ; je 0x20000086bda ; call rax
0x00000200001032e4 : test rax, rax ; je 0x200001032f7 ; mov rax, qword ptr [rax + 0x40] ; ret
0x000002000013e27d : test rax, rax ; je 0x2000013e289 ; call rax
0x00000200001c665b : test rax, rax ; je 0x200001c6669 ; call rax
0x00000200001cbd70 : test rax, rax ; je 0x200001cbd7c ; call rax
0x00000200001cbdac : test rax, rax ; je 0x200001cbdb8 ; call rax
0x00000200001cbe27 : test rax, rax ; je 0x200001cbe33 ; call rax
0x00000200001cbe88 : test rax, rax ; je 0x200001cbe94 ; call rax
0x00000200001cbe87 : test rax, rax ; je 0x200001cbe95 ; call rax
0x00000200001cbe86 : test rax, rax ; je 0x200001cbe96 ; call rax
0x00000200001fef08 : test rax, rax ; je 0x200001fef29 ; mov rdx, rdi ; call rax
0x0000020000372f01 : test rax, rax ; je 0x20000372f1e ; mov rcx, r15 ; call rax
0x000002000037a95b : test rax, rax ; je 0x2000037a96f ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x000002000038ac97 : test rax, rax ; je 0x2000038acba ; call rax
0x00000200003b2de3 : test rax, rax ; je 0x200003b2e60 ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x00000200003be265 : test rax, rax ; je 0x200003be275 ; call rax
0x0000020000461c1d : test rax, rax ; je 0x20000461c2f ; mov rcx, rbx ; call rax
0x000002000047126e : test rax, rax ; je 0x20000470fb7 ; call rax
0x000002000048b657 : test rax, rax ; je 0x2000048b66a ; add rax, -0x10 ; ret
0x00000200004ab16f : test rax, rax ; je 0x200004ab186 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004ccbe5 : test rax, rax ; je 0x200004ccbf1 ; call rax
0x00000200004cf5e6 : test rax, rax ; je 0x200004cf5f2 ; call rax
0x00000200004cf967 : test rax, rax ; je 0x200004cf973 ; call rax
0x00000200004e0049 : test rax, rax ; je 0x200004e0076 ; call rax
0x0000020000511b53 : test rax, rax ; je 0x20000511b5f ; call rax
0x00000200005415ba : test rax, rax ; je 0x200005415d0 ; mov rcx, r15 ; call rax
0x00000200005d005b : test rax, rax ; je 0x200005d0069 ; jmp qword ptr [rax]
0x00000200005e6868 : test rax, rax ; je 0x200005e6874 ; call rax
0x00000200005f919b : test rax, rax ; je 0x200005f91bc ; call rax
0x0000020000609ebe : test rax, rax ; je 0x20000609eca ; call rax
0x0000020000609f59 : test rax, rax ; je 0x20000609f65 ; call rax
0x0000020000669de3 : test rax, rax ; je 0x20000669df1 ; jmp rax
0x000002000066caeb : test rax, rax ; je 0x2000066cb6a ; mov r8d, esi ; call rax
0x000002000066cfa7 : test rax, rax ; je 0x2000066cfb9 ; mov cl, r9b ; call rax
0x00000200006728a9 : test rax, rax ; je 0x200006728c6 ; mov rcx, rbx ; call rax
0x0000020000672911 : test rax, rax ; je 0x20000672920 ; call rax
0x00000200006729bd : test rax, rax ; je 0x200006729da ; mov rcx, rdi ; call rax
0x0000020000672a34 : test rax, rax ; je 0x20000672a4a ; mov rcx, rbx ; call rax
0x0000020000672b44 : test rax, rax ; je 0x20000672b56 ; mov rcx, rdi ; call rax
0x0000020000672b5c : test rax, rax ; je 0x20000672b6e ; mov rcx, rdi ; call rax
0x0000020000672bb5 : test rax, rax ; je 0x20000672bc7 ; mov rcx, rdi ; call rax
0x0000020000672bb4 : test rax, rax ; je 0x20000672bc8 ; mov rcx, rdi ; call rax
0x0000020000110b90 : test rax, rax ; jle 0x20000110b9b ; ret
0x00000200004a33b0 : test rax, rax ; jle 0x200004a33bb ; ret
0x0000020000036444 : test rax, rax ; jne 0x20000036457 ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000070079 : test rax, rax ; jne 0x2000007007a ; mov rax, rcx ; ret
0x00000200000b5943 : test rax, rax ; jne 0x200000b5944 ; mov rax, rcx ; ret
0x00000200000de4da : test rax, rax ; jne 0x200000de57c ; ret
0x00000200000e29f2 : test rax, rax ; jne 0x200000e2a23 ; mov rax, rcx ; ret
0x00000200000ead07 : test rax, rax ; jne 0x200000ead16 ; xor eax, eax ; ret
0x00000200000eb843 : test rax, rax ; jne 0x200000eb852 ; mov al, 1 ; ret
0x000002000010af95 : test rax, rax ; jne 0x2000010afa3 ; mov al, dl ; ret
0x000002000010af95 : test rax, rax ; jne 0x2000010afa4 ; mov al, dl ; ret
0x00000200001315ec : test rax, rax ; jne 0x200001315f7 ; ret
0x000002000016fd41 : test rax, rax ; jne 0x2000016fd23 ; jmp 0x2000016fd11
0x000002000016fd40 : test rax, rax ; jne 0x2000016fd24 ; jmp 0x2000016fd12
0x000002000016fd3f : test rax, rax ; jne 0x2000016fd25 ; jmp 0x2000016fd13
0x00000200000c00b7 : test rax, rax ; jne 0x20000192719 ; ret
0x00000200001a9d67 : test rax, rax ; jne 0x200001a9d68 ; mov rax, rcx ; ret
0x00000200001c460f : test rax, rax ; jne 0x200001c461a ; ret
0x00000200001cda80 : test rax, rax ; jne 0x200001cda7f ; add rsp, 0x28 ; ret
0x0000020000210312 : test rax, rax ; jne 0x2000021031d ; ret
0x0000020000217939 : test rax, rax ; jne 0x2000021794a ; mov r8, r10 ; jmp 0x2000021795e
0x000002000043158c : test rax, rax ; jne 0x20000431597 ; ret
0x000002000044223f : test rax, rax ; jne 0x2000044223b ; ret
0x0000020000465369 : test rax, rax ; jne 0x2000046537c ; add rsp, 0x28 ; ret
0x00000200004a0645 : test rax, rax ; jne 0x200004a0653 ; mov al, dl ; ret
0x00000200004a0645 : test rax, rax ; jne 0x200004a0654 ; mov al, dl ; ret
0x0000020000600a2e : test rax, rax ; jne 0x20000600a07 ; add rsp, 0x38 ; ret
0x0000020000644dc1 : test rax, rax ; jne 0x20000644d7f ; mov al, 1 ; ret
0x0000020000666f22 : test rax, rax ; jne 0x20000666f2d ; ret
0x0000020000668449 : test rax, rax ; jne 0x20000668429 ; ret
0x000002000012d00f : test rax, rcx ; setne dl ; mov eax, edx ; ret
0x00000200001841c6 : test rbx, rbx ; je 0x200001841d7 ; or rax, r10 ; jmp 0x200001841da
0x000002000010fb55 : test rcx, rcx ; je 0x2000010fb5d ; and qword ptr [rcx], 0 ; ret
0x0000020000130153 : test rcx, rcx ; je 0x2000013015f ; call rcx
0x00000200001cbd2c : test rcx, rcx ; je 0x200001cbd38 ; call rcx
0x00000200001cbd4f : test rcx, rcx ; je 0x200001cbd5b ; call rcx
0x00000200001cbd8c : test rcx, rcx ; je 0x200001cbd9a ; jmp rcx
0x00000200001cbd8b : test rcx, rcx ; je 0x200001cbd9b ; jmp rcx
0x00000200001cbd8a : test rcx, rcx ; je 0x200001cbd9c ; jmp rcx
0x00000200001cbddb : test rcx, rcx ; je 0x200001cbde9 ; jmp rcx
0x00000200001cbe4b : test rcx, rcx ; je 0x200001cbe57 ; call rcx
0x00000200001cbe68 : test rcx, rcx ; je 0x200001cbe76 ; jmp rcx
0x00000200001d6e13 : test rcx, rcx ; je 0x200001d6e29 ; mov dword ptr [rcx], r10d ; ret
0x00000200002198d6 : test rcx, rcx ; je 0x200002198e6 ; mov dword ptr [rcx], r10d ; ret
0x0000020000372c22 : test rcx, rcx ; je 0x2000036a307 ; call rcx
0x000002000037a621 : test rcx, rcx ; je 0x2000037a62d ; call rcx
0x000002000037a620 : test rcx, rcx ; je 0x2000037a62e ; call rcx
0x000002000037a61f : test rcx, rcx ; je 0x2000037a62f ; call rcx
0x000002000037f3ba : test rcx, rcx ; je 0x2000037f3ca ; add dword ptr [rcx], r11d ; ret
0x0000020000438beb : test rcx, rcx ; je 0x20000438c00 ; xor edx, edx ; call 0x20000294e29
0x000002000043b924 : test rcx, rcx ; je 0x2000043b93e ; call 0x20000063d9c
0x0000020000442415 : test rcx, rcx ; je 0x2000044242f ; call 0x20000068fd8
0x0000020000442b17 : test rcx, rcx ; je 0x20000442b29 ; call 0x20000068fd8
0x0000020000444290 : test rcx, rcx ; je 0x200004442a2 ; call 0x20000068fd8
0x0000020000472bf0 : test rcx, rcx ; je 0x20000472c2f ; mov eax, r10d ; ret
0x0000020000472bf0 : test rcx, rcx ; je 0x20000472c30 ; mov eax, r10d ; ret
0x00000200004c441a : test rcx, rcx ; je 0x200004c442c ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004f1542 : test rcx, rcx ; je 0x200004f1556 ; ret
0x000002000058cd52 : test rcx, rcx ; je 0x2000058cd63 ; call 0x20000068fd7
0x000002000058cdc0 : test rcx, rcx ; je 0x2000058cdd8 ; call 0x20000068fd7
0x00000200000339ac : test rcx, rcx ; jne 0x200000339bb ; xor eax, eax ; ret
0x00000200000366de : test rcx, rcx ; jne 0x200000366ef ; mov rax, r9 ; ret
0x0000020000051961 : test rcx, rcx ; jne 0x2000005196c ; ret
0x000002000009bb09 : test rcx, rcx ; jne 0x2000009bb1a ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000a4e38 : test rcx, rcx ; jne 0x200000a4e43 ; ret
0x00000200000c5d23 : test rcx, rcx ; jne 0x200000c5d2e ; ret
0x00000200000e2c36 : test rcx, rcx ; jne 0x200000e2c34 ; ret
0x00000200000e44ba : test rcx, rcx ; jne 0x200000e44b4 ; mov rax, rdx ; ret
0x00000200001301e4 : test rcx, rcx ; jne 0x200001301f3 ; xor al, al ; ret
0x00000200001400d8 : test rcx, rcx ; jne 0x200001400e7 ; xor eax, eax ; ret
0x000002000014010c : test rcx, rcx ; jne 0x2000014011b ; xor eax, eax ; ret
0x0000020000140d30 : test rcx, rcx ; jne 0x20000140d3f ; xor eax, eax ; ret
0x0000020000033844 : test rcx, rcx ; jne 0x200001687f7 ; ret
0x00000200001d931e : test rcx, rcx ; jne 0x200001d932f ; or eax, 0xffffffff ; ret
0x00000200002091e6 : test rcx, rcx ; jne 0x200002091e4 ; ret
0x00000200003b1166 : test rcx, rcx ; jne 0x200003b1168 ; jmp 0x200003b1189
0x00000200004062eb : test rcx, rcx ; jne 0x200004062cc ; mov eax, r10d ; jmp 0x200004062d7
0x000002000041621e : test rcx, rcx ; jne 0x20000416231 ; add rsp, 0x28 ; ret
0x00000200004167bc : test rcx, rcx ; jne 0x200004167c7 ; ret
0x000002000044006c : test rcx, rcx ; jne 0x2000044007f ; add rsp, 0x28 ; ret
0x00000200004bfe40 : test rcx, rcx ; jne 0x200004bfe53 ; add rsp, 0x28 ; ret
0x00000200005d8eee : test rcx, rcx ; jne 0x200005d8efd ; xor eax, eax ; ret
0x0000020000614260 : test rcx, rcx ; jne 0x2000061426f ; xor al, al ; ret
0x000002000062e12f : test rcx, rcx ; jne 0x2000062e11f ; mov rax, rcx ; ret
0x000002000070cd28 : test rcx, rcx ; jne 0x2000070cd33 ; ret
0x000002000071755c : test rcx, rcx ; jne 0x2000071754e ; ret
0x000002000038e923 : test rdi, rdi ; je 0x2000038e8ee ; jmp 0x2000038e8ca
0x000002000008deca : test rdx, rdx ; je 0x2000008deda ; add eax, dword ptr [rdx + 0x60] ; ret
0x00000200000c0086 : test rdx, rdx ; je 0x200000c0099 ; mov word ptr [rcx], r11w ; ret
0x00000200000e1ffe : test rdx, rdx ; je 0x200000e2011 ; mov word ptr [rcx], r11w ; ret
0x0000020000124606 : test rdx, rdx ; je 0x20000124612 ; call rdx
0x00000200001b5de6 : test rdx, rdx ; je 0x20000131617 ; call rdx
0x0000020000131d99 : test rdx, rdx ; je 0x20000131da9 ; xor ecx, ecx ; call rdx
0x00000200001777dd : test rdx, rdx ; je 0x200001777e9 ; call rax
0x00000200001c4dce : test rdx, rdx ; je 0x200001c4dda ; call rdx
0x00000200001cbdff : test rdx, rdx ; je 0x200001cbe0d ; jmp rdx
0x00000200001cbea4 : test rdx, rdx ; je 0x200001cbeb2 ; jmp rdx
0x00000200003fc73b : test rdx, rdx ; je 0x200003fc74d ; mov rcx, rsi ; call rdx
0x000002000049e06a : test rdx, rdx ; je 0x2000049e05a ; ret
0x000002000059c856 : test rdx, rdx ; je 0x2000059c86a ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005b9a00 : test rdx, rdx ; je 0x200005b9a0e ; mov dword ptr [rdx], eax ; ret
0x00000200000645b2 : test rdx, rdx ; jne 0x200000645bd ; ret
0x00000200000657fe : test rdx, rdx ; jne 0x20000065809 ; ret
0x000002000009d2e2 : test rdx, rdx ; jne 0x2000009d2ed ; ret
0x00000200000b55db : test rdx, rdx ; jne 0x200000b55ec ; mov qword ptr [r8], rcx ; ret
0x00000200000fdb6f : test rdx, rdx ; jne 0x200000fdb7a ; ret
0x00000200001048f9 : test rdx, rdx ; jne 0x200001048ed ; ret
0x0000020000068fac : test rdx, rdx ; jne 0x2000017799d ; ret
0x0000020000202653 : test rdx, rdx ; jne 0x20000202662 ; xor eax, eax ; ret
0x000002000037e035 : test rdx, rdx ; jne 0x2000037e046 ; mov eax, r10d ; jmp 0x2000037e04f
0x00000200004a061c : test rdx, rdx ; jne 0x200004a0627 ; ret
0x00000200005cee22 : test rdx, rdx ; jne 0x200005cee33 ; lea eax, dword ptr [rdx + 1] ; ret
0x0000020000672453 : test rdx, rdx ; jne 0x20000672446 ; ret
0x00000200006f8d04 : test rdx, rdx ; jne 0x20000722719 ; ret
0x00000200000ec3fa : ud2 ; add byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200003969b1 : vaddsubpd xmm12, xmm2, xmmword ptr [rbx - 0x74fffe76] ; ret 0xe8c1
0x00000200003ed34c : vaddsubps xmm6, xmm2, xmmword ptr [rbx] ; rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000718962 : verw ax ; ret
0x00000200001d4713 : verw ax ; ret 0x49
0x00000200001da31f : verw ax ; ret 0xf6f2
0x00000200000e3d62 : verw bx ; ret
0x00000200001ba224 : verw cx ; and al, 0xf8 ; push rsi ; ret
0x0000020000486db3 : verw word ptr [rax - 0x557af0f0] ; ret
0x00000200005eb50e : vpmaxsw ymm8, ymm0, ymmword ptr [rcx + rcx*4 + 0x45] ; ret
0x000002000047080d : vpsadbw ymm1, ymm15, ymmword ptr [rdi] ; ret
0x0000020000191ff5 : vpsubusb ymm13, ymm1, ymm1 ; ret 0xfff2
0x00000200000e1e92 : vunpcklps xmm0, xmm8, xmmword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001661d7 : vunpcklps ymm9, ymm1, ymmword ptr [rax - 0x75] ; ret
0x00000200001b1728 : vxorps ymm9, ymm1, ymmword ptr [rax - 0x75] ; ret 0xb948
0x00000200002638a8 : wait ; adc ecx, dword ptr [rcx] ; call qword ptr [rbx]
0x00000200000310ea : wait ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000025d50 : wait ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001f42cb : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001fcbb : wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x0000020000020fdb : wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb0cc
0x000002000014edb5 : wait ; add byte ptr [rax], al ; add cl, ch ; ret 0xd7
0x0000020000150db5 : wait ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb7
0x000002000007d08a : wait ; and al, 0x10 ; add dh, dh ; ret
0x00000200004bc7db : wait ; call 0x200000e7b78
0x000002000065e181 : wait ; cwde ; ret
0x000002000067a3e3 : wait ; dec dword ptr [rax + 0x3b] ; ret 0x1675
0x000002000064fdb5 : wait ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x00000200001516f2 : wait ; fnstcw word ptr [rcx] ; ret
0x000002000054d0f2 : wait ; imul al ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x000002000055485f : wait ; jmp 0x1ffc2d89169
0x00000200005442ca : wait ; jo 0x200005442b9 ; push rsi ; ret
0x00000200005417a2 : wait ; mul esi ; dec dword ptr [rax - 9] ; ret
0x00000200000e0577 : wait ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200000e05c8 : wait ; or eax, dword ptr [rax] ; mov edx, 1 ; mov eax, edx ; ret
0x00000200003fd455 : wait ; out dx, al ; ret 0x45ff
0x00000200006cb75a : wait ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200004735f1 : wait ; ret
0x00000200001a2cdd : wait ; ret 0
0x0000020000533fc5 : wait ; ret 0x33ff
0x000002000023d52c : wait ; ret 0x39
0x000002000001f318 : wait ; ret 0x55a5
0x000002000063d4b9 : wait ; ret 0xffa7
0x000002000047962d : wait ; ret 0xffbb
0x000002000043baa1 : wait ; ret 0xffe8
0x00000200004f7095 : wait ; sahf ; ret 0x48ff
0x0000020000175d1d : wait ; test al, 0xf8 ; call qword ptr [rax - 0x11333d17]
0x000002000003c5ca : wait ; xor byte ptr [rax], al ; jmp 0x2000003c596
0x00000200000b4180 : wait ; xor edi, edi ; jmp 0x200000b4134
0x000002000015dd3c : wbinvd ; ret
0x00000200001c4d78 : wrmsr ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001579b1 : wrmsr ; pop rdi ; ret
0x000002000014da2c : wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200001513c2 : wrmsr ; ret
0x00000200003708c7 : wrmsr ; wbinvd ; ret
0x00000200000fdb77 : xadd dword ptr [rax + 0x5948], edx ; ret
0x00000200004a33ac : xadd dword ptr [rcx - 0x10], eax ; test rax, rax ; jle 0x200004a33bf ; ret
0x00000200000ca1a6 : xadd dword ptr [rdx + 0x10], eax ; add rsp, 0x38 ; ret
0x00000200000fce2c : xadd dword ptr [rdx + 0x20], eax ; ret
0x000002000015dfec : xadd dword ptr [rdx + 0x4c8], eax ; ret
0x000002000003a001 : xadd dword ptr [rip + 0x30f138], edx ; ret
0x000002000052028e : xadd dword ptr [rip - 0x27f409], eax ; inc eax ; ret
0x00000200003b4812 : xadd eax, esp ; rdpmc ; ret 0x25
0x00000200000fce2b : xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200000fdb76 : xadd qword ptr [rax + 0x5948], rdx ; ret
0x00000200000ca1a5 : xadd qword ptr [rdx + 0x10], rax ; add rsp, 0x38 ; ret
0x000002000015dfeb : xadd qword ptr [rdx + 0x4c8], rax ; ret
0x000002000003a000 : xadd qword ptr [rip + 0x30f138], rdx ; ret
0x00000200003c1f57 : xchg ah, al ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000065a9ea : xchg ah, al ; dec dword ptr [rdx + 0x2d894cc3] ; ret 0xc938
0x00000200000ce8f4 : xchg ah, bh ; add al, byte ptr [rax] ; add bh, bh ; ret 0x5489
0x00000200003f3028 : xchg ah, dh ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x55e9
0x00000200001ec04e : xchg ah, dl ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000618fd7 : xchg al, ah ; add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000200006d45e6 : xchg al, bh ; add al, 0 ; add byte ptr [rdx], bh ; ret
0x00000200003d4b77 : xchg al, bl ; add al, 0 ; add dh, dh ; ret
0x0000020000442a26 : xchg al, bl ; ret 0xf0ff
0x0000020000027757 : xchg al, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000013ea1d : xchg al, ch ; ret
0x000002000022d89f : xchg al, dh ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200006067a2 : xchg bh, bh ; ret 0x840f
0x000002000050e677 : xchg bh, dh ; add eax, 0x8b49000a ; ret 0xd348
0x00000200001001b3 : xchg bh, dh ; rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x000002000039ef89 : xchg bl, bl ; ret 0x19
0x00000200000d08a2 : xchg bl, dl ; imul ecx, dword ptr [rax + rax], -1 ; ret 0x9489
0x00000200001ce4d7 : xchg byte ptr [rax + 0x75000000], bl ; adc cl, byte ptr [rax - 0x7d] ; ret 0xb910
0x00000200006d5ab3 : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006d78ce : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d78e1
0x00000200006d8c5b : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8c6e
0x00000200006da037 : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006da04a
0x00000200006db25d : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db270
0x00000200006db59d : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db5b0
0x00000200006dcf2b : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dcf3e
0x00000200006de0b8 : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de0cb
0x00000200006de3f8 : xchg byte ptr [rax + 4], bl ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de40b
0x0000020000714b55 : xchg byte ptr [rax + 5], ah ; add byte ptr [rax], al ; ret 1
0x000002000022f887 : xchg byte ptr [rax + rbx*2 + 0x35f70000], al ; ret 0x121a
0x000002000045f572 : xchg byte ptr [rax - 0x1000000], dl ; ret
0x000002000016a6fe : xchg byte ptr [rax - 0x17000000], ch ; call rsi
0x00000200001727a2 : xchg byte ptr [rax - 0x7cb70013], dl ; ret
0x00000200006d3a73 : xchg byte ptr [rax], al ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200000ae312 : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add al, ch ; in al, dx ; ret
0x00000200004ccd0a : xchg byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000ccd83 : xchg byte ptr [rax], bh ; add eax, dword ptr [rax] ; add bh, bh ; ret 0x5589
0x0000020000295ef3 : xchg byte ptr [rax], bl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200006cb109 : xchg byte ptr [rax], ch ; add eax, 0x8b410000 ; ret
0x00000200000fd3d1 : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7401
0x000002000013c09e : xchg byte ptr [rbx + 0x3450017], ah ; fmul qword ptr [rcx - 0x7d] ; ret 0x4108
0x0000020000176830 : xchg byte ptr [rcx + rax + 0x3a410000], al ; ret 0x1475
0x000002000011f67e : xchg byte ptr [rcx + rax], ah ; add cl, ch ; ret 0
0x00000200001213e2 : xchg byte ptr [rcx + rsi*8 - 0x3b7cb701], bh ; pop rbx ; ret
0x00000200003b805e : xchg byte ptr [rcx - 0x75], al ; ret
0x000002000010439a : xchg byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 0xc00000f2 ; ret
0x0000020000011a9c : xchg byte ptr [rcx], bl ; mov gs, word ptr [rip + 0x337635d] ; ret 0xcdf4
0x000002000039e642 : xchg byte ptr [rcx], ch ; ret 0x19
0x000002000041f586 : xchg byte ptr [rcx], dh ; xor edx, dword ptr [rax + rax] ; xor al, al ; ret
0x00000200001d7aa6 : xchg byte ptr [rdi + 0x189000f], al ; ret
0x00000200000abbed : xchg byte ptr [rdi + 0x2b000002], ch ; ret 0x589
0x00000200003694e7 : xchg byte ptr [rdi + 0x48], al ; cmp eax, ecx ; jae 0x2000036950b ; mov al, 1 ; ret
0x0000020000061e1f : xchg byte ptr [rdi], bh ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret
0x000002000066f296 : xchg byte ptr [rdi], dh ; ret
0x0000020000135d1c : xchg byte ptr [rdi], dl ; add dh, dh ; ret
0x0000020000727ecf : xchg byte ptr [rdx - 0x74bb0002], bl ; ret
0x00000200000f88ff : xchg byte ptr [rdx], cl ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000012170f : xchg byte ptr [rsi + 0x480008c8], dh ; add esp, 0x38 ; ret
0x00000200001ac8b8 : xchg byte ptr [rsi - 0x74000901], ah ; ret
0x00000200001ac948 : xchg byte ptr [rsi - 0x74000901], bh ; ret
0x00000200007201ee : xchg byte ptr [rsi], cl ; ret
0x0000020000570c88 : xchg ch, ch ; push rsi ; ret
0x00000200004accc7 : xchg cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200000cdaf5 : xchg dh, al ; add al, byte ptr [rax] ; add bh, bh ; ret 0x9489
0x00000200004d3433 : xchg dh, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001b8243 : xchg dh, dh ; or eax, 0xc8fffff8 ; jne 0x200001b8243 ; ret
0x0000020000471bc4 : xchg dl, al ; push rdi ; add dl, ch ; ret 0x57
0x0000020000468062 : xchg dword ptr [r8 - 0x75], r9d ; ret
0x00000200004055d6 : xchg dword ptr [r9 - 0x75], r9d ; xlatb ; mov rcx, rbx ; call r14
0x000002000005ab1a : xchg dword ptr [r9], edx ; add byte ptr [rax - 0x75], cl ; ret 0xb841
0x000002000048c8a7 : xchg dword ptr [rax + 0x3000000], esp ; ret
0x000002000022003c : xchg dword ptr [rax + 0x3a000000], eax ; ret
0x000002000044c3d7 : xchg dword ptr [rax + 0x6b], ebp ; adc al, byte ptr [rax] ; ret
0x00000200000f7da9 : xchg dword ptr [rax + 0x6e], eax ; str word ptr [rax + 3] ; iretd ; jmp rcx
0x0000020000434cd0 : xchg dword ptr [rax + rax + 0x3480000], edx ; ret 0x3d48
0x00000200004feec7 : xchg dword ptr [rax + rcx*8 + 0x50], eax ; mov eax, r9d ; ret
0x00000200004393fe : xchg dword ptr [rax - 0x18000000], eax ; test al, 0x6e ; ret
0x0000020000137f6d : xchg dword ptr [rax - 0x75000000], edx ; ret
0x0000020000468063 : xchg dword ptr [rax - 0x75], ecx ; ret
0x000002000040afe9 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x000002000041aa02 : xchg dword ptr [rax - 0x7d], ecx ; rol dword ptr [rdx], -0x75 ; ret
0x0000020000089220 : xchg dword ptr [rax - 0xa000000], ebp ; ret
0x000002000001fb7b : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x000002000020dafb : xchg dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200001d6585 : xchg dword ptr [rax], ebp ; idiv edi ; add rsp, 0x58 ; ret
0x000002000047cf6b : xchg dword ptr [rax], edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007b116 : xchg dword ptr [rax], esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003e66bf : xchg dword ptr [rax], esi ; ret
0x00000200000edabd : xchg dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000121b88 : xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x000002000051f27c : xchg dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051f27b : xchg dword ptr [rbx + 8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000230dc4 : xchg dword ptr [rbx + rcx*4 + 0x55], ecx ; sbb byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000013704e : xchg dword ptr [rbx], ecx ; or byte ptr [rax], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200003b0c7a : xchg dword ptr [rbx], edx ; or ebx, dword ptr [rcx] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000092a2f : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x79], al ; ret
0x00000200004b3fe9 : xchg dword ptr [rcx + 0x1c8], edx ; ret
0x00000200001bc87d : xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000062e14d : xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x000002000062e14c : xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x000002000010af87 : xchg dword ptr [rcx + 0x506c], eax ; ret
0x000002000015e1d4 : xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x000002000006769c : xchg dword ptr [rcx + rax + 0xf070000], eax ; xchg eax, ebp ; ret
0x00000200004055d7 : xchg dword ptr [rcx - 0x75], ecx ; xlatb ; mov rcx, rbx ; call r14
0x000002000010ca2e : xchg dword ptr [rcx], eax ; ret
0x0000020000092ab5 : xchg dword ptr [rcx], ebx ; add al, 0 ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x0000020000630026 : xchg dword ptr [rcx], ecx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000005ab1b : xchg dword ptr [rcx], edx ; add byte ptr [rax - 0x75], cl ; ret 0xb841
0x000002000023886a : xchg dword ptr [rcx], edx ; add dh, dh ; ret
0x00000200000645b0 : xchg dword ptr [rcx], edx ; test rdx, rdx ; jne 0x200000645bf ; ret
0x00000200000657fc : xchg dword ptr [rcx], edx ; test rdx, rdx ; jne 0x2000006580b ; ret
0x000002000042d559 : xchg dword ptr [rcx], esi ; idiv edi ; jmp 0x2000042d526
0x00000200000d2e0d : xchg dword ptr [rdi + rcx*2 + 0xc], edx ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005b4e01 : xchg dword ptr [rdi - 0x15], edx ; dec dword ptr [rbx - 0x21a71738] ; ret
0x00000200004ceb56 : xchg dword ptr [rdi], eax ; ret 0xc
0x00000200005f6e85 : xchg dword ptr [rdi], ebx ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200006f5431 : xchg dword ptr [rdi], edx ; ret 2
0x00000200003672c0 : xchg dword ptr [rdx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f0a64 : xchg dword ptr [rdx + rax*8], ecx ; mov eax, r9d ; ret
0x00000200005e90c7 : xchg dword ptr [rdx + rcx - 0x45], esi ; xor eax, 0xe9c00000 ; ret 0xfffe
0x000002000066891f : xchg dword ptr [rdx], eax ; add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x00000200006688d3 : xchg dword ptr [rdx], eax ; add byte ptr [rcx + rcx*4 + 8], cl ; mov al, 1 ; ret
0x000002000015e33a : xchg dword ptr [rdx], eax ; ret
0x000002000006efaa : xchg dword ptr [rdx], esi ; add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200001d2eff : xchg dword ptr [rip + 0x10f27b], eax ; ret
0x00000200000f9243 : xchg dword ptr [rip + 0x148b4800], esp ; ret 0x8b48
0x0000020000520151 : xchg dword ptr [rip + 0x18a421], ecx ; ret
0x00000200000c27d5 : xchg dword ptr [rip + 0x1f3e9d], ecx ; ret
0x0000020000662326 : xchg dword ptr [rip + 0x2edfc], eax ; ret
0x0000020000520159 : xchg dword ptr [rip - 0x240a8f], ecx ; ret
0x000002000064dd69 : xchg dword ptr [rsi + 0x78c085ff], esp ; fimul dword ptr [rax - 1] ; ret
0x0000020000124e93 : xchg dword ptr [rsi + rdi*8 - 0x74b60001], esi ; ret
0x000002000001d45b : xchg dword ptr [rsi - 0x7dbaf7ec], eax ; lodsb al, byte ptr [rsi] ; ret
0x000002000005823e : xchg dword ptr [rsi], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xb], cl ; ret 0xc748
0x00000200007202e5 : xchg dword ptr [rsi], ecx ; ret
0x00000200004863c2 : xchg dword ptr [rsi], esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000065f5b2 : xchg dword ptr [rsp + rdi*8], esi ; ret 0x4c1f
0x00000200006d5876 : xchg eax, ebp ; adc al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200006dd125 : xchg eax, ebp ; adc rax, -0x357d0000 ; jmp qword ptr [rbx]
0x0000020000091bad : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200005f6064 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000015840d : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000561e30 : xchg eax, ebp ; add byte ptr [rax], al ; shr cl, 0x99 ; ret
0x0000020000060073 : xchg eax, ebp ; add byte ptr cs:[rbx], ch ; ret 0xd38b
0x0000020000123b60 : xchg eax, ebp ; add eax, 0x1b1f72 ; xor eax, eax ; ret
0x0000020000532365 : xchg eax, ebp ; add eax, dword ptr [rax] ; add cl, ch ; jmp rsp
0x00000200006d5279 : xchg eax, ebp ; and byte ptr [rax + rax], dl ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200005f6d77 : xchg eax, ebp ; and byte ptr [rbp - 0x3b7cb701], dh ; pop rax ; ret
0x00000200001dfd29 : xchg eax, ebp ; and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000043d5d9 : xchg eax, ebp ; call qword ptr [rdx]
0x00000200006ce116 : xchg eax, ebp ; cwde ; add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000408fa1 : xchg eax, ebp ; in al, dx ; push qword ptr [rdx + 0x7cb5e801] ; ret 0xe8ff
0x00000200003b67e7 : xchg eax, ebp ; jp 0x200003b67ba ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000026817 : xchg eax, ebp ; lodsb al, byte ptr [rsi] ; xor al, byte ptr [rax] ; sub rax, rcx ; ret
0x00000200006e45fe : xchg eax, ebp ; mov byte ptr [rip - 0x74bf0000], cl ; ret 0x3344
0x00000200006de016 : xchg eax, ebp ; mov eax, 0x33000005 ; fisttp dword ptr [rcx - 0x75] ; ret 0x8948
0x00000200001851aa : xchg eax, ebp ; mov esi, 0x8b4dfff0 ; ret 0xb70f
0x00000200001145c5 : xchg eax, ebp ; mov rax, r8 ; ret
0x000002000005b14d : xchg eax, ebp ; nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x0000020000254e61 : xchg eax, ebp ; or eax, dword ptr [rax] ; ret
0x000002000017412a : xchg eax, ebp ; out dx, al ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x000002000017cf85 : xchg eax, ebp ; out dx, eax ; dec dword ptr [rax - 0x7f] ; ret
0x000002000000f6d0 : xchg eax, ebp ; popfq ; sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x00000200006d2b8e : xchg eax, ebp ; push rax ; adc eax, 0x33480000 ; ret 0xd233
0x0000020000020d39 : xchg eax, ebp ; push rsp ; ret
0x00000200006d4b32 : xchg eax, ebp ; rcl byte ptr [rdi], 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000000dc8e : xchg eax, ebp ; ret
0x0000020000168b87 : xchg eax, ebp ; ret 0x12
0x00000200003e6739 : xchg eax, ebp ; ret 0x16
0x00000200005b29a0 : xchg eax, ebp ; ret 0x19eb
0x00000200005b66ea : xchg eax, ebp ; ret 0x1db9
0x00000200005b66da : xchg eax, ebp ; ret 0x27e8
0x000002000011c9bd : xchg eax, ebp ; ret 0x3345
0x0000020000210227 : xchg eax, ebp ; ret 0x3ae8
0x00000200005d3c78 : xchg eax, ebp ; ret 0x3d80
0x0000020000471de0 : xchg eax, ebp ; ret 0x3d83
0x00000200001dca91 : xchg eax, ebp ; ret 0x40e8
0x000002000067a9ee : xchg eax, ebp ; ret 0x4be8
0x00000200005b29b2 : xchg eax, ebp ; ret 0x7eb
0x00000200001fdba9 : xchg eax, ebp ; ret 0x8941
0x0000020000033969 : xchg eax, ebp ; ret 0x8948
0x00000200000aa168 : xchg eax, ebp ; ret 0x894c
0x0000020000112e8b : xchg eax, ebp ; ret 0x8b48
0x00000200005fa8c5 : xchg eax, ebp ; ret 0x8b4c
0x000002000022afad : xchg eax, ebp ; ret 0x8ce9
0x00000200000b2119 : xchg eax, ebp ; ret 0x90e8
0x00000200000e8ad1 : xchg eax, ebp ; ret 0x94e8
0x000002000066e72e : xchg eax, ebp ; ret 0xbe8
0x000002000067b7e3 : xchg eax, ebp ; ret 0xc141
0x00000200006f5202 : xchg eax, ebp ; ret 0xc149
0x00000200000917b1 : xchg eax, ebp ; ret 0xc232
0x00000200000b74b3 : xchg eax, ebp ; ret 0xc28b
0x000002000057f92b : xchg eax, ebp ; ret 0xca83
0x00000200005b6694 : xchg eax, ebp ; ret 0xd03b
0x000002000048422d : xchg eax, ebp ; ret 0xd4e8
0x0000020000413c78 : xchg eax, ebp ; ret 0xe5e8
0x000002000048f17e : xchg eax, ebp ; ret 0xe9c1
0x00000200004a7300 : xchg eax, ebp ; ret 0xebc1
0x0000020000105e73 : xchg eax, ebp ; ret 0xff41
0x0000020000192047 : xchg eax, ebp ; ret 0xfff2
0x000002000022caac : xchg eax, ebp ; ret 6
0x00000200000cf56e : xchg eax, ebp ; rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200006c72b9 : xchg eax, ebp ; rol byte ptr [rdx], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0xf8bf
0x000002000044944e : xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x000002000038961a : xchg eax, ebp ; rol cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x00000200000b7a1b : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x000002000053206e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200005320d9 ; ret
0x000002000060dd9e : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000060de09 ; ret
0x000002000052de10 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000052dc5b : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200006fb189 : xchg eax, ebp ; ror byte ptr [rcx + rcx*4 + 5], 0xce ; ret 0xffbc
0x0000020000530715 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x00000200001f9f70 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x000002000009781e : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000161f40 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x0000020000530833 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x00000200006e8dea : xchg eax, ebp ; sbb byte ptr [rax + rax], dl ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200001d6e08 : xchg eax, ebp ; sldt word ptr [rcx - 0x75] ; ret 0x8b48
0x0000020000592087 : xchg eax, ebp ; sub eax, 0xe990ffd0 ; ret
0x000002000038a0c1 : xchg eax, ebp ; test al, 0x1a ; add dh, dh ; ret
0x000002000067496f : xchg eax, ebp ; xchg eax, edx ; ret
0x000002000001102b : xchg eax, ebp ; xchg eax, esi ; ret 0x6280
0x00000200006d74d8 : xchg eax, ebp ; xor byte ptr [rip - 0x74b70000], al ; ret 0xdb33
0x00000200006caf59 : xchg eax, ebx ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006dfc22 : xchg eax, ebx ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006d826a : xchg eax, ebx ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8341
0x00000200004fef58 : xchg eax, ebx ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000485053 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x00000200005b15fa : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000014ecb5 : xchg eax, ebx ; add byte ptr [rax], al ; add cl, ch ; ret 0xd8
0x00000200006ccc0c : xchg eax, ebx ; add byte ptr [rsi], al ; add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x0000020000280f55 : xchg eax, ebx ; add byte ptr gs:[rbp + 0x40006594], al ; jmp qword ptr [rdi]
0x0000020000150cb5 : xchg eax, ebx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb8
0x00000200005ab033 : xchg eax, ebx ; cmc ; push rsi ; ret
0x0000020000101b36 : xchg eax, ebx ; cmp al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006d04d2 : xchg eax, ebx ; dec dword ptr [rax + 0xb] ; ret 0x894c
0x000002000013c155 : xchg eax, ebx ; fiadd word ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000642279 : xchg eax, ebx ; imul esi, dword ptr [rax - 0x3b7cb701], 0x48 ; ret
0x000002000044d163 : xchg eax, ebx ; in eax, -1 ; call 0x20000070846
0x000002000016e849 : xchg eax, ebx ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000058e962 : xchg eax, ebx ; int1 ; push rsi ; ret
0x000002000000e6db : xchg eax, ebx ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000641055 : xchg eax, ebx ; mov r15d, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000041571b : xchg eax, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, 0 ; add rsp, 0x38 ; ret
0x000002000008dfeb : xchg eax, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x0000020000174069 : xchg eax, ebx ; out dx, al ; push rsi ; ret 0x7401
0x00000200006ca630 : xchg eax, ebx ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006cc58c : xchg eax, ebx ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000019730a : xchg eax, ebx ; push rsi ; ret 0xf03
0x0000020000189874 : xchg eax, ebx ; pushfq ; int1 ; push rsi ; ret
0x0000020000029f17 : xchg eax, ebx ; ret
0x0000020000066c61 : xchg eax, ebx ; ret 0
0x00000200001ed169 : xchg eax, ebx ; ret 0x15
0x00000200003d7c61 : xchg eax, ebx ; ret 0x4aff
0x000002000055a25e : xchg eax, ebx ; ret 0x6fe9
0x00000200004a1929 : xchg eax, ebx ; ret 0xffcb
0x00000200004736d9 : xchg eax, ebx ; ret 0xffe6
0x00000200003852a9 : xchg eax, ebx ; ret 0xfffc
0x00000200006f5359 : xchg eax, ebx ; ret 2
0x00000200000fcd39 : xchg eax, ebx ; rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret
0x00000200004e7b0f : xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000436549 : xchg eax, ebx ; std ; jmp 0x1ffc2c87555
0x0000020000238869 : xchg eax, ebx ; xchg dword ptr [rcx], edx ; add dh, dh ; ret
0x000002000060bf39 : xchg eax, ebx ; xor dl, cl ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000670717 : xchg eax, ecx ; add al, 0 ; add rsp, 0x28 ; ret
0x00000200006708a5 : xchg eax, ecx ; add al, 0 ; add rsp, 0x38 ; ret
0x00000200006709dc : xchg eax, ecx ; add al, 0 ; add rsp, 0x58 ; ret
0x0000020000670983 : xchg eax, ecx ; add al, 0 ; add rsp, 0x68 ; ret
0x00000200004642ee : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x3b] ; ret
0x000002000014ec75 : xchg eax, ecx ; add byte ptr [rax], al ; add cl, ch ; add bl, cl ; add byte ptr [rax], al ; ret
0x0000020000462d93 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000002000012fc3f : xchg eax, ecx ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006687f0 : xchg eax, ecx ; add rax, r9 ; ret
0x0000020000450e02 : xchg eax, ecx ; call 0x200000bd0e3
0x00000200005fc34b : xchg eax, ecx ; clc ; add eax, 0xe6760000 ; xor eax, eax ; ret
0x0000020000721773 : xchg eax, ecx ; clc ; ret 0x66ff
0x000002000056f8c7 : xchg eax, ecx ; cmp al, 0xed ; dec dword ptr [rax - 0x75] ; ret
0x0000020000723352 : xchg eax, ecx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004b3fea : xchg eax, ecx ; enter 1, 0 ; ret
0x00000200004c13d2 : xchg eax, ecx ; enter 3, 0 ; ret
0x0000020000157a65 : xchg eax, ecx ; jmp r9
0x000002000012a76e : xchg eax, ecx ; jo 0x2000012a77c ; add byte ptr [rax], al ; ret
0x000002000044efdb : xchg eax, ecx ; mov byte ptr [rax + rax], al ; add byte ptr [rcx - 0x76], dh ; ret 0xe8c0
0x000002000015e352 : xchg eax, ecx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000010ab95 : xchg eax, ecx ; mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000054916a : xchg eax, ecx ; mov eax, 0x48000000 ; mov ecx, edi ; call rsi
0x000002000002a843 : xchg eax, ecx ; mov eax, 0xb60f0031 ; ret
0x000002000002a802 : xchg eax, ecx ; mov r8b, r10b ; jmp 0x2000002a7a6
0x0000020000416b2f : xchg eax, ecx ; nop ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; sal dh, 1 ; ret 0x7547
0x0000020000712bdc : xchg eax, ecx ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x0000020000678bd3 : xchg eax, ecx ; push rax ; ret
0x0000020000197459 : xchg eax, ecx ; push rsi ; ret 0x7503
0x000002000003c905 : xchg eax, ecx ; ret
0x00000200007282f6 : xchg eax, ecx ; ret 0x14ff
0x000002000012282b : xchg eax, ecx ; ret 0x18
0x0000020000165143 : xchg eax, ecx ; ret 0x1e
0x000002000051fc7f : xchg eax, ecx ; ret 0x48ff
0x0000020000021a78 : xchg eax, ecx ; ret 0x7c05
0x0000020000407a9f : xchg eax, ecx ; ret 0xccff
0x00000200000dcef7 : xchg eax, ecx ; ret 0xf
0x00000200005ba04b : xchg eax, ecx ; ret 0xffd1
0x000002000053253f : xchg eax, ecx ; ret 0xffd7
0x0000020000574d0a : xchg eax, ecx ; ret 0xffed
0x0000020000596cc5 : xchg eax, ecx ; ret 0xfff2
0x00000200000c71f9 : xchg eax, ecx ; ret 1
0x00000200000acb7b : xchg eax, ecx ; ret 9
0x00000200006e9f4a : xchg eax, ecx ; rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000009de41 : xchg eax, ecx ; test dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000020000033673 : xchg eax, ecx ; xor byte ptr [rcx], dl ; add byte ptr [rax], al ; jne 0x20000033672 ; mov al, 1 ; ret
0x0000020000625aad : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006e08b7 : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c7315 : xchg eax, edi ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006c80cf : xchg eax, edi ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8341
0x00000200006d4b48 : xchg eax, edi ; add al, byte ptr [rdx] ; add byte ptr [rax], al ; call rbx
0x0000020000100d70 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200003ff18a : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000012b44e : xchg eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x4374b63a], cl ; ret 0xd80
0x0000020000031bb0 : xchg eax, edi ; call 0x2000003d073
0x0000020000367698 : xchg eax, edi ; call 0x20000123dd5
0x00000200003eca95 : xchg eax, edi ; call qword ptr [rax]
0x000002000039e782 : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000062d848 : xchg eax, edi ; enter 7, 0 ; add rsp, 0x48 ; ret
0x000002000060a415 : xchg eax, edi ; in eax, dx ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000fa743 : xchg eax, edi ; jmp 0x200000fa679
0x00000200000f3d3e : xchg eax, edi ; jmp 0x2000019fff4
0x000002000038de0d : xchg eax, edi ; loopne 0x2000038de1a ; add byte ptr [rax], al ; mov rcx, r15 ; call rax
0x00000200004f4fc5 : xchg eax, edi ; loopne 0x200004f4ff0 ; add byte ptr [rax - 0x3ffffe77], bh ; ret
0x00000200006d4e59 : xchg eax, edi ; mov byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x000002000062cdf4 : xchg eax, edi ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x2000062cdee
0x0000020000501959 : xchg eax, edi ; mov qword ptr [rbp - 0x61], r14 ; call 0x2000014dc67
0x00000200001cbf71 : xchg eax, edi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004faf4f : xchg eax, edi ; mov rcx, r13 ; call 0x20000120f3b
0x00000200000df91d : xchg eax, edi ; nop ; add al, 0 ; add dh, dh ; ret 0xf0f
0x000002000017d0d9 : xchg eax, edi ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret 0x7502
0x00000200006d1a6d : xchg eax, edi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c811d : xchg eax, edi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006d1a95 : xchg eax, edi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000048d987 : xchg eax, edi ; push -0x74b7fff1 ; pop rax ; or dh, dh ; ret
0x0000020000453f35 : xchg eax, edi ; push rax ; sar edi, -0x75 ; ret
0x00000200006783f5 : xchg eax, edi ; rcr byte ptr [rdi + rdi*8 + 0x28c48348], 1 ; ret
0x0000020000007955 : xchg eax, edi ; ret
0x0000020000139f40 : xchg eax, edi ; ret 0x1539
0x000002000055a296 : xchg eax, edi ; ret 0x37e9
0x00000200000e9b7b : xchg eax, edi ; ret 0x56
0x00000200002916e8 : xchg eax, edi ; ret 0x63
0x0000020000011a6d : xchg eax, edi ; ret 0x842f
0x0000020000446f19 : xchg eax, edi ; ret 0x84ff
0x0000020000510010 : xchg eax, edi ; ret 0x8bff
0x0000020000446f67 : xchg eax, edi ; ret 0xebff
0x00000200005aff41 : xchg eax, edi ; stc ; ret
0x00000200005f6b2d : xchg eax, edi ; sub ch, cl ; push rsi ; ret 0x7402
0x0000020000154ce6 : xchg eax, edi ; sub dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000266014 : xchg eax, edi ; xor dword ptr [rdx], ecx ; ret
0x0000020000447492 : xchg eax, edx ; adc al, byte ptr [rax] ; mov rcx, r13 ; call 0x2000006a619
0x0000020000670777 : xchg eax, edx ; add al, 0 ; add rsp, 0x28 ; ret
0x0000020000060fdd : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001e363 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000014ec95 : xchg eax, edx ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014ec7d ; add byte ptr [rax], al ; ret
0x0000020000670466 : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006673b5 : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000150c95 : xchg eax, edx ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000150c5d ; add byte ptr [rax], al ; ret
0x000002000010fbd8 : xchg eax, edx ; add eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x000002000000afd2 : xchg eax, edx ; call qword ptr [rdx]
0x00000200000c63fc : xchg eax, edx ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x000002000019738d : xchg eax, edx ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200001b32a4 : xchg eax, edx ; idiv edi ; cmp byte ptr [rbp - 0x7f], r13b ; jne 0x200001b3277 ; jmp 0x200001b326f
0x00000200001e5862 : xchg eax, edx ; in eax, -1 ; add rsp, 0x28 ; ret
0x000002000016e89d : xchg eax, edx ; in eax, dx ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000026d3f0 : xchg eax, edx ; ja 0x2000026d444 ; add ah, dl ; ret
0x000002000054475f : xchg eax, edx ; jle 0x2000054474e ; push rsi ; ret
0x00000200004f5ef2 : xchg eax, edx ; jmp 0x200004f5eba
0x000002000053235f : xchg eax, edx ; jmp rsp
0x0000020000379652 : xchg eax, edx ; jp 0x20000379658 ; dec dword ptr [rax - 0x39] ; ret
0x000002000064b51a : xchg eax, edx ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000064b532
0x00000200000f7d99 : xchg eax, edx ; lock dec dword ptr [rax + 0x63] ; ret 0xb60f
0x0000020000235c2a : xchg eax, edx ; loopne 0x20000235c72 ; add bh, bh ; ret
0x000002000070eb35 : xchg eax, edx ; mov al, 1 ; ret
0x00000200000c4d72 : xchg eax, edx ; out dx, al ; or al, 0 ; xor eax, eax ; ret
0x00000200007161c9 : xchg eax, edx ; out dx, eax ; mov ebx, 0x15ff1eff ; or al, 0xaf ; ret
0x000002000000d0d8 : xchg eax, edx ; pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000051644a : xchg eax, edx ; pop rsp ; ret 0xe9ff
0x00000200001972d6 : xchg eax, edx ; push rsi ; ret 0xf03
0x000002000001fd1a : xchg eax, edx ; ret
0x00000200002112c0 : xchg eax, edx ; ret 0x3345
0x000002000023d528 : xchg eax, edx ; ret 0x39
0x00000200000ffc74 : xchg eax, edx ; ret 0x5488
0x000002000003db91 : xchg eax, edx ; ret 0x8844
0x000002000021123d : xchg eax, edx ; ret 0x8b49
0x00000200004088f1 : xchg eax, edx ; ret 0xdce9
0x0000020000678c46 : xchg eax, edx ; ret 0xff
0x0000020000367fb6 : xchg eax, edx ; ret 0xffff
0x0000020000238aa4 : xchg eax, edx ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200000ca8b7 : xchg eax, edx ; rol dword ptr [rax + 0x77501f9], -1 ; ret
0x000002000013c31f : xchg eax, edx ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200001e592b : xchg eax, edx ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x000002000047d88a : xchg eax, edx ; scasb al, byte ptr [rdi] ; ret 0xebff
0x0000020000047d2f : xchg eax, edx ; sti ; dec dword ptr [rbp + 0x3b] ; ret 0x850f
0x00000200000e0575 : xchg eax, edx ; wait ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000670982 : xchg eax, edx ; xchg eax, ecx ; add al, 0 ; add rsp, 0x68 ; ret
0x000002000043147a : xchg eax, edx ; xchg eax, ecx ; ret
0x0000020000474695 : xchg eax, esi ; adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006e7cb4 : xchg eax, esi ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rbx
0x0000020000107a76 : xchg eax, esi ; adc eax, dword ptr [rax + rax] ; add rsp, 0x58 ; ret
0x00000200006e010a : xchg eax, esi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200003f50ac : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000137015 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200003d7db1 : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000013f7fb : xchg eax, esi ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000015e302 : xchg eax, esi ; add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x00000200006e8257 : xchg eax, esi ; add byte ptr [rsi], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rbx
0x000002000004b8af : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x000002000000ede9 : xchg eax, esi ; add eax, 0x274b5945 ; in eax, 0xa ; ret
0x00000200005118d6 : xchg eax, esi ; clc ; ret 0x85ff
0x00000200001a1b47 : xchg eax, esi ; cmc ; push rsi ; ret 0x7410
0x00000200001a1b5a : xchg eax, esi ; cmc ; push rsi ; ret 0xf20
0x000002000043fe76 : xchg eax, esi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x65ff
0x000002000047554c : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000008f0e1 : xchg eax, esi ; cwde ; add byte ptr [rax - 0x75], cl ; ret 0xf748
0x000002000011a4e5 : xchg eax, esi ; cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x000002000062cdf7 : xchg eax, esi ; inc edx ; jmp 0x2000062cdeb
0x0000020000580146 : xchg eax, esi ; iretd ; mov bl, 0xff ; nop ; jmp 0x2000047c3d5
0x00000200006f94ae : xchg eax, esi ; jle 0x200006f947b ; push rsi ; ret
0x00000200003f268d : xchg eax, esi ; mov eax, 0xc0000022 ; ret
0x00000200006c5f58 : xchg eax, esi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006c93fd : xchg eax, esi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x6beb
0x00000200006cc0c3 : xchg eax, esi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006cc9bd : xchg eax, esi ; pop rax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xeeb
0x000002000000d70c : xchg eax, esi ; popfq ; ret
0x000002000000f6d4 : xchg eax, esi ; push 0x70 ; ret 0xccb
0x0000020000655130 : xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x000002000037baeb : xchg eax, esi ; push rbp ; std ; jmp qword ptr [rcx]
0x000002000003cd5d : xchg eax, esi ; ret
0x00000200004709a4 : xchg eax, esi ; ret 0x10
0x000002000048e61e : xchg eax, esi ; ret 0x21
0x0000020000473db5 : xchg eax, esi ; ret 0x41ff
0x0000020000534509 : xchg eax, esi ; ret 0x48ff
0x000002000001102c : xchg eax, esi ; ret 0x6280
0x000002000055a23a : xchg eax, esi ; ret 0x93e9
0x0000020000503d7c : xchg eax, esi ; ret 0xc033
0x00000200000d2682 : xchg eax, esi ; ret 0xc28b
0x0000020000510111 : xchg eax, esi ; ret 0xf7ff
0x000002000063b715 : xchg eax, esi ; ret 0xffc6
0x0000020000111926 : xchg eax, esi ; ret 4
0x000002000056ec18 : xchg eax, esi ; sbb ch, ch ; push rsi ; ret
0x00000200005086c2 : xchg eax, esi ; stc ; ret 0x45ff
0x0000020000066c5c : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; xchg eax, ebx ; ret 0
0x0000020000025c7d : xchg eax, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003b10d4 : xchg eax, esp ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x00000200006121a7 : xchg eax, esp ; add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x0000020000453496 : xchg eax, esp ; add byte ptr [rax], al ; add bl, ch ; out 0x8b, al ; ret 0x4166
0x0000020000434cd1 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x0000020000063106 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x00000200004c00d3 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x840f
0x00000200001d8850 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x0000020000468bf2 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x74b7dfb5], cl ; ret
0x000002000021651c : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200000ce2ad : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 2], al ; ret 0x8844
0x00000200004a195f : xchg eax, esp ; add dword ptr [rax], eax ; add al, ch ; pop rax ; ret 0xffcb
0x000002000050b29b : xchg eax, esp ; add eax, 0x850f0000 ; ret
0x0000020000604317 : xchg eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000097bbb : xchg eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; jmp qword ptr [r11]
0x0000020000389bd1 : xchg eax, esp ; and al, 0x1b ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x00000200003dbf2b : xchg eax, esp ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000571564 : xchg eax, esp ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200003e8a7a : xchg eax, esp ; and al, 0x30 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000200006d6c90 : xchg eax, esp ; and al, 0x48 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000057112e : xchg eax, esp ; and al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x0000020000448d3d : xchg eax, esp ; and al, 0x68 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200001472a6 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000039e6eb : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000009ecc6 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000638ded : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000200004a8f5f : xchg eax, esp ; and al, 0x80 ; add eax, dword ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0xc503
0x00000200000cfa75 : xchg eax, esp ; and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200000d6ba3 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200001ab614 : xchg eax, esp ; and al, 0x8d ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000003434e : xchg eax, esp ; and al, 0x90 ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x0000020000365027 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003dbdcc : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001a14e3 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa277
0x0000020000443145 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200003b70f8 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000002575a : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x0000020000025785 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000257a2 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x00000200000257bf : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200000257df : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x00000200000257ff : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000057181b : xchg eax, esp ; and al, 0xb0 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xb48
0x00000200003d722e : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003a146a : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000584857 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003a6d09 : xchg eax, esp ; and al, 0xd0 ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7503
0x000002000068c10a : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481c
0x00000200006e9680 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x2f], al ; ret 0x68e9
0x00000200006e9628 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xe904
0x00000200006e97cf : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; ret 0xeb07
0x0000020000194743 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; ret 0xec10
0x00000200005932c4 : xchg eax, esp ; cld ; ret
0x00000200003c9a38 : xchg eax, esp ; cmp al, 0 ; add rcx, r8 ; jmp rcx
0x00000200003c9d08 : xchg eax, esp ; cmp al, 0 ; add rcx, rdx ; jmp rcx
0x00000200006eb250 : xchg eax, esp ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001d4f78 : xchg eax, esp ; idiv edi ; add rsp, 0x58 ; ret
0x000002000024d314 : xchg eax, esp ; imul ecx, dword ptr [rdx], 0 ; in al, dx ; ret 0x24
0x00000200000107de : xchg eax, esp ; in al, dx ; call qword ptr [rax]
0x000002000044d010 : xchg eax, esp ; in eax, -1 ; call 0x200000702b6
0x0000020000572f67 : xchg eax, esp ; in eax, dx ; dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x1a], 1 ; ret
0x000002000006bff3 : xchg eax, esp ; int 0x80
0x000002000062285e : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001359f8 : xchg eax, esp ; mov al, 2 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200000146de : xchg eax, esp ; movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x00000200000e8ad4 : xchg eax, esp ; or al, byte ptr [rax] ; add bl, ch ; ret
0x000002000024d2b4 : xchg eax, esp ; or al, byte ptr fs:[rax] ; and dword ptr [rsi + 0xa], 0 ; nop ; ret 0x24
0x000002000050cb91 : xchg eax, esp ; or byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000174084 : xchg eax, esp ; out dx, al ; push rsi ; ret 0x7401
0x00000200000963ef : xchg eax, esp ; pop rax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000038a7e6 : xchg eax, esp ; push 0 ; ret
0x000002000000dad9 : xchg eax, esp ; push rax ; loop 0x2000000db0f ; adc dword ptr [rdx], ebp ; lahf ; ret
0x000002000019739a : xchg eax, esp ; push rsi ; ret 0xf03
0x00000200000bd1b2 : xchg eax, esp ; ret
0x0000020000469c0e : xchg eax, esp ; ret 0x1188
0x00000200004bfb96 : xchg eax, esp ; ret 0x15ff
0x00000200004eafcf : xchg eax, esp ; ret 0x16e8
0x00000200004087d2 : xchg eax, esp ; ret 0x1789
0x00000200000286b4 : xchg eax, esp ; ret 0x2188
0x000002000023d2bc : xchg eax, esp ; ret 0x23
0x00000200000f97c7 : xchg eax, esp ; ret 0x2349
0x000002000025d2b8 : xchg eax, esp ; ret 0x25
0x00000200004262b4 : xchg eax, esp ; ret 0x3345
0x000002000050536f : xchg eax, esp ; ret 0x348
0x00000200000dd14c : xchg eax, esp ; ret 0x5488
0x000002000064443f : xchg eax, esp ; ret 0x5489
0x0000020000721c75 : xchg eax, esp ; ret 0x5760
0x00000200000af6de : xchg eax, esp ; ret 0x7539
0x00000200005732bf : xchg eax, esp ; ret 0x8188
0x00000200000a87ae : xchg eax, esp ; ret 0x8840
0x00000200005b5b1a : xchg eax, esp ; ret 0x8844
0x00000200000a57b5 : xchg eax, esp ; ret 0x8948
0x00000200006119f4 : xchg eax, esp ; ret 0x8949
0x000002000022fce4 : xchg eax, esp ; ret 0x8a41
0x00000200001d6e4a : xchg eax, esp ; ret 0x8b44
0x00000200000ab7d7 : xchg eax, esp ; ret 0x8b48
0x000002000006d375 : xchg eax, esp ; ret 0x8b4c
0x000002000014ac80 : xchg eax, esp ; ret 0x8d48
0x0000020000470e3d : xchg eax, esp ; ret 0x8d4c
0x00000200000268eb : xchg eax, esp ; ret 0xa2e8
0x000002000002698d : xchg eax, esp ; ret 0xa8e8
0x0000020000721638 : xchg eax, esp ; ret 0xb5e9
0x00000200001798c5 : xchg eax, esp ; ret 0xb60f
0x000002000007ac85 : xchg eax, esp ; ret 0xb8
0x000002000022b45c : xchg eax, esp ; ret 0xba0f
0x0000020000471dcb : xchg eax, esp ; ret 0xc084
0x0000020000407ad3 : xchg eax, esp ; ret 0xccff
0x0000020000095c23 : xchg eax, esp ; ret 0xdae9
0x00000200000959e5 : xchg eax, esp ; ret 0xe380
0x000002000071fea8 : xchg eax, esp ; ret 0xe8ff
0x00000200004ae950 : xchg eax, esp ; ret 0xe9ff
0x000002000043a941 : xchg eax, esp ; ret 0xebff
0x000002000009de28 : xchg eax, esp ; ret 0xfc24
0x0000020000636000 : xchg eax, esp ; ret 0xffc6
0x00000200001c2b64 : xchg eax, esp ; ret 0xfff0
0x00000200003de588 : xchg eax, esp ; ret 9
0x00000200003cd493 : xchg eax, esp ; rol al, 0xe0 ; add al, 0x32 ; ret
0x0000020000095ece : xchg eax, esp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000062542f : xchg eax, esp ; rol cl, 0xe0 ; or eax, 0x23184633 ; ret 0x4631
0x0000020000511273 : xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x000002000008ea04 : xchg eax, esp ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000616158 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x00000200005302f9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000530364 ; ret
0x000002000052dc95 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop r13 ; pop rbp ; ret
0x0000020000163a6a : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000043601a : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sub bl, al ; mov eax, edx ; jmp 0x20000436017
0x00000200001be6ae : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x0000020000057b6d : xchg eax, esp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200005474e0 : xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret 0xf44
0x000002000013c43a : xchg eax, esp ; sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000026985 : xchg eax, esp ; shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xa8e8
0x000002000053df37 : xchg eax, esp ; shr cl, 0xd5 ; movsxd rsp, esi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000713136 : xchg eax, esp ; stc ; jmp qword ptr [rsi + 0x3b]
0x000002000043a878 : xchg eax, esp ; std ; ret 0x85ff
0x000002000010603a : xchg eax, esp ; sti ; or dword ptr [rax], eax ; ret
0x0000020000608b58 : xchg eax, esp ; xor al, 0xa0 ; dec dword ptr [rax + 0x3b] ; ret 0x1875
0x00000200000100fa : xchg eax, esp ; xor al, 0xb1 ; or eax, 0x33bc25e6 ; ret
0x0000020000467890 : xchg eax, esp ; xor eax, 0x458b0011 ; ret
0x00000200001972d5 : xchg eax, r10d ; push rsi ; ret 0xf03
0x000002000065e3d5 : xchg eax, r14d ; ret
0x00000200006709db : xchg eax, r9d ; add al, 0 ; add rsp, 0x58 ; ret
0x000002000061440d : xchg ebp, eax ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003e675e : xchg ebp, ecx ; ret 0x16
0x000002000062a256 : xchg ebx, esp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000042064 : xchg ecx, ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200000b14de : xchg ecx, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000002000048e885 : xchg edx, eax ; dec dword ptr [rax - 0x75] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4810
0x00000200001c089f : xchg edx, ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000072492d : xchg edx, ecx ; ret 0xe9ff
0x00000200004f521d : xchg esi, eax ; ret
0x00000200005b45e6 : xchg esi, esi ; push rsi ; ret
0x000002000065a92d : xchg esp, edx ; ret
0x0000020000630025 : xchg qword ptr [r9], rcx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x00000200004feec6 : xchg qword ptr [rax + rcx*8 + 0x50], r8 ; mov eax, r9d ; ret
0x00000200004b3fe8 : xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x000002000010ca2d : xchg qword ptr [rcx], rax ; ret
0x00000200000645af : xchg qword ptr [rcx], rdx ; test rdx, rdx ; jne 0x200000645c0 ; ret
0x00000200000657fb : xchg qword ptr [rcx], rdx ; test rdx, rdx ; jne 0x2000006580c ; ret
0x00000200003672bf : xchg qword ptr [rdx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f0a63 : xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x0000020000520150 : xchg qword ptr [rip + 0x18a421], rcx ; ret
0x0000020000520158 : xchg qword ptr [rip - 0x240a8f], rcx ; ret
0x000002000057c70a : xchg r8, r13 ; ret
0x00000200003eca94 : xchg rax, r15 ; call qword ptr [rax]
0x000002000044d162 : xchg rax, rbx ; in eax, -1 ; call 0x20000070847
0x00000200007187e6 : xchg rax, rdx ; ret
0x00000200003c9a37 : xchg rax, rsp ; cmp al, 0 ; add rcx, r8 ; jmp rcx
0x0000020000135ef1 : xlatb ; adc al, 8 ; add byte ptr [rbp - 0x74bbcfa9], cl ; ret
0x000002000026d425 : xlatb ; adc byte ptr [rax], al ; push rbp ; ficom dword ptr [rax] ; add al, bh ; ret
0x000002000026d3cd : xlatb ; adc byte ptr [rax], al ; pushfq ; ret
0x000002000014ed9b : xlatb ; add byte ptr [rax], al ; ret
0x000002000020a013 : xlatb ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200000e3862 : xlatb ; add byte ptr es:[rdx + rcx - 0x75], dh ; or byte ptr [rbx], dil ; ret 0xf41
0x0000020000010e75 : xlatb ; and eax, edi ; ret 0xf958
0x000002000044cd93 : xlatb ; call 0x20000070d74
0x0000020000463fb3 : xlatb ; call 0x2000008a164
0x0000020000494571 : xlatb ; call 0x200000b48ec
0x00000200004704c7 : xlatb ; call 0x200000bc773
0x000002000021f685 : xlatb ; call 0x20000214181
0x00000200005fe3d3 : xlatb ; call 0x20000225194
0x0000020000666110 : xlatb ; call 0x20000294e24
0x00000200006fe18d : xlatb ; call 0x200004ba3f7
0x000002000045ace6 : xlatb ; call qword ptr [rax]
0x000002000008f1bd : xlatb ; call rax
0x000002000066f6a8 : xlatb ; call rdi
0x00000200000824b9 : xlatb ; cmc ; sldt word ptr [rcx - 0x75] ; ret
0x000002000051ef35 : xlatb ; dec dword ptr [rax - 0x75] ; enter 0x41e8, -0x17 ; ret
0x0000020000516b69 : xlatb ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x9be
0x00000200003d1fdd : xlatb ; dec esp ; mov rcx, rbp ; call 0x200003be24c
0x000002000010a1a1 : xlatb ; fstp dword ptr [rax + rax] ; jae 0x2000010a1ae ; ret
0x000002000019ce02 : xlatb ; hlt ; dec esp ; mov rcx, rbx ; call 0x200001d90e5
0x00000200005342b6 : xlatb ; inc dword ptr [rcx - 0x7c] ; fbstp dword ptr [rbp + rcx - 0xa] ; ret
0x00000200001ccc7a : xlatb ; int1 ; inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x000002000016fd45 : xlatb ; jmp 0x2000016fd0d
0x0000020000290534 : xlatb ; jmp qword ptr [rdx]
0x000002000005e41f : xlatb ; jmp rdx
0x00000200001a2abd : xlatb ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x000002000000f210 : xlatb ; mov cl, 0xbc ; ret
0x00000200000115c2 : xlatb ; mov dl, 0x76 ; ret 0xbb54
0x00000200006cb9a8 : xlatb ; mov dword ptr [rbp + 0x34], edx ; mov r8d, edx ; jmp 0x200006cb9bd
0x00000200005085f4 : xlatb ; mov dword ptr [rsp + 0x20], ebx ; call 0x20000138064
0x000002000066c031 : xlatb ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000019bde1 : xlatb ; mov ebp, 0xe990ffe8 ; stosd dword ptr [rdi], eax ; ret
0x000002000018525b : xlatb ; mov ebx, 0xb70ffff0 ; ret 0x4166
0x000002000051ec3c : xlatb ; mov ebx, eax ; call 0x2000014dc06
0x000002000051ec3b : xlatb ; mov ebx, eax ; call 0x2000014dc07
0x00000200006f1a64 : xlatb ; mov qword ptr [rsp + 0x20], rax ; call 0x2000014dce8
0x000002000010cc95 : xlatb ; mov rax, qword ptr [rip + 0x244863] ; call rax
0x000002000010cc42 : xlatb ; mov rax, qword ptr [rip + 0x2448b6] ; call rax
0x000002000014a9b1 : xlatb ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000014134e : xlatb ; mov rcx, r12 ; call r14
0x000002000066beb2 : xlatb ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000049bafb : xlatb ; mov rcx, r13 ; call 0x200000bc777
0x0000020000170c76 : xlatb ; mov rcx, r14 ; call 0x2000022cf36
0x00000200000d8c53 : xlatb ; mov rcx, r14 ; call rax
0x000002000059ba4f : xlatb ; mov rcx, r15 ; call 0x20000047c76
0x00000200005ae433 : xlatb ; mov rcx, r15 ; call rax
0x000002000044a57f : xlatb ; mov rcx, rbp ; call 0x20000074ed3
0x00000200001e037b : xlatb ; mov rcx, rbp ; call rax
0x000002000064046d : xlatb ; mov rcx, rbx ; call 0x200000bc776
0x00000200001c1d1c : xlatb ; mov rcx, rbx ; call r10
0x00000200004055da : xlatb ; mov rcx, rbx ; call r14
0x0000020000672a4f : xlatb ; mov rcx, rbx ; call rax
0x00000200005c5bf6 : xlatb ; mov rcx, rdi ; call 0x20000431ece
0x000002000050c767 : xlatb ; mov rcx, rsi ; call 0x20000138acb
0x00000200005141d9 : xlatb ; mov rcx, rsi ; call 0x2000013acdf
0x00000200005ae46e : xlatb ; mov rcx, rsi ; call r10
0x000002000014138b : xlatb ; mov rcx, rsi ; call r14
0x00000200005f22d5 : xlatb ; mov rcx, rsi ; mov ebx, eax ; call 0x2000051e58c
0x000002000066bd54 : xlatb ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x0000020000595e69 : xlatb ; or bh, bh ; ret 0xc1ff
0x000002000014d470 : xlatb ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200007225b1 : xlatb ; out dx, al ; ret 0x75ff
0x000002000017f85c : xlatb ; out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000017f83f : xlatb ; out dx, eax ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000017f50c : xlatb ; out dx, eax ; push rsi ; ret
0x000002000043ac65 : xlatb ; pop rbx ; ret
0x00000200000f8dbd : xlatb ; ret
0x000002000000d0e2 : xlatb ; ret 0xcf31
0x00000200003ca025 : xlatb ; ret 0xfff0
0x0000020000121de7 : xlatb ; ret 8
0x000002000044b9a0 : xlatb ; sar edi, -0x75 ; ret
0x00000200000727f2 : xlatb ; xor eax, eax ; ret
0x000002000019ae1d : xor ah, 0xff ; mov eax, 0xc00000bb ; ret
0x000002000067138c : xor ah, al ; ret
0x0000020000290c85 : xor ah, byte ptr [rbx] ; ret
0x000002000015e27a : xor ah, byte ptr [rdx - 1] ; ljmp ptr [rbx] ; ret 0x42c6
0x000002000000d650 : xor ah, byte ptr [rip - 0x61f25bcc] ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200005a27b4 : xor ah, dh ; push rsi ; ret
0x00000200000b5978 : xor al, 0 ; add al, al ; ret
0x0000020000020d33 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x00000200000e4c87 : xor al, 0 ; add byte ptr [rax], al ; ret
0x000002000000a33c : xor al, 0 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x0000020000664de8 : xor al, 0 ; ret
0x000002000051d4e8 : xor al, 0x11 ; ret
0x00000200003f1c7f : xor al, 0x16 ; add byte ptr [rbx], ah ; ret
0x000002000013c67e : xor al, 0x17 ; add dh, dh ; ret
0x0000020000134946 : xor al, 0x1e ; or byte ptr [rax], al ; mov ecx, edi ; call rax
0x00000200001e05de : xor al, 0x21 ; add bh, bh ; ret
0x000002000056e8ca : xor al, 0x24 ; xor ebx, ebx ; mov dword ptr [r13], edi ; jmp 0x2000056e89f
0x0000020000600360 : xor al, 0x2a ; ret
0x00000200004babd1 : xor al, 0x33 ; ret 0xc148
0x000002000051ce58 : xor al, 0x36 ; sar bh, 0xeb ; ret 0xd233
0x0000020000402101 : xor al, 0x3b ; ret
0x000002000068d840 : xor al, 0x3b ; ret 0x2675
0x0000020000365e1d : xor al, 0x3b ; xor byte ptr [r10 + r10 - 1], r14b ; ret
0x00000200003d03fd : xor al, 0x41 ; mov edx, esi ; mov rcx, rbx ; call r10
0x00000200006cb9ab : xor al, 0x44 ; mov eax, edx ; jmp 0x200006cb9ba
0x000002000068d86f : xor al, 0x48 ; add esp, 0x28 ; ret
0x00000200000b5616 : xor al, 0x48 ; lea eax, dword ptr [rip + 0xaba12] ; ret
0x00000200005cee9e : xor al, 0x48 ; mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x0000020000205076 : xor al, 0x76 ; add bh, dh ; ret 0x5f8a
0x00000200006798f4 : xor al, 0x78 ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x0000020000438e08 : xor al, 0x7a ; ret
0x0000020000074d4d : xor al, 0x85 ; sar byte ptr [rax - 0xa], 0xf6 ; ret 0x7507
0x0000020000674ee8 : xor al, 0x88 ; ret
0x00000200000d8dd0 : xor al, 0x8b ; ret
0x00000200006fc3d2 : xor al, 0x8b ; ret 0x8d48
0x000002000050ba3f : xor al, 0x8b ; sbb byte ptr [r9], r8b ; pop rdi ; sbb al, 0x3b ; ret
0x0000020000608b59 : xor al, 0xa0 ; dec dword ptr [rax + 0x3b] ; ret 0x1875
0x000002000043935c : xor al, 0xaa ; ret 0xf6ff
0x00000200000c3a8c : xor al, 0xae ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000100fb : xor al, 0xb1 ; or eax, 0x33bc25e6 ; ret
0x0000020000715a38 : xor al, 0xb8 ; ret
0x0000020000162db0 : xor al, 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004c3b95 : xor al, 0xd ; add byte ptr [rbp + 0xb], al ; ret 0x8944
0x00000200005a2bba : xor al, 0xd1 ; push rsi ; ret
0x0000020000585706 : xor al, 0xd4 ; call qword ptr [rbx]
0x000002000058576f : xor al, 0xd4 ; jmp qword ptr [rax]
0x0000020000670018 : xor al, 0xd9 ; ret
0x00000200000572eb : xor al, 0xe8 ; ret
0x00000200005527be : xor al, 0xe9 ; push rsi ; ret
0x000002000005b5bd : xor al, 0xe9 ; ret
0x000002000043c55a : xor al, 0xf ; test dword ptr [rbp - 0xa000000], edi ; ret
0x000002000007d084 : xor al, 0xf6 ; ret
0x0000020000725de6 : xor al, 0xf6 ; ret 0x7401
0x0000020000079f0c : xor al, 0xf6 ; ret 0x7404
0x00000200001bebe0 : xor al, 0xf7 ; ret 0x820
0x000002000065f5b3 : xor al, 0xfc ; ret 0x4c1f
0x00000200003717fb : xor al, 0xff ; push rsi ; ret 0xf04
0x00000200002171ab : xor al, 0xff ; ret
0x000002000065d3d0 : xor al, 1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000537c18 : xor al, 1 ; ret 0x4cff
0x000002000007028b : xor al, al ; add rsp, 0x10 ; pop rbx ; ret
0x00000200001107e1 : xor al, al ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000931fa : xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000600501 : xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a84a1 : xor al, al ; add rsp, 0x28 ; ret
0x000002000048d8e5 : xor al, al ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001cc83c : xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001cabc5 : xor al, al ; add rsp, 0x38 ; ret
0x0000020000446f2a : xor al, al ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004ee224 : xor al, al ; add rsp, 0x60 ; pop rdi ; ret
0x00000200006eec2b : xor al, al ; and al, 0x38 ; xor byte ptr [rcx + 2], al ; xor eax, eax ; ret
0x00000200005d1702 : xor al, al ; mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x0000020000141a86 : xor al, al ; mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x000002000022ea28 : xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x000002000014a964 : xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002a96f : xor al, al ; ret
0x00000200000ecaf3 : xor al, al ; test dl, dl ; js 0x200000ecb00 ; ret
0x000002000051eeb8 : xor al, bpl ; add ebp, ebp ; ret
0x000002000003e13a : xor al, byte ptr [rax + rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200000286af : xor al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret 0x2188
0x00000200001cc655 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000025af9 : xor al, byte ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000026819 : xor al, byte ptr [rax] ; sub rax, rcx ; ret
0x00000200001514fc : xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x00000200001513bb : xor al, byte ptr [rbx + 0xb41fce0] ; ror byte ptr [rdi], 0x30 ; ret
0x00000200006e29fc : xor al, byte ptr [rbx + rcx*4 - 0x10] ; lea rcx, qword ptr [rax + 8] ; call r9
0x00000200006d479c : xor al, byte ptr [rbx - 0x7cb7073d] ; ret 0x4908
0x00000200006e5d96 : xor al, byte ptr [rbx] ; fimul word ptr [rax - 0x7d] ; ret 0x4908
0x0000020000680d4f : xor al, byte ptr [rbx] ; int 0xff
0x0000020000048bf4 : xor al, byte ptr [rcx + 0x3b] ; ret
0x000002000013fd66 : xor al, byte ptr [rcx - 0x3fccffeb] ; ret
0x000002000067dd5e : xor al, byte ptr [rcx] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200006768ac : xor al, byte ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x000002000020e170 : xor al, byte ptr [rdi + rcx - 0x49] ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000b4947 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200005200d5 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; setne al ; ret
0x000002000051eeb9 : xor al, ch ; add ebp, ebp ; ret
0x00000200004021a5 : xor al, ch ; in eax, -0xe ; ret 0x65ff
0x0000020000439661 : xor al, ch ; jns 0x20000439663 ; ret 0x44ff
0x000002000068a033 : xor al, ch ; lahf ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000051186e : xor al, ch ; mov ebx, es ; ret
0x0000020000114e58 : xor al, ch ; mov edx, 0x3d830025 ; pop rbx ; ret
0x0000020000402120 : xor al, ch ; out dx, al ; ret 0x41ff
0x00000200004d00c0 : xor al, ch ; pop rbx ; ret 0xfff
0x00000200000ff157 : xor al, ch ; ret
0x00000200005d010c : xor al, ch ; ret 0xa73b
0x000002000039f4c8 : xor al, ch ; ret 0xc91f
0x000002000039e6a8 : xor al, ch ; ret 0xc928
0x000002000039e7c8 : xor al, ch ; ret 0xc92c
0x0000020000506238 : xor al, ch ; ret 0xd8dd
0x000002000055418c : xor al, ch ; ret 0xe983
0x00000200004216a3 : xor al, ch ; sub esp, dword ptr [rsi] ; ret 0xe9ff
0x0000020000175d1b : xor al, ch ; wait ; test al, 0xf8 ; call qword ptr [rax - 0x11333d17]
0x00000200000917b3 : xor al, dl ; and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x0000020000175d1a : xor al, r13b ; wait ; test al, 0xf8 ; call qword ptr [rax - 0x11333d17]
0x00000200005d1701 : xor al, r8b ; mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x0000020000049bc2 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000af400 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000036635f : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000013172c : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xa348
0x0000020000091402 : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xba49
0x000002000036f49c : xor bh, 0xff ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000015e1ff : xor bh, 0xff ; inc ebx ; xor eax, eax ; ret
0x00000200004df116 : xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200001d8092 : xor bh, 0xff ; push rsi ; ret
0x0000020000007585 : xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x0000020000681835 : xor bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000229bec : xor bh, bh ; js 0x20000229c42 ; add esp, 0x20 ; pop rdi ; ret
0x00000200004023fb : xor bh, bh ; ret
0x00000200001e61ed : xor bh, bh ; ret 0xc28b
0x000002000062f32c : xor bh, bh ; ret 0xd03b
0x000002000068905a : xor bh, bh ; ret 0xff48
0x000002000071361c : xor bh, bl ; ret
0x00000200001343f5 : xor bh, dh ; jmp 0x1fffad51508
0x000002000010c656 : xor bh, dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000036802a : xor bl, ah ; dec dword ptr [rdi] ; ret 0x4589
0x000002000050f647 : xor bl, bl ; call 0x200001396bd
0x0000020000219480 : xor bl, ch ; add eax, 0x1abe ; add dh, dh ; ret
0x000002000055ee77 : xor bl, ch ; jmp qword ptr [rcx]
0x000002000062c4cf : xor bl, ch ; mov cl, 3 ; fisttp word ptr [rcx - 0x7d] ; ret 0x4104
0x0000020000194a2d : xor bl, dh ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x00000200003fc7a6 : xor byte ptr [r10 + 0x47c1e801], sil ; ret
0x0000020000365e1f : xor byte ptr [r10 + r10 - 1], r14b ; ret
0x000002000053da25 : xor byte ptr [r10], r12b ; ret 0xd8f6
0x00000200004b4f0b : xor byte ptr [r11 + r9*4 - 0x40], al ; call 0x20000141177
0x0000020000081de2 : xor byte ptr [r11 + rcx*4 + 0x6d], r8b ; or bh, bh ; ret
0x00000200001db12f : xor byte ptr [r13 + 0x1b], sil ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200001a142d : xor byte ptr [r13 + 0x3b], cl ; ret 0xe672
0x000002000071185e : xor byte ptr [r13 - 0x17c78740], r8b ; xchg eax, edi ; ret
0x0000020000486dab : xor byte ptr [r8 + 0x16850f04], r13b ; ret
0x00000200005201e0 : xor byte ptr [r8 + 0x2b], cl ; ret
0x0000020000159ef0 : xor byte ptr [r8 + 0xf], cl ; ret
0x00000200000ffd95 : xor byte ptr [r8 - 0x73], cl ; push rdx ; or byte ptr [rbp + 0x2b], cl ; ret
0x000002000013ffb0 : xor byte ptr [r8 - 0x73], r9b ; ror byte ptr [r13 - 0x75], 1 ; ret
0x0000020000238b69 : xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200005d3dbf : xor byte ptr [r8 - 0x75], r9b ; ret
0x000002000037b99c : xor byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000486dac : xor byte ptr [rax + 0x16850f04], ch ; ret
0x00000200001585ec : xor byte ptr [rax + 0x28c48348], dl ; ret
0x0000020000143f21 : xor byte ptr [rax + 0x2b], cl ; ret
0x000002000018208b : xor byte ptr [rax + 0x33], cl ; ret 0xd348
0x000002000018208a : xor byte ptr [rax + 0x33], r9b ; ret 0xd348
0x000002000005a88f : xor byte ptr [rax + 0x3b660011], cl ; ret 0x840f
0x000002000011a4eb : xor byte ptr [rax + 0x3b], cl ; ret
0x0000020000025900 : xor byte ptr [rax + 0x63], cl ; ret
0x00000200006734b8 : xor byte ptr [rax + 0xb], cl ; ret 0xf48
0x0000020000159ef1 : xor byte ptr [rax + 0xf], cl ; ret
0x00000200001e1ef6 : xor byte ptr [rax + 3], cl ; ret
0x00000200004e8520 : xor byte ptr [rax + 3], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xb49
0x00000200001b1715 : xor byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000217287 : xor byte ptr [rax + rax], cl ; add byte ptr [rax - 0x74ee8af8], ch ; ret
0x00000200001f3020 : xor byte ptr [rax + rax], cl ; ret
0x0000020000365421 : xor byte ptr [rax - 0x39], cl ; ret
0x00000200000798b7 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc32ae0cf
0x000002000068f101 : xor byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200004d1603 : xor byte ptr [rax - 0x73], cl ; adc al, r13b ; ret
0x000002000072f3fe : xor byte ptr [rax - 0x73], cl ; loopne 0x2000072f409 ; ret
0x00000200000ffd96 : xor byte ptr [rax - 0x73], cl ; push rdx ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200004f7075 : xor byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x40 ; call 0x20000120f3d
0x0000020000403436 : xor byte ptr [rax - 0x73], cl ; ret
0x000002000013ffb1 : xor byte ptr [rax - 0x73], cl ; ror byte ptr [r13 - 0x75], 1 ; ret
0x0000020000686c91 : xor byte ptr [rax - 0x75], cl ; fld1 ; ret 0xbb1d
0x00000200004ff35c : xor byte ptr [rax - 0x75], cl ; int1 ; call 0x2000012e1bf
0x00000200001d1242 : xor byte ptr [rax - 0x75], cl ; je 0x200001d1273 ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200003b5089 : xor byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x75], cl ; ret 0xff25
0x00000200001c4d79 : xor byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000525f1 : xor byte ptr [rax - 0x75], cl ; ret
0x0000020000238b6a : xor byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000072e00 : xor byte ptr [rax - 0x75], cl ; ret 0x8341
0x000002000020fc88 : xor byte ptr [rax - 0x75], cl ; ret 0x8348
0x00000200003d728d : xor byte ptr [rax - 0x75], cl ; ret 0x948b
0x00000200001de928 : xor byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005f3044 : xor byte ptr [rax - 0x75], cl ; retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006fe18a : xor byte ptr [rax - 0x75], cl ; xlatb ; call 0x200004ba3fa
0x000002000055e584 : xor byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x000002000051c177 : xor byte ptr [rax - 0x77], cl ; and al, 0x30 ; call 0x2000013e351
0x000002000046fd75 : xor byte ptr [rax - 0x77], cl ; int 0x80
0x000002000071583a : xor byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200005bf1dd : xor byte ptr [rax - 0x77], cl ; or r14b, r14b ; ret
0x000002000013b845 : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [r13 + 0x3b], cl ; ret
0x00000200001d6e12 : xor byte ptr [rax - 0x7b], cl ; leave ; je 0x200001d6e2a ; mov dword ptr [rcx], r10d ; ret
0x00000200000e44b9 : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000e44b5 ; mov rax, rdx ; ret
0x0000020000568a67 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000672a33 : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x00000200006688f2 : xor byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; jne 0x200006688ec ; xor al, al ; ret
0x00000200000894fa : xor byte ptr [rax - 0x7d], cl ; enter 0x4801, 0x3b ; ret 0x1a74
0x0000020000097727 : xor byte ptr [rax - 0x7d], cl ; ret
0x000002000020efbb : xor byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000037da79 : xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x000002000070e6e6 : xor byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200006f7808 : xor byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x0000020000611e19 : xor byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x00000200005aac05 : xor byte ptr [rax - 0x7f], cl ; ret
0x000002000015dd66 : xor byte ptr [rax - 0x7f], cl ; ret 0x100
0x000002000036c18a : xor byte ptr [rax - 0x7f], cl ; ret 0xfff
0x0000020000099440 : xor byte ptr [rax - 1], cl ; ret
0x000002000037894f : xor byte ptr [rax], 0x35 ; add byte ptr [rbp - 0x74c78b2e], al ; ret 0xe8c1
0x00000200001c1597 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov ecx, ebx ; call 0x200005cd7d0
0x00000200000a65e2 : xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006176e1 : xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x00000200004c0f72 : xor byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x0000020000262b09 : xor byte ptr [rax], al ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, al ; ret
0x0000020000653a54 : xor byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200000fe3a3 : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003c5cb : xor byte ptr [rax], al ; jmp 0x2000003c595
0x00000200004149bf : xor byte ptr [rax], al ; jne 0x200004149c8 ; ret
0x0000020000415b3e : xor byte ptr [rax], al ; jne 0x20000415b47 ; ret
0x000002000003a006 : xor byte ptr [rax], al ; ret
0x000002000023be07 : xor byte ptr [rax], dh ; int1 ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000149b05 : xor byte ptr [rax], dh ; or ecx, dword ptr [rax - 1] ; ret
0x0000020000275e0d : xor byte ptr [rax], dl ; push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x4e
0x00000200001db130 : xor byte ptr [rbp + 0x1b], dh ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x000002000040706c : xor byte ptr [rbp + 0x1be8ffec], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x65ff
0x00000200001a142e : xor byte ptr [rbp + 0x3b], cl ; ret 0xe672
0x00000200000e7a2b : xor byte ptr [rbp + 0x48f178c0], al ; mov eax, edx ; ret
0x00000200000e19af : xor byte ptr [rbp + 0x48f478c0], al ; mov eax, edx ; ret
0x0000020000085ef6 : xor byte ptr [rbp + rcx*4 + 0x14], cl ; or byte ptr [rcx - 0x75], al ; ret
0x0000020000534502 : xor byte ptr [rbp + rcx*4 + 0x42], al ; and al, ch ; mov ah, 0x96 ; ret 0x48ff
0x00000200004c78ad : xor byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000200006668da : xor byte ptr [rbp + rcx*4 + 5], cl ; ret 0xbc46
0x000002000010c67c : xor byte ptr [rbp + rcx*8 - 0x15], dh ; ret 0xcccc
0x000002000071185f : xor byte ptr [rbp - 0x17c78740], al ; xchg eax, edi ; ret
0x0000020000191f53 : xor byte ptr [rbp - 0x34], 0xe9 ; ret 0xfff2
0x00000200006fbfe4 : xor byte ptr [rbp - 0x3b], dl ; call rbx
0x000002000000e712 : xor byte ptr [rbp - 0x61fe205], bl ; pop rdx ; ret
0x000002000010c42c : xor byte ptr [rbp - 0x73], al ; add eax, ebp ; cli ; ret 0xfff4
0x000002000068d839 : xor byte ptr [rbp - 0x74d78b2e], al ; xor al, 0x3b ; ret 0x2675
0x0000020000172532 : xor byte ptr [rbp - 0x75], al ; ret
0x000002000049927b : xor byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200003e3e5a : xor byte ptr [rbp - 0x75], cl ; loope 0x200003e3dee ; ret 0x8b4c
0x0000020000067e13 : xor byte ptr [rbx + 0x33441fe5], al ; ret 0xffb9
0x000002000072e196 : xor byte ptr [rbx + 0x3480843], cl ; ret
0x000002000072e195 : xor byte ptr [rbx + 0x3480843], r9b ; ret
0x000002000068090b : xor byte ptr [rbx + 0x49], bl ; jmp rax
0x0000020000680903 : xor byte ptr [rbx + 0x49], bl ; jmp rdx
0x000002000056f0c0 : xor byte ptr [rbx + rbx*8 - 0x7cb7fb8b], al ; ret 0xe810
0x00000200000e4d63 : xor byte ptr [rbx + rcx*4 + 0x3d], al ; lodsd eax, dword ptr [rsi] ; ret 0x26
0x00000200004c4b15 : xor byte ptr [rbx + rcx*4 + 0x4a], cl ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x0000020000081de3 : xor byte ptr [rbx + rcx*4 + 0x6d], al ; or bh, bh ; ret
0x000002000065b3df : xor byte ptr [rbx + rcx*4 + 5], al ; cmp esi, eax ; ret
0x00000200004b4f0c : xor byte ptr [rbx + rcx*4 - 0x40], al ; call 0x20000141176
0x00000200000f92ec : xor byte ptr [rbx + rdi - 0x40], al ; je 0x200000f92ea ; jmp 0x200000f92be
0x0000020000510f43 : xor byte ptr [rbx - 0x334a1728], cl ; ret
0x0000020000290c31 : xor byte ptr [rbx], ah ; ret
0x000002000010a68d : xor byte ptr [rbx], al ; and byte ptr [rcx - 0x75], cl ; add byte ptr [rcx - 0x7f], cl ; ret 0xfff
0x0000020000628e01 : xor byte ptr [rbx], bh ; ret 0x830f
0x0000020000146054 : xor byte ptr [rbx], ch ; ret
0x000002000047a7be : xor byte ptr [rbx], cl ; ret
0x0000020000404e82 : xor byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret 0x8948
0x00000200004c6792 : xor byte ptr [rbx], dh ; leave ; call 0x200000e7092
0x0000020000106a5b : xor byte ptr [rbx], dh ; rol bh, 1 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000010d0c7 : xor byte ptr [rbx], dh ; rol bh, 1 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001bd649 : xor byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x0000020000533fbd : xor byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter -0x718, -0x65 ; ret 0x33ff
0x000002000042113d : xor byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000043cdd
0x0000020000648bc2 : xor byte ptr [rbx], dh ; shr al, cl ; push rsi ; ret 0xffc4
0x000002000009380e : xor byte ptr [rbx], dh ; test byte ptr [rbx - 0x2674b706], 0xf7 ; ret 0xfffe
0x00000200001bd648 : xor byte ptr [rbx], sil ; rol byte ptr [rcx - 0x77], 9 ; ret
0x00000200005f082f : xor byte ptr [rcx + 0x1b801], cl ; add byte ptr [rax], al ; ret
0x00000200001be3a1 : xor byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000200000917b7 : xor byte ptr [rcx + 0x22], al ; ret
0x00000200001997dc : xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x0000020000053aa9 : xor byte ptr [rcx + 0x23], cl ; ret 0x8b45
0x00000200004f534a : xor byte ptr [rcx + 0x3b], al ; ret 0x1073
0x00000200005d3695 : xor byte ptr [rcx + 0x5c], al ; ret
0x00000200000b6717 : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x000002000065ce9a : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001d731c : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000013b528 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200004e04aa : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x000002000010103b : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000480a9 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000365f79 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x000002000016229b : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200002266e6 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002b2b7 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000027162 : xor byte ptr [rcx + 0x5e], al ; ret
0x0000020000135df0 : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x000002000012f7c1 : xor byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000074796 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000027651 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002a43f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000115a55 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000005d48b : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000027b5a : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x0000020000211c46 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000122ce1 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d017d : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ac65 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x0000020000085aa4 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000682af : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x0000020000097867 : xor byte ptr [rcx + 0x5f], al ; ret
0x000002000020eff2 : xor byte ptr [rcx + 0xf], al ; mov bh, 0x44 ; ret 0x410c
0x00000200006eec2f : xor byte ptr [rcx + 2], al ; xor eax, eax ; ret
0x00000200005c15ec : xor byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x0000020000513d61 : xor byte ptr [rcx + 6], bh ; call 0x2000013acc9
0x0000020000133ac5 : xor byte ptr [rcx + rcx*4 + 0x10], cl ; ret
0x0000020000105eb5 : xor byte ptr [rcx + rcx*4 + 0x49], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000200000aa88e : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x200000aa885 ; ret 0x8b44
0x00000200000aa88d : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x200000aa886 ; ret 0x8b44
0x000002000022d9dc : xor byte ptr [rcx + rsi*8 - 0x3b7cb701], dh ; pop rax ; ret
0x0000020000182031 : xor byte ptr [rcx - 0x47], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000aa003 : xor byte ptr [rcx - 0x74087aac], cl ; ret 0x8b48
0x00000200005f114d : xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x00000200004e3264 : xor byte ptr [rcx - 0x74d7dbac], cl ; ret
0x000002000008290d : xor byte ptr [rcx - 0x75], al ; ret
0x000002000008a582 : xor byte ptr [rcx - 0x75], al ; ret 0x6b48
0x00000200003d3245 : xor byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200001c4d24 : xor byte ptr [rcx - 0x75], al ; rol dword ptr [rcx - 0x75], cl ; ret
0x0000020000025312 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000025360 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000009c4a9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000009c4f8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000ba82c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ba87b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000bd61d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000bd66b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000df0be : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000df10c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000e6027 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e6076 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000fa8f0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fa93f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000106b74 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106bc2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011121e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011126c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011960b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000119659 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011d629 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011d677 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011efaf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011effe ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011f427 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011f476 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000121249 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000121298 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000123c26 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000123c74 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000127089 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001270d8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001300dc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013012a ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013a34f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013a39e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000165d87 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000165dd5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001b77f5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b7844 ; pop rdi ; pop r13 ; pop rdi ; ret
0x00000200001c08c7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c0916 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001e55af : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e55fd ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e5f3a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e5f89 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e702d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e707b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200002002fa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000200349 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000219003 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000219051 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000021cd4b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021cd99 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200002219da : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000221a28 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000229063 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200002290b1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000022b932 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022b981 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000022f9ad : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022f9fc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200002345f8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000234647 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000234a45 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000234a94 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000235c4b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000235c99 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000365686 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003656d5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000368cab : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000368cfa ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036d1b8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036d206 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000036dc81 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036dccf ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000376eac : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000376efb ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000378f11 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000378f60 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000388990 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003889de ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003a602a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a6079 ; pop rdi ; pop r14 ; pop rsi ; ret
0x00000200003d8403 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d8452 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e9402 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e9451 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e9f69 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e9fb7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003f891c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f896b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003fffd4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000400023 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000403776 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004037c5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000407927 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000407976 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000040a629 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040a678 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040da6a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040dab9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040ff57 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040ffa6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041285f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004128ae ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000412a2c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000412a7b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000415e1f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000415e6d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000415f4b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000415f99 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000041e2d4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041e323 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000423476 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004234c5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004266a6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004266f4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000043af63 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043afb2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000043c13e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043c18c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000043f737 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043f785 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004414cd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044151b ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000443ab7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000443b05 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044cb3c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044cb8a ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000045a1b0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045a1fe ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000045b04c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045b09b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004626e8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000462736 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000466730 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046677f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000046c627 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046c675 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000046d91f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d96e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000046f25c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046f2aa ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000047232d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047237c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047d343 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047d391 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000047f714 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047f763 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000482ad5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000482b24 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004877f9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000487847 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004919e2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000491a31 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000491af1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000491b40 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000494676 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004946c5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004958ba : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000495909 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000049c55d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049c5ac ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004a0067 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a00b6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004a970a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a9759 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004a9e5f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a9eae ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200004ab5ef : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab63e ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004ae2e0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ae32f ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004b6fb5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b7004 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c29d7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c2a26 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c3352 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c33a0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c4f21 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c4f6f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c6383 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c63d2 ; pop rdi ; pop r12 ; pop rdi ; ret
0x00000200004c9ee5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c9f34 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004cd1e8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cd236 ; pop rsp ; pop rdi ; pop rsi ; ret
0x00000200004da608 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004da656 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004dea78 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004deac7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004dfc63 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dfcb1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004e5483 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e54d2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e64b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e6500 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e966e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e96bd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ebf3d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ebf8b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ec748 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ec797 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005030ac : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005030fb ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000050c4e8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050c536 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000050d148 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050d197 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050f871 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050f8c0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050ffb4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000510002 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000510455 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005104a4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051217e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005121cd ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000518c59 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000518ca8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005ba3fc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ba44b ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200005ccf66 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ccfb5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d6bed : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d6c3c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005d9ac3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d9b11 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005df32a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005df379 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005df422 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005df471 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005e7674 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e76c3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e7f92 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e7fe1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ea765 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ea7b4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005eca7a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ecac8 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200005ef1d6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ef224 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006058b7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000605906 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060e2ce : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060e31d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060eeef : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060ef3e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061590f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061595e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061b0a3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061b0f1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000061ba71 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061babf ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000061f93f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061f98e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000627da5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000627df3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000062848d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006284dc ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000062c1ff : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062c24e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000062dc48 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062dc96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000063162d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063167c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006340d6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634125 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000634b42 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634b91 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063c776 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063c7c5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063d509 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d558 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063d69b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d6ea ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000640118 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000640167 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006444aa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006444f9 ; pop rdi ; pop r13 ; pop rdi ; ret
0x0000020000646005 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000646054 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000064b41b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b46a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064b6e5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b734 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ed97 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ede6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000651302 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000651351 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006528c6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000652915 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000654b92 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000654be0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065a10e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065a15d ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000666c04 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000666c53 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006700db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000670129 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000679f10 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000679f5f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006ee31c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ee36a ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006f3056 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f30a4 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000709d07 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000709d56 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200007114d0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000071151e ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200007168bf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000071690d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000716df5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000716e43 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007194ee : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000071953d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000071955c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007195aa ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000072ef48 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000072ef96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000c21f9 : xor byte ptr [rcx - 0x75], cl ; ret
0x00000200001c4d68 : xor byte ptr [rcx - 0x75], cl ; ror byte ptr [rcx - 0x75], cl ; ret 0x5b9
0x0000020000118220 : xor byte ptr [rcx - 0x76], al ; ret 0x5f41
0x00000200004acc5d : xor byte ptr [rcx - 0x76], al ; rol byte ptr [rcx + 0x5f], 0x41 ; pop rsi ; ret
0x0000020000119138 : xor byte ptr [rcx - 0x76], al ; salc ; mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000060518c : xor byte ptr [rcx - 0x77], cl ; adc byte ptr [rax - 0x75], r9b ; ret
0x0000020000140329 : xor byte ptr [rcx - 0x78], al ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200004ad9d3 : xor byte ptr [rcx - 0x7d], cl ; movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200004e1842 : xor byte ptr [rcx - 0x7d], cl ; ret
0x0000020000647d5f : xor byte ptr [rcx - 0xa], al ; ret
0x0000020000491161 : xor byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000020000369606 : xor byte ptr [rcx - 1], al ; ret
0x00000200004bec3f : xor byte ptr [rcx - 1], al ; ret 0x8b49
0x000002000022877a : xor byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000519d1d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000206575 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200004a090c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004c4feb : xor byte ptr [rcx], al ; je 0x200004c4ffe ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022f14a : xor byte ptr [rcx], bl ; add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x0000020000033674 : xor byte ptr [rcx], dl ; add byte ptr [rax], al ; jne 0x20000033671 ; mov al, 1 ; ret
0x000002000066bd10 : xor byte ptr [rdi + 0x48], bl ; jmp rax
0x00000200000588ce : xor byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200001580b9 : xor byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000012f9dc : xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000011ed45 : xor byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000028b09 : xor byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001be356 : xor byte ptr [rdi - 0x17], bl ; ret
0x000002000011f090 : xor byte ptr [rdi - 0x3d], bl ; inc r10 ; jmp 0x2000011f02c
0x00000200004af8c5 : xor byte ptr [rdi], cl ; mov dh, 0x41 ; call 0x1ffc25f841e
0x00000200003708c8 : xor byte ptr [rdi], cl ; or ebx, eax ; mov eax, 0xc00000bb ; ret
0x000002000025dddd : xor byte ptr [rdi], cl ; push rax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000135ca4 : xor byte ptr [rdi], cl ; test dl, ah ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200004c61ce : xor byte ptr [rdi], cl ; test dword ptr [rsi - 0x9fff2e0], esi ; ret 0xf03
0x00000200004d0fe7 : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001ab94d : xor byte ptr [rdi], dl ; add al, ch ; cli ; ret
0x00000200003fc7a7 : xor byte ptr [rdx + 0x47c1e801], dh ; ret
0x000002000014da2d : xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x0000020000106480 : xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x0000020000365e20 : xor byte ptr [rdx + rdx - 1], dh ; ret
0x000002000038a6f1 : xor byte ptr [rdx - 0x30], dh ; mov rax, r8 ; ret
0x000002000001e299 : xor byte ptr [rdx - 0x5b], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200000b4946 : xor byte ptr [rdx], 2 ; add byte ptr [rax], al ; ret
0x00000200002706cb : xor byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x2e], bl ; adc dword ptr [rax], eax ; ret 0x11d4
0x000002000027ef03 : xor byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], bl ; div byte ptr [rax] ; ret
0x00000200001c8e01 : xor byte ptr [rdx], ah ; ret
0x000002000053da26 : xor byte ptr [rdx], ah ; ret 0xd8f6
0x000002000012999d : xor byte ptr [rdx], al ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000011a00 : xor byte ptr [rdx], cl ; add dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4000
0x0000020000149a59 : xor byte ptr [rdx], cl ; inc rdx ; jmp 0x20000149a67
0x00000200001935fe : xor byte ptr [rdx], dl ; add byte ptr [rax + 0x2b], cl ; ret 0x3d48
0x00000200005bc72d : xor byte ptr [rdx], r12b ; ret
0x00000200005bc1dd : xor byte ptr [rdx], r12b ; ret 0xd8f6
0x00000200000903de : xor byte ptr [rip - 0x74357500], dh ; ret 0xe183
0x00000200006d74d9 : xor byte ptr [rip - 0x74b70000], al ; ret 0xdb33
0x0000020000122031 : xor byte ptr [rsi + 0x39], ah ; or ecx, dword ptr [rdi] ; test byte ptr [rbx], al ; ret 8
0x00000200004b708c : xor byte ptr [rsi + 0x3b], ah ; ret 0x5077
0x000002000054cd88 : xor byte ptr [rsi - 0x49f00053], ch ; ret
0x00000200007224ac : xor byte ptr [rsi - 3], dl ; dec dword ptr [rbx + rcx*4 + 5] ; xor esp, ebp ; ret 0x49ff
0x0000020000663fec : xor byte ptr [rsi], cl ; ret
0x0000020000211c45 : xor byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000532eab : xor ch, ah ; push rsi ; ret
0x000002000068b156 : xor ch, byte ptr [rdx + 0x48c033ff] ; add esp, 0x28 ; ret
0x0000020000552556 : xor ch, cl ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x0000020000405aac : xor ch, dl ; in al, dx ; dec dword ptr [rdx - 0x4e56172d] ; ret 0xffff
0x00000200000362fd : xor cl, bpl ; ret 0xfffe
0x000002000061cb61 : xor cl, byte ptr [rax + 3] ; ret 0x4eb
0x000002000015798c : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001579b8 ; or rax, rdx ; pop rdi ; ret
0x000002000015798c : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001579ba ; or rax, rdx ; pop rdi ; ret
0x00000200001e01d6 : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001e0202 ; or rax, rdx ; ret
0x00000200001e01d6 : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001e0203 ; or rax, rdx ; ret
0x00000200000e0a0b : xor cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x0000020000141b2e : xor cl, byte ptr [rax - 1] ; ret 0xff49
0x00000200005bdcdd : xor cl, byte ptr [rbx + rcx*4 + 0x15] ; stosd dword ptr [rdi], eax ; ret
0x000002000014302f : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200004486aa : xor cl, byte ptr [rdx] ; ret 0xebff
0x00000200000bf0b0 : xor cl, byte ptr [rip - 0x14e07700] ; ret 0x8b48
0x000002000020d08b : xor cl, ch ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000597496 : xor cl, ch ; dec dword ptr [rax - 0x75] ; ret 0x4cf0
0x0000020000181050 : xor cl, ch ; in al, dx ; or eax, esi ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005f6116 : xor cl, ch ; push rsi ; ret
0x000002000016e9b7 : xor cl, ch ; ret
0x000002000064f2d5 : xor cl, ch ; ret 0
0x00000200000c2240 : xor cl, ch ; ret 0xfffc
0x00000200000362fe : xor cl, ch ; ret 0xfffe
0x00000200004bf12c : xor cl, cl ; mov al, cl ; ret
0x0000020000605913 : xor cl, cl ; mov al, r9b ; ret
0x000002000026ce54 : xor cl, dh ; adc eax, dword ptr [rax] ; add al, 0 ; add byte ptr [rax], al ; clc ; ret
0x000002000024a448 : xor cl, dh ; adc eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000023b968 : xor cl, dh ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; in eax, dx ; ret
0x000002000024b514 : xor cl, dh ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rsp ; ret
0x0000020000268c44 : xor cl, dh ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x1036
0x0000020000257fb8 : xor cl, dh ; adc eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0xc
0x000002000023be08 : xor cl, dh ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000261d00 : xor cl, dh ; adc eax, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0x4872
0x00000200006f975d : xor dh, 0xff ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x000002000005bff7 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000008af1f : xor dh, 0xff ; inc dword ptr [rcx - 0xa] ; ret 0x7408
0x000002000040ec75 : xor dh, ah ; adc al, 0 ; xor eax, eax ; jmp 0x2000040ec46
0x00000200001997d6 : xor dh, ah ; inc dword ptr [rcx - 0x75] ; xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x0000020000688502 : xor dh, bh ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200006d0180 : xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x200006d0198
0x00000200006e2a4c : xor dh, byte ptr [rbx] ; leave ; call rbx
0x000002000051d240 : xor dh, byte ptr [rcx + rcx] ; or eax, 0xffffffff ; ret
0x00000200001e9240 : xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x0000020000089214 : xor dh, dh ; ret
0x00000200005f9eb8 : xor dh, dh ; ret 0x7403
0x0000020000179e42 : xor dh, dh ; ret 0x7508
0x000002000068926c : xor dh, dh ; ret 0xf02
0x0000020000585910 : xor dl, ah ; call qword ptr [rcx]
0x000002000058595f : xor dl, ah ; jmp qword ptr [rdx]
0x000002000050a4ec : xor dl, bl ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000107ada : xor dl, byte ptr [rbx] ; add al, 0 ; add rsp, 0x58 ; ret
0x000002000060bf3a : xor dl, cl ; dec dword ptr [rcx - 0x75] ; ret
0x000002000062df66 : xor dl, dl ; inc dword ptr [rcx + rdi + 0x2d] ; clc ; ret 7
0x000002000014c678 : xor dl, dl ; mov al, dl ; ret
0x000002000008e4e3 : xor dl, dl ; mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200001f4e5f : xor dword ptr [rax + 0x33], ecx ; ret
0x00000200003641be : xor dword ptr [rax + 0x33], ecx ; ret 0x3348
0x000002000012a8f1 : xor dword ptr [rax + 0x41000055], 0xf ; scasd eax, dword ptr [rdi] ; ret
0x000002000007017b : xor dword ptr [rax + 8], 1 ; mov qword ptr [rbx], r15 ; jmp 0x2000007014e
0x0000020000079b98 : xor dword ptr [rax + rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8549
0x00000200001495da : xor dword ptr [rax - 0x39], ecx ; ret 1
0x000002000015dd11 : xor dword ptr [rax - 0x3f], ecx ; loop 0x2000015dd3e ; or rax, rdx ; ret
0x0000020000583d77 : xor dword ptr [rax - 0x4b], eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200001fddfd : xor dword ptr [rax - 0x73], ecx ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x0000020000464ba1 : xor dword ptr [rax - 0x75], ecx ; ret
0x000002000050d69d : xor dword ptr [rax - 0x77], ecx ; add edi, edi ; ret 0x8348
0x00000200003f31dd : xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x0000020000466a4b : xor dword ptr [rax - 0x7d], ecx ; ret
0x0000020000141c4e : xor dword ptr [rax - 1], ecx ; ret 0xff49
0x0000020000021d9b : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x0000020000032b81 : xor dword ptr [rax], eax ; add dword ptr [rbx + rcx*4 + 0x74], eax ; ret 0xf08
0x00000200000332f5 : xor dword ptr [rax], eax ; je 0x20000033302 ; xor al, al ; ret
0x00000200001941fe : xor dword ptr [rax], ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000053a04b : xor dword ptr [rax], edi ; ret 0x90ff
0x000002000007c1b2 : xor dword ptr [rax], edx ; add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x000002000006fb25 : xor dword ptr [rbp - 0x74b7fff0], ebp ; ret
0x00000200001803e3 : xor dword ptr [rbx + 0x73d03b00], ecx ; or al, 0x8b ; ret 0x8b4d
0x0000020000201021 : xor dword ptr [rbx + rcx - 1], esi ; ret
0x00000200003cfd73 : xor dword ptr [rbx + rdx + 0xf410000], 0xffffffb7 ; ret 0x8d4c
0x00000200005ddef3 : xor dword ptr [rbx - 1], edi ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065d877 : xor dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041f587 : xor dword ptr [rbx], esi ; adc al, 0 ; xor al, al ; ret
0x0000020000290c7d : xor dword ptr [rbx], esp ; ret
0x000002000048e358 : xor dword ptr [rcx + rcx*4 + 0x70], ecx ; or byte ptr [rax - 0x75], cl ; ret
0x000002000066af50 : xor dword ptr [rcx - 0x32], esp ; jmp qword ptr [rcx]
0x00000200001786b7 : xor dword ptr [rcx - 0x75], eax ; ret 0xc148
0x00000200001e6d8b : xor dword ptr [rcx - 1], eax ; ret 0x8349
0x00000200005b299b : xor dword ptr [rcx - 9], edx ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x19eb
0x00000200000b3d18 : xor dword ptr [rcx], eax ; jmp 0x200000b3bf8
0x000002000011832c : xor dword ptr [rcx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000eff7 : xor dword ptr [rcx], esp ; ret 0x6169
0x000002000013612c : xor dword ptr [rdi + 2], 0 ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000439edb : xor dword ptr [rdi], eax ; ret
0x000002000002a7e8 : xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x00000200000319c9 : xor dword ptr [rdx + rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0x93 ; ret
0x000002000006853c : xor dword ptr [rdx + rax], 0 ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000051d23f : xor dword ptr [rdx], 0x74 ; or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x0000020000266015 : xor dword ptr [rdx], ecx ; ret
0x00000200006564c5 : xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x0000020000417e85 : xor dword ptr [rsi + 0x3b], esp ; ret 0x3c72
0x00000200004660fb : xor dword ptr [rsi - 0x74b30019], edx ; ret
0x0000020000279c8e : xor dword ptr [rsi], eax ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200002657de : xor dword ptr [rsi], eax ; sysenter
0x0000020000410af9 : xor dword ptr [rsp + rax*2 - 0x75], edx ; ret 0xff3
0x0000020000410af8 : xor dword ptr [rsp + rax*2 - 0x75], r10d ; ret 0xff3
0x00000200000b13a7 : xor dword ptr [rsp + rdi*8 - 1], 0xffffffff ; jmp 0x2000018d612
0x000002000001e2b0 : xor eax, 0x1a7a7c ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000492b99 : xor eax, 0x20 ; ret
0x000002000010ee25 : xor eax, 0x200f4400 ; ret
0x00000200001ca2e3 : xor eax, 0x33000002 ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x0000020000027d6c : xor eax, 0x3a078a41 ; ret
0x000002000012fac2 : xor eax, 0x40017 ; add byte ptr [rax], al ; call rdi
0x00000200004f42e1 : xor eax, 0x418b000b ; add al, 0x3b ; ret
0x0000020000467891 : xor eax, 0x458b0011 ; ret
0x000002000070dbc1 : xor eax, 0x45c7c7bf ; ret
0x0000020000141dd7 : xor eax, 0x48000070 ; add esp, 0x58 ; ret
0x000002000010fbd7 : xor eax, 0x48000392 ; add esp, 0x58 ; ret
0x000002000019d247 : xor eax, 0x480010ad ; mov edx, dword ptr [rdx + rax*8] ; jmp 0x2000019d266
0x000002000000e4e7 : xor eax, 0x484528c5 ; salc ; loopne 0x2000000e4e8 ; ret
0x00000200005bfc4f : xor eax, 0x48ffd161 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000153feb : xor eax, 0x48fff139 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000133f93 : xor eax, 0x48ffffa4 ; add esp, 0x28 ; ret
0x00000200001b7e04 : xor eax, 0x74c08400 ; add bh, bh ; ret
0x00000200004ddf04 : xor eax, 0x840fd285 ; ret 1
0x000002000002a94f : xor eax, 0x848b4900 ; ret 0xd80
0x00000200006eebdf : xor eax, 0x85000000 ; sar byte ptr [rax + 0x1b], 0xff ; ret 0x8b49
0x00000200005e761c : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x00000200005e6a5d : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x558d
0x00000200005e6c70 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x578d
0x00000200005e7183 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x00000200005e6743 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x00000200005e6411 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x0000020000376daa : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200005e7a2a : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x0000020000377be6 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8d48
0x00000200005e6580 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x00000200001d5b54 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0xaba
0x00000200000bec6b : xor eax, 0x8949000d ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x0000020000055955 : xor eax, 0x8b480000 ; ret
0x000002000019fcca : xor eax, 0x8b48fff5 ; ret
0x00000200000903df : xor eax, 0x8bca8b00 ; ret 0xe183
0x0000020000478497 : xor eax, 0x8bffbf0b ; ret
0x0000020000642f18 : xor eax, 0x8bffffff ; ret
0x0000020000679282 : xor eax, 0x8c73058b ; ret 0x85ff
0x000002000049d787 : xor eax, 0x90ffcc04 ; add rsp, 0x28 ; ret
0x00000200001c45da : xor eax, 0xb60fffe6 ; rol dword ptr [rdi + rcx + 0x22], cl ; ret 0x8b48
0x0000020000238c2b : xor eax, 0xc03302eb ; add rsp, 0x28 ; ret
0x00000200005ef104 : xor eax, 0xc301b000 ; xor al, al ; ret
0x00000200001fc5f5 : xor eax, 0xc3f6000b ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x000002000002a930 : xor eax, 0xd03b4800 ; jne 0x2000002a943 ; mov al, 1 ; ret
0x000002000058baa7 : xor eax, 0xe8ffd4a8 ; cld ; ret 0xffb4
0x00000200005e90cb : xor eax, 0xe9c00000 ; ret 0xfffe
0x00000200003d0176 : xor eax, 0xfc08500 ; ret 0x8b49
0x000002000072d026 : xor eax, 0xffbd8f ; add rsp, 0x28 ; ret
0x0000020000666b01 : xor eax, 0xffc46e6a ; call 0x20000294008
0x00000200006666dd : xor eax, 0xffc47276 ; call 0x20000294008
0x000002000050a4d5 : xor eax, 0xffda09be ; call 0x20000138194
0x000002000017e2f9 : xor eax, 0xffffefb6 ; ret
0x00000200003db477 : xor eax, dword ptr [r8 + rcx*4] ; ret
0x0000020000149f55 : xor eax, dword ptr [rax + rax] ; add byte ptr [rcx - 1], al ; ret
0x00000200003db478 : xor eax, dword ptr [rax + rcx*4] ; ret
0x0000020000027029 : xor eax, dword ptr [rax - 0x76] ; scasd eax, dword ptr [rdi] ; ret
0x0000020000409767 : xor eax, dword ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x00000200000b5984 : xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000001051a : xor eax, dword ptr [rbp + 0x5a] ; and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000010d3e6 : xor eax, dword ptr [rbp - 0x76] ; ret 0x8b41
0x0000020000661f04 : xor eax, dword ptr [rbp - 0xd08a40] ; ret
0x0000020000472bf4 : xor eax, dword ptr [rcx - 0x75] ; ret 0x83c3
0x00000200001ab28c : xor eax, dword ptr [rcx - 0x75] ; ret 0xeac1
0x0000020000229971 : xor eax, dword ptr [rip - 0x74bc0000] ; ret
0x00000200003daf43 : xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200000b3b54 : xor eax, eax ; add rsp, 0x18 ; ret
0x00000200000e1333 : xor eax, eax ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bb8a1 : xor eax, eax ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000026800 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000035e4f : xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009d7ca : xor eax, eax ; add rsp, 0x28 ; ret
0x000002000036ded7 : xor eax, eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000687b4 : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000068e71 : xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006f5cc9 : xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000025a8e : xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000448543 : xor eax, eax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000059274 : xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006f4f0c : xor eax, eax ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000d112a : xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001df032 : xor eax, eax ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x000002000011534a : xor eax, eax ; add rsp, 0x48 ; ret
0x00000200005dfe99 : xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x000002000003346f : xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004e401f : xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x000002000046f480 : xor eax, eax ; add rsp, 0x58 ; ret
0x000002000010ff1f : xor eax, eax ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000122a61 : xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000513d46 : xor eax, eax ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000045d12 : xor eax, eax ; call 0x20000045498
0x000002000043c967 : xor eax, eax ; call 0x200000691b5
0x0000020000188097 : xor eax, eax ; call 0x200001f439c
0x00000200005a90b6 : xor eax, eax ; call 0x200004152ec
0x0000020000674391 : xor eax, eax ; call 0x20000670670
0x000002000038cdd0 : xor eax, eax ; call rax
0x00000200001d7998 : xor eax, eax ; cmp byte ptr [rdx], 0xcc ; sete al ; ret
0x00000200000b5a80 : xor eax, eax ; cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x0000020000073e7e : xor eax, eax ; cmp qword ptr [r9], rcx ; seta al ; ret
0x00000200001c2bb4 : xor eax, eax ; cmp qword ptr [rcx], r8 ; jne 0x200001c2bc7 ; xor eax, eax ; ret
0x00000200000de640 : xor eax, eax ; cmp qword ptr [rcx], rax ; sete al ; ret
0x00000200001c62bc : xor eax, eax ; cmp r11d, r9d ; seta al ; ret
0x00000200004cc5c5 : xor eax, eax ; cmp r8, rcx ; seta al ; ret
0x000002000003998b : xor eax, eax ; cmp r8, rcx ; setae al ; ret
0x000002000022517a : xor eax, eax ; cmp r8d, ecx ; setne al ; ret
0x00000200000d0bb9 : xor eax, eax ; cmp rax, rdx ; je 0x200000d0bd4 ; ret
0x000002000020bb1e : xor eax, eax ; cmp rcx, r10 ; jb 0x2000020bb0c ; ret
0x00000200001e5f51 : xor eax, eax ; cmp rcx, r8 ; seta al ; ret
0x0000020000054c17 : xor eax, eax ; cmp rcx, rdx ; seta al ; ret
0x000002000020c482 : xor eax, eax ; cmp rdx, r10 ; jb 0x2000020c464 ; mov al, 1 ; ret
0x0000020000126efa : xor eax, eax ; cmp rdx, rcx ; seta al ; ret
0x0000020000189871 : xor eax, eax ; jmp 0x200000a3513
0x0000020000192016 : xor eax, eax ; jmp 0x200000be27e
0x000002000040ec79 : xor eax, eax ; jmp 0x2000040ec42
0x0000020000436e4f : xor eax, eax ; jmp 0x20000436932
0x00000200004fce98 : xor eax, eax ; jmp 0x200004fce62
0x000002000067412b : xor eax, eax ; jmp 0x20000674157
0x000002000008d93f : xor eax, eax ; lock cmpxchg qword ptr [rcx], r8 ; jne 0x2000008d924 ; ret
0x00000200003ee428 : xor eax, eax ; mov byte ptr [rdx], cl ; ret
0x000002000072bdf7 : xor eax, eax ; mov byte ptr [rsp + 0x30], dil ; call r12
0x0000020000132ff8 : xor eax, eax ; mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200006733f7 : xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x0000020000577db4 : xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x00000200001bd64a : xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x00000200000f8610 : xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x000002000020a7ee : xor eax, eax ; mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x000002000012d105 : xor eax, eax ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000106a5c : xor eax, eax ; mov dword ptr [rcx], 2 ; ret
0x000002000010d0c8 : xor eax, eax ; mov dword ptr [rcx], 3 ; ret
0x0000020000674056 : xor eax, eax ; mov dword ptr [rip - 0x3ab262], ecx ; ret
0x00000200005faaea : xor eax, eax ; mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x0000020000142b2e : xor eax, eax ; mov eax, r8d ; ret
0x000002000014da28 : xor eax, eax ; mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x0000020000574c85 : xor eax, eax ; mov edx, ebp ; call 0x20000450eb2
0x000002000037ed5f : xor eax, eax ; mov qword ptr [r11], rdx ; ret
0x000002000008fcd8 : xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x00000200001d93d1 : xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x0000020000107cb7 : xor eax, eax ; mov qword ptr [rcx + 0x18], r9 ; ret
0x000002000052037c : xor eax, eax ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002b9fe : xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x00000200000c5cbe : xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000162c81 : xor eax, eax ; mov rcx, r10 ; call r10
0x000002000038cdf6 : xor eax, eax ; mov rcx, rbx ; call rax
0x0000020000501468 : xor eax, eax ; mov rcx, rdi ; call r15
0x00000200004c19a6 : xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200001a6e56 : xor eax, eax ; mov rdx, r14 ; mov rcx, r12 ; call r15
0x000002000064f67a : xor eax, eax ; mov rdx, r14 ; mov rcx, r12 ; call rax
0x000002000010b1fc : xor eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001b4969 : xor eax, eax ; mov rdx, rsi ; call rax
0x0000020000601f3f : xor eax, eax ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000714883 : xor eax, eax ; mov rsp, r11 ; pop rbp ; ret
0x0000020000108788 : xor eax, eax ; mov word ptr [r10 + 2], r8w ; ret
0x00000200005202da : xor eax, eax ; mov word ptr [r8 + 6], ax ; ret
0x00000200004ca504 : xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x000002000019d1fc : xor eax, eax ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000459a7c : xor eax, eax ; pop r14 ; ret
0x000002000045b410 : xor eax, eax ; pop rbx ; ret
0x00000200001591ed : xor eax, eax ; pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000024a12 : xor eax, eax ; ret
0x0000020000088fe6 : xor eax, eax ; test cl, 0x10 ; je 0x20000088ff5 ; ret
0x0000020000531aaa : xor eax, eax ; test cl, cl ; setne al ; pop rbp ; ret
0x00000200003ef6e7 : xor eax, eax ; test r8, r8 ; je 0x200003ef6f9 ; call r8
0x0000020000208a90 : xor eax, eax ; test r8, r8 ; jne 0x20000208a5b ; ret
0x00000200004db4a0 : xor eax, eax ; test r8b, 0x47 ; jne 0x200004db4b1 ; ret
0x00000200001bc87b : xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000015e338 : xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x0000020000662324 : xor eax, eax ; xchg dword ptr [rip + 0x2edfc], eax ; ret
0x000002000013fb20 : xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x000002000070b905 : xor eax, eax ; xor ecx, ecx ; call 0x200000b7b3e
0x00000200001b9216 : xor eax, eax ; xor edx, edx ; call 0x20000045496
0x0000020000420626 : xor eax, eax ; xor edx, edx ; call 0x20000045497
0x0000020000442716 : xor eax, eax ; xor edx, edx ; call 0x200000702b7
0x000002000046b1cd : xor eax, eax ; xor edx, edx ; call qword ptr [rdi]
0x0000020000124512 : xor eax, eax ; xor edx, edx ; call r9
0x0000020000443fab : xor eax, eax ; xor edx, edx ; mov rcx, rbp ; call 0x200000702b9
0x00000200001c3fec : xor eax, eax ; xor edx, edx ; mov rcx, rbx ; call 0x200000702b9
0x0000020000573fe3 : xor eax, eax ; xor edx, edx ; mov rcx, rdi ; call 0x200000702b9
0x0000020000166059 : xor eax, eax ; xor edx, edx ; xor ecx, ecx ; call 0x20000042298
0x0000020000486305 : xor eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x00000200001ae230 : xor eax, ecx ; mov rcx, rax ; call rdx
0x00000200003daf29 : xor eax, ecx ; ret
0x00000200003daf41 : xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x000002000070dd2b : xor eax, edx ; mov ecx, 0xc48348ff ; pop rbx ; ret
0x00000200003daf28 : xor eax, r9d ; ret
0x000002000007afee : xor ebp, 0xffffffff ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000bf4a0 : xor ebp, dword ptr [rbx] ; ret
0x000002000055f4cb : xor ebp, eax ; ret
0x0000020000216a69 : xor ebp, ebp ; add edi, eax ; xor esi, esi ; call 0x20000212cc4
0x000002000007d0d8 : xor ebp, ebp ; jmp 0x2000007cd03
0x000002000044cc96 : xor ebp, ebp ; xor r12d, r12d ; call 0x20000072650
0x0000020000552715 : xor ebp, ecx ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x0000020000724125 : xor ebp, edi ; mov bh, 0xff ; jmp 0x20000700384
0x0000020000532e8f : xor ebp, esp ; push rsi ; ret
0x0000020000567c38 : xor ebp, esp ; push rsi ; ret 0x7401
0x0000020000475605 : xor ebp, esp ; ret
0x000002000044427c : xor ebx, 1 ; mov rcx, rbx ; call 0x20000068fd9
0x00000200000904d4 : xor ebx, ebx ; jmp 0x2000009033c
0x000002000009d3b3 : xor ebx, ebx ; jmp 0x2000009d349
0x000002000056e8cc : xor ebx, ebx ; mov dword ptr [r13], edi ; jmp 0x2000056e89d
0x000002000046d494 : xor ebx, ebx ; mov qword ptr [rbp - 0x48], rbx ; call r14
0x0000020000101e19 : xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x0000020000134a43 : xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200000f2986 : xor ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000b2c91 : xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001d8539 : xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x00000200001d84e3 : xor ecx, dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x00000200001422c2 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000002000020fc2c : xor ecx, dword ptr [rax - 0x7d] ; ret 0xff0
0x000002000020e164 : xor ecx, dword ptr [rax - 1] ; ret
0x00000200001d8708 : xor ecx, dword ptr [rbp - 0x75] ; ret 0xf44
0x00000200000cedc5 : xor ecx, dword ptr [rbx + 0x1cfd0c05] ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000460f6f : xor ecx, dword ptr [rbx - 0x7b74b739] ; ret 0x8840
0x00000200001fc7e1 : xor ecx, dword ptr [rbx] ; add dh, dh ; ret
0x000002000013a017 : xor ecx, dword ptr [rcx + 0x23] ; ret
0x00000200000a7557 : xor ecx, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret 0x3b49
0x00000200003daa61 : xor ecx, eax ; mov eax, r9d ; ret
0x00000200000fdc5d : xor ecx, eax ; mov qword ptr [r11 + r10*8 + 8], rcx ; ret
0x00000200000c27d3 : xor ecx, eax ; xchg dword ptr [rip + 0x1f3e9d], ecx ; ret
0x00000200005525d5 : xor ecx, ebp ; push rsi ; ret
0x000002000016605d : xor ecx, ecx ; call 0x20000042294
0x0000020000604f1d : xor ecx, ecx ; call 0x20000066c28
0x000002000070b907 : xor ecx, ecx ; call 0x200000b7b3c
0x00000200004c6793 : xor ecx, ecx ; call 0x200000e7091
0x00000200001da1fb : xor ecx, ecx ; call 0x200001c8b15
0x00000200005b1b8f : xor ecx, ecx ; call 0x200004dde24
0x00000200001b480f : xor ecx, ecx ; call qword ptr [rax]
0x0000020000214de9 : xor ecx, ecx ; call r9
0x000002000012e302 : xor ecx, ecx ; call rax
0x00000200006d6117 : xor ecx, ecx ; call rbx
0x0000020000131d9e : xor ecx, ecx ; call rdx
0x00000200000aecad : xor ecx, ecx ; jmp 0x200000aec76
0x0000020000191f8b : xor ecx, ecx ; jmp 0x200000be1c7
0x0000020000191f9e : xor ecx, ecx ; jmp 0x200000be1e0
0x000002000056bc82 : xor ecx, ecx ; jmp 0x20000437ee2
0x0000020000619a96 : xor ecx, ecx ; jmp rax
0x00000200001c4de9 : xor ecx, ecx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200000fcc6e : xor ecx, ecx ; mov al, cl ; ret
0x000002000021548b : xor ecx, ecx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200001d1761 : xor ecx, ecx ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001b4808 : xor ecx, ecx ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x00000200000998eb : xor ecx, ecx ; mov qword ptr [rbp - 0x48], rax ; jmp 0x200000998bd
0x000002000058a686 : xor ecx, ecx ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x0000020000149aa2 : xor ecx, ecx ; mov qword ptr [rsp + 0x78], rax ; call r11
0x0000020000704521 : xor ecx, ecx ; mov r8, rbx ; mov dl, 1 ; call 0x200003b0771
0x000002000053d965 : xor ecx, ecx ; mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000053d5fa : xor ecx, ecx ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200003a27e9 : xor ecx, ecx ; mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x0000020000367fae : xor ecx, ecx ; mov r8d, ebx ; xor edx, edx ; call 0x20000364255
0x00000200002195cb : xor ecx, ecx ; mov rax, r9 ; ret
0x00000200006236e7 : xor ecx, ecx ; mov rax, rcx ; ret
0x00000200000e416b : xor ecx, ecx ; mov rbx, rdx ; call 0x20000470463
0x000002000056bca7 : xor ecx, ecx ; mov rdi, r9 ; jmp 0x20000437eee
0x00000200003ac92c : xor ecx, ecx ; test eax, eax ; je 0x200003ac93f ; add rax, r10 ; jmp 0x200003ac8c3
0x000002000036d897 : xor ecx, ecx ; test r9, r9 ; jne 0x2000036d8a6 ; ret
0x0000020000666f20 : xor ecx, ecx ; test rax, rax ; jne 0x20000666f2f ; ret
0x000002000041d15f : xor ecx, ecx ; xor edx, edx ; call 0x2000004861f
0x0000020000162c7e : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000051df4b : xor ecx, edi ; ret
0x0000020000149940 : xor ecx, edx ; xor rdx, qword ptr [rax] ; jmp rdx
0x000002000066dd80 : xor ecx, esi ; jmp qword ptr [rcx]
0x000002000008cb92 : xor ecx, esp ; call 0x20000148e14
0x00000200005190f2 : xor ecx, esp ; call 0x20000148e15
0x000002000021548a : xor ecx, r9d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200004f90f8 : xor edi, dword ptr [rbx] ; ret
0x00000200000b4181 : xor edi, edi ; jmp 0x200000b4133
0x000002000001140e : xor edi, edi ; out dx, al ; jp 0x2000001146d ; ret 0x7ec2
0x000002000037179b : xor edi, edi ; push rsi ; ret
0x0000020000049a8f : xor edi, edi ; ret
0x00000200003df10c : xor edi, edi ; ret 0x3b41
0x0000020000201f61 : xor edi, edi ; ret 0x8348
0x00000200003dd1ad : xor edi, edi ; ret 0xfa83
0x0000020000100b22 : xor edi, edi ; ret 0xff49
0x000002000041f588 : xor edx, dword ptr [rax + rax] ; xor al, al ; ret
0x0000020000149943 : xor edx, dword ptr [rax] ; jmp rdx
0x0000020000542e2b : xor edx, dword ptr [rdi - 0x19] ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006e9e53 : xor edx, dword ptr [rdx] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000416b34 : xor edx, eax ; test dl, 0x47 ; jne 0x20000416b43 ; ret
0x00000200004344e4 : xor edx, ebp ; dec dword ptr [rax - 0x75] ; shr al, 1 ; push rcx ; ret
0x00000200005731aa : xor edx, ebx ; push rsi ; ret
0x00000200003dad6a : xor edx, ecx ; mov eax, r10d ; ret
0x00000200001b9218 : xor edx, edx ; call 0x20000045494
0x0000020000420628 : xor edx, edx ; call 0x20000045495
0x00000200001056ba : xor edx, edx ; call 0x20000045498
0x00000200004dbebf : xor edx, edx ; call 0x20000048194
0x000002000041d161 : xor edx, edx ; call 0x2000004861d
0x000002000060a412 : xor edx, edx ; call 0x200000691b9
0x0000020000442718 : xor edx, edx ; call 0x200000702b5
0x00000200000c3a89 : xor edx, edx ; call 0x2000008e8cd
0x000002000007221a : xor edx, edx ; call 0x200000d4484
0x000002000070d4ca : xor edx, edx ; call 0x200000e9744
0x00000200000a5fc9 : xor edx, edx ; call 0x200000f2200
0x000002000063317c : xor edx, edx ; call 0x20000232da1
0x00000200001f8be3 : xor edx, edx ; call 0x20000294e24
0x0000020000666c1e : xor edx, edx ; call 0x20000294e25
0x0000020000139ac5 : xor edx, edx ; call 0x20000294e29
0x0000020000367fb3 : xor edx, edx ; call 0x20000364250
0x000002000044e328 : xor edx, edx ; call 0x200003ca564
0x00000200005ed663 : xor edx, edx ; call 0x200004e9958
0x000002000046b1cf : xor edx, edx ; call qword ptr [rdi]
0x0000020000427399 : xor edx, edx ; call r11
0x000002000057c15e : xor edx, edx ; call r14
0x00000200001245e3 : xor edx, edx ; call r8
0x0000020000124514 : xor edx, edx ; call r9
0x000002000018fe79 : xor edx, edx ; div rcx ; mov rax, rdx ; ret
0x0000020000202662 : xor edx, edx ; imul rax, rcx ; div r8 ; ret
0x0000020000044c5b : xor edx, edx ; jmp 0x200000444f6
0x0000020000728299 : xor edx, edx ; jmp 0x200007136f1
0x00000200004538a5 : xor edx, edx ; lea r8d, dword ptr [r9 + 1] ; call 0x2000007dff9
0x00000200006f2335 : xor edx, edx ; lea r8d, dword ptr [rdx + 1] ; call 0x2000007e618
0x00000200004dca9e : xor edx, edx ; mov al, dl ; ret
0x00000200004d405a : xor edx, edx ; mov byte ptr [rbp + 0x3a], r13b ; call 0x200000702b8
0x0000020000673006 : xor edx, edx ; mov eax, r10d ; ret
0x000002000008cc0c : xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x00000200005dc22d : xor edx, edx ; mov qword ptr [rsp + 0x20], rax ; call 0x200004184ed
0x00000200004ee17a : xor edx, edx ; mov qword ptr [rsp + 0x38], rbx ; call rdi
0x00000200006cf08a : xor edx, edx ; mov rax, qword ptr [rax + 0x220] ; jmp rax
0x00000200001bb6fa : xor edx, edx ; mov rax, rdx ; ret
0x0000020000548bf5 : xor edx, edx ; mov rcx, qword ptr [rbx + 0x60] ; call 0x20000294e28
0x00000200003f6089 : xor edx, edx ; mov rcx, qword ptr [rsp + 0x50] ; call 0x200003c2359
0x00000200004536e5 : xor edx, edx ; mov rcx, r10 ; call 0x2000007dff8
0x0000020000443cb0 : xor edx, edx ; mov rcx, r12 ; call 0x200000702b8
0x0000020000440477 : xor edx, edx ; mov rcx, r13 ; call 0x200000702b8
0x00000200001f8bd4 : xor edx, edx ; mov rcx, r13 ; call 0x20000294e27
0x0000020000442a20 : xor edx, edx ; mov rcx, r14 ; call 0x200000702b8
0x0000020000492340 : xor edx, edx ; mov rcx, r14 ; call 0x200000bef04
0x000002000049233f : xor edx, edx ; mov rcx, r14 ; call 0x200000bef05
0x0000020000448e17 : xor edx, edx ; mov rcx, r15 ; call 0x200000702b8
0x0000020000533fbe : xor edx, edx ; mov rcx, rax ; call 0x2000015dbc8
0x00000200006748b8 : xor edx, edx ; mov rcx, rax ; call 0x20000294e28
0x0000020000443fad : xor edx, edx ; mov rcx, rbp ; call 0x200000702b7
0x00000200004476c6 : xor edx, edx ; mov rcx, rbp ; call 0x200000702b8
0x0000020000191ffd : xor edx, edx ; mov rcx, rbx ; call 0x2000002e2e7
0x00000200001c3fee : xor edx, edx ; mov rcx, rbx ; call 0x200000702b7
0x00000200004417c2 : xor edx, edx ; mov rcx, rbx ; call 0x200000702b8
0x00000200005f8b8f : xor edx, edx ; mov rcx, rbx ; call 0x20000294e27
0x0000020000668b05 : xor edx, edx ; mov rcx, rbx ; call 0x20000294e28
0x000002000042113e : xor edx, edx ; mov rcx, rdi ; call 0x20000043cdc
0x0000020000573fe5 : xor edx, edx ; mov rcx, rdi ; call 0x200000702b7
0x00000200004441b2 : xor edx, edx ; mov rcx, rdi ; call 0x200000702b8
0x000002000066f857 : xor edx, edx ; mov rcx, rdi ; call 0x20000294e28
0x0000020000506a0c : xor edx, edx ; mov rcx, rdi ; call r14
0x00000200005e7a10 : xor edx, edx ; mov rcx, rdi ; call rax
0x0000020000513557 : xor edx, edx ; mov rcx, rsi ; call 0x20000033a6d
0x00000200004489f2 : xor edx, edx ; mov rcx, rsi ; call 0x200000702b8
0x00000200001e70aa : xor edx, edx ; mov rcx, rsi ; call 0x200000b332f
0x0000020000168b43 : xor edx, edx ; mov rcx, rsi ; call 0x20000294e27
0x0000020000668271 : xor edx, edx ; mov rcx, rsi ; call 0x20000294e28
0x00000200004fd577 : xor edx, edx ; sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x000002000009150f : xor edx, edx ; test r8, r8 ; jne 0x2000009151e ; ret
0x000002000010af93 : xor edx, edx ; test rax, rax ; jne 0x2000010afa5 ; mov al, dl ; ret
0x000002000010af93 : xor edx, edx ; test rax, rax ; jne 0x2000010afa6 ; mov al, dl ; ret
0x00000200004a0643 : xor edx, edx ; test rax, rax ; jne 0x200004a0655 ; mov al, dl ; ret
0x00000200004a0643 : xor edx, edx ; test rax, rax ; jne 0x200004a0656 ; mov al, dl ; ret
0x00000200005d8eec : xor edx, edx ; test rcx, rcx ; jne 0x200005d8eff ; xor eax, eax ; ret
0x000002000016605b : xor edx, edx ; xor ecx, ecx ; call 0x20000042296
0x000002000013476f : xor edx, edx ; xor ecx, ecx ; call rax
0x000002000058a684 : xor edx, edx ; xor ecx, ecx ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x0000020000585799 : xor edx, esp ; jmp qword ptr [rbx]
0x000002000006c609 : xor esi, 0xffffffff ; inc dword ptr [rcx - 0x75] ; ret 0xe4eb
0x000002000043b3e9 : xor esi, dword ptr [rbp + 0x41] ; mov rcx, rbx ; call 0x2000006a619
0x000002000043b3d0 : xor esi, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call 0x2000006a619
0x000002000043b445 : xor esi, dword ptr [rbp + 0xa] ; mov rcx, rbx ; call 0x2000006a619
0x0000020000101e17 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x0000020000134a41 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001d8537 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x00000200001d84e1 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x0000020000460f6d : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rbx - 0x7b74b739] ; ret 0x8840
0x000002000013a015 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret
0x0000020000101e15 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001d8535 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x000002000013a013 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret
0x0000020000101e13 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001d8533 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x000002000013a011 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret
0x00000200001f08c1 : xor esi, ecx ; dec dword ptr [rax - 0x7d] ; ret 0x4910
0x000002000052058b : xor esi, edx ; ret
0x0000020000216a6d : xor esi, esi ; call 0x20000212cc0
0x00000200005e76a8 : xor esi, esi ; call 0x200004d3958
0x00000200001a6fae : xor esi, esi ; inc dword ptr [rbp + 0x3b] ; ret
0x00000200001a6fb7 : xor esi, esi ; inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000436fa3 : xor esi, esi ; jmp 0x20000436f6c
0x00000200000e722d : xor esi, esi ; mov rdx, rbx ; mov rcx, r13 ; call r12
0x00000200001d20d5 : xor esi, esi ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000053572c : xor esi, esi ; ret
0x000002000006c701 : xor esi, esi ; ret 0x7420
0x00000200004cb0d0 : xor esi, esi ; sbb eax, 0xc0330000 ; ret
0x0000020000553bf1 : xor esp, 0x5b ; jmp 0x1fffd1833fe
0x00000200001d5b6a : xor esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200001d607f : xor esp, 0x8b000029 ; ret 0x16eb
0x00000200001d5f31 : xor esp, 0x8b000029 ; ret 0xb5eb
0x0000020000596ca9 : xor esp, dword ptr [rdx + rsi*4 - 1] ; nop ; jmp 0x200004c2ebf
0x0000020000190c50 : xor esp, dword ptr [rsi - 0x74bb000e] ; ret
0x000002000053d553 : xor esp, dword ptr [rsi - 0x77] ; imul eax, dword ptr [rdx], -0x18 ; and eax, dword ptr [rbx] ; ret 0x48ff
0x0000020000446f14 : xor esp, dword ptr [rsi] ; add al, ch ; push rax ; xchg eax, edi ; ret 0x84ff
0x00000200007224b3 : xor esp, ebp ; ret 0x49ff
0x00000200005859ee : xor esp, edx ; jmp qword ptr [rcx]
0x000002000044cc99 : xor esp, esp ; call 0x2000007264d
0x000002000002a109 : xor esp, esp ; call rsi
0x000002000017ce54 : xor esp, esp ; jmp 0x20000075afd
0x00000200001495d9 : xor qword ptr [r8 - 0x39], rcx ; ret 1
0x000002000007017a : xor qword ptr [rax + 8], 1 ; mov qword ptr [rbx], r15 ; jmp 0x2000007014f
0x0000020000673005 : xor r10d, r10d ; mov eax, r10d ; ret
0x00000200003dad69 : xor r10d, r9d ; mov eax, r10d ; ret
0x000002000044cc98 : xor r12d, r12d ; call 0x2000007264e
0x000002000002a108 : xor r12d, r12d ; call rsi
0x000002000017ce53 : xor r12d, r12d ; jmp 0x20000075afe
0x0000020000552555 : xor r13b, r9b ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x000002000007d0d7 : xor r13d, r13d ; jmp 0x2000007cd04
0x0000020000010519 : xor r8, qword ptr [r13 + 0x5a] ; and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000020bb1d : xor r8, rax ; cmp rcx, r10 ; jb 0x2000020bb0d ; ret
0x00000200005ceec7 : xor r8, rax ; ret
0x0000020000644d77 : xor r8b, al ; ret
0x00000200004021a4 : xor r8b, bpl ; in eax, -0xe ; ret 0x65ff
0x000002000039e7c7 : xor r8b, bpl ; ret 0xc92c
0x000002000055418b : xor r8b, bpl ; ret 0xe983
0x0000020000439660 : xor r8b, r13b ; jns 0x20000439664 ; ret 0x44ff
0x000002000040211f : xor r8b, r13b ; out dx, al ; ret 0x41ff
0x00000200004d00bf : xor r8b, r13b ; pop rbx ; ret 0xfff
0x000002000039f4c7 : xor r8b, r13b ; ret 0xc91f
0x000002000039e6a7 : xor r8b, r13b ; ret 0xc928
0x00000200000b5740 : xor r8b, r8b ; ret
0x00000200004db49f : xor r8d, eax ; test r8b, 0x47 ; jne 0x200004db4b2 ; ret
0x0000020000045d11 : xor r8d, r8d ; call 0x20000045499
0x000002000043c966 : xor r8d, r8d ; call 0x200000691b6
0x0000020000188096 : xor r8d, r8d ; call 0x200001f439d
0x00000200005a90b5 : xor r8d, r8d ; call 0x200004152ed
0x0000020000674390 : xor r8d, r8d ; call 0x20000670671
0x000002000038cdcf : xor r8d, r8d ; call rax
0x0000020000192015 : xor r8d, r8d ; jmp 0x200000be27f
0x00000200004fce97 : xor r8d, r8d ; jmp 0x200004fce63
0x000002000072bdf6 : xor r8d, r8d ; mov byte ptr [rsp + 0x30], dil ; call r12
0x000002000012d104 : xor r8d, r8d ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000142b2d : xor r8d, r8d ; mov eax, r8d ; ret
0x0000020000574c84 : xor r8d, r8d ; mov edx, ebp ; call 0x20000450eb3
0x0000020000162c80 : xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000038cdf5 : xor r8d, r8d ; mov rcx, rbx ; call rax
0x0000020000501467 : xor r8d, r8d ; mov rcx, rdi ; call r15
0x000002000064f679 : xor r8d, r8d ; mov rdx, r14 ; mov rcx, r12 ; call rax
0x000002000010b1fb : xor r8d, r8d ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001b4968 : xor r8d, r8d ; mov rdx, rsi ; call rax
0x0000020000208a8f : xor r8d, r8d ; test r8, r8 ; jne 0x20000208a5c ; ret
0x000002000070b904 : xor r8d, r8d ; xor ecx, ecx ; call 0x200000b7b3f
0x00000200001b9215 : xor r8d, r8d ; xor edx, edx ; call 0x20000045497
0x0000020000420625 : xor r8d, r8d ; xor edx, edx ; call 0x20000045498
0x0000020000442715 : xor r8d, r8d ; xor edx, edx ; call 0x200000702b8
0x000002000046b1cc : xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x0000020000124511 : xor r8d, r8d ; xor edx, edx ; call r9
0x0000020000166058 : xor r8d, r8d ; xor edx, edx ; xor ecx, ecx ; call 0x20000042299
0x00000200001fc7e0 : xor r9, qword ptr [rbx] ; add dh, dh ; ret
0x0000020000605912 : xor r9b, r9b ; mov al, r9b ; ret
0x00000200003daa60 : xor r9d, r8d ; mov eax, r9d ; ret
0x000002000056bc81 : xor r9d, r9d ; jmp 0x20000437ee3
0x00000200001d1760 : xor r9d, r9d ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x000002000053d5f9 : xor r9d, r9d ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200002195ca : xor r9d, r9d ; mov rax, r9 ; ret
0x000002000056bca6 : xor r9d, r9d ; mov rdi, r9 ; jmp 0x20000437eef
0x00000200003ac92b : xor r9d, r9d ; test eax, eax ; je 0x200003ac940 ; add rax, r10 ; jmp 0x200003ac8c4
0x0000020000666f1f : xor r9d, r9d ; test rax, rax ; jne 0x20000666f30 ; ret
0x000002000041d15e : xor r9d, r9d ; xor edx, edx ; call 0x20000048620
0x00000200001ab28b : xor rax, qword ptr [r9 - 0x75] ; ret 0xeac1
0x00000200001ae22f : xor rax, r9 ; mov rcx, rax ; call rdx
0x00000200000e1332 : xor rax, rax ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000105966 : xor rax, rax ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000220409 : xor rax, rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000068e70 : xor rax, rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000335ea : xor rax, rax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000013fe4a : xor rax, rax ; ret
0x00000200000fdc5c : xor rcx, rax ; mov qword ptr [r11 + r10*8 + 8], rcx ; ret
0x000002000014993f : xor rcx, rdx ; xor rdx, qword ptr [rax] ; jmp rdx
0x000002000008cb91 : xor rcx, rsp ; call 0x20000148e15
0x000002000008cb90 : xor rcx, rsp ; call 0x20000148e16
0x00000200005190f0 : xor rcx, rsp ; call 0x20000148e17
0x000002000051a1ba : xor rcx, rsp ; call 0x20000148e18
0x00000200006e9e52 : xor rdx, qword ptr [r10] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000149942 : xor rdx, qword ptr [rax] ; jmp rdx
0x00000200001f8be2 : xor rdx, rdx ; call 0x20000294e25
0x000002000000d64f : xor spl, byte ptr [rip - 0x61f25bcc] ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200005a27b3 : xor spl, sil ; push rsi ; ret
0x0000020000110f83 : xrstor ptr [rcx] ; mov dword ptr [rcx + 0x18], r8d ; ret
0x0000020000110f92 : xrstor ptr [rcx] ; ret
0x00000200000cee8f : xsave ptr [rcx] ; ret

Unique gadgets found: 51913
