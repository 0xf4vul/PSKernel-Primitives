Gadgets information
============================================================
0x00000200004475ac : adc ah, bh ; ret 0x33ff
0x000002000008c59c : adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000008b90c : adc ah, byte ptr [rax] ; push rax ; call qword ptr [rdx]
0x000002000008c680 : adc ah, byte ptr [rax] ; ret 0xff
0x000002000008c5a0 : adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000048b3ea : adc ah, byte ptr [rdi] ; mov edi, 0x200f44ff ; ret
0x000002000046badb : adc ah, byte ptr [rsi - 0x7d] ; ret 0x6602
0x00000200006d3839 : adc al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000428512 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004eb8d8 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000001e311 : adc al, 0 ; add byte ptr [rax], al ; ret
0x000002000015f18f : adc al, 0 ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x00000200006dd56e : adc al, 0 ; add byte ptr [rbx + 0x2341ffca], al ; ret 0xe0c1
0x000002000036f8e7 : adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c7942 : adc al, 0 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000013bd8b : adc al, 0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c23ba : adc al, 0 ; add rsp, 0x38 ; ret
0x000002000047d26c : adc al, 0 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000144355 : adc al, 0 ; bt eax, ecx ; setb al ; ret
0x000002000014f143 : adc al, 0 ; call 0x200000771c6
0x0000020000139d8c : adc al, 0 ; call 0x200000a3958
0x0000020000361d9a : adc al, 0 ; call 0x2000035e0a4
0x00000200004e5d82 : adc al, 0 ; call r12
0x00000200002237ee : adc al, 0 ; hlt ; ret
0x000002000014256b : adc al, 0 ; jmp 0x2000003e85b
0x0000020000420988 : adc al, 0 ; jmp 0x2000042091a
0x00000200000abdcc : adc al, 0 ; mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014a925 : adc al, 0 ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200004cc924 : adc al, 0 ; mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x000002000000bb7b : adc al, 0 ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x0000020000225de2 : adc al, 0 ; nop ; ret 0x14
0x000002000013aee5 : adc al, 0 ; ret
0x0000020000141d07 : adc al, 0 ; xor eax, eax ; ret
0x0000020000188c1b : adc al, 0 ; xor r8d, r8d ; xor edx, edx ; call 0x200000a4e89
0x00000200006d184e : adc al, 0x13 ; xor ecx, ecx ; call rdi
0x000002000069db63 : adc al, 0x16 ; xor ecx, ecx ; call rdi
0x000002000069dfe4 : adc al, 0x17 ; xor ecx, ecx ; call rdi
0x000002000011e15a : adc al, 0x18 ; add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x3b49
0x00000200004425be : adc al, 0x1c ; add bh, bh ; ret 0x8348
0x00000200004425a5 : adc al, 0x1c ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006e395f : adc al, 0x1e ; xor ecx, ecx ; call r9
0x00000200006d9180 : adc al, 0x1f ; xor ecx, ecx ; call rdi
0x00000200006d6aa6 : adc al, 0x23 ; xor ecx, ecx ; call rdi
0x00000200006d8198 : adc al, 0x26 ; xor ecx, ecx ; call rdi
0x00000200000d5b47 : adc al, 0x28 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000386102 : adc al, 0x29 ; add byte ptr [rcx - 0x75], al ; ret 0x2b41
0x0000020000617f46 : adc al, 0x2b ; ret 0x341
0x00000200001590f1 : adc al, 0x2b ; ret 0x90c3
0x000002000069ed1f : adc al, 0x2e ; xor ecx, ecx ; call rdi
0x000002000056726c : adc al, 0x32 ; stc ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000581b38 : adc al, 0x33 ; mov dl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001c058c : adc al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000046cce4 : adc al, 0x33 ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; ret
0x00000200006df1a7 : adc al, 0x33 ; xor ecx, ecx ; call rdi
0x00000200006a03c8 : adc al, 0x34 ; xor ecx, ecx ; call rdi
0x00000200004b6e58 : adc al, 0x36 ; stc ; dec dword ptr [rax - 0x77] ; adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200006e6888 : adc al, 0x36 ; xor ecx, ecx ; call rdi
0x000002000015a006 : adc al, 0x3b ; ret
0x000002000040388f : adc al, 0x3b ; ret 0x850f
0x00000200001639d1 : adc al, 0x3b ; ret 0xe672
0x0000020000393cf1 : adc al, 0x3b ; ret 0xed75
0x0000020000410778 : adc al, 0x3b ; ret 0xee75
0x00000200003c3789 : adc al, 0x3e ; mov r8, rdi ; mov rcx, rbp ; call rax
0x00000200001621c2 : adc al, 0x41 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001bfcec : adc al, 0x44 ; cmp eax, ecx ; jb 0x200001bfcd4 ; ret
0x00000200001bfceb : adc al, 0x44 ; cmp eax, ecx ; jb 0x200001bfcd5 ; ret
0x00000200001362d9 : adc al, 0x44 ; cmp ecx, ecx ; jb 0x200001362c4 ; ret
0x00000200001362d8 : adc al, 0x44 ; cmp ecx, ecx ; jb 0x200001362c5 ; ret
0x00000200004909f8 : adc al, 0x46 ; ret 0x45ff
0x00000200004e3b77 : adc al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000010508a : adc al, 0x48 ; add esp, 0x28 ; ret
0x000002000045a7b4 : adc al, 0x48 ; add esp, 0x80 ; pop rbx ; ret
0x00000200004cd51c : adc al, 0x48 ; mov dword ptr [rcx], edx ; mov eax, r8d ; ret
0x000002000042244b : adc al, 0x48 ; mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000449a3f : adc al, 0x48 ; mov ecx, edi ; call 0x20000076d17
0x0000020000449a3e : adc al, 0x48 ; mov ecx, edi ; call 0x20000076d18
0x0000020000449764 : adc al, 0x48 ; mov ecx, esi ; call 0x20000076d17
0x0000020000449763 : adc al, 0x48 ; mov ecx, esi ; call 0x20000076d18
0x000002000014ddf7 : adc al, 0x48 ; mov edi, dword ptr [rsp + 8] ; ret
0x000002000019fbb5 : adc al, 0x49 ; add eax, 0x14 ; jmp 0x2000019fbeb
0x00000200001a038e : adc al, 0x49 ; add eax, 0x14 ; jmp 0x200001a03c4
0x00000200001b8974 : adc al, 0x49 ; and esp, 0xfffffffe ; jmp 0x200001b8988
0x000002000016a561 : adc al, 0x49 ; mov eax, edx ; add rsp, 0x28 ; ret
0x0000020000425e98 : adc al, 0x50 ; add dx, cx ; movzx eax, dx ; ret
0x0000020000176ad7 : adc al, 0x61 ; adc eax, 0xb60f0000 ; ret
0x00000200000220c5 : adc al, 0x64 ; jb 0x200000220d8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005c09c8 : adc al, 0x72 ; sbb bh, byte ptr [rcx] ; or byte ptr [r13 + r10 - 0x7d], r14b ; ret
0x000002000015c94e : adc al, 0x72 ; xor al, 0xf7 ; ret 0x820
0x00000200004d0aa2 : adc al, 0x75 ; or bh, bh ; ret
0x0000020000081368 : adc al, 0x7f ; ret
0x00000200006680b7 : adc al, 0x80 ; ret 0xdff
0x00000200006c1b4e : adc al, 0x84 ; call qword ptr [rip - 0x3dafae]
0x0000020000427454 : adc al, 0x85 ; ret
0x00000200006c58f7 : adc al, 0x89 ; add eax, 0xffbbb452 ; ret
0x00000200003d8b8d : adc al, 0x89 ; jo 0x200003d8be3 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001590ee : adc al, 0x8b ; adc al, 0x2b ; ret 0x90c3
0x00000200006d6f9b : adc al, 0x8b ; adc byte ptr [r9 - 0x75], r9b ; ret
0x00000200003bee08 : adc al, 0x8b ; ret
0x0000020000034845 : adc al, 0x8d ; push rbx ; add dword ptr [rax - 0x75], ecx ; iretd ; call 0x20000010a89
0x000002000008e77e : adc al, 0xa3 ; ret
0x0000020000542f90 : adc al, 0xa3 ; ret 0x85ff
0x000002000024ec59 : adc al, 0xb ; add byte ptr [rip + 0x14061306], cl ; ret 0xf00d
0x000002000024da4d : adc al, 0xb ; add byte ptr [rip + 0x14061c06], cl ; ret 0xf00d
0x0000020000231849 : adc al, 0xb ; add byte ptr [rip + 0x14061e06], cl ; ret 0xf00d
0x00000200002539bd : adc al, 0xb ; add byte ptr [rip + 0x14062206], cl ; ret 0xf010
0x00000200002476b1 : adc al, 0xb ; add byte ptr [rip + 0x14063106], cl ; ret 0xf00d
0x000002000026ba61 : adc al, 0xb ; add byte ptr [rip + 0x14063e06], cl ; ret 0xf00d
0x00000200001af4e7 : adc al, 0xb ; ret 0x8941
0x00000200006f8a57 : adc al, 0xb9 ; dec dword ptr [rcx + rcx*4 + 0x1d] ; call qword ptr [rbx]
0x000002000064e3f8 : adc al, 0xc ; ret 0x48ff
0x000002000025e6ec : adc al, 0xc1 ; cmp eax, dword ptr [rax] ; ret
0x000002000003f985 : adc al, 0xc2 ; jmp 0x2000003f98d
0x00000200001bd99b : adc al, 0xc2 ; jmp 0x200001bd9a3
0x0000020000162124 : adc al, 0xc2 ; test rdx, rdx ; je 0x20000162134 ; call rdx
0x00000200001baf7e : adc al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000003b51c : adc al, 0xd3 ; add rsp, 0x48 ; ret
0x00000200006f9423 : adc al, 0xd6 ; inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x00000200004b7958 : adc al, 0xdd ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001e0aba : adc al, 0xe5 ; push rsi ; ret 0xf07
0x000002000058bf38 : adc al, 0xe6 ; out 0xff, al ; add rsp, 0x38 ; ret
0x0000020000481e26 : adc al, 0xe8 ; and al, 0x1b ; ret 0x45ff
0x0000020000136bd4 : adc al, 0xe8 ; ret 0xfff3
0x000002000050f6cd : adc al, 0xe9 ; inc dword ptr [rbx - 0x7bf0fd16] ; ret 0
0x0000020000187522 : adc al, 0xea ; dec dword ptr [rax - 0x7d] ; ret 0x4910
0x00000200006355b4 : adc al, 0xed ; ret
0x0000020000061540 : adc al, 0xf ; and dword ptr [rbp + 0x61], 0x19 ; add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x00000200003f6f5f : adc al, 0xf ; mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200003c95e8 : adc al, 0xf ; mov edx, 0xe721ce1 ; ret
0x00000200003a72e2 : adc al, 0xf ; test esp, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000713ad : adc al, 0xf ; xchg eax, esp ; ret 0x8b48
0x00000200001c47e4 : adc al, 0xf6 ; ret
0x00000200001aa513 : adc al, 0xf6 ; ret 0x7408
0x000002000047afba : adc al, 0xff ; ret
0x000002000050b7af : adc al, 0xff ; ret 0x8349
0x000002000056e710 : adc al, 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004cecc6 : adc al, 1 ; cmp rdx, r9 ; jae 0x200004cecd9 ; mov eax, ecx ; ret
0x0000020000527aa6 : adc al, 1 ; cmp rdx, r9 ; jae 0x20000527ab9 ; mov eax, ecx ; ret
0x0000020000431fbb : adc al, 3 ; ret
0x0000020000216212 : adc al, 6 ; sysenter
0x0000020000066f46 : adc al, 9 ; and edx, 8 ; je 0x20000066f3d ; mov al, 1 ; ret
0x000002000041563c : adc al, bpl ; jno 0x20000415682 ; ret 0xe9ff
0x00000200001cf676 : adc al, bpl ; ret
0x000002000062c287 : adc al, bpl ; ret 0xa776
0x0000020000386530 : adc al, bpl ; sbb esp, edx ; sar edi, 1 ; jmp 0x20000386504
0x00000200001d00a6 : adc al, bpl ; xchg eax, ebx ; ret 0xffea
0x00000200000c930f : adc al, byte ptr [r8] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000008e7b0 : adc al, byte ptr [rax + rsi - 0x1fe20463] ; stc ; pop rdx ; ret
0x00000200004f5259 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, esi ; call 0x2000011d04d
0x00000200006e6ae6 : adc al, byte ptr [rax] ; add byte ptr [rbx + 0x2341ffca], al ; ret
0x000002000050b60a : adc al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0x7f77
0x000002000012d0d8 : adc al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x00000200000b045c : adc al, byte ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004d4e82 : adc al, byte ptr [rax] ; jmp 0x200004d4e94
0x00000200000c44f9 : adc al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000153ba4 : adc al, byte ptr [rax] ; mov byte ptr [rip + 0x12d215], cl ; ret
0x00000200000b067b : adc al, byte ptr [rax] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x0000020000147c79 : adc al, byte ptr [rax] ; nop ; mov byte ptr [rcx + 1], dl ; ret
0x0000020000016a30 : adc al, byte ptr [rax] ; ret
0x00000200002163f2 : adc al, byte ptr [rax] ; ret 0x12
0x00000200001549de : adc al, byte ptr [rax] ; sete al ; ret
0x0000020000216166 : adc al, byte ptr [rax] ; sysenter
0x000002000039580b : adc al, byte ptr [rax] ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e2a05 : adc al, byte ptr [rax] ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000a97c1 : adc al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200006d990b : adc al, byte ptr [rbp + 3] ; ret
0x00000200003f9481 : adc al, byte ptr [rbx + 0xd7f03f8] ; xor eax, eax ; ret
0x00000200000e715a : adc al, byte ptr [rbx + rbx + 0x450f4800] ; ret
0x000002000065a7d6 : adc al, byte ptr [rbx - 0x71f0fb05] ; ret
0x0000020000021f08 : adc al, byte ptr [rbx] ; add byte ptr [rax], al ; jne 0x20000021f19 ; xor eax, eax ; ret
0x00000200003668c4 : adc al, byte ptr [rcx + 0x3b] ; ret
0x000002000062ef21 : adc al, byte ptr [rcx + 0x43f9] ; adc dword ptr [rdi], ecx ; ret 0x4389
0x00000200000c934e : adc al, byte ptr [rcx + 0xf] ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x34c
0x00000200006d10f7 : adc al, byte ptr [rcx + 0xf] ; mov bh, 0xc1 ; ret
0x000002000046bb18 : adc al, byte ptr [rcx + 0xf] ; mov dh, 0x47 ; call 0x1ffc3cb4674
0x00000200003d293c : adc al, byte ptr [rcx - 0x75] ; ret 0x348
0x0000020000073e2f : adc al, byte ptr [rcx - 0x7d] ; ret
0x000002000052ab27 : adc al, byte ptr [rcx - 0xa] ; ret
0x00000200006f1975 : adc al, byte ptr [rcx - 1] ; ret
0x000002000045badf : adc al, byte ptr [rcx - 1] ; ret 0x8341
0x000002000008b99c : adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x000002000015d814 : adc al, byte ptr [rdi + rcx + 0x20] ; ret
0x000002000052a3fa : adc al, byte ptr [rdi] ; ret
0x0000020000184f32 : adc al, byte ptr [rip - 0x74b7fff1] ; ret 0xc148
0x000002000024882e : adc al, byte ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000021ecbe : adc al, byte ptr [rsi] ; sysenter
0x0000020000216165 : adc al, byte ptr fs:[rax] ; sysenter
0x0000020000427452 : adc al, ch ; adc al, 0x85 ; ret
0x0000020000415116 : adc al, ch ; cwde ; ret 0xe9ff
0x000002000042ace5 : adc al, ch ; jne 0x2000042ad64 ; ret 0x84ff
0x000002000041563d : adc al, ch ; jno 0x20000415681 ; ret 0xe9ff
0x000002000047e921 : adc al, ch ; leave ; jle 0x2000047e8f6 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004150fa : adc al, ch ; mov ah, 0x41 ; ret 0xe9ff
0x000002000059daba : adc al, ch ; mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200004155a2 : adc al, ch ; or al, 0x3d ; ret 0xe9ff
0x000002000042acd1 : adc al, ch ; pop rcx ; outsd dx, dword ptr [rsi] ; ret
0x000002000042c125 : adc al, ch ; push rbp ; pop rcx ; ret
0x00000200001e8492 : adc al, ch ; pushfq ; ret 0xfff8
0x00000200001cf677 : adc al, ch ; ret
0x000002000062c288 : adc al, ch ; ret 0xa776
0x00000200000c850c : adc al, ch ; sahf ; ret 0xa
0x0000020000386531 : adc al, ch ; sbb esp, edx ; sar edi, 1 ; jmp 0x20000386503
0x00000200001d00a7 : adc al, ch ; xchg eax, ebx ; ret 0xffea
0x00000200004fc61a : adc ax, word ptr [rax] ; jmp 0x200004fc5e6
0x00000200001521f0 : adc bh, bh ; adc eax, 0x204fe1 ; ret
0x000002000041837e : adc bh, bh ; add al, 0xeb ; ret 0xfb81
0x00000200001f0dcf : adc bh, bh ; enter -0x108b, -0xd ; ret
0x000002000001c747 : adc bh, bh ; ret
0x00000200004e1f18 : adc bh, bh ; ret 0x349
0x000002000004270e : adc bh, bh ; ret 0x3b49
0x00000200000ca147 : adc bh, bh ; ret 0x3b4d
0x00000200001091ea : adc bh, bh ; ret 0x8348
0x00000200005e65a0 : adc bh, bh ; ret 0x8349
0x000002000002387a : adc bh, bh ; ret 0x8b4c
0x00000200004dbb7b : adc bh, bh ; shr bl, 0xf2 ; mov al, r9b ; ret
0x00000200001c4372 : adc bh, byte ptr [rax + 4] ; ret
0x00000200001c60e8 : adc bh, byte ptr [rbx] ; ror byte ptr [rdi], 1 ; ret 0xe0c0
0x00000200006379b5 : adc bh, byte ptr [rcx] ; ret
0x00000200001e7d3e : adc bh, byte ptr [rdi] ; call 0x1ffc3d48d4a
0x0000020000648462 : adc bh, byte ptr [rsp + rax] ; add rsp, 0x48 ; ret
0x0000020000150dcb : adc bh, ch ; ret
0x000002000036d646 : adc bl, al ; mov al, 8 ; ret
0x00000200000e1a8c : adc bl, al ; mov eax, 0xc000000d ; ret
0x00000200005837af : adc bl, al ; mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200004ebe33 : adc bl, al ; xor eax, eax ; ret
0x0000020000610af4 : adc bl, bl ; push rsi ; ret
0x00000200006f0ec6 : adc bl, bpl ; add eax, 0xff098b48 ; ret
0x00000200006f0ec7 : adc bl, ch ; add eax, 0xff098b48 ; ret
0x000002000048c4b6 : adc bl, ch ; out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x000002000035eb20 : adc bl, ch ; ret 0x8b48
0x00000200001b8cec : adc bl, ch ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x00000200003981c8 : adc bl, dh ; or byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200000a8283 : adc byte ptr [r10], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000037082 : adc byte ptr [r10], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f7376 : adc byte ptr [r11 + 0xb4803e0], al ; ret 0x8948
0x00000200001f710d : adc byte ptr [r11 + 0xb4803e0], al ; ret 0x8949
0x00000200001f71cf : adc byte ptr [r11 + 0xb4903e0], al ; ret
0x00000200005c78fc : adc byte ptr [r11 - 0x16b7dbb4], cl ; ret
0x000002000010ec0d : adc byte ptr [r11 - 0x488a073e], al ; ret
0x000002000054369f : adc byte ptr [r11], al ; ret
0x000002000054ba38 : adc byte ptr [r11], bpl ; ret 0x348
0x00000200005a071c : adc byte ptr [r11], r12b ; ret 0x4731
0x00000200004b2698 : adc byte ptr [r11], r14b ; dec dword ptr [rax - 0x75] ; ret 0x8948
0x0000020000604c34 : adc byte ptr [r11], r14b ; shr al, cl ; ret
0x00000200004c592c : adc byte ptr [r11], r15b ; ret
0x000002000040c817 : adc byte ptr [r11], r8b ; ret
0x000002000003bb90 : adc byte ptr [r13 - 0x27], sil ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200001e3afe : adc byte ptr [r13 - 0x2a], sil ; ret
0x0000020000037bfe : adc byte ptr [r13 - 0x75], cl ; ret
0x00000200004f1f08 : adc byte ptr [r14 + rax + 0x48], sil ; add esp, 0x40 ; pop rbx ; ret
0x000002000062eb18 : adc byte ptr [r14], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x0000020000636cfc : adc byte ptr [r15 + rcx - 0x49], r8b ; ret
0x00000200004b078e : adc byte ptr [r15], cl ; test esp, esp ; enter 0x13, -0x75 ; ret 0x8d48
0x000002000004c09a : adc byte ptr [r8 + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200000d259a : adc byte ptr [r8 + 0x2b], cl ; ret
0x00000200000310a5 : adc byte ptr [r8 + 0x2b], r9b ; ret 0x3b48
0x0000020000101133 : adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x0000020000101140 : adc byte ptr [r8 + 0x3b], cl ; ret 0x9074
0x00000200005b7fce : adc byte ptr [r8 + 0x3b], r9b ; ret
0x00000200000c787c : adc byte ptr [r8 + 0xf], cl ; ret
0x0000020000103da0 : adc byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200005ba8d6 : adc byte ptr [r8 + 1], r15b ; pop rbp ; ret
0x0000020000412811 : adc byte ptr [r8 + 3], r9b ; ret 0x3b48
0x00000200001eca88 : adc byte ptr [r8 - 0x16298aff], r13b ; ret 0xf46b
0x00000200000585ed : adc byte ptr [r8 - 0x3f], cl ; call 0x1ffc228ce07
0x00000200004039bb : adc byte ptr [r8 - 0x73], r9b ; sbb byte ptr [r8 - 0x75], r9b ; ret
0x000002000006c403 : adc byte ptr [r8 - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200006c1eed : adc byte ptr [r8 - 0x75], cl ; int 0xe8
0x00000200003a4ca6 : adc byte ptr [r8 - 0x75], cl ; ret
0x000002000070d1fa : adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200004aa1ed : adc byte ptr [r8 - 0x75], cl ; ret 0xc9e8
0x000002000051758c : adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x0000020000175344 : adc byte ptr [r8 - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x00000200000033ae : adc byte ptr [r8 - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000407159 : adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200005385e4 : adc byte ptr [r8 - 0x75], r9b ; ret 0x8948
0x00000200000e30a4 : adc byte ptr [r8 - 0x75], r9b ; shr eax, cl ; ret 0xfc5c
0x00000200005e6c5c : adc byte ptr [r8 - 0x77], cl ; cmp ecx, dword ptr [rax - 0x7f] ; ret
0x00000200001beb04 : adc byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000020000164248 : adc byte ptr [r8 - 0x77], cl ; xor ecx, dword ptr [rax - 0x7f] ; ret
0x0000020000062a89 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x20000062a8c ; ret
0x000002000006347c : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000006347f ; ret
0x00000200003830f5 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000020000151383 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200004b0812 : adc byte ptr [r8 - 0x7d], cl ; ret 0x4860
0x0000020000131d94 : adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x00000200001a0c4a : adc byte ptr [r8 - 0x7d], cl ; ret 0xeb10
0x00000200005f4dbe : adc byte ptr [r8 - 0x7d], r9b ; shr dword ptr [rax], -0x18 ; ret
0x0000020000538a19 : adc byte ptr [r8 - 1], r9b ; ret 0x3966
0x0000020000538a5b : adc byte ptr [r8 - 1], r9b ; ret 0x8b48
0x0000020000193c5c : adc byte ptr [r8], r8b ; ret
0x000002000002a924 : adc byte ptr [r9 + 0x2b], al ; ret 0x2b41
0x000002000058aef2 : adc byte ptr [r9 + 0x3b], cl ; ret
0x00000200005849dd : adc byte ptr [r9 - 0x4f], al ; add dword ptr [rsi - 1], esp ; ret 0x4166
0x00000200006c7385 : adc byte ptr [r9 - 0x75], al ; pop rcx ; or byte ptr [rbx], bh ; ret
0x00000200001352c1 : adc byte ptr [r9 - 0x75], cl ; ret
0x00000200006bfe96 : adc byte ptr [r9 - 0x75], cl ; rol bl, 0xff ; ret 0x3b41
0x000002000013dc15 : adc byte ptr [r9 - 0x75], r9b ; ret
0x00000200006d98d6 : adc byte ptr [r9 - 0x75], r9b ; ret 0x3b4c
0x00000200003a942f : adc byte ptr [r9 - 0x77], al ; or dword ptr [rcx + 0x63], ecx ; ret 0x8545
0x00000200001e572c : adc byte ptr [r9 - 0x7c], r8b ; ret 0xcc75
0x0000020000407c4e : adc byte ptr [r9], al ; ret
0x000002000004c09b : adc byte ptr [rax + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret 0xc148
0x000002000041b46b : adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x00000200000d259b : adc byte ptr [rax + 0x2b], cl ; ret
0x000002000018d580 : adc byte ptr [rax + 0x2b], cl ; ret 0x2ba
0x000002000070e216 : adc byte ptr [rax + 0x2b], cl ; ret 0x349
0x00000200000310a6 : adc byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000270254 : adc byte ptr [rax + 0x33], cl ; ret
0x000002000006f052 : adc byte ptr [rax + 0x33], cl ; ret 0x2349
0x0000020000402ea5 : adc byte ptr [rax + 0x3b660000], al ; ret 0x850f
0x00000200000e8c2f : adc byte ptr [rax + 0x3b], cl ; ret
0x000002000035e96b : adc byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000101134 : adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000101141 : adc byte ptr [rax + 0x3b], cl ; ret 0x9074
0x00000200001a329f : adc byte ptr [rax + 0x3b], cl ; ret 0xb75
0x0000020000041f13 : adc byte ptr [rax + 0x3b], cl ; ret 0xba48
0x0000020000102308 : adc byte ptr [rax + 0x3b], cl ; ret 0xe473
0x000002000035ea07 : adc byte ptr [rax + 0x3b], cl ; ret 0xe875
0x000002000051bdb6 : adc byte ptr [rax + 0x3b], cl ; ret 0xf072
0x00000200004d9464 : adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x00000200001a4f38 : adc byte ptr [rax + 0x63], cl ; ret
0x00000200000829a0 : adc byte ptr [rax + 0x7e], bh ; ret
0x000002000047d20c : adc byte ptr [rax + 0xb], cl ; ret 0x3348
0x0000020000634181 : adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200000c787d : adc byte ptr [rax + 0xf], cl ; ret
0x0000020000103da1 : adc byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200005ba8d7 : adc byte ptr [rax + 1], bh ; pop rbp ; ret
0x0000020000045356 : adc byte ptr [rax + 1], bh ; ret
0x000002000024613a : adc byte ptr [rax + 1], dl ; and cl, byte ptr [rcx] ; add byte ptr [rdx], ah ; ret 0xf01b
0x000002000015ada9 : adc byte ptr [rax + 3], cl ; ret
0x0000020000412812 : adc byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000644c77 : adc byte ptr [rax + r9*4 + 0x74], r8b ; and al, 0x20 ; call r15
0x00000200003fb3ba : adc byte ptr [rax + rax*2 - 0xa], dh ; ret 0x7502
0x000002000042d3c5 : adc byte ptr [rax + rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1b80
0x0000020000375063 : adc byte ptr [rax + rax], al ; add byte ptr [rax], al ; setne al ; ret
0x000002000039e151 : adc byte ptr [rax + rbp - 1], dh ; ret
0x0000020000644c78 : adc byte ptr [rax + rcx*4 + 0x74], al ; and al, 0x20 ; call r15
0x000002000047b8b5 : adc byte ptr [rax + rdx - 1], dh ; ret
0x00000200001eca89 : adc byte ptr [rax - 0x16298aff], ch ; ret 0xf46b
0x00000200000585ee : adc byte ptr [rax - 0x3f], cl ; call 0x1ffc228ce06
0x00000200000ec00d : adc byte ptr [rax - 0x3f], cl ; call 0x1ffc2320825
0x000002000015359a : adc byte ptr [rax - 0x3f], cl ; call 0x1ffffd7b6b4
0x0000020000572099 : adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004a679f : adc byte ptr [rax - 0x3fffff45], bh ; ret
0x0000020000172ab0 : adc byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000417621 : adc byte ptr [rax - 0x45], dh ; add r11b, al ; mov al, 6 ; ret
0x0000020000101130 : adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x000002000038d40b : adc byte ptr [rax - 0x73], cl ; add eax, 0xc383d ; ret
0x00000200004c74f1 : adc byte ptr [rax - 0x73], cl ; jnp 0x200004c754f ; jmp 0x200004c7505
0x00000200004039bc : adc byte ptr [rax - 0x73], cl ; sbb byte ptr [r8 - 0x75], r9b ; ret
0x000002000062fc0c : adc byte ptr [rax - 0x74b3001f], ch ; ret 0xff49
0x000002000004d52b : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200004244fd : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x00000200001a0bd9 : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x000002000006c404 : adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200004c7ced : adc byte ptr [rax - 0x75], cl ; fdivr st(7) ; ret 0xe2c1
0x00000200006c1eee : adc byte ptr [rax - 0x75], cl ; int 0xe8
0x0000020000590623 : adc byte ptr [rax - 0x75], cl ; iretd ; call 0x2000019c8c6
0x000002000064c6e1 : adc byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200004ad0ec : adc byte ptr [rax - 0x75], cl ; je 0x200004ad11d ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000013218a : adc byte ptr [rax - 0x75], cl ; jl 0x200001321bb ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000013a4b3 : adc byte ptr [rax - 0x75], cl ; jl 0x2000013a4e4 ; sbb byte ptr [rcx - 0x75], al ; ret 0x90c3
0x0000020000192c17 : adc byte ptr [rax - 0x75], cl ; jl 0x20000192c48 ; sbb byte ptr [rcx - 0x76], al ; ret 0x90c3
0x0000020000464ee3 : adc byte ptr [rax - 0x75], cl ; jl 0x20000464f13 ; sbb byte ptr [rbx], ch ; ret 0x90c3
0x0000020000177de0 : adc byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005516fb : adc byte ptr [rax - 0x75], cl ; or eax, 0xffd300e5 ; call rax
0x00000200003b50e7 : adc byte ptr [rax - 0x75], cl ; or eax, 0xffecc6f9 ; call rax
0x00000200001b98ca : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000602d1 : adc byte ptr [rax - 0x75], cl ; ret
0x000002000070d1fb : adc byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200006d5f4d : adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000069d2f1 : adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000070aa : adc byte ptr [rax - 0x75], cl ; ret 0x4df0
0x00000200001ea75e : adc byte ptr [rax - 0x75], cl ; ret 0x8348
0x00000200001b1647 : adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200005385e5 : adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000012a23 : adc byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200000eb3fe : adc byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200004cd4c3 : adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x0000020000181860 : adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004aa1ee : adc byte ptr [rax - 0x75], cl ; ret 0xc9e8
0x00000200001a0a5f : adc byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200001b7696 : adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x000002000052b6ef : adc byte ptr [rax - 0x75], cl ; ret 0xeeb
0x00000200001854bf : adc byte ptr [rax - 0x75], cl ; ret 0xff48
0x000002000051758d : adc byte ptr [rax - 0x75], cl ; ret 0xffba
0x000002000064c545 : adc byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200000e30a5 : adc byte ptr [rax - 0x75], cl ; shr eax, cl ; ret 0xfc5c
0x0000020000175345 : adc byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x00000200000033af : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000177ddf : adc byte ptr [rax - 0x75], r9b ; or byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000517f9e : adc byte ptr [rax - 0x75], r9b ; ret
0x00000200001667f2 : adc byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200005e6c5d : adc byte ptr [rax - 0x77], cl ; cmp ecx, dword ptr [rax - 0x7f] ; ret
0x0000020000116550 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x2874
0x0000020000124c9b : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x3a75
0x00000200000a9077 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x5974
0x00000200001988ce : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x675
0x0000020000072b36 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xd75
0x0000020000072d28 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xe75
0x00000200001beb05 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200005e437b : adc byte ptr [rax - 0x77], cl ; or byte ptr [rcx - 0x7f], al ; ret 0x1000
0x000002000039024a : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000164249 : adc byte ptr [rax - 0x77], cl ; xor ecx, dword ptr [rax - 0x7f] ; ret
0x0000020000062a8a : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000062a8b ; ret
0x000002000006347d : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000006347e ; ret
0x00000200003830f6 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200001f5836 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200004de9ba : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xe], 0xf3 ; ret
0x00000200003ae029 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc3762858
0x000002000006b963 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000020000172449 : adc byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200001789bc : adc byte ptr [rax - 0x7d], cl ; ret 0x4406
0x00000200001667b1 : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200004b5c18 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000e8f29 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200004b0813 : adc byte ptr [rax - 0x7d], cl ; ret 0x4860
0x00000200004c5949 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x0000020000131d95 : adc byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200004f50aa : adc byte ptr [rax - 0x7d], cl ; ret 0x4930
0x00000200003cd5d7 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000200005717ba : adc byte ptr [rax - 0x7d], cl ; ret 0x4c20
0x00000200001547e9 : adc byte ptr [rax - 0x7d], cl ; ret 0x6602
0x00000200006e2cb7 : adc byte ptr [rax - 0x7d], cl ; ret 0x834a
0x000002000014ebb4 : adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x000002000058a324 : adc byte ptr [rax - 0x7d], cl ; ret 0xe920
0x00000200001a0c4b : adc byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000200000a3a0d : adc byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0xf ; ret
0x000002000069f9bf : adc byte ptr [rax - 0x7d], cl ; shl byte ptr [rax + 0x48], 0xc7 ; ret
0x00000200005f4dbf : adc byte ptr [rax - 0x7d], cl ; shr dword ptr [rax], -0x18 ; ret
0x00000200004c5948 : adc byte ptr [rax - 0x7d], r9b ; ret 0x4902
0x00000200006e2cb6 : adc byte ptr [rax - 0x7d], r9b ; ret 0x834a
0x000002000014a749 : adc byte ptr [rax - 0x7f], cl ; ret
0x00000200000f0bc6 : adc byte ptr [rax - 0x7f], cl ; ret 0x4e8
0x00000200003ab3b8 : adc byte ptr [rax - 1], cl ; dec dword ptr [rbx + 0x78c085c8] ; ret 0x8b48
0x00000200004a4fa7 : adc byte ptr [rax - 1], cl ; enter -0xf8b, -0xd ; ret
0x0000020000538a1a : adc byte ptr [rax - 1], cl ; ret 0x3966
0x00000200001b6096 : adc byte ptr [rax - 1], cl ; ret 0x8948
0x00000200001b5f80 : adc byte ptr [rax - 1], cl ; ret 0x8949
0x0000020000538a5c : adc byte ptr [rax - 1], cl ; ret 0x8b48
0x0000020000073c7f : adc byte ptr [rax - 1], cl ; ret 0xff49
0x000002000042031c : adc byte ptr [rax - 9], cl ; ret
0x00000200006a115c : adc byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x00000200003cda2a : adc byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x0000020000220656 : adc byte ptr [rax], al ; adc esp, dword ptr [rdi + rcx] ; sysenter
0x0000020000140e52 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000049303 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x28 ; ret
0x00000200003a9395 : adc byte ptr [rax], al ; add al, al ; jmp 0x200003a9362
0x00000200001a2cef : adc byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0xb841
0x000002000070e3aa : adc byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200000c4004 : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003cdceb : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x000002000004e4b8 : adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x00000200004e1d45 : adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x90c3
0x000002000019eb44 : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000019e397 : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000040f31e : adc byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000200000c78e4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000060495 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200001858ac : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004f8852 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000054ada
0x00000200005e2303 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e536
0x000002000053d949 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e537
0x000002000001e2e9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000002fe0d : adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000615ea3 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x234104e2], al ; ret 0x345
0x00000200004f9836 : adc byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8948
0x0000020000646183 : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2173
0x00000200005cf0ea : adc byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x870f
0x00000200003d3bdb : adc byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000003b08a : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x00000200005fcd5e : adc byte ptr [rax], al ; add cl, ch ; ret
0x000002000065b7c2 : adc byte ptr [rax], al ; add dh, dh ; ret
0x0000020000108aff : adc byte ptr [rax], al ; add rcx, rdx ; jmp rcx
0x000002000017385c : adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dc41d : adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000007cb20 : adc byte ptr [rax], al ; add rsp, 8 ; ret
0x00000200000637bf : adc byte ptr [rax], al ; jae 0x20000063777 ; xor eax, eax ; jmp 0x200000637a8
0x0000020000172468 : adc byte ptr [rax], al ; je 0x2000017247b ; mov eax, 0xc0000354 ; ret
0x00000200001ee9cd : adc byte ptr [rax], al ; jmp 0x200000aaca6
0x000002000064afeb : adc byte ptr [rax], al ; mov qword ptr [rax + 8], rcx ; ret
0x000002000012c1b7 : adc byte ptr [rax], al ; ret
0x000002000021fa3e : adc byte ptr [rax], al ; sysenter
0x00000200004dddcd : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001688e0 : adc byte ptr [rax], dl ; fldenv dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000062a38 : adc byte ptr [rbp + 0x16], dh ; ret
0x0000020000062a37 : adc byte ptr [rbp + 0x16], sil ; ret
0x000002000006791f : adc byte ptr [rbp + 0x1b], dh ; add rsp, 0x28 ; ret
0x000002000006791e : adc byte ptr [rbp + 0x1b], sil ; add rsp, 0x28 ; ret
0x00000200005724f2 : adc byte ptr [rbp + 0x2b], cl ; ret
0x0000020000145f95 : adc byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x75] ; ret 0x3345
0x000002000018853f : adc byte ptr [rbp + 0x3b], al ; ret
0x000002000015e795 : adc byte ptr [rbp + 0x3b], cl ; ret
0x0000020000018011 : adc byte ptr [rbp + 0xb0875c2], al ; ret 0x3345
0x00000200006d6819 : adc byte ptr [rbp + 3], cl ; ret
0x000002000057b946 : adc byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200000f9104 : adc byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000147b7b : adc byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x0000020000147b7a : adc byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x00000200000bde97 : adc byte ptr [rbp - 0x21], dh ; ret
0x000002000003bb91 : adc byte ptr [rbp - 0x27], dh ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200001e3aff : adc byte ptr [rbp - 0x2a], dh ; ret
0x0000020000385c23 : adc byte ptr [rbp - 0x30], al ; movdqu xmmword ptr [rbp - 0x30], xmm0 ; call rsi
0x000002000039a228 : adc byte ptr [rbp - 0x3f6bf02e], al ; ret
0x0000020000019751 : adc byte ptr [rbp - 0x75], al ; or byte ptr [rbp + 3], cl ; ret
0x00000200001cac4b : adc byte ptr [rbp - 0x75], al ; ret
0x00000200001b7798 : adc byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx + 0x3b] ; ret
0x00000200001b7690 : adc byte ptr [rbp - 0x75], cl ; add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000037bff : adc byte ptr [rbp - 0x75], cl ; ret
0x00000200006e26c8 : adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000063222a : adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x00000200003bbb9e : adc byte ptr [rbp - 0xe], dh ; mov al, 1 ; ret
0x00000200001f7377 : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8948
0x00000200001f710e : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8949
0x00000200001f71d0 : adc byte ptr [rbx + 0xb4903e0], al ; ret
0x00000200001f72bb : adc byte ptr [rbx + 0xb4903e0], al ; ret 0x8949
0x00000200004006a1 : adc byte ptr [rbx + 0xf49f0fe], cl ; rcr dword ptr [rsi], -0xa ; ret
0x00000200005837a9 : adc byte ptr [rbx + 9], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200004d8a8c : adc byte ptr [rbx + rbx*8], al ; dec dword ptr [rbx + rcx*4 + 0x75] ; or bh, bh ; ret
0x00000200005c78fd : adc byte ptr [rbx - 0x16b7dbb4], cl ; ret
0x000002000010ec0e : adc byte ptr [rbx - 0x488a073e], al ; ret
0x00000200003b4a90 : adc byte ptr [rbx - 0x74b3e3b5], cl ; ret
0x00000200004841a6 : adc byte ptr [rbx - 0x7c38143d], cl ; ret
0x000002000064c9b7 : adc byte ptr [rbx - 0xf8dc306], al ; ret
0x000002000019cfdd : adc byte ptr [rbx], ah ; ret
0x00000200005a071d : adc byte ptr [rbx], ah ; ret 0x4731
0x0000020000476d6d : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000197f94 : adc byte ptr [rbx], al ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000020000197e2f : adc byte ptr [rbx], al ; add cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x000002000040c818 : adc byte ptr [rbx], al ; ret
0x0000020000061a51 : adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200004c592d : adc byte ptr [rbx], bh ; ret
0x00000200001639b7 : adc byte ptr [rbx], bh ; ret 0x473
0x000002000064d95a : adc byte ptr [rbx], bh ; ret 0xf172
0x000002000054ba39 : adc byte ptr [rbx], ch ; ret 0x348
0x00000200001bdf2e : adc byte ptr [rbx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004b2699 : adc byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; ret 0x8948
0x00000200001f723b : adc byte ptr [rbx], dh ; fisttp dword ptr [rcx + rdi + 0x52] ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000059ddcb : adc byte ptr [rbx], dh ; ret
0x00000200003e45d3 : adc byte ptr [rbx], dh ; ret 0x8941
0x0000020000591ca8 : adc byte ptr [rbx], dh ; ret 0xff25
0x0000020000604c35 : adc byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200005fe646 : adc byte ptr [rbx], dh ; shr al, cl ; ret 0xc709
0x00000200004e828a : adc byte ptr [rbx], dh ; shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x200004e82a4 ; ret
0x00000200006eb884 : adc byte ptr [rbx], dl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x000002000046ec6a : adc byte ptr [rbx], dl ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200003c9b1d : adc byte ptr [rcx + 0x22], al ; ret
0x000002000056b192 : adc byte ptr [rcx + 0x2b86e801], dh ; ret
0x000002000002a925 : adc byte ptr [rcx + 0x2b], al ; ret 0x2b41
0x0000020000569a8e : adc byte ptr [rcx + 0x3b], al ; adc dword ptr [rdx - 0x1d], esi ; xor eax, eax ; ret
0x00000200000229c1 : adc byte ptr [rcx + 0x3b], al ; ret
0x00000200004f2351 : adc byte ptr [rcx + 0x3b], cl ; ret
0x00000200001b67c0 : adc byte ptr [rcx + 0x3b], cl ; ret 0x3d75
0x0000020000062fb2 : adc byte ptr [rcx + 0x3b], cl ; ret 0x774
0x0000020000660983 : adc byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200003cb306 : adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x0000020000091bde : adc byte ptr [rcx + 0x79682177], bh ; ret
0x00000200000229bc : adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x000002000046bafe : adc byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; call 0x1ffc3cb465a
0x0000020000152df0 : adc byte ptr [rcx + 0xf], al ; mov dh, 0xc2 ; add rsp, 8 ; ret
0x000002000015fe3b : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xff41
0x000002000006be44 : adc byte ptr [rcx + 3], al ; ret 0xb70f
0x00000200004fd240 : adc byte ptr [rcx + 3], cl ; ret
0x00000200004fd70d : adc byte ptr [rcx + 3], cl ; ret 0x3b48
0x0000020000417199 : adc byte ptr [rcx + rcx - 0xa], dh ; ret
0x000002000054fe0b : adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x00000200000d2e75 : adc byte ptr [rcx + rcx*4 + 0x63], cl ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200005ba787 : adc byte ptr [rcx - 0x22], bh ; mov eax, 1 ; ret
0x00000200005ba6ff : adc byte ptr [rcx - 0x23], bh ; ret
0x00000200005849de : adc byte ptr [rcx - 0x4f], al ; add dword ptr [rsi - 1], esp ; ret 0x4166
0x0000020000187622 : adc byte ptr [rcx - 0x73], al ; inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x0000020000071943 : adc byte ptr [rcx - 0x74b2c7ba], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6c80
0x000002000019bf34 : adc byte ptr [rcx - 0x74b7e7bf], cl ; ret 0xc148
0x00000200006c7386 : adc byte ptr [rcx - 0x75], al ; pop rcx ; or byte ptr [rbx], bh ; ret
0x000002000002722e : adc byte ptr [rcx - 0x75], al ; ret
0x00000200001809e6 : adc byte ptr [rcx - 0x75], al ; ret 0x3b48
0x00000200001bd98e : adc byte ptr [rcx - 0x75], al ; ret 0x8d4c
0x000002000019d035 : adc byte ptr [rcx - 0x75], al ; ret 0x90c3
0x00000200001f5378 : adc byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200003b449a : adc byte ptr [rcx - 0x75], cl ; imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000000756d : adc byte ptr [rcx - 0x75], cl ; jae 0x2000000759b ; mov rsp, r11 ; pop rdi ; ret
0x000002000001926f : adc byte ptr [rcx - 0x75], cl ; jae 0x20000019295 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000115ae8 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000115b0e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001171ea : adc byte ptr [rcx - 0x75], cl ; jae 0x20000117210 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000165f16 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000165f3c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000192907 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000019292d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001955e0 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000195606 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c31fb : adc byte ptr [rcx - 0x75], cl ; jae 0x200001c3231 ; mov rsp, r11 ; pop rdi ; ret
0x000002000036b66f : adc byte ptr [rcx - 0x75], cl ; jae 0x2000036b695 ; mov rsp, r11 ; pop rdi ; ret
0x000002000037be6e : adc byte ptr [rcx - 0x75], cl ; jae 0x2000037be94 ; mov rsp, r11 ; pop rdi ; ret
0x000002000037e0f6 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000037e124 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c5582 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003c55a8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fbdea : adc byte ptr [rcx - 0x75], cl ; jae 0x200003fbe18 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fcffa : adc byte ptr [rcx - 0x75], cl ; jae 0x200003fd020 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fef56 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003fef84 ; mov rsp, r11 ; pop rdi ; ret
0x000002000040d027 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000040d04d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000426132 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000426158 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004783d1 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004783ff ; mov rsp, r11 ; pop rdi ; ret
0x00000200004861bc : adc byte ptr [rcx - 0x75], cl ; jae 0x200004861e2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000487487 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004874ad ; mov rsp, r11 ; pop rdi ; ret
0x0000020000489bf7 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000489c1d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000496fc1 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000496fe7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ad843 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004ad869 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f2242 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004f2268 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005086d4 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005086fa ; mov rsp, r11 ; pop rdi ; ret
0x0000020000519c31 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000519c57 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051dbbc : adc byte ptr [rcx - 0x75], cl ; jae 0x2000051dbe2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000546151 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000546177 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000564caf : adc byte ptr [rcx - 0x75], cl ; jae 0x20000564cd5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000056c12b : adc byte ptr [rcx - 0x75], cl ; jae 0x2000056c151 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000585414 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000058543a ; mov rsp, r11 ; pop rdi ; ret
0x000002000059f1fe : adc byte ptr [rcx - 0x75], cl ; jae 0x2000059f224 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a7702 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005a7728 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c309b : adc byte ptr [rcx - 0x75], cl ; jae 0x200006c30c1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000101a23 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000101a51 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010a1ab : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000010a1d1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000118d5e : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000118d84 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000140426 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000014044c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000386954 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000038698a ; mov rsp, r11 ; pop rbp ; ret
0x000002000047e666 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000047e68c ; mov rsp, r11 ; pop rbp ; ret
0x00000200004dbe7c : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004dbea2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e3c04 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004e3c2a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e4e27 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004e4e4d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f53fb : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004f5431 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f8c8f : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004f8cb5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050aab7 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000050aadd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000517e40 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000517e76 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000519191 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005191b7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005194e4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000051951a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005219c1 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005219e7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000542d70 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000542d96 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055edca : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000055edf0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005935ea : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000593610 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059b32f : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000059b355 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c2aa2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005c2ac8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bab55 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006bab7b ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c5824 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006c584a ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ebc87 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006ebcad ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f3de8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006f3e0e ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ff180 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006ff1a6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000176e18 : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xeb75
0x00000200004360d4 : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rcx - 1], cl ; ret 0x8d4c
0x00000200001352c2 : adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006d6d35 : adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200006bfe1a : adc byte ptr [rcx - 0x75], cl ; ret 0x4cc3
0x00000200004cf6e5 : adc byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x00000200006bfe97 : adc byte ptr [rcx - 0x75], cl ; rol bl, 0xff ; ret 0x3b41
0x00000200000389b9 : adc byte ptr [rcx - 0x75], cl ; xor byte ptr [rax + 0x3b], r9b ; ret
0x000002000069bbe3 : adc byte ptr [rcx - 0x75], r9b ; ret
0x00000200000da089 : adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x00000200003a9430 : adc byte ptr [rcx - 0x77], al ; or dword ptr [rcx + 0x63], ecx ; ret 0x8545
0x00000200001b372f : adc byte ptr [rcx - 0x77], cl ; push rcx ; ret
0x000002000026339c : adc byte ptr [rcx - 0x7aabffc5], al ; cmp eax, dword ptr [rax] ; pop rsp ; jmp qword ptr [rdx]
0x0000020000183397 : adc byte ptr [rcx - 0x7c], al ; ret
0x00000200001e572d : adc byte ptr [rcx - 0x7c], al ; ret 0xcc75
0x00000200001b91a1 : adc byte ptr [rcx - 0x7cb7f3be], cl ; ret 0x4930
0x00000200006e31bd : adc byte ptr [rcx - 0x7d], al ; ret 0x49f8
0x00000200004a4387 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200005354ae : adc byte ptr [rcx - 0x7d], cl ; ret 0x318
0x0000020000607e4a : adc byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x0000020000703490 : adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x0000020000399afe : adc byte ptr [rcx - 0x7f], al ; ret 0x1000
0x0000020000061a56 : adc byte ptr [rcx - 0xa], al ; ret
0x00000200000bde7b : adc byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200004c5bef : adc byte ptr [rcx - 1], al ; or byte ptr [r8 - 0x7f], cl ; ret 0x1000
0x00000200004fd767 : adc byte ptr [rcx - 1], al ; ret
0x0000020000070a2c : adc byte ptr [rcx - 1], al ; ret 0x8349
0x00000200003b1bd6 : adc byte ptr [rcx - 1], al ; ret 0x8a41
0x000002000055bdf9 : adc byte ptr [rcx - 1], al ; ret 0xb70f
0x0000020000623323 : adc byte ptr [rcx], ah ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000002000035fc13 : adc byte ptr [rcx], al ; add bl, dh ; ret
0x000002000004f831 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005e2eb3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200006e6b54 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rdi
0x0000020000129fd2 : adc byte ptr [rcx], al ; mov qword ptr [r8 + 8], rax ; mov al, 1 ; ret
0x000002000064f163 : adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000407c4f : adc byte ptr [rcx], al ; ret
0x000002000025d48c : adc byte ptr [rdi + 0x48], ch ; add byte ptr [rax + 0x4004870], cl ; jmp qword ptr [rbx]
0x000002000036cfc3 : adc byte ptr [rdi + 3], dh ; mov al, 1 ; ret
0x000002000036cfc2 : adc byte ptr [rdi + 3], sil ; mov al, 1 ; ret
0x000002000006b299 : adc byte ptr [rdi + rcx + 0x20], al ; ret 0xf41
0x0000020000636cfd : adc byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000101438 : adc byte ptr [rdi + rdx*8 - 0xd], dh ; ret
0x000002000050a5f4 : adc byte ptr [rdi - 0x49f00024], al ; ret
0x0000020000092663 : adc byte ptr [rdi], 1 ; ret
0x000002000064980f : adc byte ptr [rdi], bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036d922 : adc byte ptr [rdi], cl ; and ah, al ; add rsp, 0x28 ; ret
0x0000020000613f61 : adc byte ptr [rdi], cl ; mov bh, 4 ; sub byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x0000020000004189 : adc byte ptr [rdi], cl ; mov dh, 0x83 ; ret 1
0x000002000013097c : adc byte ptr [rdi], cl ; ret 0x8b49
0x00000200005070fa : adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200000173b9 : adc byte ptr [rdi], cl ; test bl, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x528b
0x0000020000055948 : adc byte ptr [rdi], cl ; test byte ptr [rcx - 0x9fffffe], cl ; ret
0x00000200000dfdbb : adc byte ptr [rdi], cl ; test byte ptr [rdx], bl ; ret 0xf
0x0000020000063c7f : adc byte ptr [rdi], cl ; test dh, dh ; mov dword ptr [rdi], edx ; add bl, dh ; ret
0x00000200004288e0 : adc byte ptr [rdi], cl ; test dword ptr [rbp - 0xffe1bf], ebx ; ret 0x5489
0x0000020000434690 : adc byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000046811d : adc byte ptr [rdi], cl ; test dword ptr [rbx], esp ; call qword ptr [rdi]
0x000002000002c0fb : adc byte ptr [rdi], cl ; test dword ptr [rdi + rdx*2 + 1], eax ; add dh, dh ; ret
0x000002000003a2aa : adc byte ptr [rdi], cl ; test dword ptr [rdi], esp ; cwde ; sbb al, byte ptr [rax] ; ret
0x00000200004fbe36 : adc byte ptr [rdi], cl ; test dword ptr [rdx], eax ; jo 0x200004fbe58 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d1b37 : adc byte ptr [rdi], cl ; test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200004b078f : adc byte ptr [rdi], cl ; test esp, esp ; enter 0x13, -0x75 ; ret 0x8d48
0x0000020000599da9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000599925 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe180
0x00000200003cb829 : adc byte ptr [rdi], dl ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000397cea : adc byte ptr [rdi], dl ; add byte ptr [rcx - 1], al ; ret
0x00000200003d6bc5 : adc byte ptr [rdx + 0x11], dh ; ret
0x000002000006368a : adc byte ptr [rdx + rax - 0xd], dh ; ret
0x00000200005135ab : adc byte ptr [rdx + rdx - 1], dh ; ret
0x000002000057b976 : adc byte ptr [rdx - 0x10], dh ; xor al, al ; ret
0x0000020000518240 : adc byte ptr [rdx - 0x2d], dh ; mov byte ptr [rdx + 1], r10b ; xor eax, eax ; ret
0x0000020000583e0f : adc byte ptr [rdx - 0x3b7cb701], dh ; push rax ; pop rbx ; ret
0x00000200001639b2 : adc byte ptr [rdx - 0x75], al ; push rsp ; xchg eax, ecx ; adc byte ptr [rbx], bh ; ret 0x473
0x00000200004d6269 : adc byte ptr [rdx], al ; add al, al ; ret
0x00000200000a8284 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200006a115d : adc byte ptr [rdx], al ; add byte ptr [rax], al ; jmp rax
0x00000200005c4af9 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000037083 : adc byte ptr [rdx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000933c3 : adc byte ptr [rdx], bl ; and byte ptr [rbx], bl ; and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200001364d9 : adc byte ptr [rip + 0x7fff], ah ; ret
0x00000200000ba3f3 : adc byte ptr [rip - 0x7eb80000], al ; ret
0x00000200004b6ec0 : adc byte ptr [rsi + 0x13], dh ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000ab90f : adc byte ptr [rsi + 0x3b], ah ; ret 0x1b73
0x000002000017674b : adc byte ptr [rsi + 0x41], ah ; mov dword ptr [rbx], ecx ; ret
0x00000200005cf35f : adc byte ptr [rsi + 0x5c], 0 ; add rcx, r8 ; jmp rcx
0x0000020000569a05 : adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x00000200004f1f09 : adc byte ptr [rsi + rax + 0x48], dh ; add esp, 0x40 ; pop rbx ; ret
0x000002000002c83c : adc byte ptr [rsi - 0x76b3ff68], 2 ; ret
0x000002000058f47b : adc byte ptr [rsi - 0x7d], ah ; ret
0x00000200000a4e5c : adc byte ptr [rsi - 9], ah ; sar edi, -1 ; jne 0x200000a4e6f ; ret 0
0x000002000062eb19 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200003cda2b : adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000174ba1 : adc byte ptr [rsp + rax + 0x41], dh ; mov eax, ecx ; ret
0x0000020000091f41 : adc byte ptr [rsp + rdi*4 + 0x2bee8961], dh ; ret 0x8199
0x0000020000583e0e : adc byte ptr ds:[rdx - 0x3b7cb701], dh ; push rax ; pop rbx ; ret
0x000002000021fa3d : adc byte ptr fs:[rax], al ; sysenter
0x000002000011c192 : adc ch, byte ptr [rcx] ; or eax, 0x25834800 ; ret 0x16d8
0x0000020000443803 : adc ch, dh ; out dx, al ; call 0x20000072e46
0x00000200005a03d0 : adc cl, byte ptr [rax + 0x3b] ; ret 0xd74
0x000002000039e396 : adc cl, byte ptr [rax + 0x63] ; ret 0x8b48
0x00000200001ed001 : adc cl, byte ptr [rax + 3] ; ret
0x000002000019868f : adc cl, byte ptr [rax + 3] ; ret 0x3b48
0x00000200001dcf12 : adc cl, byte ptr [rax - 0x3f] ; call 0x1ffc341182d
0x00000200001dd1fb : adc cl, byte ptr [rax - 0x3f] ; call 0x1ffc3411b16
0x0000020000408d7f : adc cl, byte ptr [rax - 0x73] ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004fc73b : adc cl, byte ptr [rax - 0x73] ; sub r15b, r15b ; ret
0x000002000035ea03 : adc cl, byte ptr [rax - 0x75] ; adc byte ptr [rax + 0x3b], cl ; ret 0xe875
0x0000020000387e5c : adc cl, byte ptr [rax - 0x75] ; je 0x20000387e8c ; jo 0x20000387df5 ; ret
0x000002000011a1dd : adc cl, byte ptr [rax - 0x75] ; push rcx ; or bl, ch ; clc ; xor eax, eax ; ret
0x000002000013e9bc : adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000019fbcf : adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000000583d : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200004234c6 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000002000050c9a8 : adc cl, byte ptr [rax - 1] ; ret 0x2b49
0x000002000048d76b : adc cl, byte ptr [rax - 1] ; ret 0x4466
0x0000020000073810 : adc cl, byte ptr [rax - 1] ; ret 0xe484
0x000002000050c9db : adc cl, byte ptr [rax - 1] ; ret 0xe6eb
0x000002000008c598 : adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x000002000008c624 : adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x000002000008c584 : adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x000002000013b0c4 : adc cl, byte ptr [rbp + 0x3b] ; ret 0x1277
0x0000020000641b55 : adc cl, byte ptr [rbx + 0x4c8b49c2] ; ret
0x0000020000023ed7 : adc cl, byte ptr [rbx + rdi - 0x40] ; jne 0x20000023ebe ; mov eax, r9d ; ret
0x0000020000708193 : adc cl, byte ptr [rbx - 0x487aa9fb] ; dec dword ptr [rax + 3] ; ret
0x00000200006ba29f : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x0000020000020edb : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xd], 1 ; xor eax, eax ; ret
0x000002000037e9a0 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x0000020000138372 : adc cl, byte ptr [rcx + 0xf] ; mov esp, 0x440f41c0 ; ret
0x000002000013a5fa : adc cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200001b8cdc : adc cl, byte ptr [rcx - 0x73] ; add byte ptr [rax], 0x46 ; ret
0x000002000040bb43 : adc cl, byte ptr [rcx - 0x73] ; sbb byte ptr [r8 - 0x75], r9b ; ret
0x00000200001ef179 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4510
0x0000020000590f30 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200000aa88f : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4808
0x00000200005911ae : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x00000200003c7f16 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4907
0x000002000015404a : adc cl, byte ptr [rcx - 0x7d] ; ret 0x8502
0x0000020000590f6b : adc cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x0000020000589ef9 : adc cl, byte ptr [rcx - 1] ; ret 0x344
0x0000020000153f8c : adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200001e6d15 : adc cl, byte ptr [rdi] ; cmc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000dcfe0 : adc cl, byte ptr [rdi] ; test dword ptr [rsi], esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000393876 : adc cl, byte ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200004b907a : adc cl, byte ptr [rip - 0x3f7b0023] ; jne 0x200004b908b ; ret
0x00000200001e9559 : adc cl, byte ptr [rsi] ; add al, ch ; ret
0x00000200001d7a56 : adc cl, ch ; ret
0x00000200005dfe1b : adc cl, ch ; ret 0xe54c
0x00000200003dd902 : adc cl, dh ; ret
0x000002000047e821 : adc cl, dl ; call 0x1ffc349c8b1
0x0000020000148ce0 : adc dh, bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000efb69 : adc dh, bh ; mov dl, 1 ; mov rcx, rbp ; call 0x200000dbe29
0x000002000014dbd3 : adc dh, bh ; movzx eax, dl ; mov cr8, rax ; ret
0x00000200003d2b5e : adc dh, bh ; ret 0xfff
0x00000200004b1fa8 : adc dh, bl ; inc dword ptr [rcx] ; ret
0x0000020000132a94 : adc dh, bl ; ret
0x00000200003fc324 : adc dh, bl ; ret 0xe9ff
0x000002000001de20 : adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x00000200004c922e : adc dh, byte ptr [rbx + rbp*2 - 0x75] ; ret
0x00000200001dcdd8 : adc dh, byte ptr [rdi] ; jmp 0x1ffc3149ae4
0x0000020000583bd0 : adc dh, byte ptr [rdx - 0x3b7cb701] ; pop rbx ; ret
0x0000020000073a75 : adc dh, byte ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200004c922d : adc dh, byte ptr ds:[rbx + rbp*2 - 0x75] ; ret
0x0000020000013158 : adc dh, dh ; ret
0x000002000011108f : adc dh, dh ; ret 0x7401
0x00000200001627e6 : adc dh, dh ; ret 0x7402
0x0000020000463cae : adc dh, dh ; ret 0x743f
0x00000200000b8014 : adc dh, dh ; ret 0x7501
0x0000020000063cec : adc dh, dh ; ret 0x7502
0x000002000062717a : adc dh, dh ; ret 0x7503
0x00000200003fb3ac : adc dh, dh ; ret 0x7504
0x0000020000080935 : adc dh, dh ; ret 0x7a21
0x0000020000043527 : adc dh, dh ; ret 0xf01
0x00000200001f642c : adc dh, dh ; ret 0xf03
0x0000020000395378 : adc dh, dh ; ret 0xf04
0x00000200000b2fa3 : adc dh, dh ; ret 0xf08
0x0000020000576d06 : adc dh, dh ; ret 0xf3f
0x000002000014143c : adc dil, dil ; ret
0x00000200001091e9 : adc dil, dil ; ret 0x8348
0x000002000041837d : adc dil, r15b ; add al, 0xeb ; ret 0xfb81
0x000002000015fb18 : adc dil, r15b ; ret
0x000002000065a7bc : adc dl, al ; ret
0x00000200006ca038 : adc dl, bh ; inc dword ptr [rcx - 9] ; ret
0x00000200004f59dc : adc dl, byte ptr [rcx] ; add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x00000200004a02c8 : adc dword ptr [r8 - 0x75], ecx ; ret
0x000002000016c6f1 : adc dword ptr [rax + 0x11], 0 ; call rax
0x0000020000413dbe : adc dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x000002000046a375 : adc dword ptr [rax + 0x3b], ecx ; ror dword ptr [rdi], -0x7e ; ret
0x00000200001a5041 : adc dword ptr [rax + 0x48000000], 3 ; ret 0x3b48
0x00000200000a3883 : adc dword ptr [rax + 0xf], ecx ; ret
0x0000020000573d17 : adc dword ptr [rax + 3], ecx ; ret
0x0000020000073a62 : adc dword ptr [rax + rax*8 - 0xb7eb8c], eax ; ret 0xff49
0x000002000007377f : adc dword ptr [rax + rax*8 - 0xb7f58c], eax ; ret 0xc2f6
0x00000200001bd63b : adc dword ptr [rax + rcx*2], ebx ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001bd63a : adc dword ptr [rax + rcx*2], r11d ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000038dfbb : adc dword ptr [rax - 0x3fcd3cff], esi ; ret
0x000002000002d7db : adc dword ptr [rax - 0x73], ecx ; dec dword ptr [r8 + 3] ; ret 0x3b48
0x00000200000abdea : adc dword ptr [rax - 0x73], ecx ; or eax, 0x113a ; call rax
0x00000200005ba1d2 : adc dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x00000200004a02c9 : adc dword ptr [rax - 0x75], ecx ; ret
0x000002000019ed2e : adc dword ptr [rax - 0x75], ecx ; ret 0x8341
0x00000200006e79c0 : adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000013c3d6 : adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x00000200004186c9 : adc dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000365763 : adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x00000200006429bd : adc dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x00000200004073fe : adc dword ptr [rax - 0x77], ecx ; or byte ptr [rax - 0x75], cl ; ret
0x00000200000a8da4 : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x0000020000154838 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4402
0x0000020000073795 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000020000504db4 : adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x000002000003ff7e : adc dword ptr [rax - 1], ecx ; ret 0x8841
0x00000200001b38a1 : adc dword ptr [rax - 1], ecx ; ret 0x8948
0x0000020000073b3f : adc dword ptr [rax - 1], ecx ; ret 0xff49
0x00000200000a39b2 : adc dword ptr [rax - 1], ecx ; ror dword ptr [rcx - 1], -0x38 ; jne 0x200000a39ba ; ret 0
0x0000020000073ce8 : adc dword ptr [rax - 1], ecx ; shr ebx, -0xd ; mov rax, r11 ; ret
0x0000020000171a14 : adc dword ptr [rax], 0x8b00002a ; ret
0x00000200006e7cca : adc dword ptr [rax], eax ; add al, al ; ret
0x00000200006e659d : adc dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000027038b : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000039ce8b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000027156f : adc dword ptr [rax], eax ; add byte ptr [rbx + 0xc], cl ; or byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200004012e2 : adc dword ptr [rax], eax ; add rax, r10 ; jmp rax
0x000002000014f2ec : adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d0743 : adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000159802 : adc dword ptr [rax], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000002000008b9a0 : adc dword ptr [rax], eax ; call qword ptr [rcx]
0x000002000016c241 : adc dword ptr [rax], eax ; call r11
0x000002000016c238 : adc dword ptr [rax], eax ; call rax
0x00000200001ca7b2 : adc dword ptr [rax], eax ; jmp 0x200000f6a64
0x000002000051e479 : adc dword ptr [rax], eax ; lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x00000200004f59dd : adc dword ptr [rax], eax ; mov al, 1 ; ret
0x000002000038675e : adc dword ptr [rax], eax ; mov qword ptr [rdi], rsi ; jmp 0x2000038672d
0x000002000016c7fe : adc dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x114f71] ; call rax
0x000002000037fb87 : adc dword ptr [rax], eax ; mov rcx, qword ptr [rbx + 0x28] ; call rax
0x000002000050b81a : adc dword ptr [rax], eax ; mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x000002000015455f : adc dword ptr [rax], eax ; movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x0000020000154583 : adc dword ptr [rax], eax ; movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x0000020000009e2e : adc dword ptr [rax], eax ; ret
0x000002000021f00e : adc dword ptr [rax], eax ; sysenter
0x00000200004c3135 : adc dword ptr [rax], eax ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e475b : adc dword ptr [rax], eax ; xor edi, edi ; jmp 0x200000e4729
0x000002000004f2f6 : adc dword ptr [rax], edi ; sete al ; ret
0x00000200000ee1d2 : adc dword ptr [rbp + 0x33], eax ; rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x0000020000122ac4 : adc dword ptr [rbp + 0x3b], eax ; ret 0x2f89
0x00000200005aae90 : adc dword ptr [rbp + 0x3b], eax ; ret 0x673
0x000002000009fb57 : adc dword ptr [rbp + 0x4fc000cb], ecx ; ret
0x00000200006c14b6 : adc dword ptr [rbp + 0x58b00ff], edi ; insb byte ptr [rdi], dx ; ret 0xc7ff
0x00000200000bde2a : adc dword ptr [rbp + 0xd], esi ; mov al, 1 ; ret
0x000002000001edde : adc dword ptr [rbp + 1], esi ; ret
0x00000200006e426e : adc dword ptr [rbp + 3], eax ; ret 0x8349
0x0000020000531dbd : adc dword ptr [rbp + 3], ecx ; ret 0x4166
0x0000020000152a4e : adc dword ptr [rbp + 3], esi ; mov al, 1 ; ret
0x00000200000d9fb2 : adc dword ptr [rbp + 6], esi ; mov al, 1 ; ret
0x000002000046aa5d : adc dword ptr [rbp + 7], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000187b15 : adc dword ptr [rbp + rax + 0x49], esi ; test eax, eax ; je 0x20000187b10 ; ret
0x00000200004a0ba6 : adc dword ptr [rbp + rax - 0x18], esi ; xchg eax, ebx ; ret
0x000002000057dc04 : adc dword ptr [rbp + rax - 0x18], esi ; xchg eax, esp ; ret
0x000002000057b876 : adc dword ptr [rbp + rcx*4 + 5], ecx ; ret 0xed2e
0x00000200004a3eb1 : adc dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000062ad4a : adc dword ptr [rbp - 0x2a], edx ; push rsi ; ret
0x00000200000c69ae : adc dword ptr [rbp - 0x75], ecx ; ret
0x00000200000c1f32 : adc dword ptr [rbp - 0x75], ecx ; ret 0x854d
0x00000200003cd9d0 : adc dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200000f9719 : adc dword ptr [rbp - 0x7b], eax ; sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret 0x2b48
0x00000200000202d1 : adc dword ptr [rbp - 0xb], esi ; ret
0x000002000049a62b : adc dword ptr [rbx + 0x48282444], ecx ; add esp, 0x48 ; ret
0x00000200005a459b : adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200005a459d
0x00000200001c08e4 : adc dword ptr [rbx + rax], 0 ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x000002000035e9c4 : adc dword ptr [rbx + rcx*4 + 0x42], ecx ; or byte ptr [rax - 0x75], cl ; ret 0x854d
0x0000020000064b29 : adc dword ptr [rbx + rcx*4 - 0x40], ecx ; jne 0x20000064b36 ; ret
0x00000200000d9fe7 : adc dword ptr [rbx + rcx*4 - 0x40], ecx ; jne 0x200000da015 ; ret
0x000002000022e7fd : adc dword ptr [rbx], ecx ; add byte ptr [rip + 0x1136e206], cl ; ret 0xf00d
0x00000200004f22af : adc dword ptr [rbx], edi ; ret 0x377
0x00000200001c66e3 : adc dword ptr [rbx], esi ; enter -0x2efd, -0x75 ; ret 0xf8c1
0x000002000019a446 : adc dword ptr [rcx + 0x2b], eax ; ret 0x2341
0x0000020000081849 : adc dword ptr [rcx + 0x36], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x0000020000133a25 : adc dword ptr [rcx + 0x3b], eax ; ret
0x00000200006ec7b6 : adc dword ptr [rcx + 0x3b], eax ; ret 0x840f
0x00000200000d96aa : adc dword ptr [rcx + 0x48000000], -1 ; ret
0x00000200001bc253 : adc dword ptr [rcx + 0x5f9], eax ; ror byte ptr [rdi], 0x85 ; ret
0x000002000019f9a3 : adc dword ptr [rcx + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000465e12 : adc dword ptr [rcx - 0x46], eax ; pop rdi ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000200001b94bd : adc dword ptr [rcx - 0x49], eax ; add dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x0000020000549b7f : adc dword ptr [rcx - 0x75], eax ; ret 0x8348
0x000002000037237d : adc dword ptr [rcx - 0x75], ecx ; iretd ; call rax
0x000002000003b7f0 : adc dword ptr [rcx - 0x75], ecx ; ret
0x00000200000ae903 : adc dword ptr [rcx - 0x75], ecx ; ret 0x2b48
0x000002000046b1e2 : adc dword ptr [rcx - 0x77], ecx ; add dword ptr [rdx + 0x22410241], ecx ; ret 0x3a41
0x00000200000180d9 : adc dword ptr [rcx - 0x7d], eax ; ret 0x4110
0x000002000069b22f : adc dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x000002000019a3de : adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000020000378cdc : adc dword ptr [rcx - 0xa], eax ; ret 0x7501
0x00000200001ba76d : adc dword ptr [rcx - 1], eax ; ret
0x00000200000231e1 : adc dword ptr [rcx - 1], eax ; ret 0x8349
0x00000200000dc41a : adc dword ptr [rcx], -0x20 ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000035fafb : adc dword ptr [rcx], eax ; add bl, dh ; ret
0x00000200000917b6 : adc dword ptr [rdi + 0x16], esi ; ret
0x00000200000ab435 : adc dword ptr [rdi + 0xffffffe], -0x49 ; ret 0x4166
0x000002000000a2e2 : adc dword ptr [rdi + rcx + 0x44], ecx ; ror dword ptr [rcx - 0x75], -0x40 ; ret
0x000002000020e55d : adc dword ptr [rdi], eax ; add byte ptr [rcx], dl ; ret 0xf00d
0x000002000062ef27 : adc dword ptr [rdi], ecx ; ret 0x4389
0x0000020000073ba6 : adc dword ptr [rdi], ecx ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000073c05 : adc dword ptr [rdi], ecx ; test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x000002000015850e : adc dword ptr [rdi], ecx ; test dword ptr [rax + rax - 0x75bf0000], ecx ; ret 0x41c3
0x0000020000009e29 : adc dword ptr [rdi], ecx ; test dword ptr [rax], edx ; insd dword ptr [rdi], dx ; adc dword ptr [rax], eax ; ret
0x00000200000d52d3 : adc dword ptr [rdi], ecx ; test dword ptr [rcx - 0x9fffff9], edi ; ret
0x000002000005158a : adc dword ptr [rdx + 1], 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000063f03e : adc dword ptr [rdx + 3], esi ; mov al, 1 ; ret
0x0000020000111ac5 : adc dword ptr [rdx + 3], esi ; xor eax, eax ; ret
0x000002000063f06e : adc dword ptr [rdx + 6], esi ; shr eax, 0xf ; and al, 1 ; ret
0x0000020000569a91 : adc dword ptr [rdx - 0x1d], esi ; xor eax, eax ; ret
0x0000020000632d3e : adc dword ptr [rdx - 0x2dcc0016], esi ; call 0x2000026f018
0x0000020000147c78 : adc dword ptr [rdx], 0 ; nop ; mov byte ptr [rcx + 1], dl ; ret
0x000002000008db7d : adc dword ptr [rdx], ebp ; lahf ; ret
0x00000200004c3ebd : adc dword ptr [rsi - 0x7d], esp ; ret
0x0000020000106c71 : adc dword ptr [rsi], 0 ; add rsp, 0x28 ; ret
0x00000200002367e6 : adc dword ptr [rsi], 0x21 ; ret 0xf01a
0x000002000022c63e : adc dword ptr [rsi], eax ; sysenter
0x00000200006c14b5 : adc dword ptr es:[rbp + 0x58b00ff], edi ; insb byte ptr [rdi], dx ; ret 0xc7ff
0x000002000021f00d : adc dword ptr fs:[rax], eax ; sysenter
0x0000020000081848 : adc dword ptr gs:[rcx + 0x36], ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x000002000014f140 : adc eax, 0x140f6b ; call 0x200000771c9
0x00000200001bd994 : adc eax, 0x19a2e7 ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x200001bd9aa
0x00000200001009ec : adc eax, 0x1e7373 ; ret
0x00000200001009e5 : adc eax, 0x1e737c ; ret
0x00000200001009d9 : adc eax, 0x1e7384 ; ret
0x00000200001009cd : adc eax, 0x1e7393 ; ret
0x00000200001009c6 : adc eax, 0x1e7398 ; ret
0x0000020000162162 : adc eax, 0x1f5071 ; add rsp, 0x28 ; ret
0x000002000047fcc1 : adc eax, 0x200f4400 ; ret
0x00000200001521f2 : adc eax, 0x204fe1 ; ret
0x000002000005af9f : adc eax, 0x244104 ; ret
0x00000200000a6eaf : adc eax, 0x2a651c ; jmp 0x200000a6e7e
0x00000200006ec90c : adc eax, 0x2b44df03 ; ret
0x000002000003f97e : adc eax, 0x317d25 ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000003f994
0x00000200006d59e8 : adc eax, 0x33480000 ; ret 0xd233
0x000002000058047f : adc eax, 0x33ffd17e ; leave ; call 0x2000038c6a4
0x0000020000132e0a : adc eax, 0x36050348 ; ret
0x00000200001d5643 : adc eax, 0x3b48ffe4 ; ret
0x00000200001af4d8 : adc eax, 0x3ba ; add bl, dl ; loop 0x200001af475 ; ret 0xd0f7
0x00000200000f6595 : adc eax, 0x4189001f ; add al, 0x3b ; ret 0x870f
0x000002000064937d : adc eax, 0x464c6 ; add rsp, 0x28 ; ret
0x000002000064936d : adc eax, 0x464ce ; add rsp, 0x38 ; ret
0x00000200006492f9 : adc eax, 0x465a2 ; add rsp, 0x28 ; ret
0x0000020000649209 : adc eax, 0x4678a ; add rsp, 0x38 ; ret
0x00000200006491cd : adc eax, 0x467e6 ; add rsp, 0x48 ; ret
0x0000020000649187 : adc eax, 0x4683c ; add rsp, 0x38 ; ret
0x0000020000649161 : adc eax, 0x46872 ; add rsp, 0x38 ; ret
0x000002000064913d : adc eax, 0x4688e ; add rsp, 0x38 ; ret
0x000002000064910f : adc eax, 0x468cc ; add rsp, 0x38 ; ret
0x00000200006490f3 : adc eax, 0x46900 ; add rsp, 0x48 ; ret
0x0000020000649071 : adc eax, 0x469d2 ; add rsp, 0x68 ; ret
0x000002000064900e : adc eax, 0x46a2d ; add rsp, 0x58 ; ret
0x0000020000648fb5 : adc eax, 0x46a9e ; add rsp, 0x58 ; ret
0x0000020000648f5e : adc eax, 0x46aed ; add rsp, 0x58 ; ret
0x0000020000648f10 : adc eax, 0x46b53 ; add rsp, 0x68 ; ret
0x0000020000648e39 : adc eax, 0x46c92 ; add rsp, 0x38 ; ret
0x0000020000648e19 : adc eax, 0x46cc2 ; add rsp, 0x78 ; ret
0x0000020000648d13 : adc eax, 0x46e60 ; add rsp, 0x38 ; ret
0x0000020000648cf9 : adc eax, 0x46e72 ; add rsp, 0x48 ; ret
0x0000020000648c4e : adc eax, 0x46fad ; add rsp, 0x48 ; ret
0x0000020000648bf5 : adc eax, 0x47036 ; add rsp, 0x48 ; ret
0x0000020000648b9a : adc eax, 0x470c9 ; add rsp, 0x48 ; ret
0x0000020000648b1b : adc eax, 0x471a0 ; add rsp, 0x38 ; ret
0x00000200006488b9 : adc eax, 0x4754a ; add rsp, 0x28 ; ret
0x00000200006488a9 : adc eax, 0x47552 ; add rsp, 0x28 ; ret
0x0000020000648809 : adc eax, 0x4769a ; add rsp, 0x58 ; ret
0x00000200006487b1 : adc eax, 0x476ea ; add rsp, 0x38 ; ret
0x0000020000648780 : adc eax, 0x47753 ; add rsp, 0x48 ; ret
0x0000020000648751 : adc eax, 0x4777a ; add rsp, 0x38 ; ret
0x00000200006486fa : adc eax, 0x47829 ; add rsp, 0x48 ; ret
0x0000020000648689 : adc eax, 0x478d2 ; add rsp, 0x38 ; ret
0x000002000064864e : adc eax, 0x4793d ; add rsp, 0x48 ; ret
0x00000200006485fd : adc eax, 0x479a6 ; add rsp, 0x38 ; ret
0x000002000064858e : adc eax, 0x47a75 ; add rsp, 0x58 ; ret
0x0000020000648534 : adc eax, 0x47ae7 ; add rsp, 0x48 ; ret
0x0000020000648504 : adc eax, 0x47b0f ; add rsp, 0x58 ; ret
0x00000200006484a1 : adc eax, 0x47b92 ; add rsp, 0x28 ; ret
0x0000020000648461 : adc eax, 0x47c12 ; add rsp, 0x48 ; ret
0x0000020000648424 : adc eax, 0x47c57 ; add rsp, 0x48 ; ret
0x00000200006483eb : adc eax, 0x47c98 ; add rsp, 0x38 ; ret
0x00000200006483c8 : adc eax, 0x47cd3 ; add rsp, 0x48 ; ret
0x0000020000648399 : adc eax, 0x47d12 ; add rsp, 0x58 ; ret
0x0000020000648327 : adc eax, 0x47da4 ; add rsp, 0x38 ; ret
0x000002000064830b : adc eax, 0x47dd0 ; add rsp, 0x38 ; ret
0x00000200006482e7 : adc eax, 0x47dfc ; add rsp, 0x38 ; ret
0x00000200006482cc : adc eax, 0x47e1f ; add rsp, 0x58 ; ret
0x0000020000648229 : adc eax, 0x47f1a ; add rsp, 0x38 ; ret
0x00000200004b224f : adc eax, 0x48000000 ; add esp, 0x40 ; pop rbx ; ret
0x0000020000513bef : adc eax, 0x48000001 ; add esp, 0x58 ; ret
0x00000200003ca1e7 : adc eax, 0x48000384 ; add esp, 0x30 ; pop rbx ; ret
0x00000200005341d7 : adc eax, 0x4800080d ; add esp, 0x38 ; ret
0x000002000014450e : adc eax, 0x48000a3c ; add esp, 0x40 ; pop rbx ; ret
0x00000200000228cf : adc eax, 0x4800334c ; sub eax, ecx ; ret
0x00000200004284cf : adc eax, 0x4800428a ; add eax, ecx ; jmp rax
0x00000200004cd65d : adc eax, 0x48c03300 ; add esp, 0x28 ; ret
0x00000200001443c7 : adc eax, 0x48d4900 ; sub ecx, dword ptr [rcx + 0x3b] ; ret
0x00000200003a50ff : adc eax, 0x48ffc7b1 ; add esp, 0x38 ; ret
0x00000200003939af : adc eax, 0x48ffc8b4 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004eec97 : adc eax, 0x48ffedec ; add esp, 0x30 ; pop rbx ; ret
0x00000200004f8517 : adc eax, 0x48ffedee ; add esp, 0x20 ; pop rbx ; ret
0x00000200001750f7 : adc eax, 0x48ffef2a ; add esp, 0x28 ; ret
0x000002000065b0af : adc eax, 0x48ffffd7 ; add esp, 0x30 ; pop rbx ; ret
0x00000200000619c1 : adc eax, 0x4d000000 ; lea ecx, dword ptr [rcx + rdx*4] ; jmp r9
0x0000020000642645 : adc eax, 0x4db26 ; add rsp, 0x48 ; ret
0x000002000063fd2f : adc eax, 0x4f304 ; add rsp, 0x38 ; ret
0x00000200004ddec1 : adc eax, 0x4f8b4800 ; or byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000063f575 : adc eax, 0x4fabe ; add rsp, 0x38 ; ret
0x0000020000115c1c : adc eax, 0x538b4900 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200001157a9 : adc eax, 0x54 ; xor eax, eax ; ret
0x000002000063aea7 : adc eax, 0x542cc ; add rsp, 0x58 ; ret
0x00000200006659e5 : adc eax, 0x5b1d3948 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x000002000048568a : adc eax, 0x63483b77 ; ret 0x8d48
0x000002000007c9d4 : adc eax, 0x71 ; jmp rdx
0x000002000014ebaf : adc eax, 0x74d28548 ; adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200001f6e27 : adc eax, 0x77001602 ; and dh, dh ; ret 0xf03
0x000002000069f0e0 : adc eax, 0x8318894c ; ret 0x48f8
0x0000020000603952 : adc eax, 0x8348c3ff ; ret 0x3b08
0x00000200004a4381 : adc eax, 0x8349c7ff ; ret 0x4910
0x0000020000404d06 : adc eax, 0x875d285 ; xor eax, eax ; ret
0x0000020000064a03 : adc eax, 0x89490017 ; add edi, edi ; ret
0x0000020000146b20 : adc eax, 0x8b378966 ; ret
0x00000200000a7d1d : adc eax, 0x8b3fe183 ; ret 0xd349
0x00000200003a7451 : adc eax, 0x8b48000b ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200001360ff : adc eax, 0x8b48fe00 ; ret
0x00000200001deaf5 : adc eax, 0x8b4cfff5 ; ret
0x00000200005536f7 : adc eax, 0x8bffd1b9 ; ret
0x0000020000510677 : adc eax, 0x8bffe9d1 ; ret
0x00000200006019c7 : adc eax, 0x90ffac17 ; jmp 0x2000046dcb9
0x0000020000176ad9 : adc eax, 0xb60f0000 ; ret
0x000002000041fd1f : adc eax, 0xb60f001e ; ret
0x00000200001756ff : adc eax, 0xb8001d7d ; ret
0x00000200004978e7 : adc eax, 0xc28a0029 ; ret
0x000002000048389b : adc eax, 0xcd8b4900 ; call 0x200000a9258
0x000002000008e479 : adc eax, 0xd9818709 ; ret
0x00000200001ef985 : adc eax, 0xe8000006 ; ret 0xfa28
0x00000200000071cb : adc eax, 0xeb000c21 ; sal esi, cl ; ret 0x750e
0x00000200004d4e80 : adc eax, 0xeb0012c6 ; or esi, esi ; ret
0x0000020000499b3d : adc eax, 0xf01a800 ; test ebp, esp ; ret
0x00000200004024cc : adc eax, 0xf6ffffff ; ret
0x000002000014e9dc : adc eax, 0xff48c1ff ; ret 0xf983
0x0000020000629926 : adc eax, 0xffc6212d ; call r10
0x0000020000583b24 : adc eax, 0xffcf34ab ; ret
0x0000020000583b1d : adc eax, 0xffcf34b6 ; ret
0x0000020000635936 : adc eax, 0xffd17bed ; add rsp, 0x38 ; ret
0x000002000058047e : adc eax, 0xffd17e15 ; xor ecx, ecx ; call 0x2000038c6a5
0x0000020000569a46 : adc eax, 0xffd8c5cd ; xor eax, eax ; ret
0x00000200004f5d2c : adc eax, 0xffd941d7 ; call 0x2000011f9a8
0x000002000036bffc : adc eax, 0xfff07dcf ; add rsp, 0x28 ; ret
0x00000200003b32e4 : adc eax, 0xfff21a57 ; mov rax, rdx ; ret
0x00000200003a00b8 : adc eax, 0xfff34703 ; mov rax, rdx ; ret
0x00000200004f157c : adc eax, 0xfff5a67f ; jmp 0x200004f154c
0x0000020000117382 : adc eax, 0xfff5e9d9 ; cmovne rax, rdx ; jmp 0x2000011736c
0x00000200004b7b5e : adc eax, 0xfff84e3d ; add rsp, 0x28 ; ret
0x00000200006d8ed7 : adc eax, 3 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8eea
0x00000200006dce52 : adc eax, 3 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dce65
0x00000200006de472 : adc eax, 3 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de485
0x0000020000149faf : adc eax, dword ptr [rax] ; add al, 0 ; add byte ptr [rax], al ; call rdi
0x0000020000594353 : adc eax, dword ptr [rax] ; add bl, ch ; xor esi, esi ; ret
0x00000200006d535b : adc eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000059436c : adc eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000135c13 : adc eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x000002000014f33f : adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000140308 : adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000ae48d : adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000223c1a : adc eax, dword ptr [rax] ; cld ; ret
0x0000020000143beb : adc eax, dword ptr [rax] ; je 0x20000143c08 ; call rcx
0x00000200004fc61b : adc eax, dword ptr [rax] ; jmp 0x200004fc5e5
0x0000020000223c16 : adc eax, dword ptr [rax] ; mov eax, 0xfc0013b1 ; ret
0x000002000013c8f3 : adc eax, dword ptr [rax] ; movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x0000020000240386 : adc eax, dword ptr [rax] ; or al, byte ptr [rsi] ; ret 0x2e06
0x00000200000aec6f : adc eax, dword ptr [rax] ; ret
0x0000020000139a7a : adc eax, dword ptr [rax] ; setb al ; ret
0x0000020000231c8a : adc eax, dword ptr [rax] ; sysenter
0x0000020000544bd9 : adc eax, dword ptr [rax] ; test rax, rax ; je 0x20000544beb ; jmp qword ptr [rax]
0x000002000014b734 : adc eax, dword ptr [rax] ; test rdx, rdx ; je 0x2000014b744 ; call rdx
0x0000020000164cd9 : adc eax, dword ptr [rbp + 0x18] ; add byte ptr [rcx + 0x23], cl ; ret 0x8b49
0x00000200005c0547 : adc eax, dword ptr [rbp - 0x75] ; ret
0x000002000037efcb : adc eax, dword ptr [rbp - 0x7b] ; sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x00000200003d1762 : adc eax, dword ptr [rbx] ; ret 0xc23b
0x000002000000e7ee : adc eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000137f69 : adc eax, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200000f76fa : adc eax, dword ptr [rcx + 0x3b] ; ret 0x8772
0x00000200004b6e5e : adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200006cfefc : adc eax, dword ptr [rcx - 0xa] ; ret 0xf01
0x0000020000502178 : adc eax, dword ptr [rcx - 1] ; ret
0x00000200000935fe : adc eax, dword ptr [rip + 0x3b92050b] ; ret
0x00000200002217d6 : adc eax, dword ptr [rsi] ; sysenter
0x0000020000231c89 : adc eax, dword ptr fs:[rax] ; sysenter
0x000002000041f7d0 : adc eax, ebp ; ret 0xc398
0x00000200004cee13 : adc eax, ebx ; mov eax, 0xc000000d ; ret
0x00000200001c50ed : adc eax, esi ; or dword ptr [rsp], 0 ; ret
0x00000200000dc41b : adc eax, esp ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200003c5fe0 : adc ebp, ebp ; dec dword ptr [rax - 0x7d] ; ret 0x4902
0x00000200001f7e98 : adc ebp, ebx ; dec dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; test byte ptr [rdx], ch ; ret 0xffe3
0x0000020000076a6c : adc ebx, dword ptr [rbx + 0x5f] ; pop rsi ; ret
0x00000200006ced59 : adc ebx, dword ptr [rbx - 0x74ba0027] ; fisttp qword ptr [rcx - 0x7f] ; ret
0x00000200001724b6 : adc ebx, eax ; mov eax, 0xc000000d ; ret
0x0000020000074d69 : adc ebx, edi ; ret
0x00000200003d6bc7 : adc ebx, esi ; ret
0x00000200001305b2 : adc ecx, dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200000e4d06 : adc ecx, dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000134a8e : adc ecx, dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000127143 : adc ecx, dword ptr [rax - 0x73] ; lahf ; xor edx, edx ; call 0x200001533e1
0x0000020000181474 : adc ecx, dword ptr [rax - 0x73] ; loopne 0x20000181468 ; ret 0xf5b2
0x00000200003d00e1 : adc ecx, dword ptr [rax - 0x75] ; jmp 0x20048ff8c30
0x00000200001c2d05 : adc ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; xor eax, eax ; ret
0x0000020000072da0 : adc ecx, dword ptr [rax - 0x75] ; ret
0x0000020000118ca7 : adc ecx, dword ptr [rax - 0x75] ; ret 0x2b48
0x00000200003e5b9d : adc ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000004001c : adc ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbx ; call r14
0x0000020000549b7c : adc ecx, dword ptr [rax - 0x77] ; adc dword ptr [rcx - 0x75], eax ; ret 0x8348
0x00000200001aa2ed : adc ecx, dword ptr [rax - 0x77] ; or ecx, dword ptr [rax - 0x77] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200004f021a : adc ecx, dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x95 ; ret 0x46e8
0x00000200000238e5 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000014fc32 : adc ecx, dword ptr [rax - 1] ; ret
0x00000200001a52ab : adc ecx, dword ptr [rbp - 0x77] ; or byte ptr [r9 - 0x7d], cl ; ret
0x00000200001f15d0 : adc ecx, dword ptr [rbx + 0x758844c1] ; ret 0xe8c1
0x00000200001b3d66 : adc ecx, dword ptr [rbx - 0x1f3ebeff] ; sbb al, 0x23 ; ret
0x000002000069f375 : adc ecx, dword ptr [rbx - 0x74befbb1] ; ret 0x348
0x00000200005b8076 : adc ecx, dword ptr [rcx + 0x4de82043] ; ret
0x00000200001b8dfe : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000019c546 : adc ecx, dword ptr [rcx - 0x7d] ; rol byte ptr [rdx], 0x81 ; ret 0x2809
0x000002000013e767 : adc ecx, dword ptr [rcx - 0x7f] ; ret 0x1000
0x0000020000154edb : adc ecx, dword ptr [rcx - 1] ; ret
0x00000200001fa9ba : adc ecx, dword ptr [rdi] ; mov bh, 0x41 ; add bh, bh ; ret 0x348
0x000002000013453e : adc ecx, dword ptr [rdi] ; mov dh, 0x82 ; ret
0x0000020000616381 : adc ecx, dword ptr [rdi] ; test dword ptr [rsi], ebx ; and ebx, edi ; push rsi ; ret
0x0000020000660905 : adc ecx, dword ptr [rdx - 0x74bb0003] ; ret
0x0000020000632035 : adc edi, 0x3be88bff ; ret
0x000002000045b0e9 : adc edi, dword ptr [rdi + 0x3b48ffef] ; ret 0x5977
0x0000020000379b70 : adc edi, ecx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000640729 : adc edi, ecx ; ret 0x48ff
0x00000200000ede13 : adc edi, edi ; ret
0x0000020000162277 : adc edi, edi ; ret 0x1139
0x0000020000132b06 : adc edi, edi ; ret 0x8348
0x00000200001260fc : adc edi, edi ; ret 0x8349
0x00000200004c60e4 : adc edi, edi ; ret 0x8b44
0x00000200003de639 : adc edx, dword ptr [rbx - 0x34] ; dec dword ptr [rax - 0x75] ; ret
0x000002000006486b : adc edx, eax ; add dh, dh ; ret
0x00000200005060c8 : adc edx, edi ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000504502 : adc edx, edx ; xlatb ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200001351b1 : adc esi, dword ptr [rbp + 0x12] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d184f : adc esi, dword ptr [rbx] ; leave ; call rdi
0x0000020000651cd5 : adc esi, dword ptr [rcx] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000808d9 : adc esi, dword ptr [rcx] ; xchg dword ptr [rsi - 0x7dbaf7ec], eax ; lodsb al, byte ptr [rsi] ; ret
0x00000200001b8980 : adc esi, dword ptr [rdx - 8] ; jmp 0x200001b8998
0x000002000036ea11 : adc esi, dword ptr [rsi - 0x9be000f] ; ret
0x0000020000476b3b : adc esi, ecx ; ret 0x8aff
0x000002000013b630 : adc esi, esi ; ret
0x0000020000601081 : adc esi, esi ; ret 0x443f
0x0000020000050d31 : adc esi, esi ; ret 0x7401
0x00000200005a7d51 : adc esi, esi ; ret 0x7402
0x0000020000063cf1 : adc esi, esi ; ret 0x7404
0x00000200001b51a4 : adc esi, esi ; ret 0x7407
0x0000020000170b16 : adc esi, esi ; ret 0x7501
0x00000200001b36cd : adc esi, esi ; ret 0x7502
0x0000020000570435 : adc esi, esi ; ret 0x7504
0x00000200005fc8eb : adc esi, esi ; ret 0xf01
0x00000200003645e8 : adc esi, esi ; ret 0xf02
0x0000020000669936 : adc esp, dword ptr [rax + 0x3d8d48ff] ; push rax ; pop rbx ; ret 0x48ff
0x000002000022073c : adc esp, dword ptr [rbp + rcx] ; sysenter
0x0000020000220658 : adc esp, dword ptr [rdi + rcx] ; sysenter
0x0000020000635811 : adc esp, ebp ; ret
0x000002000016c804 : adc qword ptr [r8], r8 ; call rax
0x000002000048c4b5 : adc r11b, bpl ; out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x00000200001b8ceb : adc r11b, bpl ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x00000200004e1f17 : adc r15b, dil ; ret 0x349
0x00000200003ed0a1 : adc r15b, r15b ; ret
0x000002000056dcb2 : adc r15b, r15b ; ret 0x349
0x0000020000415115 : adc r8b, bpl ; cwde ; ret 0xe9ff
0x000002000042ace4 : adc r8b, r13b ; jne 0x2000042ad65 ; ret 0x84ff
0x00000200004150f9 : adc r8b, r13b ; mov ah, 0x41 ; ret 0xe9ff
0x00000200004155a1 : adc r8b, r13b ; or al, 0x3d ; ret 0xe9ff
0x000002000042acd0 : adc r8b, r13b ; pop rcx ; outsd dx, dword ptr [rsi] ; ret
0x000002000042c124 : adc r8b, r13b ; push rbp ; pop rcx ; ret
0x00000200001e8491 : adc r8b, r13b ; pushfq ; ret 0xfff8
0x00000200004433ea : adc r8b, r13b ; ret
0x00000200000c850b : adc r8b, r13b ; sahf ; ret 0xa
0x0000020000137f68 : adc r8d, dword ptr [r9 + 0x3b] ; ret 0x830f
0x00000200000f76f9 : adc r8d, dword ptr [r9 + 0x3b] ; ret 0x8772
0x00000200001ed000 : adc r9b, byte ptr [r8 + 3] ; ret
0x000002000047e820 : adc r9b, dl ; call 0x1ffc349c8b2
0x00000200005dfe1a : adc r9b, r13b ; ret 0xe54c
0x0000020000064a02 : adc rax, -0x76b6ffe9 ; add edi, edi ; ret
0x00000200006d535a : adc rax, qword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000013157 : adc sil, r14b ; ret
0x000002000025b2b3 : add ah, ah ; jmp qword ptr [rdx]
0x000002000026216b : add ah, al ; ret
0x000002000022397f : add ah, al ; ret 2
0x000002000018d004 : add ah, bh ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x2372
0x000002000014ae58 : add ah, bh ; ret
0x000002000022cc5f : add ah, bh ; ret 0x23
0x000002000019ca74 : add ah, bl ; add byte ptr [rax], al ; ret
0x0000020000210ff7 : add ah, bl ; test dword ptr [rsi], ecx ; add ah, dl ; jmp qword ptr [rax]
0x000002000008dc81 : add ah, byte ptr [rax + 0x6b] ; ret
0x00000200001fa0cc : add ah, byte ptr [rax - 0x14] ; push rdi ; shl byte ptr [rbx], 1 ; ret
0x00000200003a594e : add ah, byte ptr [rbx - 0xe] ; jmp qword ptr [rbx]
0x0000020000163912 : add ah, byte ptr [rbx] ; ret
0x00000200005640e1 : add ah, byte ptr [rbx] ; ret 0x8d45
0x00000200004cf6f4 : add ah, byte ptr [rcx + rax] ; ret
0x0000020000233b44 : add ah, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x2106e406 ; ret 0xf01a
0x00000200002367e0 : add ah, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x21168306 ; ret 0xf01a
0x00000200006be857 : add ah, byte ptr [rdi + rax*4 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x000002000021e318 : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22061306 ; ret 0xf01b
0x0000020000220590 : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22061606 ; ret 0xf01b
0x000002000024bf70 : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22165a06 ; ret 0xf01e
0x0000020000205dcc : add ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x22265f06 ; ret 0xf01b
0x00000200003c14a2 : add ah, byte ptr [rip + 0x158d4800] ; push rsp ; sti ; ret
0x000002000025199c : add ah, byte ptr [rip + 0x60c000d] ; ret 0x2546
0x00000200004c37ea : add ah, byte ptr [rsi + 0x3b] ; ret
0x00000200007071be : add ah, byte ptr [rsi + 0x41] ; cmp eax, eax ; jle 0x200007071d1 ; mov al, 1 ; ret
0x000002000047c0bc : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000025a59 : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rcx + 2], eax ; mov eax, r10d ; ret
0x000002000064f1a0 : add ah, byte ptr [rsi + 0x44] ; mov dword ptr [rdx + 2], eax ; ret
0x00000200004398ba : add ah, byte ptr [rsi + 3] ; ret 0x8966
0x0000020000439873 : add ah, byte ptr [rsi + 3] ; ret 0xf175
0x00000200000bf29c : add ah, byte ptr [rsi - 0x77] ; add sil, r11b ; ret
0x00000200001547ed : add ah, byte ptr [rsi - 0x7b] ; sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x000002000007c643 : add ah, byte ptr [rsi - 9] ; ret 0x100
0x0000020000265f20 : add ah, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x26061506 ; ret 0xf01f
0x0000020000218918 : add ah, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x26064b06 ; ret 0xf01f
0x000002000025d3a3 : add ah, ch ; jmp qword ptr [rbx]
0x0000020000420f33 : add ah, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011d1aa : add ah, cl ; add rsp, 0xa8 ; ret
0x000002000000baea : add ah, cl ; add rsp, 0xc8 ; ret
0x000002000049f9bd : add ah, cl ; mov eax, 0xc000a285 ; jmp 0x200004bbc55
0x00000200003923aa : add ah, cl ; mov eax, dword ptr [r10 + rcx*4] ; jmp 0x2000039237c
0x00000200000bf23a : add ah, cl ; movzx eax, cl ; add rsp, 0x58 ; ret
0x0000020000046fd4 : add ah, cl ; nop ; nop ; invlpg byte ptr [rcx] ; ret
0x00000200000b90ca : add ah, cl ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x000002000012e13a : add ah, cl ; nop ; nop ; nop ; nop ; wbinvd ; ret
0x0000020000422f8b : add ah, cl ; nop ; nop ; nop ; xor eax, eax ; ret
0x0000020000076c4f : add ah, cl ; ret
0x0000020000261587 : add ah, cl ; ret 0x23
0x0000020000466abd : add ah, cl ; xor al, al ; add rsp, 0x20 ; pop rsi ; ret
0x00000200002237ef : add ah, dh ; ret
0x0000020000230e17 : add ah, dh ; ret 0x3f
0x0000020000210ffb : add ah, dl ; jmp qword ptr [rax]
0x000002000025c737 : add ah, dl ; jmp qword ptr [rdx]
0x000002000023aa07 : add ah, dl ; ret 0x60
0x0000020000216400 : add ah, dl ; sbb dword ptr [rax], eax ; mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x00000200000301fd : add al, 0 ; add al, al ; call 0x1ffc3042612
0x000002000039397f : add al, 0 ; add al, al ; call 0x1ffc33a5d93
0x000002000038ec5d : add al, 0 ; add al, al ; ret
0x000002000069ce76 : add al, 0 ; add al, ch ; ret 0x41
0x00000200005441e6 : add al, 0 ; add al, ch ; ret 0xadfd
0x00000200005973d8 : add al, 0 ; add bh, bh ; ret
0x0000020000136309 : add al, 0 ; add bh, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000144331 : add al, 0 ; add bh, ch ; ret
0x00000200000d4f84 : add al, 0 ; add bh, dh ; jmp 0x200000d4f51
0x00000200000bfc7f : add al, 0 ; add bh, dh ; shl byte ptr [rbx], 1 ; ret
0x000002000019751f : add al, 0 ; add bl, al ; xor eax, eax ; ret
0x00000200000c0281 : add al, 0 ; add bl, bh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000069dc1f : add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000016d76f : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0x1177
0x00000200000c4482 : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x000002000002e6d9 : add al, 0 ; add byte ptr [rax + 0x48], al ; add esp, 0x20 ; pop rbx ; ret
0x000002000019ed6d : add al, 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x0000020000064073 : add al, 0 ; add byte ptr [rax + rcx*2], al ; add esp, 0x20 ; pop rbx ; ret
0x00000200000de466 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200006a05d6 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200004d2821 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000200000ed5c2 : add al, 0 ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000018e09d : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fa8c2 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200001e4438 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004784f3 : add al, 0 ; add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret 0xc635
0x000002000042d3c6 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1b80
0x000002000014fb73 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000549bf : add al, 0 ; add byte ptr [rax], ah ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005b8852 : add al, 0 ; add byte ptr [rax], al ; call 0x20000054ada
0x0000020000149fb1 : add al, 0 ; add byte ptr [rax], al ; call rdi
0x000002000006ba4b : add al, 0 ; add byte ptr [rax], al ; je 0x2000006ba89 ; mov al, 1 ; ret
0x000002000023d024 : add al, 0 ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x000002000006ba7b : add al, 0 ; add byte ptr [rax], al ; jne 0x2000006baa2 ; xor al, al ; ret
0x00000200003bd6c8 : add al, 0 ; add byte ptr [rax], al ; jne 0x200003bd6d7 ; ret
0x0000020000489342 : add al, 0 ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x200004855dd
0x00000200005b888f : add al, 0 ; add byte ptr [rax], al ; mov rcx, rsi ; call 0x20000054afd
0x000002000001e2b6 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000020000375064 : add al, 0 ; add byte ptr [rax], al ; setne al ; ret
0x000002000017efbd : add al, 0 ; add byte ptr [rax], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dae39 : add al, 0 ; add byte ptr [rax], dl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000144328 : add al, 0 ; add byte ptr [rax], dl ; ret
0x00000200000dddf3 : add al, 0 ; add byte ptr [rbp + 0x33], al ; shr cl, 0xc2 ; int 0xfd
0x00000200000adc7c : add al, 0 ; add byte ptr [rbp + 3], bh ; xor eax, eax ; ret
0x00000200000ab8d4 : add al, 0 ; add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x000002000042a463 : add al, 0 ; add byte ptr [rbx + 0x7823e8cb], cl ; ret
0x0000020000376e31 : add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], al ; push rcx ; ret 0x30
0x00000200006c7b2c : add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0xbc2a
0x00000200000c3c6b : add al, 0 ; add byte ptr [rbx - 0x7bf0fa07], al ; ret 4
0x000002000053ad25 : add al, 0 ; add byte ptr [rbx], bh ; ret
0x00000200004c7029 : add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x00000200006dcabb : add al, 0 ; add byte ptr [rbx], dh ; dec dword ptr [rcx - 0x75] ; ret 0xbb41
0x0000020000134b26 : add al, 0 ; add byte ptr [rbx], dh ; ret 0x8348
0x000002000059536f : add al, 0 ; add byte ptr [rcx + 3], al ; ret 0x8944
0x0000020000054cbb : add al, 0 ; add byte ptr [rcx + rax], ah ; ret
0x00000200000eb726 : add al, 0 ; add byte ptr [rcx - 0x4b], al ; add esi, esi ; ret 0xf04
0x000002000063709b : add al, 0 ; add byte ptr [rcx - 0x73], al ; call 0x200452573f3
0x0000020000611bcb : add al, 0 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004f4dad : add al, 0 ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000048968a : add al, 0 ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000b8ae9
0x0000020000007ffc : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x00000200003c179e : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000043c3d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf40
0x000002000015740a : add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000001f39f : add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x9ae9
0x000002000011cdc3 : add al, 0 ; add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070550c : add al, 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000190308 : add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000379a86 : add al, 0 ; add byte ptr [rdi], cl ; ret 0x4389
0x0000020000378503 : add al, 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x000002000041f7cc : add al, 0 ; add byte ptr [rdx - 0x673d17ef], dh ; ret
0x00000200000c7ab6 : add al, 0 ; add byte ptr [rdx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a5949 : add al, 0 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200005d4b28 : add al, 0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200000ea068 : add al, 0 ; add dh, dh ; ret
0x0000020000362ea0 : add al, 0 ; add dh, dh ; ret 0x7401
0x00000200000e4de0 : add al, 0 ; add dh, dh ; ret 0x740f
0x00000200003def2e : add al, 0 ; add dh, dh ; ret 0xf03
0x000002000001323f : add al, 0 ; add dh, dh ; ret 0xf40
0x000002000006ea0e : add al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b216 : add al, 0 ; add rsp, 0x28 ; ret
0x000002000001bc35 : add al, 0 ; add rsp, 0x38 ; ret
0x00000200004205e1 : add al, 0 ; add rsp, 0x48 ; ret
0x00000200006482cf : add al, 0 ; add rsp, 0x58 ; ret
0x0000020000648f13 : add al, 0 ; add rsp, 0x68 ; ret
0x000002000041b570 : add al, 0 ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000648e1c : add al, 0 ; add rsp, 0x78 ; ret
0x000002000059b08b : add al, 0 ; je 0x2000059b098 ; mov al, 1 ; ret
0x000002000063e5b4 : add al, 0 ; jl 0x2000063e5c1 ; mov al, 1 ; ret
0x000002000017376d : add al, 0 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004a96e4 : add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000010479b : add al, 0 ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x00000200006c6115 : add al, 0 ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000121e18 : add al, 0 ; mov rdx, rbx ; mov rcx, rdi ; call r15
0x000002000038ec1f : add al, 0 ; or dword ptr [rax], eax ; je 0x2000038ec30 ; xor al, al ; ret
0x000002000023b466 : add al, 0 ; or eax, dword ptr [rsi] ; ret
0x00000200000b886a : add al, 0 ; ret
0x00000200001b49ae : add al, 0 ; rol byte ptr [rbx + rcx*4 - 0x3b], 0xf ; xchg eax, esp ; ret
0x000002000000e013 : add al, 0 ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200004e1d44 : add al, 0x10 ; add byte ptr [rax], al ; add rax, rdx ; ret
0x000002000041b46a : add al, 0x10 ; sub rcx, rax ; mov rax, rcx ; ret
0x00000200004f22ae : add al, 0x11 ; cmp eax, edx ; ja 0x200004f22bf ; mov eax, ecx ; ret
0x0000020000073a79 : add al, 0x11 ; mov rax, r11 ; ret
0x00000200000a3897 : add al, 0x11 ; movnti qword ptr [rcx], rax ; sfence ; ret 0
0x0000020000411e3b : add al, 0x11 ; ret
0x0000020000640add : add al, 0x13 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020fd9c : add al, 0x16 ; add byte ptr [rsi], al ; ret 0xd90
0x0000020000255d84 : add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x000002000003cbcb : add al, 0x1c ; add byte ptr [rax - 9], cl ; ret
0x000002000064c9c8 : add al, 0x22 ; sal dh, 1 ; ficomp dword ptr [rbx] ; leave ; and eax, ecx ; ret
0x00000200003caef9 : add al, 0x23 ; ret
0x0000020000541f1d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000200006d601e : add al, 0x24 ; prefetchw byte ptr [rcx] ; ret
0x000002000017bdb2 : add al, 0x24 ; ret
0x00000200000a86bc : add al, 0x24 ; shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x000002000000ec06 : add al, 0x25 ; add al, 0x55 ; add byte ptr [rax], al ; ret
0x000002000015f876 : add al, 0x25 ; add byte ptr cs:[rax], al ; ret
0x0000020000152923 : add al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000015f86a : add al, 0x25 ; push rbp ; add byte ptr [rax], al ; ret
0x00000200003a6e1e : add al, 0x27 ; add dh, dh ; ret 0x7510
0x0000020000011a15 : add al, 0x2b ; ret
0x00000200003cc89c : add al, 0x2b ; ret 0xc085
0x000002000059d0e3 : add al, 0x31 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200001f10f6 : add al, 0x32 ; mov word ptr [rbp - 0x80], ax ; jmp 0x2000010d339
0x00000200004481b1 : add al, 0x32 ; ret
0x000002000008ff6c : add al, 0x32 ; test al, 0x17 ; pop rdi ; jg 0x2000008ff96 ; ret
0x000002000008ff6b : add al, 0x32 ; test al, 0x17 ; pop rdi ; jg 0x2000008ff97 ; ret
0x0000020000571bbb : add al, 0x33 ; fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000064a6dc : add al, 0x33 ; imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x0000020000368b82 : add al, 0x33 ; leave ; call rax
0x0000020000140667 : add al, 0x33 ; leave ; call rdx
0x000002000035d8a3 : add al, 0x33 ; ret
0x00000200003e45ce : add al, 0x33 ; ret 0xe083
0x00000200001b36e7 : add al, 0x33 ; ret 0xfc25
0x000002000056a2bb : add al, 0x33 ; shr bl, 0 ; ret
0x0000020000157cfa : add al, 0x39 ; or al, 0x74 ; cmovno edi, edi ; ret 0x8348
0x000002000058f28a : add al, 0x3b ; add dword ptr [rcx - 1], ecx ; ret
0x0000020000539bd7 : add al, 0x3b ; outsb dx, byte ptr [rsi] ; and al, 0x72 ; ret
0x000002000014064b : add al, 0x3b ; ret
0x00000200005653b9 : add al, 0x3b ; ret 0x1c7e
0x00000200001adf1f : add al, 0x3b ; ret 0x470f
0x00000200001d8d0f : add al, 0x3b ; ret 0x7973
0x00000200000f659a : add al, 0x3b ; ret 0x870f
0x000002000053c809 : add al, 0x3b ; ret 0xed72
0x00000200005748a9 : add al, 0x3b ; ret 0xf072
0x000002000005afa0 : add al, 0x41 ; and al, 0 ; ret
0x000002000054743f : add al, 0x41 ; and dword ptr [rcx], 0 ; add rsp, 0x18 ; ret
0x00000200001d18de : add al, 0x41 ; call rbx
0x0000020000066100 : add al, 0x41 ; mov al, al ; ret
0x00000200001248f1 : add al, 0x41 ; mov al, cl ; ret
0x0000020000360406 : add al, 0x41 ; mov al, dl ; ret
0x000002000040181e : add al, 0x41 ; mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [r14] ; call rax
0x000002000012b336 : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x2000012b305
0x000002000012b335 : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x2000012b306
0x0000020000174117 : add al, 0x41 ; mov dword ptr [rax], eax ; ret
0x0000020000188e83 : add al, 0x41 ; mov eax, ebx ; ret
0x0000020000174ba3 : add al, 0x41 ; mov eax, ecx ; ret
0x0000020000085d9e : add al, 0x41 ; ret
0x00000200004c6acd : add al, 0x44 ; add dword ptr [rcx + 0x40], ebx ; ret
0x0000020000470ed5 : add al, 0x44 ; cmp eax, ecx ; jb 0x20000470e80 ; ret
0x0000020000470ed4 : add al, 0x44 ; cmp eax, ecx ; jb 0x20000470e81 ; ret
0x00000200000dd77e : add al, 0x48 ; add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000424f7a : add al, 0x48 ; add eax, ecx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000006c20d : add al, 0x48 ; add eax, ecx ; ret
0x0000020000101b71 : add al, 0x48 ; add edx, dword ptr [rcx + 0x58] ; add rdx, rax ; jmp 0x20000101b46
0x0000020000064076 : add al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000012b23b : add al, 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001630c5 : add al, 0x48 ; add esp, 0x28 ; ret
0x000002000066428b : add al, 0x48 ; add esp, 0x38 ; ret
0x000002000014437f : add al, 0x48 ; and eax, 0x157 ; ret
0x000002000013c8cf : add al, 0x48 ; and eax, 0x80 ; ret
0x0000020000154563 : add al, 0x48 ; and eax, 1 ; ret
0x0000020000154587 : add al, 0x48 ; and eax, 2 ; ret
0x000002000010dad3 : add al, 0x48 ; and eax, 4 ; ret
0x000002000013c8f7 : add al, 0x48 ; and eax, 8 ; ret
0x000002000019e3f0 : add al, 0x48 ; cmp edx, eax ; jb 0x2000019e3f1 ; mov al, 1 ; ret
0x0000020000023174 : add al, 0x48 ; dec ecx ; jne 0x20000023176 ; ret
0x00000200003fea48 : add al, 0x48 ; imul eax, r10d ; ret
0x00000200003ffe5f : add al, 0x48 ; imul eax, r9d ; ret
0x0000020000159eb7 : add al, 0x48 ; lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x00000200001ae059 : add al, 0x48 ; lea ecx, dword ptr [rbx + 0x50] ; call 0x200001aa32b
0x00000200001a3650 : add al, 0x48 ; lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x00000200006d16bf : add al, 0x48 ; mov dword ptr [rbp - 0x10], edx ; jmp 0x200006d168e
0x000002000019c58a : add al, 0x48 ; mov dword ptr [rcx + 0x60], eax ; ret
0x00000200006404f2 : add al, 0x48 ; mov dword ptr [rcx + 8], eax ; ret
0x000002000010a894 : add al, 0x48 ; mov dword ptr [rcx], eax ; ret
0x00000200001183ce : add al, 0x48 ; mov dword ptr [rdx], ecx ; ret
0x000002000043b37f : add al, 0x48 ; mov eax, dword ptr [rax + rcx*8] ; add rax, r9 ; ret
0x00000200004d0416 : add al, 0x48 ; mov eax, dword ptr [rdx + 0x38] ; ret
0x000002000001804b : add al, 0x48 ; mov eax, ecx ; ret
0x000002000013ff00 : add al, 0x48 ; mov eax, edx ; ret
0x000002000002706e : add al, 0x48 ; movzx ecx, dx ; and eax, ecx ; ret
0x0000020000055ef3 : add al, 0x48 ; ret
0x000002000001b292 : add al, 0x48 ; sub eax, ecx ; ret
0x0000020000526f3b : add al, 0x49 ; and dword ptr [rax], 0 ; ret
0x0000020000157d4b : add al, 0x49 ; dec ecx ; jne 0x20000157d2c ; ret
0x00000200000d5b6e : add al, 0x49 ; mov dword ptr [rax], eax ; ret
0x000002000001dbbb : add al, 0x49 ; mov dword ptr [rax], ecx ; ret
0x00000200004fa492 : add al, 0x49 ; mov eax, eax ; ret
0x00000200000fe582 : add al, 0x49 ; mov eax, ebx ; ret
0x00000200000e7542 : add al, 0x49 ; mov eax, ecx ; ret
0x000002000011b012 : add al, 0x4b ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019b030 : add al, 0x4b ; add rsp, 0x50 ; pop rbx ; ret
0x000002000019e418 : add al, 0x4c ; cmp eax, eax ; jb 0x2000019e415 ; mov al, 1 ; ret
0x00000200005b87fe : add al, 0x4c ; lea eax, dword ptr [rbp + 0x40] ; mov ecx, edx ; call 0x20000054add
0x00000200001b335b : add al, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x0000020000085e7a : add al, 0x4e ; ret 0x3b3
0x00000200004d9dd9 : add al, 0x51 ; jne 0x200004d9dec ; test eax, eax ; setg al ; ret
0x000002000054fc48 : add al, 0x52 ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x000002000000ec08 : add al, 0x55 ; add byte ptr [rax], al ; ret
0x00000200000918a1 : add al, 0x5d ; ret
0x00000200003b0159 : add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x0000020000475d31 : add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000019459b : add al, 0x66 ; mov dword ptr [rcx], r9d ; add rsp, 0x28 ; ret
0x0000020000085ddc : add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000040daa4 : add al, 0x72 ; in eax, dx ; mov eax, 1 ; ret
0x000002000064ecc2 : add al, 0x72 ; leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005a98dd : add al, 0x72 ; ret 0x8d48
0x0000020000641b0b : add al, 0x73 ; jbe 0x20000641a9e ; ret 0x3949
0x0000020000101e57 : add al, 0x73 ; or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000058b85d : add al, 0x73 ; sbb byte ptr [rdi], cl ; mov bh, 0x41 ; add bh, bh ; ret 0x141
0x00000200000bcc65 : add al, 0x74 ; adc dh, dh ; ret
0x00000200003daf2c : add al, 0x74 ; adc edi, edi ; ret 0x8349
0x00000200004c6acb : add al, 0x74 ; add al, 0x44 ; add dword ptr [rcx + 0x40], ebx ; ret
0x000002000018bed9 : add al, 0x74 ; and dh, dh ; ret
0x0000020000528163 : add al, 0x74 ; sbb eax, 0x84cf8b48 ; ret
0x000002000015b5e3 : add al, 0x75 ; add al, 0x80 ; add al, 4 ; ret
0x0000020000198d3e : add al, 0x75 ; jge 0x20000198cd4 ; je 0x20000198d57 ; ret 0x1a8
0x00000200004cc0aa : add al, 0x75 ; or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000f8d59
0x000002000037287b : add al, 0x75 ; or ecx, dword ptr [rax - 0x75] ; retf ; call 0x2000036eacc
0x00000200000bdd10 : add al, 0x75 ; out dx, eax ; test al, 2 ; jne 0x200000bdd2a ; xor al, al ; ret
0x0000020000406e57 : add al, 0x75 ; ret
0x00000200004c6c59 : add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200003f3123 : add al, 0x75 ; sbb dh, dh ; ret 0x7502
0x00000200004eb65f : add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x0000020000655215 : add al, 0x7e ; cmp edi, dword ptr [rax + 1] ; ret
0x000002000015b5e5 : add al, 0x80 ; add al, 4 ; ret
0x000002000041cc00 : add al, 0x81 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000cf0ec : add al, 0x81 ; ret
0x00000200000a9d58 : add al, 0x81 ; test eax, eax ; je 0x200000a9d6a ; ret
0x000002000001dc4c : add al, 0x82 ; ret
0x000002000041dd4b : add al, 0x82 ; sub eax, ecx ; ret
0x000002000041de0c : add al, 0x82 ; sub eax, r8d ; ret
0x000002000057b973 : add al, 0x83 ; cli ; adc byte ptr [rdx - 0x10], dh ; xor al, al ; ret
0x0000020000144341 : add al, 0x83 ; loopne 0x2000014434a ; ret
0x00000200001c2a8d : add al, 0x83 ; loopne 0x200001c2a96 ; ret
0x00000200003638a2 : add al, 0x83 ; rcr byte ptr [rax], 0x3b ; ret
0x00000200005af9bd : add al, 0x83 ; ret
0x0000020000147ff8 : add al, 0x83 ; ret 0x2307
0x00000200004b517a : add al, 0x83 ; ret 0x4128
0x00000200001be783 : add al, 0x83 ; ret 0x41f0
0x00000200006293a2 : add al, 0x83 ; ret 0x4804
0x000002000045a237 : add al, 0x83 ; ret 0x8918
0x00000200005e356a : add al, 0x83 ; ret 0x8b08
0x00000200003f2322 : add al, 0x83 ; ret 0x8bf8
0x000002000037b764 : add al, 0x83 ; ret 0xe830
0x000002000061a489 : add al, 0x83 ; ret 0xeb18
0x000002000003ea21 : add al, 0x83 ; ret 0xebe0
0x00000200000738e0 : add al, 0x84 ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000007355c : add al, 0x84 ; div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x000002000039c3d7 : add al, 0x84 ; ret
0x0000020000044aa5 : add al, 0x84 ; ror dword ptr [rdi], -0x7c ; ret
0x00000200000521a1 : add al, 0x85 ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000064a6d8 : add al, 0x85 ; ret 0x474
0x00000200001b7816 : add al, 0x85 ; ret 0xec74
0x000002000064cf53 : add al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000064cfe2 : add al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000da80b : add al, 0x88 ; mov byte ptr [rcx + 0x48000002], cl ; mov eax, edx ; jmp 0x200000da7a0
0x00000200005c6a93 : add al, 0x88 ; mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa5
0x000002000041dd29 : add al, 0x88 ; ret
0x00000200003bbc99 : add al, 0x89 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200001a69ca : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005ad1c5 : add al, 0x89 ; add rsp, 0x28 ; ret
0x000002000038c9c6 : add al, 0x89 ; je 0x2000038c9f4 ; and al, 0xff ; ret 0xc2eb
0x00000200001ab390 : add al, 0x89 ; push rax ; add al, 0xc3 ; mov dword ptr [rcx], edx ; ret
0x000002000012a4e0 : add al, 0x89 ; xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000055ef1 : add al, 0x8a ; add al, 0x48 ; ret
0x000002000015e56c : add al, 0x8a ; inc dword ptr [r10 + 0xc] ; ret
0x000002000015e5a3 : add al, 0x8a ; inc dword ptr [r10 + 8] ; ret
0x00000200003923ae : add al, 0x8a ; jmp 0x20000392378
0x00000200006405b2 : add al, 0x8a ; mov eax, r8d ; ret
0x0000020000173b32 : add al, 0x8a ; ret
0x00000200001b6afa : add al, 0x8a ; ret 0x8eb
0x000002000014aa22 : add al, 0x8b ; or al, ch ; ret 0x51ae
0x00000200000dfab4 : add al, 0x8b ; or bl, al ; or eax, 0xffffffff ; ret
0x000002000006fac6 : add al, 0x8b ; ret
0x00000200004c2db7 : add al, 0x8b ; ret 0x2b44
0x000002000069bbbc : add al, 0x8b ; ret 0x3aeb
0x0000020000708d7b : add al, 0x8b ; ret 0x8b49
0x0000020000597402 : add al, 0x8b ; ret 0xe083
0x000002000019ca11 : add al, 0x8b ; ret 0xe8c1
0x00000200003c7951 : add al, 0x8d ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000129331 : add al, 0x8d ; sbb byte ptr [rcx + 0x3b], al ; ret 0x830f
0x0000020000486368 : add al, 0x8f ; ret
0x0000020000441d79 : add al, 0x90 ; ret
0x0000020000411ceb : add al, 0x90 ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000641de3 : add al, 0x91 ; add rax, r9 ; ret
0x00000200006c05b6 : add al, 0x91 ; mov qword ptr [rip - 0x368d7f], rax ; ret
0x0000020000578830 : add al, 0x92 ; sar bh, 0x81 ; ret
0x00000200005a712d : add al, 0x93 ; mov dword ptr [r14 + rdx*4], eax ; inc edx ; jmp 0x200005a712b
0x00000200000a379c : add al, 0x95 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200005a7131 : add al, 0x96 ; inc edx ; jmp 0x200005a7127
0x0000020000640c14 : add al, 0x9e ; mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200005a45a0 : add al, 0xa ; inc edx ; jmp 0x200005a4598
0x0000020000665943 : add al, 0xa7 ; ret 0xff
0x00000200006652c8 : add al, 0xae ; ret 0xfff
0x000002000000cc26 : add al, 0xb ; ret
0x000002000019a480 : add al, 0xb ; ret 0x8941
0x0000020000199bca : add al, 0xb ; ret 0x8b41
0x000002000014463e : add al, 0xb ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200003f80a2 : add al, 0xba ; add byte ptr [rax + 0x2366ffff], al ; ret 0x966
0x0000020000141d95 : add al, 0xc1 ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000200000342df : add al, 0xc1 ; ret
0x00000200000f9101 : add al, 0xc1 ; test dword ptr [rax], edx ; jne 0x200000f9112 ; xor eax, eax ; ret
0x00000200001792e7 : add al, 0xc1 ; test rax, rcx ; setne al ; ret
0x00000200003c333c : add al, 0xc2 ; jmp 0x200003c330c
0x000002000064eb29 : add al, 0xc3 ; call qword ptr [rax]
0x000002000036d64c : add al, 0xc3 ; mov al, 2 ; ret
0x00000200001ab393 : add al, 0xc3 ; mov dword ptr [rcx], edx ; ret
0x00000200003fd9ef : add al, 0xc3 ; mov eax, 0xc0000023 ; ret
0x000002000010a953 : add al, 0xc3 ; mov eax, 3 ; ret
0x000002000041a582 : add al, 0xc3 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000013fb85 : add al, 0xc6 ; add dword ptr [rax], eax ; ret
0x000002000043b382 : add al, 0xc8 ; add rax, r9 ; ret
0x000002000015de56 : add al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000052a6ee : add al, 0xc8 ; lea ecx, dword ptr [r11 + 1] ; call rax
0x0000020000441db8 : add al, 0xc8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200004ee92c : add al, 0xc8 ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x000002000036b2ac : add al, 0xc8 ; mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x00000200000ee85d : add al, 0xc8 ; ret
0x000002000009496b : add al, 0xcc ; ret 4
0x000002000002a420 : add al, 0xcd ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200003c470c : add al, 0xd1 ; inc dword ptr [rcx + 0x2b] ; ret
0x000002000012f81e : add al, 0xd3 ; inc edx ; jmp 0x2000012f813
0x000002000012f81a : add al, 0xd6 ; mov qword ptr [r11 + rdx*8], rax ; inc edx ; jmp 0x2000012f817
0x00000200004d8a8d : add al, 0xdb ; dec dword ptr [rbx + rcx*4 + 0x75] ; or bh, bh ; ret
0x00000200001d858b : add al, 0xe5 ; dec dword ptr [rax - 0x7d] ; ret 0x45c0
0x0000020000476848 : add al, 0xe6 ; ret 0x48ff
0x00000200005dff49 : add al, 0xe8 ; int1 ; ret
0x0000020000448fc8 : add al, 0xe8 ; jb 0x20000448f6e ; ret 0x8bff
0x00000200001ab4f7 : add al, 0xe8 ; ret
0x000002000064da04 : add al, 0xe8 ; ret 0x48ff
0x00000200005a95f8 : add al, 0xe8 ; ret 0xacdb
0x00000200000d6ce8 : add al, 0xe8 ; ret 0xfe83
0x0000020000632d11 : add al, 0xe8 ; sub ebx, edx ; ret
0x00000200001ee50e : add al, 0xe9 ; in eax, dx ; ret
0x000002000004cfdf : add al, 0xe9 ; ret
0x00000200001f6622 : add al, 0xe9 ; ret 0xe46c
0x00000200001c90a9 : add al, 0xeb ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000418381 : add al, 0xeb ; ret 0xfb81
0x000002000056de4a : add al, 0xee ; inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a815
0x000002000012e067 : add al, 0xee ; inc dword ptr [rcx - 0x75] ; ret
0x000002000054ba35 : add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x0000020000425e55 : add al, 0xf ; mov bh, 0xc1 ; ret
0x00000200005652c8 : add al, 0xf ; mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x00000200000d8876 : add al, 0xf ; ret
0x000002000063871d : add al, 0xf ; test bl, bh ; ret 0xffff
0x0000020000461a82 : add al, 0xf ; test byte ptr [rax - 0x9000006], ch ; ret
0x0000020000122b02 : add al, 0xf ; test byte ptr [rbp - 0x900048b], dh ; ret 0xba01
0x00000200004a1070 : add al, 0xf ; test cl, dl ; ret
0x00000200005e09e1 : add al, 0xf ; test dl, ch ; ret 0xffd9
0x00000200000416ff : add al, 0xf ; test dword ptr [rbp - 0x900000a], ecx ; ret
0x00000200004c6e03 : add al, 0xf ; test dword ptr [rbx], esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0x000002000048285f : add al, 0xf ; test dword ptr [rcx + rax], edx ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000720b5 : add al, 0xf ; test dword ptr [rsi - 0xffe744], eax ; ret 0x854d
0x0000020000020a7c : add al, 0xf ; test dword ptr [rsi], edi ; ret 0x1d
0x0000020000193c57 : add al, 0xf0 ; dec dword ptr [rip + 0x104551] ; ret
0x0000020000192197 : add al, 0xf0 ; inc dword ptr [rcx + 8] ; ret
0x0000020000631038 : add al, 0xf0 ; ret
0x000002000063fd30 : add al, 0xf3 ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000600110 : add al, 0xf3 ; stosq qword ptr [rdi], rax ; jmp 0x2000046c3dd
0x0000020000426518 : add al, 0xf6 ; ret 0x7401
0x000002000056f141 : add al, 0xf6 ; ret 0x7403
0x00000200003d6bb5 : add al, 0xf6 ; ret 0x7408
0x000002000046807b : add al, 0xf6 ; ret 0x7502
0x0000020000611ca5 : add al, 0xf6 ; ret 0xf02
0x000002000013d721 : add al, 0xf6 ; ret 0xf04
0x00000200001cbf40 : add al, 0xf6 ; ret 0xf08
0x00000200005652cf : add al, 0xf7 ; ret
0x00000200001696b3 : add al, 0xf7 ; shl dword ptr [rbx], cl ; ret
0x000002000012c191 : add al, 0xfd ; lock dec dword ptr [rcx + 0x8c] ; ret
0x0000020000395ac1 : add al, 0xff ; leave ; jne 0x20000395abf ; ret
0x00000200001a9acb : add al, 0xff ; ret
0x0000020000545543 : add al, 0xff ; ret 0x15eb
0x00000200001138b0 : add al, 0xff ; ret 0x5489
0x0000020000157b8c : add al, 0xff ; ret 0x8348
0x00000200005a0524 : add al, 0xff ; xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006551cb : add al, 1 ; add byte ptr [rax], al ; ret
0x000002000016be96 : add al, 1 ; cmp r8d, r9d ; jae 0x2000016bea9 ; mov al, 1 ; ret
0x000002000040581b : add al, 1 ; jmp 0x2000040579e
0x000002000040581a : add al, 1 ; jmp 0x2000040579f
0x0000020000129edb : add al, 1 ; mov dword ptr [rax], 4 ; ret
0x000002000015f1a8 : add al, 2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001373a6 : add al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4f89
0x00000200004d0041 : add al, 3 ; ret
0x000002000058a4b9 : add al, 3 ; ret 0x8948
0x000002000015b5e2 : add al, 4 ; jne 0x2000015b5f2 ; or byte ptr [rax + 4], 4 ; ret
0x000002000015b5e1 : add al, 4 ; jne 0x2000015b5f3 ; or byte ptr [rax + 4], 4 ; ret
0x000002000015b5e8 : add al, 4 ; ret
0x000002000022e534 : add al, 6 ; adc al, byte ptr [rsi] ; sysenter
0x000002000022c63c : add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x000002000025a048 : add al, 6 ; and al, 6 ; sysenter
0x00000200002090ac : add al, 6 ; mov byte ptr [rsi], dl ; sysenter
0x000002000021ec00 : add al, 6 ; or al, 6 ; sysenter
0x000002000024ae2c : add al, 6 ; or al, byte ptr [rsi] ; sysenter
0x0000020000204c90 : add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x0000020000249a50 : add al, 6 ; sbb dword ptr [rsi], eax ; sysenter
0x000002000025a020 : add al, 6 ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0e0 : add al, 6 ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f50 : add al, 6 ; xor byte ptr [rsi], al ; sysenter
0x00000200001a9467 : add al, 8 ; inc dword ptr [r10 + 0xd8] ; ret
0x000002000014a4e2 : add al, 8 ; ret
0x000002000059d7fa : add al, 9 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x0000020000643c45 : add al, 9 ; ret
0x000002000008428f : add al, ah ; ret
0x000002000025e9db : add al, ah ; ret 0x40
0x0000020000077d4f : add al, ah ; ret 0x4040
0x000002000023e45f : add al, ah ; rol dword ptr [rsi], 0x40 ; ret 0x46
0x000002000003cdb5 : add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000047b81 : add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000007203 : add al, al ; add rsp, 0x28 ; ret
0x00000200001b3166 : add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000060cee : add al, al ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000139c30 : add al, al ; add rsp, 0x38 ; ret
0x000002000011c3c4 : add al, al ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001a2625 : add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000013977f : add al, al ; add rsp, 0x48 ; ret
0x00000200001a1c05 : add al, al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000513b73 : add al, al ; add rsp, 0x58 ; ret
0x000002000057260a : add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000570e61 : add al, al ; add rsp, 0xa8 ; ret
0x000002000015b1fe : add al, al ; and dword ptr [r8], 0 ; ret
0x00000200000301ff : add al, al ; call 0x1ffc3042610
0x0000020000056c5d : add al, al ; call 0x1ffc306906e
0x0000020000393981 : add al, al ; call 0x1ffc33a5d91
0x00000200004cf6f1 : add al, al ; call 0x1ffc34e1b00
0x0000020000592ab3 : add al, al ; call 0x2000001ed84
0x0000020000478dea : add al, al ; call 0x200000b5064
0x0000020000632d27 : add al, al ; call 0x2000026f014
0x0000020000227047 : add al, al ; call qword ptr [rdx]
0x000002000018d012 : add al, al ; cld ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf73
0x000002000056eb80 : add al, al ; cmove eax, ecx ; add rsp, 0x28 ; ret
0x000002000049fa07 : add al, al ; cmove eax, esi ; jmp 0x200004bbc53
0x00000200004fe021 : add al, al ; cmovne eax, ecx ; add rsp, 0x28 ; ret
0x00000200000ca965 : add al, al ; cmp eax, ecx ; ja 0x200000ca974 ; ret
0x000002000000e014 : add al, al ; je 0x2000000e021 ; mov al, 1 ; ret
0x00000200000272a4 : add al, al ; je 0x200000272bd ; mov eax, ecx ; ret
0x00000200000e7824 : add al, al ; je 0x200000e7831 ; mov al, 1 ; ret
0x0000020000198eb4 : add al, al ; je 0x20000198ec7 ; mov eax, 1 ; ret
0x00000200004841a3 : add al, al ; je 0x200004841c0 ; mov eax, ebx ; jmp 0x2000048417b
0x00000200001de22d : add al, al ; jmp 0x2000000462d
0x00000200001f7f9a : add al, al ; jmp 0x20000034260
0x00000200001043bb : add al, al ; jmp 0x20000104385
0x00000200001cfd26 : add al, al ; jmp 0x20000143b76
0x0000020000197210 : add al, al ; jmp 0x200001973e2
0x00000200001ba71f : add al, al ; jmp 0x200001ba7e7
0x00000200003684f6 : add al, al ; jmp 0x200003684b9
0x000002000039543d : add al, al ; jmp 0x20000395407
0x00000200003a9397 : add al, al ; jmp 0x200003a9360
0x000002000047895c : add al, al ; jmp 0x200003b8fda
0x00000200003c233e : add al, al ; jmp 0x200003c1b7d
0x00000200003e1b39 : add al, al ; jmp 0x200003e1ada
0x00000200003e286c : add al, al ; jmp 0x200003e2dea
0x00000200003efa3d : add al, al ; jmp 0x200003ebd0b
0x00000200004c124c : add al, al ; jmp 0x200003ed47d
0x0000020000614e13 : add al, al ; jmp 0x2000041103d
0x0000020000504651 : add al, al ; jmp 0x20000417262
0x000002000061ef0e : add al, al ; jmp 0x2000041b141
0x000002000060cbec : add al, al ; jmp 0x20000428e2c
0x00000200005fcc6a : add al, al ; jmp 0x20000468f51
0x00000200004698e3 : add al, al ; jmp 0x20000469884
0x00000200005fffa2 : add al, al ; jmp 0x2000046c1b2
0x000002000049f9c2 : add al, al ; jmp 0x200004bbc50
0x00000200004c53c8 : add al, al ; jmp 0x200004c5391
0x00000200005e7a70 : add al, al ; jmp 0x200004e3d06
0x00000200005eef22 : add al, al ; jmp 0x200004fb1c9
0x00000200004fd927 : add al, al ; jmp 0x200004fd8f1
0x00000200004ffe07 : add al, al ; jmp 0x200004ffdd0
0x0000020000601262 : add al, al ; jmp 0x2000051cbe1
0x0000020000523e71 : add al, al ; jmp 0x20000523e3b
0x000002000055145e : add al, al ; jmp 0x20000551552
0x00000200005857dd : add al, al ; jmp 0x200005858d2
0x00000200005c4da2 : add al, al ; jmp 0x200005c4d6c
0x00000200005c78ae : add al, al ; jmp 0x200005c79a7
0x000002000040eece : add al, al ; jmp 0x2000060f054
0x00000200006c263b : add al, al ; jmp 0x200006c2605
0x00000200005eb535 : add al, al ; mov dword ptr [rsp + 0x60], edi ; jmp 0x20000447798
0x00000200005be126 : add al, al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d225f : add al, al ; mov eax, edx ; jmp 0x200005d226d
0x00000200003920a0 : add al, al ; mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000172b96 : add al, al ; mov eax, r8d ; ret
0x000002000017a47f : add al, al ; mov eax, r8d ; wrmsr ; ret
0x00000200003cb35e : add al, al ; pop rbx ; ret
0x0000020000016b7b : add al, al ; ret
0x000002000025ba8b : add al, al ; ret 0x22
0x00000200002276ab : add al, al ; rol dword ptr [rax + rax], 0x30 ; ret 4
0x0000020000046350 : add al, al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x000002000025baa7 : add al, al ; xchg eax, ebp ; cmp byte ptr [rax], al ; ret
0x00000200001790d4 : add al, al ; xor eax, eax ; ret
0x0000020000225c0f : add al, bh ; call qword ptr [rax]
0x00000200001aff4a : add al, bh ; jg 0x200001aff85 ; ret 0x789
0x00000200001adfd6 : add al, bh ; ret
0x0000020000083857 : add al, bh ; sysenter
0x00000200006e2d36 : add al, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000019ca8f : add al, bl ; add byte ptr [rax], al ; ret
0x00000200001592f1 : add al, bl ; and qword ptr [rdx], 0 ; ret
0x00000200004b7b99 : add al, bl ; mov eax, 0xc000000d ; ret
0x000002000001ab3c : add al, bl ; mov eax, 1 ; ret
0x00000200001b3c27 : add al, bl ; mov qword ptr [rdx], r10 ; ret
0x0000020000163098 : add al, bl ; or dword ptr [rdx], 0xffffffff ; ret
0x000002000002d93e : add al, bl ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000023aa1b : add al, bl ; ret
0x000002000020d2ff : add al, bl ; ret 0x20
0x000002000024c4d3 : add al, bl ; ret 0x4d
0x0000020000084f57 : add al, bl ; ret 0x58aa
0x0000020000228397 : add al, bl ; ret 5
0x000002000025c733 : add al, bl ; xchg byte ptr [rbx], bh ; add ah, dl ; jmp qword ptr [rdx]
0x000002000036d64f : add al, bl ; xor al, al ; ret
0x00000200003f79da : add al, bl ; xor eax, eax ; ret
0x0000020000373495 : add al, bpl ; cmp byte ptr [rip - 0x166f0024], ch ; ret
0x00000200001a2116 : add al, byte ptr [r15 + r9 - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000e1e7b : add al, byte ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003a9df1 : add al, byte ptr [r8] ; add dh, dh ; ret
0x000002000046b1e7 : add al, byte ptr [r9 + 0x22] ; ret 0x3a41
0x00000200003c9b19 : add al, byte ptr [r9 - 0x4d] ; adc byte ptr [rcx + 0x22], al ; ret
0x0000020000025a5d : add al, byte ptr [r9 - 0x75] ; ret 0x41c3
0x00000200000c9352 : add al, byte ptr [r9 - 1] ; ret 0x34c
0x000002000007b7e5 : add al, byte ptr [r9] ; je 0x2000007b7ff ; call 0x20000177a7b
0x00000200004ac725 : add al, byte ptr [r9] ; jne 0x200004ac734 ; xor eax, eax ; ret
0x00000200003c9b2a : add al, byte ptr [rax + rax*8 - 0x3fccfc8b] ; ret
0x0000020000072b0e : add al, byte ptr [rax - 0x7c] ; test byte ptr [rdi], 0x84 ; ret 0xfffd
0x000002000020fd9a : add al, byte ptr [rax] ; add al, 0x16 ; add byte ptr [rsi], al ; ret 0xd90
0x00000200004cf6ef : add al, byte ptr [rax] ; add al, al ; call 0x1ffc34e1b02
0x0000020000592ab1 : add al, byte ptr [rax] ; add al, al ; call 0x2000001ed86
0x000002000014aa55 : add al, byte ptr [rax] ; add al, al ; ret
0x000002000056af65 : add al, byte ptr [rax] ; add al, ch ; push rbx ; ret 0xffb0
0x00000200006355e4 : add al, byte ptr [rax] ; add al, ch ; push rsp ; stosb byte ptr [rdi], al ; ret
0x00000200003eac93 : add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000050988 : add al, byte ptr [rax] ; add bh, bh ; ret 0x8b4c
0x0000020000473db9 : add al, byte ptr [rax] ; add bh, dh ; ret
0x00000200004419fe : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200004c9e17 : add al, byte ptr [rax] ; add bh, dh ; ret 0xfccc
0x0000020000149ec5 : add al, byte ptr [rax] ; add bl, al ; mov eax, 1 ; ret
0x000002000003ff48 : add al, byte ptr [rax] ; add bl, ch ; ret 0xd148
0x00000200006a0a10 : add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200000e8bfe : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000577efc : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x1675
0x00000200003def4e : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000006387f : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200005f0779 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xd74
0x00000200006bd742 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000035fb51 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000007009b : add al, byte ptr [rax] ; add byte ptr [rax + rcx*4 - 0x7d], al ; ret
0x0000020000635423 : add al, byte ptr [rax] ; add byte ptr [rax + rdi + 0x25], al ; ret
0x00000200001bf6e2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000069c294 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x1574
0x0000020000483496 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter -0x5018, 4 ; ret 0x8bff
0x000002000047c334 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter 0x11e8, 0x76 ; ret 0x4dff
0x000002000047c307 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter 0x3ee8, 0x76 ; ret 0xbaff
0x000002000048353a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter 0xbe8, 4 ; ret 0x83ff
0x00000200000bba9d : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000003114a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004d7aee : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3348
0x00000200000173bd : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x528b
0x00000200000da80f : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x80eb
0x00000200003f3632 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret 0xcc64
0x0000020000058f04 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000058f15 ; ret
0x00000200001f9de6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xe1e6
0x00000200003663d2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 2], cl ; ret
0x000002000058e019 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x0000020000011239 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e6617 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200006e8b96 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000200001d0cc3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe840
0x00000200003e134d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004fb0fa : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x00000200004fb0ab : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000056b875 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000020000473391 : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x000002000012642a : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0xc148
0x000002000017dedb : add al, byte ptr [rax] ; add byte ptr [rax - 9], cl ; ret
0x0000020000052ff9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200000212c6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000001e802 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x0000020000127b7b : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200000e0d73 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x0000020000586474 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xaec9
0x0000020000177d58 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039fba7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000489588 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200000b6727
0x000002000064c8a5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x20000198ada
0x000002000038e90d : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200001babe6
0x00000200005d5b17 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x20000441dd6
0x00000200003aaa91 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004860f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x0000020000630b85 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x00000200005c7d39 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000002000039dbce : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x00000200004882a2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x000002000043a97d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000043a94b
0x0000020000608e3d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x20000608e5f
0x000002000043be39 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r11d, dword ptr [rbx - 1] ; jmp 0x2000043be0e
0x0000020000152535 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov cr8, rcx ; ret
0x000002000063129a : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x61], ebx ; call r15
0x000002000006acaa : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdx, rbx ; call 0x200000c6f89
0x0000020000232aa8 : add al, byte ptr [rax] ; add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; sar dword ptr [rax + rax], 0x3e ; ret 0x3c
0x000002000001e298 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000dc88b : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0
0x00000200001edfd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; sbb ecx, ecx ; add eax, ecx ; ret
0x00000200004d8c7c : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200006d06d0 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], cl ; ret
0x00000200000c173d : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; push rsi ; ret
0x000002000041f4d4 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call rax
0x00000200000b1d47 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000003a969 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x000002000046696b : add al, byte ptr [rax] ; add byte ptr [rbp + 0x63], cl ; ret
0x00000200007049c4 : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xff60
0x0000020000199cd1 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb008e], cl ; ret 0xfa8b
0x000002000041c2fa : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000002b3f6 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000044494a : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000bfc2b : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000006a3e5 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x000002000016470d : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7b], al ; ret
0x00000200000b925b : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200003fbdd4 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7c], al ; ror byte ptr [rdi], 0x85 ; cld ; jmp qword ptr [rcx]
0x00000200005baca5 : add al, byte ptr [rax] ; add byte ptr [rbp - 0xd18a40], al ; ret
0x00000200006d517f : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x18] ; call rdi
0x00000200006d55a1 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59f5 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d578e : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x58] ; call rdi
0x0000020000069dc3 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49f00037], al ; ret 0xe280
0x0000020000367f31 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7d7a6], cl ; ret 0x4830
0x00000200004faa0b : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200004b50c0 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0x940f
0x00000200004d145f : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000060e134 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x0000020000421f19 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x0000020000035c15 : add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret
0x000002000005ba7d : add al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0xd233
0x00000200003bcf7c : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; fcomi st(7) ; ret 0xffff
0x0000020000164ae7 : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x00000200006e4269 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x33], cl ; adc dword ptr [rbp + 3], eax ; ret 0x8349
0x0000020000190c41 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret
0x00000200001571df : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x8e0f
0x0000020000145c1d : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004e64dc : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000382ee : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003f8f1b : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000050b1bb : add al, byte ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0x4489
0x000002000050b55f : add al, byte ptr [rax] ; add byte ptr [rcx + 3], al ; ret 0x4566
0x000002000001c8d8 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x6d], cl ; cmp dh, dh ; ret
0x00000200004b1a6c : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x40 ; inc edx ; jmp 0x200004b1a37
0x0000020000442075 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*8 - 0x74b3bd8c], al ; ret 0xc2f6
0x00000200003fa057 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*8 - 0x74b3e78c], al ; ret 0xc2f6
0x000002000019fa6c : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x000002000035ee56 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000135939 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; fmul qword ptr [rax + 0x33] ; ret 0x8b49
0x0000020000426e52 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000054299
0x000002000006a3f1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200000aaa5e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200001339e5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x00000200000f464e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8b48
0x0000020000053fb8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200006c016c : add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x00000200004d8313 : add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200000bf25c : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x200000bf26d ; xor al, al ; ret
0x00000200000bf25b : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x200000bf26e ; xor al, al ; ret
0x00000200001babc6 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000045ef1a : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200003b7d40 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004223ef : add al, byte ptr [rax] ; add byte ptr [rdi + 2], dh ; ret
0x0000020000394b6a : add al, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003ccd17 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000040541c : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b4c
0x00000200001a0ed2 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; xor ecx, dword ptr [rax - 1] ; ret
0x00000200000254fb : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000067a0a : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0xab ; ret
0x00000200004319fb : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov edx, 0x820f15e2 ; ret
0x000002000063393a : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg dword ptr [rsi], ebp ; in eax, dx ; call rcx
0x00000200000d104b : add al, byte ptr [rax] ; add byte ptr [rdx + 0x6215ff01], dh ; ret
0x00000200001630f4 : add al, byte ptr [rax] ; add byte ptr [rdx - 0x1b], dh ; xor eax, eax ; ret
0x00000200003fee3f : add al, byte ptr [rax] ; add byte ptr [rdx], al ; add ebx, ebp ; ret
0x00000200000bdbf7 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x0000020000054b9f : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x000002000004aee3 : add al, byte ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001ee5b4 : add al, byte ptr [rax] ; add cl, ch ; ret
0x0000020000011b4d : add al, byte ptr [rax] ; add cl, ch ; ret 0xfff6
0x00000200000294ff : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003e4d5b : add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x00000200004c6dfe : add al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x0000020000051f11 : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000105978 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004e1e36 : add al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004311ea : add al, byte ptr [rax] ; add rsp, 0x88 ; ret
0x00000200006430a5 : add al, byte ptr [rax] ; and dword ptr [rip + 0x27ffe], 0 ; ret
0x00000200001eea03 : add al, byte ptr [rax] ; jmp 0x200000aacb0
0x00000200000e5062 : add al, byte ptr [rax] ; jmp 0x200000e4aeb
0x00000200004024c9 : add al, byte ptr [rax] ; jmp 0x200004023ed
0x000002000040ff18 : add al, byte ptr [rax] ; jmp 0x2000040fe8f
0x0000020000116a9e : add al, byte ptr [rax] ; jne 0x200001eea15 ; ret
0x000002000016c0e4 : add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000049c0b : add al, byte ptr [rax] ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006405ae : add al, byte ptr [rax] ; mov dword ptr [r10 + r9*4], r8d ; mov eax, r8d ; ret
0x00000200004f3340 : add al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000058624b : add al, byte ptr [rax] ; mov ebx, eax ; jmp 0x2000058625f
0x0000020000641dad : add al, byte ptr [rax] ; mov qword ptr [rax], r8 ; mov al, 1 ; ret
0x0000020000641d57 : add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200005d5b87 : add al, byte ptr [rax] ; mov rcx, qword ptr [rsp + 0x60] ; call 0x20000441dd9
0x0000020000588537 : add al, byte ptr [rax] ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000585ce3 : add al, byte ptr [rax] ; nop ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000dd6bd : add al, byte ptr [rax] ; nop ; mov ecx, 0xd000dc3 ; ret 0xd
0x00000200000e1a84 : add al, byte ptr [rax] ; or edx, eax ; xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x000002000064305f : add al, byte ptr [rax] ; ret
0x00000200000a977e : add al, byte ptr [rax] ; rol bl, 0x33 ; rol byte ptr [rcx - 0x77], 2 ; ret
0x00000200005c1954 : add al, byte ptr [rax] ; rol bl, 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000056ccc5 : add al, byte ptr [rax] ; rol bl, 0x4c ; mov dword ptr [rcx], ecx ; ret
0x00000200000272ad : add al, byte ptr [rax] ; rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x0000020000572609 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000572676 ; ret
0x00000200001a2624 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200005e7a6f : add al, byte ptr [rax] ; shr cl, 0x8b ; ret 0xffef
0x0000020000605dac : add al, byte ptr [rax] ; shr cl, 0x99 ; ret
0x0000020000029b6d : add al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000615de1 : add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x0000020000665a76 : add al, byte ptr [rbp + 0x58bffc2] ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x89ff
0x00000200004c5486 : add al, byte ptr [rbp + 3] ; ret 0x3b45
0x0000020000459f3a : add al, byte ptr [rbp - 0x75] ; ret
0x00000200003b0112 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003b013e ; xor eax, eax ; ret
0x00000200003b0111 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003b013f ; xor eax, eax ; ret
0x00000200003fda42 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003fda5f ; xor eax, eax ; ret
0x00000200003fda41 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200003fda60 ; xor eax, eax ; ret
0x000002000015311b : add al, byte ptr [rbx + rdi - 0x40] ; jne 0x2000015312e ; or eax, 0xffffffff ; ret
0x00000200005d2f0d : add al, byte ptr [rbx + rdi] ; ret
0x0000020000466d40 : add al, byte ptr [rbx - 0x1f7cfc40] ; cld ; add eax, edx ; ret
0x0000020000061982 : add al, byte ptr [rbx - 0x7cb6ff30] ; ret 0xff02
0x00000200006d3339 : add al, byte ptr [rbx - 0x7cb7073f] ; ret 0x4808
0x00000200005bb537 : add al, byte ptr [rbx - 0xf8dd608] ; or eax, 0xffffffff ; ret
0x0000020000576d4a : add al, byte ptr [rbx] ; add eax, 0xffd27e43 ; ret
0x000002000003a1b6 : add al, byte ptr [rbx] ; ret 0xba0f
0x00000200004c2d3e : add al, byte ptr [rbx] ; rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x0000020000060e99 : add al, byte ptr [rcx + 0x22] ; ret
0x000002000046b1e8 : add al, byte ptr [rcx + 0x22] ; ret 0x3a41
0x00000200001c6cd1 : add al, byte ptr [rcx + 0x23] ; ret
0x0000020000615df8 : add al, byte ptr [rcx + 0x23] ; ret 0x8b44
0x0000020000615d7e : add al, byte ptr [rcx + 0x23] ; ret 0x8d45
0x00000200001a1712 : add al, byte ptr [rcx + 0x33] ; ret 0x4974
0x00000200001a16f0 : add al, byte ptr [rcx + 0x33] ; ret 0x6b74
0x00000200001965ec : add al, byte ptr [rcx + 0x3a] ; ret
0x0000020000365ffb : add al, byte ptr [rcx + 0x3b] ; ret
0x00000200003d88d2 : add al, byte ptr [rcx + 0x3b] ; sal byte ptr [rdx - 0x17], 1 ; shr rax, 1 ; ret
0x00000200006be6af : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc ; adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000001ef83 : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc3 ; add rsp, 0x38 ; ret
0x000002000058f666 : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000003ff79 : add al, byte ptr [rcx + 0xf] ; mov dh, 0xc ; adc dword ptr [rax - 1], ecx ; ret 0x8841
0x00000200001f70d6 : add al, byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000002000050b7a8 : add al, byte ptr [rcx + 3] ; ret
0x000002000058f287 : add al, byte ptr [rcx - 0x3a] ; add al, 0x3b ; add dword ptr [rcx - 1], ecx ; ret
0x00000200003c9b1a : add al, byte ptr [rcx - 0x4d] ; adc byte ptr [rcx + 0x22], al ; ret
0x000002000006febe : add al, byte ptr [rcx - 0x75] ; and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x00000200000204dd : add al, byte ptr [rcx - 0x75] ; ret
0x0000020000025a5e : add al, byte ptr [rcx - 0x75] ; ret 0x41c3
0x00000200005997a8 : add al, byte ptr [rcx - 0x75] ; ret 0x90c3
0x0000020000617b25 : add al, byte ptr [rcx - 0x75] ; ret 0xff48
0x0000020000002da0 : add al, byte ptr [rcx - 0x76] ; add dword ptr [rax - 0x7d], ecx ; ret 0x8808
0x000002000051118c : add al, byte ptr [rcx - 0x76] ; shl byte ptr [rbx + rax], 0x3a ; ret 0x1275
0x000002000038717d : add al, byte ptr [rcx - 0x7b] ; ret
0x0000020000036e27 : add al, byte ptr [rcx - 0x7c] ; ret
0x00000200005af86a : add al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000002000058eceb : add al, byte ptr [rcx - 0x7d] ; ret 0xeb24
0x0000020000597c04 : add al, byte ptr [rcx - 0xa] ; ret
0x000002000019c096 : add al, byte ptr [rcx - 1] ; enter -0xf87, -0x75 ; ret 0x41c3
0x0000020000466e34 : add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200000c9353 : add al, byte ptr [rcx - 1] ; ret 0x34c
0x000002000017a47d : add al, byte ptr [rcx] ; add al, al ; mov eax, r8d ; wrmsr ; ret
0x000002000007b7e6 : add al, byte ptr [rcx] ; je 0x2000007b7fe ; call 0x20000177a7a
0x00000200003fee42 : add al, byte ptr [rcx] ; jmp 0x200003fee0c
0x00000200004ac726 : add al, byte ptr [rcx] ; jne 0x200004ac733 ; xor eax, eax ; ret
0x000002000004255c : add al, byte ptr [rdi + rcx + 0x20] ; ret
0x0000020000360a58 : add al, byte ptr [rdi + rcx + 0x22] ; ret
0x0000020000125566 : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x000002000001b2d8 : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x5f7
0x00000200003a6245 : add al, byte ptr [rdi + rcx + 0x44] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001a2117 : add al, byte ptr [rdi + rcx - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005a459f : add al, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200005a4599
0x0000020000580a4a : add al, byte ptr [rdx + rsi*4 - 1] ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000c1188 : add al, byte ptr [rdx] ; add cl, ch ; ret 0xfff9
0x000002000006b25c : add al, byte ptr [rdx] ; movzx eax, cx ; add rsp, 0x38 ; ret
0x0000020000216210 : add al, byte ptr [rsi] ; adc al, 6 ; sysenter
0x000002000024882c : add al, byte ptr [rsi] ; adc al, byte ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000021ecbc : add al, byte ptr [rsi] ; adc al, byte ptr [rsi] ; sysenter
0x00000200002217d4 : add al, byte ptr [rsi] ; adc eax, dword ptr [rsi] ; sysenter
0x0000020000216a60 : add al, byte ptr [rsi] ; add byte ptr [rsi], 0xf ; or al, byte ptr fs:[rax] ; sysenter
0x00000200002120a0 : add al, byte ptr [rsi] ; add dword ptr [rsi], 0xd640f ; sysenter
0x000002000021ecac : add al, byte ptr [rsi] ; add eax, dword ptr [rsi] ; sysenter
0x0000020000254d1c : add al, byte ptr [rsi] ; clts ; sysenter
0x000002000023166c : add al, byte ptr [rsi] ; cmp byte ptr [rsi], al ; sysenter
0x000002000019bf5e : add al, byte ptr [rsi] ; je 0x2000019bf6b ; xor al, al ; ret
0x00000200000234eb : add al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x0000020000250bc4 : add al, byte ptr [rsi] ; or al, 6 ; sysenter
0x0000020000244aa8 : add al, byte ptr [rsi] ; or al, byte ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x0000020000255d2c : add al, byte ptr [rsi] ; or al, byte ptr [rsi] ; sysenter
0x00000200002178f4 : add al, byte ptr [rsi] ; or byte ptr [rsi], al ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000020482c : add al, byte ptr [rsi] ; or byte ptr [rsi], al ; sysenter
0x0000020000241f44 : add al, byte ptr [rsi] ; or dword ptr [rsi], eax ; sysenter
0x0000020000251c58 : add al, byte ptr [rsi] ; or eax, dword ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000022ad40 : add al, byte ptr [rsi] ; or eax, dword ptr [rsi] ; sysenter
0x000002000021856c : add al, byte ptr [rsi] ; ret 0xf06
0x000002000022f064 : add al, byte ptr [rsi] ; sbb byte ptr [rsi], al ; sysenter
0x0000020000144cfc : add al, byte ptr [rsi] ; setbe al ; ret
0x0000020000204f78 : add al, byte ptr [rsi] ; sub eax, dword ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x0000020000239054 : add al, byte ptr [rsi] ; xor dword ptr [rsi], eax ; sysenter
0x00000200000dcfe3 : add al, byte ptr es:[rax] ; add dh, dh ; ret
0x000002000018e6c2 : add al, byte ptr ss:[rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006f3fb9 : add al, ch ; add dword ptr [rdx], esi ; cwde ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004c2635 : add al, ch ; add eax, 0x8bffbb08 ; ret
0x000002000052a926 : add al, ch ; and al, 0xa ; ret
0x0000020000403d89 : add al, ch ; and dword ptr [rdx], eax ; ret 0xebff
0x00000200003b7eaf : add al, ch ; call qword ptr [rbx]
0x00000200003bd7cb : add al, ch ; call qword ptr [rsi]
0x00000200000472fb : add al, ch ; call rdi
0x000002000038e941 : add al, ch ; cdq ; ret 0xffe2
0x00000200005e0040 : add al, ch ; cli ; ret 0xffa9
0x0000020000508268 : add al, ch ; cmc ; ret
0x00000200003df2e1 : add al, ch ; cmc ; xchg eax, ebx ; ret 0xebff
0x000002000045ff02 : add al, ch ; cmp byte ptr [rdi], ch ; sar edi, -0x75 ; ret
0x0000020000373496 : add al, ch ; cmp byte ptr [rip - 0x166f0024], ch ; ret
0x00000200003f5672 : add al, ch ; cmp cl, ch ; ret 0xe9ff
0x0000020000481630 : add al, ch ; fidivr dword ptr [rcx] ; ret
0x000002000053d94c : add al, ch ; fimul word ptr [rbx] ; ret 0x4dff
0x0000020000471cef : add al, ch ; fistp dword ptr [rbp - 0x3b] ; push rsi ; ret
0x0000020000120f6c : add al, ch ; fisub word ptr [rcx] ; lock inc dword ptr [rcx + 0x3b] ; ret
0x0000020000134c0e : add al, ch ; in al, dx ; ret
0x0000020000123aba : add al, ch ; insb byte ptr [rdi], dx ; ret 0xfffa
0x00000200000312aa : add al, ch ; insb byte ptr [rdi], dx ; ret 7
0x00000200003f436d : add al, ch ; int 0xea
0x00000200001f7fc9 : add al, ch ; int1 ; int1 ; out -1, eax ; nop ; jmp 0x20000034254
0x000002000044426b : add al, ch ; iretd ; jmp 0x20000444236
0x00000200004e1efc : add al, ch ; jb 0x200004e1f40 ; ret 0x48ff
0x000002000014f144 : add al, ch ; jbe 0x2000014f0cd ; jmp qword ptr [rcx]
0x00000200001e9592 : add al, ch ; je 0x200001e9618 ; loop 0x200001e95a0 ; nop ; jmp 0x200000d5877
0x00000200001e9dc6 : add al, ch ; je 0x200001e9df7 ; jmp 0x1ffc3aa6ad6
0x00000200000e39db : add al, ch ; jg 0x200000e3a51 ; std ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000048277e : add al, ch ; jl 0x200004827f9 ; ret
0x00000200003e8437 : add al, ch ; jmp qword ptr [rax]
0x000002000037e3cb : add al, ch ; jmp rsi
0x00000200004e8cbb : add al, ch ; jmp rsp
0x000002000042eefa : add al, ch ; jo 0x2000042ef3d ; ret
0x00000200005aadf1 : add al, ch ; leave ; ret
0x00000200001dca81 : add al, ch ; leave ; ret 0xfff1
0x00000200005eb747 : add al, ch ; mov bl, 0x1f ; scasd eax, dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x000002000006e901 : add al, ch ; mov cl, 0xf1 ; std ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000171ce1 : add al, ch ; mov ebp, 0x8b001fa4 ; ret
0x000002000061977d : add al, ch ; mov ebp, 0x8bffa596 ; ret
0x000002000042ee0d : add al, ch ; mov ebp, 0x8bffffae ; ret
0x0000020000139d8d : add al, ch ; mov ebp, 0xf6fff69b ; ret
0x00000200003f3480 : add al, ch ; mov edx, 0x8bffc7f9 ; ret
0x00000200001e818e : add al, ch ; mov esp, 0x90fffa0b ; jmp 0x200000c4448
0x000002000010e7e0 : add al, ch ; mul byte ptr [rax - 0x74b70003] ; ret
0x0000020000522ee4 : add al, ch ; or bh, byte ptr [rax - 0x8047401] ; ret
0x00000200006300f2 : add al, ch ; or byte ptr [rsi - 0x61], ch ; call qword ptr [rax - 0x2afd3d17]
0x0000020000482890 : add al, ch ; push 0x72 ; ret
0x0000020000526612 : add al, ch ; push rax ; ret
0x000002000056af67 : add al, ch ; push rbx ; ret 0xffb0
0x0000020000548c93 : add al, ch ; push rdi ; ret 6
0x0000020000168860 : add al, ch ; push rdx ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000064adfc : add al, ch ; push rdx ; ret 0x48ff
0x00000200006355e6 : add al, ch ; push rsp ; stosb byte ptr [rdi], al ; ret
0x0000020000058137 : add al, ch ; ret
0x000002000002beb4 : add al, ch ; ret 0x1941
0x00000200000d4a38 : add al, ch ; ret 0x1e8
0x00000200000d1ff8 : add al, ch ; ret 0x202
0x000002000025c227 : add al, ch ; ret 0x22
0x00000200000f5f88 : add al, ch ; ret 0x2d
0x0000020000185558 : add al, ch ; ret 0x3a7
0x000002000069ce78 : add al, ch ; ret 0x41
0x00000200000644e8 : add al, ch ; ret 0x592
0x00000200003c67e8 : add al, ch ; ret 0x81e
0x00000200000536d8 : add al, ch ; ret 0xa15
0x00000200005bee0c : add al, ch ; ret 0xa95c
0x00000200005441e8 : add al, ch ; ret 0xadfd
0x0000020000533194 : add al, ch ; ret 0xae4e
0x0000020000569408 : add al, ch ; ret 0xae55
0x000002000058c808 : add al, ch ; ret 0xae6d
0x0000020000588e68 : add al, ch ; ret 0xb2b4
0x0000020000540c98 : add al, ch ; ret 0xb77e
0x00000200004c5dd8 : add al, ch ; ret 0xb9e3
0x00000200005966b8 : add al, ch ; ret 0xbb17
0x00000200004c8d78 : add al, ch ; ret 0xbb35
0x0000020000531fd4 : add al, ch ; ret 0xc04d
0x00000200003960f8 : add al, ch ; ret 0xc54
0x00000200003a8fb0 : add al, ch ; ret 0xc787
0x00000200003f4278 : add al, ch ; ret 0xc7eb
0x00000200003caa08 : add al, ch ; ret 0xc83f
0x00000200006c2d68 : add al, ch ; ret 0xcbf3
0x00000200003b7af8 : add al, ch ; ret 0xcbf6
0x0000020000597e78 : add al, ch ; ret 0xcd81
0x00000200006ed258 : add al, ch ; ret 0xd044
0x00000200006f63b4 : add al, ch ; ret 0xd450
0x000002000045ed78 : add al, ch ; ret 0xe112
0x000002000038e818 : add al, ch ; ret 0xe2c3
0x00000200005b3f4c : add al, ch ; ret 0xe57f
0x00000200001ffbf8 : add al, ch ; ret 0xef26
0x000002000055b534 : add al, ch ; ret 0xf2a3
0x00000200001799b8 : add al, ch ; ret 0xf2b4
0x00000200001ef988 : add al, ch ; ret 0xfa28
0x00000200001c036c : add al, ch ; ret 0xfb32
0x00000200001bef48 : add al, ch ; ret 0xfb46
0x00000200001fe434 : add al, ch ; ret 0xfc18
0x00000200001fd0b4 : add al, ch ; ret 0xfc2f
0x00000200000f6714 : add al, ch ; ret 0xff21
0x00000200006d0b48 : add al, ch ; ret 0xffa4
0x00000200005dd8b5 : add al, ch ; ret 0xffad
0x000002000064c8a8 : add al, ch ; ret 0xffb4
0x00000200003b8c54 : add al, ch ; ret 0xffce
0x0000020000661c48 : add al, ch ; ret 0xfff3
0x00000200005a5f8c : add al, ch ; ret 2
0x0000020000108306 : add al, ch ; rol byte ptr [rip - 0x74b70002], 1 ; ret
0x0000020000466979 : add al, ch ; ror edi, 1 ; ret
0x0000020000499922 : add al, ch ; sbb byte ptr [rsi], al ; ret 0xf0ff
0x000002000056f20c : add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000200001e96db : add al, ch ; scasd eax, dword ptr [rdi] ; test dh, cl ; call qword ptr [rax - 0x113dc417]
0x00000200004365d4 : add al, ch ; stosb byte ptr [rdi], al ; ret
0x000002000044774f : add al, ch ; stosd dword ptr [rdi], eax ; pop rdi ; leave ; push qword ptr [rdx] ; ret
0x00000200006c0092 : add al, ch ; sub byte ptr [rcx - 0x65], dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000e2b87 : add al, ch ; xchg eax, ebx ; ret 0xfffc
0x00000200004e80dd : add al, ch ; xchg eax, ecx ; ret
0x0000020000651b5f : add al, ch ; xchg eax, edi ; ret 0xffff
0x00000200000c8866 : add al, ch ; xchg eax, esp ; ret 0xfff9
0x00000200003df28b : add al, ch ; xchg rax, r12 ; ret 0xbbff
0x0000020000389b23 : add al, ch ; xlatb ; call rdx
0x0000020000539683 : add al, ch ; xlatb ; ret 0xffbc
0x0000020000545bc5 : add al, cl ; call 0x20025168dd3
0x000002000013b31a : add al, cl ; call 0x20074d63729
0x00000200001c60b8 : add al, cl ; clc ; or byte ptr [rcx - 0x7d], cl ; ret 0x4102
0x000002000023aa0f : add al, cl ; ret
0x000002000025fdfb : add al, cl ; ret 0x24
0x0000020000264513 : add al, dh ; add edx, dword ptr [rdx] ; ret
0x00000200004aeef7 : add al, dh ; bts qword ptr [rcx], 0 ; jb 0x200004aef0a ; ret
0x00000200001537e4 : add al, dh ; dec dword ptr [rcx] ; ret
0x000002000035fee8 : add al, dh ; inc dword ptr [r8] ; ret
0x0000020000149ec0 : add al, dh ; inc dword ptr [rax + 0x200] ; ret
0x0000020000070478 : add al, dh ; jg 0x20000070494 ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000c3bc0 : add al, dh ; jg 0x200000c3bdc ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000c4a8c : add al, dh ; jg 0x200000c4aa8 ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000c632e : add al, dh ; jg 0x200000c634a ; mov edx, 0x8b441fea ; ret 0x8141
0x0000020000223b4b : add al, dh ; ret
0x000002000020d313 : add al, dh ; ret 0x20
0x000002000026dcf3 : add al, dh ; ret 0x6c
0x0000020000234fd7 : add al, dh ; xor byte ptr [rbp], bl ; ret 0x3efb
0x00000200000fa8c0 : add al, dl ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000af440 : add al, dl ; ret
0x0000020000226887 : add al, dl ; ret 0x11
0x00000200006ba087 : add al, dl ; ret 0x4009
0x000002000025e9da : add al, spl ; ret 0x40
0x00000200000bf299 : add ax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x000002000040cb2d : add ax, word ptr [rax] ; add dh, dh ; ret 0x7503
0x00000200005204ba : add bh, ah ; ret 0x48ff
0x0000020000543925 : add bh, al ; add dword ptr [rbp + 0x63], eax ; jo 0x20000543981 ; xor eax, eax ; ret
0x00000200006f8ac8 : add bh, al ; add eax, 0xffb912a9 ; push rax ; ret
0x0000020000501eea : add bh, al ; add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004b258f : add bh, al ; call qword ptr [r8]
0x0000020000557c55 : add bh, al ; ret
0x00000200001baf7c : add bh, bh ; adc al, 0xc8 ; add rsp, 0x28 ; ret
0x00000200000a6ead : add bh, bh ; adc eax, 0x2a651c ; jmp 0x200000a6e80
0x0000020000074d67 : add bh, bh ; adc ebx, edi ; ret
0x000002000019bf67 : add bh, bh ; add byte ptr [rax], al ; setbe al ; ret
0x000002000064e427 : add bh, bh ; add eax, 0x1cede ; xor eax, eax ; ret
0x000002000004c700 : add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xc148
0x000002000018e743 : add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x00000200003caa5e : add bh, bh ; dec dword ptr [rbx + 0x23db33c1] ; ret 0xf883
0x000002000014ac07 : add bh, bh ; enter 0x33c3, -0x40 ; ret
0x00000200001b14a3 : add bh, bh ; jmp qword ptr [rbx]
0x000002000008b947 : add bh, bh ; jmp qword ptr [rcx]
0x0000020000710e3e : add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000002c42 : add bh, bh ; ret
0x000002000058b863 : add bh, bh ; ret 0x141
0x0000020000009c7d : add bh, bh ; ret 0x1589
0x000002000000d68b : add bh, bh ; ret 0x1bd
0x00000200000c564c : add bh, bh ; ret 0x348
0x00000200000521fa : add bh, bh ; ret 0x349
0x00000200000d92b3 : add bh, bh ; ret 0x428d
0x000002000058ed2f : add bh, bh ; ret 0x49e8
0x0000020000037603 : add bh, bh ; ret 0x5189
0x00000200000da606 : add bh, bh ; ret 0x5489
0x0000020000009c04 : add bh, bh ; ret 0x8348
0x000002000010c188 : add bh, bh ; ret 0x8349
0x00000200000720bb : add bh, bh ; ret 0x854d
0x000002000002b3a8 : add bh, bh ; ret 0x8948
0x000002000005098a : add bh, bh ; ret 0x8b4c
0x0000020000385214 : add bh, bh ; ret 0x9489
0x0000020000642cc8 : add bh, bh ; ret 0xb983
0x00000200004adbd1 : add bh, bh ; ret 0xca2b
0x00000200003a3fd4 : add bh, bh ; ret 0xd53b
0x000002000038eea5 : add bh, bh ; ret 0xd7eb
0x000002000019d8b9 : add bh, bh ; ret 0xebe9
0x00000200001b4149 : add bh, bh ; ret 0xf983
0x00000200000507b2 : add bh, bh ; ret 0xff49
0x00000200004de486 : add bh, bh ; retf 0xb75 ; mov ebx, edi ; call 0x2000014a791
0x000002000014ae51 : add bh, bh ; rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000200001adf19 : add bh, bh ; ror byte ptr [rax - 0x73], 0x71 ; add al, 0x3b ; ret 0x470f
0x000002000053c803 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x000002000053c82d : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x000002000013630b : add bh, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008287f : add bh, bl ; ret
0x000002000020d233 : add bh, bl ; ror dword ptr [rbx], 1 ; add byte ptr [rax], cl ; ret 0x20
0x000002000015c0e3 : add bh, byte ptr [rax + 1] ; ret
0x000002000002dc74 : add bh, byte ptr [rax - 0x3fffff6b] ; ret
0x0000020000467295 : add bh, byte ptr [rbp - 0x20] ; xor al, al ; add rsp, 0x38 ; ret
0x0000020000555d25 : add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200005776b1 : add bh, byte ptr [rbx] ; ret 0x870f
0x0000020000555a09 : add bh, byte ptr [rbx] ; ror dword ptr [rdi], -0x7e ; ret 5
0x00000200000b517f : add bh, byte ptr [rdx + rax - 0xd] ; ret
0x00000200004adbcf : add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x0000020000504b9c : add bh, byte ptr [rdx - 0x3b7cb701] ; ret
0x0000020000144333 : add bh, ch ; ret
0x000002000008333f : add bh, dh ; jl 0x200000833ac ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000d4f86 : add bh, dh ; jmp 0x200000d4f4f
0x00000200004273e5 : add bh, dh ; jmp 0x200004272dc
0x00000200000be8e4 : add bh, dh ; ret
0x0000020000441a00 : add bh, dh ; ret 0
0x000002000037a7d1 : add bh, dh ; ret 0x402
0x00000200001963a6 : add bh, dh ; ret 0x5f8a
0x0000020000485082 : add bh, dh ; ret 0x6000
0x00000200000dd0d3 : add bh, dh ; ret 0x7000
0x0000020000418a0d : add bh, dh ; ret 0xf838
0x00000200004c9e19 : add bh, dh ; ret 0xfccc
0x000002000039cc6a : add bh, dh ; ret 0xfeaf
0x0000020000367daf : add bh, dh ; ret 0xfff
0x00000200004d1916 : add bh, dh ; ret 0xfffc
0x00000200000bfc81 : add bh, dh ; shl byte ptr [rbx], 1 ; ret
0x0000020000255203 : add bh, dl ; ret 0x58
0x00000200000dd68f : add bh, dl ; ret 0xd
0x0000020000134548 : add bl, 0 ; add byte ptr [rax], al ; jle 0x2000013455b ; mov al, 1 ; ret
0x00000200002273f4 : add bl, 0x11 ; add al, dl ; ret
0x000002000022c050 : add bl, 0x37 ; add byte ptr [rax - 0x7fffa2cd], al ; ret
0x0000020000438f0f : add bl, 0xff ; jmp 0x20000438ea9
0x0000020000596dfd : add bl, ah ; dec dword ptr [rax + 0x3b] ; ret 0x977
0x00000200001ab3aa : add bl, al ; and dword ptr [rdx + 0x18], 0 ; ret
0x00000200000e9846 : add bl, al ; and r8d, 0xfffffff7 ; mov eax, r8d ; ret
0x0000020000101434 : add bl, al ; cmp ecx, 0x10 ; je 0x2000010141a ; ret
0x0000020000188c54 : add bl, al ; dec dword ptr [rax + 0x1ee8] ; ret
0x00000200003c06ae : add bl, al ; dec edx ; je 0x200003c06bf ; xor eax, eax ; ret
0x0000020000198ed9 : add bl, al ; inc dword ptr [rcx + 0x248] ; ret
0x00000200001857e1 : add bl, al ; jae 0x200001857ee ; xor eax, eax ; ret
0x0000020000076fec : add bl, al ; jmp rax
0x000002000038d41a : add bl, al ; lea rax, qword ptr [rip + 0xc37bd] ; ret
0x000002000038d412 : add bl, al ; lea rax, qword ptr [rip + 0xc37d5] ; ret
0x000002000038d422 : add bl, al ; lea rax, qword ptr [rip + 0xc37f5] ; ret
0x0000020000021e6e : add bl, al ; lea rax, qword ptr [rip + 0xdbd79] ; ret
0x0000020000021e4d : add bl, al ; lea rax, qword ptr [rip + 0xdbfca] ; ret
0x0000020000021db1 : add bl, al ; lea rax, qword ptr [rip + 0xdc026] ; ret
0x0000020000021e0e : add bl, al ; lea rax, qword ptr [rip + 0xdc029] ; ret
0x0000020000021e06 : add bl, al ; lea rax, qword ptr [rip + 0xdc0a1] ; ret
0x0000020000021e16 : add bl, al ; lea rax, qword ptr [rip + 0xdc0f1] ; ret
0x0000020000021e2b : add bl, al ; lea rax, qword ptr [rip + 0xdc0fc] ; ret
0x0000020000021db9 : add bl, al ; lea rax, qword ptr [rip + 0xdc12e] ; ret
0x0000020000417625 : add bl, al ; mov al, 6 ; ret
0x00000200001c50f2 : add bl, al ; mov al, dl ; movzx edx, cx ; out dx, al ; ret
0x00000200001009e9 : add bl, al ; mov byte ptr [rip + 0x1e7373], dl ; ret
0x00000200001009ca : add bl, al ; mov byte ptr [rip + 0x1e7393], dl ; ret
0x0000020000708166 : add bl, al ; mov eax, 0x1000 ; ret
0x0000020000132b18 : add bl, al ; mov eax, 0x7d0 ; ret
0x000002000010a987 : add bl, al ; mov eax, 0xa ; ret
0x000002000037f3d1 : add bl, al ; mov eax, 0xc0000001 ; ret
0x000002000064cf58 : add bl, al ; mov eax, 0xc0000002 ; ret
0x000002000017411a : add bl, al ; mov eax, 0xc0000225 ; ret
0x0000020000023017 : add bl, al ; mov eax, 1 ; ret
0x000002000002301d : add bl, al ; mov eax, 2 ; ret
0x000002000010a8e1 : add bl, al ; mov eax, 3 ; ret
0x000002000010a8d5 : add bl, al ; mov eax, 4 ; ret
0x000002000010a978 : add bl, al ; mov eax, 5 ; ret
0x000002000010a8db : add bl, al ; mov eax, 7 ; ret
0x000002000012610c : add bl, al ; mov eax, edx ; ret
0x00000200000517ae : add bl, al ; mov rax, qword ptr [rcx + 0x1c8] ; ret
0x00000200000dfaca : add bl, al ; mov rax, qword ptr [rcx + 0x3e8] ; ret
0x0000020000197535 : add bl, al ; nop ; mov al, byte ptr [rcx + 0x447] ; ret
0x000002000019753d : add bl, al ; nop ; mov eax, dword ptr [rcx + 0x1e0] ; ret
0x0000020000140139 : add bl, al ; or eax, 0xffffffff ; ret
0x0000020000257cf7 : add bl, al ; ret
0x00000200004f32b2 : add bl, al ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000005afa3 : add bl, al ; sub qword ptr [rip + 0x244104], rdx ; ret
0x000002000041c315 : add bl, al ; test eax, eax ; jne 0x2000041c309 ; xor eax, eax ; ret
0x0000020000231093 : add bl, al ; xchg eax, edx ; cmp eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004e4526 : add bl, al ; xchg qword ptr [rip - 0x263737], rcx ; ret
0x000002000000e6ab : add bl, al ; xor eax, eax ; ret
0x00000200000c0283 : add bl, bh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001803e2 : add bl, bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000153b55 : add bl, bh ; mov eax, ecx ; ret
0x0000020000076c25 : add bl, bh ; ret
0x000002000007c98f : add bl, bl ; loop 0x2000007c934 ; fnstcw word ptr [rcx] ; ret
0x000002000025520b : add bl, bl ; ret 0x58
0x000002000039d626 : add bl, bpl ; ret 0x3c7
0x0000020000250fec : add bl, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x18061b06 ; ret 0xf011
0x000002000022eb54 : add bl, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x18063406 ; ret 0xf011
0x000002000022d300 : add bl, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x1806de06 ; ret 0xf011
0x0000020000245ce4 : add bl, byte ptr [rbx] ; or eax, dword ptr [rax] ; or eax, 0x1b06b606 ; ret 0xf017
0x0000020000154ecb : add bl, byte ptr [rcx + rcx*2 - 1] ; ret 0x8b48
0x0000020000255318 : add bl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x1f46a006 ; ret 0xf01b
0x0000020000213e48 : add bl, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x1a062d06 ; ret 0xf016
0x0000020000243448 : add bl, byte ptr [rsi] ; or eax, dword ptr [rax] ; or eax, 0x1e06b606 ; ret 0xf01a
0x00000200001627e4 : add bl, ch ; adc dh, dh ; ret 0x7402
0x00000200001f642a : add bl, ch ; adc dh, dh ; ret 0xf03
0x000002000052a490 : add bl, ch ; add eax, 0x8bf38a40 ; ret
0x000002000060cd81 : add bl, ch ; add eax, 0xe1b70ce9 ; push rdi ; ret
0x000002000064ca12 : add bl, ch ; add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x00000200005c9024 : add bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003ce4e4 : add bl, ch ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000197c85 : add bl, ch ; and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret
0x00000200001f6a82 : add bl, ch ; and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret 0x8b45
0x0000020000589ff6 : add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x000002000058a212 : add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200001a1b53 : add bl, ch ; call 0x200001ad71a
0x00000200004664df : add bl, ch ; fiadd dword ptr [rcx - 1] ; ret
0x00000200003be55d : add bl, ch ; fld qword ptr [rcx - 1] ; ret 0x8944
0x000002000001bd7b : add bl, ch ; fmul st(4) ; nop ; lock dec dword ptr [r8] ; ret
0x000002000047c0c9 : add bl, ch ; fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x00000200005122e9 : add bl, ch ; idiv dword ptr [rax - 0x3ffffff3] ; ret
0x0000020000487494 : add bl, ch ; in eax, -0x75 ; ret
0x000002000037ebda : add bl, ch ; int1 ; xor eax, eax ; ret
0x00000200001348e4 : add bl, ch ; lodsb al, byte ptr [rsi] ; call rax
0x00000200000e92e4 : add bl, ch ; mov dh, dh ; ret
0x0000020000420989 : add bl, ch ; mov esi, esi ; ret
0x000002000017857d : add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200004d4e83 : add bl, ch ; or esi, esi ; ret
0x000002000014df84 : add bl, ch ; out dx, al ; mov eax, 0xc00000bb ; ret
0x0000020000006a29 : add bl, ch ; ret
0x000002000039d627 : add bl, ch ; ret 0x3c7
0x00000200000a6eb3 : add bl, ch ; ret 0x8b41
0x0000020000003725 : add bl, ch ; ret 0x8b48
0x0000020000012a0c : add bl, ch ; ret 0x90cc
0x000002000003ff4a : add bl, ch ; ret 0xd148
0x00000200000071ce : add bl, ch ; sal esi, cl ; ret 0x750e
0x0000020000115149 : add bl, ch ; sbb cl, byte ptr [rcx - 0x75] ; ret
0x0000020000192007 : add bl, ch ; sbb dword ptr [rbx + 0x488d5046], ecx ; jmp qword ptr [rbx]
0x000002000036ff65 : add bl, ch ; sub al, 0x8b ; ret
0x000002000015b613 : add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000189b44 : add bl, ch ; sub esi, esi ; ret
0x00000200001889ba : add bl, ch ; xor cl, byte ptr [rax - 0x75] ; ret
0x0000020000594355 : add bl, ch ; xor esi, esi ; ret
0x0000020000081bb7 : add bl, cl ; ret
0x00000200005de9be : add bl, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000376b0e : add bl, dh ; movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x00000200001b18ca : add bl, dh ; movq qword ptr [rsp + 0x70], mm0 ; call 0x200001adb35
0x0000020000012a2f : add bl, dh ; ret
0x0000020000232abb : add bl, dh ; ret 0x3c
0x0000020000018ef0 : add bl, dl ; loop 0x20000018eee ; ret 0xf15
0x00000200001ad743 : add bl, dl ; loop 0x200001ad6d6 ; ret 0xd0f7
0x00000200001af4dd : add bl, dl ; loop 0x200001af470 ; ret 0xd0f7
0x00000200001a7506 : add bl, dl ; loopne 0x200001a7519 ; ret 0x789
0x00000200001b0218 : add bl, dl ; loopne 0x200001b025b ; ret 0xf272
0x00000200001b1296 : add bl, dl ; loopne 0x200001b12ac ; rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000445b3c : add bl, dl ; ret 0x48ff
0x00000200003b0126 : add bpl, bl ; out dx, al ; mov eax, 0xc0000058 ; ret
0x000002000038311e : add bpl, r11b ; mov eax, 0xc0000058 ; ret
0x000002000064305d : add byte ptr [r10], 0 ; ret
0x0000020000155f4f : add byte ptr [r11], r15b ; ret
0x00000200000e2051 : add byte ptr [r13 + 0xf], 0x22 ; ret
0x0000020000536b54 : add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x000002000043a678 : add byte ptr [r8 + 3], cl ; retf ; jmp rcx
0x00000200000506b3 : add byte ptr [r8 - 0x3f], r9b ; call 0x1ffc3284fd0
0x00000200006ccbda : add byte ptr [r8 - 0x75], r9b ; ret
0x0000020000117f30 : add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x00000200001d13c6 : add byte ptr [r8 - 0x75], r9b ; salc ; mov rcx, rdi ; call rbx
0x000002000062ef24 : add byte ptr [r8], al ; adc dword ptr [rdi], ecx ; ret 0x4389
0x000002000008395b : add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x000002000019c027 : add byte ptr [r8], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8366
0x000002000007d875 : add byte ptr [r8], al ; add cl, ch ; ret 0xffd7
0x000002000007d775 : add byte ptr [r8], al ; add cl, ch ; ret 0xffd8
0x00000200006343bb : add byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000769e4 : add byte ptr [r8], al ; jmp rcx
0x000002000026142a : add byte ptr [r8], dl ; ret
0x00000200004d37e1 : add byte ptr [r9 + 3], r9b ; leave ; jmp rcx
0x000002000003476c : add byte ptr [r9 - 0x75], r9b ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x000002000038df8f : add byte ptr [r9 - 0x7b], al ; ret 0x18e9
0x00000200002282d7 : add byte ptr [rax + 0x11], dh ; adc dword ptr [rax], eax ; ret
0x000002000008b997 : add byte ptr [rax + 0x125b5cff], al ; add esi, edx ; call qword ptr [rcx]
0x000002000008b996 : add byte ptr [rax + 0x125b5cff], r8b ; add esi, edx ; call qword ptr [rcx]
0x00000200001724a0 : add byte ptr [rax + 0x160a4d05], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000002c62f : add byte ptr [rax + 0x17d00e9], dl ; add bh, bh ; ret
0x000002000025dc1f : add byte ptr [rax + 0x18005203], dl ; ret
0x000002000003a2bf : add byte ptr [rax + 0x184b0e9], dl ; add bh, bh ; ret
0x00000200001b3af8 : add byte ptr [rax + 0x19894466], al ; mov eax, r10d ; ret
0x00000200001bf297 : add byte ptr [rax + 0x19894466], al ; ret
0x000002000008284f : add byte ptr [rax + 0x19], cl ; ret 0xdd
0x000002000021903f : add byte ptr [rax + 0x200011fe], bh ; call qword ptr [rcx]
0x00000200001c802b : add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200003f80a4 : add byte ptr [rax + 0x2366ffff], al ; ret 0x966
0x0000020000003fc0 : add byte ptr [rax + 0x23], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000002000006704a : add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200001da6c7 : add byte ptr [rax + 0x23], cl ; ret 0x48a
0x000002000011ea7a : add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200001d27ad : add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x0000020000050a11 : add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200001814e9 : add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x0000020000574493 : add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200006586fb : add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000643ad3 : add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000200000d171b : add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000006433f : add byte ptr [rax + 0x2b], cl ; ret
0x00000200003be91f : add byte ptr [rax + 0x2b], cl ; ret 0x2b49
0x000002000046df44 : add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000024a42 : add byte ptr [rax + 0x2b], cl ; ret 0x3b49
0x00000200000585ff : add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200001e5d31 : add byte ptr [rax + 0x2b], cl ; ret 0x3d48
0x000002000006436b : add byte ptr [rax + 0x2b], cl ; ret 0x8348
0x000002000010d08f : add byte ptr [rax + 0x2b], cl ; ret 0x8841
0x0000020000031447 : add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200003f6de5 : add byte ptr [rax + 0x2b], cl ; ret 0x8949
0x0000020000574f52 : add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x0000020000053117 : add byte ptr [rax + 0x2b], cl ; ret 0x8b4c
0x00000200001a2cf1 : add byte ptr [rax + 0x2b], cl ; ret 0xb841
0x000002000014a704 : add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x0000020000587546 : add byte ptr [rax + 0x2d0], bh ; ret
0x000002000026233b : add byte ptr [rax + 0x30004ac1], bh ; ret
0x0000020000485448 : add byte ptr [rax + 0x30], dh ; add byte ptr [rbp + 1], dh ; ret
0x000002000013cd08 : add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000018e856 : add byte ptr [rax + 0x31], cl ; and byte ptr [r15 + r9 + 0x20], r8b ; ret
0x0000020000006008 : add byte ptr [rax + 0x32], al ; div dh ; ret 0xf04
0x00000200001978f4 : add byte ptr [rax + 0x33027402], ch ; ror byte ptr [rax - 0x75], cl ; ret 0x48c3
0x00000200001adfd0 : add byte ptr [rax + 0x338a1], al ; add al, bh ; ret
0x000002000069d31b : add byte ptr [rax + 0x33], cl ; cmp al, byte ptr [rbp + 3] ; ret
0x00000200001830c5 : add byte ptr [rax + 0x33], cl ; or byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x0000020000027c01 : add byte ptr [rax + 0x33], cl ; ret
0x00000200006eb887 : add byte ptr [rax + 0x33], cl ; ret 0x3348
0x000002000069dc21 : add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006a0a12 : add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200006d6813 : add byte ptr [rax + 0x33], cl ; rol byte ptr [rcx - 0x78], 1 ; adc byte ptr [rbp + 3], cl ; ret
0x000002000001dd18 : add byte ptr [rax + 0x35493e9], dl ; add bh, bh ; ret
0x00000200003f0292 : add byte ptr [rax + 0x38], al ; je 0x200003f02c4 ; xor byte ptr [rdi], cl ; test byte ptr [rsi], dl ; ret
0x00000200001c70b0 : add byte ptr [rax + 0x38c48348], dl ; pop rbp ; pop rbx ; ret
0x00000200003f050e : add byte ptr [rax + 0x39], cl ; add byte ptr [rax + rdx*8 - 0x17], dh ; push rdx ; ret
0x00000200000bdfd3 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000703ae3 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0x9204
0x00000200003b69a4 : add byte ptr [rax + 0x39], cl ; add byte ptr [rcx + rdi*4 - 0x17], dh ; ret
0x0000020000143b89 : add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test dword ptr [rcx], ebx ; ret 8
0x00000200003b5c99 : add byte ptr [rax + 0x39], cl ; add byte ptr [rsi - 0x17], dh ; ret 0x1566
0x00000200001b13e3 : add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + rax - 0x18], esi ; ret 0xe72b
0x00000200000badb3 : add byte ptr [rax + 0x39], cl ; xor byte ptr [r13 - 0x12], sil ; mov al, 1 ; ret
0x00000200004a85f8 : add byte ptr [rax + 0x3b], al ; ret 0x870f
0x000002000001b28d : add byte ptr [rax + 0x3b], cl ; enter 0x477, 0x48 ; sub eax, ecx ; ret
0x000002000000e97f : add byte ptr [rax + 0x3b], cl ; ret
0x00000200000e84aa : add byte ptr [rax + 0x3b], cl ; ret 0x1176
0x000002000016d771 : add byte ptr [rax + 0x3b], cl ; ret 0x1177
0x000002000004ffaf : add byte ptr [rax + 0x3b], cl ; ret 0x1474
0x000002000012bf97 : add byte ptr [rax + 0x3b], cl ; ret 0x1573
0x000002000016d745 : add byte ptr [rax + 0x3b], cl ; ret 0x1577
0x0000020000577efe : add byte ptr [rax + 0x3b], cl ; ret 0x1675
0x000002000016d70f : add byte ptr [rax + 0x3b], cl ; ret 0x1a77
0x000002000010c61d : add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x00000200000c45ef : add byte ptr [rax + 0x3b], cl ; ret 0x275
0x00000200001a31d2 : add byte ptr [rax + 0x3b], cl ; ret 0x28eb
0x0000020000101d46 : add byte ptr [rax + 0x3b], cl ; ret 0x3774
0x00000200000aec06 : add byte ptr [rax + 0x3b], cl ; ret 0x573
0x0000020000570ded : add byte ptr [rax + 0x3b], cl ; ret 0x6b77
0x000002000038627a : add byte ptr [rax + 0x3b], cl ; ret 0x6c7e
0x0000020000063343 : add byte ptr [rax + 0x3b], cl ; ret 0x7874
0x00000200006f3077 : add byte ptr [rax + 0x3b], cl ; ret 0x7f73
0x0000020000116622 : add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000063881 : add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200000d3fb7 : add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200001a31a6 : add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000130f0b : add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200001de990 : add byte ptr [rax + 0x3b], cl ; ret 0xa677
0x00000200005ff177 : add byte ptr [rax + 0x3b], cl ; ret 0xa77
0x0000020000054982 : add byte ptr [rax + 0x3b], cl ; ret 0xbc74
0x00000200001aecde : add byte ptr [rax + 0x3b], cl ; ret 0xc76
0x00000200005f077b : add byte ptr [rax + 0x3b], cl ; ret 0xd74
0x00000200000aa58d : add byte ptr [rax + 0x3b], cl ; ret 0xd76
0x00000200005fadae : add byte ptr [rax + 0x3b], cl ; ret 0xdf73
0x0000020000111a85 : add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x000002000039b716 : add byte ptr [rax + 0x3b], cl ; ret 0xe975
0x00000200000c4484 : add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x000002000064e299 : add byte ptr [rax + 0x3b], cl ; ret 0xef75
0x000002000038626e : add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200000b3a4e : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rdi], -0x7c ; ret
0x0000020000054f05 : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rbp + 3], 1 ; mov al, 1 ; ret
0x00000200000a735a : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x48], 1 ; ret
0x00000200001162fb : add byte ptr [rax + 0x3bc72341], al ; ret
0x000002000025f5ff : add byte ptr [rax + 0x3c0042c2], cl ; ret
0x000002000025d48f : add byte ptr [rax + 0x4004870], cl ; jmp qword ptr [rbx]
0x00000200003bc375 : add byte ptr [rax + 0x40b72e9], dl ; add dh, dh ; ret
0x00000200001c7eec : add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x0000020000144683 : add byte ptr [rax + 0x40c48348], dl ; pop rbx ; ret
0x000002000036d63d : add byte ptr [rax + 0x450f0ff9], al ; ret 0xb0c3
0x000002000014644b : add byte ptr [rax + 0x4800358d], 0x8b ; ret
0x00000200000ae4ff : add byte ptr [rax + 0x4805740f], ch ; add esp, 0x28 ; ret
0x000002000002e6db : add byte ptr [rax + 0x48], al ; add esp, 0x20 ; pop rbx ; ret
0x0000020000652b16 : add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x00000200006e2c0c : add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e2c19
0x00000200003ab597 : add byte ptr [rax + 0x48c1440f], al ; add esp, 0x38 ; ret
0x0000020000499e4b : add byte ptr [rax + 0x48c1440f], al ; add esp, 0x48 ; ret
0x0000020000144fe9 : add byte ptr [rax + 0x48fffff7], al ; add esp, 0x28 ; ret
0x000002000019bdbd : add byte ptr [rax + 0x48fffff7], al ; and eax, ecx ; ret
0x0000020000036df5 : add byte ptr [rax + 0x48fffff7], al ; mov eax, dword ptr [rax] ; ret
0x0000020000260547 : add byte ptr [rax + 0x4c0038c2], dh ; ret
0x000002000054129c : add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x000002000009a2a6 : add byte ptr [rax + 0x5322d61a], al ; cli ; sahf ; ret
0x0000020000263aaf : add byte ptr [rax + 0x540047c2], al ; ret
0x000002000063e1da : add byte ptr [rax + 0x58c48348], dl ; ret
0x00000200000dfd50 : add byte ptr [rax + 0x5f840f01], ch ; ret 0xf
0x0000020000064a4e : add byte ptr [rax + 0x63], cl ; ret
0x00000200003e0f67 : add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x000002000058e32b : add byte ptr [rax + 0x63], cl ; ret 0x8b4c
0x00000200004258ff : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200005a2fc1 : add byte ptr [rax + 0x63], cl ; ret 0xf903
0x0000020000510a1d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x000002000016211e : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x8548
0x0000020000247b5f : add byte ptr [rax + 0x64004dc1], cl ; ret 0x4d
0x0000020000008c9a : add byte ptr [rax + 0x651dbe9], dl ; add bh, bh ; ret
0x000002000063e156 : add byte ptr [rax + 0x68c48348], dl ; ret
0x0000020000228317 : add byte ptr [rax + 0x700005c1], dh ; ret 5
0x000002000022b81b : add byte ptr [rax + 0x70003dc1], bl ; ret
0x0000020000585ce4 : add byte ptr [rax + 0x70c48348], dl ; pop rbp ; ret
0x00000200000f9258 : add byte ptr [rax + 0x74c18548], al ; or ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000063e0d2 : add byte ptr [rax + 0x78c48348], dl ; ret
0x000002000004cfd8 : add byte ptr [rax + 0x8d8f], al ; add byte ptr [rcx + rbp*8], al ; ret
0x000002000000aa78 : add byte ptr [rax + 0x9781ce9], dl ; add bh, bh ; ret
0x00000200001ce132 : add byte ptr [rax + 0xb], cl ; ret 0x1ba
0x0000020000051548 : add byte ptr [rax + 0xb], cl ; ret 0x3b49
0x00000200000d1f2f : add byte ptr [rax + 0xb], cl ; ret 0x44f6
0x00000200000d7eda : add byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200003652a4 : add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200001736ba : add byte ptr [rax + 0xb], cl ; ret 0x8944
0x00000200000a8288 : add byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000035fb53 : add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200000d1d36 : add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000b1266 : add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000019ed6f : add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200006e70f1 : add byte ptr [rax + 0xb], cl ; ret 0x8d44
0x00000200003ee2a9 : add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x0000020000043f34 : add byte ptr [rax + 0xb], cl ; ret 0xa948
0x0000020000134a5e : add byte ptr [rax + 0xb], cl ; ret 0xb48
0x0000020000070f9d : add byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200001bd06b : add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x00000200006f4df2 : add byte ptr [rax + 0xb], cl ; ret 0xd233
0x000002000014d414 : add byte ptr [rax + 0xb], cl ; ret 0xf641
0x0000020000022485 : add byte ptr [rax + 0xd59be9], dl ; add bh, bh ; ret
0x000002000000d0e9 : add byte ptr [rax + 0xd9d97e9], dl ; add bh, bh ; ret
0x00000200000bc268 : add byte ptr [rax + 0xf], cl ; mov edx, 0x830f0be0 ; ret 0
0x00000200000a39ff : add byte ptr [rax + 0xf], cl ; ret
0x0000020000595d6f : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x0000020000005798 : add byte ptr [rax + 0xf], cl ; ret 0x8966
0x0000020000170410 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000020000185a37 : add byte ptr [rax + 0xf], cl ; ret 0xc9ff
0x000002000002c1a9 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x48b
0x00000200000f1559 : add byte ptr [rax + 0xfc18548], al ; xchg eax, ebp ; ret 0xc28b
0x000002000000bb54 : add byte ptr [rax + 1], bh ; ret
0x0000020000018099 : add byte ptr [rax + 3], cl ; iretd ; jmp rcx
0x00000200001509bb : add byte ptr [rax + 3], cl ; ret
0x000002000004f4c6 : add byte ptr [rax + 3], cl ; ret 0x348
0x00000200000e797d : add byte ptr [rax + 3], cl ; ret 0x349
0x000002000047cade : add byte ptr [rax + 3], cl ; ret 0x34c
0x00000200001d8296 : add byte ptr [rax + 3], cl ; ret 0x3a44
0x000002000002bf37 : add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000b4425 : add byte ptr [rax + 3], cl ; ret 0x3b4c
0x00000200000d5093 : add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000000f6d3 : add byte ptr [rax + 3], cl ; ret 0x6fe9
0x00000200006a105b : add byte ptr [rax + 3], cl ; ret 0x8348
0x0000020000136403 : add byte ptr [rax + 3], cl ; ret 0x8944
0x000002000004e4ba : add byte ptr [rax + 3], cl ; ret 0x8948
0x000002000014fe82 : add byte ptr [rax + 3], cl ; ret 0x894d
0x00000200004645df : add byte ptr [rax + 3], cl ; ret 0x8d48
0x00000200004693dd : add byte ptr [rax + 3], cl ; ret 0x8d4d
0x00000200004e1d47 : add byte ptr [rax + 3], cl ; ret 0x90c3
0x0000020000196d5d : add byte ptr [rax + 3], cl ; ret 0x9948
0x00000200000ca865 : add byte ptr [rax + 3], cl ; ret 0x9aeb
0x00000200000e19ef : add byte ptr [rax + 3], cl ; ret 0xa74
0x00000200000d3955 : add byte ptr [rax + 3], cl ; ret 0xc148
0x000002000050b223 : add byte ptr [rax + 3], cl ; ret 0xd233
0x000002000043a679 : add byte ptr [rax + 3], cl ; retf ; jmp rcx
0x00000200001e590f : add byte ptr [rax + 3], cl ; rol byte ptr [rcx + 0xf], 0xb7 ; ret 0xc30c
0x000002000052a02d : add byte ptr [rax + 3], cl ; rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x0000020000072a35 : add byte ptr [rax + 3], cl ; ror byte ptr [rax - 0x75], 0x14 ; ret
0x0000020000072d05 : add byte ptr [rax + 3], cl ; ror byte ptr [rax - 0x75], 0xc ; ret
0x000002000042f727 : add byte ptr [rax + 3], cl ; sar edi, 1 ; loop 0x2000042f6b8 ; jmp qword ptr [rax]
0x000002000042f726 : add byte ptr [rax + 3], cl ; sar edi, 1 ; loop 0x2000042f6b9 ; jmp qword ptr [rax]
0x0000020000058382 : add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0x4c ; ret
0x000002000013b3fd : add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0xc ; ret 0x366
0x00000200006f06b3 : add byte ptr [rax + 3], cl ; sti ; mov r12d, ebx ; jmp 0x200006f0691
0x000002000038dd28 : add byte ptr [rax + 5], cl ; js 0x2000038dd37 ; add byte ptr [rax], al ; ret
0x00000200004688b6 : add byte ptr [rax + 5], cl ; ror byte ptr [rax + rax], 0 ; ret
0x000002000063b25b : add byte ptr [rax + rax + 0x30000], bl ; add byte ptr [rax], al ; ret 0
0x000002000019c97b : add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x0000020000142ba5 : add byte ptr [rax + rax*8 - 0x3fcc338b], al ; ret
0x00000200000e77e1 : add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x00000200001a7a24 : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x4e9
0x00000200001a5ab8 : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x000002000019ed6c : add byte ptr [rax + rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200004784f2 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret 0xc635
0x00000200005cf646 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000149fb0 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; call rdi
0x000002000023d023 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; jmp qword ptr [rax]
0x0000020000129ede : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000200000dddf2 : add byte ptr [rax + rax], al ; add byte ptr [rbp + 0x33], al ; shr cl, 0xc2 ; int 0xfd
0x00000200000adc7b : add byte ptr [rax + rax], al ; add byte ptr [rbp + 3], bh ; xor eax, eax ; ret
0x0000020000134b25 : add byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; ret 0x8348
0x0000020000379a85 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000200005d4b27 : add byte ptr [rax + rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200006c000f : add byte ptr [rax + rax], al ; add dh, dh ; ret
0x000002000059b08a : add byte ptr [rax + rax], al ; je 0x2000059b099 ; mov al, 1 ; ret
0x00000200005596aa : add byte ptr [rax + rax], bl ; mov qword ptr [rbp + 0x40], rax ; call 0x20000485905
0x000002000015f18e : add byte ptr [rax + rax], dl ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x0000020000139d8b : add byte ptr [rax + rax], dl ; call 0x200000a3959
0x00000200006f79a9 : add byte ptr [rax + rbx - 1], dh ; ret
0x000002000010b8cb : add byte ptr [rax + rcx + 0x48], dh ; mov ecx, esi ; call 0x20000177ae8
0x0000020000064075 : add byte ptr [rax + rcx*2], al ; add esp, 0x20 ; pop rbx ; ret
0x0000020000072158 : add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x00000200000b8f74 : add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x0000020000069def : add byte ptr [rax + rcx*4 - 0x7d], al ; ret
0x00000200000f839c : add byte ptr [rax + rcx*8 - 0x3fccfd8b], al ; ret
0x0000020000635425 : add byte ptr [rax + rdi + 0x25], al ; ret
0x0000020000183eec : add byte ptr [rax + rdi - 0x59], al ; ret
0x000002000004d3a3 : add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x00000200003f0511 : add byte ptr [rax + rdx*8 - 0x17], dh ; push rdx ; ret
0x0000020000499b3e : add byte ptr [rax - 0x137af0ff], ch ; ret
0x000002000020fdbf : add byte ptr [rax - 0x13], ah ; and byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xd90
0x000002000025d39f : add byte ptr [rax - 0x13ffb783], ah ; jmp qword ptr [rbx]
0x000002000025d39e : add byte ptr [rax - 0x13ffb783], spl ; jmp qword ptr [rbx]
0x000002000017f7bc : add byte ptr [rax - 0x15], al ; add dh, byte ptr [rdx] ; leave ; mov al, cl ; ret
0x00000200003ca197 : add byte ptr [rax - 0x16fd45b2], al ; ret
0x000002000004dad3 : add byte ptr [rax - 0x173474b8], al ; ret
0x00000200006019d4 : add byte ptr [rax - 0x17], al ; wait ; ret 0xffe6
0x000002000020bf3b : add byte ptr [rax - 0x1b], ah ; or al, byte ptr [rax] ; ret 0xae5
0x00000200001edace : add byte ptr [rax - 0x1cf76217], dl ; push rsi ; ret
0x000002000011f8e9 : add byte ptr [rax - 0x2a0a217], dl ; push rsi ; ret 0xf08
0x0000020000017c77 : add byte ptr [rax - 0x2d], cl ; loopne 0x20000017ccc ; mov dword ptr [rax], eax ; ret
0x00000200001418a9 : add byte ptr [rax - 0x2d], cl ; loopne 0x20000141900 ; or dword ptr [rax + rdx*8 + 8], eax ; ret
0x0000020000363e48 : add byte ptr [rax - 0x2d], cl ; loopne 0x20000363e9d ; add esp, 0x28 ; ret
0x000002000015220f : add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000023a9fb : add byte ptr [rax - 0x2eff9f3e], bh ; ret 0x60
0x000002000023a9fa : add byte ptr [rax - 0x2eff9f3e], dil ; ret 0x60
0x000002000014ab62 : add byte ptr [rax - 0x2f], cl ; call 0x1ffffd772b8
0x00000200002273f3 : add byte ptr [rax - 0x2fffee3d], al ; ret
0x000002000009deab : add byte ptr [rax - 0x376f6f70], dl ; ret
0x000002000001aff7 : add byte ptr [rax - 0x39], cl ; ret
0x000002000041b360 : add byte ptr [rax - 0x39], cl ; ret 0
0x0000020000169eec : add byte ptr [rax - 0x39], cl ; ret 0x6980
0x000002000026dcef : add byte ptr [rax - 0x3e], al ; insb byte ptr [rdi], dx ; add al, dh ; ret 0x6c
0x000002000003c86d : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2271088
0x000002000004a8a4 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc227f1bc
0x00000200000bd214 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22f1a2f
0x00000200000d1754 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2305f6f
0x00000200000d9b24 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc230e33f
0x00000200000e2038 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2316953
0x000002000012dae3 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23623fe
0x000002000013b973 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc237028e
0x00000200001d9587 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc240dda2
0x00000200001d9e65 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc240e680
0x00000200005744ae : add byte ptr [rax - 0x3f], cl ; call 0x1ffc27a8cc9
0x000002000003216b : add byte ptr [rax - 0x3f], cl ; call 0x1ffc3266a86
0x0000020000032ef5 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc326770d
0x00000200000506b4 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc3284fcf
0x00000200001386b3 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc336cfce
0x0000020000126e9c : add byte ptr [rax - 0x3f], cl ; call 0x1ffffd4efb6
0x00000200000f0bc2 : add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200003f611c : add byte ptr [rax - 0x3f], cl ; call qword ptr [rbx]
0x00000200005724ee : add byte ptr [rax - 0x3f], cl ; clc ; adc byte ptr [rbp + 0x2b], cl ; ret
0x00000200000b7e77 : add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000ee8ff : add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc39a311a
0x00000200001025c0 : add byte ptr [rax - 0x3f], cl ; out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000038b65e : add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x0000020000223c17 : add byte ptr [rax - 0x3ffec4f], bh ; ret
0x00000200004e034d : add byte ptr [rax - 0x3ffffe77], bh ; ret
0x000002000001fa3d : add byte ptr [rax - 0x3fffff0e], bh ; ret
0x0000020000016b77 : add byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001d0eb8 : add byte ptr [rax - 0x3fffff6b], bh ; ret
0x0000020000395439 : add byte ptr [rax - 0x3ffffff3], bh ; jmp 0x2000039540b
0x00000200003cb35a : add byte ptr [rax - 0x3ffffff3], bh ; pop rbx ; ret
0x00000200003981cb : add byte ptr [rax - 0x3ffffff3], bh ; ret
0x000002000019aa6e : add byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000225ddf : add byte ptr [rax - 0x43], cl ; adc al, 0 ; nop ; ret 0x14
0x000002000007d872 : add byte ptr [rax - 0x48], dl ; add byte ptr [r8], al ; add cl, ch ; ret 0xffd7
0x000002000007d772 : add byte ptr [rax - 0x48], dl ; add byte ptr [r8], al ; add cl, ch ; ret 0xffd8
0x000002000007f772 : add byte ptr [rax - 0x48], dl ; add dword ptr [r8], eax ; add cl, ch ; ret 0xffb8
0x000002000007f872 : add byte ptr [rax - 0x48], dl ; add qword ptr [r8], rax ; add cl, ch ; ret 0xffb7
0x000002000007e272 : add byte ptr [rax - 0x48], dl ; cdq ; add byte ptr [rax], al ; add cl, ch ; ret 0xffcd
0x0000020000080272 : add byte ptr [rax - 0x48], dl ; cdq ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffad
0x000002000007edf2 : add byte ptr [rax - 0x48], dl ; cmc ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000002000007ecf2 : add byte ptr [rax - 0x48], dl ; in eax, dx ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000007ed72 : add byte ptr [rax - 0x48], dl ; int1 ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc2
0x000002000007ec72 : add byte ptr [rax - 0x48], dl ; jmp 0x1ffe907ec83
0x000002000007e872 : add byte ptr [rax - 0x48], dl ; leave ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc7
0x000002000007e672 : add byte ptr [rax - 0x48], dl ; mov ecx, 0xe9000000 ; ret 0xffc9
0x000002000007da72 : add byte ptr [rax - 0x48], dl ; pop rcx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffd5
0x000002000007fa72 : add byte ptr [rax - 0x48], dl ; pop rcx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffb5
0x000002000007d972 : add byte ptr [rax - 0x48], dl ; push rcx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffd6
0x000002000007f972 : add byte ptr [rax - 0x48], dl ; push rcx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffb6
0x000002000007e7b2 : add byte ptr [rax - 0x48], dl ; ret
0x000002000007e792 : add byte ptr [rax - 0x48], dl ; ret 0
0x000002000007e772 : add byte ptr [rax - 0x48], dl ; rol dword ptr [rax], 0 ; add cl, ch ; ret 0xffc8
0x000002000007ee72 : add byte ptr [rax - 0x48], dl ; stc ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc1
0x000002000007ee32 : add byte ptr [rax - 0x48], dl ; test dword ptr [rax], 0x2e90000 ; ret 0xffff
0x000002000007e472 : add byte ptr [rax - 0x48], dl ; test eax, 0xe9000000 ; ret 0xffcb
0x0000020000080472 : add byte ptr [rax - 0x48], dl ; test eax, 0xe9000001 ; ret 0xffab
0x000002000007e172 : add byte ptr [rax - 0x48], dl ; xchg eax, ecx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffce
0x0000020000080172 : add byte ptr [rax - 0x48], dl ; xchg eax, ecx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffae
0x0000020000223393 : add byte ptr [rax - 0x4ffff13f], ah ; ret
0x000002000011e378 : add byte ptr [rax - 0x5020017], dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000025b87f : add byte ptr [rax - 0x5d], ch ; cmp byte ptr [rax], al ; hlt ; ret
0x000002000025bb47 : add byte ptr [rax - 0x5fffc775], ah ; ret 0x22
0x000002000013c8a5 : add byte ptr [rax - 0x6f6f6f70], dl ; nop ; xor al, al ; ret
0x000002000000b3c1 : add byte ptr [rax - 0x727af0fa], ch ; xchg eax, ecx ; sbb al, 0 ; ret
0x00000200005640da : add byte ptr [rax - 0x72ba3e75], al ; add r12b, byte ptr [r11] ; ret 0x8d45
0x000002000010113d : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9074
0x00000200006e4c72 : add byte ptr [rax - 0x73], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200004f1579 : add byte ptr [rax - 0x73], cl ; adc eax, 0xfff5a67f ; jmp 0x200004f154f
0x000002000041559e : add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; or al, 0x3d ; ret 0xe9ff
0x00000200001e848e : add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; pushfq ; ret 0xfff8
0x0000020000021dcf : add byte ptr [rax - 0x73], cl ; add eax, 0xd9c59 ; ret
0x0000020000021e80 : add byte ptr [rax - 0x73], cl ; add eax, 0xdc188 ; ret
0x000002000053967f : add byte ptr [rax - 0x73], cl ; add r8b, r13b ; xlatb ; ret 0xffbc
0x000002000019f0df : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x00000200003a2f8d : add byte ptr [rax - 0x73], cl ; and al, 0x70 ; call 0x200000bf278
0x000002000007c96f : add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x0000020000491ce6 : add byte ptr [rax - 0x73], cl ; call 0x1ffc31e9ddf
0x0000020000491c8c : add byte ptr [rax - 0x73], cl ; call 0x1ffc31ef785
0x000002000051e47a : add byte ptr [rax - 0x73], cl ; loopne 0x2000051e413 ; clc ; call r15
0x0000020000476aa8 : add byte ptr [rax - 0x73], cl ; or al, 0xc8 ; call 0x200000a3958
0x00000200006168ad : add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x00000200000769df : add byte ptr [rax - 0x73], cl ; or eax, 0x4974 ; jmp rcx
0x000002000002ca52 : add byte ptr [rax - 0x73], cl ; push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x00000200005fcae1 : add byte ptr [rax - 0x73], cl ; push rdi ; sbb al, ch ; xchg eax, ebp ; ret
0x0000020000411137 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x70 ; call 0x200003dd3e8
0x00000200005a8891 : add byte ptr [rax - 0x73], cl ; ret
0x00000200004e026c : add byte ptr [rax - 0x73], cl ; ror byte ptr [r8 - 0x7d], 1 ; ret 0xe804
0x00000200004c541e : add byte ptr [rax - 0x73], cl ; sbb byte ptr [rbp - 0x75], al ; ret
0x000002000013e408 : add byte ptr [rax - 0x74000009], al ; ret 0x6ca3
0x0000020000613297 : add byte ptr [rax - 0x7421bbf1], al ; ret
0x000002000051a60f : add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200000ad25a : add byte ptr [rax - 0x74b2ffcb], 0xb4 ; ret
0x00000200000034c0 : add byte ptr [rax - 0x74bbcebf], cl ; ret 0xcfeb
0x00000200001b1492 : add byte ptr [rax - 0x74ee8af8], ch ; ret
0x000002000018661b : add byte ptr [rax - 0x74f68bc0], ch ; retf ; call 0x20000162859
0x000002000014a4dc : add byte ptr [rax - 0x75000009], al ; add al, 8 ; ret
0x00000200001ce375 : add byte ptr [rax - 0x75], al ; ret
0x000002000003f982 : add byte ptr [rax - 0x75], cl ; adc al, 0xc2 ; jmp 0x2000003f990
0x0000020000407156 : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200003cda27 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200001bf6e4 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000011108c : add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7401
0x0000020000047b2e : add byte ptr [rax - 0x75], cl ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000050d2e : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x0000020000141d92 : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000200000342dc : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x0000020000441db5 : add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000039b713 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xe975
0x000002000069c296 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x1574
0x00000200000de468 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000016da1a : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000020000459f97 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xf20
0x00000200000c4eb0 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x00000200001fac1f : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200004d22c0 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x3b], ecx ; ret
0x00000200006a05d8 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200004d2823 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7f], ecx ; ret
0x000002000016c7ff : add byte ptr [rax - 0x75], cl ; add eax, 0x114f71 ; call rax
0x0000020000003501 : add byte ptr [rax - 0x75], cl ; add eax, 0x271f77 ; ret
0x0000020000445b02 : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call 0x20000072e49
0x00000200005d5b88 : add byte ptr [rax - 0x75], cl ; and al, 0x60 ; call 0x20000441dd8
0x00000200000bdf48 : add byte ptr [rax - 0x75], cl ; and al, 3 ; add byte ptr [rax], al ; ret
0x000002000001b99c : add byte ptr [rax - 0x75], cl ; and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x0000020000429bea : add byte ptr [rax - 0x75], cl ; and eax, 0x84000003 ; ret 0xb75
0x00000200004853b4 : add byte ptr [rax - 0x75], cl ; and r8b, bpl ; ret 0xc816
0x00000200001a6634 : add byte ptr [rax - 0x75], cl ; call 0x1ffc16328cc
0x000002000017bb33 : add byte ptr [rax - 0x75], cl ; call qword ptr [rax]
0x000002000061d892 : add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x0000020000483498 : add byte ptr [rax - 0x75], cl ; enter -0x5018, 4 ; ret 0x8bff
0x0000020000479c4f : add byte ptr [rax - 0x75], cl ; enter -0x718, -0x64 ; ret 0xffff
0x000002000047c336 : add byte ptr [rax - 0x75], cl ; enter 0x11e8, 0x76 ; ret 0x4dff
0x0000020000468c0a : add byte ptr [rax - 0x75], cl ; enter 0x3de8, -0x53 ; ret
0x000002000047c309 : add byte ptr [rax - 0x75], cl ; enter 0x3ee8, 0x76 ; ret 0xbaff
0x0000020000426c4d : add byte ptr [rax - 0x75], cl ; enter 0x4ee8, -0xe ; ret 0x49ff
0x00000200004703f7 : add byte ptr [rax - 0x75], cl ; enter 0x50e8, 0x35 ; ret
0x000002000047ebf3 : add byte ptr [rax - 0x75], cl ; enter 0x54e8, 0x4d ; ret 0x41ff
0x000002000046feee : add byte ptr [rax - 0x75], cl ; enter 0x59e8, 0x3a ; ret
0x000002000048353c : add byte ptr [rax - 0x75], cl ; enter 0xbe8, 4 ; ret 0x83ff
0x000002000001a901 : add byte ptr [rax - 0x75], cl ; fadd dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200004815e3 : add byte ptr [rax - 0x75], cl ; fcos ; ret 0x1b9
0x00000200000191c9 : add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000020a2b : add byte ptr [rax - 0x75], cl ; fld dword ptr [rbp + 0x78850fc0] ; ret 0x1d
0x000002000015a785 : add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xf491
0x00000200005a7721 : add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xffaf
0x00000200004ff14f : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000038302a : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; sbb dil, dil ; ret 0x86e9
0x0000020000065d41 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfa75
0x00000200004f1e5b : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000004148 : add byte ptr [rax - 0x75], cl ; int 0x80
0x00000200004721ca : add byte ptr [rax - 0x75], cl ; int 0xff
0x000002000018fdb4 : add byte ptr [rax - 0x75], cl ; int1 ; jmp 0x2000018fe22
0x000002000063537e : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200001415fe
0x00000200005903b5 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000019c5f6
0x000002000059f3b6 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000038b672
0x000002000016b32a : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000417636
0x000002000001b882 : add byte ptr [rax - 0x75], cl ; je 0x2000001b8b3 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000004ffd5 : add byte ptr [rax - 0x75], cl ; je 0x20000050006 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000ecb1c : add byte ptr [rax - 0x75], cl ; je 0x200000ecb4c ; js 0x200000ecb20 ; ret
0x000002000015a449 : add byte ptr [rax - 0x75], cl ; je 0x2000015a47a ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000035f8fc : add byte ptr [rax - 0x75], cl ; je 0x2000035f92d ; xor byte ptr [rax - 0x39], cl ; ret
0x000002000040eb12 : add byte ptr [rax - 0x75], cl ; je 0x2000040eb43 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004b2a65 : add byte ptr [rax - 0x75], cl ; je 0x200004b2a96 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004c6c0e : add byte ptr [rax - 0x75], cl ; je 0x200004c6c3f ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003eb6d1 : add byte ptr [rax - 0x75], cl ; lea ebx, dword ptr [rax - 0x1000000] ; ret
0x00000200000c668c : add byte ptr [rax - 0x75], cl ; lea edi, dword ptr [rax - 0x18000000] ; ret
0x00000200003eb519 : add byte ptr [rax - 0x75], cl ; lea edx, dword ptr [rax - 0x1000000] ; ret
0x00000200003df822 : add byte ptr [rax - 0x75], cl ; mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x00000200003960f1 : add byte ptr [rax - 0x75], cl ; mov ecx, dword ptr [rax - 0x18000000] ; ret 0xc54
0x000002000017bc12 : add byte ptr [rax - 0x75], cl ; mov rbx, rcx ; call qword ptr [rax]
0x00000200000df8c8 : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; ret
0x000002000037f022 : add byte ptr [rax - 0x75], cl ; or byte ptr [r15 + r9 - 0x49], r8b ; ret
0x000002000001556b : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000cbccf : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200004d95aa : add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x23], cl ; ret 0x3b4c
0x000002000003749b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000199b3d : add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], cl ; ret 0xc149
0x00000200001bf745 : add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000002000043bf84 : add byte ptr [rax - 0x75], cl ; or eax, ebp ; ret
0x000002000049e492 : add byte ptr [rax - 0x75], cl ; or edi, dword ptr [rbx] ; ret 0x470f
0x00000200003b39b3 : add byte ptr [rax - 0x75], cl ; outsd dx, dword ptr [rsi] ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003bed42 : add byte ptr [rax - 0x75], cl ; pop rax ; or dh, dh ; ret
0x00000200000ca82d : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 0x10 ; ret
0x000002000064ec4a : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x0000020000497950 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000ba3b5 : add byte ptr [rax - 0x75], cl ; push -0x6c41f0b8 ; ret
0x0000020000537481 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7402
0x00000200003d7c5d : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf02
0x00000200003dd9bf : add byte ptr [rax - 0x75], cl ; push rax ; sbb dh, dh ; ret 0x4901
0x000002000004a6e5 : add byte ptr [rax - 0x75], cl ; push rbp ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000448cdd : add byte ptr [rax - 0x75], cl ; push rbx ; mov rcx, rbx ; call rax
0x0000020000005830 : add byte ptr [rax - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000010fc3d : add byte ptr [rax - 0x75], cl ; push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003c0815 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; mov rcx, rbp ; call rsi
0x00000200000071b0 : add byte ptr [rax - 0x75], cl ; ret
0x00000200004cd481 : add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000012d2ba : add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000270ddd : add byte ptr [rax - 0x75], cl ; ret 0x2ae9
0x00000200000bd360 : add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000fa8c4 : add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x000002000069b263 : add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200004d7af0 : add byte ptr [rax - 0x75], cl ; ret 0x3348
0x0000020000025415 : add byte ptr [rax - 0x75], cl ; ret 0x348
0x000002000037a416 : add byte ptr [rax - 0x75], cl ; ret 0x4166
0x000002000059463a : add byte ptr [rax - 0x75], cl ; ret 0x44c7
0x00000200000be3cf : add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000497831 : add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000005c417 : add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x00000200000173bf : add byte ptr [rax - 0x75], cl ; ret 0x528b
0x00000200000da811 : add byte ptr [rax - 0x75], cl ; ret 0x80eb
0x00000200000b632a : add byte ptr [rax - 0x75], cl ; ret 0x8148
0x00000200001b5981 : add byte ptr [rax - 0x75], cl ; ret 0x8341
0x00000200000c66dd : add byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000040a936 : add byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000055ed2 : add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200003938a5 : add byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200006c4341 : add byte ptr [rax - 0x75], cl ; ret 0x8944
0x00000200000259bf : add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000025a16 : add byte ptr [rax - 0x75], cl ; ret 0x8b45
0x00000200000770ca : add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000acd1f : add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000052fe91 : add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000011d1d3 : add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001386ff : add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x000002000010fe44 : add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000016f67a : add byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000002bf43 : add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200000ca006 : add byte ptr [rax - 0x75], cl ; ret 0xba49
0x0000020000007ad0 : add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000162f5b : add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200001620c9 : add byte ptr [rax - 0x75], cl ; ret 0xc933
0x0000020000115e94 : add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200003fa922 : add byte ptr [rax - 0x75], cl ; ret 0xd233
0x000002000038cded : add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000556883 : add byte ptr [rax - 0x75], cl ; ret 0xff33
0x00000200001e2f47 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000004f216
0x00000200003e6ba6 : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000072e46
0x0000020000489345 : add byte ptr [rax - 0x75], cl ; retf ; call 0x200004855da
0x00000200006e6e7e : add byte ptr [rax - 0x75], cl ; retf ; call 0x200007030d6
0x00000200003fef16 : add byte ptr [rax - 0x75], cl ; retf ; call r10
0x00000200003c0e3c : add byte ptr [rax - 0x75], cl ; retf ; call r15
0x00000200004f496d : add byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200003aaedc : add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200003a7453 : add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200000fb197 : add byte ptr [rax - 0x75], cl ; ror byte ptr [rbp - 0x75], 1 ; ret 0xff49
0x0000020000105808 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000121e19 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call r15
0x000002000063314d : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000062eac3 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x0000020000528660 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rbx - 0x467a1733], cl ; ret 0x48ff
0x000002000012918c : add byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 9], cl ; ret 0xf000
0x00000200006e025d : add byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + rcx*4 + 0x18], -0x7d ; ret 0x48f8
0x00000200006e6431 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + rcx*4 + 0x28], -0x7d ; ret 0x48f8
0x000002000064afaf : add byte ptr [rax - 0x75], cl ; sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x0000020000503df3 : add byte ptr [rax - 0x75], cl ; salc ; call 0x20000270046
0x00000200004750c2 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x0000020000584e5e : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rbx ; call 0x200005810f9
0x000002000050b81b : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call qword ptr [rax]
0x00000200001d13c7 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x0000020000061a66 : add byte ptr [rax - 0x75], cl ; sbb al, 0x24 ; add rsp, 8 ; ret
0x00000200003ae074 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200000df94f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x00000200000b1565 : add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x00000200004784f5 : add byte ptr [rax - 0x75], cl ; shr al, 1 ; ret 0xc635
0x0000020000407a3d : add byte ptr [rax - 0x75], cl ; shr eax, cl ; ret 0xfff4
0x0000020000493f7e : add byte ptr [rax - 0x75], cl ; sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200005739f2 : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x23], r9b ; ret 0x3b49
0x00000200001eb8ae : add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x0000020000550726 : add byte ptr [rax - 0x75], cl ; sub byte ptr [r9 + rcx*4], al ; ret
0x000002000045ee2a : add byte ptr [rax - 0x75], cl ; test al, 0x8b ; ret
0x000002000063111a : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x000002000063124a : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x0000020000630bbd : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rsi ; call r10
0x000002000003a268 : add byte ptr [rax - 0x75], cl ; xor al, 0 ; add byte ptr [rax], al ; ret
0x00000200003898e7 : add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret
0x00000200003f3634 : add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret 0xcc64
0x000002000040e7dc : add byte ptr [rax - 0x76], al ; idiv dword ptr [rbx] ; ret 0x470f
0x000002000070d1f7 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000002d93b : add byte ptr [rax - 0x77], cl ; add al, bl ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x00000200004ec3cb : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200004f4e99 : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x8330
0x00000200004f9056 : add byte ptr [rax - 0x77], cl ; add eax, 0x18a56a ; ret
0x00000200005c2985 : add byte ptr [rax - 0x77], cl ; add eax, dword ptr [rcx - 0x75] ; ret
0x000002000041b9ec : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000c713c : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000569a81 : add byte ptr [rax - 0x77], cl ; add edi, edi ; ret 0x8349
0x000002000042521e : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000004fd29
0x0000020000180039 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000007c348
0x00000200003ab586 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200003b33e8 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200005596ac : add byte ptr [rax - 0x77], cl ; call 0x20000485903
0x00000200004d4491 : add byte ptr [rax - 0x77], cl ; cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000047f3f6 : add byte ptr [rax - 0x77], cl ; enter -0x769a, 0x75 ; ret 0x2ce8
0x00000200000641f1 : add byte ptr [rax - 0x77], cl ; je 0x20000064223 ; xor byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2ec1
0x00000200003d1959 : add byte ptr [rax - 0x77], cl ; je 0x200003d198a ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200005c26c4 : add byte ptr [rax - 0x77], cl ; jge 0x200005c26a2 ; call 0x20000270049
0x0000020000059162 : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x0000020000645504 : add byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x75], r9b ; ret
0x00000200000169ec : add byte ptr [rax - 0x77], cl ; or eax, 0x2b6024 ; ret
0x000002000035e7c0 : add byte ptr [rax - 0x77], cl ; or r11b, bpl ; leave ; ret
0x00000200000d6660 : add byte ptr [rax - 0x77], cl ; push rax ; jo 0x200000d6655 ; ret
0x000002000040eb6b : add byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000054931 : add byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000405795 : add byte ptr [rax - 0x77], cl ; sbb r14b, r14b ; ret
0x00000200000ba32d : add byte ptr [rax - 0x79], cl ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x0000020000036e2e : add byte ptr [rax - 0x7a9a0000], al ; ret 0x2074
0x00000200003c9b3d : add byte ptr [rax - 0x7a9a0000], al ; ret 0x2774
0x00000200005962f4 : add byte ptr [rax - 0x7a9a0000], al ; ret 0xd74
0x000002000025c743 : add byte ptr [rax - 0x7a], al ; cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x00000200001c36eb : add byte ptr [rax - 0x7ae78bfc], bpl ; ret 0x850f
0x00000200001c36ec : add byte ptr [rax - 0x7ae78bfc], ch ; ret 0x850f
0x000002000001ad64 : add byte ptr [rax - 0x7b000009], al ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfc24
0x0000020000421bbc : add byte ptr [rax - 0x7b], al ; ret 0x1475
0x0000020000104bce : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test bl, bh ; ret
0x00000200005147c7 : add byte ptr [rax - 0x7b], cl ; div byte ptr [rsi + rsi*2 - 0x15] ; ret
0x0000020000168472 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000168482 ; jmp rcx
0x00000200001685a6 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001685b4 ; call rcx
0x00000200001685d2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001685e0 ; call rcx
0x0000020000521352 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000521367 ; call qword ptr [rip - 0x1d3d16]
0x0000020000058f06 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000058f13 ; ret
0x00000200000a9178 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000a918b ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000010e962 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rbp - 0x75] ; ret
0x0000020000370a49 : add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x000002000040f308 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000200000f361f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001f9de8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xe1e6
0x00000200003fecaf : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000042d3c8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1b80
0x0000020000516b89 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0xdd2
0x000002000064e60e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0x00000200003663d4 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 2], cl ; ret
0x0000020000124efb : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200006475ae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x00000200003b80d0 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x14], 0xeb ; ret 0x90cc
0x0000020000169b19 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x7b], 0x8b ; ret
0x0000020000168556 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200001b259e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + 0x44], 0x8b ; ret
0x0000020000140662 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x0000020000168f1e : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200001696aa : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x000002000058e01b : add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x0000020000071cae : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x85 ; sti ; ret 0x18
0x00000200003c2b9e : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000642da2 : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rbx], ch ; ret 0x8d4c
0x000002000052fe8b : add byte ptr [rax - 0x7d], cl ; and al, 0x28 ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200004b11dc : add byte ptr [rax - 0x7d], cl ; and al, 0x50 ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000018f872 : add byte ptr [rax - 0x7d], cl ; call 0x1ffc3544088
0x000002000019f0ef : add byte ptr [rax - 0x7d], cl ; jmp 0x2000019f10a
0x000002000019f397 : add byte ptr [rax - 0x7d], cl ; jmp 0x2000019f3b2
0x0000020000394249 : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax + 0x4c], 0x2b ; ret
0x000002000000617c : add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c2e8a : add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x0000020000568dbc : add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000658cb2 : add byte ptr [rax - 0x7d], cl ; ret 0x4450
0x000002000016f982 : add byte ptr [rax - 0x7d], cl ; ret 0x4540
0x00000200003a04ae : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003f438 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200005b3a0c : add byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000020000011b1d : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000b9266 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000040eb63 : add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000002000003f2af : add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x00000200004b6ec3 : add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000003f2dc : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003f2f9 : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003f316 : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000016d1e2 : add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000003f336 : add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003f356 : add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200001e3474 : add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0x0000020000148694 : add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200003ed2dd : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x0000020000039cf9 : add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x00000200004d8a45 : add byte ptr [rax - 0x7d], cl ; ret 0x4918
0x0000020000398455 : add byte ptr [rax - 0x7d], cl ; ret 0x4920
0x000002000014a265 : add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200006e8b98 : add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x000002000013b3e0 : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200004cde43 : add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200000de13c : add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200006f30ab : add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x0000020000118fdf : add byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x0000020000129da4 : add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200000bd356 : add byte ptr [rax - 0x7d], cl ; ret 0x8b50
0x00000200006c8a07 : add byte ptr [rax - 0x7d], cl ; ret 0xb808
0x00000200003d3920 : add byte ptr [rax - 0x7d], cl ; ret 0xe804
0x0000020000437b1f : add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200001d0cc5 : add byte ptr [rax - 0x7d], cl ; ret 0xe840
0x0000020000445513 : add byte ptr [rax - 0x7d], cl ; ret 0xe84c
0x00000200004b13b1 : add byte ptr [rax - 0x7d], cl ; ret 0xe860
0x00000200006c053f : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000200000212ca : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000056d6c5 : add byte ptr [rax - 0x7d], cl ; ret 0xf02
0x00000200001b185e : add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x0000020000594fbe : add byte ptr [rax - 0x7d], cl ; ret 0xf58
0x000002000038b09e : add byte ptr [rax - 0x7d], cl ; ret 0xff04
0x00000200003f3e1c : add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200001aefc6 : add byte ptr [rax - 0x7d], cl ; retf ; call rbx
0x000002000038dd74 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret
0x00000200001446d8 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x000002000000486b : add byte ptr [rax - 0x7f], cl ; ret
0x00000200000dec09 : add byte ptr [rax - 0x7f], cl ; ret 0x100
0x00000200000c78e6 : add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200001d43a7 : add byte ptr [rax - 0x7f], cl ; ret 0x108
0x0000020000024eac : add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200004fb0fc : add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x00000200004fb0ad : add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000056b877 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000200006cdd1e : add byte ptr [rax - 0x7f], cl ; ret 0x298
0x00000200000d7762 : add byte ptr [rax - 0x7f], cl ; ret 0x5364
0x0000020000129aa7 : add byte ptr [rax - 0x7f], cl ; ret 0x590
0x00000200004d5440 : add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x000002000053f884 : add byte ptr [rax - 0x7f], cl ; ret 0x88
0x0000020000191807 : add byte ptr [rax - 0x7f], cl ; ret 0xa8
0x00000200004f37f5 : add byte ptr [rax - 0x7f], cl ; ret 0xb8
0x000002000002cb0f : add byte ptr [rax - 0x7f], cl ; ret 0xbf8
0x00000200006e4c6b : add byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200001a5911 : add byte ptr [rax - 0x7f], cl ; ret 0xed0
0x00000200003c3ef0 : add byte ptr [rax - 0x7f], cl ; rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret
0x0000020000102274 : add byte ptr [rax - 0x7f], cl ; sar eax, 0xb ; add byte ptr [rax], al ; jmp 0x2000010224a
0x00000200006cdd1d : add byte ptr [rax - 0x7f], r9b ; ret 0x298
0x00000200001ffdc0 : add byte ptr [rax - 0x7ff8fdea], bh ; ret
0x000002000022c053 : add byte ptr [rax - 0x7fffa2cd], al ; ret
0x00000200004fccea : add byte ptr [rax - 0x7fffffe6], bh ; ret
0x00000200000b623b : add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001737dd : add byte ptr [rax - 0x9000009], al ; ret
0x000002000018cfc2 : add byte ptr [rax - 0x90483], ah ; dec dword ptr [rax + 0x3b] ; ret 0xf72
0x00000200000dfd37 : add byte ptr [rax - 0x9fffff7], al ; ret 0x7504
0x000002000005db78 : add byte ptr [rax - 0x9fffffb], al ; ret
0x00000200003d18c4 : add byte ptr [rax - 0xa], al ; mov byte ptr [rdi + rcx], 0x85 ; ret
0x00000200001e4fbb : add byte ptr [rax - 0xaca6417], al ; inc dword ptr [rcx - 0x75] ; ret 0xc933
0x000002000010bdd8 : add byte ptr [rax - 0xb15d817], dl ; push rsi ; ret
0x00000200005c0561 : add byte ptr [rax - 0xbefc15], al ; ret
0x000002000026132b : add byte ptr [rax - 0xbffc03e], dh ; ret 0x3f
0x00000200002237eb : add byte ptr [rax - 0xbffeb3e], dl ; ret
0x0000020000466b54 : add byte ptr [rax - 0xc4c8bff], ch ; ret
0x00000200001fae9b : add byte ptr [rax - 0xcb85a17], dl ; push rsi ; ret
0x00000200004a03ce : add byte ptr [rax - 0xcf67d17], dl ; push rsi ; ret
0x0000020000381059 : add byte ptr [rax - 0xf000009], al ; inc dword ptr [rax] ; ret
0x00000200006c3e2b : add byte ptr [rax - 1], cl ; leave ; jne 0x200006c3e03 ; ret
0x0000020000020321 : add byte ptr [rax - 1], cl ; ret
0x00000200003b54e5 : add byte ptr [rax - 1], cl ; ret 0x3966
0x00000200004d22f3 : add byte ptr [rax - 1], cl ; ret 0x8348
0x00000200004cb5fa : add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200001f9549 : add byte ptr [rax - 1], cl ; ret 0x8948
0x000002000070ddbd : add byte ptr [rax - 1], cl ; ret 0xc0ff
0x000002000012642c : add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200005768e1 : add byte ptr [rax - 1], cl ; ret 0xc2f6
0x0000020000073acb : add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200000431a7 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000003cbcd : add byte ptr [rax - 9], cl ; ret
0x00000200000c8f9c : add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000053d95c : add byte ptr [rax*2 - 0x74b33075], al ; ret
0x000002000048277b : add byte ptr [rax], 0 ; add al, ch ; jl 0x200004827fc ; ret
0x000002000037e3c8 : add byte ptr [rax], 0 ; add al, ch ; jmp rsi
0x000002000048288d : add byte ptr [rax], 0 ; add al, ch ; push 0x72 ; ret
0x00000200006ed255 : add byte ptr [rax], 0 ; add al, ch ; ret 0xd044
0x0000020000389b20 : add byte ptr [rax], 0 ; add al, ch ; xlatb ; call rdx
0x00000200005c064e : add byte ptr [rax], 0 ; add bh, bh ; ret
0x00000200001889b7 : add byte ptr [rax], 0 ; add bl, ch ; xor cl, byte ptr [rax - 0x75] ; ret
0x00000200001b0215 : add byte ptr [rax], 0 ; add bl, dl ; loopne 0x200001b025e ; ret 0xf272
0x0000020000574490 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000c789a : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret
0x000002000015a782 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xf491
0x000002000036b098 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000be3cc : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000039454b : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001386fc : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x00000200005c2982 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200000cf5cc : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000594fbb : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xf58
0x000002000038b09b : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xff04
0x00000200000ecaf6 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000079950 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x000002000045e6ad : add byte ptr [rax], 0 ; add byte ptr [rbp + 0xb], al ; ret 0x8b44
0x0000020000483f83 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200004f5e30 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000192576 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x76], al ; ret 0x8b41
0x0000020000546e13 : add byte ptr [rax], 0 ; add byte ptr [rbx], bh ; ret 0x2375
0x00000200006325d1 : add byte ptr [rax], 0 ; add byte ptr [rbx], dh ; shr al, cl ; xor al, 0xca ; ret
0x000002000004aa74 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000056b01a : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x2cfbe801], dh ; ret
0x000002000012abab : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200000e40b1 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000200000d4405 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x000002000004a7fc : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x0000020000532f7f : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200004679d7 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000365ec8 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; ret
0x00000200000aa2a8 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000002000059658a : add byte ptr [rax], 0 ; add byte ptr [rcx + 3], al ; ret 0x4589
0x0000020000062c70 : add byte ptr [rax], 0 ; add byte ptr [rcx + rsi*2 + 0x33], dh ; shr al, cl ; ret
0x0000020000028cc9 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x17dfdbbc], cl ; ret 0xfffd
0x000002000012bc97 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; salc ; call r11
0x000002000012c0d3 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200000275da : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000012fb71 : add byte ptr [rax], 0 ; add byte ptr [rcx - 9], al ; ret
0x000002000056b19d : add byte ptr [rax], 0 ; add byte ptr [rcx - 9], cl ; ret
0x0000020000476b8c : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000003a0e9 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200001347c3 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200001242b0 : add byte ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200000c279a : add byte ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x000002000057d46c : add byte ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xb60f
0x00000200006185d4 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x0000020000487682 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x000002000048284d : add byte ptr [rax], 0 ; add byte ptr [rdx + 0x7028e801], dh ; ret
0x0000020000482763 : add byte ptr [rax], 0 ; add byte ptr [rdx + 0x7112e801], dh ; ret
0x00000200006c34ff : add byte ptr [rax], 0 ; add byte ptr [rdx - 0x49], dh ; ret
0x00000200001fef43 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x000002000060e4dc : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffe1
0x00000200001b3285 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7401
0x0000020000472eb2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7410
0x00000200004a6b6a : add byte ptr [rax], 0 ; call rax
0x0000020000657c9f : add byte ptr [rax], 0 ; inc dword ptr [rdx + 0x8058] ; ret
0x0000020000657ca5 : add byte ptr [rax], 0 ; ret
0x0000020000605da1 : add byte ptr [rax], 0 ; shr cl, 0xa3 ; ret
0x00000200001b8cdf : add byte ptr [rax], 0x46 ; ret
0x0000020000149ec3 : add byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x00000200006c940b : add byte ptr [rax], ah ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001e7e7d : add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000542f1c : add byte ptr [rax], ah ; add byte ptr [rax], al ; call 0x2000016d86b
0x0000020000708163 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000020000186bbe : add byte ptr [rax], ah ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004cd4f9 : add byte ptr [rax], ah ; add byte ptr [rcx + 0x3b], cl ; ret 0x1c74
0x00000200000549c1 : add byte ptr [rax], ah ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000219043 : add byte ptr [rax], ah ; call qword ptr [rcx]
0x000002000025d4a3 : add byte ptr [rax], ah ; jmp qword ptr [rbx]
0x00000200000043b8 : add byte ptr [rax], ah ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000023d343 : add byte ptr [rax], ah ; ret
0x000002000023d24f : add byte ptr [rax], ah ; ret 0x23
0x00000200002644d3 : add byte ptr [rax], ah ; ret 0x4e
0x0000020000081366 : add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000025e6ea : add byte ptr [rax], al ; adc al, 0xc1 ; cmp eax, dword ptr [rax] ; ret
0x000002000008299e : add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x00000200006d5f4b : add byte ptr [rax], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000047e23c : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200006c3429 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000092661 : add byte ptr [rax], al ; adc byte ptr [rdi], 1 ; ret
0x000002000062ef25 : add byte ptr [rax], al ; adc dword ptr [rdi], ecx ; ret 0x4389
0x0000020000262169 : add byte ptr [rax], al ; add ah, al ; ret
0x0000020000223a09 : add byte ptr [rax], al ; add ah, al ; ret 2
0x000002000018d002 : add byte ptr [rax], al ; add ah, bh ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x2372
0x000002000014ae56 : add byte ptr [rax], al ; add ah, bh ; ret
0x000002000025199a : add byte ptr [rax], al ; add ah, byte ptr [rip + 0x60c000d] ; ret 0x2546
0x0000020000076c4d : add byte ptr [rax], al ; add ah, cl ; ret
0x0000020000230e15 : add byte ptr [rax], al ; add ah, dh ; ret 0x3f
0x000002000023aa05 : add byte ptr [rax], al ; add ah, dl ; ret 0x60
0x0000020000064074 : add byte ptr [rax], al ; add al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000004cfdd : add byte ptr [rax], al ; add al, 0xe9 ; ret
0x000002000008428d : add byte ptr [rax], al ; add al, ah ; ret
0x000002000025f8dd : add byte ptr [rax], al ; add al, ah ; ret 0x40
0x0000020000077d4d : add byte ptr [rax], al ; add al, ah ; ret 0x4040
0x000002000023e495 : add byte ptr [rax], al ; add al, ah ; rol dword ptr [rsi], 0x40 ; ret 0x46
0x0000020000056c5b : add byte ptr [rax], al ; add al, al ; call 0x1ffc3069070
0x00000200000ca963 : add byte ptr [rax], al ; add al, al ; cmp eax, ecx ; ja 0x200000ca976 ; ret
0x000002000022871d : add byte ptr [rax], al ; add al, al ; ret
0x00000200002276a9 : add byte ptr [rax], al ; add al, al ; rol dword ptr [rax + rax], 0x30 ; ret 4
0x0000020000225c0d : add byte ptr [rax], al ; add al, bh ; call qword ptr [rax]
0x0000020000083855 : add byte ptr [rax], al ; add al, bh ; sysenter
0x000002000025fd21 : add byte ptr [rax], al ; add al, bl ; ret 0x4d
0x0000020000084f55 : add byte ptr [rax], al ; add al, bl ; ret 0x58aa
0x0000020000228395 : add byte ptr [rax], al ; add al, bl ; ret 5
0x0000020000072b0c : add byte ptr [rax], al ; add al, byte ptr [rax - 0x7c] ; test byte ptr [rdi], 0x84 ; ret 0xfffd
0x0000020000576d48 : add byte ptr [rax], al ; add al, byte ptr [rbx] ; add eax, 0xffd27e43 ; ret
0x00000200003fee40 : add byte ptr [rax], al ; add al, byte ptr [rcx] ; jmp 0x200003fee0e
0x000002000019bf5c : add byte ptr [rax], al ; add al, byte ptr [rsi] ; je 0x2000019bf6d ; xor al, al ; ret
0x0000020000144cfa : add byte ptr [rax], al ; add al, byte ptr [rsi] ; setbe al ; ret
0x000002000052a924 : add byte ptr [rax], al ; add al, ch ; and al, 0xa ; ret
0x000002000038e93f : add byte ptr [rax], al ; add al, ch ; cdq ; ret 0xffe2
0x0000020000508266 : add byte ptr [rax], al ; add al, ch ; cmc ; ret
0x000002000045ff00 : add byte ptr [rax], al ; add al, ch ; cmp byte ptr [rdi], ch ; sar edi, -0x75 ; ret
0x000002000053d94a : add byte ptr [rax], al ; add al, ch ; fimul word ptr [rbx] ; ret 0x4dff
0x0000020000471ced : add byte ptr [rax], al ; add al, ch ; fistp dword ptr [rbp - 0x3b] ; push rsi ; ret
0x0000020000123ab8 : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; ret 0xfffa
0x00000200000312a8 : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; ret 7
0x00000200003f436b : add byte ptr [rax], al ; add al, ch ; int 0xea
0x00000200004e1efa : add byte ptr [rax], al ; add al, ch ; jb 0x200004e1f42 ; ret 0x48ff
0x000002000048277c : add byte ptr [rax], al ; add al, ch ; jl 0x200004827fb ; ret
0x000002000037e3c9 : add byte ptr [rax], al ; add al, ch ; jmp rsi
0x000002000042eef8 : add byte ptr [rax], al ; add al, ch ; jo 0x2000042ef3f ; ret
0x00000200005aadef : add byte ptr [rax], al ; add al, ch ; leave ; ret
0x000002000042ee0b : add byte ptr [rax], al ; add al, ch ; mov ebp, 0x8bffffae ; ret
0x00000200003f347e : add byte ptr [rax], al ; add al, ch ; mov edx, 0x8bffc7f9 ; ret
0x000002000048288e : add byte ptr [rax], al ; add al, ch ; push 0x72 ; ret
0x0000020000548c91 : add byte ptr [rax], al ; add al, ch ; push rdi ; ret 6
0x000002000016885e : add byte ptr [rax], al ; add al, ch ; push rdx ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000064adfa : add byte ptr [rax], al ; add al, ch ; push rdx ; ret 0x48ff
0x00000200000c6691 : add byte ptr [rax], al ; add al, ch ; ret
0x00000200000644e6 : add byte ptr [rax], al ; add al, ch ; ret 0x592
0x00000200000536d6 : add byte ptr [rax], al ; add al, ch ; ret 0xa15
0x00000200005bee0a : add byte ptr [rax], al ; add al, ch ; ret 0xa95c
0x0000020000533192 : add byte ptr [rax], al ; add al, ch ; ret 0xae4e
0x0000020000569406 : add byte ptr [rax], al ; add al, ch ; ret 0xae55
0x000002000058c806 : add byte ptr [rax], al ; add al, ch ; ret 0xae6d
0x0000020000588e66 : add byte ptr [rax], al ; add al, ch ; ret 0xb2b4
0x0000020000540c96 : add byte ptr [rax], al ; add al, ch ; ret 0xb77e
0x00000200004c5dd6 : add byte ptr [rax], al ; add al, ch ; ret 0xb9e3
0x00000200003960f6 : add byte ptr [rax], al ; add al, ch ; ret 0xc54
0x00000200003a8fae : add byte ptr [rax], al ; add al, ch ; ret 0xc787
0x00000200003f4276 : add byte ptr [rax], al ; add al, ch ; ret 0xc7eb
0x00000200003caa06 : add byte ptr [rax], al ; add al, ch ; ret 0xc83f
0x0000020000597e76 : add byte ptr [rax], al ; add al, ch ; ret 0xcd81
0x00000200006ed256 : add byte ptr [rax], al ; add al, ch ; ret 0xd044
0x00000200006f63b2 : add byte ptr [rax], al ; add al, ch ; ret 0xd450
0x000002000045ed76 : add byte ptr [rax], al ; add al, ch ; ret 0xe112
0x000002000038e816 : add byte ptr [rax], al ; add al, ch ; ret 0xe2c3
0x00000200001799b6 : add byte ptr [rax], al ; add al, ch ; ret 0xf2b4
0x00000200000f6712 : add byte ptr [rax], al ; add al, ch ; ret 0xff21
0x00000200006d0b46 : add byte ptr [rax], al ; add al, ch ; ret 0xffa4
0x000002000064c8a6 : add byte ptr [rax], al ; add al, ch ; ret 0xffb4
0x00000200005a5f8a : add byte ptr [rax], al ; add al, ch ; ret 2
0x0000020000466977 : add byte ptr [rax], al ; add al, ch ; ror edi, 1 ; ret
0x000002000056f20a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000200000e2b85 : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; ret 0xfffc
0x00000200004e80db : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x0000020000651b5d : add byte ptr [rax], al ; add al, ch ; xchg eax, edi ; ret 0xffff
0x0000020000389b21 : add byte ptr [rax], al ; add al, ch ; xlatb ; call rdx
0x000002000023aa15 : add byte ptr [rax], al ; add al, cl ; ret
0x000002000035fee6 : add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x0000020000223b49 : add byte ptr [rax], al ; add al, dh ; ret
0x000002000026dcfd : add byte ptr [rax], al ; add al, dh ; ret 0x6c
0x0000020000223c21 : add byte ptr [rax], al ; add al, dl ; ret
0x0000020000226885 : add byte ptr [rax], al ; add al, dl ; ret 0x11
0x00000200006ba085 : add byte ptr [rax], al ; add al, dl ; ret 0x4009
0x00000200004b258d : add byte ptr [rax], al ; add bh, al ; call qword ptr [r8]
0x000002000004c6fe : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xc148
0x000002000018e741 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x000002000008b944 : add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x0000020000710e3c : add byte ptr [rax], al ; add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x000002000003a38d : add byte ptr [rax], al ; add bh, bh ; ret
0x00000200005982b4 : add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x000002000058ed2d : add byte ptr [rax], al ; add bh, bh ; ret 0x49e8
0x0000020000037601 : add byte ptr [rax], al ; add bh, bh ; ret 0x5189
0x000002000016cb28 : add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200005b98b6 : add byte ptr [rax], al ; add bh, bh ; ret 0x8349
0x0000020000466631 : add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x0000020000642cc6 : add byte ptr [rax], al ; add bh, bh ; ret 0xb983
0x00000200003a3fd2 : add byte ptr [rax], al ; add bh, bh ; ret 0xd53b
0x00000200000507b0 : add byte ptr [rax], al ; add bh, bh ; ret 0xff49
0x000002000008287d : add byte ptr [rax], al ; add bh, bl ; ret
0x00000200000be8e2 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000020000441b19 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x000002000037a7cf : add byte ptr [rax], al ; add bh, dh ; ret 0x402
0x00000200000dd0d1 : add byte ptr [rax], al ; add bh, dh ; ret 0x7000
0x0000020000367dad : add byte ptr [rax], al ; add bh, dh ; ret 0xfff
0x00000200002273f2 : add byte ptr [rax], al ; add bl, 0x11 ; add al, dl ; ret
0x00000200001857df : add byte ptr [rax], al ; add bl, al ; jae 0x200001857f0 ; xor eax, eax ; ret
0x0000020000076fea : add byte ptr [rax], al ; add bl, al ; jmp rax
0x000002000010a985 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xa ; ret
0x000002000064cf56 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000002 ; ret
0x0000020000023015 : add byte ptr [rax], al ; add bl, al ; mov eax, 1 ; ret
0x000002000002301b : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000002000010a8df : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x000002000010a8d3 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x000002000010a976 : add byte ptr [rax], al ; add bl, al ; mov eax, 5 ; ret
0x000002000010a8d9 : add byte ptr [rax], al ; add bl, al ; mov eax, 7 ; ret
0x000002000012610a : add byte ptr [rax], al ; add bl, al ; mov eax, edx ; ret
0x0000020000140137 : add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x0000020000257cfd : add byte ptr [rax], al ; add bl, al ; ret
0x000002000000e6a9 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000007c98d : add byte ptr [rax], al ; add bl, bl ; loop 0x2000007c936 ; fnstcw word ptr [rcx] ; ret
0x0000020000255209 : add byte ptr [rax], al ; add bl, bl ; ret 0x58
0x000002000039d624 : add byte ptr [rax], al ; add bl, bpl ; ret 0x3c7
0x000002000052a48e : add byte ptr [rax], al ; add bl, ch ; add eax, 0x8bf38a40 ; ret
0x00000200005c9022 : add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000589ff4 : add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x000002000058a210 : add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200004664dd : add byte ptr [rax], al ; add bl, ch ; fiadd dword ptr [rcx - 1] ; ret
0x00000200003be55b : add byte ptr [rax], al ; add bl, ch ; fld qword ptr [rcx - 1] ; ret 0x8944
0x00000200001348e2 : add byte ptr [rax], al ; add bl, ch ; lodsb al, byte ptr [rsi] ; call rax
0x0000020000039e02 : add byte ptr [rax], al ; add bl, ch ; ret
0x0000020000125bac : add byte ptr [rax], al ; add bl, ch ; ret 0x90cc
0x000002000036ff63 : add byte ptr [rax], al ; add bl, ch ; sub al, 0x8b ; ret
0x0000020000189b42 : add byte ptr [rax], al ; add bl, ch ; sub esi, esi ; ret
0x00000200001889b8 : add byte ptr [rax], al ; add bl, ch ; xor cl, byte ptr [rax - 0x75] ; ret
0x0000020000081bb5 : add byte ptr [rax], al ; add bl, cl ; ret
0x00000200000633bc : add byte ptr [rax], al ; add bl, dh ; ret
0x0000020000018eee : add byte ptr [rax], al ; add bl, dl ; loop 0x20000018ef0 ; ret 0xf15
0x00000200001ad741 : add byte ptr [rax], al ; add bl, dl ; loop 0x200001ad6d8 ; ret 0xd0f7
0x00000200001af4db : add byte ptr [rax], al ; add bl, dl ; loop 0x200001af472 ; ret 0xd0f7
0x00000200001a7504 : add byte ptr [rax], al ; add bl, dl ; loopne 0x200001a751b ; ret 0x789
0x00000200001b0216 : add byte ptr [rax], al ; add bl, dl ; loopne 0x200001b025d ; ret 0xf272
0x00000200001b1294 : add byte ptr [rax], al ; add bl, dl ; loopne 0x200001b12ae ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200002282d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x11], dh ; adc dword ptr [rax], eax ; ret
0x000002000008284d : add byte ptr [rax], al ; add byte ptr [rax + 0x19], cl ; ret 0xdd
0x000002000021903d : add byte ptr [rax], al ; add byte ptr [rax + 0x200011fe], bh ; call qword ptr [rcx]
0x0000020000003fbe : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000020000067048 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200001da6c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x48a
0x00000200001d27ab : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x00000200000bd16c : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200001814e7 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x0000020000574491 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x0000020000643ad1 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x00000200000d1719 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000064454e : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200003be91d : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x2b49
0x00000200004d87c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000010d08d : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8841
0x0000020000031445 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x0000020000262339 : add byte ptr [rax], al ; add byte ptr [rax + 0x30004ac1], bh ; ret
0x000002000069d319 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; cmp al, byte ptr [rbp + 3] ; ret
0x00000200001830c3 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; or byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x00000200000bdfd1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000703ae1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0x9204
0x00000200003b69a2 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rcx + rdi*4 - 0x17], dh ; ret
0x0000020000143b87 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rdi], cl ; test dword ptr [rcx], ebx ; ret 8
0x00000200003b5c97 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rsi - 0x17], dh ; ret 0x1566
0x00000200001b13e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; or dword ptr [rbp + rax - 0x18], esi ; ret 0xe72b
0x000002000000e97d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000c45ed : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x275
0x00000200001a31d0 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x28eb
0x00000200006f3075 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x7f73
0x00000200001304f0 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200005cbc5b : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200001de98e : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa677
0x00000200005ff175 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa77
0x00000200001162f9 : add byte ptr [rax], al ; add byte ptr [rax + 0x3bc72341], al ; ret
0x000002000025f5fd : add byte ptr [rax], al ; add byte ptr [rax + 0x3c0042c2], cl ; ret
0x000002000036d63b : add byte ptr [rax], al ; add byte ptr [rax + 0x450f0ff9], al ; ret 0xb0c3
0x0000020000652b14 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x0000020000260545 : add byte ptr [rax], al ; add byte ptr [rax + 0x4c0038c2], dh ; ret
0x0000020000263aad : add byte ptr [rax], al ; add byte ptr [rax + 0x540047c2], al ; ret
0x0000020000064a4c : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000200005a2fbf : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf903
0x0000020000510a1b : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x0000020000247b5d : add byte ptr [rax], al ; add byte ptr [rax + 0x64004dc1], cl ; ret 0x4d
0x0000020000228315 : add byte ptr [rax], al ; add byte ptr [rax + 0x700005c1], dh ; ret 5
0x000002000022b819 : add byte ptr [rax], al ; add byte ptr [rax + 0x70003dc1], bl ; ret
0x0000020000051546 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x3b49
0x00000200000d1f2d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x44f6
0x00000200003652a2 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200000a8286 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000172e64 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200001bfd08 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x0000020000043f32 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xa948
0x0000020000070f9b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc123
0x000002000014d412 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xf641
0x00000200000c786d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000020000595d6d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000002000017040e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000002000002c1a7 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x48b
0x00000200000f1557 : add byte ptr [rax], al ; add byte ptr [rax + 0xfc18548], al ; xchg eax, ebp ; ret 0xc28b
0x000002000000bb52 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000002000018c12b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000047cadc : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x34c
0x000002000002bf35 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000b4423 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x000002000043bb2b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000066625a : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x000002000014fe80 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x894d
0x0000020000196d5b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x9948
0x000002000052a02b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x0000020000058380 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0x4c ; ret
0x00000200000e77df : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x00000200001a7a22 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x4e9
0x00000200001a5ab6 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x00000200000b8f72 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x0000020000069ded : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x7d], al ; ret
0x00000200000f839a : add byte ptr [rax], al ; add byte ptr [rax + rcx*8 - 0x3fccfd8b], al ; ret
0x000002000004dad1 : add byte ptr [rax], al ; add byte ptr [rax - 0x173474b8], al ; ret
0x0000020000017c75 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x20000017cce ; mov dword ptr [rax], eax ; ret
0x000002000015220d : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200002273f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x2fffee3d], al ; ret
0x000002000009dea9 : add byte ptr [rax], al ; add byte ptr [rax - 0x376f6f70], dl ; ret
0x000002000003c78f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000002000041b35e : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0
0x000002000026dced : add byte ptr [rax], al ; add byte ptr [rax - 0x3e], al ; insb byte ptr [rdi], dx ; add al, dh ; ret 0x6c
0x000002000003c86b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc227108a
0x000002000004a8a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc227f1be
0x00000200000d9b22 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc230e341
0x000002000012dae1 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2362400
0x00000200001d9585 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc240dda4
0x00000200001d9e63 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc240e682
0x00000200005744ac : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc27a8ccb
0x00000200000f0bc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000b7e75 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000225ddd : add byte ptr [rax], al ; add byte ptr [rax - 0x43], cl ; adc al, 0 ; nop ; ret 0x14
0x0000020000223391 : add byte ptr [rax], al ; add byte ptr [rax - 0x4ffff13f], ah ; ret
0x00000200001e848c : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; pushfq ; ret 0xfff8
0x000002000053967d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r8b, r13b ; xlatb ; ret 0xffbc
0x000002000019f385 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x000002000007c96d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x00000200006168ab : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x000002000002ca50 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x000002000011108a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7401
0x000002000039b711 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xe975
0x00000200001f6e4a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000016da18 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200000c4eae : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x00000200001a6632 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc16328ce
0x000002000061d890 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x0000020000468c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x3de8, -0x53 ; ret
0x00000200004703f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x50e8, 0x35 ; ret
0x000002000047ebf1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x54e8, 0x4d ; ret 0x41ff
0x000002000046feec : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x59e8, 0x3a ; ret
0x000002000015a783 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xf491
0x00000200005a771f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xffaf
0x00000200004ff14d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000004146 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0x80
0x00000200004721c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0xff
0x0000020000032b32 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000cbccd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200001bf7e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000002000043bf82 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or eax, ebp ; ret
0x000002000049e490 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or edi, dword ptr [rbx] ; ret 0x470f
0x00000200000ca82b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 0x10 ; ret
0x000002000049794e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200003dd9bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; sbb dh, dh ; ret 0x4901
0x000002000001aca8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000270ddb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2ae9
0x00000200003b0c63 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000037a414 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4166
0x0000020000594638 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x44c7
0x00000200000be3cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200003bf7dd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x000002000063224e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8341
0x000002000040a934 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200000770c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200006c3df9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000039454c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001386fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x000002000016f678 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000002bf41 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200000ca004 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x00000200000cffdd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000162f59 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x0000020000115e92 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200003fa920 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd233
0x0000020000556881 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xff33
0x00000200001e2f45 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000004f218
0x0000020000489343 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200004855dc
0x00000200003fef14 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r10
0x00000200003c0e3a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r15
0x00000200004f496b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000062eac1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x0000020000503df1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; salc ; call 0x20000270048
0x00000200005739f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x23], r9b ; ret 0x3b49
0x00000200001eb8ac : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x0000020000631118 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x0000020000631248 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x00000200003f3431 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret
0x00000200005c2983 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add eax, dword ptr [rcx - 0x75] ; ret
0x0000020000464326 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200003b33e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200004d448f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200000d665e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rax ; jo 0x200000d6657 ; ret
0x0000020000405793 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sbb r14b, r14b ; ret
0x00000200001c36e9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae78bfc], bpl ; ret 0x850f
0x0000020000421bba : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], al ; ret 0x1475
0x00000200005147c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; div byte ptr [rsi + rsi*2 - 0x15] ; ret
0x0000020000168470 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000168484 ; jmp rcx
0x00000200001685a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001685b6 ; call rcx
0x00000200001685d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001685e2 ; call rcx
0x00000200006f4617 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x00000200004b20c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000516b87 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0xdd2
0x000002000064e60c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0x00000200004672ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 2], cl ; ret
0x0000020000168554 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x000002000019f395 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp 0x2000019f3b4
0x000002000000617a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000568ddb : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000658cb0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4450
0x00000200003a04ac : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003f436 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200005b3a0a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000200000de42e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000b9264 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000040eb61 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4820
0x000002000003f2ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x00000200004fd8b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000003f2da : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003f2f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003f314 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000016d1e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000003f334 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003f354 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200001e3472 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0x0000020000148692 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000039cf7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x00000200004cde41 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200006f30a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x0000020000118fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x00000200003d391e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe804
0x0000020000437b1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200004b13af : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe860
0x00000200000212c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000056d6c3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf02
0x0000020000594fbc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf58
0x000002000038b09c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff04
0x00000200003f3e1a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200001b450a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf ; call rbx
0x0000020000004869 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001d43a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x108
0x0000020000024eaa : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200004d543e : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x000002000053f882 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x88
0x0000020000191805 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xa8
0x00000200000dfd35 : add byte ptr [rax], al ; add byte ptr [rax - 0x9fffff7], al ; ret 0x7504
0x000002000005db76 : add byte ptr [rax], al ; add byte ptr [rax - 0x9fffffb], al ; ret
0x00000200003d18c2 : add byte ptr [rax], al ; add byte ptr [rax - 0xa], al ; mov byte ptr [rdi + rcx], 0x85 ; ret
0x0000020000261329 : add byte ptr [rax], al ; add byte ptr [rax - 0xbffc03e], dh ; ret 0x3f
0x00000200002237e9 : add byte ptr [rax], al ; add byte ptr [rax - 0xbffeb3e], dl ; ret
0x000002000002031f : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200004cb5f8 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200005768df : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xc2f6
0x0000020000073ac9 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x000002000007102e : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200000c8f9a : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200001e7e7b : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000440fc5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000200002644dd : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x4e
0x0000020000081364 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000008299c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x000002000047e23a : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000076c4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x00000200000c786b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000200000f1c5d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000ecaf7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000630c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x0000020000370a43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x000002000009464b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x400f
0x0000020000079951 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x0000020000143430 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8789
0x000002000018b3c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49e0
0x0000020000141deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; and al, bl ; ret
0x00000200000ecaf9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000141e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dl, bh ; ret
0x00000200000630c8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x000002000051825c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x0000020000081f74 : add byte ptr [rax], al ; add byte ptr [rax], al ; add esp, dword ptr [rcx] ; ret
0x00000200000db09a : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d3dea : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000812b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x000002000011751f : add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000002000008567c : add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x0000020000083854 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; sysenter
0x0000020000141e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; cli ; ret
0x00000200000827bc : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200001279d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x000002000007c98c : add byte ptr [rax], al ; add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000084d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; jle 0x20000084d29 ; ret 0x94
0x00000200000847dc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rsi
0x000002000007c96c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x0000020000082cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret 0x21d1
0x000002000035fee5 : add byte ptr [rax], al ; add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x00000200000852ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000189414 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov cr8, rax ; ret
0x0000020000084904 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dh, 0x59 ; ret
0x000002000000bb51 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000082d44 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x0000020000141dec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, cr3 ; ret
0x00000200000dfd34 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add dh, dh ; ret 0x7504
0x00000200000d50a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200000a379e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000008293c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x0000020000076f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000063b23c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000020000081ab4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2237
0x000002000008191c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000008184c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x344d
0x00000200000817c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x399b
0x00000200006b9fe5 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4009
0x000002000008129c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x0000020000082cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x0000020000081004 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4c9a
0x0000020000084d04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53e8
0x000002000008477c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x82bc
0x00000200000832e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x8d0a
0x0000020000083fdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb0cc
0x00000200000841b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x00000200000850f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb9b4
0x000002000008395c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xdf27
0x000002000008324c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x00000200001239f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; setb al ; ret
0x000002000004f2f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; sete al ; ret
0x0000020000174bf3 : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; ret
0x0000020000082d14 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x0000020000082314 : add byte ptr [rax], al ; add byte ptr [rax], al ; wait ; ret 0x55a5
0x0000020000083d34 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebp ; push rsp ; ret
0x0000020000084a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ecx ; ret 0x7c05
0x000002000055f93e : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200001aec85 : add byte ptr [rax], al ; add byte ptr [rax], bh ; xchg eax, ecx ; ret
0x00000200001c7a25 : add byte ptr [rax], al ; add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000084a55 : add byte ptr [rax], al ; add byte ptr [rax], ch ; loope 0x200000849e9 ; ret
0x00000200002644cd : add byte ptr [rax], al ; add byte ptr [rax], ch ; ror byte ptr [rsi], 0x20 ; ret 0x4e
0x00000200004645da : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax + 3], cl ; ret 0x8d48
0x00000200001f6253 : add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x200001f61fe
0x000002000008176d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000002000025e9d5 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x40
0x00000200006ba00d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4009
0x00000200002270d1 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 4
0x0000020000241861 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ror byte ptr [rax], 0x88 ; ret 0x48
0x0000020000370a45 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x000002000008299d : add byte ptr [rax], al ; add byte ptr [rax], dl ; js 0x20000082a27 ; ret
0x000002000009464d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret 0x400f
0x0000020000029d3e : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; ret
0x000002000006ba7c : add byte ptr [rax], al ; add byte ptr [rbp + 0x19], dh ; xor al, al ; ret
0x000002000003c400 : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x00000200006c75ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; inc dword ptr [rbp + rcx*4 + 0x6a] ; ret 0x8d44
0x00000200005f6a22 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x000002000015041e : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x000002000007005c : add byte ptr [rax], al ; add byte ptr [rbp + 0x3a], al ; ret 0x337d
0x0000020000139443 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200001f52e7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000232aa9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e003cc1], ah ; ret 0x3c
0x00000200000d8871 : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f0458], cl ; ret
0x0000020000130977 : add byte ptr [rax], al ; add byte ptr [rbp + 0x440f1050], cl ; ret 0x8b49
0x00000200000aca09 : add byte ptr [rax], al ; add byte ptr [rbp + 0x5b], bl ; ret
0x000002000045e6ae : add byte ptr [rax], al ; add byte ptr [rbp + 0xb], al ; ret 0x8b44
0x000002000010a5b4 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; ret 0x3b66
0x00000200003aadbb : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; ret 0x8b49
0x000002000003af86 : add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200003bd6c9 : add byte ptr [rax], al ; add byte ptr [rbp + 2], dh ; ret
0x00000200000a856b : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0x854d
0x0000020000531d94 : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xc985
0x00000200006d3b94 : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xfb83
0x0000020000477d42 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; call 0x20000023fb7
0x00000200003f4026 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; call 0x20000023fb8
0x0000020000079953 : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000200000b62e3 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x00000200006c1fb3 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000200003fa20c : add byte ptr [rax], al ; add byte ptr [rbp - 0x3a], dh ; call 0x20000023fb8
0x0000020000154854 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3eb0f040], al ; ret
0x0000020000480d65 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3ebbf040], al ; ret
0x00000200003f9ab7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x4a], dh ; call 0x20000023fb8
0x00000200003995c4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be01], al ; ret
0x00000200000619c2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x0000020000169c13 : add byte ptr [rax], al ; add byte ptr [rbp - 0x748d8a2e], al ; ret
0x0000020000271b82 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b306b6], cl ; ret
0x0000020000651286 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b31bb6], cl ; ret
0x000002000065b5be : add byte ptr [rax], al ; add byte ptr [rbp - 0x74b3bcb6], cl ; ret
0x000002000016e084 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74bae8b2], cl ; ret
0x00000200004a4a77 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74dd8725], al ; ret
0x0000020000003feb : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000006d3ae : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200005893c7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200001cbcf4 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000442358 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x000002000015ee28 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xb848
0x000002000001ca42 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000040e28c : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x39e8
0x0000020000182398 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000040e122 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xa3e8
0x0000020000192577 : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0x8b41
0x0000020000398c3a : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4910
0x000002000018be19 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; cdq ; ret
0x00000200005b1f6f : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; div byte ptr [rcx + rbp - 0xa] ; ret
0x000002000017392d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ret 0x1574
0x0000020000152eb2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret 0
0x0000020000386e2a : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret 0x274f
0x00000200004a44f9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200001e60d5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; ret 0x1074
0x00000200005c0ecb : add byte ptr [rax], al ; add byte ptr [rbp - 0x9ea8a40], al ; ret 0x7401
0x00000200005ba575 : add byte ptr [rax], al ; add byte ptr [rbp - 0xc58a40], al ; ret
0x00000200006cb006 : add byte ptr [rax], al ; add byte ptr [rbp - 0xf58740], al ; ret
0x00000200003993fa : add byte ptr [rax], al ; add byte ptr [rbp - 0xf68740], al ; ret
0x000002000006af1c : add byte ptr [rax], al ; add byte ptr [rbx + 0x2bd123d3], cl ; ret 0xc63b
0x0000020000084af5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x00000200001620af : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f01f9], al ; ret 0x521
0x0000020000117051 : add byte ptr [rax], al ; add byte ptr [rbx + 0x58b2448], cl ; scasd eax, dword ptr [rdi] ; jmp qword ptr [rbx]
0x000002000017ac08 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000002000042af9b : add byte ptr [rax], al ; add byte ptr [rbx + 0x6cebe8ca], cl ; ret
0x00000200004f525a : add byte ptr [rax], al ; add byte ptr [rbx + 0x7de0e8fe], cl ; ret 0x8bff
0x000002000007b2c4 : add byte ptr [rax], al ; add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x0000020000556ad2 : add byte ptr [rax], al ; add byte ptr [rbx + rcx - 0x75], dh ; ret
0x00000200003f0b01 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x00000200000cc0d7 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x0000020000084e3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x25], al ; ret 0
0x0000020000423b3c : add byte ptr [rax], al ; add byte ptr [rbx - 0x3bc117f5], cl ; ret 0x48ff
0x0000020000257cf1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3cffa53d], bh ; ret
0x0000020000150f7f : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200000c3aeb : add byte ptr [rax], al ; add byte ptr [rbx - 0x50f0b63d], cl ; ret 0x8b4a
0x0000020000582490 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b30fab], cl ; ret
0x00000200007063ff : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b3fbbf], cl ; ret 0x589
0x00000200000bbf05 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7f83f], al ; ret
0x00000200005903de : add byte ptr [rax], al ; add byte ptr [rbx - 0x74bba7a9], cl ; ret
0x00000200003c8960 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0fc08], al ; ret
0x000002000045bc44 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x00000200003b4299 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0da08], al ; ret 0
0x00000200001e5728 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bbeefb9], cl ; ret 0xcc75
0x0000020000361009 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fd18], al ; ret 0
0x00000200006d2868 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb70740], al ; ret
0x000002000018b30c : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb71f3f], al ; ret
0x0000020000364cfb : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x000002000017913a : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x0000020000596ab8 : add byte ptr [rax], al ; add byte ptr [rbx - 0xa], dh ; ret
0x00000200001a6d74 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x000002000003148a : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4789
0x000002000003ef83 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8041
0x000002000037f808 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x0000020000138507 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200003cdb61 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x5f41
0x00000200001f1122 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8966
0x0000020000558c0c : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8b48
0x000002000006931c : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000180dbe : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1077
0x0000020000082b7d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x00000200001c0568 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1b72
0x000002000018001f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1f75
0x0000020000546e14 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2375
0x00000200003df484 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x470f
0x0000020000108c7e : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x574
0x00000200001aec12 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x57e
0x000002000012a4e5 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000048c3e4 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x840f
0x000002000055475c : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x850f
0x000002000055474a : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x860f
0x000002000005aff3 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8d0f
0x0000020000433fd8 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x0000020000110b0a : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x973
0x00000200001a6050 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x00000200001edfd3 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; leave ; add eax, ecx ; ret
0x0000020000083ef5 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret
0x000002000019447d : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200000cc7fe : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x3b41
0x00000200004cdbb6 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x448b
0x0000020000143432 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8789
0x00000200001744b7 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x000002000014e97e : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8d48
0x000002000004af5c : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xd08b
0x00000200001373a8 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4f89
0x00000200000563b2 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; add cl, byte ptr [rcx + 0x23] ; ret
0x000002000037abb5 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x000002000058ad44 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x2b] ; ret
0x0000020000642dea : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fld xword ptr [rbx] ; ret 0x2579
0x0000020000485363 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul cl ; ret
0x000002000069b9c5 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; leave ; call r9
0x00000200007024cb : add byte ptr [rax], al ; add byte ptr [rbx], dh ; leave ; call rax
0x00000200003c1c9c : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret
0x000002000015b221 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200000abb4e : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf44
0x000002000041eb44 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000040015d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000005230f : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000015695c : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x00000200006325d2 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr al, cl ; xor al, 0xca ; ret
0x0000020000032066 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200003c2ede : add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x00000200001eb73e : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x000002000019e30e : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x344
0x000002000004aa75 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000056b01b : add byte ptr [rax], al ; add byte ptr [rcx + 0x2cfbe801], dh ; ret
0x00000200006a0e25 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x473
0x000002000000bc48 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200001dd798 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x0000020000014050 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000138847 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200000c36ff : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x0000020000491084 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000ad94a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a19fe : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000002000005328d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x000002000014fd48 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200004465d1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000b8840 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x000002000046a85b : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x00000200006bb1db : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f37a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d4406 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x00000200000f56e0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; ret
0x00000200000cf5f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004a7fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x000002000011b35c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x000002000004edea : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r13 ; ret
0x000002000010cb76 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x000002000037b6f8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cbd28 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071d50 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004d40e2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003ab296 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200003cff7e : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000059d669 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x0000020000365ec9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000200004494a0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000b3305 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200003e092d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200004a7a50 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000ac7ef : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x0000020000571055 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200005d0c37 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d9e98 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000210a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret 0x8948
0x00000200005ffa48 : add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x000002000061c31f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov bh, 0x50 ; add dh, dh ; ret 0xf10
0x0000020000583eca : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000200005893b7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x00000200000aa2a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000020000363f6b : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x00000200005953a7 : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000062eb1b : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000045bcb2 : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0xba41
0x00000200003e075e : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x00000200000eaa2e : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000024c4cd : add byte ptr [rax], al ; add byte ptr [rcx + rax*8], ch ; add r8b, r11b ; ret 0x4d
0x000002000025e6e9 : add byte ptr [rax], al ; add byte ptr [rcx + rax*8], dl ; cmp eax, dword ptr [rax] ; ret
0x000002000004cfdc : add byte ptr [rax], al ; add byte ptr [rcx + rbp*8], al ; ret
0x00000200003c6a64 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], dh ; ret
0x00000200004c0fcf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x1d], al ; ret
0x00000200006656b7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x1d], al ; stosb byte ptr [edi], al ; ret 0x48ff
0x000002000018ccdb : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x43], cl ; or byte ptr [rax + 0xb], cl ; ret 0x4466
0x00000200003a9fe1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x5d], cl ; out 0x3b, eax ; ret 0x8b48
0x00000200005a5bc1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x6d], cl ; or al, ch ; sysenter
0x0000020000469a76 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x6f], al ; xor dh, dh ; ret
0x00000200006cf081 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x75], al ; mov al, 0xe8 ; ret
0x00000200001f7066 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xc], cl ; ret 0x8b48
0x0000020000062c71 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*2 + 0x33], dh ; shr al, cl ; ret
0x0000020000028cca : add byte ptr [rax], al ; add byte ptr [rcx - 0x17dfdbbc], cl ; ret 0xfffd
0x0000020000407c49 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3a], al ; adc byte ptr [r9], al ; ret
0x000002000005dd65 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200000c69a9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x4f], al ; adc dword ptr [rbp - 0x75], ecx ; ret
0x000002000019ac57 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x0000020000395372 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; pop rsi ; adc dh, dh ; ret 0xf04
0x0000020000019791 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; push rcx ; add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000002000057bcee : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x0000020000372664 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add qword ptr [r13 + 0x2b], rcx ; ret
0x000002000011ea5a : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b768bb], cl ; ret
0x00000200003a96de : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b7e7b5], cl ; ret
0x000002000060107c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; adc esi, esi ; ret 0x443f
0x00000200001b1615 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200004cddbc : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4120
0x00000200004f070b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200004abcef : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; fdivr st(7), st(0) ; sal esi, cl ; ret
0x0000020000060b98 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000000ed9c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x48f0
0x000002000064c9db : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x587
0x000002000058a1cc : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x000002000016e051 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b41
0x00000200001aa8ea : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000038ed65 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x950f
0x000002000069bb86 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbb49
0x000002000012b54b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200003db121 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200000c49b4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xf48
0x000002000013ee04 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xf741
0x0000020000124b4f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000002000012bc98 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; salc ; call r11
0x000002000012c0d4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x0000020000446022 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; enter 0x73e8, 0xd ; ret
0x000002000058e96f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x0000020000426c92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000547f1
0x00000200000cccb7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006a060d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x0000020000024f50 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000011e9f4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xb841
0x000002000004561c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000009d55 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000018ae62 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000158512 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x41c3
0x00000200004622bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200005fb393 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; fbstp dword ptr [rdx + rcx - 0xa] ; ret
0x00000200000113b4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200001e6113 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x775
0x000002000001ce9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200003bedbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4108
0x000002000018b3c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49e0
0x000002000058a31a : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x00000200000f8e6c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0xf618
0x000002000001d2a3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000005527e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x3b0c
0x000002000001e804 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000200004dcf99 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4110
0x0000020000127b58 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200000e0d75 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x00000200006c8a0e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4830
0x00000200000eac0a : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x00000200000e1135 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; rol dword ptr [rcx + rax*2], -0x7d ; ret 0x48e0
0x0000020000399af9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7ebeefb8], cl ; ret 0x1000
0x00000200005e4139 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x0000020000519775 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000200000f20c3 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000061976 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000392093 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7503
0x000002000006198f : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7506
0x000002000002f0dc : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7508
0x0000020000023690 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000020000020518 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200003b9f4d : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000538494 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8948
0x000002000049776d : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8b4a
0x00000200000d7313 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0xd348
0x0000020000636e14 : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; leave ; jne 0x20000636e07 ; ret
0x00000200004cbd81 : add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret
0x000002000012fb72 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000002000056b19e : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret
0x00000200002375f5 : add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret
0x000002000064454a : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000038f58f : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000447088 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000071ce5 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rdi], cl ; test ebp, edx ; ret 0x18
0x0000020000129fa3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200005bf06e : add byte ptr [rax], al ; add byte ptr [rcx], bh ; sbb dword ptr [rdi], ecx ; ret 0xd233
0x0000020000082d15 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; jne 0x20000082cb3 ; ret
0x0000020000232ac5 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0x00000200006e79bc : add byte ptr [rax], al ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000023f0c9 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; and byte ptr [rdi], al ; ret
0x00000200000841b5 : add byte ptr [rax], al ; add byte ptr [rdi + 0x42], al ; ret 0xb1
0x000002000013156c : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000eb815 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; ret
0x0000020000112d7d : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000003a0ea : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000483739 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001347c4 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200002315fd : add byte ptr [rax], al ; add byte ptr [rdi + 0x62003bc1], ah ; ret 0x3b
0x00000200000154f2 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000191c7f : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b8
0x00000200001242b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x0000020000183359 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x0000020000068fb1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x00000200001fb6e5 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4e80
0x0000020000053950 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x58b
0x000002000001b370 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f7
0x00000200000a8d84 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200000cdfe6 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8948
0x00000200000f467c : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b4c
0x00000200000c279b : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x000002000001bfb0 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret
0x00000200000407b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret 0x3168
0x000002000057773d : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x46], cl ; loopne 0x200005776d8 ; ret
0x0000020000636f1f : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x47], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x00000200000abb78 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x00000200001a248d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001b7938 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000052aa85 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0xcd8b
0x000002000060f7b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0xf45
0x00000200001a2470 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 1] ; ret
0x00000200000a5345 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004cf522 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8d44
0x000002000057d46d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xb60f
0x0000020000081365 : add byte ptr [rax], al ; add byte ptr [rdi + rdi*2], dl ; ret
0x0000020000083f8d : add byte ptr [rax], al ; add byte ptr [rdi - 0x20], dl ; ret
0x000002000022ff19 : add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret 0x3a
0x0000020000141ded : add byte ptr [rax], al ; add byte ptr [rdi], cl ; and al, bl ; ret
0x00000200000bffe4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x00000200005b7f58 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x47 ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200003fa5fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000000edf4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x0000020000036ec0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; sbb dh, dh ; ret 0xf20
0x00000200001829fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov edx, 0x830f0fe1 ; ret
0x000002000055851b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000002000060c404 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4488
0x00000200000499ab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4589
0x0000020000125b6b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x789
0x00000200000ac3bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8445
0x00000200004f9762 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8a44
0x0000020000432c8c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xba0f
0x00000200000fefab : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc103
0x00000200000ae132 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd88a
0x00000200001d6a32 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ah, bl ; ret
0x000002000061933e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ecx, edi ; ret 0xffdd
0x00000200001f52c4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000058ee55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200006185d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x00000200000a3ab3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x9488
0x00000200001ef433 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000487683 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000158338 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d48
0x000002000048284e : add byte ptr [rax], al ; add byte ptr [rdx + 0x7028e801], dh ; ret
0x0000020000482764 : add byte ptr [rax], al ; add byte ptr [rdx + 0x7112e801], dh ; ret
0x000002000022ff25 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8 + 0x3a], bh ; add byte ptr [rsi], dl ; ret
0x0000020000261425 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8 + 0x41], bh ; add byte ptr [rax], dl ; ret
0x000002000025cc79 : add byte ptr [rax], al ; add byte ptr [rdx + rax*8 + 0x50], ah ; add byte ptr [rsi], dh ; ret
0x0000020000034c80 : add byte ptr [rax], al ; add byte ptr [rdx + rdx*8 - 0x49f0eb8c], al ; ret 0x2b41
0x0000020000171b93 : add byte ptr [rax], al ; add byte ptr [rdx - 0x18], bh ; ret
0x00000200002551fd : add byte ptr [rax], al ; add byte ptr [rdx - 0x28ffa73e], bh ; ret 0x58
0x000002000045ffc0 : add byte ptr [rax], al ; add byte ptr [rdx - 0x3074b6ff], dh ; call rbx
0x00000200006c3500 : add byte ptr [rax], al ; add byte ptr [rdx - 0x49], dh ; ret
0x00000200000d1f29 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x44f6
0x000002000036529e : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200003643c5 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ac786 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000200006605d4 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x3a76
0x00000200003e5dd4 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x840f
0x00000200001a42c7 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x973
0x0000020000474f7b : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xe175
0x0000020000083d45 : add byte ptr [rax], al ; add byte ptr [rdx], cl ; ret 0xf854
0x000002000008127d : add byte ptr [rax], al ; add byte ptr [rdx], dl ; ret
0x0000020000501fc7 : add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x000002000019c011 : add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8366
0x00000200005f96ec : add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x000002000018842f : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200004a7fe8 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x1773
0x000002000058e499 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x0000020000216411 : add byte ptr [rax], al ; add byte ptr [rsi + 0x460012c0], cl ; ret 0x12
0x000002000006f34f : add byte ptr [rax], al ; add byte ptr [rsi + 0xb], ah ; ret 0x4166
0x000002000013454a : add byte ptr [rax], al ; add byte ptr [rsi + 3], bh ; mov al, 1 ; ret
0x00000200001c6109 : add byte ptr [rax], al ; add byte ptr [rsi + rdx - 0x7d], bh ; ret 0x4116
0x000002000058ebd6 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001b8893 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000503271 : add byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000084d9d : add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x000002000002526c : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000007c713 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x300
0x0000020000232ab5 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x3c
0x000002000008b943 : add byte ptr [rax], al ; add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x00000200000812b5 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000083d35 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x00000200001d7dc1 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret 0xf48
0x000002000054a33b : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret
0x00000200005e0160 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200000322a3 : add byte ptr [rax], al ; add ch, cl ; sub ecx, ebp ; ret
0x0000020000393b49 : add byte ptr [rax], al ; add ch, cl ; sub esi, esi ; ret
0x00000200003b2326 : add byte ptr [rax], al ; add cl, al ; call 0x1ffc3c66742
0x000002000058fff5 : add byte ptr [rax], al ; add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x0000020000059530 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x75] ; ret
0x0000020000437b50 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x0000020000619330 : add byte ptr [rax], al ; add cl, byte ptr [rdi] ; test ebx, ebp ; ret 0xffdd
0x00000200001feac1 : add byte ptr [rax], al ; add cl, ch ; call qword ptr [rax]
0x00000200003a5846 : add byte ptr [rax], al ; add cl, ch ; jmp rbx
0x000002000052563d : add byte ptr [rax], al ; add cl, ch ; mov esi, 0x8bfffffe ; ret
0x00000200005ebf0b : add byte ptr [rax], al ; add cl, ch ; pop rax ; ret 0xffe5
0x00000200001ee439 : add byte ptr [rax], al ; add cl, ch ; pop rbp ; ret
0x000002000000be51 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000200003a5783 : add byte ptr [rax], al ; add cl, ch ; ret 0x2e4
0x0000020000586476 : add byte ptr [rax], al ; add cl, ch ; ret 0xaec9
0x00000200005fbfaa : add byte ptr [rax], al ; add cl, ch ; ret 0xe076
0x000002000063181f : add byte ptr [rax], al ; add cl, ch ; ret 0xe4e8
0x0000020000601671 : add byte ptr [rax], al ; add cl, ch ; ret 0xe638
0x00000200004c230a : add byte ptr [rax], al ; add cl, ch ; ret 0xf999
0x000002000007ee76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc1
0x000002000007ed76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc2
0x000002000007ec76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc3
0x000002000007eb76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc4
0x000002000007ea76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc5
0x000002000007e976 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc6
0x000002000007e876 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc7
0x000002000007e776 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc8
0x000002000007e676 : add byte ptr [rax], al ; add cl, ch ; ret 0xffc9
0x000002000007e576 : add byte ptr [rax], al ; add cl, ch ; ret 0xffca
0x000002000007e476 : add byte ptr [rax], al ; add cl, ch ; ret 0xffcb
0x000002000007e376 : add byte ptr [rax], al ; add cl, ch ; ret 0xffcc
0x000002000007e276 : add byte ptr [rax], al ; add cl, ch ; ret 0xffcd
0x000002000007e176 : add byte ptr [rax], al ; add cl, ch ; ret 0xffce
0x000002000007e076 : add byte ptr [rax], al ; add cl, ch ; ret 0xffcf
0x000002000007df76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd0
0x000002000007de76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd1
0x000002000007dd76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd2
0x000002000007dc76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000002000007db76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd4
0x000002000007da76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd5
0x000002000007d976 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd6
0x000002000007d876 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd7
0x000002000007d776 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd8
0x000002000007d676 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd9
0x000002000007d576 : add byte ptr [rax], al ; add cl, ch ; ret 0xffda
0x000002000007d476 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdb
0x000002000007d376 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdc
0x000002000007d276 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdd
0x000002000007d176 : add byte ptr [rax], al ; add cl, ch ; ret 0xffde
0x000002000007d076 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x000002000007cf76 : add byte ptr [rax], al ; add cl, ch ; ret 0xffe0
0x000002000060e4dd : add byte ptr [rax], al ; add cl, ch ; ret 0xffe1
0x000002000011f303 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x000002000044558f : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x00000200000ce07d : add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x000002000005793e : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000002000007edf6 : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000020000082cfd : add byte ptr [rax], al ; add cl, cl ; ret 0x21d1
0x0000020000044c47 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001627d6 : add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x00000200005ac85e : add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x0000020000472ece : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000020000472eb3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x00000200000274ae : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200000e7ae2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7520
0x0000020000057adf : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x0000020000395369 : add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x0000020000470f4f : add byte ptr [rax], al ; add dh, dh ; ret 0xf03
0x000002000010cb01 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x000002000002bb88 : add byte ptr [rax], al ; add dh, dh ; ret 0xf1f
0x0000020000590e41 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000020000141e1d : add byte ptr [rax], al ; add dl, bh ; ret
0x000002000023cb11 : add byte ptr [rax], al ; add dl, ch ; ret
0x00000200000630ca : add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x00000200005587fb : add byte ptr [rax], al ; add dword ptr [rax + rcx - 0x76], esi ; ret 0x5488
0x000002000001800d : add byte ptr [rax], al ; add dword ptr [rax + rdx - 0x7b], esi ; ret 0x875
0x000002000059f3eb : add byte ptr [rax], al ; add dword ptr [rax], eax ; mov rcx, rdi ; call 0x2000038b675
0x000002000051825e : add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x000002000019c16e : add byte ptr [rax], al ; add dword ptr [rax], eax ; setge al ; ret
0x000002000007b933 : add byte ptr [rax], al ; add dword ptr [rbp + rax - 0x18], esi ; ret
0x0000020000100f95 : add byte ptr [rax], al ; add dword ptr [rcx - 0x7b], eax ; ret
0x00000200001d8fd4 : add byte ptr [rax], al ; add dword ptr [rcx - 0xa], esi ; ret
0x0000020000449be7 : add byte ptr [rax], al ; add dword ptr [rsi + rsi - 0x75], esi ; ret
0x000002000063b246 : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000517177 : add byte ptr [rax], al ; add eax, ebp ; and dword ptr [rdi], esp ; ret
0x00000200004757e4 : add byte ptr [rax], al ; add ebx, ebp ; mov rax, rdx ; jmp 0x200004757b7
0x0000020000081f76 : add byte ptr [rax], al ; add esp, dword ptr [rcx] ; ret
0x000002000038dd27 : add byte ptr [rax], al ; add rax, 0x378 ; ret
0x0000020000125247 : add byte ptr [rax], al ; add rax, 0x40 ; ret
0x00000200006c66cc : add byte ptr [rax], al ; add rax, 0x850 ; ret
0x00000200004688b5 : add byte ptr [rax], al ; add rax, 0xcc0 ; ret
0x00000200000ca864 : add byte ptr [rax], al ; add rax, rdx ; jmp 0x200000ca809
0x00000200004e1d46 : add byte ptr [rax], al ; add rax, rdx ; ret
0x00000200006a105a : add byte ptr [rax], al ; add rax, rdx ; sub rsp, 0x28 ; call rax
0x00000200006f06b2 : add byte ptr [rax], al ; add rdi, rbx ; mov r12d, ebx ; jmp 0x200006f0692
0x000002000007c2f4 : add byte ptr [rax], al ; add rsp, 0x1a8 ; ret
0x000002000064d847 : add byte ptr [rax], al ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c80ff : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000002cb6f : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d0ade : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000ccce2 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000463c5a : add byte ptr [rax], al ; add rsp, 0x28 ; pop r14 ; pop rbx ; ret
0x00000200005d4046 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000b0016 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x0000020000008637 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000f5ae9 : add byte ptr [rax], al ; add rsp, 0x30 ; pop r12 ; ret
0x00000200001c7e2e : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000056eba : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000b8eb9 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200005d4010 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000001eed3 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001c7f2c : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004b2251 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000016e0a : add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000006b397 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001b0899 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b7553 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; ret
0x00000200000a4f55 : add byte ptr [rax], al ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200001922af : add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200004def80 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200004b83d4 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000106963 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e3c8e : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x000002000006a121 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000001ee4c : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000010cfba : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000001d4b7 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000011780e : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x00000200000b28a1 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rsi ; ret
0x0000020000116933 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000020000363320 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000020000177e28 : add byte ptr [rax], al ; add word ptr [rcx + 0x66], ax ; ret
0x0000020000517594 : add byte ptr [rax], al ; add word ptr [rcx + 0xa], dx ; ret
0x000002000017416b : add byte ptr [rax], al ; add word ptr [rip + 0x110e80], ax ; ret
0x0000020000054cbc : add byte ptr [rax], al ; and al, 1 ; ret
0x00000200001adfcf : add byte ptr [rax], al ; and byte ptr [rcx + 0x338], 0xf8 ; ret
0x00000200001b3af7 : add byte ptr [rax], al ; and byte ptr [rsi + 0x44], 0x89 ; sbb dword ptr [rcx - 0x75], eax ; ret 0x90c3
0x000002000023b462 : add byte ptr [rax], al ; and cl, byte ptr [rax] ; add al, 0 ; or eax, dword ptr [rsi] ; ret
0x0000020000193261 : add byte ptr [rax], al ; and dword ptr [rip + 0x1052ae], 0 ; ret
0x0000020000036d76 : add byte ptr [rax], al ; and eax, 0x10001 ; ret
0x00000200000549e5 : add byte ptr [rax], al ; and eax, 1 ; ret
0x00000200000ead70 : add byte ptr [rax], al ; and eax, r8d ; shr eax, 0xe ; ret
0x000002000054e182 : add byte ptr [rax], al ; and word ptr [rcx + 0x1a], ax ; ret
0x00000200001ced25 : add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x000002000018438b : add byte ptr [rax], al ; call 0x20000027011
0x000002000006e900 : add byte ptr [rax], al ; call 0x2000004dac1
0x0000020000428cc1 : add byte ptr [rax], al ; call 0x20000050f55
0x00000200004f8854 : add byte ptr [rax], al ; call 0x20000054ad8
0x0000020000564f4b : add byte ptr [rax], al ; call 0x2000006bdac
0x000002000056af66 : add byte ptr [rax], al ; call 0x200000771c4
0x000002000054f444 : add byte ptr [rax], al ; call 0x200000771c9
0x00000200005e003f : add byte ptr [rax], al ; call 0x2000007c344
0x000002000006770d : add byte ptr [rax], al ; call 0x200000a3954
0x0000020000479b41 : add byte ptr [rax], al ; call 0x200000a3955
0x00000200005940d6 : add byte ptr [rax], al ; call 0x200000a3956
0x0000020000482fa4 : add byte ptr [rax], al ; call 0x200000a4e85
0x000002000064ae99 : add byte ptr [rax], al ; call 0x200000a7114
0x00000200004821b5 : add byte ptr [rax], al ; call 0x200000a97e9
0x00000200000312a9 : add byte ptr [rax], al ; call 0x200000ad520
0x000002000014b934 : add byte ptr [rax], al ; call 0x200000ad525
0x00000200000e2b86 : add byte ptr [rax], al ; call 0x200000aee24
0x000002000048958a : add byte ptr [rax], al ; call 0x200000b6725
0x000002000041fa95 : add byte ptr [rax], al ; call 0x200000b6729
0x0000020000413cf5 : add byte ptr [rax], al ; call 0x200000b8b68
0x00000200005dd87c : add byte ptr [rax], al ; call 0x200000b9b04
0x000002000052ff4a : add byte ptr [rax], al ; call 0x200000b9b09
0x00000200004942a9 : add byte ptr [rax], al ; call 0x200000bf035
0x0000020000471cee : add byte ptr [rax], al ; call 0x200000c7ad8
0x00000200004a134a : add byte ptr [rax], al ; call 0x200000c85e5
0x0000020000123ab9 : add byte ptr [rax], al ; call 0x200000cfd30
0x00000200000c4df1 : add byte ptr [rax], al ; call 0x200000e48a9
0x00000200001c7088 : add byte ptr [rax], al ; call 0x200000f3304
0x00000200004e1efb : add byte ptr [rax], al ; call 0x20000105b79
0x00000200006d0b47 : add byte ptr [rax], al ; call 0x2000011ce44
0x00000200004fdc2b : add byte ptr [rax], al ; call 0x2000012ad4d
0x000002000016cfba : add byte ptr [rax], al ; call 0x2000013e639
0x00000200005e2247 : add byte ptr [rax], al ; call 0x2000015e534
0x000002000053d94b : add byte ptr [rax], al ; call 0x2000015e535
0x00000200005e14db : add byte ptr [rax], al ; call 0x2000015e538
0x0000020000542f1e : add byte ptr [rax], al ; call 0x2000016d869
0x000002000056591a : add byte ptr [rax], al ; call 0x200001935cd
0x000002000064c8a7 : add byte ptr [rax], al ; call 0x20000198ad8
0x00000200001a98fa : add byte ptr [rax], al ; call 0x200001b5b24
0x000002000038e90f : add byte ptr [rax], al ; call 0x200001babe4
0x00000200001c362b : add byte ptr [rax], al ; call 0x200001c2c2d
0x000002000064adfb : add byte ptr [rax], al ; call 0x20000270045
0x000002000036e1f7 : add byte ptr [rax], al ; call 0x2000036e189
0x0000020000559528 : add byte ptr [rax], al ; call 0x2000039da99
0x000002000036e3e8 : add byte ptr [rax], al ; call 0x20000437441
0x00000200005d5b19 : add byte ptr [rax], al ; call 0x20000441dd4
0x0000020000411628 : add byte ptr [rax], al ; call 0x2000048d904
0x0000020000548c92 : add byte ptr [rax], al ; call 0x200005b4ef4
0x0000020000651b5e : add byte ptr [rax], al ; call 0x2000064de00
0x0000020000369395 : add byte ptr [rax], al ; call qword ptr [r14]
0x000002000048edf4 : add byte ptr [rax], al ; call qword ptr [rax]
0x00000200001756fb : add byte ptr [rax], al ; call qword ptr [rip + 0x1d7d15]
0x00000200000812b6 : add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x000002000007b34e : add byte ptr [rax], al ; call r10
0x00000200000af3b8 : add byte ptr [rax], al ; call r11
0x00000200003aaa93 : add byte ptr [rax], al ; call r12
0x0000020000117521 : add byte ptr [rax], al ; call r14
0x00000200004ecc97 : add byte ptr [rax], al ; call r15
0x0000020000163653 : add byte ptr [rax], al ; call r8
0x0000020000163b40 : add byte ptr [rax], al ; call r9
0x0000020000002fef : add byte ptr [rax], al ; call rax
0x0000020000641acd : add byte ptr [rax], al ; call rcx
0x0000020000149fb3 : add byte ptr [rax], al ; call rdi
0x0000020000488240 : add byte ptr [rax], al ; call rsi
0x000002000008567e : add byte ptr [rax], al ; cdq ; ret
0x0000020000225c0e : add byte ptr [rax], al ; clc ; call qword ptr [rax]
0x00000200001aff49 : add byte ptr [rax], al ; clc ; jg 0x200001aff86 ; ret 0x789
0x00000200001adfd5 : add byte ptr [rax], al ; clc ; ret
0x0000020000083856 : add byte ptr [rax], al ; clc ; sysenter
0x000002000018d003 : add byte ptr [rax], al ; cld ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x2372
0x000002000014ae57 : add byte ptr [rax], al ; cld ; ret
0x0000020000141e1e : add byte ptr [rax], al ; cli ; ret
0x00000200005be1b2 : add byte ptr [rax], al ; cmove eax, ecx ; add rsp, 0x28 ; ret
0x0000020000052177 : add byte ptr [rax], al ; cmove eax, r8d ; ret
0x0000020000224872 : add byte ptr [rax], al ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x000002000036d63c : add byte ptr [rax], al ; cmp cl, 0xf ; cmovne eax, edx ; ret
0x00000200000d24cd : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000059946 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000054380a : add byte ptr [rax], al ; cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x00000200004c775a : add byte ptr [rax], al ; cmp eax, r8d ; jne 0x200004c774f ; xor eax, eax ; ret
0x000002000001de1c : add byte ptr [rax], al ; cmp ecx, 0x12 ; jae 0x2000001de2f ; mov al, 1 ; ret
0x0000020000117740 : add byte ptr [rax], al ; cmp edx, 5 ; cmovne eax, ecx ; ret
0x0000020000020bdc : add byte ptr [rax], al ; cmp edx, eax ; ja 0x20000020beb ; ret
0x00000200000bdfd2 : add byte ptr [rax], al ; cmp qword ptr [rax], rax ; jne 0x200000bdfe1 ; ret
0x00000200003d731f : add byte ptr [rax], al ; cmp qword ptr [rcx + 0x38], rax ; sete al ; ret
0x0000020000531568 : add byte ptr [rax], al ; cmp r10d, ecx ; jae 0x2000053157b ; mov al, 1 ; ret
0x0000020000368b7c : add byte ptr [rax], al ; cmp rax, r12 ; jbe 0x20000368b90 ; xor ecx, ecx ; call rax
0x00000200001a31d1 : add byte ptr [rax], al ; cmp rax, rdx ; jmp 0x200001a3204
0x00000200000c7804 : add byte ptr [rax], al ; cmp rcx, rdx ; jb 0x200000c77c7 ; ret 0
0x00000200000827be : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200006ba05e : add byte ptr [rax], al ; cwde ; ret 0x4009
0x00000200001279d8 : add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200000df987 : add byte ptr [rax], al ; dec byte ptr [rax + 0x437] ; ret
0x00000200000d73ab : add byte ptr [rax], al ; dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x0000020000636e15 : add byte ptr [rax], al ; dec r9 ; jne 0x20000636e06 ; ret
0x00000200006c3e2a : add byte ptr [rax], al ; dec rcx ; jne 0x200006c3e04 ; ret
0x00000200000b5097 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e4] ; ret
0x00000200000bdf97 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e6] ; ret
0x000002000007c98e : add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000078a06 : add byte ptr [rax], al ; fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x0000020000230e16 : add byte ptr [rax], al ; hlt ; ret 0x3f
0x00000200000d4f85 : add byte ptr [rax], al ; imul ebx ; ret 0xa380
0x00000200000df9a7 : add byte ptr [rax], al ; inc byte ptr [rax + 0x437] ; ret
0x0000020000198ee6 : add byte ptr [rax], al ; inc dword ptr [rcx + 0x244] ; ret
0x0000020000657ca0 : add byte ptr [rax], al ; inc dword ptr [rdx + 0x8058] ; ret
0x000002000038eea4 : add byte ptr [rax], al ; inc edx ; jmp 0x2000038ee84
0x00000200000322a4 : add byte ptr [rax], al ; int 0x29
0x000002000037f330 : add byte ptr [rax], al ; ja 0x2000037f33f ; mov al, r8b ; ret
0x00000200004223f0 : add byte ptr [rax], al ; ja 0x200004223fb ; ret
0x0000020000009c0f : add byte ptr [rax], al ; jb 0x20000009be3 ; add rsp, 0x38 ; ret
0x0000020000162180 : add byte ptr [rax], al ; jb 0x20000162193 ; mov eax, 0xc000000d ; ret
0x00000200001630f5 : add byte ptr [rax], al ; jb 0x200001630e4 ; xor eax, eax ; ret
0x000002000014caef : add byte ptr [rax], al ; jb 0x200001dbec3 ; ret
0x000002000011d3e8 : add byte ptr [rax], al ; jb 0x200001e56fb ; ret
0x00000200006551b0 : add byte ptr [rax], al ; jb 0x200006551bd ; xor eax, eax ; ret
0x00000200006c3501 : add byte ptr [rax], al ; jb 0x200006c34c1 ; ret
0x00000200000aec69 : add byte ptr [rax], al ; jbe 0x200001e5c00 ; ret
0x0000020000574c72 : add byte ptr [rax], al ; jbe 0x20000574c62 ; xor eax, eax ; ret
0x0000020000006c59 : add byte ptr [rax], al ; je 0x20000006c6c ; add rsp, 0x50 ; pop rbx ; ret
0x000002000006ba4d : add byte ptr [rax], al ; je 0x2000006ba87 ; mov al, 1 ; ret
0x00000200000aca8f : add byte ptr [rax], al ; je 0x200000acada ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200000b5195 : add byte ptr [rax], al ; je 0x200000b518b ; mov eax, 2 ; ret
0x000002000010b8ca : add byte ptr [rax], al ; je 0x2000010b8df ; mov rcx, rsi ; call 0x20000177ae9
0x000002000019e163 : add byte ptr [rax], al ; je 0x2000019e170 ; xor al, al ; ret
0x0000020000624b46 : add byte ptr [rax], al ; je 0x200003794d7 ; jmp 0x20000624b1c
0x00000200003dd8ef : add byte ptr [rax], al ; je 0x200003dd902 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006344e3 : add byte ptr [rax], al ; je 0x200006344f2 ; xor al, al ; ret
0x000002000064fa79 : add byte ptr [rax], al ; je 0x2000064fa8c ; mov eax, 1 ; ret
0x000002000070815a : add byte ptr [rax], al ; je 0x2000070816f ; or eax, 0xffffffff ; ret
0x000002000013c1e5 : add byte ptr [rax], al ; jg 0x2000013c21f ; mov eax, 0xc0000005 ; ret
0x00000200000adc7d : add byte ptr [rax], al ; jge 0x200000adc8a ; xor eax, eax ; ret
0x0000020000021f37 : add byte ptr [rax], al ; jl 0x20000021f4a ; mov eax, 1 ; ret
0x0000020000261426 : add byte ptr [rax], al ; jl 0x200002613f3 ; add byte ptr [r8], dl ; ret
0x0000020000084d9e : add byte ptr [rax], al ; jle 0x20000084d27 ; ret 0x94
0x000002000013454b : add byte ptr [rax], al ; jle 0x20000134558 ; mov al, 1 ; ret
0x0000020000011b28 : add byte ptr [rax], al ; jmp 0x2000001194b
0x0000020000017b51 : add byte ptr [rax], al ; jmp 0x200000178d9
0x0000020000024953 : add byte ptr [rax], al ; jmp 0x2000002492b
0x0000020000039e03 : add byte ptr [rax], al ; jmp 0x20000039dcd
0x000002000003ff49 : add byte ptr [rax], al ; jmp 0x2000003ff12
0x000002000002c031 : add byte ptr [rax], al ; jmp 0x200000421e0
0x00000200001098e2 : add byte ptr [rax], al ; jmp 0x20000059257
0x000002000005c291 : add byte ptr [rax], al ; jmp 0x2000005c22f
0x000002000005c290 : add byte ptr [rax], al ; jmp 0x2000005c230
0x00000200001e8fef : add byte ptr [rax], al ; jmp 0x2000005c5da
0x000002000007ed57 : add byte ptr [rax], al ; jmp 0x2000007b044
0x00000200001ee962 : add byte ptr [rax], al ; jmp 0x200000aabd8
0x00000200000b114e : add byte ptr [rax], al ; jmp 0x200000b0dd2
0x00000200001492a0 : add byte ptr [rax], al ; jmp 0x200000b3b49
0x00000200001e9614 : add byte ptr [rax], al ; jmp 0x200000d5847
0x00000200000e92e3 : add byte ptr [rax], al ; jmp 0x200000e9276
0x00000200000e943e : add byte ptr [rax], al ; jmp 0x200000e9408
0x00000200000ea02e : add byte ptr [rax], al ; jmp 0x200000ea18a
0x00000200000ed0f9 : add byte ptr [rax], al ; jmp 0x200000ecff2
0x000002000010227a : add byte ptr [rax], al ; jmp 0x20000102244
0x00000200001d89cf : add byte ptr [rax], al ; jmp 0x20000143d11
0x000002000014ff1a : add byte ptr [rax], al ; jmp 0x2000014fadb
0x000002000014ffbe : add byte ptr [rax], al ; jmp 0x2000014ff9e
0x00000200001565fc : add byte ptr [rax], al ; jmp 0x20000156541
0x000002000016f700 : add byte ptr [rax], al ; jmp 0x2000016f715
0x000002000017187b : add byte ptr [rax], al ; jmp 0x200001718d8
0x0000020000189b43 : add byte ptr [rax], al ; jmp 0x20000189b77
0x00000200001a590b : add byte ptr [rax], al ; jmp 0x200001a5a2b
0x00000200001ac5b8 : add byte ptr [rax], al ; jmp 0x200001ac6d4
0x00000200001ace54 : add byte ptr [rax], al ; jmp 0x200001acf74
0x00000200001b9fd7 : add byte ptr [rax], al ; jmp 0x200001b9feb
0x000002000023537a : add byte ptr [rax], al ; jmp 0x200002353aa
0x000002000035ee64 : add byte ptr [rax], al ; jmp 0x2000035f16d
0x000002000038740d : add byte ptr [rax], al ; jmp 0x200003872c8
0x00000200005dd7e3 : add byte ptr [rax], al ; jmp 0x200003899f4
0x000002000039d625 : add byte ptr [rax], al ; jmp 0x2000039d5f0
0x00000200003a33ac : add byte ptr [rax], al ; jmp 0x200003a33c3
0x00000200003a5afb : add byte ptr [rax], al ; jmp 0x200003a5b12
0x00000200003c3ef6 : add byte ptr [rax], al ; jmp 0x200003c3ec0
0x00000200003a5784 : add byte ptr [rax], al ; jmp 0x200003d3c56
0x00000200003d8e38 : add byte ptr [rax], al ; jmp 0x200003d8dae
0x00000200003d8e37 : add byte ptr [rax], al ; jmp 0x200003d8daf
0x00000200003e0212 : add byte ptr [rax], al ; jmp 0x200003e00f5
0x00000200004039ec : add byte ptr [rax], al ; jmp 0x20000403870
0x0000020000405737 : add byte ptr [rax], al ; jmp 0x200004057ac
0x00000200005fb349 : add byte ptr [rax], al ; jmp 0x2000040cc3d
0x000002000041b4fc : add byte ptr [rax], al ; jmp 0x2000041b4c6
0x000002000060e4de : add byte ptr [rax], al ; jmp 0x2000042a738
0x000002000060e4fb : add byte ptr [rax], al ; jmp 0x2000042a7e9
0x000002000043a97f : add byte ptr [rax], al ; jmp 0x2000043a949
0x00000200005ebf0c : add byte ptr [rax], al ; jmp 0x2000044816f
0x0000020000448d34 : add byte ptr [rax], al ; jmp 0x20000448c43
0x000002000045c5fd : add byte ptr [rax], al ; jmp 0x2000045c581
0x0000020000465e17 : add byte ptr [rax], al ; jmp 0x20000465de1
0x00000200006019d3 : add byte ptr [rax], al ; jmp 0x2000046dc7b
0x000002000062cd51 : add byte ptr [rax], al ; jmp 0x200004727e1
0x00000200004888ed : add byte ptr [rax], al ; jmp 0x200004886fc
0x00000200005f7f7e : add byte ptr [rax], al ; jmp 0x20000488e1d
0x00000200004d74a7 : add byte ptr [rax], al ; jmp 0x200004d74c5
0x000002000051e1a7 : add byte ptr [rax], al ; jmp 0x200004da73d
0x0000020000558b1a : add byte ptr [rax], al ; jmp 0x20000558b51
0x0000020000594354 : add byte ptr [rax], al ; jmp 0x2000059438e
0x00000200005bdfe3 : add byte ptr [rax], al ; jmp 0x200005be05f
0x0000020000608e3f : add byte ptr [rax], al ; jmp 0x20000608e5d
0x000002000023d026 : add byte ptr [rax], al ; jmp qword ptr [rax]
0x000002000007b09f : add byte ptr [rax], al ; jmp r11
0x00000200006a107a : add byte ptr [rax], al ; jmp r8
0x00000200006a115f : add byte ptr [rax], al ; jmp rax
0x00000200000769e5 : add byte ptr [rax], al ; jmp rcx
0x000002000007c9d7 : add byte ptr [rax], al ; jmp rdx
0x00000200000847de : add byte ptr [rax], al ; jmp rsi
0x0000020000006eed : add byte ptr [rax], al ; jne 0x20000006ef6 ; ret
0x0000020000021f0a : add byte ptr [rax], al ; jne 0x20000021f17 ; xor eax, eax ; ret
0x0000020000029d3f : add byte ptr [rax], al ; jne 0x20000029d58 ; ret
0x000002000003af87 : add byte ptr [rax], al ; jne 0x2000003af90 ; ret
0x0000020000063641 : add byte ptr [rax], al ; jne 0x2000006366b ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x000002000006ba7d : add byte ptr [rax], al ; jne 0x2000006baa0 ; xor al, al ; ret
0x000002000006fb3a : add byte ptr [rax], al ; jne 0x2000006fb47 ; mov al, 1 ; ret
0x000002000007b348 : add byte ptr [rax], al ; jne 0x2000007b5af ; call r10
0x00000200000be659 : add byte ptr [rax], al ; jne 0x200000be666 ; xor al, al ; ret
0x00000200000c3110 : add byte ptr [rax], al ; jne 0x200000c3136 ; ret
0x0000020000104f15 : add byte ptr [rax], al ; jne 0x20000104f1e ; ret
0x000002000017a405 : add byte ptr [rax], al ; jne 0x2000017a417 ; mov eax, 1 ; ret
0x000002000038ee9e : add byte ptr [rax], al ; jne 0x2000038f031 ; inc edx ; jmp 0x2000038ee8a
0x00000200003bd6ca : add byte ptr [rax], al ; jne 0x200003bd6d5 ; ret
0x00000200003f4027 : add byte ptr [rax], al ; jne 0x200003f4037 ; call 0x20000023fb7
0x00000200003f4183 : add byte ptr [rax], al ; jne 0x200003f4193 ; call 0x20000023fb7
0x00000200003f435d : add byte ptr [rax], al ; jne 0x200003f436d ; call 0x20000023fb7
0x00000200003f43d6 : add byte ptr [rax], al ; jne 0x200003f43e6 ; call 0x20000023fb7
0x00000200003f4521 : add byte ptr [rax], al ; jne 0x200003f4531 ; call 0x20000023fb7
0x00000200003f45cd : add byte ptr [rax], al ; jne 0x200003f45dd ; call 0x20000023fb7
0x00000200003f46b1 : add byte ptr [rax], al ; jne 0x200003f46c1 ; call 0x20000023fb7
0x00000200003f49fb : add byte ptr [rax], al ; jne 0x200003f4a0b ; call 0x20000023fb7
0x00000200003f4ac6 : add byte ptr [rax], al ; jne 0x200003f4ad6 ; call 0x20000023fb7
0x00000200003f4bfe : add byte ptr [rax], al ; jne 0x200003f4c0e ; call 0x20000023fb7
0x00000200003f4cdd : add byte ptr [rax], al ; jne 0x200003f4ced ; call 0x20000023fb7
0x00000200003f4ef7 : add byte ptr [rax], al ; jne 0x200003f4f07 ; call 0x20000023fb7
0x00000200003f505d : add byte ptr [rax], al ; jne 0x200003f506d ; call 0x20000023fb7
0x00000200003f52f8 : add byte ptr [rax], al ; jne 0x200003f5308 ; call 0x20000023fb7
0x00000200003f5484 : add byte ptr [rax], al ; jne 0x200003f5494 ; call 0x20000023fb7
0x00000200003f7934 : add byte ptr [rax], al ; jne 0x200003f78e3 ; call 0x20000023fb7
0x00000200003f828d : add byte ptr [rax], al ; jne 0x200003f8276 ; call 0x20000023fb7
0x00000200003f9817 : add byte ptr [rax], al ; jne 0x200003f9804 ; call 0x20000023fb7
0x00000200003f9ab8 : add byte ptr [rax], al ; jne 0x200003f9a79 ; call 0x20000023fb7
0x00000200003fa20d : add byte ptr [rax], al ; jne 0x200003fa1de ; call 0x20000023fb7
0x00000200003fc644 : add byte ptr [rax], al ; jne 0x200003fc617 ; call 0x20000023fb7
0x00000200003fd763 : add byte ptr [rax], al ; jne 0x200003fd73f ; call 0x20000023fb7
0x00000200003fd9b1 : add byte ptr [rax], al ; jne 0x200003fd97e ; call 0x20000023fb7
0x00000200003ffd51 : add byte ptr [rax], al ; jne 0x200003ffd23 ; call 0x20000023fb7
0x00000200003ffdc4 : add byte ptr [rax], al ; jne 0x200003ffda0 ; call 0x20000023fb7
0x0000020000477d43 : add byte ptr [rax], al ; jne 0x20000477d52 ; call 0x20000023fb6
0x000002000047cc40 : add byte ptr [rax], al ; jne 0x2000047cc52 ; mov eax, 8 ; ret
0x000002000048ca20 : add byte ptr [rax], al ; jne 0x2000048ca33 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000494f0d : add byte ptr [rax], al ; jne 0x20000494ef2 ; xor al, al ; ret
0x00000200004d2d7b : add byte ptr [rax], al ; jne 0x200004d2de8 ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200005b7d9d : add byte ptr [rax], al ; jne 0x200005b7dac ; call 0x20000023fb6
0x00000200005d7cc2 : add byte ptr [rax], al ; jne 0x200005d7cd1 ; call 0x20000023fb6
0x00000200003964ef : add byte ptr [rax], al ; jne 0x20000625f5d ; ret
0x00000200002282d6 : add byte ptr [rax], al ; jo 0x200002282f1 ; adc dword ptr [rax], eax ; ret
0x0000020000168b32 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000702468 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx - 0x32] ; call rax
0x000002000064e35e : add byte ptr [rax], al ; lea edx, dword ptr [rdi + 0x20] ; call 0x20000270048
0x000002000043be3b : add byte ptr [rax], al ; lea r11d, dword ptr [rbx - 1] ; jmp 0x2000043be0c
0x000002000040d913 : add byte ptr [rax], al ; lea r8, qword ptr [rsp + 0x48] ; call 0x20000439b39
0x00000200000619c3 : add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x000002000007c96e : add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x0000020000476aa7 : add byte ptr [rax], al ; lea rcx, qword ptr [rax + rcx*8] ; call 0x200000a3959
0x00000200001e848d : add byte ptr [rax], al ; lea rcx, qword ptr [rbp + 0x10] ; call 0x2000017473c
0x0000020000491c8b : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x18] ; call 0x200000bf279
0x000002000053967e : add byte ptr [rax], al ; lea rcx, qword ptr [rbp] ; call 0x20000105968
0x000002000041559d : add byte ptr [rax], al ; lea rcx, qword ptr [rdi + 0x10] ; call 0x200000392bd
0x00000200000769de : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x4974] ; jmp rcx
0x00000200003a2f8c : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x70] ; call 0x200000bf279
0x0000020000082cfe : add byte ptr [rax], al ; leave ; ret 0x21d1
0x000002000035fee7 : add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x0000020000149ebf : add byte ptr [rax], al ; lock inc dword ptr [rax + 0x200] ; ret
0x0000020000247b6e : add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x4d
0x00000200000852ae : add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000260546 : add byte ptr [rax], al ; mov al, 0xc2 ; cmp byte ptr [rax], al ; ret
0x0000020000123cd7 : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x232] ; ret
0x0000020000158513 : add byte ptr [rax], al ; mov al, r10b ; ret
0x0000020000178f30 : add byte ptr [rax], al ; mov byte ptr [r8 + 0x58], 1 ; xor eax, eax ; ret
0x0000020000407c4a : add byte ptr [rax], al ; mov byte ptr [r9 + 0x10], 1 ; ret
0x000002000002937e : add byte ptr [rax], al ; mov byte ptr [rbx + 0x45], al ; mov rcx, qword ptr [rcx + 0x28] ; call rdi
0x00000200000034bf : add byte ptr [rax], al ; mov byte ptr [rcx + 0x31], al ; mov r8d, edx ; jmp 0x2000000349f
0x0000020000178f5a : add byte ptr [rax], al ; mov byte ptr [rcx + 0x58], 1 ; xor eax, eax ; ret
0x00000200003f1ddb : add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200003d461e : add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x000002000040a142 : add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x00000200005d5856 : add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005d57d9 : add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x0000020000408b3e : add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x0000020000409600 : add byte ptr [rax], al ; mov cl, 0xa ; call r10
0x000002000043a036 : add byte ptr [rax], al ; mov cl, 0xb ; call r10
0x00000200005d6beb : add byte ptr [rax], al ; mov cl, 0xb ; call rax
0x00000200003f5f46 : add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200005d7d87 : add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x00000200004963d1 : add byte ptr [rax], al ; mov cl, 0xf ; call rax
0x00000200004259e8 : add byte ptr [rax], al ; mov cl, 1 ; call 0x2000004f767
0x0000020000646c2a : add byte ptr [rax], al ; mov cl, al ; call 0x20000642f22
0x0000020000189416 : add byte ptr [rax], al ; mov cr8, rax ; ret
0x0000020000152537 : add byte ptr [rax], al ; mov cr8, rcx ; ret
0x0000020000084906 : add byte ptr [rax], al ; mov dh, 0x59 ; ret
0x00000200000f6127 : add byte ptr [rax], al ; mov dl, 1 ; call qword ptr [r11]
0x000002000045ffc1 : add byte ptr [rax], al ; mov dl, 1 ; mov rcx, r15 ; call rbx
0x00000200004789bc : add byte ptr [rax], al ; mov dl, 1 ; mov rcx, rbx ; call 0x20000054c19
0x00000200001a1b3c : add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000642688 : add byte ptr [rax], al ; mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x000002000063129c : add byte ptr [rax], al ; mov dword ptr [rbp - 0x61], ebx ; call r15
0x00000200000349f4 : add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000542e66 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200000679b6 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x0000020000039e64 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000643059 : add byte ptr [rax], al ; mov dword ptr [rip + 0x2804b], ecx ; ret
0x00000200004ee7ed : add byte ptr [rax], al ; mov dword ptr [rip - 0x266121], eax ; ret
0x00000200006017df : add byte ptr [rax], al ; mov dword ptr [rsp + 0x44], r9d ; jmp 0x2000046dabb
0x000002000021903e : add byte ptr [rax], al ; mov eax, 0x200011fe ; call qword ptr [rcx]
0x000002000026233a : add byte ptr [rax], al ; mov eax, 0x30004ac1 ; ret
0x0000020000016b76 : add byte ptr [rax], al ; mov eax, 0xc00000bb ; ret
0x000002000001fa3c : add byte ptr [rax], al ; mov eax, 0xc00000f2 ; ret
0x000002000000bb53 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200001869e6 : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x0000020000103e3b : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000006f9d6 : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x2e76ce] ; ret
0x0000020000601935 : add byte ptr [rax], al ; mov eax, dword ptr [rsp + 0x44] ; jmp 0x2000046db84
0x00000200006537b7 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001b5c7 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005b80cd : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200001738f5 : add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000036ca9a : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000174ffd : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000200001b8d96 : add byte ptr [rax], al ; mov eax, r9d ; ret
0x0000020000082d46 : add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x0000020000257cf2 : add byte ptr [rax], al ; mov ebx, 0xc3005ac3 ; ret
0x000002000038e90a : add byte ptr [rax], al ; mov ecx, 2 ; call 0x200001babe9
0x0000020000423b3d : add byte ptr [rax], al ; mov ecx, dword ptr [rbx] ; call 0x2000004ff8b
0x0000020000641bf9 : add byte ptr [rax], al ; mov ecx, dword ptr [rip - 0x3ca0c5] ; call rax
0x000002000014ec0f : add byte ptr [rax], al ; mov ecx, eax ; call 0x2000014ae4a
0x00000200004f525b : add byte ptr [rax], al ; mov edi, esi ; call 0x2000011d04b
0x00000200002551fe : add byte ptr [rax], al ; mov edx, 0xd70058c2 ; ret 0x58
0x00000200006a1075 : add byte ptr [rax], al ; mov edx, 1 ; jmp r8
0x00000200001efa60 : add byte ptr [rax], al ; mov edx, esi ; call rax
0x000002000012bc99 : add byte ptr [rax], al ; mov edx, r14d ; call r11
0x000002000012c0d5 : add byte ptr [rax], al ; mov edx, r15d ; call rax
0x0000020000216412 : add byte ptr [rax], al ; mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x00000200004c123e : add byte ptr [rax], al ; mov esi, r15d ; jmp 0x200003ed4c2
0x000002000041b304 : add byte ptr [rax], al ; mov qword ptr [r11 - 0x38], rax ; call r10
0x000002000039e3a0 : add byte ptr [rax], al ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x0000020000118ce7 : add byte ptr [rax], al ; mov qword ptr [r9 + 0x5450], rax ; ret
0x00000200004c5cc6 : add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000200000bf2d7 : add byte ptr [rax], al ; mov qword ptr [rax + 0x3e0], rcx ; ret
0x000002000006ab67 : add byte ptr [rax], al ; mov qword ptr [rax + 0x4b0], rcx ; ret
0x00000200001bac19 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x0000020000503052 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x48], rbx ; call 0x200000bf278
0x00000200004e44b0 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x400], rax ; ret
0x000002000064e060 : add byte ptr [rax], al ; mov qword ptr [rcx + 0xe0], rax ; ret
0x000002000058b050 : add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000002a162 : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; ret
0x000002000006bfbe : add byte ptr [rax], al ; mov qword ptr [rdx + 0x4b0], rcx ; ret
0x000002000036e0b3 : add byte ptr [rax], al ; mov qword ptr [rdx], r8 ; add rsp, 0x28 ; ret
0x000002000004f43d : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000180038 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call 0x2000007c349
0x0000020000464327 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003b33e7 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200004b1a6d : add byte ptr [rax], al ; mov qword ptr [rsp + 0x40], r14 ; inc edx ; jmp 0x200004b1a36
0x00000200006d5180 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rbx + 0x18] ; call rdi
0x00000200006d55a2 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59f6 : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d578f : add byte ptr [rax], al ; mov r14, rdx ; lea edx, dword ptr [rbx + 0x58] ; call rdi
0x0000020000119c32 : add byte ptr [rax], al ; mov r8, qword ptr [rbp + 0x28] ; mov rdx, rbx ; call rax
0x000002000017121b : add byte ptr [rax], al ; mov r8, rbx ; call rdi
0x0000020000141dee : add byte ptr [rax], al ; mov rax, cr3 ; ret
0x00000200000df8c7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x1c8] ; ret
0x000002000001b99b : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x220] ; ret
0x000002000054a3e7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000019754f : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000019755f : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000bd797 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x398] ; ret
0x00000200000c03d7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x3a0] ; ret
0x00000200000bdf47 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x3e0] ; ret
0x00000200000df94e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x418] ; ret
0x000002000006b207 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x4b0] ; ret
0x00000200003cda26 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x610] ; ret
0x00000200000b9867 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xb8] ; ret
0x000002000003a267 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xf0] ; ret
0x0000020000657f10 : add byte ptr [rax], al ; mov rax, r9 ; add rsp, 0x28 ; ret
0x0000020000141dfe : add byte ptr [rax], al ; mov rax, rbx ; ret
0x000002000018c5ee : add byte ptr [rax], al ; mov rax, rcx ; add rsp, 0x68 ; ret
0x0000020000116f96 : add byte ptr [rax], al ; mov rax, rcx ; jne 0x20000116fa5 ; ret
0x00000200006fed3b : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000200000da810 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200000da79b
0x000002000069b262 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069b26f
0x000002000069bf8e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069bf9b
0x000002000069c55c : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c569
0x000002000069c69a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c6a7
0x000002000069cccf : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069ccdc
0x000002000069d0b3 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069d0c0
0x000002000069dfab : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069dfb8
0x000002000069e491 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e49e
0x000002000069e75e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e76b
0x000002000069e833 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e840
0x000002000069f01d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069f02a
0x000002000069f967 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069f974
0x000002000069fe28 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069fe35
0x00000200006d1d21 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1d2e
0x00000200006d203e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d204b
0x00000200006d24e9 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d24f6
0x00000200006d298e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d299b
0x00000200006d6a68 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6a75
0x00000200006d6d71 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6d7e
0x00000200006d768d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d769a
0x00000200006d8bc0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8bcd
0x00000200006d8eda : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8ee7
0x00000200006da054 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006da061
0x00000200006db5e3 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db5f0
0x00000200006dcb66 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dcb73
0x00000200006dce55 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dce62
0x00000200006de14b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de158
0x00000200006de475 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de482
0x00000200006dea56 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dea63
0x00000200006df4a5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df4b2
0x00000200006df950 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df95d
0x00000200006dfdab : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dfdb8
0x00000200006dfe81 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dfe8e
0x00000200006e0292 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e029f
0x00000200006e0675 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e0682
0x00000200006e0a4a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e0a57
0x00000200006e0e3f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e0e4c
0x00000200006e1245 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e1252
0x00000200006e1646 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e1653
0x00000200006e1a61 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e1a6e
0x00000200006e1e62 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e1e6f
0x00000200006e2287 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e2294
0x00000200006e2732 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e273f
0x00000200006e2c0b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e2c1a
0x00000200006e31f0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e31fd
0x00000200006e37bd : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e37ca
0x00000200006e3c73 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e3c80
0x00000200006e429f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e42ac
0x00000200006e4771 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e477e
0x00000200006e4c2b : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e4c38
0x00000200006e4f69 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e4f76
0x00000200006e5398 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e53a5
0x00000200006e57c7 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e57d4
0x00000200006e5bf6 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e5c03
0x00000200006e6036 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e6043
0x00000200006e6466 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e6473
0x000002000016f679 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x00000200000ca82c : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x000002000049794f : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005a7720 : add byte ptr [rax], al ; mov rbx, rcx ; call 0x200000a3957
0x0000020000055f0e : add byte ptr [rax], al ; mov rbx, rcx ; call 0x200000e21f7
0x000002000042b805 : add byte ptr [rax], al ; mov rcx, qword ptr [r14 + 0x3d0] ; call rax
0x0000020000426c65 : add byte ptr [rax], al ; mov rcx, qword ptr [rcx + 0x2e0] ; call rax
0x00000200001c8222 : add byte ptr [rax], al ; mov rcx, r10 ; call r10
0x000002000043bec7 : add byte ptr [rax], al ; mov rcx, r12 ; call 0x20000068c50
0x000002000047de5b : add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000000a097
0x00000200004795a4 : add byte ptr [rax], al ; mov rcx, r14 ; call 0x200000a3958
0x0000020000524fa4 : add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000014cae8
0x0000020000122f86 : add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000017f26f
0x000002000042b83e : add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x0000020000426e53 : add byte ptr [rax], al ; mov rcx, r15 ; call 0x20000054298
0x0000020000426c93 : add byte ptr [rax], al ; mov rcx, r15 ; call 0x200000547f0
0x000002000048968b : add byte ptr [rax], al ; mov rcx, r15 ; call 0x200000b8ae8
0x00000200004492cd : add byte ptr [rax], al ; mov rcx, r8 ; call 0x20000076da8
0x0000020000479c4e : add byte ptr [rax], al ; mov rcx, rax ; call 0x200000a3958
0x000002000053eeb5 : add byte ptr [rax], al ; mov rcx, rax ; call 0x200000a3959
0x000002000044893e : add byte ptr [rax], al ; mov rcx, rbp ; call 0x20000072e48
0x000002000047ad12 : add byte ptr [rax], al ; mov rcx, rbp ; call 0x200000a3708
0x00000200004721c9 : add byte ptr [rax], al ; mov rcx, rbp ; call rax
0x00000200001e2f46 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000004f217
0x00000200003e6ba5 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000072e47
0x0000020000489344 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200004855db
0x00000200006e6e7d : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200007030d7
0x00000200003fef15 : add byte ptr [rax], al ; mov rcx, rbx ; call r10
0x00000200003c0e3b : add byte ptr [rax], al ; mov rcx, rbx ; call r15
0x00000200004f496c : add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x000002000063537d : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200001415ff
0x00000200005903b4 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x2000019c5f7
0x000002000016b329 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000417637
0x00000200005b8891 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x20000054afb
0x00000200004471d1 : add byte ptr [rax], al ; mov rdx, qword ptr [r14 + 0x68] ; mov rcx, rdi ; call rax
0x000002000049dfc1 : add byte ptr [rax], al ; mov rdx, r12 ; call 0x200000c6f88
0x0000020000503dc9 : add byte ptr [rax], al ; mov rdx, r12 ; call 0x20000270047
0x0000020000475355 : add byte ptr [rax], al ; mov rdx, r14 ; mov rcx, r13 ; call rax
0x00000200001e8cfe : add byte ptr [rax], al ; mov rdx, rax ; call 0x200000d4fc7
0x000002000057a33c : add byte ptr [rax], al ; mov rdx, rbp ; call 0x200001a3bb4
0x000002000006acac : add byte ptr [rax], al ; mov rdx, rbx ; call 0x200000c6f87
0x000002000063314c : add byte ptr [rax], al ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000631119 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r14 ; call rax
0x0000020000631249 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r15 ; call rax
0x0000020000630bbc : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, rsi ; call r10
0x0000020000503df2 : add byte ptr [rax], al ; mov rdx, rsi ; call 0x20000270047
0x00000200004750c1 : add byte ptr [rax], al ; mov rdx, rsi ; mov rcx, r15 ; call rax
0x0000020000634b10 : add byte ptr [rax], al ; mov word ptr [rcx + 0xd6], ax ; ret
0x00000200001649ae : add byte ptr [rax], al ; mov word ptr [rdx], ax ; ret
0x0000020000232aaa : add byte ptr [rax], al ; movsd dword ptr [rdi], dword ptr [rsi] ; sar dword ptr [rax + rax], 0x3e ; ret 0x3c
0x00000200000bdeb7 : add byte ptr [rax], al ; movzx eax, byte ptr [rax + 0x232] ; ret
0x000002000058f749 : add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000006cb5e : add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x44] ; ret
0x000002000040179e : add byte ptr [rax], al ; movzx ebx, word ptr [r14] ; call 0x20000029cf9
0x000002000052312d : add byte ptr [rax], al ; movzx ecx, word ptr [rbp + 0x28] ; call 0x2000014cc7d
0x0000020000569d02 : add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001ee9c0 : add byte ptr [rax], al ; nop ; jmp 0x200000aac9c
0x0000020000262fba : add byte ptr [rax], al ; nop ; ret
0x00000200002237ea : add byte ptr [rax], al ; nop ; ret 0x14
0x000002000020cc77 : add byte ptr [rax], al ; or al, byte ptr fs:[rax] ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x000002000019cc67 : add byte ptr [rax], al ; or bh, bh ; ret
0x0000020000266a86 : add byte ptr [rax], al ; or bl, al ; add byte ptr fs:[rsi], dl ; ret
0x000002000064943b : add byte ptr [rax], al ; or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200000d8c9b : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001f62d1 : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000200000d8c31 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret
0x00000200001f682c : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x7be9
0x00000200001f6254 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x9ceb
0x0000020000182fee : add byte ptr [rax], al ; or byte ptr [rbp - 0x75], al ; ret
0x00000200000585fa : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000053112 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b4c
0x000002000014a6ff : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x0000020000024ac1 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c07cc : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d3043 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200000dfd36 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add dh, dh ; ret 0x7504
0x000002000012679b : add byte ptr [rax], al ; or byte ptr [rdi], 0x85 ; ret
0x000002000001e32d : add byte ptr [rax], al ; or byte ptr [rdi], cl ; xchg byte ptr [rdx + 0x6d], ah ; sbb al, 0 ; ret
0x0000020000040c38 : add byte ptr [rax], al ; or dh, dh ; ret
0x000002000025e9d6 : add byte ptr [rax], al ; or dl, al ; add al, spl ; ret 0x40
0x000002000023186e : add byte ptr [rax], al ; or dl, byte ptr [rdi] ; or al, 0 ; or al, byte ptr [rsi] ; ret 0x1706
0x000002000051a07f : add byte ptr [rax], al ; or dword ptr [r15], 0xffffffff ; call 0x20000056348
0x00000200000d50a8 : add byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x0000020000010682 : add byte ptr [rax], al ; or dword ptr [rcx + 0x90], r11d ; ret
0x00000200004e4483 : add byte ptr [rax], al ; or dword ptr [rcx + 0x98], 1 ; ret
0x000002000017bda5 : add byte ptr [rax], al ; or eax, ecx ; ret
0x00000200004853c3 : add byte ptr [rax], al ; or ebp, ecx ; ret 0xfffe
0x00000200000ead5e : add byte ptr [rax], al ; or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x0000020000144332 : add byte ptr [rax], al ; out dx, eax ; ret
0x00000200000d9c69 : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000200000433d5 : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000491085 : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000ad94b : add byte ptr [rax], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a19ff : add byte ptr [rax], al ; pop r12 ; ret
0x000002000005328e : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000014fd49 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200004465d2 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000043af70 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000046d674 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000b8841 : add byte ptr [rax], al ; pop r13 ; pop r12 ; ret
0x000002000046a85c : add byte ptr [rax], al ; pop r13 ; pop rbp ; ret
0x00000200006bb1dc : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f37b : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d4407 : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000f56e1 : add byte ptr [rax], al ; pop r13 ; pop rdi ; ret
0x00000200000cf5f9 : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004a7fe : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; ret
0x000002000011b35d : add byte ptr [rax], al ; pop r13 ; ret
0x00000200000250cb : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200004cd401 : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000006f3af : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003febe : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000046687e : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000668b2 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003f158f : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000004edeb : add byte ptr [rax], al ; pop r14 ; pop r13 ; ret
0x000002000010cb77 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000af053 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000145c1e : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cbd29 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071d51 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000382ef : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029ce2 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003cff7f : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000476d6f : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000365eca : add byte ptr [rax], al ; pop r14 ; ret
0x00000200004494a1 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000049d173 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000270360 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c188e : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; ret
0x000002000007170d : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000df3d3 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7eab : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c0b87 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000bfce6 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003bca00 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000042c173 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000016561 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rcx ; ret
0x00000200005be4d6 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003e092e : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000010632b : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004bb0a2 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004a7a51 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000ac7f0 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000571056 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rsi ; ret
0x000002000019a92e : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005d0c38 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d9e99 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a9537 : add byte ptr [rax], al ; pop r15 ; ret
0x00000200000aca0a : add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x0000020000020b6f : add byte ptr [rax], al ; pop rbp ; ret
0x000002000017ac09 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000020000019cfd : add byte ptr [rax], al ; pop rbx ; ret
0x000002000013156d : add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000eb816 : add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x00000200000f2bfa : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000003a0eb : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000045ef1b : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001347c5 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a37a0 : add byte ptr [rax], al ; pop rdi ; ret
0x0000020000439ad9 : add byte ptr [rax], al ; pop rsi ; ret
0x00000200004908b6 : add byte ptr [rax], al ; push qword ptr [rax + rdx - 0x75] ; ret
0x000002000025e646 : add byte ptr [rax], al ; push rax ; ret
0x0000020000217b12 : add byte ptr [rax], al ; push rax ; ret 0x13
0x000002000008293e : add byte ptr [rax], al ; push rsp ; ret
0x000002000007c799 : add byte ptr [rax], al ; rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret 0
0x0000020000005884 : add byte ptr [rax], al ; ret
0x0000020000097bb6 : add byte ptr [rax], al ; ret 0
0x0000020000081ab6 : add byte ptr [rax], al ; ret 0x2237
0x000002000008191e : add byte ptr [rax], al ; ret 0x2fe1
0x000002000008184e : add byte ptr [rax], al ; ret 0x344d
0x00000200000817c6 : add byte ptr [rax], al ; ret 0x399b
0x0000020000232ab6 : add byte ptr [rax], al ; ret 0x3c
0x0000020000234efa : add byte ptr [rax], al ; ret 0x3ef4
0x000002000023597a : add byte ptr [rax], al ; ret 0x3f78
0x0000020000236366 : add byte ptr [rax], al ; ret 0x3fca
0x00000200006b9fe7 : add byte ptr [rax], al ; ret 0x4009
0x000002000008129e : add byte ptr [rax], al ; ret 0x410c
0x00000200002387ba : add byte ptr [rax], al ; ret 0x417a
0x000002000026187e : add byte ptr [rax], al ; ret 0x42
0x0000020000082cbe : add byte ptr [rax], al ; ret 0x42a
0x000002000026393e : add byte ptr [rax], al ; ret 0x47
0x0000020000081006 : add byte ptr [rax], al ; ret 0x4c9a
0x000002000025cc7a : add byte ptr [rax], al ; ret 0x50
0x0000020000084d06 : add byte ptr [rax], al ; ret 0x53e8
0x000002000026dcee : add byte ptr [rax], al ; ret 0x6c
0x000002000008477e : add byte ptr [rax], al ; ret 0x82bc
0x00000200000832e6 : add byte ptr [rax], al ; ret 0x8d0a
0x0000020000083fde : add byte ptr [rax], al ; ret 0xb0cc
0x00000200000841b6 : add byte ptr [rax], al ; ret 0xb1
0x00000200000850f6 : add byte ptr [rax], al ; ret 0xb9b4
0x000002000020fdc6 : add byte ptr [rax], al ; ret 0xd90
0x000002000008395e : add byte ptr [rax], al ; ret 0xdf27
0x000002000008324e : add byte ptr [rax], al ; ret 0xf023
0x00000200006c3baf : add byte ptr [rax], al ; ret 1
0x00000200003a583c : add byte ptr [rax], al ; rol bh, 5 ; pcmpgtb mm6, mm2 ; call qword ptr [rdx]
0x000002000013c1eb : add byte ptr [rax], al ; rol bl, 0x48 ; inc edx ; jmp 0x2000013c1c5
0x000002000010a9a6 : add byte ptr [rax], al ; rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200004d6264 : add byte ptr [rax], al ; rol bl, 0xb8 ; adc byte ptr [rdx], al ; add al, al ; ret
0x000002000013b0de : add byte ptr [rax], al ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000038ec5e : add byte ptr [rax], al ; rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x0000020000383124 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x20000383134 ; add al, al ; ret
0x0000020000391bae : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x20000391bbe ; add al, al ; ret
0x00000200003b012c : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200003b013c ; add al, al ; ret
0x00000200003fda4d : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200003fda5d ; add al, al ; ret
0x0000020000141d0e : add byte ptr [rax], al ; rol bl, 0xb8 ; sbb byte ptr [rdi], al ; add al, al ; ret
0x00000200000272b3 : add byte ptr [rax], al ; rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x00000200000fa8bf : add byte ptr [rax], al ; rol byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200006c915b : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000172b95 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200005070f4 : add byte ptr [rax], al ; rol byte ptr [rcx - 0xa], 0xc0 ; adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200002276aa : add byte ptr [rax], al ; rol cl, 4 ; add byte ptr [rax], dh ; ret 4
0x00000200003a1395 : add byte ptr [rax], al ; ror byte ptr [rax + 0x6b], 0xc0 ; cmp byte ptr [rax + 3], cl ; ret
0x000002000011c3c3 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; ret
0x0000020000513b72 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200001a1c04 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000013977e : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000041b497 : add byte ptr [rax], al ; ror byte ptr [rbp - 0x75], 0x14 ; ret 0x8b48
0x000002000004e7d4 : add byte ptr [rax], al ; ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x00000200005eb534 : add byte ptr [rax], al ; ror byte ptr [rcx - 0x169fdb84], 0x50 ; ret 0xffe5
0x000002000057093f : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret 0x189
0x00000200000e77c8 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret
0x00000200004750e0 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200001f321d : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0xe628
0x00000200003d8126 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 4
0x00000200001bc257 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004d0481 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200001b3e6c : add byte ptr [rax], al ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000260072 : add byte ptr [rax], al ; ror qword ptr [rdi], -0x44 ; ret 0x4f
0x00000200006bd3ea : add byte ptr [rax], al ; sal byte ptr [rbp + 0xd], 0x83 ; ret
0x0000020000548f59 : add byte ptr [rax], al ; sal byte ptr [rbp + 2], 0x8b ; ret
0x00000200005c499e : add byte ptr [rax], al ; sal byte ptr [rbp + 8], 0xff ; ret
0x00000200004c322e : add byte ptr [rax], al ; sal byte ptr [rbx + 0x4c], 0x8b ; ret
0x00000200001790d3 : add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x000002000017c952 : add byte ptr [rax], al ; sal byte ptr [rcx + rcx + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000e705b : add byte ptr [rax], al ; sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000272a3 : add byte ptr [rax], al ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000000d03d : add byte ptr [rax], al ; sal byte ptr [rdx + rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000ca964 : add byte ptr [rax], al ; sar byte ptr [rbx], 0xc1 ; ja 0x200000ca975 ; ret
0x000002000009a2a5 : add byte ptr [rax], al ; sbb byte ptr [rdx], 0xd6 ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x00000200001edfd4 : add byte ptr [rax], al ; sbb ecx, ecx ; add eax, ecx ; ret
0x00000200004c60ff : add byte ptr [rax], al ; setae al ; ret
0x0000020000568f42 : add byte ptr [rax], al ; setb al ; movzx eax, al ; ret
0x00000200001239f4 : add byte ptr [rax], al ; setb al ; ret
0x000002000019bf69 : add byte ptr [rax], al ; setbe al ; ret
0x000002000004f2fa : add byte ptr [rax], al ; sete al ; ret
0x00000200003dd400 : add byte ptr [rax], al ; setne al ; mov byte ptr [rdx], al ; xor eax, eax ; ret
0x0000020000010e3d : add byte ptr [rax], al ; setne al ; ret
0x000002000041f69f : add byte ptr [rax], al ; setne bl ; call 0x2000004d1c8
0x00000200005adfe0 : add byte ptr [rax], al ; shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x0000020000363e47 : add byte ptr [rax], al ; shl rax, cl ; add rsp, 0x28 ; ret
0x0000020000017c76 : add byte ptr [rax], al ; shl rax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000592b2e : add byte ptr [rax], al ; shr al, 0x4a ; ret 0xffa8
0x0000020000592a26 : add byte ptr [rax], al ; shr al, 0x52 ; ret
0x000002000052ff6a : add byte ptr [rax], al ; shr al, 0x5e ; ret
0x000002000038f089 : add byte ptr [rax], al ; shr al, 0x5f ; call rsp
0x0000020000478de9 : add byte ptr [rax], al ; shr al, 0x6f ; ret 0xffc3
0x000002000038f056 : add byte ptr [rax], al ; shr al, 0x92 ; call rsp
0x000002000038f035 : add byte ptr [rax], al ; shr al, 0xb3 ; call rsp
0x000002000038f02a : add byte ptr [rax], al ; shr al, 0xbe ; call rsp
0x0000020000592ab2 : add byte ptr [rax], al ; shr al, 0xc6 ; ret 0xffa8
0x000002000038f01f : add byte ptr [rax], al ; shr al, 0xc9 ; call rsp
0x0000020000632d26 : add byte ptr [rax], al ; shr al, 0xe2 ; ret 0xffc3
0x00000200004cf6f0 : add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x0000020000393980 : add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x00000200000301fe : add byte ptr [rax], al ; shr al, 4 ; and al, 1 ; ret
0x000002000059b5d7 : add byte ptr [rax], al ; shr bl, 0 ; add rsp, 0x38 ; ret
0x00000200003a15f4 : add byte ptr [rax], al ; shr bl, 0xc ; inc r10d ; jmp 0x200003a15e9
0x0000020000407d1c : add byte ptr [rax], al ; shr bl, 0xde ; call 0x20000023fb7
0x000002000001e264 : add byte ptr [rax], al ; shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x0000020000105a43 : add byte ptr [rax], al ; shr bl, 0xf0 ; and qword ptr [r8], 0 ; ret
0x0000020000614e12 : add byte ptr [rax], al ; shr cl, 0x1f ; ret 0xffdf
0x00000200004c124b : add byte ptr [rax], al ; shr cl, 0x26 ; ret 0xfff2
0x000002000061ef0d : add byte ptr [rax], al ; shr cl, 0x28 ; ret 0xffdf
0x000002000060cbeb : add byte ptr [rax], al ; shr cl, 0x35 ; ret 0xffe1
0x00000200003efa66 : add byte ptr [rax], al ; shr cl, 0x39 ; ret
0x00000200003efa5c : add byte ptr [rax], al ; shr cl, 0x43 ; ret
0x00000200005fdd28 : add byte ptr [rax], al ; shr cl, 0x64 ; ret
0x00000200005eef21 : add byte ptr [rax], al ; shr cl, 0x9c ; ret 0xfff0
0x0000020000629f72 : add byte ptr [rax], al ; shr cl, 0xa1 ; ret
0x0000020000605da2 : add byte ptr [rax], al ; shr cl, 0xa3 ; ret
0x00000200005fcddc : add byte ptr [rax], al ; shr cl, 0xb1 ; ret
0x00000200003efa46 : add byte ptr [rax], al ; shr cl, 0xb9 ; ret 0xffff
0x00000200001f7f99 : add byte ptr [rax], al ; shr cl, 0xbb ; ret 0xffe3
0x0000020000630865 : add byte ptr [rax], al ; shr cl, 0xbf ; ret
0x000002000019720f : add byte ptr [rax], al ; shr cl, 0xc3 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003efa3c : add byte ptr [rax], al ; shr cl, 0xc3 ; ret 0xffff
0x000002000060f54f : add byte ptr [rax], al ; shr cl, 0xd5 ; ret
0x00000200005fcc69 : add byte ptr [rax], al ; shr cl, 0xdc ; ret 0xffe6
0x00000200005fcdae : add byte ptr [rax], al ; shr cl, 0xdf ; ret
0x000002000060f53b : add byte ptr [rax], al ; shr cl, 0xe9 ; ret
0x00000200005b7bfa : add byte ptr [rax], al ; shr cl, 0xea ; add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x000002000060f531 : add byte ptr [rax], al ; shr cl, 0xf3 ; ret
0x0000020000504650 : add byte ptr [rax], al ; shr cl, 2 ; sub al, 0xf1 ; push rsi ; ret
0x00000200005fffa1 : add byte ptr [rax], al ; shr cl, 5 ; ret 0xffe6
0x0000020000129469 : add byte ptr [rax], al ; shr eax, 3 ; and eax, 1 ; ret
0x000002000014433d : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; ret
0x00000200004d8894 : add byte ptr [rax], al ; shr rax, 0xc ; and rax, rcx ; ret
0x0000020000151e3b : add byte ptr [rax], al ; shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200000c0282 : add byte ptr [rax], al ; sti ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000431a6 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000153b54 : add byte ptr [rax], al ; sti ; mov eax, ecx ; ret
0x0000020000076c24 : add byte ptr [rax], al ; sti ; ret
0x000002000024c4ce : add byte ptr [rax], al ; sub al, 0xc1 ; add r8b, r11b ; ret 0x4d
0x00000200002644ce : add byte ptr [rax], al ; sub al, al ; add byte ptr [rax], r12b ; ret 0x4e
0x00000200005e7c25 : add byte ptr [rax], al ; sub cl, 0xc8 ; ret
0x0000020000082d16 : add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200001bf60d : add byte ptr [rax], al ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x000002000007b2c5 : add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x00000200001521ca : add byte ptr [rax], al ; sub r9, r8 ; jmp r9
0x00000200006586fa : add byte ptr [rax], al ; sub rcx, rax ; mov rax, rcx ; ret
0x00000200000b6353 : add byte ptr [rax], al ; sub rdx, r9 ; mov qword ptr [rdx], rcx ; ret
0x00000200003d925e : add byte ptr [rax], al ; test al, 0x10 ; je 0x200003d926f ; xor al, al ; ret
0x000002000037ac0c : add byte ptr [rax], al ; test al, 0x10 ; jne 0x2000037ac1d ; xor eax, eax ; ret
0x000002000042ee80 : add byte ptr [rax], al ; test al, 4 ; jne 0x2000042ee8d ; ret
0x00000200003d9271 : add byte ptr [rax], al ; test ax, cx ; jne 0x200003d926d ; mov al, 1 ; ret
0x00000200000d8cb5 : add byte ptr [rax], al ; test cl, 3 ; je 0x200000d8ccb ; call 0x200005b4ee1
0x00000200000f839b : add byte ptr [rax], al ; test cl, al ; jne 0x200000f83ab ; xor eax, eax ; ret
0x00000200000b4fe7 : add byte ptr [rax], al ; test cx, cx ; je 0x200000b4ff6 ; ret
0x0000020000480d66 : add byte ptr [rax], al ; test eax, eax ; cmove eax, ecx ; ret
0x0000020000154855 : add byte ptr [rax], al ; test eax, eax ; cmovg eax, ecx ; ret
0x0000020000561006 : add byte ptr [rax], al ; test rax, rax ; je 0x20000561016 ; call rax
0x00000200000bdf65 : add byte ptr [rax], al ; test rax, rax ; jne 0x200000bdf78 ; xor eax, eax ; ret
0x0000020000168471 : add byte ptr [rax], al ; test rcx, rcx ; je 0x20000168483 ; jmp rcx
0x00000200001685a5 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001685b5 ; call rcx
0x00000200001685d1 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001685e1 ; call rcx
0x0000020000058f05 : add byte ptr [rax], al ; test rcx, rcx ; jne 0x20000058f14 ; ret
0x0000020000140661 : add byte ptr [rax], al ; test rdx, rdx ; je 0x20000140675 ; xor ecx, ecx ; call rdx
0x0000020000168555 : add byte ptr [rax], al ; test rdx, rdx ; je 0x20000168567 ; jmp rdx
0x0000020000124efa : add byte ptr [rax], al ; test rdx, rdx ; jne 0x20000124f0d ; xor eax, eax ; ret
0x00000200003663d3 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200003663e4 ; ret
0x00000200004672ae : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200004672bf ; ret
0x00000200005147c6 : add byte ptr [rax], al ; test rsi, rsi ; je 0x2000051484b ; jmp 0x2000051479a
0x0000020000082316 : add byte ptr [rax], al ; wait ; ret 0x55a5
0x000002000005d6a5 : add byte ptr [rax], al ; xchg dword ptr [rcx + 0x506c], eax ; ret
0x0000020000083d36 : add byte ptr [rax], al ; xchg eax, ebp ; push rsp ; ret
0x000002000025bb27 : add byte ptr [rax], al ; xchg eax, ebx ; cmp byte ptr [rax], al ; push rsp ; ret
0x0000020000084a76 : add byte ptr [rax], al ; xchg eax, ecx ; ret 0x7c05
0x0000020000007463 : add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200003618cc : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000a8525 : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000447f00 : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000364082 : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x0000020000381058 : add byte ptr [rax], al ; xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200001737dc : add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x00000200006cfec3 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x00000200006c94ff : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000140fea : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx + 0x23] ; ret 0x8d41
0x000002000010ab57 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036c078 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014ebbc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000049d981 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000016ce4e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000020000424ae6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001c2a68 : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r8 + 0xc], ecx ; ret
0x000002000015b222 : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r8], r9d ; ret
0x000002000043a664 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000002000007709b : add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000069b9c6 : add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200007024cc : add byte ptr [rax], al ; xor ecx, ecx ; call rax
0x00000200006e6b56 : add byte ptr [rax], al ; xor ecx, ecx ; call rdi
0x00000200000aad69 : add byte ptr [rax], al ; xor edx, edx ; call qword ptr [rsi]
0x00000200003c2dcc : add byte ptr [rax], al ; xor edx, edx ; mov rcx, r13 ; call 0x2000026f019
0x000002000066432d : add byte ptr [rax], al ; xor esi, esi ; call 0x20000150582
0x000002000041f48a : add byte ptr [rax], al ; xor r8d, r8d ; call rax
0x000002000041f4d5 : add byte ptr [rax], al ; xor r8d, r8d ; mov rcx, rbx ; call rax
0x000002000015041f : add byte ptr [rax], al ; xor r8d, r8d ; xor edx, edx ; call r9
0x0000020000018c35 : add byte ptr [rax], al ; xor rcx, rsp ; call 0x200000a4e57
0x0000020000475131 : add byte ptr [rax], al ; xor rcx, rsp ; call 0x200000a4e58
0x000002000008c591 : add byte ptr [rax], bh ; call qword ptr [rdx]
0x000002000001f800 : add byte ptr [rax], bh ; pop rbp ; ret
0x00000200001239f0 : add byte ptr [rax], bh ; setb al ; ret
0x00000200001aec87 : add byte ptr [rax], bh ; xchg eax, ecx ; ret
0x00000200001c7a27 : add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x000002000025dc23 : add byte ptr [rax], bl ; ret
0x0000020000235c87 : add byte ptr [rax], bl ; ret 0xf014
0x000002000022cc5b : add byte ptr [rax], ch ; cmp eax, dword ptr [rsi] ; cld ; ret 0x23
0x0000020000084a57 : add byte ptr [rax], ch ; loope 0x200000849e7 ; ret
0x000002000025fdf7 : add byte ptr [rax], ch ; push rdx ; add al, cl ; ret 0x24
0x00000200002644cf : add byte ptr [rax], ch ; ror byte ptr [rsi], 0x20 ; ret 0x4e
0x00000200004645dc : add byte ptr [rax], cl ; add byte ptr [rax + 3], cl ; ret 0x8d48
0x0000020000464f8b : add byte ptr [rax], cl ; add dword ptr [rax], eax ; idiv edi ; push rbx ; ret
0x000002000015e514 : add byte ptr [rax], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f6255 : add byte ptr [rax], cl ; inc rdx ; jmp 0x200001f61fc
0x0000020000587572 : add byte ptr [rax], cl ; jae 0x20000587594 ; mov rcx, rbx ; call 0x2000042383d
0x000002000001e32e : add byte ptr [rax], cl ; jbe 0x200001e50a0 ; ret
0x0000020000263787 : add byte ptr [rax], cl ; jmp qword ptr [rdx]
0x0000020000081917 : add byte ptr [rax], cl ; mov ecx, 0x66eb ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000008551f : add byte ptr [rax], cl ; mov esi, 0x92d ; add byte ptr [rax], al ; ret
0x000002000008176f : add byte ptr [rax], cl ; ret
0x000002000020d237 : add byte ptr [rax], cl ; ret 0x20
0x000002000025e9d7 : add byte ptr [rax], cl ; ret 0x40
0x000002000020c843 : add byte ptr [rax], cl ; ret 0xc004
0x00000200004cd4e8 : add byte ptr [rax], dh ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000062c9db : add byte ptr [rax], dh ; add byte ptr [rsi + 0x3b], ah ; retf -0x7af1 ; jmp qword ptr [rsi]
0x000002000026233f : add byte ptr [rax], dh ; ret
0x00000200006ba00f : add byte ptr [rax], dh ; ret 0x4009
0x00000200002270d3 : add byte ptr [rax], dh ; ret 4
0x0000020000241863 : add byte ptr [rax], dh ; ror byte ptr [rax], 0x88 ; ret 0x48
0x0000020000370a47 : add byte ptr [rax], dl ; add byte ptr [rax - 0x7b], cl ; ret 0x850f
0x0000020000708169 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x000002000035ddba : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200004d9ab5 : add byte ptr [rax], dl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x00000200003dcd63 : add byte ptr [rax], dl ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000064af53 : add byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret 0x676
0x0000020000482388 : add byte ptr [rax], dl ; add dh, dh ; ret
0x00000200001b1f45 : add byte ptr [rax], dl ; add dh, dh ; ret 0xc704
0x00000200000dae3b : add byte ptr [rax], dl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dcb3e : add byte ptr [rax], dl ; call 0x200000f8e35
0x0000020000618016 : add byte ptr [rax], dl ; fmul dword ptr [rbx] ; ret 0x8941
0x000002000008299f : add byte ptr [rax], dl ; js 0x20000082a25 ; ret
0x00000200006d5f4c : add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5f59
0x00000200006d5fbd : add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5fca
0x0000020000223793 : add byte ptr [rax], dl ; or byte ptr [rsi], 0 ; pop rax ; jmp qword ptr [rax]
0x000002000014432a : add byte ptr [rax], dl ; ret
0x000002000009464f : add byte ptr [rax], dl ; ret 0x400f
0x000002000020e42b : add byte ptr [rax], dl ; ret 0xd009
0x00000200002043d7 : add byte ptr [rax], dl ; ret 0xf00c
0x000002000023d342 : add byte ptr [rax], r12b ; ret
0x000002000023d24e : add byte ptr [rax], r12b ; ret 0x23
0x00000200002644d2 : add byte ptr [rax], r12b ; ret 0x4e
0x000002000022cc5a : add byte ptr [rax], r13b ; cmp eax, dword ptr [rsi] ; cld ; ret 0x23
0x0000020000141dfd : add byte ptr [rax], r8b ; mov rax, rbx ; ret
0x0000020000141e0d : add byte ptr [rax], r8b ; sti ; ret
0x000002000026233e : add byte ptr [rax], sil ; ret
0x000002000025d4a2 : add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x0000020000081847 : add byte ptr [rbp + 0x11], ah ; imul esi, dword ptr [rsi], 0 ; ret 0x344d
0x000002000004f1e3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000029d40 : add byte ptr [rbp + 0x11], dh ; ret
0x0000020000063d4f : add byte ptr [rbp + 0x18], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006ba7e : add byte ptr [rbp + 0x19], dh ; xor al, al ; ret
0x0000020000063642 : add byte ptr [rbp + 0x1d], dh ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x00000200000c3111 : add byte ptr [rbp + 0x1d], dh ; ret
0x00000200000ff87b : add byte ptr [rbp + 0x23], al ; ret 0x840f
0x000002000003c402 : add byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x000002000015f191 : add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x00000200004d8c7e : add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200004d8a1f : add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d4c
0x00000200001421da : add byte ptr [rbp + 0x2b], cl ; ret
0x000002000010140d : add byte ptr [rbp + 0x2d], dh ; ret
0x0000020000169648 : add byte ptr [rbp + 0x330f75c0], al ; rol byte ptr [rbp - 0x76], cl ; ret
0x00000200004aad84 : add byte ptr [rbp + 0x33], al ; div bh ; ret 0xfff0
0x00000200005c3d3d : add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200006c75ef : add byte ptr [rbp + 0x33], al ; inc dword ptr [rbp + rcx*4 + 0x6a] ; ret 0x8d44
0x00000200005cbf91 : add byte ptr [rbp + 0x33], al ; leave ; call r10
0x00000200003cdd2b : add byte ptr [rbp + 0x33], al ; leave ; jmp 0x200003cdcf8
0x00000200000c173f : add byte ptr [rbp + 0x33], al ; push rsi ; ret
0x000002000041f4d6 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call rax
0x00000200005f6a24 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x0000020000188c1c : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x200000a4e88
0x0000020000477cfd : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x200000a4e89
0x0000020000150420 : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x00000200000a8bc0 : add byte ptr [rbp + 0x33], al ; shr al, 0xb7 ; ret 0xffff
0x00000200000dddf5 : add byte ptr [rbp + 0x33], al ; shr cl, 0xc2 ; int 0xfd
0x00000200000eb2d7 : add byte ptr [rbp + 0x33], al ; shr cl, cl ; ret 0xfffc
0x00000200000d9deb : add byte ptr [rbp + 0x33], al ; test byte ptr [rbp - 0x73], 0x6e ; add edi, esi ; ret
0x00000200000c9a5c : add byte ptr [rbp + 0x3a], al ; ret
0x000002000007005e : add byte ptr [rbp + 0x3a], al ; ret 0x337d
0x000002000002f3e1 : add byte ptr [rbp + 0x3b], al ; ret
0x00000200001f3e43 : add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x00000200000b1d49 : add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000458fa : add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x0000020000187f86 : add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000019fb17 : add byte ptr [rbp + 0x3b], cl ; ret 0x860f
0x0000020000527bb6 : add byte ptr [rbp + 0x3b], cl ; ret 0xda75
0x0000020000197461 : add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x0000020000232aab : add byte ptr [rbp + 0x3e003cc1], ah ; ret 0x3c
0x00000200000d8873 : add byte ptr [rbp + 0x440f0458], cl ; ret
0x0000020000130979 : add byte ptr [rbp + 0x440f1050], cl ; ret 0x8b49
0x0000020000016837 : add byte ptr [rbp + 0x440f41c0], al ; ret
0x000002000042d09f : add byte ptr [rbp + 0x440f41c0], al ; ret 0x4ae9
0x000002000041489f : add byte ptr [rbp + 0x440f41db], al ; fdivr st(7), st(0) ; ret
0x000002000003a96b : add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x0000020000144c72 : add byte ptr [rbp + 0x450579c0], al ; mov eax, edx ; jmp 0x20000144c40
0x0000020000014bfc : add byte ptr [rbp + 0x480578c0], al ; add esp, 0x28 ; ret
0x000002000001d736 : add byte ptr [rbp + 0x480c78c0], al ; add esp, 0x28 ; ret
0x00000200005be520 : add byte ptr [rbp + 0x50], dh ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000aca0b : add byte ptr [rbp + 0x5b], bl ; ret
0x00000200004d2d7c : add byte ptr [rbp + 0x60], dh ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000046696d : add byte ptr [rbp + 0x63], cl ; ret
0x000002000015e64f : add byte ptr [rbp + 0x63], cl ; ret 0x8d49
0x0000020000083747 : add byte ptr [rbp + 0x65], bl ; fild dword ptr [rcx] ; ret
0x000002000049f9d9 : add byte ptr [rbp + 0x6a880fc0], al ; ret 1
0x00000200004c0a79 : add byte ptr [rbp + 0x7a880ff6], al ; ret
0x00000200000c02c6 : add byte ptr [rbp + 0xa], dh ; xor al, al ; ret
0x000002000045e6b0 : add byte ptr [rbp + 0xb], al ; ret 0x8b44
0x000002000003a8ea : add byte ptr [rbp + 0xc8bff43], cl ; ret 0x48b
0x00000200003f82f0 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cb54b : add byte ptr [rbp + 0xd], dh ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200000e2052 : add byte ptr [rbp + 0xf], 0x22 ; ret
0x000002000010a5b6 : add byte ptr [rbp + 0xf], cl ; ret 0x3b66
0x00000200003aadbd : add byte ptr [rbp + 0xf], cl ; ret 0x8b49
0x000002000002c632 : add byte ptr [rbp + 1], bh ; add bh, bh ; ret
0x0000020000006eee : add byte ptr [rbp + 1], dh ; ret
0x0000020000021cd9 : add byte ptr [rbp + 2], dh ; ret
0x000002000000b505 : add byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x00000200000adc7e : add byte ptr [rbp + 3], bh ; xor eax, eax ; ret
0x00000200006dfe6a : add byte ptr [rbp + 3], cl ; ret
0x00000200006dbf07 : add byte ptr [rbp + 3], cl ; ret 0x3348
0x00000200000a856d : add byte ptr [rbp + 3], cl ; ret 0x854d
0x0000020000531d96 : add byte ptr [rbp + 3], cl ; ret 0xc985
0x00000200006d3b96 : add byte ptr [rbp + 3], cl ; ret 0xfb83
0x00000200006e7154 : add byte ptr [rbp + 3], cl ; ret 0xff41
0x000002000006fb3b : add byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200000be65a : add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000021f0b : add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000526f39 : add byte ptr [rbp + 4], dh ; and qword ptr [r8], 0 ; ret
0x00000200000b2482 : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000020000477d44 : add byte ptr [rbp + 5], dh ; call 0x20000023fb5
0x00000200003f4028 : add byte ptr [rbp + 5], dh ; call 0x20000023fb6
0x000002000017a406 : add byte ptr [rbp + 5], dh ; mov eax, 1 ; ret
0x000002000047cc41 : add byte ptr [rbp + 5], dh ; mov eax, 8 ; ret
0x000002000005d1c1 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a91b9 : add byte ptr [rbp + 6], dh ; lock and qword ptr [rcx], 0 ; ret
0x00000200006601f7 : add byte ptr [rbp + 6], dh ; mov eax, 0xc00000bb ; ret
0x000002000054ebdf : add byte ptr [rbp + 6], dh ; mov eax, 0xc00000f0 ; ret
0x0000020000144a95 : add byte ptr [rbp + 7], dh ; mov dword ptr [rcx], 0 ; ret
0x00000200000bdf07 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000642736 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200004f48ef : add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x000002000014ac93 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x0000020000079955 : add byte ptr [rbp + rax - 0x18], dh ; ret
0x0000020000703ae6 : add byte ptr [rbp + rax - 0x18], dh ; ret 0x9204
0x0000020000169d3f : add byte ptr [rbp + rax*8 - 0x75], dh ; ret
0x0000020000009b9a : add byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x000002000038cdd9 : add byte ptr [rbp + rcx*4 + 0x15], cl ; jmp qword ptr [rsi]
0x00000200000b62e5 : add byte ptr [rbp + rcx*4 + 0x15], cl ; ret
0x000002000007b099 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; cmp eax, 0x41000001 ; jmp rbx
0x00000200004f4cd2 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x00000200006c1fb5 : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000200000bd09a : add byte ptr [rbp + rcx*4 + 0x41], cl ; ror byte ptr [rcx - 0x77], 1 ; or dh, dh ; ret
0x000002000040d914 : add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x48 ; call 0x20000439b38
0x000002000039ca3d : add byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x00000200005a0ab1 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rbx + rcx*4 - 0x3f], 0xe8 ; ret 0xadcb
0x00000200001f0936 : add byte ptr [rbp + rcx*4 + 0x5f], al ; add eax, 0x3b018b41 ; ret
0x000002000011e15c : add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x3b49
0x0000020000519066 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf3b0
0x00000200007049c6 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xff60
0x00000200001fbbb6 : add byte ptr [rbp + rdi*2 - 0xa], dh ; ret
0x0000020000641d2d : add byte ptr [rbp - 0x16], dh ; xor al, al ; ret
0x000002000015409e : add byte ptr [rbp - 0x19], dh ; mov rax, rcx ; ret
0x00000200003f9818 : add byte ptr [rbp - 0x1e], dh ; call 0x20000023fb6
0x00000200003f828e : add byte ptr [rbp - 0x22], dh ; call 0x20000023fb6
0x0000020000127275 : add byte ptr [rbp - 0x23], dh ; mov qword ptr [r9 + 0x40], rcx ; ret
0x0000020000494f0e : add byte ptr [rbp - 0x25], dh ; xor al, al ; ret
0x0000020000027278 : add byte ptr [rbp - 0x26], dh ; mov rax, rcx ; ret
0x0000020000640761 : add byte ptr [rbp - 0x2c74eba8], cl ; call 0x20000270049
0x000002000014a3ab : add byte ptr [rbp - 0x2e], dh ; sub rax, rcx ; sar rax, 1 ; ret
0x00000200003fd764 : add byte ptr [rbp - 0x2f], dh ; call 0x20000023fb6
0x000002000023aa0b : add byte ptr [rbp - 0x37ff9f3d], dh ; ret
0x00000200003fc645 : add byte ptr [rbp - 0x38], dh ; call 0x20000023fb6
0x00000200003ffd52 : add byte ptr [rbp - 0x39], dh ; call 0x20000023fb6
0x000002000002e378 : add byte ptr [rbp - 0x39], dh ; inc r12d ; jmp 0x2000002e349
0x00000200003fa20e : add byte ptr [rbp - 0x3a], dh ; call 0x20000023fb6
0x000002000049834d : add byte ptr [rbp - 0x3d], bl ; cmp edx, 2 ; je 0x20000498360 ; ret
0x00000200001eea17 : add byte ptr [rbp - 0x3e6af040], al ; mov dword ptr [rdx + 4], ecx ; ret
0x00000200003fd9b2 : add byte ptr [rbp - 0x3e], dh ; call 0x20000023fb6
0x0000020000154856 : add byte ptr [rbp - 0x3eb0f040], al ; ret
0x0000020000480d67 : add byte ptr [rbp - 0x3ebbf040], al ; ret
0x0000020000466b4e : add byte ptr [rbp - 0x3f], dh ; ret
0x0000020000466b4d : add byte ptr [rbp - 0x3f], r14b ; ret
0x00000200003f9ab9 : add byte ptr [rbp - 0x4a], dh ; call 0x20000023fb6
0x00000200003f7935 : add byte ptr [rbp - 0x5c], dh ; call 0x20000023fb6
0x00000200003995c6 : add byte ptr [rbp - 0x6bf0be01], al ; ret
0x000002000023108f : add byte ptr [rbp - 0x6e], ah ; cmp eax, dword ptr [rax] ; ret
0x00000200006c055d : add byte ptr [rbp - 0x73], 0x48 ; add esi, dword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret 0xff49
0x00000200004f9409 : add byte ptr [rbp - 0x73], al ; add qword ptr [r9 + rdi + 0x1d], r9 ; ret
0x00000200005b985c : add byte ptr [rbp - 0x73], al ; pop rdi ; add dword ptr [rbp + 0x63], ecx ; ret
0x00000200000619c4 : add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x0000020000169c15 : add byte ptr [rbp - 0x748d8a2e], al ; ret
0x0000020000271b84 : add byte ptr [rbp - 0x74b306b6], cl ; ret
0x0000020000651288 : add byte ptr [rbp - 0x74b31bb6], cl ; ret
0x00000200003f74db : add byte ptr [rbp - 0x74b324b6], cl ; ret
0x000002000065b5c0 : add byte ptr [rbp - 0x74b3bcb6], cl ; ret
0x000002000016e086 : add byte ptr [rbp - 0x74bae8b2], cl ; ret
0x0000020000199cd3 : add byte ptr [rbp - 0x74bb008e], cl ; ret 0xfa8b
0x00000200000c84a8 : add byte ptr [rbp - 0x74befeb5], cl ; ret 0x2341
0x000002000047d30a : add byte ptr [rbp - 0x74cf8a40], al ; ret
0x00000200004ffa03 : add byte ptr [rbp - 0x74d38625], al ; ret
0x00000200004a4a79 : add byte ptr [rbp - 0x74dd8725], al ; ret
0x000002000047968c : add byte ptr [rbp - 0x74e58640], al ; ret
0x000002000041c2fc : add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000042d221 : add byte ptr [rbp - 0x74ea8725], al ; ret
0x00000200000e0d6a : add byte ptr [rbp - 0x74ed8b25], al ; ret
0x00000200001bb035 : add byte ptr [rbp - 0x75], al ; call 0x2004a0d6755
0x0000020000003fed : add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6f25 : add byte ptr [rbp - 0x75], al ; ret 0x348
0x000002000069efd3 : add byte ptr [rbp - 0x75], al ; ret 0x3b45
0x00000200004cff8a : add byte ptr [rbp - 0x75], al ; ret 0x674
0x000002000069bd50 : add byte ptr [rbp - 0x75], al ; ret 0x8341
0x000002000006d3b0 : add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200005893c9 : add byte ptr [rbp - 0x75], al ; ret 0x8949
0x0000020000061546 : add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x0000020000372262 : add byte ptr [rbp - 0x75], al ; ret 0x8b41
0x000002000044494c : add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000bfc2d : add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000044235a : add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x000002000015ee2a : add byte ptr [rbp - 0x75], al ; ret 0xb848
0x00000200000f117d : add byte ptr [rbp - 0x75], al ; ret 0xd233
0x00000200001bd998 : add byte ptr [rbp - 0x75], cl ; adc al, 0xc2 ; jmp 0x200001bd9a6
0x000002000006a3e7 : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x00000200000a44a4 : add byte ptr [rbp - 0x75], cl ; outsb dx, byte ptr [rsi] ; sbb byte ptr [rcx - 0x75], al ; ret
0x00000200000176f2 : add byte ptr [rbp - 0x75], cl ; ret
0x00000200001dcc5c : add byte ptr [rbp - 0x75], cl ; ret 0x1ab9
0x000002000040e28e : add byte ptr [rbp - 0x75], cl ; ret 0x39e8
0x0000020000040eeb : add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000016210 : add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000b77df : add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000040e124 : add byte ptr [rbp - 0x75], cl ; ret 0xa3e8
0x00000200000ab8d6 : add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x000002000026f1bb : add byte ptr [rbp - 0x75], cl ; xchg eax, esp ; ret 0x80
0x0000020000420b59 : add byte ptr [rbp - 0x75d78740], al ; ret
0x0000020000017297 : add byte ptr [rbp - 0x76], al ; ret 0x8a41
0x0000020000192579 : add byte ptr [rbp - 0x76], al ; ret 0x8b41
0x0000020000147e13 : add byte ptr [rbp - 0x77], cl ; add cl, byte ptr [rbp + 3] ; ret
0x000002000012ffc4 : add byte ptr [rbp - 0x77], cl ; or byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000398c3c : add byte ptr [rbp - 0x77], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4910
0x00000200003e4bc7 : add byte ptr [rbp - 0x77bffe89], cl ; mov ah, 0x24 ; ret
0x0000020000033f99 : add byte ptr [rbp - 0x78], al ; and cl, ch ; ret 0xfffe
0x000002000018be1b : add byte ptr [rbp - 0x7b], al ; dec dword ptr [rdi] ; cdq ; ret
0x00000200005b1f71 : add byte ptr [rbp - 0x7b], al ; div byte ptr [rcx + rbp - 0xa] ; ret
0x000002000016470f : add byte ptr [rbp - 0x7b], al ; ret
0x000002000017392f : add byte ptr [rbp - 0x7b], al ; ret 0x1574
0x0000020000152eb4 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret 0
0x0000020000386e2c : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret 0x274f
0x00000200000c7e99 : add byte ptr [rbp - 0x7b], cl ; ret
0x00000200000b925d : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004a44fb : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000002000039cf66 : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1745
0x000002000014b761 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x00000200004186c4 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rcx + rdx + 0x48], 0x8b ; ret 0xc148
0x000002000004502b : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200003fe6b7 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 1
0x000002000002cc67 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x5488
0x00000200004a16ee : add byte ptr [rbp - 0x7c], al ; ret
0x00000200001e60d7 : add byte ptr [rbp - 0x7c], al ; ret 0x1074
0x00000200003fbdd6 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rdi], 0x85 ; cld ; jmp qword ptr [rcx]
0x000002000053d8fd : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + 9], 0xf6 ; ret 0xf06
0x000002000040b45c : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x000002000059a0c0 : add byte ptr [rbp - 0x7cbefeb5], cl ; ret
0x000002000041ae53 : add byte ptr [rbp - 0x8f38b27], al ; ret
0x00000200004341a3 : add byte ptr [rbp - 0x8f58b25], al ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200005c0ecd : add byte ptr [rbp - 0x9ea8a40], al ; ret 0x7401
0x0000020000154110 : add byte ptr [rbp - 0xa], dh ; ret
0x00000200005ba577 : add byte ptr [rbp - 0xc58a40], al ; ret
0x0000020000555a45 : add byte ptr [rbp - 0xc78b40], al ; ret
0x00000200005baca7 : add byte ptr [rbp - 0xd18a40], al ; ret
0x00000200006cb008 : add byte ptr [rbp - 0xf58740], al ; ret
0x00000200003993fc : add byte ptr [rbp - 0xf68740], al ; ret
0x0000020000471c77 : add byte ptr [rbp - 0xf7bf040], al ; ret 0x18
0x000002000064d884 : add byte ptr [rbp - 0xf], dh ; ret
0x0000020000193262 : add byte ptr [rbx + 0x1052ae25], al ; add byte ptr [rax], al ; ret
0x000002000011c939 : add byte ptr [rbx + 0x17b61c05], cl ; add byte ptr [rbx], al ; ret
0x000002000048507c : add byte ptr [rbx + 0x18c93], cl ; add bh, dh ; ret 0x6000
0x000002000013045f : add byte ptr [rbx + 0x21fc5a05], cl ; add byte ptr [rbx], ch ; ret 0xe083
0x0000020000615ea5 : add byte ptr [rbx + 0x234104e2], al ; ret 0x345
0x00000200006e6ae8 : add byte ptr [rbx + 0x2341ffca], al ; ret
0x00000200006dc05d : add byte ptr [rbx + 0x2341ffca], al ; ret 0xe0c1
0x000002000004ad3e : add byte ptr [rbx + 0x244489f0], cl ; and dh, dh ; ret
0x00000200005b24d1 : add byte ptr [rbx + 0x244c890a], cl ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000de136 : add byte ptr [rbx + 0x278fef0d], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200000218b6 : add byte ptr [rbx + 0x27d9d305], cl ; add byte ptr [rbx], al ; ret
0x00000200006430a6 : add byte ptr [rbx + 0x27ffe25], al ; add byte ptr [rax], al ; ret
0x00000200000acd19 : add byte ptr [rbx + 0x2aa84c0d], cl ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000006af1e : add byte ptr [rbx + 0x2bd123d3], cl ; ret 0xc63b
0x0000020000058163 : add byte ptr [rbx + 0x2fef1e15], cl ; add dh, dh ; ret 0x7420
0x00000200001c08e2 : add byte ptr [rbx + 0x31483], cl ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x00000200003f551d : add byte ptr [rbx + 0x344f8e1], al ; jmp 0x2001101d879
0x000002000001de1d : add byte ptr [rbx + 0x37312f9], al ; mov al, 1 ; ret
0x00000200006ddadf : add byte ptr [rbx + 0x3a8be], cl ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000084af7 : add byte ptr [rbx + 0x3a], ch ; ret 1
0x000002000041e5ab : add byte ptr [rbx + 0x3b480847], cl ; ret 0x830f
0x00000200006e425d : add byte ptr [rbx + 0x3b48b], cl ; add byte ptr [rbp - 0x75], al ; ret
0x000002000000bcec : add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x000002000064ff3b : add byte ptr [rbx + 0x3f0d205], cl ; add bh, bh ; ret
0x00000200003cc896 : add byte ptr [rbx + 0x418b3052], cl ; add al, 0x2b ; ret 0xc085
0x00000200001620b2 : add byte ptr [rbx + 0x440f01f9], al ; ret 0x521
0x00000200001f12fe : add byte ptr [rbx + 0x45891041], cl ; ret
0x000002000041280c : add byte ptr [rbx + 0x478d48d0], cl ; adc byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000107e6b : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x28 ; ret
0x00000200004f7c3f : add byte ptr [rbx + 0x48482444], cl ; add esp, 0x38 ; ret
0x000002000047d8f7 : add byte ptr [rbx + 0x48c18bc8], cl ; add esp, 0x28 ; ret
0x00000200001564b7 : add byte ptr [rbx + 0x48c28bd0], cl ; add esp, 0x28 ; ret
0x000002000057a5c8 : add byte ptr [rbx + 0x4c8b48c2], cl ; ret
0x0000020000158669 : add byte ptr [rbx + 0x518b0841], cl ; sbb byte ptr [rbx], bh ; ret 0x2d73
0x0000020000117053 : add byte ptr [rbx + 0x58b2448], cl ; scasd eax, dword ptr [rdi] ; jmp qword ptr [rbx]
0x000002000017ac0a : add byte ptr [rbx + 0x5d], bl ; ret
0x00000200006bbf76 : add byte ptr [rbx + 0x5f708cb], al ; pop rsp ; ret 0xffc2
0x000002000042af9d : add byte ptr [rbx + 0x6cebe8ca], cl ; ret
0x00000200003d8c68 : add byte ptr [rbx + 0x74ff85f9], cl ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000427b26 : add byte ptr [rbx + 0x75020879], al ; or edi, edi ; ret 0xfa83
0x000002000042a782 : add byte ptr [rbx + 0x7506e8cb], cl ; ret
0x00000200004fefec : add byte ptr [rbx + 0x75c085d8], cl ; test al, 0x8b ; ret
0x000002000042a465 : add byte ptr [rbx + 0x7823e8cb], cl ; ret
0x00000200006de561 : add byte ptr [rbx + 0x788d41c7], cl ; add dword ptr [rbx], ebp ; ret 0x8a40
0x00000200004ea50c : add byte ptr [rbx + 0x78c085d8], cl ; ret
0x00000200004f525c : add byte ptr [rbx + 0x7de0e8fe], cl ; ret 0x8bff
0x000002000000bc44 : add byte ptr [rbx + 0x9081], cl ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000012b547 : add byte ptr [rbx + 0x9093], cl ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200004e4484 : add byte ptr [rbx + 0x9889], al ; add byte ptr [rcx], al ; ret
0x00000200001a6d70 : add byte ptr [rbx + 0xac89], cl ; add byte ptr [rbx], ah ; ret
0x00000200004c2438 : add byte ptr [rbx + 0xb], dh ; mov rcx, rsi ; call 0x200000f22c9
0x000002000047d883 : add byte ptr [rbx + 0xba0846], cl ; add bh, bh ; jmp qword ptr [rbx]
0x0000020000271571 : add byte ptr [rbx + 0xc], cl ; or byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200003a3fce : add byte ptr [rbx + 0xcc91], cl ; add bh, bh ; ret 0xd53b
0x000002000037a358 : add byte ptr [rbx + 0xd886], cl ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000516c74 : add byte ptr [rbx + 0xd8d48f8], cl ; ret 0xdbd7
0x00000200001e8117 : add byte ptr [rbx + 0xf010479], al ; test ebp, eax ; ret
0x00000200003df480 : add byte ptr [rbx + 0xf083], cl ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200000dfdb7 : add byte ptr [rbx + 0xf10247f], al ; test byte ptr [rdx], bl ; ret 0xf
0x00000200004804d7 : add byte ptr [rbx + 0xfc085f8], cl ; test dword ptr [rcx], eax ; ret
0x00000200004d9ab7 : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x00000200005dff45 : add byte ptr [rbx + rax + 0x4f], al ; add al, 0xe8 ; int1 ; ret
0x00000200005502d2 : add byte ptr [rbx + rax - 0x37], cl ; jmp r9
0x00000200001bb1d1 : add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x000002000063e5b5 : add byte ptr [rbx + rax - 0x50], bh ; add ebx, eax ; xor al, al ; ret
0x000002000059b08c : add byte ptr [rbx + rax - 0x50], dh ; add ebx, eax ; xor al, al ; ret
0x000002000042c02d : add byte ptr [rbx + rax*8 - 0x48], dh ; and al, byte ptr [rax] ; add al, al ; ret
0x000002000007b2c6 : add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x000002000057b96b : add byte ptr [rbx + rbx*8 - 1], dh ; ret 0x8348
0x0000020000556ad4 : add byte ptr [rbx + rcx - 0x75], dh ; ret
0x00000200000238e1 : add byte ptr [rbx + rcx - 0x77], dh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000665751 : add byte ptr [rbx + rcx*4 + 0x1d], al ; ja 0x20000665706 ; ret 0xb9ff
0x00000200005e22cd : add byte ptr [rbx + rcx*4 + 0x25], al ; ret
0x00000200006ee0da : add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, al ; ret
0x00000200004f27b6 : add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0xdd92
0x00000200003f0b03 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x00000200000c5163 : add byte ptr [rbx + rcx*4 + 0x45], cl ; sbb dh, dh ; ret
0x000002000039ca4c : add byte ptr [rbx + rcx*4 + 0x65], al ; ret
0x0000020000376e33 : add byte ptr [rbx + rcx*4 + 0xd], al ; push rcx ; ret 0x30
0x00000200000aa841 : add byte ptr [rbx + rcx*4 + 0xd], al ; ret
0x00000200006620e8 : add byte ptr [rbx + rcx*4 + 0xd], cl ; pop rax ; cdq ; ret 0x48ff
0x00000200000c9a7e : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x2028
0x00000200003edb06 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x2955
0x00000200006c7b2e : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0xbc2a
0x00000200005170a9 : add byte ptr [rbx + rcx*4 + 5], cl ; lahf ; jmp rbx
0x000002000040c11d : add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x00000200001ac242 : add byte ptr [rbx + rcx*4 - 0x39], al ; call 0x200001b847e
0x000002000017121c : add byte ptr [rbx + rcx*4 - 0x3d], cl ; call rdi
0x00000200000cc0d9 : add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x00000200000cbad3 : add byte ptr [rbx + rcx*4 - 0x7c], cl ; ret
0x00000200006d5181 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x18] ; call rdi
0x00000200006d55a3 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59f7 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d5790 : add byte ptr [rbx + rcx*4 - 0xe], cl ; lea edx, dword ptr [rbx + 0x58] ; call rdi
0x0000020000011906 : add byte ptr [rbx + rdi + 0x34], cl ; ret 0x840f
0x0000020000531569 : add byte ptr [rbx + rdi - 0x2f], al ; jae 0x2000053157a ; mov al, 1 ; ret
0x00000200000fe57d : add byte ptr [rbx + rdi - 0x36], al ; jb 0x200000fe590 ; mov rax, r11 ; ret
0x0000020000446d17 : add byte ptr [rbx + rdx + 0x49], dh ; mov ecx, ebp ; call 0x20000067ea9
0x0000020000160ad6 : add byte ptr [rbx + rdx*2 + 0x3b], dh ; ret
0x000002000047e295 : add byte ptr [rbx - 0x127217fb], cl ; inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x00000200005e14c2 : add byte ptr [rbx - 0x14], ah ; push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret
0x000002000058624c : add byte ptr [rbx - 0x17fa1428], cl ; mov dh, 0x92 ; ret
0x0000020000635f0c : add byte ptr [rbx - 0x1d3eb72f], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x6a75
0x0000020000433dcc : add byte ptr [rbx - 0x1f7cf91f], al ; ret
0x000002000050c5f1 : add byte ptr [rbx - 0x1f7cf91f], al ; ret 0xb41
0x0000020000084e3f : add byte ptr [rbx - 0x25], al ; ret 0
0x000002000020d2fb : add byte ptr [rbx - 0x27fff429], dl ; ret 0x20
0x00000200006d0c29 : add byte ptr [rbx - 0x379b03fb], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4850
0x00000200006c6116 : add byte ptr [rbx - 0x3b7cb73d], cl ; jo 0x200006c6181 ; ret
0x000002000047256f : add byte ptr [rbx - 0x3b7cb73d], cl ; js 0x200004725df ; pop rbx ; ret
0x00000200004f3341 : add byte ptr [rbx - 0x3b7cb73d], cl ; pop rbx ; ret
0x000002000050ce24 : add byte ptr [rbx - 0x3b7cb73d], cl ; push rax ; pop rbx ; ret
0x0000020000423b3e : add byte ptr [rbx - 0x3bc117f5], cl ; ret 0x48ff
0x0000020000257cf3 : add byte ptr [rbx - 0x3cffa53d], bh ; ret
0x0000020000150f81 : add byte ptr [rbx - 0x3d], bl ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001869e7 : add byte ptr [rbx - 0x3ddcb7ff], cl ; ret
0x00000200004cf997 : add byte ptr [rbx - 0x3ef00f3d], cl ; sbb byte ptr [r11], r8b ; ret
0x00000200004cfb9d : add byte ptr [rbx - 0x3ef00f3d], cl ; sbb byte ptr [rbx], r8b ; ret
0x000002000061fce7 : add byte ptr [rbx - 0x3ef00f3d], cl ; sub byte ptr [r11], al ; ret
0x000002000015b306 : add byte ptr [rbx - 0x3ef00f3e], cl ; sbb byte ptr [r11], al ; ret 0xc23b
0x00000200000a9d56 : add byte ptr [rbx - 0x3f7a7efc], cl ; je 0x200000a9d6c ; ret
0x000002000014e25f : add byte ptr [rbx - 0x41f0ba10], cl ; xchg eax, edi ; ret
0x00000200006cb72f : add byte ptr [rbx - 0x43b666f3], al ; call qword ptr [rax]
0x0000020000069dc5 : add byte ptr [rbx - 0x49f00037], al ; ret 0xe280
0x00000200000c3aed : add byte ptr [rbx - 0x50f0b63d], cl ; ret 0x8b4a
0x000002000058ffbd : add byte ptr [rbx - 0x50f0ba38], cl ; fld dword ptr [rcx - 0x75] ; ret
0x00000200000637c0 : add byte ptr [rbx - 0x55], dh ; xor eax, eax ; jmp 0x200000637a7
0x00000200004d169e : add byte ptr [rbx - 0x5b351738], cl ; ret
0x000002000025baa4 : add byte ptr [rbx - 0x6a3fffc8], dl ; cmp byte ptr [rax], al ; ret
0x00000200006f1a66 : add byte ptr [rbx - 0x6b74b63e], cl ; ret
0x00000200004f0b40 : add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x0000020000401484 : add byte ptr [rbx - 0x6bf0b701], al ; ret 0x8d4c
0x00000200004f4f76 : add byte ptr [rbx - 0x7374b63f], cl ; ret
0x00000200000209d7 : add byte ptr [rbx - 0x743cc408], cl ; ret
0x00000200000bf6ae : add byte ptr [rbx - 0x7487dbb4], cl ; ret 0xba0f
0x0000020000582492 : add byte ptr [rbx - 0x74b30fab], cl ; ret
0x00000200003cd54a : add byte ptr [rbx - 0x74b383aa], cl ; ret
0x000002000063497d : add byte ptr [rbx - 0x74b3cfad], cl ; ret
0x0000020000706401 : add byte ptr [rbx - 0x74b3fbbf], cl ; ret 0x589
0x00000200000242fa : add byte ptr [rbx - 0x74b6dbb1], cl ; ret 0x8941
0x00000200001b0f86 : add byte ptr [rbx - 0x74b7dba4], cl ; ret
0x0000020000040fa0 : add byte ptr [rbx - 0x74b7dbb4], cl ; ret
0x00000200000bbf07 : add byte ptr [rbx - 0x74b7f83f], al ; ret
0x00000200001c0c30 : add byte ptr [rbx - 0x74b7fbad], cl ; or r15b, r15b ; ret 0xca8b
0x00000200005903e0 : add byte ptr [rbx - 0x74bba7a9], cl ; ret
0x000002000038d785 : add byte ptr [rbx - 0x74bfdba4], cl ; ret
0x0000020000111a24 : add byte ptr [rbx - 0x76a7dbbc], cl ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200003c8962 : add byte ptr [rbx - 0x79f0fc08], al ; ret
0x000002000045bc46 : add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x0000020000382931 : add byte ptr [rbx - 0x7af00008], al ; ret 0x26bd
0x00000200003b429b : add byte ptr [rbx - 0x7af0da08], al ; ret 0
0x00000200001e572a : add byte ptr [rbx - 0x7bbeefb9], cl ; ret 0xcc75
0x00000200001ad0e2 : add byte ptr [rbx - 0x7bf00006], al ; ret 0
0x00000200000c3c6d : add byte ptr [rbx - 0x7bf0fa07], al ; ret 4
0x00000200003c5921 : add byte ptr [rbx - 0x7bf0fd15], al ; ret 2
0x000002000036100b : add byte ptr [rbx - 0x7bf0fd18], al ; ret 0
0x00000200006d286a : add byte ptr [rbx - 0x7cb70740], al ; ret
0x000002000018b30e : add byte ptr [rbx - 0x7cb71f3f], al ; ret
0x0000020000367f33 : add byte ptr [rbx - 0x7cb7d7a6], cl ; ret 0x4830
0x0000020000364cfd : add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x000002000017913c : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x00000200004faa0d : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200003b4aef : add byte ptr [rbx - 0x7cf0e701], al ; ret
0x000002000044776b : add byte ptr [rbx - 0x99fdb84], cl ; ret
0x000002000046120f : add byte ptr [rbx - 0x9afdba4], cl ; ret
0x0000020000596aba : add byte ptr [rbx - 0xa], dh ; ret
0x00000200006f5f5a : add byte ptr [rbx - 0xbeb7bb], cl ; ret
0x0000020000360c68 : add byte ptr [rbx - 0xd6b7ae3], cl ; push rsi ; ret
0x00000200003d4de7 : add byte ptr [rbx - 1], ch ; and eax, 0x8349fa03 ; ret 0x4902
0x00000200001a6d76 : add byte ptr [rbx], ah ; ret
0x00000200001a776e : add byte ptr [rbx], ah ; ret 0x341
0x00000200001af127 : add byte ptr [rbx], ah ; ret 0x3b41
0x000002000003148c : add byte ptr [rbx], ah ; ret 0x4789
0x000002000003ef85 : add byte ptr [rbx], ah ; ret 0x8041
0x000002000037f80a : add byte ptr [rbx], ah ; ret 0x8941
0x00000200004f9838 : add byte ptr [rbx], ah ; ret 0x8948
0x000002000037f8a9 : add byte ptr [rbx], ah ; ret 0xc148
0x00000200003dcd65 : add byte ptr [rbx], ah ; ret 0xc23b
0x000002000051fa86 : add byte ptr [rbx], ah ; ret 0xd123
0x00000200003d30b8 : add byte ptr [rbx], ah ; rol byte ptr [rbx], 1 ; ret 0xe8c1
0x0000020000082987 : add byte ptr [rbx], ah ; scasb al, byte ptr [rdi] ; jp 0x200000829af ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000008b941 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x00000200004cd4cf : add byte ptr [rbx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200001b5b03 : add byte ptr [rbx], al ; enter -0x3e75, 0x48 ; add esp, 0x28 ; ret
0x000002000038c9c3 : add byte ptr [rbx], al ; jo 0x2000038c9d4 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x2000038c99a
0x00000200000218bc : add byte ptr [rbx], al ; ret
0x000002000017508a : add byte ptr [rbx], al ; ret 0x48b
0x00000200003cdb63 : add byte ptr [rbx], al ; ret 0x5f41
0x00000200001f1124 : add byte ptr [rbx], al ; ret 0x8966
0x0000020000558c0e : add byte ptr [rbx], al ; ret 0x8b48
0x00000200001ae4c5 : add byte ptr [rbx], al ; ret 0xc123
0x00000200005874fc : add byte ptr [rbx], al ; ret 0xc23b
0x000002000058f7b4 : add byte ptr [rbx], al ; ret 0xf799
0x000002000006e6b3 : add byte ptr [rbx], al ; rol ecx, -0x18 ; or al, 3 ; ret 0xff48
0x000002000006d75e : add byte ptr [rbx], al ; rol ecx, -0x18 ; or al, 3 ; ret 0xffba
0x00000200004e7de1 : add byte ptr [rbx], al ; sar bh, cl ; ret 0x5489
0x0000020000069318 : add byte ptr [rbx], al ; xchg dword ptr [rax + 0x3b000000], edx ; ret
0x00000200006f1cb4 : add byte ptr [rbx], bh ; fisttp qword ptr [rdi] ; ret 0x8b49
0x00000200000c382f : add byte ptr [rbx], bh ; jmp 0x20067cebc4a
0x0000020000021b22 : add byte ptr [rbx], bh ; ret
0x0000020000180dc0 : add byte ptr [rbx], bh ; ret 0x1077
0x0000020000082b7f : add byte ptr [rbx], bh ; ret 0x1883
0x00000200001c056a : add byte ptr [rbx], bh ; ret 0x1b72
0x0000020000180021 : add byte ptr [rbx], bh ; ret 0x1f75
0x0000020000646185 : add byte ptr [rbx], bh ; ret 0x2173
0x0000020000546e16 : add byte ptr [rbx], bh ; ret 0x2375
0x0000020000626ad4 : add byte ptr [rbx], bh ; ret 0x420f
0x0000020000565399 : add byte ptr [rbx], bh ; ret 0x4374
0x00000200006095a2 : add byte ptr [rbx], bh ; ret 0x4466
0x00000200000adeb9 : add byte ptr [rbx], bh ; ret 0x470f
0x00000200005652dd : add byte ptr [rbx], bh ; ret 0x474
0x0000020000108c80 : add byte ptr [rbx], bh ; ret 0x574
0x00000200001aec14 : add byte ptr [rbx], bh ; ret 0x57e
0x0000020000569a5b : add byte ptr [rbx], bh ; ret 0x676
0x000002000058d7ff : add byte ptr [rbx], bh ; ret 0x7675
0x000002000050b60c : add byte ptr [rbx], bh ; ret 0x7f77
0x000002000012a4e7 : add byte ptr [rbx], bh ; ret 0x820f
0x000002000048c3e6 : add byte ptr [rbx], bh ; ret 0x840f
0x00000200001acdce : add byte ptr [rbx], bh ; ret 0x850f
0x0000020000365514 : add byte ptr [rbx], bh ; ret 0x860f
0x000002000000d587 : add byte ptr [rbx], bh ; ret 0x870f
0x00000200005652c0 : add byte ptr [rbx], bh ; ret 0x874
0x00000200003c8c23 : add byte ptr [rbx], bh ; ret 0x8b44
0x000002000005aff5 : add byte ptr [rbx], bh ; ret 0x8d0f
0x0000020000433fda : add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200004b50c2 : add byte ptr [rbx], bh ; ret 0x940f
0x0000020000110b0c : add byte ptr [rbx], bh ; ret 0x973
0x000002000064e94e : add byte ptr [rbx], bh ; ret 0xa73
0x000002000019139c : add byte ptr [rbx], bh ; ret 0xa74
0x00000200003a15ed : add byte ptr [rbx], bh ; ret 0xad72
0x00000200001b3306 : add byte ptr [rbx], bh ; ret 0xc77
0x0000020000012b0e : add byte ptr [rbx], bh ; ret 0xc7f
0x00000200004c702b : add byte ptr [rbx], bh ; ret 0xe475
0x00000200001ee494 : add byte ptr [rbx], bh ; ret 0xe575
0x00000200004d1461 : add byte ptr [rbx], bh ; ret 0xe775
0x000002000060e136 : add byte ptr [rbx], bh ; ret 0xe875
0x00000200001ee465 : add byte ptr [rbx], bh ; ret 0xe975
0x0000020000421f1b : add byte ptr [rbx], bh ; ret 0xea75
0x00000200001c2b50 : add byte ptr [rbx], bh ; ret 0xf72
0x000002000035fed1 : add byte ptr [rbx], bh ; ret 0xf774
0x0000020000020bdd : add byte ptr [rbx], bh ; sal byte ptr [rdi + 2], 1 ; ret
0x00000200001df634 : add byte ptr [rbx], bh ; vpsrld ymm13, ymm1, xmm1 ; ret
0x00000200001a6052 : add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x00000200001edfd5 : add byte ptr [rbx], bl ; leave ; add eax, ecx ; ret
0x0000020000083ef7 : add byte ptr [rbx], bl ; ret
0x000002000066454f : add byte ptr [rbx], ch ; enter 0x58b, 0x5c ; cmp al, 0xc1 ; call rcx
0x0000020000083957 : add byte ptr [rbx], ch ; out 5, eax ; add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x0000020000035c17 : add byte ptr [rbx], ch ; ret
0x00000200000aae28 : add byte ptr [rbx], ch ; ret 0x2b41
0x00000200000cc800 : add byte ptr [rbx], ch ; ret 0x3b41
0x0000020000470bd0 : add byte ptr [rbx], ch ; ret 0x4166
0x00000200004cdbb8 : add byte ptr [rbx], ch ; ret 0x448b
0x0000020000143434 : add byte ptr [rbx], ch ; ret 0x8789
0x00000200001744b9 : add byte ptr [rbx], ch ; ret 0x8966
0x000002000014e980 : add byte ptr [rbx], ch ; ret 0x8d48
0x0000020000642da8 : add byte ptr [rbx], ch ; ret 0x8d4c
0x000002000004af5e : add byte ptr [rbx], ch ; ret 0xd08b
0x000002000005ba7f : add byte ptr [rbx], ch ; ret 0xd233
0x00000200000c82aa : add byte ptr [rbx], ch ; ret 0xd38b
0x0000020000130465 : add byte ptr [rbx], ch ; ret 0xe083
0x0000020000556b29 : add byte ptr [rbx], cl ; fcompi st(7) ; ret
0x0000020000057aca : add byte ptr [rbx], cl ; push rbx ; je 0x20000057acb ; ret 0xf60
0x00000200001373aa : add byte ptr [rbx], cl ; ret 0x4f89
0x000002000060e6c6 : add byte ptr [rbx], cl ; ret 0xc883
0x000002000023b1eb : add byte ptr [rbx], cl ; ret 0xf007
0x00000200000563b4 : add byte ptr [rbx], dh ; add cl, byte ptr [rcx + 0x23] ; ret
0x000002000037abb7 : add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x00000200006d75e1 : add byte ptr [rbx], dh ; dec dword ptr [rcx - 0x75] ; ret 0xbb41
0x000002000041dfb9 : add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x00000200003bcf7e : add byte ptr [rbx], dh ; fcomi st(7) ; ret 0xffff
0x000002000058ad46 : add byte ptr [rbx], dh ; fild dword ptr [rbp + 0x2b] ; ret
0x000002000045e62b : add byte ptr [rbx], dh ; fild dword ptr [rcx - 0x75] ; ret 0xe083
0x00000200000ca513 : add byte ptr [rbx], dh ; fisttp dword ptr [rax + 3] ; ret 0x3d48
0x0000020000084289 : add byte ptr [rbx], dh ; fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x0000020000642dec : add byte ptr [rbx], dh ; fld xword ptr [rbx] ; ret 0x2579
0x000002000066432e : add byte ptr [rbx], dh ; imul al ; ret 0xffae
0x0000020000485365 : add byte ptr [rbx], dh ; imul cl ; ret
0x0000020000547506 : add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x000002000069b9c7 : add byte ptr [rbx], dh ; leave ; call r9
0x00000200007024cd : add byte ptr [rbx], dh ; leave ; call rax
0x00000200006e6b57 : add byte ptr [rbx], dh ; leave ; call rdi
0x00000200000dcb6d : add byte ptr [rbx], dh ; leave ; mov al, cl ; ret
0x00000200003c1c9e : add byte ptr [rbx], dh ; ret
0x00000200001b36ee : add byte ptr [rbx], dh ; ret 0x189
0x0000020000134b28 : add byte ptr [rbx], dh ; ret 0x8348
0x0000020000591caf : add byte ptr [rbx], dh ; ret 0x8942
0x00000200003bc408 : add byte ptr [rbx], dh ; ret 0xc9ff
0x00000200001b498b : add byte ptr [rbx], dh ; ret 0xd78b
0x00000200004481ac : add byte ptr [rbx], dh ; rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200000a97c2 : add byte ptr [rbx], dh ; rol bl, 0x41 ; mov eax, ecx ; ret
0x0000020000162107 : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000027e78 : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000015b223 : add byte ptr [rbx], dh ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200000abb50 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf44
0x0000020000164ae9 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x00000200000eb689 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000040015f : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x00000200004e2a06 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000006e889 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; fadd dword ptr [rcx - 0x75] ; ret
0x0000020000392ca5 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000053da69 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000015e539
0x00000200005b0ea3 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000424ae7 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000016ce4f : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000052311 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000181d66 : add byte ptr [rbx], dh ; ror byte ptr [rbp - 0x74b3c0b6], cl ; ret
0x000002000038a38c : add byte ptr [rbx], dh ; ror byte ptr [rcx + rcx*4 + 0x35], 0xd2 ; ret 0xfff5
0x00000200000cc429 : add byte ptr [rbx], dh ; sal al, 0xf ; mov cl, 0x11 ; jne 0x200000cc43c ; ret
0x000002000015695e : add byte ptr [rbx], dh ; sal dh, cl ; ret
0x0000020000069631 : add byte ptr [rbx], dh ; shr al, cl ; xlatb ; pop rcx ; and byte ptr [rax], al ; jmp 0x20000069607
0x00000200006325d4 : add byte ptr [rbx], dh ; shr al, cl ; xor al, 0xca ; ret
0x000002000052e8c2 : add byte ptr [rbx], dh ; shr bl, 0 ; add rsp, 0x18 ; ret
0x00000200005c5258 : add byte ptr [rbx], dh ; test byte ptr [rdx - 0x74bb38bb], 0x4d ; ret
0x00000200004750dc : add byte ptr [rcx + 0x10fb], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x000002000013e395 : add byte ptr [rcx + 0x146c1c0d], cl ; add byte ptr [rdi], cl ; ret 0x8d48
0x000002000012fa79 : add byte ptr [rcx + 0x23], al ; ret
0x000002000038b64f : add byte ptr [rcx + 0x23], al ; ret 0x2345
0x000002000060e634 : add byte ptr [rcx + 0x23], al ; ret 0x4166
0x000002000060e6bc : add byte ptr [rcx + 0x23], al ; ret 0x8966
0x000002000014e2b2 : add byte ptr [rcx + 0x23], al ; rol dword ptr [rcx - 0x3f], -0x20 ; add cl, byte ptr [rbx] ; ret 0x225
0x0000020000021507 : add byte ptr [rcx + 0x23], cl ; ret
0x0000020000164c3a : add byte ptr [rcx + 0x23], cl ; ret 0x8b49
0x00000200003c2ee0 : add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x0000020000145236 : add byte ptr [rcx + 0x2b], al ; ret
0x000002000019e310 : add byte ptr [rcx + 0x2b], al ; ret 0x344
0x0000020000121a57 : add byte ptr [rcx + 0x2b], al ; ret 0xf03b
0x000002000004aa77 : add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000d3048 : add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x000002000006431b : add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000056b01d : add byte ptr [rcx + 0x2cfbe801], dh ; ret
0x00000200001acdc8 : add byte ptr [rcx + 0x32097], cl ; add byte ptr [rbx], bh ; ret 0x850f
0x00000200001b3329 : add byte ptr [rcx + 0x33], al ; leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000019fa71 : add byte ptr [rcx + 0x33], al ; ret
0x00000200006e426b : add byte ptr [rcx + 0x33], cl ; adc dword ptr [rbp + 3], eax ; ret 0x8349
0x0000020000190c43 : add byte ptr [rcx + 0x33], cl ; ret
0x00000200000f069d : add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200006a0e27 : add byte ptr [rcx + 0x3a], al ; ret 0x473
0x0000020000590a85 : add byte ptr [rcx + 0x3a], al ; sal dword ptr [rbx - 0x3b], -0xd ; ret
0x0000020000641b07 : add byte ptr [rcx + 0x3b], al ; push rbx ; add al, 0x73 ; jbe 0x20000641aa2 ; ret 0x3949
0x000002000000bc4a : add byte ptr [rcx + 0x3b], al ; ret
0x000002000006c10e : add byte ptr [rcx + 0x3b], al ; ret 0x4b74
0x000002000000bec0 : add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x00000200001dd79a : add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x00000200000d2e05 : add byte ptr [rcx + 0x3b], al ; ret 0x860f
0x00000200000c895b : add byte ptr [rcx + 0x3b], al ; ret 0x870f
0x00000200001571e1 : add byte ptr [rcx + 0x3b], al ; ret 0x8e0f
0x00000200001ab119 : add byte ptr [rcx + 0x3b], al ; ret 0xf41
0x00000200004aafd7 : add byte ptr [rcx + 0x3b], cl ; fmul dword ptr [rdi + rcx + 0x4f] ; ret
0x0000020000014052 : add byte ptr [rcx + 0x3b], cl ; ret
0x00000200004cd4fb : add byte ptr [rcx + 0x3b], cl ; ret 0x1c74
0x0000020000138849 : add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x000002000058c2fa : add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000c3701 : add byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x00000200004cd4a0 : add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x000002000036da6a : add byte ptr [rcx + 0x3b], cl ; ret 0xda75
0x0000020000160698 : add byte ptr [rcx + 0x3b], cl ; ret 0xee75
0x000002000019ef7d : add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x0000020000379a82 : add byte ptr [rcx + 0x400f9], al ; add byte ptr [rdi], cl ; ret 0x4389
0x000002000059398b : add byte ptr [rcx + 0x4d89b84d], cl ; fadd dword ptr [rbx] ; ret
0x00000200000d9c6a : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000200000433d6 : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000491086 : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000ad94c : add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a1a00 : add byte ptr [rcx + 0x5c], al ; ret
0x000002000005328f : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x000002000014fd4a : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x0000020000013a3f : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004465d3 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000043af71 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000046d675 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rsi ; ret
0x00000200000b8842 : add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x000002000046a85d : add byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x00000200006bb1dd : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013f37c : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d4408 : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x00000200000f56e2 : add byte ptr [rcx + 0x5d], al ; pop rdi ; ret
0x00000200000cf5fa : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004a7ff : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x000002000011b35e : add byte ptr [rcx + 0x5d], al ; ret
0x00000200000250cc : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200004cd402 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008880 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000006f3b0 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003febf : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000f059d : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001126b8 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000046687f : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000640fc4 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000668b3 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003f1590 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000004edec : add byte ptr [rcx + 0x5e], al ; pop r13 ; ret
0x000002000010cb78 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000af054 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000145c1f : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cbd2a : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071d52 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000382f0 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029ce3 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200003cff80 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000476d70 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x0000020000365ecb : add byte ptr [rcx + 0x5e], al ; ret
0x00000200004494a2 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000404922 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000049d174 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000270361 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c188f : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; ret
0x000002000051de01 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200004d7c52 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007170e : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000df3d4 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7eac : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c0b88 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000bfce7 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000387713 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003bca01 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000af945 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000c354f : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000a8edb : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000133b14 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x0000020000377142 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000042c174 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000016562 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x00000200005be4d7 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003e092f : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000e2c73 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000010632c : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004377c9 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004bb0a3 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004a7a52 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000ac7f1 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x0000020000571057 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x000002000019a92f : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005d0c39 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d9e9a : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a9538 : add byte ptr [rcx + 0x5f], al ; ret
0x000002000035e6c5 : add byte ptr [rcx + 0x63], cl ; ret
0x000002000007c5a3 : add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200004e4515 : add byte ptr [rcx + 0x74], al ; outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200004eda54 : add byte ptr [rcx + 0x7930323a], al ; imul ecx, dword ptr [rdi], -0x7b ; ret 0xea5
0x00000200001f3219 : add byte ptr [rcx + 0x7bff], al ; ror byte ptr [rdi], 0x84 ; ret 0xe628
0x0000020000402ea2 : add byte ptr [rcx + 0x8010ce], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200003c4a34 : add byte ptr [rcx + 0xb], al ; ret
0x00000200000210a3 : add byte ptr [rcx + 0xb], cl ; ret 0x8948
0x00000200005ffa4a : add byte ptr [rcx + 0xb], cl ; ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x000002000036938f : add byte ptr [rcx + 0xf024b4], cl ; add byte ptr [rax], al ; call qword ptr [r14]
0x000002000040179f : add byte ptr [rcx + 0xf], al ; mov bh, 0x1e ; call 0x20000029cf8
0x000002000061c321 : add byte ptr [rcx + 0xf], al ; mov bh, 0x50 ; add dh, dh ; ret 0xf10
0x0000020000613812 : add byte ptr [rcx + 0xf], al ; mov bh, 0xc9 ; mov al, byte ptr [rax + rcx] ; ret
0x0000020000050f8d : add byte ptr [rcx + 0xf], al ; mov dh, 0xc1 ; mov cr8, rax ; ret
0x000002000043b427 : add byte ptr [rcx + 0xf], al ; mov dh, 0xc2 ; ret
0x00000200004260ae : add byte ptr [rcx + 0xf], al ; mov edx, 0x8b4c08eb ; ret
0x0000020000583ecc : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000200005893b9 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x00000200000ff74a : add byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c0 ; ret
0x00000200000aa2ab : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000002000046ec43 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000182e89 : add byte ptr [rcx + 0xfffc2], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x310
0x000002000038e90b : add byte ptr [rcx + 2], bh ; call 0x200001babe8
0x0000020000634b65 : add byte ptr [rcx + 3], al ; dec dword ptr [rax - 0x7d] ; ret
0x000002000015312e : add byte ptr [rcx + 3], al ; enter -0x48f1, 4 ; ret
0x000002000014221d : add byte ptr [rcx + 3], al ; ret
0x0000020000186bb0 : add byte ptr [rcx + 3], al ; ret 0x34d
0x000002000050b1bd : add byte ptr [rcx + 3], al ; ret 0x4489
0x000002000050b561 : add byte ptr [rcx + 3], al ; ret 0x4566
0x00000200004c14fa : add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000059664d : add byte ptr [rcx + 3], al ; ret 0x85c7
0x000002000062eb1d : add byte ptr [rcx + 3], al ; ret 0x8941
0x0000020000595371 : add byte ptr [rcx + 3], al ; ret 0x8944
0x000002000045bcb4 : add byte ptr [rcx + 3], al ; ret 0xba41
0x000002000002c819 : add byte ptr [rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x000002000046e4f6 : add byte ptr [rcx + 3], cl ; int 0xff
0x00000200000dd07f : add byte ptr [rcx + 3], cl ; leave ; jmp rcx
0x0000020000069164 : add byte ptr [rcx + 3], cl ; ret
0x00000200000eaa30 : add byte ptr [rcx + 3], cl ; ret 0x3b48
0x0000020000038bb6 : add byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200004012e4 : add byte ptr [rcx + 3], cl ; ret 0xe0ff
0x0000020000068e8a : add byte ptr [rcx + 3], cl ; retf ; jmp rcx
0x000002000046e4f5 : add byte ptr [rcx + 3], r9b ; int 0xff
0x00000200000312a5 : add byte ptr [rcx + 5], bh ; call 0x200000ad524
0x000002000024c4cf : add byte ptr [rcx + rax*8], ch ; add r8b, r11b ; ret 0x4d
0x000002000025e6eb : add byte ptr [rcx + rax*8], dl ; cmp eax, dword ptr [rax] ; ret
0x0000020000054cbd : add byte ptr [rcx + rax], ah ; ret
0x00000200006551ca : add byte ptr [rcx + rax], al ; add byte ptr [rax], al ; ret
0x00000200000b5196 : add byte ptr [rcx + rbp*8 - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000004cfde : add byte ptr [rcx + rbp*8], al ; ret
0x000002000016390e : add byte ptr [rcx + rcx - 0x75], dh ; add ah, byte ptr [rbx] ; ret
0x00000200003c6a66 : add byte ptr [rcx + rcx*2 - 0x75], dh ; ret
0x00000200006370f4 : add byte ptr [rcx + rcx*4 + 0x1b], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000011f984 : add byte ptr [rcx + rcx*4 + 0x1b], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c0fd1 : add byte ptr [rcx + rcx*4 + 0x1d], al ; ret
0x00000200006656b9 : add byte ptr [rcx + rcx*4 + 0x1d], al ; stosb byte ptr [edi], al ; ret 0x48ff
0x0000020000665600 : add byte ptr [rcx + rcx*4 + 0x25], cl ; stosq qword ptr [rdi], rax ; ret 0x4dff
0x00000200001c9658 : add byte ptr [rcx + rcx*4 + 0x40], cl ; or bh, bh ; ret 0x1589
0x000002000040485c : add byte ptr [rcx + rcx*4 + 0x42], cl ; or byte ptr [rax - 0x75], cl ; ret
0x00000200003a4ca3 : add byte ptr [rcx + rcx*4 + 0x43], al ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000018ccdd : add byte ptr [rcx + rcx*4 + 0x43], cl ; or byte ptr [rax + 0xb], cl ; ret 0x4466
0x0000020000119137 : add byte ptr [rcx + rcx*4 + 0x45], al ; ret
0x00000200006017e0 : add byte ptr [rcx + rcx*4 + 0x4c], al ; and al, 0x44 ; jmp 0x2000046daba
0x00000200003a9fe3 : add byte ptr [rcx + rcx*4 + 0x5d], cl ; out 0x3b, eax ; ret 0x8b48
0x00000200000d248b : add byte ptr [rcx + rcx*4 + 0x62], cl ; sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x00000200005c355b : add byte ptr [rcx + rcx*4 + 0x65], al ; ret
0x000002000001c8da : add byte ptr [rcx + rcx*4 + 0x6d], cl ; cmp dh, dh ; ret
0x00000200005a5bc3 : add byte ptr [rcx + rcx*4 + 0x6d], cl ; or al, ch ; sysenter
0x0000020000469a78 : add byte ptr [rcx + rcx*4 + 0x6f], al ; xor dh, dh ; ret
0x00000200004b1a6e : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x40 ; inc edx ; jmp 0x200004b1a35
0x00000200006cf083 : add byte ptr [rcx + rcx*4 + 0x75], al ; mov al, 0xe8 ; ret
0x00000200001f7068 : add byte ptr [rcx + rcx*4 + 0xc], cl ; ret 0x8b48
0x00000200004cc925 : add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x0000020000641d58 : add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x000002000036e0b4 : add byte ptr [rcx + rcx*4 + 2], cl ; add rsp, 0x28 ; ret
0x000002000002c83f : add byte ptr [rcx + rcx*4 + 2], cl ; ret
0x0000020000641dae : add byte ptr [rcx + rcx*4], cl ; mov al, 1 ; ret
0x0000020000442077 : add byte ptr [rcx + rcx*8 - 0x74b3bd8c], al ; ret 0xc2f6
0x00000200003fa059 : add byte ptr [rcx + rcx*8 - 0x74b3e78c], al ; ret 0xc2f6
0x00000200006baf5a : add byte ptr [rcx + rdi + 0x2d], al ; ret 0xc2d1
0x0000020000023acc : add byte ptr [rcx + rdi - 0x75], dh ; ret 0x41f0
0x00000200003b69a7 : add byte ptr [rcx + rdi*4 - 0x17], dh ; ret
0x0000020000062c73 : add byte ptr [rcx + rsi*2 + 0x33], dh ; shr al, cl ; ret
0x000002000025d49f : add byte ptr [rcx + rsi*2], ah ; add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x000002000025d49e : add byte ptr [rcx + rsi*2], spl ; add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x00000200006018fd : add byte ptr [rcx - 0x163fccc7], cl ; outsd dx, dword ptr [rsi] ; ret
0x0000020000028ccc : add byte ptr [rcx - 0x17dfdbbc], cl ; ret 0xfffd
0x0000020000572d21 : add byte ptr [rcx - 0x2f], al ; call 0x20042193073
0x000002000062324c : add byte ptr [rcx - 0x39], ah ; push rsi ; ret
0x00000200004e0a07 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000020000407c4b : add byte ptr [rcx - 0x3a], al ; adc byte ptr [r9], al ; ret
0x000002000006c2c6 : add byte ptr [rcx - 0x3f], al ; call 0x1ffc21206e5
0x000002000005dd67 : add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200000679b7 : add byte ptr [rcx - 0x3fccf3bf], cl ; ret
0x000002000003a389 : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000594fb8 : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xf58
0x00000200005e31cd : add byte ptr [rcx - 0x48], al ; js 0x200005e31dc ; ret 0xc148
0x00000200005c3d95 : add byte ptr [rcx - 0x48], al ; push rax ; push rax ; push rdx ; call 0x20000270049
0x0000020000523db3 : add byte ptr [rcx - 0x48], al ; push rbx ; pop rcx ; push rax ; call 0x20000270049
0x000002000045be86 : add byte ptr [rcx - 0x4b], al ; add dword ptr [rcx - 0x9beb3bf], ecx ; ret
0x00000200000eb728 : add byte ptr [rcx - 0x4b], al ; add esi, esi ; ret 0xf04
0x00000200000c69ab : add byte ptr [rcx - 0x4f], al ; adc dword ptr [rbp - 0x75], ecx ; ret
0x0000020000124eb8 : add byte ptr [rcx - 0x4f], al ; add dword ptr [rdx + rcx*4 - 0x6e], eax ; ret
0x00000200004259e9 : add byte ptr [rcx - 0x629017ff], dh ; ret 0xfff
0x000002000019ac59 : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x000002000063709d : add byte ptr [rcx - 0x73], al ; call 0x200452573f1
0x00000200004e9882 : add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200000f8e7d : add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 3] ; ret 0x789
0x00000200001b016a : add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 - 0x7b] ; ret
0x00000200000f9298 : add byte ptr [rcx - 0x73], al ; inc dword ptr [rbx + rcx*4 + 0x4c] ; ret 0x4808
0x00000200000cc362 : add byte ptr [rcx - 0x73], al ; jmp qword ptr [r11]
0x000002000003cc57 : add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x00000200004dccba : add byte ptr [rcx - 0x73], al ; or al, byte ptr [r11] ; or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000020000023818 : add byte ptr [rcx - 0x73], al ; or byte ptr [r11], al ; ret
0x0000020000395374 : add byte ptr [rcx - 0x73], al ; pop rsi ; adc dh, dh ; ret 0xf04
0x0000020000019793 : add byte ptr [rcx - 0x73], al ; push rcx ; add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000002000057bcf0 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x00000200001a1e8c : add byte ptr [rcx - 0x73], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x0000020000372666 : add byte ptr [rcx - 0x73], cl ; add qword ptr [r13 + 0x2b], rcx ; ret
0x00000200004d22e6 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 + 0x3b] ; ret
0x00000200000d08c0 : add byte ptr [rcx - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x3349
0x0000020000468849 : add byte ptr [rcx - 0x73], cl ; or byte ptr [r8 - 0x7d], cl ; ret 0xe808
0x00000200000a5dda : add byte ptr [rcx - 0x74b718bb], cl ; ret 0x2349
0x000002000011ea5c : add byte ptr [rcx - 0x74b768bb], cl ; ret
0x00000200003a96e0 : add byte ptr [rcx - 0x74b7e7b5], cl ; ret
0x000002000055eb74 : add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x8966
0x00000200003d2b5b : add byte ptr [rcx - 0x75], al ; adc dh, bh ; ret 0xfff
0x000002000060107e : add byte ptr [rcx - 0x75], al ; adc esi, esi ; ret 0x443f
0x0000020000569a7e : add byte ptr [rcx - 0x75], al ; add byte ptr [rax - 0x77], cl ; add edi, edi ; ret 0x8349
0x000002000019fa6e : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x00000200001b1617 : add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x0000020000162270 : add byte ptr [rcx - 0x75], al ; add dword ptr [rbp - 0xee8b40], eax ; ret 0x1139
0x00000200004cddbe : add byte ptr [rcx - 0x75], al ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4120
0x00000200004f070d : add byte ptr [rcx - 0x75], al ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000135883 : add byte ptr [rcx - 0x75], al ; enter -0x3ebf, -0x18 ; or al, 0x81 ; ret
0x00000200004abcf1 : add byte ptr [rcx - 0x75], al ; fdivr st(7), st(0) ; sal esi, cl ; ret
0x00000200000413f4 : add byte ptr [rcx - 0x75], al ; fimul dword ptr [rbx + 0xbe8d1c3] ; ret
0x00000200004c9857 : add byte ptr [rcx - 0x75], al ; fmul qword ptr [rax - 0x75] ; ret 0xff48
0x0000020000364ebe : add byte ptr [rcx - 0x75], al ; mov cl, 0xe8 ; or al, 0x23 ; ret 0xf80b
0x00000200004380a9 : add byte ptr [rcx - 0x75], al ; or byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200000563a0 : add byte ptr [rcx - 0x75], al ; push rax ; and al, 0x8b ; ret
0x0000020000071e42 : add byte ptr [rcx - 0x75], al ; push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x0000020000147ff4 : add byte ptr [rcx - 0x75], al ; push rdx ; add al, 0x83 ; ret 0x2307
0x0000020000004501 : add byte ptr [rcx - 0x75], al ; ret
0x000002000012e990 : add byte ptr [rcx - 0x75], al ; ret 0x234c
0x0000020000386104 : add byte ptr [rcx - 0x75], al ; ret 0x2b41
0x000002000000ed9e : add byte ptr [rcx - 0x75], al ; ret 0x48f0
0x000002000064c9dd : add byte ptr [rcx - 0x75], al ; ret 0x587
0x00000200003f8fad : add byte ptr [rcx - 0x75], al ; ret 0x8348
0x000002000058a1ce : add byte ptr [rcx - 0x75], al ; ret 0x8545
0x00000200000aa986 : add byte ptr [rcx - 0x75], al ; ret 0x8b41
0x000002000012fe82 : add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x00000200001724a6 : add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000050210b : add byte ptr [rcx - 0x75], al ; ret 0x8d48
0x000002000038ed67 : add byte ptr [rcx - 0x75], al ; ret 0x950f
0x000002000069bb88 : add byte ptr [rcx - 0x75], al ; ret 0xbb49
0x000002000069fdec : add byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000072f8d : add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x00000200005bc15e : add byte ptr [rcx - 0x75], al ; ret 0xc32b
0x000002000015edbb : add byte ptr [rcx - 0x75], al ; ret 0xcb8b
0x000002000012b54d : add byte ptr [rcx - 0x75], al ; ret 0xd285
0x000002000045e61c : add byte ptr [rcx - 0x75], al ; ret 0xe083
0x00000200003db123 : add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200000c49b6 : add byte ptr [rcx - 0x75], al ; ret 0xf48
0x000002000013ee06 : add byte ptr [rcx - 0x75], al ; ret 0xf741
0x0000020000124b51 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000002000017fadb : add byte ptr [rcx - 0x75], al ; ror byte ptr [rbp - 0x74bec4f4], cl ; ret 0xd523
0x00000200004f4daf : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000012bc9a : add byte ptr [rcx - 0x75], al ; salc ; call r11
0x00000200001aa878 : add byte ptr [rcx - 0x75], al ; xchg eax, esi ; mov eax, 0x83000000 ; ret 0x457f
0x000002000012c0d6 : add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200001b7693 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200000231de : add byte ptr [rcx - 0x75], cl ; adc dword ptr [rcx - 1], eax ; ret 0x8349
0x0000020000063340 : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x7874
0x00000200004ec3c8 : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200000bd03b : add byte ptr [rcx - 0x75], cl ; dec dword ptr [rbx - 0x9c3dbac] ; ret
0x00000200004492ce : add byte ptr [rcx - 0x75], cl ; enter -0x3618, -0x26 ; ret 0x4cff
0x0000020000446024 : add byte ptr [rcx - 0x75], cl ; enter 0x73e8, 0xd ; ret
0x000002000058e971 : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x000002000013593b : add byte ptr [rcx - 0x75], cl ; fmul qword ptr [rax + 0x33] ; ret 0x8b49
0x00000200003e3f7d : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000012a67
0x0000020000426e54 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000054297
0x0000020000426c94 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000547ef
0x0000020000447649 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000072e47
0x000002000048968c : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000b8ae7
0x000002000006a3f3 : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200004d945e : add byte ptr [rcx - 0x75], cl ; or dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x000002000003476d : add byte ptr [rcx - 0x75], cl ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000115c1d : add byte ptr [rcx - 0x75], cl ; push rbx ; cmp byte ptr [rax + 3], cl ; ret
0x000002000042d10e : add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x00000200000264d8 : add byte ptr [rcx - 0x75], cl ; ret
0x000002000011f5b3 : add byte ptr [rcx - 0x75], cl ; ret 0x3345
0x0000020000035559 : add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000000edd2 : add byte ptr [rcx - 0x75], cl ; ret 0x48f0
0x000002000004a109 : add byte ptr [rcx - 0x75], cl ; ret 0x4a8d
0x0000020000007ffe : add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x0000020000153b87 : add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200000671c2 : add byte ptr [rcx - 0x75], cl ; ret 0x84ff
0x00000200000a46ee : add byte ptr [rcx - 0x75], cl ; ret 0x850f
0x00000200006a060f : add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x00000200001ee579 : add byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x0000020000024f52 : add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200000049fc : add byte ptr [rcx - 0x75], cl ; ret 0x8d41
0x00000200001a15ff : add byte ptr [rcx - 0x75], cl ; ret 0x8d4c
0x000002000011e9f6 : add byte ptr [rcx - 0x75], cl ; ret 0xb841
0x000002000004561e : add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000009d57 : add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000010ae41 : add byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200000cf6d4 : add byte ptr [rcx - 0x75], cl ; ror byte ptr [rax - 9], 1 ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200004cedbf : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x00000200004ced4d : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe875
0x00000200004cece7 : add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe975
0x0000020000475356 : add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x0000020000658329 : add byte ptr [rcx - 0x75], cl ; sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200001339e7 : add byte ptr [rcx - 0x75], cl ; sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x00000200000e4ddb : add byte ptr [rcx - 0x75], cl ; xchg eax, ecx ; nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x0000020000368cbd : add byte ptr [rcx - 0x75], cl ; xlatb ; mov rcx, r14 ; call 0x200000d4f19
0x000002000018ae64 : add byte ptr [rcx - 0x76], al ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200004b7d7b : add byte ptr [rcx - 0x76], al ; mul byte ptr [rsi - 0x7d] ; ret 0xf02
0x0000020000158514 : add byte ptr [rcx - 0x76], al ; ret 0x41c3
0x000002000040efea : add byte ptr [rcx - 0x77], al ; or al, 0x8b ; ret
0x000002000002b3a5 : add byte ptr [rcx - 0x77], cl ; add bh, bh ; ret 0x8948
0x0000020000126452 : add byte ptr [rcx - 0x77], cl ; add ecx, dword ptr [rcx - 0x75] ; ret
0x0000020000064a05 : add byte ptr [rcx - 0x77], cl ; add edi, edi ; ret
0x00000200000c473f : add byte ptr [rcx - 0x77], cl ; and r14b, r14b ; ret 0xf02
0x00000200004147ef : add byte ptr [rcx - 0x77], cl ; or byte ptr [r9 - 0x75], cl ; ret
0x00000200000e8c21 : add byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x00000200006f76e1 : add byte ptr [rcx - 0x77], cl ; pop rbx ; or byte ptr [rbp + rcx*4 + 5], cl ; ret
0x000002000010960a : add byte ptr [rcx - 0x78], al ; or byte ptr [r15], cl ; mov dh, 0x85 ; ret
0x00000200004bafec : add byte ptr [rcx - 0x7b], al ; ret
0x000002000038df90 : add byte ptr [rcx - 0x7b], al ; ret 0x18e9
0x00000200004c6c5e : add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200004621c9 : add byte ptr [rcx - 0x7b], cl ; ret
0x00000200005fb395 : add byte ptr [rcx - 0x7c], al ; fbstp dword ptr [rdx + rcx - 0xa] ; ret
0x000002000017c445 : add byte ptr [rcx - 0x7c], al ; fnsave dword ptr [rcx + rdx - 0xa] ; ret
0x00000200000113b6 : add byte ptr [rcx - 0x7c], al ; ret
0x00000200001e6115 : add byte ptr [rcx - 0x7c], al ; ret 0x775
0x00000200000b4776 : add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x000002000014b5bb : add byte ptr [rcx - 0x7cb787bb], cl ; ret
0x0000020000496695 : add byte ptr [rcx - 0x7cbfdba4], cl ; ret
0x00000200000f4650 : add byte ptr [rcx - 0x7d], al ; add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8b48
0x00000200003b5b21 : add byte ptr [rcx - 0x7d], al ; and byte ptr [rax], al ; ret
0x000002000001ce9f : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200003bedbf : add byte ptr [rcx - 0x7d], al ; ret 0x4108
0x00000200004c5c5a : add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x000002000018b3c7 : add byte ptr [rcx - 0x7d], al ; ret 0x49e0
0x000002000058a31c : add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x00000200000f8e6e : add byte ptr [rcx - 0x7d], al ; ret 0xf618
0x0000020000168954 : add byte ptr [rcx - 0x7d], cl ; clc ; jl 0x200001688e4 ; ret
0x00000200005b7118 : add byte ptr [rcx - 0x7d], cl ; movsxd rsi, eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x000002000001d2a5 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000590f17 : add byte ptr [rcx - 0x7d], cl ; ret 0x2302
0x00000200006136d9 : add byte ptr [rcx - 0x7d], cl ; ret 0x302
0x0000020000182e8f : add byte ptr [rcx - 0x7d], cl ; ret 0x310
0x0000020000055280 : add byte ptr [rcx - 0x7d], cl ; ret 0x3b0c
0x000002000001e806 : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000200004dcf9b : add byte ptr [rcx - 0x7d], cl ; ret 0x4110
0x0000020000127b5a : add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200000e0d77 : add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000014ce54 : add byte ptr [rcx - 0x7d], cl ; ret 0x4818
0x00000200006c8a10 : add byte ptr [rcx - 0x7d], cl ; ret 0x4830
0x000002000006b7dc : add byte ptr [rcx - 0x7d], cl ; ret 0x4860
0x00000200000eac0c : add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x0000020000591162 : add byte ptr [rcx - 0x7d], cl ; ret 0x6602
0x0000020000441f3e : add byte ptr [rcx - 0x7d], cl ; ret 0xe9fd
0x0000020000061985 : add byte ptr [rcx - 0x7d], cl ; ret 0xff02
0x00000200000e1137 : add byte ptr [rcx - 0x7d], cl ; rol dword ptr [rcx + rax*2], -0x7d ; ret 0x48e0
0x00000200001ba738 : add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000010a7d3 : add byte ptr [rcx - 0x7e7527bb], cl ; ret
0x0000020000399afb : add byte ptr [rcx - 0x7ebeefb8], cl ; ret 0x1000
0x000002000046fa2b : add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0x00000200005e4064 : add byte ptr [rcx - 0x7f], al ; ret
0x0000020000162494 : add byte ptr [rcx - 0x7f], cl ; ret
0x0000020000520479 : add byte ptr [rcx - 0x7f], cl ; ret 0
0x00000200001bd5ee : add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x00000200000dd2db : add byte ptr [rcx - 0x99fdbbc], cl ; ret 0x8b0c
0x00000200000045e5 : add byte ptr [rcx - 0xa], al ; ret
0x0000020000061978 : add byte ptr [rcx - 0xa], al ; ret 0x7406
0x00000200000128f8 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000020000392095 : add byte ptr [rcx - 0xa], al ; ret 0x7503
0x0000020000061991 : add byte ptr [rcx - 0xa], al ; ret 0x7506
0x000002000002f0de : add byte ptr [rcx - 0xa], al ; ret 0x7508
0x0000020000023692 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200000bc235 : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000025aaa : add byte ptr [rcx - 0xa], al ; ret 0xf20
0x0000020000043c3f : add byte ptr [rcx - 0xa], al ; ret 0xf40
0x000002000020d30f : add byte ptr [rcx - 0xffff429], ch ; ret 0x20
0x000002000001c03c : add byte ptr [rcx - 1], al ; ret
0x00000200004d8315 : add byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000013e6a6 : add byte ptr [rcx - 1], al ; ret 0x8348
0x00000200000728c9 : add byte ptr [rcx - 1], al ; ret 0x8944
0x0000020000538496 : add byte ptr [rcx - 1], al ; ret 0x8948
0x000002000049776f : add byte ptr [rcx - 1], al ; ret 0x8b4a
0x0000020000121d31 : add byte ptr [rcx - 1], al ; ret 0x8d48
0x000002000001f3a1 : add byte ptr [rcx - 1], al ; ret 0x9ae9
0x0000020000155f1e : add byte ptr [rcx - 1], al ; ret 0x9ce9
0x000002000055bd9f : add byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200000d7315 : add byte ptr [rcx - 1], al ; ret 0xd348
0x000002000002b0bf : add byte ptr [rcx - 1], al ; ret 0xff49
0x0000020000636e16 : add byte ptr [rcx - 1], cl ; leave ; jne 0x20000636e05 ; ret
0x00000200004cbd83 : add byte ptr [rcx - 1], cl ; ret
0x000002000012fb74 : add byte ptr [rcx - 9], al ; ret
0x000002000038df6b : add byte ptr [rcx - 9], al ; rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000038df5f : add byte ptr [rcx - 9], al ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000038df53 : add byte ptr [rcx - 9], al ; rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x000002000056b1a0 : add byte ptr [rcx - 9], cl ; ret
0x0000020000660692 : add byte ptr [rcx - 9], cl ; ret 0xfff
0x000002000041a607 : add byte ptr [rcx], 0 ; add bh, dh ; ret
0x00000200003e64f4 : add byte ptr [rcx], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200003b31fe : add byte ptr [rcx], 0 ; add rsp, 0x38 ; ret
0x00000200002644db : add byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x4e
0x00000200002375f7 : add byte ptr [rcx], ah ; ret
0x00000200003deb55 : add byte ptr [rcx], al ; add al, ch ; ret
0x000002000019faa6 : add byte ptr [rcx], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000059f3ec : add byte ptr [rcx], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000038b674
0x000002000040e7da : add byte ptr [rcx], al ; add byte ptr [rax - 0x76], al ; idiv dword ptr [rbx] ; ret 0x470f
0x000002000040f306 : add byte ptr [rcx], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x000002000023aa03 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add ah, dl ; ret 0x60
0x000002000023aa13 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, cl ; ret
0x0000020000257cfb : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, al ; ret
0x0000020000255207 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, bl ; ret 0x58
0x000002000064454c : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000038f591 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001970d3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000266a83 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x000002000022c047 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x0000020000232ac3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret
0x000002000023f0c7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; and byte ptr [rdi], al ; ret
0x0000020000232ab3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret 0x3c
0x000002000044708a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000023cb0f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add dl, ch ; ret
0x00000200001c7086 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000f3306
0x00000200006551ae : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x200006551bf ; xor eax, eax ; ret
0x00000200005d5854 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005d57d7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x000002000046d672 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000001655f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000063a08 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001313bb : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000057b06d : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000007b502 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x00000200004cff88 : add byte ptr [rcx], al ; add byte ptr [rbp - 0x75], al ; ret 0x674
0x000002000064e94c : add byte ptr [rcx], al ; add byte ptr [rbx], bh ; ret 0xa73
0x000002000019ef7b : add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200004bafea : add byte ptr [rcx], al ; add byte ptr [rcx - 0x7b], al ; ret
0x00000200006136d7 : add byte ptr [rcx], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x302
0x0000020000071d1f : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; test al, ch ; ret 0x18
0x0000020000071ce7 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; test ebp, edx ; ret 0x18
0x000002000011cdc5 : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001b828 : add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x00000200001439e1 : add byte ptr [rcx], al ; call 0x200000a4e88
0x0000020000617fde : add byte ptr [rcx], al ; fmul dword ptr [rbx] ; ret 0x8941
0x00000200000bf25e : add byte ptr [rcx], al ; je 0x200000bf26b ; xor al, al ; ret
0x000002000038654b : add byte ptr [rcx], al ; je 0x2000038655c ; add rsp, 0x28 ; ret
0x00000200005d8418 : add byte ptr [rcx], al ; mov qword ptr [rax + 0x18], rax ; call 0x200000b46e8
0x00000200000ee256 : add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x200000ee223
0x000002000003ef2d : add byte ptr [rcx], al ; ret
0x000002000055170b : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000147b78 : add byte ptr [rcx], bh ; adc byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x00000200001c2b5c : add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x000002000064c8e0 : add byte ptr [rcx], bh ; cmp byte ptr [rbp + rcx - 1], dh ; ret
0x00000200005bf070 : add byte ptr [rcx], bh ; sbb dword ptr [rdi], ecx ; ret 0xd233
0x0000020000082d17 : add byte ptr [rcx], ch ; jne 0x20000082cb1 ; ret
0x0000020000232abf : add byte ptr [rcx], cl ; ret
0x00000200006e79be : add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000023f0cb : add byte ptr [rcx], dh ; and byte ptr [rdi], al ; ret
0x000002000020e55f : add byte ptr [rcx], dl ; ret 0xf00d
0x000002000013c1e6 : add byte ptr [rdi + 0x2d], bh ; mov eax, 0xc0000005 ; ret
0x00000200000841b7 : add byte ptr [rdi + 0x42], al ; ret 0xb1
0x0000020000430fe6 : add byte ptr [rdi + 0x42ff], bpl ; ret
0x0000020000430fe7 : add byte ptr [rdi + 0x42ff], ch ; ret
0x000002000013156e : add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000eb817 : add byte ptr [rdi + 0x5b], bl ; ret
0x00000200000f2bfb : add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000003a0ec : add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000045ef1c : add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001347c6 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200002315ff : add byte ptr [rdi + 0x62003bc1], ah ; ret 0x3b
0x00000200004223f1 : add byte ptr [rdi + 2], dh ; ret
0x000002000037f331 : add byte ptr [rdi + 4], dh ; mov al, r8b ; ret
0x00000200003e6e2e : add byte ptr [rdi + rbx*8 - 0x48], dh ; and al, byte ptr [rax] ; add al, al ; ret
0x000002000014cef0 : add byte ptr [rdi + rcx + 0x20], al ; mov byte ptr [rbp + 0xf], 0x22 ; ret 0xff0
0x00000200000154f4 : add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000191c81 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b8
0x00000200000c81d4 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000023fd2 : add byte ptr [rdi + rcx + 0x22], al ; ret
0x000002000018335b : add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x0000020000068fb3 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x00000200001fb6e7 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4e80
0x0000020000053952 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x58b
0x000002000001b372 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f7
0x00000200000b1501 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x60e9
0x00000200000a8d86 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200000cdfe8 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8948
0x00000200000f467e : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b4c
0x000002000019316a : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8d48
0x00000200000c279d : add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x000002000001bfb2 : add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret
0x00000200000407b3 : add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; ret 0x3168
0x000002000064ace2 : add byte ptr [rdi + rcx + 0x22], al ; sal bh, 5 ; xchg eax, ebx ; ret
0x000002000057773f : add byte ptr [rdi + rcx + 0x46], cl ; loopne 0x200005776d6 ; ret
0x0000020000636f21 : add byte ptr [rdi + rcx + 0x47], al ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x0000020000136fc1 : add byte ptr [rdi + rcx - 0x44], al ; ret
0x00000200000abb7a : add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x0000020000136fc0 : add byte ptr [rdi + rcx - 0x44], r8b ; ret
0x00000200001a222f : add byte ptr [rdi + rcx - 0x49], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000011885b : add byte ptr [rdi + rcx - 0x49], al ; pop rbp ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x0000020000597bff : add byte ptr [rdi + rcx - 0x49], al ; pop rsi ; add al, byte ptr [rcx - 0xa] ; ret
0x0000020000139ec7 : add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200003d5073 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d49
0x000002000052aa87 : add byte ptr [rdi + rcx - 0x49], al ; ret 0xcd8b
0x000002000060f7b3 : add byte ptr [rdi + rcx - 0x49], al ; ret 0xf45
0x00000200001f4add : add byte ptr [rdi + rcx - 0x49], al ; ror dword ptr [rax - 0x75], -0x31 ; call r10
0x0000020000386169 : add byte ptr [rdi + rcx - 0x49], al ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x00000200001a2212 : add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000020a74 : add byte ptr [rdi + rcx - 0x4a], al ; add sil, r14b ; ret 0xf04
0x00000200000a5347 : add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000040541e : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b4c
0x00000200004cf524 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8d44
0x000002000057d46f : add byte ptr [rdi + rcx - 0x4a], al ; ret 0xb60f
0x0000020000654288 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0xc4b9
0x00000200001a07af : add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x00000200001a0ed4 : add byte ptr [rdi + rcx - 0x4a], al ; xor ecx, dword ptr [rax - 1] ; ret
0x0000020000084397 : add byte ptr [rdi + rdi*2 + 0xcf63], dh ; add byte ptr [rax], al ; ret
0x0000020000081367 : add byte ptr [rdi + rdi*2], dl ; ret
0x0000020000083f8f : add byte ptr [rdi - 0x20], dl ; ret
0x0000020000083247 : add byte ptr [rdi - 0x38], ch ; and bh, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x0000020000151e2f : add byte ptr [rdi - 0x75], dl ; ret 0xbf48
0x00000200006405af : add byte ptr [rdi - 0x77], al ; add al, 0x8a ; mov eax, r8d ; ret
0x000002000022ff1b : add byte ptr [rdi], ah ; ret 0x3a
0x00000200000c310e : add byte ptr [rdi], al ; add byte ptr [rax], al ; jne 0x200000c3138 ; ret
0x00000200000587a0 : add byte ptr [rdi], al ; sub bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x00000200000af43e : add byte ptr [rdi], cl ; add al, dl ; ret
0x0000020000141def : add byte ptr [rdi], cl ; and al, bl ; ret
0x000002000006cb5f : add byte ptr [rdi], cl ; mov bh, 0x41 ; ret
0x0000020000466e30 : add byte ptr [rdi], cl ; mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x000002000046704a : add byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200000bffe6 : add byte ptr [rdi], cl ; mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x00000200005b7f5a : add byte ptr [rdi], cl ; mov bh, 0x47 ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200003fa600 : add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000052312e : add byte ptr [rdi], cl ; mov bh, 0x4d ; sub al, ch ; cmp al, 0x9b ; ret 0x89ff
0x0000020000616077 : add byte ptr [rdi], cl ; mov bh, 0x50 ; add dh, dh ; ret 0xf04
0x00000200000b7bc2 : add byte ptr [rdi], cl ; mov bh, 0xc ; ret 0x8b44
0x0000020000141d70 : add byte ptr [rdi], cl ; mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000154560 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 1 ; ret
0x0000020000154584 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 2 ; ret
0x000002000010dad0 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 4 ; ret
0x000002000013c8f4 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 8 ; ret
0x000002000058f74a : add byte ptr [rdi], cl ; mov bh, 4 ; ret
0x00000200004c127d : add byte ptr [rdi], cl ; mov bh, cl ; ret
0x000002000000edf6 : add byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x000002000003c58a : add byte ptr [rdi], cl ; mov dh, 0x43 ; sbb al, cl ; call 0x20075c600a4
0x0000020000410af7 : add byte ptr [rdi], cl ; mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x0000020000036ec2 : add byte ptr [rdi], cl ; mov dh, 0x53 ; sbb dh, dh ; ret 0xf20
0x00000200000bdeb8 : add byte ptr [rdi], cl ; mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200000254fd : add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x00000200000a622f : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x000002000002b19a : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200000a3fa0 : add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x0000020000067a0c : add byte ptr [rdi], cl ; mov dh, 0xab ; ret
0x00000200000a81f2 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003673e9 : add byte ptr [rdi], cl ; mov dh, 0xd ; ret
0x00000200000419f2 : add byte ptr [rdi], cl ; mov dh, 4 ; ret 0x1a8
0x000002000063f03a : add byte ptr [rdi], cl ; mov edx, 0x37211e0 ; mov al, 1 ; ret
0x0000020000494ee5 : add byte ptr [rdi], cl ; mov edx, 0x37309e0 ; mov al, 1 ; ret
0x00000200004319fd : add byte ptr [rdi], cl ; mov edx, 0x820f15e2 ; ret
0x00000200001829fc : add byte ptr [rdi], cl ; mov edx, 0x830f0fe1 ; ret
0x00000200006c5a94 : add byte ptr [rdi], cl ; mov edx, 0x8b073071 ; ret
0x000002000042744d : add byte ptr [rdi], cl ; mov edx, 0xe8107471 ; adc al, 0x85 ; ret
0x00000200001aec0d : add byte ptr [rdi], cl ; mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x57e
0x000002000005afee : add byte ptr [rdi], cl ; mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x8d0f
0x00000200002128cb : add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x000002000025a3df : add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x000002000014b9fc : add byte ptr [rdi], cl ; or dword ptr [rip + 0x480009ad], 0xfffffff7 ; ret 0xfff
0x0000020000240b17 : add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x00000200002490b7 : add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x00000200002087d3 : add byte ptr [rdi], cl ; push rsp ; or byte ptr [rax], al ; sysenter
0x00000200002179df : add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x000002000055851d : add byte ptr [rdi], cl ; ret
0x0000020000379a88 : add byte ptr [rdi], cl ; ret 0x4389
0x000002000060c406 : add byte ptr [rdi], cl ; ret 0x4488
0x000002000003b08c : add byte ptr [rdi], cl ; ret 0x4489
0x00000200000cfb29 : add byte ptr [rdi], cl ; ret 0x4589
0x0000020000125b6d : add byte ptr [rdi], cl ; ret 0x789
0x00000200000ac3bf : add byte ptr [rdi], cl ; ret 0x8445
0x000002000040b085 : add byte ptr [rdi], cl ; ret 0x8488
0x00000200004f9764 : add byte ptr [rdi], cl ; ret 0x8a44
0x000002000013e39b : add byte ptr [rdi], cl ; ret 0x8d48
0x0000020000432c8e : add byte ptr [rdi], cl ; ret 0xba0f
0x00000200000fefad : add byte ptr [rdi], cl ; ret 0xc103
0x000002000055abe8 : add byte ptr [rdi], cl ; ret 0xc141
0x00000200000ae134 : add byte ptr [rdi], cl ; ret 0xd88a
0x00000200003a285f : add byte ptr [rdi], cl ; ror byte ptr [rax - 0x57], 5 ; jmp rax
0x00000200000da65a : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200001d6a34 : add byte ptr [rdi], cl ; test ah, bl ; ret
0x00000200001e60e6 : add byte ptr [rdi], cl ; test ah, cl ; js 0x200001e60dc ; inc dword ptr [rbp - 0x7c] ; ret
0x0000020000071d21 : add byte ptr [rdi], cl ; test al, ch ; ret 0x18
0x000002000003bc9c : add byte ptr [rdi], cl ; test bl, bh ; ret 0xfffe
0x0000020000027e72 : add byte ptr [rdi], cl ; test bl, bl ; outsb dx, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000064a48 : add byte ptr [rdi], cl ; test byte ptr [rax + rax + 0x63480000], cl ; ret
0x0000020000624b47 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x14002ab7], al ; ret
0x00000200001d61b0 : add byte ptr [rdi], cl ; test byte ptr [rbx], bl ; test ebp, ebp ; inc dword ptr [rcx - 0x75] ; ret 0x41f0
0x00000200001d6a68 : add byte ptr [rdi], cl ; test byte ptr [rbx], dh ; ret
0x0000020000069d59 : add byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x44800000], cl ; ret
0x000002000010cafd : add byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], al ; ret 0xf08
0x0000020000438c58 : add byte ptr [rdi], cl ; test byte ptr [rsi - 0x16000002], bh ; ret
0x00000200001e948f : add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; ret 0xffee
0x0000020000131c18 : add byte ptr [rdi], cl ; test cl, ch ; ret
0x00000200004fa0d1 : add byte ptr [rdi], cl ; test dh, dh ; push 0xf ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000003f02b : add byte ptr [rdi], cl ; test dh, dh ; xchg eax, ecx ; sbb dword ptr [rax], eax ; xor al, al ; ret
0x000002000054c61c : add byte ptr [rdi], cl ; test dl, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000361959 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x13], ecx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200005441e2 : add byte ptr [rdi], cl ; test dword ptr [rax], ebp ; add al, 0 ; add al, ch ; ret 0xadfd
0x00000200004b6ebd : add byte ptr [rdi], cl ; test dword ptr [rax], edx ; jbe 0x200004b6edf ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200001d15e1 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x17001cde], edx ; ret
0x0000020000397ba2 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x74ffd74f], edi ; ret
0x00000200004ef5d5 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x74ffec12], eax ; ret
0x00000200001fbee2 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x17001f81], edx ; ret 0xe280
0x00000200001183a6 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x44], edi ; or eax, dword ptr [rax] ; xor al, al ; ret
0x000002000005e771 : add byte ptr [rdi], cl ; test dword ptr [rcx + rbx + 0x17], ecx ; add al, ch ; ret
0x00000200003c3d30 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x74ffdc22], eax ; ret 0xf883
0x00000200004f6fdd : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x74ffef04], ebx ; ret
0x000002000003fc41 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x74fff22d], eax ; ret
0x0000020000143b8c : add byte ptr [rdi], cl ; test dword ptr [rcx], ebx ; ret 8
0x0000020000471d21 : add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret
0x00000200005d7d5c : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x17001ff7], ecx ; ret 0xffa4
0x00000200006191e1 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x1700225f], ebp ; ret
0x00000200001491cd : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x56], esi ; std ; dec dword ptr [rax - 0x7d] ; ret 0xb904
0x000002000051d37d : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x74ffefa7], ecx ; ret
0x00000200000c12b7 : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x9000007], ebp ; ret
0x00000200003e570f : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x74ffdc88], ebx ; ret
0x0000020000396a1f : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x75000000], ebx ; ret
0x000002000038ee9f : add byte ptr [rdi], cl ; test dword ptr [rdx - 0xffffff], eax ; ret 0xd7eb
0x000002000038520e : add byte ptr [rdi], cl ; test dword ptr [rdx], edx ; add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x0000020000477ba7 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x1700079a], eax ; std ; ret
0x000002000007b349 : add byte ptr [rdi], cl ; test dword ptr [rsi + 2], edx ; add byte ptr [rax], al ; call r10
0x00000200004818cb : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x74ffe8a9], ebx ; ret
0x00000200003964f0 : add byte ptr [rdi], cl ; test dword ptr [rsi - 6], ebx ; sub byte ptr [rax], al ; ret
0x00000200000edcdf : add byte ptr [rdi], cl ; test dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200004274b1 : add byte ptr [rdi], cl ; test eax, edx ; int 9
0x0000020000071ce9 : add byte ptr [rdi], cl ; test ebp, edx ; ret 0x18
0x0000020000115106 : add byte ptr [rdi], cl ; test ebx, edi ; add r8, qword ptr [rax] ; ret
0x00000200003a4460 : add byte ptr [rdi], cl ; test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003bcc44 : add byte ptr [rdi], cl ; test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000619340 : add byte ptr [rdi], cl ; test ecx, edi ; ret 0xffdd
0x000002000039535c : add byte ptr [rdi], cl ; test edx, edi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000002000006ed42 : add byte ptr [rdi], cl ; test edx, edx ; or byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000200003b7fe1 : add byte ptr [rdi], cl ; test esp, ebx ; inc dword ptr [rsi] ; add al, ch ; ret
0x00000200005f9182 : add byte ptr [rdi], cl ; test esp, edx ; ret
0x00000200003c030a : add byte ptr [rdi], cl ; xchg byte ptr [rax - 0x4ad], bl ; ret
0x00000200001f6a05 : add byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x9001b99], esi ; ret 0xf03
0x0000020000024f8f : add byte ptr [rdi], cl ; xchg dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000063393c : add byte ptr [rdi], cl ; xchg dword ptr [rsi], ebp ; in eax, dx ; call rcx
0x00000200001f52c6 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000055c6bc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000020000378505 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200006185d7 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xca83
0x000002000000e76e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200000a3ab5 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0x9488
0x000002000013f9e5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000487685 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x000002000013f9f4 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x00000200000f4654 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b48
0x000002000015833a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d48
0x00000200001b992e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000025268 : add byte ptr [rdi], cl ; xchg ebx, ecx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000007c79a : add byte ptr [rdi], cl ; xor al, byte ptr [rbx + 0x300ffce0] ; ret 0
0x0000020000151e1a : add byte ptr [rdi], cl ; xor cl, byte ptr [rax - 0x3f] ; loop 0x20000151e4a ; or rax, rdx ; pop rdi ; ret
0x000002000058f181 : add byte ptr [rdi], cl ; xor dword ptr [rax - 1], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000dd693 : add byte ptr [rdi], dh ; ret 0xd
0x00000200000b6327 : add byte ptr [rdi], dl ; add byte ptr [rax - 0x75], cl ; ret 0x8148
0x00000200000b6238 : add byte ptr [rdi], dl ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200000d1dd8 : add byte ptr [rdi], dl ; add byte ptr [rax - 1], cl ; ret
0x000002000006af6d : add byte ptr [rdi], dl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006e7175 : add byte ptr [rdx + 0x1c2085], cl ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000129d9e : add byte ptr [rdx + 0x22d2650d], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x000002000057a60e : add byte ptr [rdx + 0x24548801], dh ; cmp byte ptr [rcx - 0x75], al ; ret
0x000002000017a185 : add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x000002000001a9d9 : add byte ptr [rdx + 0x48322444], cl ; add esp, 0x28 ; ret
0x00000200004b0704 : add byte ptr [rdx + 0x538a3043], cl ; cmp byte ptr [rdx], bh ; ret 0x820f
0x00000200000d104d : add byte ptr [rdx + 0x6215ff01], dh ; ret
0x000002000023108b : add byte ptr [rdx + 0x65003b91], dl ; xchg eax, edx ; cmp eax, dword ptr [rax] ; ret
0x0000020000482850 : add byte ptr [rdx + 0x7028e801], dh ; ret
0x0000020000482766 : add byte ptr [rdx + 0x7112e801], dh ; ret
0x00000200006a1076 : add byte ptr [rdx + 1], bh ; jmp r8
0x00000200000a8191 : add byte ptr [rdx + 1], dh ; ret
0x000002000006bc3a : add byte ptr [rdx + 3], dh ; mov al, 1 ; ret
0x00000200006551b1 : add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x0000020000162181 : add byte ptr [rdx + 6], dh ; mov eax, 0xc000000d ; ret
0x0000020000410c8a : add byte ptr [rdx + 7], dh ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000365397 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000002000022ff27 : add byte ptr [rdx + rax*8 + 0x3a], bh ; add byte ptr [rsi], dl ; ret
0x0000020000261427 : add byte ptr [rdx + rax*8 + 0x41], bh ; add byte ptr [rax], dl ; ret
0x000002000025cc7b : add byte ptr [rdx + rax*8 + 0x50], ah ; add byte ptr [rsi], dh ; ret
0x0000020000647414 : add byte ptr [rdx + rcx + 0x48], dh ; mov ecx, edi ; call 0x2000017363c
0x0000020000261fcf : add byte ptr [rdx + rcx + 0x52], cl ; add ah, dh ; ret
0x00000200000bdbc8 : add byte ptr [rdx + rcx - 0x75], dh ; or byte ptr [rbx], dil ; ret 0xf41
0x00000200000287fb : add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000020cc78 : add byte ptr [rdx + rcx], ah ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x0000020000055eed : add byte ptr [rdx + rdx*8 + 0x48a0474], al ; ret
0x0000020000034c82 : add byte ptr [rdx + rdx*8 - 0x49f0eb8c], al ; ret 0x2b41
0x000002000005db85 : add byte ptr [rdx + rdx*8 - 0x74b7b087], al ; ret
0x0000020000171b95 : add byte ptr [rdx - 0x18], bh ; ret
0x00000200001630f6 : add byte ptr [rdx - 0x1b], dh ; xor eax, eax ; ret
0x0000020000141979 : add byte ptr [rdx - 0x1e], dh ; ret
0x0000020000140f4f : add byte ptr [rdx - 0x1f], dh ; mov eax, dword ptr [rip + 0x2160b4] ; ret
0x000002000020d41b : add byte ptr [rdx - 0x21], dl ; or eax, dword ptr [rax] ; cld ; ret
0x00000200002551ff : add byte ptr [rdx - 0x28ffa73e], bh ; ret 0x58
0x000002000048ab53 : add byte ptr [rdx - 0x3074b62d], cl ; call 0x200000b90e9
0x000002000048aaf6 : add byte ptr [rdx - 0x3074b62d], cl ; call 0x200000b9889
0x000002000045ffc2 : add byte ptr [rdx - 0x3074b6ff], dh ; call rbx
0x00000200004789bd : add byte ptr [rdx - 0x3474b7ff], dh ; call 0x20000054c18
0x00000200003cc4b0 : add byte ptr [rdx - 0x3474b7ff], dh ; call 0x20000378758
0x0000020000009c10 : add byte ptr [rdx - 0x38], dh ; add rsp, 0x38 ; ret
0x000002000013b80c : add byte ptr [rdx - 0x3b7cb730], cl ; and byte ptr [rbx - 0x17], bl ; ret
0x00000200006c3502 : add byte ptr [rdx - 0x49], dh ; ret
0x0000020000420160 : add byte ptr [rdx - 0x4f771735], cl ; ret
0x000002000041f7ce : add byte ptr [rdx - 0x673d17ef], dh ; ret
0x000002000002619d : add byte ptr [rdx - 0x77], al ; push rsp ; ret
0x00000200003ec6ea : add byte ptr [rdx], 0 ; add bh, bh ; ret
0x0000020000058f03 : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000058f16 ; ret
0x00000200006c016b : add byte ptr [rdx], 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000054d1fe : add byte ptr [rdx], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000055954 : add byte ptr [rdx], 0 ; add dh, dh ; ret
0x000002000064305e : add byte ptr [rdx], 0 ; ret
0x0000020000262167 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, al ; ret
0x0000020000223a07 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, al ; ret 2
0x0000020000230e13 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, dh ; ret 0x3f
0x000002000020ed1f : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret
0x000002000025f8db : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret 0x40
0x000002000022871b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, al ; ret
0x0000020000225c0b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bh ; call qword ptr [rax]
0x000002000025fd1f : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bl ; ret 0x4d
0x0000020000228393 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bl ; ret 5
0x0000020000223b47 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, dh ; ret
0x000002000026dcfb : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, dh ; ret 0x6c
0x0000020000223c1f : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, dl ; ret
0x0000020000226883 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, dl ; ret 0x11
0x00000200002282d3 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x11], dh ; adc dword ptr [rax], eax ; ret
0x0000020000262fd7 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000025e9d3 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x40
0x00000200002270cf : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 4
0x000002000020fd97 : add byte ptr [rdx], ah ; add byte ptr [rdx], al ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; ret 0xd90
0x000002000023b463 : add byte ptr [rdx], ah ; or byte ptr [rax + rax], al ; or eax, dword ptr [rsi] ; ret
0x000002000024613f : add byte ptr [rdx], ah ; ret 0xf01b
0x0000020000531fd2 : add byte ptr [rdx], al ; add al, ch ; ret 0xc04d
0x0000020000417372 : add byte ptr [rdx], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000019fce5 : add byte ptr [rdx], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000d1f2b : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x44f6
0x00000200003652a0 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200002375f3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rcx], ah ; ret
0x000002000022ff17 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rdi], ah ; ret 0x3a
0x000002000056af64 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x200000771c6
0x000002000064e0e9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000270047
0x00000200007033a7 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call r10
0x000002000070377c : add byte ptr [rdx], al ; add byte ptr [rax], al ; call r9
0x00000200001630f3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jb 0x200001630e6 ; xor eax, eax ; ret
0x000002000058b04e : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200001babc5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000149ec4 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000555a43 : add byte ptr [rdx], al ; add byte ptr [rbp - 0xc78b40], al ; ret
0x0000020000520477 : add byte ptr [rdx], al ; add byte ptr [rcx - 0x7f], cl ; ret 0
0x000002000020fd99 : add byte ptr [rdx], al ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; ret 0xd90
0x0000020000576d49 : add byte ptr [rdx], al ; add eax, dword ptr [rip - 0x2d81bd] ; ret
0x00000200003fee41 : add byte ptr [rdx], al ; add ebx, ebp ; ret
0x00000200000c7ab8 : add byte ptr [rdx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003643c7 : add byte ptr [rdx], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000025199b : add byte ptr [rdx], al ; and eax, 0x60c000d ; ret 0x2546
0x0000020000266c73 : add byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x00000200002087cf : add byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; push rsp ; or byte ptr [rax], al ; sysenter
0x00000200002501c7 : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x00000200002090a7 : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; mov byte ptr [rsi], dl ; sysenter
0x000002000024ae27 : add byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; or al, byte ptr [rsi] ; sysenter
0x000002000037ac1a : add byte ptr [rdx], al ; jne 0x2000037ac1b ; mov eax, 1 ; ret
0x00000200002088ab : add byte ptr [rdx], al ; or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x000002000020c83f : add byte ptr [rdx], al ; or byte ptr [rbx], al ; add byte ptr [rax], cl ; ret 0xc004
0x000002000019c104 : add byte ptr [rdx], al ; ret
0x0000020000168ee5 : add byte ptr [rdx], al ; setne al ; ret
0x0000020000039bb4 : add byte ptr [rdx], bh ; ret
0x00000200006605d6 : add byte ptr [rdx], bh ; ret 0x3a76
0x00000200003e5dd6 : add byte ptr [rdx], bh ; ret 0x840f
0x00000200001a42c9 : add byte ptr [rdx], bh ; ret 0x973
0x0000020000474f7d : add byte ptr [rdx], bh ; ret 0xe175
0x000002000055b532 : add byte ptr [rdx], bl ; add al, ch ; ret 0xf2a3
0x000002000009265f : add byte ptr [rdx], bl ; add byte ptr [rax], al ; adc byte ptr [rdi], 1 ; ret
0x000002000025a043 : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; and al, 6 ; sysenter
0x0000020000264d57 : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; or al, byte ptr [rsi] ; sysenter
0x000002000025a01b : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0db : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f4b : add byte ptr [rdx], bl ; and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; xor byte ptr [rsi], al ; sysenter
0x000002000023f8cf : add byte ptr [rdx], bl ; sbb eax, 0x6040008 ; or eax, dword ptr [rsi] ; sysenter
0x00000200002088af : add byte ptr [rdx], cl ; ret 0x7006
0x0000020000083d47 : add byte ptr [rdx], cl ; ret 0xf854
0x00000200003e878c : add byte ptr [rdx], dh ; ret 0x2240
0x00000200006ca5b8 : add byte ptr [rdx], dl ; add bh, al ; ret
0x000002000008127f : add byte ptr [rdx], dl ; ret
0x00000200004a594b : add byte ptr [rdx], dl ; xor eax, eax ; ret
0x0000020000036d77 : add byte ptr [rip + 0x10001], ah ; ret
0x00000200002581eb : add byte ptr [rip + 0x11061506], cl ; ret 0xf00d
0x0000020000239707 : add byte ptr [rip + 0x11068506], cl ; ret 0xf00d
0x000002000022e7ff : add byte ptr [rip + 0x1136e206], cl ; ret 0xf00d
0x000002000024ec5b : add byte ptr [rip + 0x14061306], cl ; ret 0xf00d
0x000002000024da4f : add byte ptr [rip + 0x14061c06], cl ; ret 0xf00d
0x000002000023184b : add byte ptr [rip + 0x14061e06], cl ; ret 0xf00d
0x00000200002539bf : add byte ptr [rip + 0x14062206], cl ; ret 0xf010
0x00000200002476b3 : add byte ptr [rip + 0x14063106], cl ; ret 0xf00d
0x00000200002404bf : add byte ptr [rip + 0x14063206], cl ; ret 0xf00d
0x000002000026ba63 : add byte ptr [rip + 0x14063e06], cl ; ret 0xf00d
0x000002000021b077 : add byte ptr [rip + 0x15061506], cl ; ret 0xf011
0x0000020000231f2f : add byte ptr [rip + 0x15268406], cl ; ret 0xf011
0x000002000020504f : add byte ptr [rip + 0x15665006], cl ; ret 0xf011
0x000002000024d98b : add byte ptr [rip + 0x17064d06], cl ; ret 0xf010
0x0000020000250fef : add byte ptr [rip + 0x18061b06], cl ; ret 0xf011
0x000002000022eb57 : add byte ptr [rip + 0x18063406], cl ; ret 0xf011
0x000002000022d303 : add byte ptr [rip + 0x1806de06], cl ; ret 0xf011
0x0000020000213e4b : add byte ptr [rip + 0x1a062d06], cl ; ret 0xf016
0x0000020000245ce7 : add byte ptr [rip + 0x1b06b606], cl ; ret 0xf017
0x00000200000dd64b : add byte ptr [rip + 0x1c000dc2], cl ; ret
0x0000020000259923 : add byte ptr [rip + 0x1d061306], cl ; ret 0xf016
0x000002000024a10b : add byte ptr [rip + 0x1d06d406], cl ; ret 0xf016
0x000002000024344b : add byte ptr [rip + 0x1e06b606], cl ; ret 0xf01a
0x000002000025531b : add byte ptr [rip + 0x1f46a006], cl ; ret 0xf01b
0x0000020000233b47 : add byte ptr [rip + 0x2106e406], cl ; ret 0xf01a
0x00000200002367e3 : add byte ptr [rip + 0x21168306], cl ; ret 0xf01a
0x000002000021e31b : add byte ptr [rip + 0x22061306], cl ; ret 0xf01b
0x0000020000220593 : add byte ptr [rip + 0x22061606], cl ; ret 0xf01b
0x000002000024bf73 : add byte ptr [rip + 0x22165a06], cl ; ret 0xf01e
0x0000020000205dcf : add byte ptr [rip + 0x22265f06], cl ; ret 0xf01b
0x0000020000265f23 : add byte ptr [rip + 0x26061506], cl ; ret 0xf01f
0x000002000021891b : add byte ptr [rip + 0x26064b06], cl ; ret 0xf01f
0x00000200003b8e1e : add byte ptr [rip + 0x3b480131], ch ; ret
0x00000200000dd687 : add byte ptr [rip + 0x4a000dc2], cl ; ret
0x000002000024eb5f : add byte ptr [rip + 0xc060c06], al ; ret 0x7005
0x00000200000dd663 : add byte ptr [rip + 0xd000dc2], cl ; ret 0xd
0x00000200000dd677 : add byte ptr [rip - 0x16fff23e], cl ; ret
0x00000200000dd667 : add byte ptr [rip - 0x39fff23e], cl ; ret
0x00000200003a7a3c : add byte ptr [rip - 0x74b7002f], ah ; ret
0x00000200001aefc3 : add byte ptr [rip - 0x7cb80000], al ; retf ; call rbx
0x00000200003d5070 : add byte ptr [rsi + 0x20], dl ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d49
0x00000200003c2c76 : add byte ptr [rsi + 0x23], ah ; ret 0x366
0x000002000063398f : add byte ptr [rsi + 0x23], ah ; ret 0x8d4c
0x0000020000501fc9 : add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x000002000070a5b0 : add byte ptr [rsi + 0x23], ah ; shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x000002000019c013 : add byte ptr [rsi + 0x2b], ah ; ret 0x8366
0x00000200005f96ee : add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x00000200006f4bc5 : add byte ptr [rsi + 0x39], ah ; push rax ; add cl, byte ptr [rdi] ; test ecx, eax ; ret
0x0000020000188431 : add byte ptr [rsi + 0x3b], ah ; ret
0x00000200004a7fea : add byte ptr [rsi + 0x3b], ah ; ret 0x1773
0x000002000057352f : add byte ptr [rsi + 0x3b], ah ; ret 0x1d77
0x00000200005d4b2a : add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x0000020000573549 : add byte ptr [rsi + 0x3b], ah ; ret 0x377
0x0000020000054b97 : add byte ptr [rsi + 0x3b], ah ; ret 0x3c74
0x00000200003d470b : add byte ptr [rsi + 0x3b], ah ; ret 0x4075
0x00000200000bdbf9 : add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x00000200005d4b46 : add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x000002000058e49b : add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x000002000004aedc : add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000054ba1 : add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000bdc28 : add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200003d4701 : add byte ptr [rsi + 0x3b], ah ; ret 0xa74
0x000002000062c9de : add byte ptr [rsi + 0x3b], ah ; retf -0x7af1 ; jmp qword ptr [rsi]
0x0000020000499b35 : add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x79 ; hlt ; ret
0x000002000015546f : add byte ptr [rsi + 0x3b], ah ; sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x00000200003f2527 : add byte ptr [rsi + 0x3f], 0 ; add rax, rcx ; jmp rax
0x000002000003fe4b : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000ead5f : add byte ptr [rsi + 0x44], ah ; or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x00000200002163ef : add byte ptr [rsi + 0x460012c0], cl ; ret 0x12
0x0000020000081e4f : add byte ptr [rsi + 0x67], bl ; jbe 0x20000081e12 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000006f352 : add byte ptr [rsi + 0xb], ah ; ret 0x4166
0x000002000017416c : add byte ptr [rsi + 1], ah ; add eax, 0x110e80 ; ret
0x0000020000177e29 : add byte ptr [rsi + 1], ah ; ret
0x00000200005ff29e : add byte ptr [rsi + 3], ah ; ret
0x00000200004e02a5 : add byte ptr [rsi + 3], ah ; ret 0x8966
0x0000020000514e5a : add byte ptr [rsi + 3], ah ; ret 0xb70f
0x000002000013454c : add byte ptr [rsi + 3], bh ; mov al, 1 ; ret
0x000002000064fab3 : add byte ptr [rsi + 7], dh ; mov dword ptr [rip + 0x1b5f4], eax ; ret
0x00000200003dd8f0 : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x0000020000006c5a : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x50 ; pop rbx ; ret
0x00000200001018d4 : add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x0000020000021f38 : add byte ptr [rsi + rax - 0x48], bh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000064fa7a : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000569a18 : add byte ptr [rsi + rax - 0x48], dh ; add eax, dword ptr [rbx] ; add al, al ; ret
0x000002000022e533 : add byte ptr [rsi + rax], al ; adc al, byte ptr [rsi] ; sysenter
0x000002000022c63b : add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x000002000025a047 : add byte ptr [rsi + rax], al ; and al, 6 ; sysenter
0x00000200002090ab : add byte ptr [rsi + rax], al ; mov byte ptr [rsi], dl ; sysenter
0x000002000021ebff : add byte ptr [rsi + rax], al ; or al, 6 ; sysenter
0x000002000024ae2b : add byte ptr [rsi + rax], al ; or al, byte ptr [rsi] ; sysenter
0x0000020000204c8f : add byte ptr [rsi + rax], al ; or eax, dword ptr [rsi] ; sysenter
0x0000020000249a4f : add byte ptr [rsi + rax], al ; sbb dword ptr [rsi], eax ; sysenter
0x000002000025a01f : add byte ptr [rsi + rax], al ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0df : add byte ptr [rsi + rax], al ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f4f : add byte ptr [rsi + rax], al ; xor byte ptr [rsi], al ; sysenter
0x000002000025199f : add byte ptr [rsi + rax], cl ; ret 0x2546
0x000002000010c63b : add byte ptr [rsi + rbp*8 - 1], dh ; ret
0x00000200000aca90 : add byte ptr [rsi + rdi + 0x48], dh ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x00000200001c610b : add byte ptr [rsi + rdx - 0x7d], bh ; ret 0x4116
0x000002000020fd9b : add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; ret 0xd90
0x0000020000255d83 : add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x00000200003b5c9c : add byte ptr [rsi - 0x17], dh ; ret 0x1566
0x0000020000574c73 : add byte ptr [rsi - 0x1a], dh ; xor eax, eax ; ret
0x00000200003c2ea9 : add byte ptr [rsi - 0x39], ah ; add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006bce04 : add byte ptr [rsi - 0x3b7cb701], ah ; ret
0x000002000048c024 : add byte ptr [rsi - 0x49f0001c], bh ; ret
0x000002000058ebd8 : add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001b8895 : add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004df4a1 : add byte ptr [rsi - 0x77], ah ; shl byte ptr [r14 - 0x77], 0x45 ; ret 0x4de8
0x00000200000b4fe8 : add byte ptr [rsi - 0x7b], ah ; leave ; je 0x200000b4ff5 ; ret
0x0000020000036e31 : add byte ptr [rsi - 0x7b], ah ; ret 0x2074
0x00000200003c9b40 : add byte ptr [rsi - 0x7b], ah ; ret 0x2774
0x000002000045e7b5 : add byte ptr [rsi - 0x7b], ah ; ret 0x850f
0x00000200005962f7 : add byte ptr [rsi - 0x7b], ah ; ret 0xd74
0x000002000004aee5 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x00000200004f6d44 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x000002000039c8d4 : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfffc
0x00000200004c8565 : add byte ptr [rsi - 0x7b], ah ; sal byte ptr [rbx + rdx + 0x48], 0x8b ; ret
0x0000020000084d9f : add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x00000200000aa7b2 : add byte ptr [rsi - 1], ah ; ret
0x0000020000024f95 : add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200003d4d4d : add byte ptr [rsi - 1], ah ; ret 0x8366
0x0000020000140f3c : add byte ptr [rsi - 1], ah ; ret 0x8b48
0x0000020000191939 : add byte ptr [rsi - 1], ah ; ret 0x8b49
0x00000200000aba73 : add byte ptr [rsi - 1], ah ; ret 0xf44
0x000002000007c715 : add byte ptr [rsi - 9], ah ; ret 0x300
0x0000020000216a62 : add byte ptr [rsi], 0xf ; or al, byte ptr fs:[rax] ; sysenter
0x00000200002481aa : add byte ptr [rsi], al ; andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x000002000020fd9e : add byte ptr [rsi], al ; ret 0xd90
0x0000020000232f76 : add byte ptr [rsi], al ; sysenter
0x0000020000232aaf : add byte ptr [rsi], bh ; ret 0x3c
0x0000020000094958 : add byte ptr [rsi], bl ; sub dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add ah, cl ; ret
0x000002000008b945 : add byte ptr [rsi], ch ; add bh, bh ; jmp qword ptr [rcx]
0x00000200000812b7 : add byte ptr [rsi], dh ; call qword ptr [rcx]
0x000002000025cc7f : add byte ptr [rsi], dh ; ret
0x0000020000083d37 : add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x000002000022ff2b : add byte ptr [rsi], dl ; ret
0x0000020000083fd7 : add byte ptr [rsi], dl ; test eax, 0x9ba2 ; add byte ptr [rax], al ; ret 0xb0cc
0x0000020000545541 : add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200003cc0e2 : add byte ptr [rsp + rbx - 0x75], dh ; ret
0x0000020000600cbd : add byte ptr [rsp + rdx*2 - 0xa], dh ; ret
0x0000020000071ce4 : add byte ptr cs:[rax], al ; add byte ptr [rcx], al ; add byte ptr [rdi], cl ; test ebp, edx ; ret 0x18
0x000002000015f879 : add byte ptr cs:[rax], al ; ret
0x00000200000728c8 : add byte ptr cs:[rcx - 1], al ; ret 0x8944
0x00000200001c0f7b : add byte ptr ds:[rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200001c7eeb : add byte ptr ds:[rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200004117e8 : add byte ptr ds:[rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200004c124a : add byte ptr ds:[rax], al ; shr cl, 0x26 ; ret 0xfff2
0x00000200003efa3b : add byte ptr ds:[rax], al ; shr cl, 0xc3 ; ret 0xffff
0x00000200000f4653 : add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8b48
0x00000200000e84a9 : add byte ptr es:[rax + 0x3b], cl ; ret 0x1176
0x000002000015a448 : add byte ptr es:[rax - 0x75], cl ; je 0x2000015a47b ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000011905 : add byte ptr es:[rbx + rdi + 0x34], cl ; ret 0x840f
0x000002000002c818 : add byte ptr es:[rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x00000200000eaaf6 : add byte ptr es:[rcx + 3], cl ; ret
0x00000200001151e2 : add byte ptr es:[rdi + rcx + 0x20], al ; ret
0x000002000026dcfa : add byte ptr es:[rdx], ah ; add byte ptr [rax], al ; add al, dh ; ret 0x6c
0x00000200007024ca : add byte ptr fs:[rax], al ; add byte ptr [rbx], dh ; leave ; call rax
0x000002000066415f : add byte ptr fs:[rax], al ; ret
0x0000020000266a8a : add byte ptr fs:[rsi], dl ; ret
0x000002000055d7b4 : add byte ptr gs:[rdi + rcx + 0x20], al ; ret
0x00000200000847db : add byte ptr ss:[rax], al ; add byte ptr [rax], al ; jmp rsi
0x000002000008184b : add byte ptr ss:[rax], al ; add byte ptr [rax], al ; ret 0x344d
0x000002000063503d : add byte ptr ss:[rax], al ; add rsp, 0x28 ; ret
0x0000020000632ac7 : add ch, al ; ret
0x000002000055df68 : add ch, al ; ret 0xff10
0x000002000048bc61 : add ch, al ; stc ; xchg eax, ebx ; ret 0x48ff
0x000002000014fc30 : add ch, bl ; adc ecx, dword ptr [rax - 1] ; ret
0x000002000001a992 : add ch, bl ; clc ; mov eax, 0xc000000d ; ret
0x00000200006683f1 : add ch, bl ; jl 0x200006683b5 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000038311f : add ch, bl ; mov eax, 0xc0000058 ; ret
0x000002000047ea7f : add ch, bl ; out 0xb0, al ; add ebx, eax ; xor al, al ; ret
0x00000200003b0127 : add ch, bl ; out dx, al ; mov eax, 0xc0000058 ; ret
0x0000020000366547 : add ch, byte ptr [rax - 0xcfd8bff] ; ret
0x000002000048fd21 : add ch, byte ptr [rbx - 0x37] ; and eax, 0x8348c803 ; ret 0x4902
0x00000200000bffea : add ch, byte ptr [rbx] ; ret
0x0000020000504654 : add ch, byte ptr [rcx + rsi*8] ; push rsi ; ret
0x0000020000153f71 : add ch, byte ptr [rip - 0x74b22709] ; ret 0xd233
0x0000020000154f12 : add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000154f30
0x00000200001d3de1 : add ch, ch ; dec dword ptr [rax - 0x7d] ; ret 0x45c0
0x00000200001c90a7 : add ch, cl ; add al, 0xeb ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003ca19b : add ch, cl ; ret
0x00000200001d7dc3 : add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret 0xf48
0x0000020000017c48 : add ch, cl ; sub dword ptr [rax - 0x743e74b4], edx ; ret 0x8d48
0x000002000054a33d : add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret
0x00000200005e0162 : add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200000322a5 : add ch, cl ; sub ecx, ebp ; ret
0x0000020000393b4b : add ch, cl ; sub esi, esi ; ret
0x00000200001c7d97 : add cl, ah ; nop ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000003d0a5 : add cl, al ; call 0x1ffc28811b5
0x00000200003b2328 : add cl, al ; call 0x1ffc3c66740
0x00000200001364d6 : add cl, al ; clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000058fff7 : add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200003dbc19 : add cl, al ; jmp 0x1ffc200473a
0x000002000052835a : add cl, al ; jmp 0x1ffc2148e6e
0x0000020000574e0f : add cl, al ; jmp 0x1ffc2e29628
0x0000020000164db0 : add cl, al ; loopne 0x20000164dc8 ; mov dword ptr [r8 + 0x28], eax ; ret
0x000002000008df02 : add cl, bh ; jp 0x2000008df09 ; ret 0x4adb
0x00000200005b7c9d : add cl, byte ptr [r13 + 0x63] ; ret 0x8b48
0x000002000013b0a7 : add cl, byte ptr [r15] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x00000200001a4502 : add cl, byte ptr [r15] ; mov dh, 0x53 ; add ebp, eax ; ret
0x00000200006168a1 : add cl, byte ptr [r8 + 3] ; ret
0x0000020000545611 : add cl, byte ptr [r8 - 0x75] ; ret
0x00000200001a0866 : add cl, byte ptr [r8 - 0x7d] ; ret
0x0000020000550323 : add cl, byte ptr [r8 - 0x7d] ; ret 0x2b38
0x00000200004184a6 : add cl, byte ptr [r9 + 3] ; ret
0x00000200005c53ba : add cl, byte ptr [r9 - 0x75] ; iretd ; call rsi
0x00000200000bf075 : add cl, byte ptr [r9 - 0x7d] ; ret
0x00000200004f0c61 : add cl, byte ptr [rax + 0x23] ; ret 0x1ba
0x000002000006fa31 : add cl, byte ptr [rax + 0x23] ; ret 0x348
0x00000200001f25ac : add cl, byte ptr [rax + 0x23] ; ret 0x349
0x00000200003a2957 : add cl, byte ptr [rax + 0x23] ; ret 0xd233
0x0000020000467ea4 : add cl, byte ptr [rax + 0x2b] ; ret
0x00000200000bae48 : add cl, byte ptr [rax + 0x39] ; or dword ptr [rbp - 0x75], esi ; mov rax, rcx ; ret
0x00000200004fb8cf : add cl, byte ptr [rax + 0x3b] ; ret
0x000002000069c299 : add cl, byte ptr [rax + 0x3b] ; ret 0x1574
0x000002000039b6fc : add cl, byte ptr [rax + 0x3b] ; ret 0x1a74
0x000002000006c366 : add cl, byte ptr [rax + 0x3b] ; ret 0x2374
0x000002000035e792 : add cl, byte ptr [rax + 0x3b] ; ret 0x2f74
0x00000200004fb0d3 : add cl, byte ptr [rax + 0x3b] ; ret 0x3874
0x00000200000633c3 : add cl, byte ptr [rax + 0x3b] ; ret 0x6675
0x0000020000635f12 : add cl, byte ptr [rax + 0x3b] ; ret 0x6a75
0x000002000004d52e : add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200001f1711 : add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x0000020000147c9f : add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200005b1121 : add cl, byte ptr [rax + 0x3b] ; ret 0xf172
0x000002000014448c : add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x000002000019c0c0 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x00000200001c010f : add cl, byte ptr [rax + 0xb] ; ret 0x8944
0x00000200000d5396 : add cl, byte ptr [rax + 0xf] ; lds r9d, ptr [r8 - 0x75] ; call 0x200000c1694
0x00000200001a0bdc : add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x000002000037a38f : add cl, byte ptr [rax + 3] ; ret
0x000002000055bda9 : add cl, byte ptr [rax - 0x2f] ; jmp 0x200491848f8
0x000002000055be03 : add cl, byte ptr [rax - 0x2f] ; jmp 0x20049184952
0x00000200000cf0e9 : add cl, byte ptr [rax - 0x73] ; add al, 0x81 ; ret
0x0000020000059b96 : add cl, byte ptr [rax - 0x73] ; pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200001a0c47 : add cl, byte ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret 0xeb10
0x0000020000629923 : add cl, byte ptr [rax - 0x75] ; adc eax, 0xffc6212d ; call r10
0x0000020000126c5e : add cl, byte ptr [rax - 0x75] ; add dword ptr [rax - 0x75], ecx ; adc dh, dh ; ret 0xf01
0x0000020000170977 : add cl, byte ptr [rax - 0x75] ; je 0x200001709a7 ; js 0x20000170910 ; ret
0x000002000019a55c : add cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000059532 : add cl, byte ptr [rax - 0x75] ; ret
0x0000020000066da8 : add cl, byte ptr [rax - 0x75] ; ret 0x48f0
0x0000020000520597 : add cl, byte ptr [rax - 0x75] ; ret 0xba49
0x00000200001a1a08 : add cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x7d], cl ; ret
0x000002000051116b : add cl, byte ptr [rax - 0x75] ; ror dword ptr [rbp + 0x33], 1 ; ret
0x0000020000639290 : add cl, byte ptr [rax - 0x75] ; shr eax, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; insd dword ptr [rdi], dx ; ret
0x0000020000517589 : add cl, byte ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200004f45a2 : add cl, byte ptr [rax - 0x77] ; or byte ptr [r9 - 0x75], al ; ret
0x0000020000028665 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rdi + rdx + 0x49], 0x3b ; ret 0xb74
0x00000200003d3300 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x48], 0x3b ; ret
0x00000200003bbaa8 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rsp + rcx + 0x49], 0x3b ; ret 0x875
0x00000200001184b2 : add cl, byte ptr [rax - 0x7d] ; and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000e0824 : add cl, byte ptr [rax - 0x7d] ; jnp 0x200000e0839 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012f0e8 : add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000550324 : add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x000002000058dab7 : add cl, byte ptr [rax - 0x7d] ; ret 0x302
0x0000020000567c92 : add cl, byte ptr [rax - 0x7d] ; ret 0x310
0x000002000059ab90 : add cl, byte ptr [rax - 0x7d] ; ret 0x3b08
0x000002000058a371 : add cl, byte ptr [rax - 0x7d] ; ret 0x4102
0x0000020000607dd3 : add cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000200007018dd : add cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x0000020000157c17 : add cl, byte ptr [rax - 0x7d] ; ret 0x4504
0x00000200003952b2 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000020000023170 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000200000de46b : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000016da1d : add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000006ef3c : add cl, byte ptr [rax - 0x7d] ; ret 0x4828
0x0000020000017058 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x00000200000adf94 : add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x000002000014b209 : add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000002000017672d : add cl, byte ptr [rax - 0x7d] ; ret 0x4c02
0x00000200006d6904 : add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x00000200006ec81e : add cl, byte ptr [rax - 0x7d] ; ret 0x4d04
0x0000020000197e31 : add cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x00000200005e0b97 : add cl, byte ptr [rax - 0x7d] ; ret 0x4dfc
0x00000200004f4e9c : add cl, byte ptr [rax - 0x7d] ; ret 0x8330
0x00000200003b4f49 : add cl, byte ptr [rax - 0x7d] ; ret 0x8802
0x00000200004fa1c0 : add cl, byte ptr [rax - 0x7d] ; ret 0x8908
0x0000020000140ec1 : add cl, byte ptr [rax - 0x7d] ; ret 0x8910
0x00000200005002b9 : add cl, byte ptr [rax - 0x7d] ; ret 0xb928
0x00000200001a6159 : add cl, byte ptr [rax - 0x7d] ; ret 0xbd02
0x00000200005e347e : add cl, byte ptr [rax - 0x7d] ; ret 0xe814
0x0000020000437b52 : add cl, byte ptr [rax - 0x7d] ; ret 0xe84c
0x00000200001a183a : add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x00000200001a0baf : add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200006ba3ee : add cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000200003cdab7 : add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x0000020000459f9a : add cl, byte ptr [rax - 0x7d] ; ret 0xf20
0x0000020000546562 : add cl, byte ptr [rax - 0x7d] ; ret 0xf338
0x00000200006c9b3a : add cl, byte ptr [rax - 0x7d] ; ret 0xf70c
0x0000020000395abd : add cl, byte ptr [rax - 0x7d] ; ret 0xff04
0x0000020000546f41 : add cl, byte ptr [rax - 0x7f] ; ret 0x90
0x0000020000635055 : add cl, byte ptr [rax - 0xb7f5fc] ; ret 0xff41
0x000002000069d335 : add cl, byte ptr [rax - 1] ; ret 0x3348
0x000002000069b725 : add cl, byte ptr [rax - 1] ; ret 0x341
0x00000200006cb79c : add cl, byte ptr [rax - 1] ; ret 0x4566
0x00000200005aab2c : add cl, byte ptr [rax - 1] ; ret 0x692d
0x0000020000617b47 : add cl, byte ptr [rax - 1] ; ret 0x8041
0x000002000019ec7c : add cl, byte ptr [rax - 1] ; ret 0x8b48
0x0000020000555610 : add cl, byte ptr [rax - 1] ; ret 0xc084
0x00000200006a0167 : add cl, byte ptr [rax - 1] ; ret 0xcfff
0x00000200006c34f9 : add cl, byte ptr [rax - 1] ; ret 0xf981
0x00000200006a05fb : add cl, byte ptr [rax - 1] ; ret 0xff41
0x00000200000204e7 : add cl, byte ptr [rbp + 0x2b483a0c] ; call 0x2002bc4903c
0x0000020000381ef2 : add cl, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x00000200001544ea : add cl, byte ptr [rbp + 0x3b] ; enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x0000020000197431 : add cl, byte ptr [rbp + 0x3b] ; ret 0x3c74
0x000002000013b0ac : add cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x000002000054cf4f : add cl, byte ptr [rbp + 0x3b] ; ret 0xdb73
0x0000020000154072 : add cl, byte ptr [rbp + 0x3b] ; ret 0xe372
0x00000200001a0074 : add cl, byte ptr [rbp + 0x634c880c] ; ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x00000200005b7c9e : add cl, byte ptr [rbp + 0x63] ; ret 0x8b48
0x0000020000147e16 : add cl, byte ptr [rbp + 3] ; ret
0x00000200006e701e : add cl, byte ptr [rbp + 3] ; ror dword ptr [rax + 0x33], 1 ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x00000200005542ec : add cl, byte ptr [rbp - 0x48f076f4] ; ret 0xb70f
0x00000200001875c0 : add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x0000020000154423 : add cl, byte ptr [rbp - 0x7b] ; sal byte ptr [rbp - 0x15], 0xf3 ; ret
0x0000020000038172 : add cl, byte ptr [rbx + 0x48202444] ; add esp, 0x38 ; ret
0x00000200004d6875 : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x18 ; ret
0x0000020000553db1 : add cl, byte ptr [rbx - 0x1874bb29] ; call 0x20000270048
0x0000020000668688 : add cl, byte ptr [rbx - 0x3f0502fb] ; dec dword ptr [rax - 0x7d] ; ret 0x890c
0x00000200001a4a7c : add cl, byte ptr [rbx - 0x7cb7e7a6] ; ret 0x391c
0x0000020000041400 : add cl, byte ptr [rbx] ; ret
0x000002000014e2b9 : add cl, byte ptr [rbx] ; ret 0x225
0x00000200000563b6 : add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000a96ac : add cl, byte ptr [rcx + 0x23] ; ret 0x348
0x0000020000635f4d : add cl, byte ptr [rcx + 0x3b] ; ret
0x00000200004fa4ba : add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x000002000046569d : add cl, byte ptr [rcx + 0x3b] ; ret 0xe972
0x00000200004656ed : add cl, byte ptr [rcx + 0x3b] ; ret 0xed72
0x00000200005b05d3 : add cl, byte ptr [rcx + 0x3b] ; ret 0xf272
0x00000200005f208b : add cl, byte ptr [rcx + 0x63] ; ret
0x000002000013a5bf : add cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x00000200004184a7 : add cl, byte ptr [rcx + 3] ; ret
0x000002000017f78a : add cl, byte ptr [rcx + rcx*4 + 1] ; ret
0x00000200001667ab : add cl, byte ptr [rcx - 0x397cb7fa] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200005997a6 : add cl, byte ptr [rcx - 0x3d74befe] ; ret
0x00000200001c3e4c : add cl, byte ptr [rcx - 0x48f0bafe] ; ret
0x0000020000402639 : add cl, byte ptr [rcx - 0x74be17bb] ; ret 0xbb41
0x00000200005c53bb : add cl, byte ptr [rcx - 0x75] ; iretd ; call rsi
0x0000020000588e61 : add cl, byte ptr [rcx - 0x75] ; mov gs, word ptr [rax - 0x18000000] ; ret 0xb2b4
0x0000020000575e1d : add cl, byte ptr [rcx - 0x75] ; ret 0x8b49
0x00000200001a0b0d : add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x000002000057bcf4 : add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x00000200000bf076 : add cl, byte ptr [rcx - 0x7d] ; ret
0x000002000035fcc3 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4110
0x000002000003f80c : add cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000200001a0794 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4510
0x00000200001554a3 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200005932e3 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x000002000000d80d : add cl, byte ptr [rcx - 0x7d] ; ret 0x4808
0x00000200001a092e : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x000002000070e5b1 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4910
0x0000020000444191 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c02
0x000002000045a936 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x000002000059101d : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x00000200006d4670 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x0000020000155455 : add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x0000020000633aea : add cl, byte ptr [rcx - 0x7d] ; ret 0x8402
0x000002000006a4df : add cl, byte ptr [rcx - 0x7d] ; ret 0xc708
0x0000020000600f33 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe904
0x000002000006a3ea : add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x00000200001554da : add cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x000002000061468f : add cl, byte ptr [rcx - 0x7d] ; ret 0xff02
0x000002000000e4dc : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rcx + rcx*2], 0xff ; ret 0xff48
0x000002000014fc2c : add cl, byte ptr [rcx - 0x7d] ; rol dword ptr [rdx], -0x15 ; adc ecx, dword ptr [rax - 1] ; ret
0x000002000014aecb : add cl, byte ptr [rcx - 0x7f] ; ret 0x160
0x0000020000168d58 : add cl, byte ptr [rcx - 1] ; enter -0x118b, -0x75 ; ret 0x8b48
0x00000200003ba840 : add cl, byte ptr [rcx - 1] ; leave ; jne 0x200003ba83a ; ret
0x00000200001a0d03 : add cl, byte ptr [rcx - 1] ; ret
0x000002000038ddb8 : add cl, byte ptr [rcx - 1] ; ret 0x3348
0x000002000070f3b0 : add cl, byte ptr [rcx - 1] ; ret 0x692d
0x0000020000154eab : add cl, byte ptr [rcx - 1] ; ret 0x8041
0x00000200006a06fd : add cl, byte ptr [rcx - 1] ; ret 0xff41
0x0000020000154ee8 : add cl, byte ptr [rcx - 1] ; ret 0xff48
0x000002000024eb5c : add cl, byte ptr [rdi + rax] ; add byte ptr [rip + 0xc060c06], al ; ret 0x7005
0x00000200004d7129 : add cl, byte ptr [rdi - 0x73] ; or al, 0x53 ; mov rax, r9 ; ret
0x00000200005e771e : add cl, byte ptr [rdi] ; cmp dword ptr [rdi + 0x4cffd9b8], 0x63 ; ret
0x00000200006c72c2 : add cl, byte ptr [rdi] ; mov bh, 0x43 ; or byte ptr [rax - 0x7d], cl ; ret 0x3b02
0x00000200004b5176 : add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x000002000013b0a8 : add cl, byte ptr [rdi] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x000002000006b25d : add cl, byte ptr [rdi] ; mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x00000200001a4503 : add cl, byte ptr [rdi] ; mov dh, 0x53 ; add ebp, eax ; ret
0x0000020000255d80 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x000002000022c638 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x00000200002090a8 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; mov byte ptr [rsi], dl ; sysenter
0x000002000021ebfc : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; or al, 6 ; sysenter
0x000002000024ae28 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; or al, byte ptr [rsi] ; sysenter
0x0000020000249a4c : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 6 ; sbb dword ptr [rsi], eax ; sysenter
0x0000020000218568 : add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, byte ptr [rsi] ; ret 0xf06
0x00000200001d93dd : add cl, byte ptr [rdi] ; or dword ptr [rdx + 6], 0xfffffff0 ; push rsi ; ret 0x7401
0x00000200000c1ba1 : add cl, byte ptr [rdi] ; test al, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ee4f9 : add cl, byte ptr [rdi] ; test bh, bl ; ret
0x000002000007c70f : add cl, byte ptr [rdi] ; test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x00000200005e589d : add cl, byte ptr [rdi] ; test byte ptr [rbx - 0x900130e], ch ; ret
0x00000200004d4e74 : add cl, byte ptr [rdi] ; test byte ptr [rdi - 0xa000000], bl ; ret
0x000002000062add7 : add cl, byte ptr [rdi] ; test byte ptr [rip - 0x9002205], ah ; ret
0x000002000061b538 : add cl, byte ptr [rdi] ; test dword ptr [rax], edi ; jmp rbx
0x000002000013dddc : add cl, byte ptr [rdi] ; test dword ptr [rbp - 0x74fff484], edi ; ret 0x4466
0x000002000035d120 : add cl, byte ptr [rdi] ; test dword ptr [rbp - 0x75fffecc], esi ; ret
0x0000020000407f63 : add cl, byte ptr [rdi] ; test dword ptr [rbp - 0x9ffdf7a], ebp ; ret
0x00000200003b1a70 : add cl, byte ptr [rdi] ; test dword ptr [rdi - 0x1000000], ecx ; ret
0x000002000005d995 : add cl, byte ptr [rdi] ; test dword ptr [rdi - 0x74000003], eax ; ret 0x3948
0x00000200006bb1ce : add cl, byte ptr [rdi] ; test dword ptr [rdi - 0x74fffaf6], ebx ; ret
0x00000200001a00a7 : add cl, byte ptr [rdi] ; test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001c89a : add cl, byte ptr [rdi] ; test dword ptr [rdx - 0x9ffffff], edi ; ret
0x00000200004d4d90 : add cl, byte ptr [rdi] ; test dword ptr [rip - 0x9fffffe], ebp ; ret 0xf04
0x00000200006f02f5 : add cl, byte ptr [rdi] ; test dword ptr [rsi - 0x74fffe61], ebp ; ret
0x00000200003f0452 : add cl, byte ptr [rdi] ; test ebp, esi ; ret
0x0000020000619332 : add cl, byte ptr [rdi] ; test ebx, ebp ; ret 0xffdd
0x00000200006f4bc9 : add cl, byte ptr [rdi] ; test ecx, eax ; ret
0x00000200005e7c14 : add cl, byte ptr [rdi] ; test esp, edi ; ret
0x00000200001b9217 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xb0e9
0x00000200004d80f6 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000020000511b7d : add cl, byte ptr [rdi] ; xchg eax, esp ; rol byte ptr [rcx - 0x78], 0 ; xor eax, eax ; ret
0x000002000059991f : add cl, byte ptr [rdx + 0x3c1024c1] ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe180
0x000002000003fcc9 : add cl, byte ptr [rdx] ; ret 0xc184
0x00000200004024ca : add cl, ch ; adc eax, 0xf6ffffff ; ret
0x00000200000ea02f : add cl, ch ; add qword ptr [r8], r8 ; add dh, dh ; ret
0x00000200001feac3 : add cl, ch ; call qword ptr [rax]
0x000002000035ee65 : add cl, ch ; cli ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001ca7b3 : add cl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x00000200003a5848 : add cl, ch ; jmp rbx
0x00000200000edb2e : add cl, ch ; mov ebx, 0x3bfffffa ; ret 0x1976
0x0000020000199d2f : add cl, ch ; mov edx, 0xf6000001 ; ret 0x753f
0x000002000052563f : add cl, ch ; mov esi, 0x8bfffffe ; ret
0x00000200005ebf0d : add cl, ch ; pop rax ; ret 0xffe5
0x00000200005f69ad : add cl, ch ; pop rbp ; cmp ebp, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200001ee43b : add cl, ch ; pop rbp ; ret
0x000002000040ff19 : add cl, ch ; push -0x9000001 ; ret
0x000002000010e125 : add cl, ch ; push -0x90001d6 ; ret
0x00000200000035c4 : add cl, ch ; ret
0x0000020000113756 : add cl, ch ; ret 0
0x00000200003a5785 : add cl, ch ; ret 0x2e4
0x0000020000586478 : add cl, ch ; ret 0xaec9
0x00000200005e7bc4 : add cl, ch ; ret 0xd9c4
0x00000200005fbfac : add cl, ch ; ret 0xe076
0x0000020000631821 : add cl, ch ; ret 0xe4e8
0x0000020000601673 : add cl, ch ; ret 0xe638
0x0000020000615a3a : add cl, ch ; ret 0xe891
0x00000200004c230c : add cl, ch ; ret 0xf999
0x0000020000080478 : add cl, ch ; ret 0xffab
0x0000020000080378 : add cl, ch ; ret 0xffac
0x0000020000080278 : add cl, ch ; ret 0xffad
0x0000020000080178 : add cl, ch ; ret 0xffae
0x0000020000080078 : add cl, ch ; ret 0xffaf
0x000002000007ff78 : add cl, ch ; ret 0xffb0
0x000002000007fe78 : add cl, ch ; ret 0xffb1
0x000002000007fd78 : add cl, ch ; ret 0xffb2
0x000002000007fc78 : add cl, ch ; ret 0xffb3
0x000002000007fb78 : add cl, ch ; ret 0xffb4
0x000002000007fa78 : add cl, ch ; ret 0xffb5
0x000002000007f978 : add cl, ch ; ret 0xffb6
0x000002000007f878 : add cl, ch ; ret 0xffb7
0x000002000007f778 : add cl, ch ; ret 0xffb8
0x000002000007f678 : add cl, ch ; ret 0xffb9
0x000002000007f578 : add cl, ch ; ret 0xffba
0x000002000007f478 : add cl, ch ; ret 0xffbb
0x000002000007f378 : add cl, ch ; ret 0xffbc
0x000002000007f278 : add cl, ch ; ret 0xffbd
0x000002000007f178 : add cl, ch ; ret 0xffbe
0x000002000007f078 : add cl, ch ; ret 0xffbf
0x000002000007ef78 : add cl, ch ; ret 0xffc0
0x000002000007ee78 : add cl, ch ; ret 0xffc1
0x000002000007ed78 : add cl, ch ; ret 0xffc2
0x000002000007ec78 : add cl, ch ; ret 0xffc3
0x000002000007eb78 : add cl, ch ; ret 0xffc4
0x000002000007ea78 : add cl, ch ; ret 0xffc5
0x000002000007e978 : add cl, ch ; ret 0xffc6
0x000002000007e878 : add cl, ch ; ret 0xffc7
0x000002000007e778 : add cl, ch ; ret 0xffc8
0x000002000007e678 : add cl, ch ; ret 0xffc9
0x000002000007e578 : add cl, ch ; ret 0xffca
0x000002000007e478 : add cl, ch ; ret 0xffcb
0x000002000007e378 : add cl, ch ; ret 0xffcc
0x000002000007e278 : add cl, ch ; ret 0xffcd
0x000002000007e178 : add cl, ch ; ret 0xffce
0x000002000007e078 : add cl, ch ; ret 0xffcf
0x000002000007df78 : add cl, ch ; ret 0xffd0
0x000002000007de78 : add cl, ch ; ret 0xffd1
0x000002000007dd78 : add cl, ch ; ret 0xffd2
0x000002000007dc78 : add cl, ch ; ret 0xffd3
0x000002000007db78 : add cl, ch ; ret 0xffd4
0x000002000007da78 : add cl, ch ; ret 0xffd5
0x000002000007d978 : add cl, ch ; ret 0xffd6
0x000002000007d878 : add cl, ch ; ret 0xffd7
0x000002000007d778 : add cl, ch ; ret 0xffd8
0x000002000007d678 : add cl, ch ; ret 0xffd9
0x000002000007d578 : add cl, ch ; ret 0xffda
0x000002000007d478 : add cl, ch ; ret 0xffdb
0x000002000007d378 : add cl, ch ; ret 0xffdc
0x000002000007d278 : add cl, ch ; ret 0xffdd
0x000002000007d178 : add cl, ch ; ret 0xffde
0x000002000007d078 : add cl, ch ; ret 0xffdf
0x000002000007cf78 : add cl, ch ; ret 0xffe0
0x000002000060e4df : add cl, ch ; ret 0xffe1
0x0000020000011b4f : add cl, ch ; ret 0xfff6
0x000002000011f305 : add cl, ch ; ret 0xfff7
0x00000200000c64a9 : add cl, ch ; ret 0xfff8
0x00000200000c118a : add cl, ch ; ret 0xfff9
0x0000020000445591 : add cl, ch ; ret 0xfffa
0x00000200000ce07f : add cl, ch ; ret 0xfffc
0x0000020000057940 : add cl, ch ; ret 0xfffe
0x000002000007edf8 : add cl, ch ; ret 0xffff
0x00000200001098e3 : add cl, ch ; stc ; hlt ; push rsi ; ret
0x000002000035ee53 : add cl, ch ; std ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x000002000047814f : add cl, ch ; sub ecx, ebp ; ret 0x90ff
0x00000200001208ed : add cl, ch ; test dword ptr [rdx], 0x8b44fff9 ; ret 0x8b48
0x000002000051e1a8 : add cl, ch ; xchg ch, al ; sti ; inc dword ptr [rcx - 0x41] ; ret
0x0000020000082cff : add cl, cl ; ret 0x21d1
0x000002000023a9ff : add cl, dl ; ret 0x60
0x000002000019c15a : add cx, ax ; cmp cx, dx ; setbe al ; ret
0x0000020000545310 : add cx, ax ; movzx eax, r10w ; jmp 0x20000545327
0x000002000058944e : add cx, r9w ; movzx eax, cx ; ret
0x0000020000081297 : add dh, ah ; xor byte ptr [rdx - 0x5b], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x0000020000667b0d : add dh, al ; add eax, 0xffc263fb ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200001b6af3 : add dh, al ; cmpxchg qword ptr [rdi], rcx ; jne 0x200001b6b08 ; mov al, dl ; jmp 0x200001b6b10
0x00000200000dd66b : add dh, al ; ret
0x0000020000071118 : add dh, al ; ret 0x4806
0x000002000015402a : add dh, bh ; fsub dword ptr [rsi - 0x77] ; or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x00000200001960ec : add dh, bh ; ret
0x00000200004b02ff : add dh, bh ; ret 0x3345
0x00000200000da9f2 : add dh, bh ; ret 0x5788
0x00000200000c59a5 : add dh, bh ; shl byte ptr [rbx], cl ; ret 0xca8b
0x00000200000df9a8 : add dh, bh ; xor byte ptr [rdi], 4 ; add byte ptr [rax], al ; ret
0x000002000000577e : add dh, bl ; ret
0x00000200004fbe39 : add dh, byte ptr [rax + 0x13] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004c8e62 : add dh, byte ptr [rax + rbp - 0xa] ; ret
0x000002000006f975 : add dh, byte ptr [rax + rcx - 0x75] ; ret
0x00000200003fd18e : add dh, byte ptr [rax - 0x3fcd3cff] ; ret
0x000002000043e461 : add dh, byte ptr [rax] ; sahf ; loop 0x2000043e482 ; ret 0xac83
0x00000200000bdd06 : add dh, byte ptr [rbp + 0x11] ; mov al, 1 ; ret
0x00000200000bdd14 : add dh, byte ptr [rbp + 0xa] ; xor al, al ; ret
0x00000200001009c2 : add dh, byte ptr [rbp + 0xe] ; mov byte ptr [rip + 0x1e7398], dl ; ret
0x0000020000158615 : add dh, byte ptr [rbp + 2] ; xor dl, dl ; mov al, dl ; ret
0x00000200001ae057 : add dh, byte ptr [rbp + 4] ; lea rcx, qword ptr [rbx + 0x50] ; call 0x200001aa32d
0x0000020000393f5f : add dh, byte ptr [rbp + 5] ; add rsp, 0x28 ; ret
0x000002000065777e : add dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x000002000052b6ea : add dh, byte ptr [rbp + 8] ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x2000052b70b
0x0000020000564898 : add dh, byte ptr [rbp + 8] ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x200005648b9
0x000002000049a1d6 : add dh, byte ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x000002000005b30a : add dh, byte ptr [rbp + rax + 0x48] ; bts dword ptr [rcx], 0xd ; ret
0x00000200001064ba : add dh, byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rcx + 0x28] ; ret
0x000002000063f5dd : add dh, byte ptr [rbp + rax - 0x17] ; sub edi, edx ; ret 0xebff
0x0000020000051973 : add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x00000200005a7d54 : add dh, byte ptr [rbp + rcx - 0xa] ; ret 0x7504
0x00000200001140b0 : add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000037ac1b : add dh, byte ptr [rbp - 0xc] ; mov eax, 1 ; ret
0x000002000064d8c6 : add dh, byte ptr [rbp - 0xf] ; ret
0x0000020000159107 : add dh, byte ptr [rbx + 3] ; xor al, al ; ret
0x00000200001c5655 : add dh, byte ptr [rbx + 3] ; xor eax, eax ; ret
0x000002000012c2f0 : add dh, byte ptr [rbx + rax - 0x75] ; ret 0x41c3
0x000002000007c63e : add dh, byte ptr [rbx + rax - 0x7d] ; enter 0x6602, -9 ; ret 0x100
0x000002000056d4eb : add dh, byte ptr [rbx + rdx - 0xa] ; ret
0x000002000056fa95 : add dh, byte ptr [rbx + rsi*2 - 0xa] ; ret
0x000002000064303d : add dh, byte ptr [rbx] ; leave ; mov rax, rcx ; ret
0x000002000060be61 : add dh, byte ptr [rbx] ; ret 0x4789
0x00000200006e7cc5 : add dh, byte ptr [rbx] ; rol bl, 0xb8 ; adc dword ptr [rax], eax ; add al, al ; ret
0x00000200001622d2 : add dh, byte ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004e03d7 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200001978f8 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x48c3
0x0000020000429cb3 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000063f5ab : add dh, byte ptr [rcx + rcx - 0x75] ; xlatb ; call 0x2000026f018
0x00000200004c8e81 : add dh, byte ptr [rcx + rcx - 0xa] ; ret
0x00000200005cfad8 : add dh, byte ptr [rcx + rcx - 0xa] ; ret 0xf02
0x000002000013b62e : add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x0000020000570433 : add dh, byte ptr [rcx + rdx - 0xa] ; ret 0x7504
0x00000200001c1ad1 : add dh, byte ptr [rcx] ; mov byte ptr [rdi + 1], 0x48 ; mov byte ptr [rdi], 0x2e ; call rdi
0x0000020000564b94 : add dh, byte ptr [rdi + rdi*8 + 0x60c48348] ; pop rbp ; ret
0x0000020000549f86 : add dh, byte ptr [rdx + 6] ; mov eax, 0xc0000189 ; ret
0x00000200001978f6 : add dh, byte ptr [rdx + rax + 0x33] ; ror byte ptr [rax - 0x75], cl ; ret 0x48c3
0x0000020000498352 : add dh, byte ptr [rdx + rax - 0xd] ; ret
0x000002000010930b : add dh, byte ptr [rdx + rcx - 0xa] ; ret
0x0000020000497904 : add dh, byte ptr [rdx - 0x5a] ; mov al, 2 ; ret
0x000002000017f7bf : add dh, byte ptr [rdx] ; leave ; mov al, cl ; ret
0x0000020000545bc8 : add dh, byte ptr [rdx] ; ret 0x3f24
0x00000200005b28b6 : add dh, byte ptr [rsi + rax - 0x48] ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000004772d : add dh, byte ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006227e9 : add dh, byte ptr [rsi + rcx - 0xa] ; ret
0x0000020000665110 : add dh, byte ptr [rsi - 0xa] ; mov eax, 0xc0000001 ; ret
0x000002000069bbba : add dh, byte ptr [rsp + rax - 0x75] ; ret 0x3aeb
0x0000020000421c66 : add dh, byte ptr [rsp + rcx - 0xa] ; ret
0x00000200000713ab : add dh, byte ptr [rsp + rdx + 0xf] ; xchg eax, esp ; ret 0x8b48
0x0000020000009ed7 : add dh, dh ; ret
0x0000020000061958 : add dh, dh ; ret 0x7401
0x00000200004c6e09 : add dh, dh ; ret 0x7402
0x00000200005ac860 : add dh, dh ; ret 0x7403
0x0000020000472ed0 : add dh, dh ; ret 0x7404
0x00000200000e4de2 : add dh, dh ; ret 0x740f
0x0000020000108071 : add dh, dh ; ret 0x7410
0x0000020000058169 : add dh, dh ; ret 0x7420
0x000002000047a6b5 : add dh, dh ; ret 0x7447
0x0000020000016e34 : add dh, dh ; ret 0x7501
0x00000200000c6573 : add dh, dh ; ret 0x7502
0x000002000040cb30 : add dh, dh ; ret 0x7503
0x00000200000dfd3b : add dh, dh ; ret 0x7504
0x00000200000c474c : add dh, dh ; ret 0x7508
0x00000200003a6e20 : add dh, dh ; ret 0x7510
0x00000200000e7ae4 : add dh, dh ; ret 0x7520
0x0000020000199d34 : add dh, dh ; ret 0x753f
0x00000200005746a7 : add dh, dh ; ret 0xb83f
0x00000200001b1f47 : add dh, dh ; ret 0xc704
0x0000020000057ae1 : add dh, dh ; ret 0xf01
0x00000200000fff75 : add dh, dh ; ret 0xf02
0x0000020000011b63 : add dh, dh ; ret 0xf03
0x0000020000020a79 : add dh, dh ; ret 0xf04
0x00000200000de51c : add dh, dh ; ret 0xf07
0x00000200000dd0f3 : add dh, dh ; ret 0xf08
0x00000200001f82f6 : add dh, dh ; ret 0xf10
0x000002000002bb8a : add dh, dh ; ret 0xf1f
0x000002000006ed48 : add dh, dh ; ret 0xf20
0x0000020000102458 : add dh, dh ; ret 0xf30
0x0000020000013241 : add dh, dh ; ret 0xf40
0x00000200001a6f28 : add dh, dh ; rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x000002000038ec17 : add dh, dh ; shl byte ptr [rcx + rax], 1 ; ret
0x00000200005bd31c : add dil, dil ; ret
0x00000200003fa603 : add dil, dil ; ret 0x348
0x00000200000521f9 : add dil, dil ; ret 0x349
0x000002000058b862 : add dil, r15b ; ret 0x141
0x00000200001fa9bd : add dil, r15b ; ret 0x348
0x00000200006680b8 : add dl, 0xff ; or eax, 0x802a1589 ; ret 0x8bff
0x0000020000234fd3 : add dl, al ; sti ; add al, dh ; xor byte ptr [rbp], bl ; ret 0x3efb
0x0000020000076660 : add dl, bh ; mov rcx, qword ptr [rip + 0x2d6d6f] ; call qword ptr [rcx]
0x0000020000075bb7 : add dl, bh ; mov rcx, qword ptr [rip + 0x2d7818] ; call qword ptr [rcx]
0x000002000007546d : add dl, bh ; mov rcx, qword ptr [rip + 0x2d7f62] ; call qword ptr [rcx]
0x0000020000074fb9 : add dl, bh ; mov rcx, qword ptr [rip + 0x2d8416] ; call qword ptr [rcx]
0x0000020000074d5f : add dl, bh ; mov rcx, qword ptr [rip + 0x2d8670] ; call qword ptr [rcx]
0x000002000007136c : add dl, bh ; mov rcx, qword ptr [rip + 0x2dc063] ; call qword ptr [rcx]
0x0000020000141e1f : add dl, bh ; ret
0x0000020000497900 : add dl, bl ; cmp dl, 2 ; jb 0x200004978b6 ; mov al, 2 ; ret
0x000002000024ec58 : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14061306], cl ; ret 0xf00d
0x000002000024da4c : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14061c06], cl ; ret 0xf00d
0x0000020000231848 : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14061e06], cl ; ret 0xf00d
0x00000200002539bc : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14062206], cl ; ret 0xf010
0x00000200002476b0 : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14063106], cl ; ret 0xf00d
0x000002000026ba60 : add dl, byte ptr [rbx + rcx] ; add byte ptr [rip + 0x14063e06], cl ; ret 0xf00d
0x00000200000a622d : add dl, byte ptr [rbx] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x0000020000502108 : add dl, byte ptr [rcx + 0xf] ; add byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200003ab5ce : add dl, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000022e7fc : add dl, byte ptr [rcx] ; or eax, dword ptr [rax] ; or eax, 0x1136e206 ; ret 0xf00d
0x000002000024d988 : add dl, byte ptr [rdi] ; or eax, dword ptr [rax] ; or eax, 0x17064d06 ; ret 0xf010
0x00000200002481a8 : add dl, byte ptr [rsi] ; add byte ptr [rsi], al ; andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x0000020000232f74 : add dl, byte ptr [rsi] ; add byte ptr [rsi], al ; sysenter
0x000002000023cb13 : add dl, ch ; ret
0x0000020000668e47 : add dl, cl ; jmp 0x1ffc36f1795
0x000002000006b3f1 : add dword ptr [eax - 9], ecx ; ret 0xfff
0x000002000050a79d : add dword ptr [eax], eax ; add rsp, 0x28 ; ret
0x00000200006bf514 : add dword ptr [r11], edi ; ret
0x00000200000cbd7e : add dword ptr [r11], esp ; ret 0xd88b
0x000002000070e27d : add dword ptr [r11], r12d ; ret 0xd2f7
0x00000200001fcece : add dword ptr [r11], r12d ; ret 0xf88b
0x000002000005219e : add dword ptr [r13 + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x00000200006ccdf5 : add dword ptr [r13 - 0x74ee8b2e], r8d ; ret 0xd148
0x000002000069f018 : add dword ptr [r14 + 0x3d0], r10d ; mov rax, rdx ; jmp 0x2000069f02f
0x00000200006df4a0 : add dword ptr [r14 + 0x3d0], r13d ; mov rax, rdx ; jmp 0x200006df4b7
0x000002000069dfa6 : add dword ptr [r14 + 0x3d0], r9d ; mov rax, rdx ; jmp 0x2000069dfbd
0x000002000069f962 : add dword ptr [r14 + 0x3d0], r9d ; mov rax, rdx ; jmp 0x2000069f979
0x000002000070375d : add dword ptr [r8 + 0x33], ecx ; ret 0xd233
0x0000020000154f33 : add dword ptr [r8 + 0x3b], ecx ; ret 0xa76
0x000002000053487e : add dword ptr [r8 + 0x63], ecx ; enter 0xf41, -0x49 ; ret 0xc149
0x000002000036dca4 : add dword ptr [r8 + 0xb], ecx ; ret
0x00000200001a1823 : add dword ptr [r8 + r9 + 0x48], r14d ; inc edi ; inc rdx ; jmp 0x200001a1865
0x000002000039b6f8 : add dword ptr [r8 - 0x75], r9d ; add cl, byte ptr [rax + 0x3b] ; ret 0x1a74
0x00000200001a1954 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000020000186bad : add dword ptr [r8], eax ; add byte ptr [rcx + 3], al ; ret 0x34d
0x000002000007f775 : add dword ptr [r8], eax ; add cl, ch ; ret 0xffb8
0x0000020000150119 : add dword ptr [r8], eax ; add dh, dh ; ret
0x00000200000c02c4 : add dword ptr [r8], eax ; jne 0x200000c02da ; xor al, al ; ret
0x00000200000bd3dd : add dword ptr [r8], r8d ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x0000020000471ea5 : add dword ptr [r8], r8d ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000467047 : add dword ptr [r8], r8d ; add byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000063e6f4 : add dword ptr [r8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ebc92 : add dword ptr [r9 + 0x23], eax ; ret
0x0000020000366115 : add dword ptr [r9 - 0x75], eax ; ret
0x00000200005c5532 : add dword ptr [r9 - 0x75], ecx ; iretd ; call rsi
0x00000200003a15e9 : add dword ptr [r9 - 0x77], eax ; add byte ptr [rbx], bh ; ret 0xad72
0x0000020000067f92 : add dword ptr [rax + 0x19], edi ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000003dece : add dword ptr [rax + 0x23], ecx ; ret
0x000002000001396d : add dword ptr [rax + 0x23], ecx ; ret 0x11b2
0x000002000000b3a7 : add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200000c4eb3 : add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x00000200001869e9 : add dword ptr [rax + 0x23], ecx ; ret 0x90c3
0x00000200001f286c : add dword ptr [rax + 0x2b], ecx ; ret 0xd233
0x0000020000154e82 : add dword ptr [rax + 0x2c64101], ecx ; cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x00000200000c9bb9 : add dword ptr [rax + 0x33], ecx ; ret 0x2349
0x000002000069dab0 : add dword ptr [rax + 0x33], ecx ; ret 0x8948
0x000002000070375e : add dword ptr [rax + 0x33], ecx ; ret 0xd233
0x000002000011eaff : add dword ptr [rax + 0x3b], ecx ; ret
0x0000020000154f34 : add dword ptr [rax + 0x3b], ecx ; ret 0xa76
0x000002000064ddd4 : add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x00000200004855b7 : add dword ptr [rax + 0x3b], ecx ; sal dword ptr [rbp + 3], -0x76 ; ret 0x38c3
0x0000020000149132 : add dword ptr [rax + 0x3b], ecx ; sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x00000200006c016a : add dword ptr [rax + 0x41000002], -1 ; ret
0x000002000043a675 : add dword ptr [rax + 0x48004398], 3 ; retf ; jmp rcx
0x0000020000393f5d : add dword ptr [rax + 0x48057502], ebp ; add esp, 0x28 ; ret
0x000002000012abaa : add dword ptr [rax + 0x49000000], 0x3b ; ret
0x000002000053487f : add dword ptr [rax + 0x63], ecx ; enter 0xf41, -0x49 ; ret 0xc149
0x0000020000188e3f : add dword ptr [rax + 0x63], ecx ; ret 0xd13b
0x000002000036dca5 : add dword ptr [rax + 0xb], ecx ; ret
0x00000200001748e0 : add dword ptr [rax + 0xb], ecx ; ret 0x8944
0x00000200000630cc : add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x000002000069ec40 : add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x000002000036a11c : add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x00000200006c681c : add dword ptr [rax + 0xc], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x000002000070829c : add dword ptr [rax + 0xc], 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007082e0 : add dword ptr [rax + 0xc], 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001b94dd : add dword ptr [rax + 0xf], ecx ; fisttp word ptr [rax - 0x75] ; ret
0x00000200000c7873 : add dword ptr [rax + 0xf], ecx ; ret
0x000002000040f83f : add dword ptr [rax + 1], edi ; ret
0x00000200003f0fa1 : add dword ptr [rax + 3], ecx ; rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x00000200001fcf1f : add dword ptr [rax + rbp - 0xa], esi ; ret
0x00000200001a1824 : add dword ptr [rax + rcx + 0x48], esi ; inc edi ; inc rdx ; jmp 0x200001a1864
0x0000020000139b7d : add dword ptr [rax + rcx - 0x39], esi ; ret 0xc
0x00000200005587fd : add dword ptr [rax + rcx - 0x76], esi ; ret 0x5488
0x0000020000617bbe : add dword ptr [rax + rcx*4 + 0x42], eax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200000635ff : add dword ptr [rax + rcx*8 - 0x75be998c], eax ; ret 0x4db9
0x0000020000018915 : add dword ptr [rax + rdx + 0x48], esi ; add esp, 0x28 ; ret
0x000002000001800f : add dword ptr [rax + rdx - 0x7b], esi ; ret 0x875
0x00000200001f1ee4 : add dword ptr [rax - 0x2f], ecx ; call 0x20048e1423a
0x000002000054b2dd : add dword ptr [rax - 0x3fccfcbf], ecx ; ret
0x0000020000161da0 : add dword ptr [rax - 0x3fffff45], edi ; ret
0x00000200005f0f44 : add dword ptr [rax - 0x6bf0fe07], eax ; ret
0x000002000057a6ef : add dword ptr [rax - 0x74bbd3bf], ecx ; ret 0x2b44
0x000002000016d93e : add dword ptr [rax - 0x75000000], 5 ; ret
0x0000020000126c61 : add dword ptr [rax - 0x75], ecx ; adc dh, dh ; ret 0xf01
0x0000020000117c96 : add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000039b6f9 : add dword ptr [rax - 0x75], ecx ; add cl, byte ptr [rax + 0x3b] ; ret 0x1a74
0x000002000001057c : add dword ptr [rax - 0x75], ecx ; add eax, 0x346f34 ; call rax
0x0000020000034848 : add dword ptr [rax - 0x75], ecx ; iretd ; call 0x20000010a86
0x0000020000105efa : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000035fc74 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000004a69f : add dword ptr [rax - 0x75], ecx ; ret
0x00000200001591e1 : add dword ptr [rax - 0x75], ecx ; ret 0x2b49
0x000002000047674f : add dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200004789bf : add dword ptr [rax - 0x75], ecx ; retf ; call 0x20000054c16
0x00000200003cc4b2 : add dword ptr [rax - 0x75], ecx ; retf ; call 0x20000378756
0x00000200005c7e0f : add dword ptr [rax - 0x75], ecx ; retf ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x000002000046dde2 : add dword ptr [rax - 0x75], ecx ; ror dword ptr [rax - 0x3f], -0x18 ; or al, 0x3b ; ret 0x870f
0x0000020000421254 : add dword ptr [rax - 0x75], ecx ; salc ; mov rcx, r14 ; call 0x2000004d4f9
0x000002000045a8e2 : add dword ptr [rax - 0x75], ecx ; sbb al, 0x24 ; add rsp, 8 ; ret
0x00000200000da086 : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x000002000014b206 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200004845df : add dword ptr [rax - 0x77], ecx ; and al, 0x20 ; call rsi
0x00000200001b94c0 : add dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x000002000016997c : add dword ptr [rax - 0x77], ecx ; or eax, 0x16fd54 ; ret
0x00000200003e4bca : add dword ptr [rax - 0x78], eax ; mov ah, 0x24 ; ret
0x000002000047a223 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], 0x84 ; ret 2
0x00000200004ac77c : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], 0x85 ; ret 0x13c5
0x0000020000005779 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 2], cl ; ret
0x00000200006609c6 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x0000020000045293 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x0000020000641918 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x2a], 0xf3 ; ret
0x000002000039286d : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rsi + rcx + 0x49], 0x3b ; ret 0x1175
0x000002000058fc6b : add dword ptr [rax - 0x7bf02d7c], eax ; ret 2
0x0000020000433f80 : add dword ptr [rax - 0x7c], eax ; test byte ptr [rdi], 0x85 ; ret 0x1ea2
0x0000020000437f21 : add dword ptr [rax - 0x7cafdbac], ecx ; jmp qword ptr [rax]
0x00000200001adcda : add dword ptr [rax - 0x7d], ecx ; or r8b, bpl ; ret
0x0000020000184d1d : add dword ptr [rax - 0x7d], ecx ; ret
0x0000020000144554 : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x0000020000002da4 : add dword ptr [rax - 0x7d], ecx ; ret 0x8808
0x00000200001a0bdf : add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001b161a : add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200005fedc0 : add dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -1 ; ret 0x8349
0x000002000004ef91 : add dword ptr [rax - 0x7d], ecx ; sal dword ptr [rax], 0xb ; ret 0x4123
0x00000200004cd214 : add dword ptr [rax - 0x7d], ecx ; sar dword ptr [rax], -0x18 ; ret 0xbebe
0x0000020000184d1c : add dword ptr [rax - 0x7d], r9d ; ret
0x00000200001672f7 : add dword ptr [rax - 0x7f], ecx ; ret
0x00000200006e9ee0 : add dword ptr [rax - 0x7f], ecx ; ret 0x801
0x000002000015518c : add dword ptr [rax - 1], ecx ; ret
0x00000200000a38b4 : add dword ptr [rax - 1], ecx ; ror dword ptr [rcx - 1], -0x38 ; jne 0x200000a38b9 ; ret 0
0x000002000006b3f2 : add dword ptr [rax - 9], ecx ; ret 0xfff
0x00000200001fac22 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x000002000043c65b : add dword ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000057c20c : add dword ptr [rax], 0x8b440000 ; ret
0x00000200003f70f2 : add dword ptr [rax], 0xb70f0000 ; ret
0x000002000019c103 : add dword ptr [rax], 2 ; ret
0x000002000059b089 : add dword ptr [rax], eax ; add al, 0 ; je 0x2000059b09a ; mov al, 1 ; ret
0x0000020000635839 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000139c2e : add dword ptr [rax], eax ; add al, al ; add rsp, 0x38 ; ret
0x0000020000636ebc : add dword ptr [rax], eax ; add al, al ; add rsp, 0x48 ; ret
0x0000020000478de8 : add dword ptr [rax], eax ; add al, al ; call 0x200000b5066
0x00000200005eef20 : add dword ptr [rax], eax ; add al, al ; jmp 0x200004fb1cb
0x00000200005d225d : add dword ptr [rax], eax ; add al, al ; mov eax, edx ; jmp 0x200005d226f
0x000002000005e6ef : add dword ptr [rax], eax ; add al, al ; ret
0x00000200004c2633 : add dword ptr [rax], eax ; add al, ch ; add eax, 0x8bffbb08 ; ret
0x00000200003b7ead : add dword ptr [rax], eax ; add al, ch ; call qword ptr [rbx]
0x00000200005e003e : add dword ptr [rax], eax ; add al, ch ; cli ; ret 0xffa9
0x00000200004e8cb9 : add dword ptr [rax], eax ; add al, ch ; jmp rsp
0x00000200005eb745 : add dword ptr [rax], eax ; add al, ch ; mov bl, 0x1f ; scasd eax, dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x000002000061977b : add dword ptr [rax], eax ; add al, ch ; mov ebp, 0x8bffa596 ; ret
0x0000020000058135 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000200000d4a36 : add dword ptr [rax], eax ; add al, ch ; ret 0x1e8
0x00000200005966b6 : add dword ptr [rax], eax ; add al, ch ; ret 0xbb17
0x00000200003b7af6 : add dword ptr [rax], eax ; add al, ch ; ret 0xcbf6
0x000002000044774d : add dword ptr [rax], eax ; add al, ch ; stosd dword ptr [rdi], eax ; pop rdi ; leave ; push qword ptr [rdx] ; ret
0x00000200000fa8be : add dword ptr [rax], eax ; add al, dl ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000de6a5 : add dword ptr [rax], eax ; add bh, bh ; ret
0x0000020000031b05 : add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000385212 : add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x000002000038eea3 : add dword ptr [rax], eax ; add bh, bh ; ret 0xd7eb
0x000002000019d8b7 : add dword ptr [rax], eax ; add bh, bh ; ret 0xebe9
0x000002000040525e : add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000485080 : add dword ptr [rax], eax ; add bh, dh ; ret 0x6000
0x0000020000485443 : add dword ptr [rax], eax ; add bh, dh ; ret 0x7000
0x00000200004d1914 : add dword ptr [rax], eax ; add bh, dh ; ret 0xfffc
0x0000020000153b53 : add dword ptr [rax], eax ; add bl, bh ; mov eax, ecx ; ret
0x0000020000076c23 : add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000017857b : add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000015b611 : add dword ptr [rax], eax ; add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000006006 : add dword ptr [rax], eax ; add byte ptr [rax + 0x32], al ; div dh ; ret 0xf04
0x0000020000385190 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000012bf95 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x1573
0x00000200000bd3de : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200001a31a4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003e64f5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000002000058e329 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b4c
0x00000200001d53a3 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000b1264 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x0000020000134a5c : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0xb48
0x00000200006f4df0 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200001d8294 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3a44
0x00000200004693db : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8d4d
0x00000200000ca863 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x9aeb
0x000002000038dd26 : add dword ptr [rax], eax ; add byte ptr [rax + 5], cl ; js 0x2000038dd39 ; add byte ptr [rax], al ; ret
0x0000020000183eea : add dword ptr [rax], eax ; add byte ptr [rax + rdi - 0x59], al ; ret
0x000002000026f8c0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000200001386b1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc336cfd0
0x000002000005158c : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200005724ec : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; clc ; adc byte ptr [rbp + 0x2b], cl ; ret
0x00000200000ee8fd : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc39a311c
0x00000200000034be : add dword ptr [rax], eax ; add byte ptr [rax - 0x74bbcebf], cl ; ret 0xcfeb
0x00000200001ce373 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], al ; ret
0x0000020000407154 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200005903b3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000019c5f8
0x000002000016b328 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000417638
0x0000020000015569 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000199b3b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], cl ; ret 0xc149
0x00000200001bf743 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000002000053747f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7402
0x0000020000025f11 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006112ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000012d2b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200003938a3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200006c433f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8944
0x00000200001198fc : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000556bb6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200003e6ba4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x20000072e48
0x000002000063314b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200004750c0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x000002000070d1f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200003fecad : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000004aae3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000568dba : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000011b1b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000398453 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4920
0x000002000004f63e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000dec07 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x100
0x0000020000040e79 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200000d7760 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x5364
0x000002000002cb0d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xbf8
0x00000200001a590f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xed0
0x000002000018242c : add dword ptr [rax], eax ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000019b6d8 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200004d22f1 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000200001f9547 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8948
0x00000200000df07c : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000045e1a7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000200001bfd06 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000014342e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8789
0x00000200001279d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200001c80fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000002cb6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ccce0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000008635 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001c7e2c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000105d58 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000007afbd : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001c7f2a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003f05ec : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200000e2b84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000aee26
0x00000200005e2245 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000015e536
0x000002000064adf9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000270047
0x00000200003b6b9f : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r10
0x00000200004a9155 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x000002000039af1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000200004ecc95 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r15
0x00000200004ebdd3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r8
0x000002000015986c : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000002000039db24 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x000002000048823e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rsi
0x0000020000052175 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, r8d ; ret
0x000002000036d63a : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmp cl, 0xf ; cmovne eax, edx ; ret
0x00000200006ba05c : add dword ptr [rax], eax ; add byte ptr [rax], al ; cwde ; ret 0x4009
0x0000020000235378 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x200002353ac
0x00000200006a1078 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp r8
0x00000200002344b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rdx
0x0000020000029d3d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x20000029d5a ; ret
0x00000200003f4025 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4039 ; call 0x20000023fb9
0x00000200003f4181 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4195 ; call 0x20000023fb9
0x00000200003f435b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f436f ; call 0x20000023fb9
0x00000200003f43d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f43e8 ; call 0x20000023fb9
0x00000200003f451f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4533 ; call 0x20000023fb9
0x00000200003f45cb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f45df ; call 0x20000023fb9
0x00000200003f46af : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f46c3 ; call 0x20000023fb9
0x00000200003f49f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4a0d ; call 0x20000023fb9
0x00000200003f4ac4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4ad8 ; call 0x20000023fb9
0x00000200003f4bfc : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4c10 ; call 0x20000023fb9
0x00000200003f4cdb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4cef ; call 0x20000023fb9
0x00000200003f4ef5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f4f09 ; call 0x20000023fb9
0x00000200003f505b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f506f ; call 0x20000023fb9
0x00000200003f52f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f530a ; call 0x20000023fb9
0x00000200003f5482 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f5496 ; call 0x20000023fb9
0x00000200003f9ab6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003f9a7b ; call 0x20000023fb9
0x00000200003fa20b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200003fa1e0 ; call 0x20000023fb9
0x0000020000477d41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x20000477d54 ; call 0x20000023fb8
0x0000020000247b6c : add dword ptr [rax], eax ; add byte ptr [rax], al ; lodsd eax, dword ptr [rsi] ; ret 0x4d
0x0000020000407c48 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [r9 + 0x10], 1 ; ret
0x00000200006ec531 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000174ffb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000200001b8d94 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r9d ; ret
0x0000020000257cf0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebx, 0xc3005ac3 ; ret
0x00000200002551fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edx, 0xd70058c2 ; ret 0x58
0x000002000041b302 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [r11 - 0x38], rax ; call r10
0x00000200000ca82a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000122f84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000017f271
0x00000200003fef13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call r10
0x0000020000503dc7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r12 ; call 0x20000270049
0x0000020000503df0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, rsi ; call 0x20000270049
0x0000020000266a84 : add dword ptr [rax], eax ; add byte ptr [rax], al ; or bl, al ; add byte ptr fs:[rsi], dl ; ret
0x00000200005ba8d9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000005882 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000097bb4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0
0x0000020000232ab4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3c
0x0000020000234ef8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3ef4
0x0000020000235978 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3f78
0x0000020000236364 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3fca
0x00000200002387b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x417a
0x00000200000e47fc : add dword ptr [rax], eax ; add byte ptr [rax], al ; setne al ; ret
0x0000020000154853 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test eax, eax ; cmovg eax, ecx ; ret
0x0000020000007461 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200004e43d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000001f7fe : add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x00000200004aad82 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; div bh ; ret 0xfff0
0x00000200005c3d3b : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x000002000002f3df : add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], al ; ret
0x000002000003aaca : add dword ptr [rax], eax ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x000002000003a8e8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0xc8bff43], cl ; ret 0x48b
0x00000200005b7d9c : add dword ptr [rax], eax ; add byte ptr [rbp + 5], dh ; call 0x20000023fb7
0x0000020000169d3d : add dword ptr [rax], eax ; add byte ptr [rbp + rax*8 - 0x75], dh ; ret
0x00000200004f4cd0 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x000002000039ca3b : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x00000200003f9816 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x1e], dh ; call 0x20000023fb8
0x00000200003f828c : add dword ptr [rax], eax ; add byte ptr [rbp - 0x22], dh ; call 0x20000023fb8
0x00000200003fd762 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x2f], dh ; call 0x20000023fb8
0x00000200003fc643 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x38], dh ; call 0x20000023fb8
0x00000200003ffd50 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x39], dh ; call 0x20000023fb8
0x00000200003fd9b0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x3e], dh ; call 0x20000023fb8
0x00000200003f7933 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x5c], dh ; call 0x20000023fb8
0x0000020000621a4e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200003fe6b5 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 1
0x000002000002cc65 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0x5488
0x000002000053d8fb : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + 9], 0xf6 ; ret 0xf06
0x000002000040b45a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x000002000000bcea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x000002000042a780 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x7506e8cb], cl ; ret
0x0000020000516c72 : add dword ptr [rax], eax ; add byte ptr [rbx + 0xd8d48f8], cl ; ret 0xdbd7
0x00000200005dff43 : add dword ptr [rax], eax ; add byte ptr [rbx + rax + 0x4f], al ; add al, 0xe8 ; int1 ; ret
0x00000200004f27b4 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0xdd92
0x00000200000c5161 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x45], cl ; sbb dh, dh ; ret
0x00000200003edb04 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x2955
0x000002000040c11b : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x0000020000433dca : add dword ptr [rax], eax ; add byte ptr [rbx - 0x1f7cf91f], al ; ret
0x000002000050c5ef : add dword ptr [rax], eax ; add byte ptr [rbx - 0x1f7cf91f], al ; ret 0xb41
0x000002000014e25d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x41f0ba10], cl ; xchg eax, edi ; ret
0x000002000038d783 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74bfdba4], cl ; ret
0x000002000046120d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x9afdba4], cl ; ret
0x000002000037e361 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x00000200005652db : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x474
0x000002000058d7fd : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200001744af : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200005652be : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x874
0x00000200000367d4 : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret
0x0000020000470bce : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret 0x4166
0x000002000041dfb7 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x0000020000547504 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x00000200006e6b55 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call rdi
0x00000200004481aa : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200005b0ea1 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000164c38 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x23], cl ; ret 0x8b49
0x0000020000145234 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], al ; ret
0x00000200000ab0d8 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000002205d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004face1 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x00000200004aafd5 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; fmul dword ptr [rdi + rcx + 0x4f] ; ret
0x00000200000bd3fd : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000058c2f8 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000586543 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200000d9c68 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x00000200000433d4 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046d673 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rsi ; ret
0x0000020000467497 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x00000200000af052 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000144f3c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004070a9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000029ce1 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000c188d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; ret
0x000002000007170c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000a7eaa : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000042c172 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000016560 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x00000200000a9536 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; ret
0x000002000035e6c3 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x63], cl ; ret
0x00000200003c4a32 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xb], al ; ret
0x0000020000186bae : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x34d
0x000002000059664b : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x85c7
0x0000020000596616 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8944
0x00000200003a4ca1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0x43], al ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200006baf58 : add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x2d], al ; ret 0xc2d1
0x00000200006018fb : add dword ptr [rax], eax ; add byte ptr [rcx - 0x163fccc7], cl ; outsd dx, dword ptr [rsi] ; ret
0x00000200004259e7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x629017ff], dh ; ret 0xfff
0x00000200001a1e8a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x00000200004d22e4 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r9 + 0x3b] ; ret
0x00000200000d08be : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x3349
0x000002000019faaf : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x00000200004c9855 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; fmul qword ptr [rax - 0x75] ; ret 0xff48
0x00000200004e6cae : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200005bc15c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xc32b
0x000002000015edb9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xcb8b
0x000002000006333e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x7874
0x000002000042d10c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x00000200006c8ae2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000475354 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x00000200004621c7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200003c6464 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200005e4062 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; ret
0x00000200000045e3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000bc233 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x00000200004e6319 : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret
0x00000200004d8404 : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000036f07a : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x8348
0x00000200006c947d : add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret
0x0000020000660690 : add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200001944e6 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000f2bf9 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000004f832 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000556edd : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000022ab3 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000c81d2 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000139ec5 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000065ae3b : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000654286 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xc4b9
0x00000200001a07ad : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x0000020000466e2e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x0000020000467048 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200004c127b : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, cl ; ret
0x00000200000a18bc : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200000a3f9e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x97 ; ret
0x00000200000419f0 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 4 ; ret 0x1a8
0x0000020000558679 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x4489
0x000002000040b083 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8488
0x0000020000131c16 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test cl, ch ; ret
0x00000200004274af : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test eax, edx ; int 9
0x00000200005f9180 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test esp, edx ; ret
0x000002000060bd07 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000017a183 : add dword ptr [rax], eax ; add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x00000200006551af : add dword ptr [rax], eax ; add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x0000020000052901 : add dword ptr [rax], eax ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000005db83 : add dword ptr [rax], eax ; add byte ptr [rdx + rdx*8 - 0x74b7b087], al ; ret
0x000002000042015e : add dword ptr [rax], eax ; add byte ptr [rdx - 0x4f771735], cl ; ret
0x00000200003e878a : add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x0000020000054b95 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x3c74
0x0000020000499b33 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x79 ; hlt ; ret
0x00000200000b4fe6 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; leave ; je 0x200000b4ff7 ; ret
0x00000200004f6d42 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x000002000039c8d2 : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x85 ; ret 0xfffc
0x0000020000113754 : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x0000020000080476 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffab
0x0000020000080376 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffac
0x0000020000080276 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffad
0x0000020000080176 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffae
0x0000020000080076 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffaf
0x000002000007ff76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb0
0x000002000007fe76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb1
0x000002000007fd76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb2
0x000002000007fc76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb3
0x000002000007fb76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb4
0x000002000007fa76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb5
0x000002000007f976 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb6
0x000002000007f876 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb7
0x000002000007f776 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb8
0x000002000007f676 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffb9
0x000002000007f576 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffba
0x000002000007f476 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffbb
0x000002000007f376 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffbc
0x000002000007f276 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffbd
0x000002000007f176 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffbe
0x000002000007f076 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffbf
0x000002000007ef76 : add dword ptr [rax], eax ; add cl, ch ; ret 0xffc0
0x00000200000c64a7 : add dword ptr [rax], eax ; add cl, ch ; ret 0xfff8
0x00000200003f806d : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200004b02fd : add dword ptr [rax], eax ; add dh, bh ; ret 0x3345
0x00000200000da9f0 : add dword ptr [rax], eax ; add dh, bh ; ret 0x5788
0x00000200000df9a6 : add dword ptr [rax], eax ; add dh, bh ; xor byte ptr [rdi], 4 ; add byte ptr [rax], al ; ret
0x000002000001c89e : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000061956 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x00000200004c6e07 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0x00000200005adcb9 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7403
0x000002000047a6b3 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7447
0x000002000040c08a : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000200000c6571 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000020000199d32 : add dword ptr [rax], eax ; add dh, dh ; ret 0x753f
0x00000200005746a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0xb83f
0x00000200003d81eb : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000200003bf942 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x00000200000de51a : add dword ptr [rax], eax ; add dh, dh ; ret 0xf07
0x00000200000dd0f1 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x0000020000590e53 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf10
0x0000020000393cca : add dword ptr [rax], eax ; add dh, dh ; ret 0xf20
0x00000200003d0eb6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf40
0x0000020000036d79 : add dword ptr [rax], eax ; add dword ptr [rax], eax ; ret
0x0000020000018098 : add dword ptr [rax], eax ; add rcx, rdi ; jmp rcx
0x00000200001179fc : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f5fef : add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200004ab56c : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000000e8e4 : add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000398f03 : add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200001193aa : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004318fc : add dword ptr [rax], eax ; add rsp, 0xa8 ; ret
0x000002000044426a : add dword ptr [rax], eax ; call 0x20000072e45
0x00000200000933ca : add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200006c1afc : add dword ptr [rax], eax ; call qword ptr [rip - 0x3daf5c]
0x000002000014060f : add dword ptr [rax], eax ; call r11
0x0000020000464f8d : add dword ptr [rax], eax ; idiv edi ; push rbx ; ret
0x00000200000540b8 : add dword ptr [rax], eax ; jmp 0x2000005406e
0x00000200000e06ad : add dword ptr [rax], eax ; jmp 0x200000e04af
0x000002000015ba53 : add dword ptr [rax], eax ; jmp 0x2000015ba68
0x000002000049f9e0 : add dword ptr [rax], eax ; jmp 0x200004bbc1a
0x00000200000a91b8 : add dword ptr [rax], eax ; jne 0x200000a91cb ; lock and qword ptr [rcx], 0 ; ret
0x00000200000c02c5 : add dword ptr [rax], eax ; jne 0x200000c02d9 ; xor al, al ; ret
0x000002000035d125 : add dword ptr [rax], eax ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006533fa : add dword ptr [rax], eax ; mov dword ptr [rip + 0x17d26], eax ; ret
0x000002000064fac1 : add dword ptr [rax], eax ; mov eax, dword ptr [rip + 0x1b5e7] ; ret
0x000002000013ebbe : add dword ptr [rax], eax ; mov ecx, eax ; call 0x2000014ae4a
0x00000200001766ce : add dword ptr [rax], eax ; mov rax, rdx ; ret
0x0000020000447648 : add dword ptr [rax], eax ; mov rcx, r15 ; call 0x20000072e48
0x000002000059f3ed : add dword ptr [rax], eax ; mov rcx, rdi ; call 0x2000038b673
0x0000020000036d7b : add dword ptr [rax], eax ; ret
0x00000200003a576a : add dword ptr [rax], eax ; rol bh, 5 ; loope 0x200003a57dd ; jmp qword ptr [rdi]
0x00000200003a55c7 : add dword ptr [rax], eax ; rol bh, 5 ; test byte ptr [rsi - 0xe], ah ; jmp qword ptr [rsi]
0x000002000017a47e : add dword ptr [rax], eax ; rol byte ptr [rcx - 0x75], 0xc0 ; wrmsr ; ret
0x000002000010cdd1 : add dword ptr [rax], eax ; ror byte ptr [rax - 0x7d], 0xf9 ; dec byte ptr [rdi] ; ret 0x4589
0x00000200006dbbeb : add dword ptr [rax], eax ; ror byte ptr [rdi], 0x85 ; ret 0xff7e
0x00000200004a5934 : add dword ptr [rax], eax ; sbb eax, eax ; add rsp, 0x28 ; ret
0x000002000019c170 : add dword ptr [rax], eax ; setge al ; ret
0x000002000040eecd : add dword ptr [rax], eax ; shr cl, 0x77 ; add dword ptr [rax], esp ; add dh, dh ; ret
0x00000200005857dc : add dword ptr [rax], eax ; shr cl, 0xe6 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000657304 : add dword ptr [rax], eax ; test al, 2 ; je 0x20000657315 ; xor eax, eax ; ret
0x000002000002e6a8 : add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000910f7 : add dword ptr [rax], ebp ; push rsp ; fild word ptr [rcx - 2] ; ret 0xb87
0x000002000040eed2 : add dword ptr [rax], esp ; add dh, dh ; ret
0x000002000012d2b7 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x000002000014ddf5 : add dword ptr [rbp + 0x14], esi ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200000df88d : add dword ptr [rbp + 0x1f], esi ; ret
0x0000020000112027 : add dword ptr [rbp + 0x20], 0xa ; add rsp, 0x20 ; pop rbp ; ret
0x000002000000b918 : add dword ptr [rbp + 0x20], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000019514 : add dword ptr [rbp + 0x20], 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x000002000037266a : add dword ptr [rbp + 0x2b], ecx ; ret
0x00000200001043d7 : add dword ptr [rbp + 0x30], 3 ; jmp 0x200001043f6
0x0000020000112d08 : add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x000002000039bfeb : add dword ptr [rbp + 0x42], esi ; mov qword ptr [r9], r10 ; ret
0x0000020000117461 : add dword ptr [rbp + 0x49f775c0], eax ; mov ecx, eax ; jmp rdx
0x0000020000543927 : add dword ptr [rbp + 0x63], eax ; jo 0x2000054397f ; xor eax, eax ; ret
0x00000200005b9860 : add dword ptr [rbp + 0x63], ecx ; ret
0x000002000005219f : add dword ptr [rbp + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x0000020000704327 : add dword ptr [rbp + 0xf], eax ; ret 0xc2ff
0x000002000049919d : add dword ptr [rbp + 0xfcf8bc9], eax ; xchg eax, ebp ; ret 0x56e8
0x00000200000f82d4 : add dword ptr [rbp + 1], esi ; ret
0x00000200004ac727 : add dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200001620e2 : add dword ptr [rbp + 6], esi ; mov eax, 0xc00000bb ; ret
0x000002000058d1ef : add dword ptr [rbp + 6], esi ; mov eax, 1 ; ret
0x00000200000636ac : add dword ptr [rbp + 6], esi ; or byte ptr [r8 + 0x1a], 0x10 ; ret
0x00000200000beeed : add dword ptr [rbp + 9], esi ; ret
0x000002000038654c : add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x000002000064769c : add dword ptr [rbp + rax + 0xf], esi ; mov edx, 0xf6143868 ; ret
0x000002000007b935 : add dword ptr [rbp + rax - 0x18], esi ; ret
0x00000200000dfd7a : add dword ptr [rbp + rbp - 0xa], esi ; ret 0xf08
0x000002000006195b : add dword ptr [rbp + rcx - 0x76], esi ; and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x00000200004fb2dd : add dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x00000200005919e6 : add dword ptr [rbp + rcx*4 + 5], ecx ; ret 0xec03
0x000002000001315b : add dword ptr [rbp + rsi*2 - 0xa], esi ; ret 0xf01
0x000002000011b5d5 : add dword ptr [rbp - 0x10], esi ; mov eax, dword ptr [rip + 0x23bf7e] ; ret
0x0000020000063ce3 : add dword ptr [rbp - 0x29], esi ; ret
0x000002000013c210 : add dword ptr [rbp - 0x2a], esi ; xor eax, eax ; ret
0x000002000064de93 : add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x000002000000e707 : add dword ptr [rbp - 0x74bbfeaa], ecx ; ret
0x00000200006ccdf6 : add dword ptr [rbp - 0x74ee8b2e], eax ; ret 0xd148
0x000002000015606c : add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x20000156098
0x00000200000e435e : add dword ptr [rbp - 0x75], eax ; ret
0x0000020000005126 : add dword ptr [rbp - 0x75], eax ; ret 0x3944
0x00000200000ee257 : add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x00000200001a6fd6 : add dword ptr [rbp - 0x7b], ecx ; sal byte ptr [rcx + rbx + 0x45], 0x84 ; ret
0x000002000037eff8 : add dword ptr [rbp - 0x8a58640], eax ; fdivr dword ptr [rbx] ; ret
0x00000200000773ab : add dword ptr [rbp - 0xe], esi ; mov rax, r11 ; ret
0x0000020000162273 : add dword ptr [rbp - 0xee8b40], eax ; ret 0x1139
0x00000200005b2482 : add dword ptr [rbx + 0x244c890a], ecx ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000005a9c6 : add dword ptr [rbx + 0x24], esi ; jne 0x2000005a980 ; mov rcx, rbx ; jmp 0x2000005a99b
0x00000200006d8ed6 : add dword ptr [rbx + 0x3d0], eax ; mov rax, rdx ; jmp 0x200006d8eeb
0x00000200006dce51 : add dword ptr [rbx + 0x3d0], eax ; mov rax, rdx ; jmp 0x200006dce66
0x00000200006de471 : add dword ptr [rbx + 0x3d0], eax ; mov rax, rdx ; jmp 0x200006de486
0x00000200006dea52 : add dword ptr [rbx + 0x3d0], ebx ; mov rax, rdx ; jmp 0x200006dea67
0x00000200006e429b : add dword ptr [rbx + 0x3d0], ebx ; mov rax, rdx ; jmp 0x200006e42b0
0x00000200006d203a : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006d204f
0x00000200006d24e5 : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006d24fa
0x00000200006d7689 : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006d769e
0x00000200006dcb62 : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006dcb77
0x00000200006df94c : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006df961
0x00000200006e37b9 : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006e37ce
0x00000200006e4c27 : add dword ptr [rbx + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006e4c3c
0x00000200006e272e : add dword ptr [rbx + 0x3d0], edi ; mov rax, rdx ; jmp 0x200006e2743
0x00000200006d1d1d : add dword ptr [rbx + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006d1d32
0x00000200006d8bbc : add dword ptr [rbx + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006d8bd1
0x00000200006da050 : add dword ptr [rbx + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006da065
0x00000200006db5df : add dword ptr [rbx + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006db5f4
0x00000200006de147 : add dword ptr [rbx + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006de15c
0x00000200006d1d1c : add dword ptr [rbx + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006d1d33
0x00000200006d8bbb : add dword ptr [rbx + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006d8bd2
0x00000200006da04f : add dword ptr [rbx + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006da066
0x00000200006db5de : add dword ptr [rbx + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006db5f5
0x00000200006de146 : add dword ptr [rbx + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006de15d
0x00000200006dea51 : add dword ptr [rbx + 0x3d0], r11d ; mov rax, rdx ; jmp 0x200006dea68
0x00000200006e429a : add dword ptr [rbx + 0x3d0], r11d ; mov rax, rdx ; jmp 0x200006e42b1
0x00000200006e272d : add dword ptr [rbx + 0x3d0], r15d ; mov rax, rdx ; jmp 0x200006e2744
0x00000200006d8ed5 : add dword ptr [rbx + 0x3d0], r8d ; mov rax, rdx ; jmp 0x200006d8eec
0x00000200006dce50 : add dword ptr [rbx + 0x3d0], r8d ; mov rax, rdx ; jmp 0x200006dce67
0x00000200006de470 : add dword ptr [rbx + 0x3d0], r8d ; mov rax, rdx ; jmp 0x200006de487
0x00000200006d2039 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006d2050
0x00000200006d24e4 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006d24fb
0x00000200006d7688 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006d769f
0x00000200006dcb61 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006dcb78
0x00000200006df94b : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006df962
0x00000200006e37b8 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006e37cf
0x00000200006e4c26 : add dword ptr [rbx + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006e4c3d
0x00000200001f6250 : add dword ptr [rbx + 0x98], 8 ; inc rdx ; jmp 0x200001f6201
0x00000200000c224d : add dword ptr [rbx + 0xb4803e0], eax ; ret
0x00000200001a9513 : add dword ptr [rbx + 0xb4807e0], eax ; ret
0x00000200001aa9dc : add dword ptr [rbx + 0xb4907e0], eax ; ret
0x00000200001b6d49 : add dword ptr [rbx + 0xb4907e0], eax ; ret 0x8948
0x000002000006053d : add dword ptr [rbx + 3], esi ; mov al, cl ; ret
0x00000200004d4d88 : add dword ptr [rbx + rax - 0x73], esi ; pop rsi ; add esi, esi ; ret 0xf02
0x0000020000552334 : add dword ptr [rbx + rbp*2 - 1], esi ; ret 0x8348
0x0000020000132b04 : add dword ptr [rbx + rdx - 1], esi ; ret 0x8348
0x0000020000466b56 : add dword ptr [rbx + rsi*4 - 0xd], esi ; ret
0x000002000036064b : add dword ptr [rbx - 0x49f0000e], eax ; ret
0x000002000049114f : add dword ptr [rbx - 0x49f00043], ebp ; ret
0x0000020000192329 : add dword ptr [rbx - 0x74a7dba4], ecx ; ret
0x000002000037a054 : add dword ptr [rbx - 0x75], esi ; ret
0x00000200004167be : add dword ptr [rbx - 0x8e11707], ecx ; ret
0x000002000018bb3b : add dword ptr [rbx - 0xde1421], ecx ; ret
0x000002000057a079 : add dword ptr [rbx], 0x18 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000579fd7 : add dword ptr [rbx], 0x28 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000053f8c7 : add dword ptr [rbx], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x88
0x000002000013b0b7 : add dword ptr [rbx], eax ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x0000020000609ca8 : add dword ptr [rbx], eax ; ret
0x00000200000a7358 : add dword ptr [rbx], ebp ; add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x48], 1 ; ret
0x0000020000635831 : add dword ptr [rbx], ebp ; ret
0x000002000041dd24 : add dword ptr [rbx], ebp ; ret 0x3341
0x00000200005e6e03 : add dword ptr [rbx], ebp ; ret 0x775
0x00000200006de567 : add dword ptr [rbx], ebp ; ret 0x8a40
0x000002000058726b : add dword ptr [rbx], ebp ; ret 0x90c3
0x0000020000588098 : add dword ptr [rbx], ebx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000157b89 : add dword ptr [rbx], ecx ; pop rcx ; add al, 0xff ; ret 0x8348
0x0000020000199beb : add dword ptr [rbx], ecx ; ret 0x8941
0x0000020000187b36 : add dword ptr [rbx], ecx ; ret 0x90c3
0x0000020000160a2e : add dword ptr [rbx], edi ; ret
0x00000200000c9341 : add dword ptr [rbx], edi ; ret 0x975
0x00000200000c9364 : add dword ptr [rbx], edi ; ret 0xe675
0x00000200005640e7 : add dword ptr [rbx], edi ; ret 0xe75
0x00000200004c31c1 : add dword ptr [rbx], esi ; fild dword ptr [rdi + rcx - 0x49] ; ret
0x00000200004023b0 : add dword ptr [rbx], esi ; fnstenv dword ptr [rbx] ; ret
0x00000200003dfe3e : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200000041d2 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x00000200001d32db : add dword ptr [rbx], esp ; in eax, dx ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x000002000004d3a7 : add dword ptr [rbx], esp ; ret 0xc22b
0x000002000070e27e : add dword ptr [rbx], esp ; ret 0xd2f7
0x00000200000cbd7f : add dword ptr [rbx], esp ; ret 0xd88b
0x0000020000270525 : add dword ptr [rbx], esp ; ret 0xf08b
0x00000200001fcecf : add dword ptr [rbx], esp ; ret 0xf88b
0x0000020000270524 : add dword ptr [rbx], r12d ; ret 0xf08b
0x000002000003b086 : add dword ptr [rcx + 0x1000f9], eax ; add byte ptr [rdi], cl ; ret 0x4489
0x00000200001c058a : add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200006bd8e7 : add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200006e7a90 : add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x00000200006bd8b6 : add dword ptr [rcx + 0x18], eax ; ret
0x000002000006c38c : add dword ptr [rcx + 0x18], ecx ; and qword ptr [rdx + 0x18], 0 ; ret
0x000002000006c38b : add dword ptr [rcx + 0x18], r9d ; and qword ptr [rdx + 0x18], 0 ; ret
0x00000200006ebc93 : add dword ptr [rcx + 0x23], eax ; ret
0x00000200002717e5 : add dword ptr [rcx + 0x23], eax ; ret 0xd08b
0x0000020000013849 : add dword ptr [rcx + 0x33], ecx ; ret 0x2349
0x00000200001a85f2 : add dword ptr [rcx + 0x3b], eax ; enter -0x228b, 0x41 ; mov eax, eax ; ret
0x000002000037080b : add dword ptr [rcx + 0x3b], eax ; ret
0x000002000019ac5d : add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x00000200004d22c3 : add dword ptr [rcx + 0x3b], ecx ; ret
0x00000200001a1e90 : add dword ptr [rcx + 0x3b], ecx ; ret 0x830f
0x000002000011e3c7 : add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x00000200004cecc7 : add dword ptr [rcx + 0x3b], ecx ; sal dword ptr [rbx + 3], 1 ; mov eax, ecx ; ret
0x00000200004c6acf : add dword ptr [rcx + 0x40], ebx ; ret
0x00000200004c6ace : add dword ptr [rcx + 0x40], r11d ; ret
0x00000200005845bf : add dword ptr [rcx + 0x5892045], ecx ; ret
0x0000020000177e2b : add dword ptr [rcx + 0x66], eax ; ret
0x0000020000517597 : add dword ptr [rcx + 0xa], edx ; ret
0x00000200001823ae : add dword ptr [rcx + 0xf], eax ; jmp 0x20000182403
0x0000020000464ec2 : add dword ptr [rcx + 0xf], eax ; mov bh, 0x14 ; or bh, byte ptr [rbx] ; ret 0xe75
0x00000200000ca5a9 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x00000200001e4f9f : add dword ptr [rcx + 0xf], ecx ; mov esp, 0x440f41c0 ; ret 0xc13b
0x00000200003f9839 : add dword ptr [rcx + 0xf], ecx ; ret 0x3b49
0x000002000050b34e : add dword ptr [rcx + 3], eax ; ret 0x4566
0x00000200004a51c4 : add dword ptr [rcx + 4], eax ; ret
0x00000200001adcdc : add dword ptr [rcx + 8], -0x18 ; ret
0x00000200004a51d0 : add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x000002000002a024 : add dword ptr [rcx + rax + 0x48060000], -0x7f ; ret
0x000002000017c136 : add dword ptr [rcx + rax - 0x34], esi ; add rsp, 0x38 ; ret
0x00000200003cb6df : add dword ptr [rcx + rax*8 - 0x36cdfd8b], eax ; mov al, cl ; ret
0x00000200000d864b : add dword ptr [rcx + rcx*4 + 0x33], ecx ; jmp 0x200000d8619
0x0000020000636cf9 : add dword ptr [rcx + rcx*4 + 0x4d], ecx ; adc byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200004d9108 : add dword ptr [rcx + rcx*4 + 0x75], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004f940d : add dword ptr [rcx + rdi + 0x1d], ecx ; ret
0x00000200003c829c : add dword ptr [rcx + rdx + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x000002000040c10c : add dword ptr [rcx - 0x17f914ff], ecx ; ret 0x1a8d
0x000002000012c1b3 : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rax], al ; ret
0x000002000048d552 : add dword ptr [rcx - 0x48], eax ; push rax ; jo 0x2000048d581 ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x00000200001d18da : add dword ptr [rcx - 0x73], eax ; add al, 0x41 ; call rbx
0x00000200001f62b6 : add dword ptr [rcx - 0x75], eax ; enter -0x76b6, 0x44 ; ret
0x0000020000007e74 : add dword ptr [rcx - 0x75], eax ; ret
0x00000200000c819b : add dword ptr [rcx - 0x75], eax ; ret 0x2341
0x00000200001f6a88 : add dword ptr [rcx - 0x75], eax ; ret 0x8b45
0x00000200001f6a6a : add dword ptr [rcx - 0x75], eax ; ret 0xe1f7
0x000002000013203a : add dword ptr [rcx - 0x75], eax ; rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x0000020000131988 : add dword ptr [rcx - 0x75], ecx ; fucomp st(3) ; mov cl, byte ptr [rax - 0x75] ; ret
0x0000020000447b59 : add dword ptr [rcx - 0x75], ecx ; iretd ; call r12
0x000002000045ffc4 : add dword ptr [rcx - 0x75], ecx ; iretd ; call rbx
0x0000020000447501 : add dword ptr [rcx - 0x75], ecx ; iretd ; call rsi
0x00000200000b266b : add dword ptr [rcx - 0x75], ecx ; or dword ptr [rcx - 0x75], eax ; ret 0xe083
0x00000200000e0011 : add dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x0000020000160219 : add dword ptr [rcx - 0x76], eax ; ret
0x00000200001f6de8 : add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x0000020000132a35 : add dword ptr [rcx - 0x76], esi ; push rcx ; sbb dh, dh ; ret 0x7510
0x00000200003a15ea : add dword ptr [rcx - 0x77], eax ; add byte ptr [rbx], bh ; ret 0xad72
0x000002000017720d : add dword ptr [rcx - 0x77], ecx ; call 0x1ffc3378162
0x0000020000154ee5 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0xff48
0x0000020000100f97 : add dword ptr [rcx - 0x7b], eax ; ret
0x00000200001a1960 : add dword ptr [rcx - 0x7cb7fcbd], ecx ; ret
0x000002000059a0c3 : add dword ptr [rcx - 0x7d], eax ; ret
0x000002000069b3e0 : add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200001af70b : add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200001c611f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000002000069c8d0 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x00000200004d2826 : add dword ptr [rcx - 0x7f], ecx ; ret
0x0000020000004605 : add dword ptr [rcx - 0x7f], ecx ; ret 0x1000
0x000002000045be89 : add dword ptr [rcx - 0x9beb3bf], ecx ; ret
0x0000020000054b61 : add dword ptr [rcx - 0xa], eax ; ret
0x00000200001d8fd6 : add dword ptr [rcx - 0xa], esi ; ret
0x00000200006c4c80 : add dword ptr [rcx - 1], eax ; ret
0x00000200001a3e79 : add dword ptr [rcx - 1], eax ; ret 0x8348
0x000002000054f4dc : add dword ptr [rcx - 1], ecx ; leave ; jne 0x2000054f4d4 ; ret
0x000002000058f28c : add dword ptr [rcx - 1], ecx ; ret
0x000002000069c8f4 : add dword ptr [rcx - 1], ecx ; ret 0xff49
0x00000200001b8ed1 : add dword ptr [rcx - 4], eax ; cmp rcx, r8 ; jb 0x200001b8ecd ; ret
0x000002000042baf1 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000003decc : add dword ptr [rcx], eax ; add dword ptr [rax + 0x23], ecx ; ret
0x00000200001f1ee2 : add dword ptr [rcx], eax ; add dword ptr [rax - 0x2f], ecx ; call 0x20048e1423c
0x000002000003deca : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0x23], ecx ; ret
0x000002000003dec8 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0x23], ecx ; ret
0x0000020000199d69 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x0000020000199d6b : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x0000020000199d6d : add dword ptr [rcx], eax ; add edi, edi ; ret 0x8b49
0x0000020000573550 : add dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000200006a1041 : add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x00000200005bde91 : add dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200004c6658 : add dword ptr [rcx], ebx ; ret
0x000002000053f880 : add dword ptr [rcx], ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x88
0x000002000055c6b9 : add dword ptr [rcx], edi ; pop rbp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000020000046fd9 : add dword ptr [rcx], edi ; ret
0x0000020000004c35 : add dword ptr [rcx], edx ; ret
0x00000200004c6657 : add dword ptr [rcx], r11d ; ret
0x000002000057354f : add dword ptr [rcx], r8d ; mov eax, 1 ; ret
0x00000200006e2c07 : add dword ptr [rdi + 0x3d0], 0x40 ; mov rax, rdx ; jmp 0x200006e2c1e
0x000002000069b25e : add dword ptr [rdi + 0x3d0], ebx ; mov rax, rdx ; jmp 0x2000069b273
0x000002000069e48d : add dword ptr [rdi + 0x3d0], ebx ; mov rax, rdx ; jmp 0x2000069e4a2
0x00000200006d6d6d : add dword ptr [rdi + 0x3d0], ebx ; mov rax, rdx ; jmp 0x200006d6d82
0x00000200006d6a64 : add dword ptr [rdi + 0x3d0], edi ; mov rax, rdx ; jmp 0x200006d6a79
0x000002000069e82f : add dword ptr [rdi + 0x3d0], edx ; mov rax, rdx ; jmp 0x2000069e844
0x000002000069fe24 : add dword ptr [rdi + 0x3d0], edx ; mov rax, rdx ; jmp 0x2000069fe39
0x00000200006d298a : add dword ptr [rdi + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006d299f
0x00000200006dfe7d : add dword ptr [rdi + 0x3d0], edx ; mov rax, rdx ; jmp 0x200006dfe92
0x000002000069e82e : add dword ptr [rdi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x2000069e845
0x000002000069fe23 : add dword ptr [rdi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x2000069fe3a
0x00000200006d2989 : add dword ptr [rdi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006d29a0
0x00000200006dfe7c : add dword ptr [rdi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x200006dfe93
0x000002000069b25d : add dword ptr [rdi + 0x3d0], r11d ; mov rax, rdx ; jmp 0x2000069b274
0x000002000069e48c : add dword ptr [rdi + 0x3d0], r11d ; mov rax, rdx ; jmp 0x2000069e4a3
0x00000200006d6d6c : add dword ptr [rdi + 0x3d0], r11d ; mov rax, rdx ; jmp 0x200006d6d83
0x00000200006d6a63 : add dword ptr [rdi + 0x3d0], r15d ; mov rax, rdx ; jmp 0x200006d6a7a
0x000002000011b5c5 : add dword ptr [rdi + rax - 0x75], esi ; add eax, 0x23bc66 ; ret
0x0000020000381a37 : add dword ptr [rdi + rcx + 0x20], eax ; ret
0x000002000058be20 : add dword ptr [rdi + rcx + 0x45], eax ; ret
0x0000020000174c97 : add dword ptr [rdi + rcx - 0x49], eax ; ret 0x3b66
0x0000020000114e5a : add dword ptr [rdi + rcx - 0x75], esi ; ret
0x00000200000c3ccd : add dword ptr [rdi + rsi - 0xa], esi ; ret 0x7420
0x000002000009060f : add dword ptr [rdi - 0x3fc2fa2a], eax ; ret
0x00000200003e027f : add dword ptr [rdi - 0x5e], ebx ; mov rax, rdx ; jmp 0x200003e0260
0x000002000059f3b4 : add dword ptr [rdi], ebx ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000038b674
0x00000200006a1042 : add dword ptr [rdi], ecx ; add dword ptr [rdx], ecx ; ret
0x00000200003fd8b9 : add dword ptr [rdi], ecx ; ja 0x200003fd8c6 ; mov al, cl ; ret
0x0000020000017064 : add dword ptr [rdi], ecx ; mov bh, 0xa ; sub eax, ecx ; ret
0x0000020000101ec9 : add dword ptr [rdi], ecx ; mov dr1, word ptr [rdx] ; mov edx, 0x8b48000e ; ret
0x00000200000b503b : add dword ptr [rdi], ecx ; mov fs, word ptr [rdi + rax*4 - 0x74b7ffed] ; ret
0x00000200001620b5 : add dword ptr [rdi], ecx ; ret 0x521
0x00000200000a389c : add dword ptr [rdi], ecx ; scasb al, byte ptr [rdi] ; clc ; ret 0
0x00000200001dd95a : add dword ptr [rdi], ecx ; test bh, dl ; mov esp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200003d7ee3 : add dword ptr [rdi], ecx ; test byte ptr [rax - 0x75000000], bh ; ret
0x0000020000035927 : add dword ptr [rdi], ecx ; test byte ptr [rbp - 0x74fffffa], cl ; ret
0x0000020000027a98 : add dword ptr [rdi], ecx ; test byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000e1be6 : add dword ptr [rdi], ecx ; test byte ptr [rdx + rax], bh ; add byte ptr [rax - 0x75], cl ; ret
0x000002000047146e : add dword ptr [rdi], ecx ; test byte ptr [rdx], bl ; or byte ptr [rax], al ; add dh, dh ; ret
0x000002000014a114 : add dword ptr [rdi], ecx ; test byte ptr [rsi - 0x66], cl ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001dd9cd : add dword ptr [rdi], ecx ; test ch, bh ; xchg dh, ah ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200000eac06 : add dword ptr [rdi], ecx ; test dh, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x0000020000025f0d : add dword ptr [rdi], ecx ; test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007102a : add dword ptr [rdi], ecx ; test dword ptr [rax + rax - 0x8b80000], ebx ; ret
0x0000020000701760 : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0x76000000], eax ; ret 0x3242
0x0000020000395365 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0xf02
0x00000200000e285d : add dword ptr [rdi], ecx ; test dword ptr [rcx + 0xf], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000407f6c : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x9ffdf7a], edi ; ret
0x00000200001dd938 : add dword ptr [rdi], ecx ; test dword ptr [rcx], esp ; xchg esi, esp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000634a40 : add dword ptr [rdi], ecx ; test dword ptr [rdi - 0xffffc4], esi ; ret
0x00000200000d55de : add dword ptr [rdi], ecx ; test dword ptr [rdi*8 - 0x74b70001], edi ; ret
0x000002000005dc4d : add dword ptr [rdi], ecx ; test dword ptr [rdx - 0x9ffe77d], ebp ; ret 0x7501
0x00000200005bb821 : add dword ptr [rdi], ecx ; test dword ptr [rdx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000128b43 : add dword ptr [rdi], ecx ; test dword ptr [rdx], edx ; mov word ptr [rdx], es ; add dh, dh ; ret
0x00000200005da887 : add dword ptr [rdi], ecx ; test dword ptr [rip - 0x1594], edi ; ret
0x0000020000025f1c : add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x74ffe46e], ebx ; ret
0x0000020000101e2b : add dword ptr [rdi], ecx ; test dword ptr [rsi], edx ; jae 0x20000101e45 ; add dh, dh ; ret
0x0000020000049eeb : add dword ptr [rdi], ecx ; test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e811b : add dword ptr [rdi], ecx ; test ebp, eax ; ret
0x0000020000039cf3 : add dword ptr [rdi], ecx ; test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x0000020000499b40 : add dword ptr [rdi], ecx ; test ebp, esp ; ret
0x00000200003df82c : add dword ptr [rdi], ecx ; test ebx, edi ; mov ecx, 0xf6410022 ; ret
0x00000200001413e7 : add dword ptr [rdi], ecx ; test ebx, esi ; std ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000364738 : add dword ptr [rdi], ecx ; test ecx, ebp ; ret 0
0x00000200003a9df7 : add dword ptr [rdi], ecx ; test edi, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000000e1ed : add dword ptr [rdi], ecx ; test esp, esp ; and al, 0x1e ; add dh, dh ; ret
0x0000020000502105 : add dword ptr [rdi], ecx ; xchg dword ptr [rdx], eax ; push rcx ; sldt word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000049771c : add dword ptr [rdi], ecx ; xchg dword ptr [rsi - 0x74ffe8df], edx ; ret 0x1b9
0x00000200003ca422 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000020000180132 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200005d3ea8 : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200006ec4ea : add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200003f6f64 : add dword ptr [rdx + 0x18], eax ; ret
0x000002000046b1e5 : add dword ptr [rdx + 0x22410241], ecx ; ret 0x3a41
0x000002000041dd48 : add dword ptr [rdx + 0x2b], eax ; add al, 0x82 ; sub eax, ecx ; ret
0x00000200005e6dfe : add dword ptr [rdx + 0xf], eax ; mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x00000200001c2b5e : add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x0000020000366549 : add dword ptr [rdx + rax - 0xd], esi ; ret
0x00000200000d92b1 : add dword ptr [rdx + rax - 1], esi ; ret 0x428d
0x0000020000464fa5 : add dword ptr [rdx + rbp*8 - 0x75], esi ; ret 0xc8a3
0x0000020000461322 : add dword ptr [rdx + rbx - 0xa], esi ; ret
0x000002000053b35a : add dword ptr [rdx + rbx*2 - 0xa], esi ; ret
0x0000020000124ebb : add dword ptr [rdx + rcx*4 - 0x6e], eax ; ret
0x00000200000c045d : add dword ptr [rdx + rcx*4 - 0x76], eax ; ret
0x00000200001091e5 : add dword ptr [rdx + rdx - 0x75], esi ; adc dil, dil ; ret 0x8348
0x00000200001174fa : add dword ptr [rdx + rdx - 1], esi ; ret
0x0000020000391b42 : add dword ptr [rdx + rdx*8 - 0x41f0f18c], eax ; ret 0x3b44
0x0000020000147dbf : add dword ptr [rdx - 0x3b7cb73d], ecx ; push rax ; pop rbx ; ret
0x00000200000254fa : add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x00000200001a26b3 : add dword ptr [rdx], ecx ; ret
0x00000200001ba1e1 : add dword ptr [rdx], ecx ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000472d57 : add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200000c84a6 : add dword ptr [rdx], edx ; add byte ptr [rbp - 0x74befeb5], cl ; ret 0x2341
0x00000200006f3fbb : add dword ptr [rdx], esi ; cwde ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005eb6c7 : add dword ptr [rdx], esi ; fdiv st(6) ; ret
0x000002000017416e : add dword ptr [rip + 0x110e80], eax ; ret
0x0000020000547c43 : add dword ptr [rip - 0x49f00027], ebx ; ret
0x000002000057b872 : add dword ptr [rsi + 0x20], ebp ; jmp 0x2000057b890
0x000002000057b871 : add dword ptr [rsi + 0x20], r13d ; jmp 0x2000057b891
0x0000020000599874 : add dword ptr [rsi + 0x23], esp ; ret 0x4b2
0x0000020000159103 : add dword ptr [rsi + 0x39], esp ; add sil, byte ptr [r11 + 3] ; xor al, al ; ret
0x000002000055709f : add dword ptr [rsi + 0x3b], esi ; ret 0x2274
0x00000200000bdbef : add dword ptr [rsi + 0x3b], esp ; ret 0x5874
0x00000200006d5f47 : add dword ptr [rsi + 0x3d0], 0x10 ; mov rax, rdx ; jmp 0x200006d5f5e
0x00000200006d5fb8 : add dword ptr [rsi + 0x3d0], 0x10 ; mov rax, rdx ; jmp 0x200006d5fcf
0x00000200006df4a1 : add dword ptr [rsi + 0x3d0], ebp ; mov rax, rdx ; jmp 0x200006df4b6
0x000002000069bf8a : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x2000069bf9f
0x000002000069cccb : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x2000069cce0
0x000002000069dfa7 : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x2000069dfbc
0x000002000069f963 : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x2000069f978
0x00000200006e31ec : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006e3201
0x00000200006e476d : add dword ptr [rsi + 0x3d0], ecx ; mov rax, rdx ; jmp 0x200006e4782
0x00000200006e3c6f : add dword ptr [rsi + 0x3d0], edi ; mov rax, rdx ; jmp 0x200006e3c84
0x000002000069c558 : add dword ptr [rsi + 0x3d0], edx ; mov rax, rdx ; jmp 0x2000069c56d
0x000002000069c696 : add dword ptr [rsi + 0x3d0], edx ; mov rax, rdx ; jmp 0x2000069c6ab
0x000002000069f019 : add dword ptr [rsi + 0x3d0], edx ; mov rax, rdx ; jmp 0x2000069f02e
0x000002000069d0af : add dword ptr [rsi + 0x3d0], esp ; mov rax, rdx ; jmp 0x2000069d0c4
0x000002000069c557 : add dword ptr [rsi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x2000069c56e
0x000002000069c695 : add dword ptr [rsi + 0x3d0], r10d ; mov rax, rdx ; jmp 0x2000069c6ac
0x000002000069d0ae : add dword ptr [rsi + 0x3d0], r12d ; mov rax, rdx ; jmp 0x2000069d0c5
0x000002000069bf89 : add dword ptr [rsi + 0x3d0], r9d ; mov rax, rdx ; jmp 0x2000069bfa0
0x000002000069ccca : add dword ptr [rsi + 0x3d0], r9d ; mov rax, rdx ; jmp 0x2000069cce1
0x00000200006e31eb : add dword ptr [rsi + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006e3202
0x00000200006e476c : add dword ptr [rsi + 0x3d0], r9d ; mov rax, rdx ; jmp 0x200006e4783
0x0000020000391ba3 : add dword ptr [rsi + 0x41], esp ; mov dword ptr [rcx + 2], ecx ; xor eax, eax ; ret
0x00000200003d7244 : add dword ptr [rsi + 0xb], esi ; shr edi, 1 ; add edi, r14d ; jmp 0x200003d721a
0x000002000012d2b6 : add dword ptr [rsi + 1], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x000002000011f031 : add dword ptr [rsi + 3], esp ; ret
0x0000020000136bce : add dword ptr [rsi + 9], esi ; test dl, dl ; jne 0x20000136bf2 ; call 0x20000072e49
0x00000200000b29ae : add dword ptr [rsi + rax - 0x48], esi ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003c0639 : add dword ptr [rsi + rax - 1], esi ; ret
0x0000020000050d34 : add dword ptr [rsi + rbx - 0xa], esi ; ret 0x7404
0x0000020000061faa : add dword ptr [rsi + rcx - 0x18], esi ; ret 0x115a
0x0000020000449be9 : add dword ptr [rsi + rsi - 0x75], esi ; ret
0x00000200004e6341 : add dword ptr [rsi - 0x7b], esp ; sal byte ptr [rcx + rdx + 0x41], 0xff ; ret
0x00000200005da840 : add dword ptr [rsi - 0x7d], esp ; ret 0x4902
0x00000200004739a1 : add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x00000200000bf2aa : add dword ptr [rsi - 0x7d], esp ; rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x00000200005849e1 : add dword ptr [rsi - 1], esp ; ret 0x4166
0x0000020000378d86 : add dword ptr [rsi - 1], esp ; ret 0x8d48
0x0000020000665292 : add dword ptr [rsi], 0x33258300 ; scasb al, byte ptr [rdi] ; ret 0xfdff
0x00000200002120a2 : add dword ptr [rsi], 0xd640f ; sysenter
0x000002000020011e : add dword ptr [rsi], edi ; hlt ; dec dword ptr [rbp - 0x75] ; ret
0x00000200004eccdb : add dword ptr [rsp + rdx], -0x75 ; ret
0x00000200000de6a4 : add dword ptr cs:[rax], eax ; add bh, bh ; ret
0x000002000066068f : add dword ptr cs:[rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200006d0f4d : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004c127a : add dword ptr fs:[rax], eax ; add byte ptr [rdi], cl ; mov bh, cl ; ret
0x0000020000113753 : add dword ptr fs:[rax], eax ; add cl, ch ; ret 0
0x000002000063e6f3 : add dword ptr gs:[r8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a6561 : add dword ptr ss:[rax], eax ; add bh, bh ; ret
0x0000020000425e9a : add dx, cx ; movzx eax, dx ; ret
0x000002000010565e : add eax, -0x20 ; ret
0x0000020000399dac : add eax, -4 ; add rsp, 0x28 ; ret
0x0000020000656635 : add eax, -8 ; ret
0x000002000064c9b5 : add eax, 0x10 ; cmp edx, 0x3c ; jb 0x2000064c9b6 ; ret
0x00000200004e2c56 : add eax, 0x10 ; cmp rax, rcx ; jl 0x200004e2c50 ; ret
0x000002000019fbc1 : add eax, 0x10 ; jmp 0x2000019fbe9
0x00000200001a039a : add eax, 0x10 ; jmp 0x200001a03c2
0x00000200004f48f3 : add eax, 0x10 ; ret
0x00000200004e1d43 : add eax, 0x1004 ; add rax, rdx ; ret
0x00000200004f48f1 : add eax, 0x10c08348 ; ret
0x000002000017416f : add eax, 0x110e80 ; ret
0x000002000016c802 : add eax, 0x114f71 ; call rax
0x000002000016c6f0 : add eax, 0x115083 ; call rax
0x000002000016c235 : add eax, 0x115536 ; call rax
0x0000020000169381 : add eax, 0x117f4a ; ret
0x0000020000168fd1 : add eax, 0x1182fe ; ret
0x00000200004f27b1 : add eax, 0x119e9 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; ret 0xdd92
0x00000200000c4afb : add eax, 0x11bc4100 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200001ca7af : add eax, 0x11d3d4 ; jmp 0x200000f6a67
0x0000020000140305 : add eax, 0x1338e2 ; add rsp, 0x28 ; ret
0x0000020000149fac : add eax, 0x13778f ; add al, 0 ; add byte ptr [rax], al ; call rdi
0x000002000040c118 : add eax, 0x138e9 ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x0000020000139a77 : add eax, 0x139c34 ; setb al ; ret
0x0000020000143be8 : add eax, 0x13db2b ; je 0x20000143c0b ; call rcx
0x000002000019fbb7 : add eax, 0x14 ; jmp 0x2000019fbe9
0x00000200001a0390 : add eax, 0x14 ; jmp 0x200001a03c2
0x00000200001c2c39 : add eax, 0x14408a ; ret
0x000002000013c56e : add eax, 0x144d5d ; ret
0x00000200001c23b7 : add eax, 0x1460e4 ; add rsp, 0x38 ; ret
0x000002000013aee2 : add eax, 0x14a10d ; ret
0x0000020000141d04 : add eax, 0x14c077 ; xor eax, eax ; ret
0x0000020000142568 : add eax, 0x14ff1b ; jmp 0x2000003e85e
0x000002000017930a : add eax, 0x153691 ; ret
0x000002000013c343 : add eax, 0x154610 ; ret
0x0000020000141db7 : add eax, 0x156484 ; ret
0x00000200001788fe : add eax, 0x15a3b9 ; mov al, 1 ; ret
0x000002000013b102 : add eax, 0x1640f1 ; ret
0x0000020000107db0 : add eax, 0x16d6c3 ; add rsp, 0x28 ; ret
0x00000200001691a1 : add eax, 0x170a5e ; ret
0x00000200001688bb : add eax, 0x17144c ; ret
0x00000200006533fd : add eax, 0x17d26 ; ret
0x00000200004d5088 : add eax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dee88 : add eax, 0x18 ; dec rcx ; jne 0x200004dee8e ; ret
0x000002000019fbad : add eax, 0x18 ; jmp 0x2000019fbe9
0x00000200001a0386 : add eax, 0x18 ; jmp 0x200001a03c2
0x000002000003a1cc : add eax, 0x18 ; ret
0x00000200003e64f2 : add eax, 0x180e9 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200001d5438 : add eax, 0x181fab ; call rax
0x00000200001622ed : add eax, 0x183d42 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001621f3 : add eax, 0x183dac ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000162258 : add eax, 0x183dd7 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200004ff6d2 : add eax, 0x184bf1 ; ret
0x00000200001cd330 : add eax, 0x18a183 ; call r8
0x00000200004f9059 : add eax, 0x18a56a ; ret
0x00000200000ee252 : add eax, 0x192863 ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x00000200001bee11 : add eax, 0x1982a6 ; mov dword ptr [r8], eax ; ret
0x0000020000020eab : add eax, 0x19894466 ; ret
0x0000020000168e74 : add eax, 0x19de97 ; add rsp, 0x28 ; ret
0x0000020000162223 : add eax, 0x1a4adc ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200000936af : add eax, 0x1ac10510 ; ret
0x0000020000139a4a : add eax, 0x1ae231 ; jne 0x20000139a59 ; ret
0x0000020000508af5 : add eax, 0x1b41c01b ; ret 0xb941
0x0000020000508b7a : add eax, 0x1b41c01b ; ret 0xc085
0x000002000064fac4 : add eax, 0x1b5e7 ; ret
0x000002000064fab7 : add eax, 0x1b5f4 ; ret
0x00000200000ee80a : add eax, 0x1b8 ; add bl, al ; xor eax, eax ; ret
0x000002000019fba3 : add eax, 0x1c ; jmp 0x2000019fbe9
0x00000200001a037c : add eax, 0x1c ; jmp 0x200001a03c2
0x0000020000106005 : add eax, 0x1c68ba ; add rsp, 0x28 ; ret
0x000002000064e9a2 : add eax, 0x1c831 ; add rsp, 0x28 ; ret
0x00000200000aecff : add eax, 0x1c8418 ; je 0x200000aed0e ; ret
0x0000020000183bd9 : add eax, 0x1cc4a2 ; ret
0x000002000064e429 : add eax, 0x1cede ; xor eax, eax ; ret
0x00000200000f9ef2 : add eax, 0x1d20c9 ; ret
0x00000200004ac43c : add eax, 0x1d6e27 ; mov word ptr [rdx], ax ; ret
0x0000020000174100 : add eax, 0x1e2f6f ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000101430 : add eax, 0x1e692d ; ret
0x0000020000101409 : add eax, 0x1e6954 ; jne 0x20000101445 ; ret
0x000002000016ac39 : add eax, 0x1ec87a ; call rax
0x00000200001620ba : add eax, 0x1f4fb1 ; ret
0x000002000016209b : add eax, 0x1f4fd0 ; ret
0x0000020000161061 : add eax, 0x1f6452 ; call rax
0x0000020000160f4e : add eax, 0x1f6565 ; call rax
0x0000020000160cbd : add eax, 0x1f67f6 ; call rax
0x0000020000160bec : add eax, 0x1f68c7 ; call rax
0x0000020000160a57 : add eax, 0x1f6a5c ; call rax
0x00000200001609bf : add eax, 0x1f6af4 ; call r8
0x000002000052660d : add eax, 0x1ffd62d ; add al, ch ; push rax ; ret
0x00000200000de08b : add eax, 0x20 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004386e7 : add eax, 0x20 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000051081 : add eax, 0x20 ; add rsp, 0x28 ; ret
0x0000020000589419 : add eax, 0x20 ; ret
0x000002000014a789 : add eax, 0x20ca3a ; ret
0x0000020000149ed9 : add eax, 0x20d30e ; ret
0x0000020000144b82 : add eax, 0x212b21 ; ret
0x00000200001413cf : add eax, 0x216034 ; sete al ; ret
0x0000020000140f53 : add eax, 0x2160b4 ; ret
0x000002000013fa04 : add eax, 0x217659 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000013f9e0 : add eax, 0x21767d ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000b1b02 : add eax, 0x219e39 ; ret
0x00000200000ade65 : add eax, 0x21d9d4 ; add rsp, 0x28 ; ret
0x000002000025ee71 : add eax, 0x220024 ; add byte ptr [rax], al ; ret
0x000002000012edcd : add eax, 0x2286e6 ; call rax
0x000002000012ed6e : add eax, 0x228745 ; call rax
0x000002000018ed48 : add eax, 0x22e8 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001273d6 : add eax, 0x22fdd5 ; mov qword ptr [rcx + 0x68], rax ; ret
0x000002000011ea78 : add eax, 0x23480000 ; ret 0x8948
0x0000020000050a0f : add eax, 0x23480000 ; ret 0x8d48
0x000002000017754e : add eax, 0x238348f0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000011b5c9 : add eax, 0x23bc66 ; ret
0x000002000011b5d9 : add eax, 0x23bf7e ; ret
0x0000020000030e62 : add eax, 0x2421c9 ; ret
0x0000020000039b23 : add eax, 0x24f62c ; add rsp, 0x28 ; ret
0x00000200000faaa8 : add eax, 0x25c93b ; call rax
0x00000200000fa820 : add eax, 0x25cbc3 ; call rax
0x00000200000e993f : add eax, 0x26d6c8 ; ret
0x0000020000003504 : add eax, 0x271f77 ; ret
0x000002000001dc5d : add eax, 0x2733c6 ; mov qword ptr [rdx], rax ; ret
0x000002000008ee8a : add eax, 0x274b5945 ; in eax, 0xa ; ret
0x000002000019e221 : add eax, 0x28 ; test edx, edx ; jne 0x2000019e205 ; mov al, 1 ; ret
0x0000020000016b51 : add eax, 0x280326 ; ret
0x00000200001064bc : add eax, 0x28418b48 ; ret
0x0000020000014c00 : add eax, 0x28c48348 ; ret
0x00000200000b8b51 : add eax, 0x29762a ; ret
0x00000200000a92d1 : add eax, 0x2add3e ; ret
0x00000200005ba85c : add eax, 0x2b41c28b ; ret 0x1b9
0x00000200004d8a1d : add eax, 0x2b450000 ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d4c
0x0000020000574f50 : add eax, 0x2b480000 ; ret 0x8b48
0x00000200004c4fa3 : add eax, 0x2bc68b00 ; ret 0x3b44
0x000002000002047b : add eax, 0x2bc68b41 ; ret 0x2b44
0x00000200000283ec : add eax, 0x2bf6c7 ; add rsp, 0x28 ; ret
0x000002000006fa7f : add eax, 0x2e75f0 ; ret
0x000002000006f9d9 : add eax, 0x2e76ce ; ret
0x000002000005d2c7 : add eax, 0x2f9fc0 ; setne al ; ret
0x000002000064d87f : add eax, 0x30 ; cmp qword ptr [r8], rax ; jne 0x2000064d881 ; ret
0x0000020000175087 : add eax, 0x3001e57 ; ret 0x48b
0x000002000005658a : add eax, 0x300a79 ; dec eax ; ret
0x000002000005462e : add eax, 0x3029d9 ; mov dword ptr [rcx + 0x2c], eax ; ret
0x0000020000030870 : add eax, 0x326c43 ; call rax
0x0000020000030737 : add eax, 0x326d7c ; call rax
0x0000020000029cf2 : add eax, 0x32d369 ; ret
0x000002000056db8e : add eax, 0x3345ffee ; leave ; call 0x2000019a815
0x00000200000228ce : add eax, 0x334c15 ; sub rax, rcx ; ret
0x0000020000021ce0 : add eax, 0x33537f ; ret
0x0000020000021cd5 : add eax, 0x335386 ; jne 0x20000021ce6 ; ret
0x000002000001c391 : add eax, 0x33afb6 ; ret
0x00000200000155ef : add eax, 0x341ec4 ; call rax
0x0000020000013da9 : add eax, 0x34370a ; call rax
0x0000020000013d36 : add eax, 0x34377d ; call rax
0x0000020000013c44 : add eax, 0x34386f ; call rax
0x0000020000013bde : add eax, 0x3438d5 ; call r8
0x000002000001057f : add eax, 0x346f34 ; call rax
0x000002000001050c : add eax, 0x346fa7 ; call rax
0x000002000000f4c9 : add eax, 0x347fea ; call rax
0x00000200001509b9 : add eax, 0x3480000 ; ret
0x000002000045c92d : add eax, 0x3480000 ; ret 0x3d48
0x0000020000072a33 : add eax, 0x3480000 ; ror byte ptr [rax - 0x75], 0x14 ; ret
0x0000020000072d03 : add eax, 0x3480000 ; ror byte ptr [rax - 0x75], 0xc ; ret
0x000002000000f304 : add eax, 0x3481af ; call rax
0x000002000000f268 : add eax, 0x34824b ; call rax
0x000002000000f13f : add eax, 0x348374 ; call rax
0x000002000000f107 : add eax, 0x3483ac ; call rax
0x000002000000f0aa : add eax, 0x348409 ; call rax
0x000002000000efa7 : add eax, 0x34850c ; call rax
0x000002000000c595 : add eax, 0x34af1e ; call rax
0x000002000000c4b1 : add eax, 0x34b002 ; call rax
0x000002000000c405 : add eax, 0x34b0ae ; call rax
0x000002000000c321 : add eax, 0x34b192 ; call rax
0x000002000000c2da : add eax, 0x34b1d9 ; call rax
0x000002000000c22b : add eax, 0x34b288 ; call rax
0x00000200000e9bd9 : add eax, 0x34c0000 ; ret 0xb848
0x00000200006cd140 : add eax, 0x34cff33 ; ret 0x8b4c
0x000002000038dd2a : add eax, 0x378 ; ret
0x000002000064769e : add eax, 0x3868ba0f ; adc al, 0xf6 ; ret
0x0000020000010f17 : add eax, 0x38c48348 ; ret
0x0000020000180dbd : add eax, 0x3b000000 ; ret 0x1077
0x0000020000110b09 : add eax, 0x3b000000 ; ret 0x973
0x00000200001f093a : add eax, 0x3b018b41 ; ret
0x00000200001e8923 : add eax, 0x3b440000 ; ret
0x000002000045ddd5 : add eax, 0x3b480000 ; ret 0x830f
0x00000200005fadac : add eax, 0x3b480000 ; ret 0xdf73
0x00000200000935ff : add eax, 0x3b92050b ; ret
0x00000200006074d7 : add eax, 0x3bffb39f ; ret
0x00000200001a1adf : add eax, 0x3d70c8d ; ret
0x00000200000c795b : add eax, 0x40 ; jne 0x200000c7938 ; sfence ; ret
0x000002000012524a : add eax, 0x40 ; ret
0x0000020000391cdf : add eax, 0x41800000 ; pop rsi ; ret
0x000002000037f32f : add eax, 0x4770000 ; mov al, r8b ; ret
0x00000200000c473e : add eax, 0x47894900 ; and dh, dh ; ret 0xf02
0x0000020000171c3f : add eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x00000200000ccb10 : add eax, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x000002000016a972 : add eax, 0x48c38b00 ; add esp, 0x30 ; pop rbx ; ret
0x000002000048675f : add eax, 0x48c48348 ; ret
0x000002000041c867 : add eax, 0x48ffff75 ; add esp, 0x38 ; ret
0x00000200000dd3af : add eax, 0x49000dc6 ; add ecx, ecx ; jmp rcx
0x00000200004c541d : add eax, 0x4a8d4800 ; sbb byte ptr [rbp - 0x75], al ; ret
0x00000200001b9231 : add eax, 0x4d5e16 ; ret
0x00000200005429eb : add eax, 0x5e410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000019a92d : add eax, 0x5f410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000056441 : add eax, 0x62ce4e ; ret
0x0000020000177e1f : add eax, 0x6641ff66 ; ret
0x00000200001bf295 : add eax, 0x66800000 ; mov dword ptr [rcx], r11d ; ret
0x000002000014d924 : add eax, 0x73c23b44 ; mov r8d, edx ; jmp 0x2000014d97a
0x000002000018bed6 : add eax, 0x7404c3f6 ; and dh, dh ; ret
0x0000020000556b0e : add eax, 0x74800000 ; or cl, byte ptr [rbx] ; fcompi st(7) ; ret
0x0000020000053823 : add eax, 0x74c08500 ; ret 0x8d48
0x0000020000122abf : add eax, 0x74c08545 ; adc dword ptr [rbp + 0x3b], eax ; ret 0x2f89
0x000002000011652a : add eax, 0x7502c2f6 ; ret 0x8d49
0x0000020000156583 : add eax, 0x7520f883 ; cmp dh, dh ; ret
0x00000200001634f4 : add eax, 0x75313844 ; or bh, bh ; ret 0x8348
0x00000200004459da : add eax, 0x78c48348 ; ret
0x00000200000eef81 : add eax, 0x80400000 ; call qword ptr [rcx]
0x00000200000ba3f4 : add eax, 0x81480000 ; ret
0x0000020000129aa5 : add eax, 0x81480000 ; ret 0x590
0x00000200006d3258 : add eax, 0x8303eac1 ; shl dword ptr [rcx + 0x41], -0x75 ; ret 0xe1c1
0x00000200000bb2d9 : add eax, 0x83410000 ; call qword ptr [rax]
0x000002000011dfd3 : add eax, 0x83480000 ; ret
0x00000200001aefc4 : add eax, 0x83480000 ; retf ; call rbx
0x000002000064d38f : add eax, 0x83490000 ; ret
0x00000200001f6eac : add eax, 0x83ffee77 ; ret
0x00000200000e6569 : add eax, 0x8418b48 ; ret
0x0000020000188e2b : add eax, 0x84410000 ; ret
0x00000200005eb523 : add eax, 0x84ffec7e ; ror byte ptr [rdi], 0x85 ; ret 0xe5c1
0x00000200006c66cf : add eax, 0x850 ; ret
0x000002000050a89d : add eax, 0x8608348 ; add byte ptr [rcx - 1], al ; ret
0x00000200005c0437 : add eax, 0x8920408b ; add eax, dword ptr [rcx - 0x75] ; ret
0x0000020000073e2a : add eax, 0x8941d033 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x0000020000056e97 : add eax, 0x8b0000af ; ret
0x000002000040839f : add eax, 0x8b0018ec ; ret
0x000002000058cfec : add eax, 0x8b01b641 ; ret
0x000002000012ae08 : add eax, 0x8b085d8b ; ret
0x000002000011f618 : add eax, 0x8b1fe283 ; ret 0xe083
0x000002000063448a : add eax, 0x8b41ffc4 ; ret
0x00000200001e6aa9 : add eax, 0x8b41fff1 ; ret
0x000002000013e91d : add eax, 0x8b440000 ; ret
0x00000200001394aa : add eax, 0x8b45001a ; ret
0x00000200000db48f : add eax, 0x8b480000 ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000126903 : add eax, 0x8b480000 ; ret
0x00000200001b597f : add eax, 0x8b480000 ; ret 0x8341
0x0000020000184f33 : add eax, 0x8b48000f ; ret 0xc148
0x000002000018f40c : add eax, 0x8b487875 ; ret
0x00000200001d9437 : add eax, 0x8b48fff0 ; ret
0x0000020000108309 : add eax, 0x8b48fffe ; ret
0x00000200004492cc : add eax, 0x8b490000 ; enter -0x3618, -0x26 ; ret 0x4cff
0x00000200000b2930 : add eax, 0x8b490000 ; ret
0x0000020000576084 : add eax, 0x8b4c0000 ; ret
0x00000200005e0518 : add eax, 0x8bd00348 ; ret
0x000002000052a492 : add eax, 0x8bf38a40 ; ret
0x00000200004c2637 : add eax, 0x8bffbb08 ; ret
0x0000020000398cb7 : add eax, 0x8bffcde5 ; ret
0x0000020000133797 : add eax, 0x8bfff2e6 ; ret
0x000002000017e317 : add eax, 0x8bfff5db ; ret
0x0000020000441d76 : add eax, 0x90048d49 ; ret
0x000002000038ca67 : add eax, 0x983a7e8 ; add bh, bh ; ret
0x00000200001f01be : add eax, 0xa ; ret
0x00000200001eeae0 : add eax, 0xa0b9 ; add byte ptr [rax + 0x63], cl ; ret
0x0000020000604158 : add eax, 0xa1fe52e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000019c97a : add eax, 0xac00 ; ret
0x000002000038fff7 : add eax, 0xac994 ; call rax
0x0000020000645351 : add eax, 0xaec759e8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000b0ee6 : add eax, 0xb60f0000 ; ret
0x00000200001478bf : add eax, 0xb60f0015 ; ret
0x0000020000518fe9 : add eax, 0xb640f1e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000037f3cf : add eax, 0xb8c30000 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200004efc76 : add eax, 0xb8d464e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000017a214 : add eax, 0xb94775b8 ; jmp rax
0x000002000019fbcb : add eax, 0xc ; jmp 0x2000019fbe9
0x00000200001a03a4 : add eax, 0xc ; jmp 0x200001a03c2
0x00000200001eee67 : add eax, 0xc01bdaf7 ; add eax, 3 ; ret
0x00000200001316a7 : add eax, 0xc033000b ; add rsp, 0x28 ; ret
0x000002000002dc6d : add eax, 0xc0330a89 ; ret
0x00000200000a9d5d : add eax, 0xc033c3f3 ; ret
0x000002000011fa1a : add eax, 0xc033f072 ; ret
0x000002000024eb60 : add eax, 0xc060c06 ; ret 0x7005
0x00000200000d1752 : add eax, 0xc1480000 ; call 0x1ffc2305f71
0x00000200001a2655 : add eax, 0xc18b0000 ; ret
0x000002000010a97b : add eax, 0xc3000000 ; xor eax, eax ; ret
0x000002000038d41e : add eax, 0xc37bd ; ret
0x000002000038d416 : add eax, 0xc37d5 ; ret
0x000002000038d426 : add eax, 0xc37f5 ; ret
0x000002000038d40e : add eax, 0xc383d ; ret
0x00000200004a0ba8 : add eax, 0xc393f2e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000013c1ea : add eax, 0xc3c00000 ; inc rdx ; jmp 0x2000013c1c6
0x00000200005f7df4 : add eax, 0xc3f6ffc9 ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x00000200000661c6 : add eax, 0xc4814800 ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000063aeaa : add eax, 0xc4834800 ; pop rax ; ret
0x000002000013f482 : add eax, 0xc8830479 ; inc ebx ; xor eax, eax ; ret
0x00000200004688b8 : add eax, 0xcc0 ; ret
0x0000020000020bdb : add eax, 0xd03b0000 ; ja 0x20000020bec ; ret
0x000002000019ca8e : add eax, 0xd800 ; ret
0x00000200006c1e12 : add eax, 0xd890000 ; push rcx ; ret
0x00000200005ff06a : add eax, 0xd8affe3 ; popfq ; jg 0x200005ff04f ; jmp qword ptr [rdx]
0x0000020000021dd2 : add eax, 0xd9c59 ; ret
0x0000020000021e72 : add eax, 0xdbd79 ; ret
0x0000020000021e51 : add eax, 0xdbfca ; ret
0x0000020000021db5 : add eax, 0xdc026 ; ret
0x0000020000021e12 : add eax, 0xdc029 ; ret
0x0000020000021da1 : add eax, 0xdc05a ; ret
0x0000020000021e5d : add eax, 0xdc05e ; ret
0x0000020000021e02 : add eax, 0xdc089 ; ret
0x0000020000021e0a : add eax, 0xdc0a1 ; ret
0x0000020000021dad : add eax, 0xdc0be ; ret
0x0000020000021d8b : add eax, 0xdc0d0 ; ret
0x0000020000021e1a : add eax, 0xdc0f1 ; ret
0x0000020000021e2f : add eax, 0xdc0fc ; ret
0x0000020000021dbd : add eax, 0xdc12e ; ret
0x0000020000021e3c : add eax, 0xdc12f ; ret
0x0000020000021e49 : add eax, 0xdc142 ; ret
0x0000020000021e6a : add eax, 0xdc151 ; ret
0x0000020000021df2 : add eax, 0xdc159 ; ret
0x0000020000021e83 : add eax, 0xdc188 ; ret
0x0000020000021e27 : add eax, 0xdc224 ; ret
0x000002000020ed10 : add eax, 0xe0000ac4 ; ret
0x000002000060be5c : add eax, 0xe083c233 ; add dh, byte ptr [rbx] ; ret 0x4789
0x000002000060cd83 : add eax, 0xe1b70ce9 ; push rdi ; ret
0x00000200005af9ca : add eax, 0xe3c1ca77 ; add al, 0x83 ; ret
0x0000020000574c71 : add eax, 0xe6760000 ; xor eax, eax ; ret
0x00000200000312a7 : add eax, 0xe8000000 ; insb byte ptr [rdi], dx ; ret 7
0x00000200000f6711 : add eax, 0xe8000000 ; ret 0xff21
0x0000020000006c74 : add eax, 0xe8c03345 ; ret
0x0000020000477baa : add eax, 0xe8fff866 ; std ; ret
0x00000200001feac0 : add eax, 0xe9000000 ; call qword ptr [rax]
0x000002000053157a : add eax, 0xeb0100c6 ; out dx, eax ; xor al, al ; ret
0x00000200001ab3e1 : add eax, 0xebca8b45 ; add eax, dword ptr [rbp - 0x75] ; ret 0x8d41
0x000002000003b7eb : add eax, 0xebf38b49 ; adc dword ptr [rcx - 0x75], ecx ; ret
0x0000020000520106 : add eax, 0xf04d08e8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000150612 : add eax, 0xf1f508d ; ret 0xb8c3
0x00000200000e5ace : add eax, 0xf61fe383 ; ret
0x000002000004315b : add eax, 0xf7480000 ; ret
0x000002000018ed31 : add eax, 0xf81845e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000017bcbf : add eax, 0xf930c ; mov rbx, rcx ; call qword ptr [rax]
0x000002000017bb9b : add eax, 0xf9430 ; mov rbp, rdx ; call qword ptr [rax]
0x000002000017bb2f : add eax, 0xf949c ; mov rsi, rdx ; call qword ptr [rax]
0x000002000017ba7c : add eax, 0xf954f ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000017b9dc : add eax, 0xf95ef ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200000f9d57 : add eax, 0xfbed83e8 ; inc dword ptr [rcx - 0x75] ; ret 0x8b48
0x000002000057093e : add eax, 0xfc00000 ; ret 0x189
0x0000020000471c76 : add eax, 0xfc08500 ; test dh, al ; ret 0x18
0x00000200004e3c8c : add eax, 0xff008b48 ; ret
0x00000200000360cd : add eax, 0xff088341 ; ret
0x00000200006f0ec9 : add eax, 0xff098b48 ; ret
0x00000200001572e2 : add eax, 0xff410000 ; ret
0x000002000070ddbb : add eax, 0xff480000 ; ret 0xc0ff
0x00000200006f8aca : add eax, 0xffb912a9 ; push rax ; ret
0x00000200006c58f9 : add eax, 0xffbbb452 ; ret
0x00000200006c0993 : add eax, 0xffbc0e78 ; add rsp, 0x68 ; ret
0x00000200006bfea6 : add eax, 0xffc0c495 ; adc byte ptr [rcx - 0x75], cl ; ret 0x4cc3
0x00000200006bfe15 : add eax, 0xffc0c526 ; adc byte ptr [rcx - 0x75], cl ; ret 0x4cc3
0x0000020000667b0f : add eax, 0xffc263fb ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200006660b8 : add eax, 0xffc28b23 ; add rsp, 0x28 ; ret
0x000002000064abbb : add eax, 0xffc4bfc0 ; mov r8d, r10d ; jmp 0x2000064abd2
0x0000020000624239 : add eax, 0xffc4fd2a ; call rax
0x000002000063af01 : add eax, 0xffc5bcc2 ; ret
0x00000200006e9e7c : add eax, 0xffc6d49b ; enter 0, 0 ; ret
0x000002000063afa4 : add eax, 0xffc90e37 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200006c349c : add eax, 0xffc94157 ; ret
0x00000200006c05ba : add eax, 0xffc97281 ; ret
0x00000200005b6b0d : add eax, 0xffcbd456 ; call rax
0x000002000064c7e1 : add eax, 0xffce8b48 ; sar bh, cl ; ret
0x0000020000652bef : add eax, 0xffd044c0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000576d4c : add eax, 0xffd27e43 ; ret
0x00000200005281ff : add eax, 0xffd4b310 ; mov dword ptr [rcx + 8], eax ; ret
0x0000020000572d03 : add eax, 0xffd58b38 ; ret
0x000002000058d621 : add eax, 0xffd5abba ; ret
0x00000200005115b8 : add eax, 0xffd665ff ; inc eax ; ret
0x00000200004e446c : add eax, 0xffd8f70f ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200004ee7f0 : add eax, 0xffd99edf ; ret
0x00000200005438a9 : add eax, 0xffda291a ; ret
0x00000200004db2dd : add eax, 0xffdad71e ; lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x00000200004b9139 : add eax, 0xffdd0c51 ; test al, al ; jne 0x200004b914c ; ret
0x00000200004b9079 : add eax, 0xffdd0d12 ; test al, al ; jne 0x200004b908c ; ret
0x00000200004b37c1 : add eax, 0xffdd6382 ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200004b2995 : add eax, 0xffdd698e ; add rsp, 0x28 ; ret
0x00000200004bb20d : add eax, 0xffddc116 ; call rax
0x00000200004b1f9f : add eax, 0xffde105d ; ret
0x00000200004e1f70 : add eax, 0xffdea967 ; add rsp, 0x28 ; ret
0x00000200004e4462 : add eax, 0xffe022f9 ; ja 0x200004e4473 ; ret
0x000002000046853e : add eax, 0xffe0b185 ; jmp 0x200004684da
0x00000200004ba6c1 : add eax, 0xffe2bb3a ; ret
0x00000200004b3835 : add eax, 0xffe32e1a ; add rsp, 0x38 ; ret
0x00000200005d3f9a : add eax, 0xffe68a01 ; call rax
0x0000020000425263 : add eax, 0xffe73ba0 ; add rsp, 0x28 ; ret
0x00000200005842ca : add eax, 0xffecc8b1 ; ret
0x00000200005842c2 : add eax, 0xffecc8d9 ; ret
0x00000200005842ba : add eax, 0xffecc901 ; ret
0x00000200005842b2 : add eax, 0xffecc929 ; ret
0x000002000057dfa7 : add eax, 0xffed0cc4 ; ret
0x000002000057df9f : add eax, 0xffed0cdc ; ret
0x000002000057df97 : add eax, 0xffed0cf4 ; ret
0x000002000057df8f : add eax, 0xffed0d0c ; ret
0x000002000057df87 : add eax, 0xffed0d24 ; ret
0x000002000057df7f : add eax, 0xffed0d3c ; ret
0x000002000057df77 : add eax, 0xffed0d54 ; ret
0x000002000057df6f : add eax, 0xffed0d6c ; ret
0x00000200002008f7 : add eax, 0xffefb204 ; ret
0x0000020000200908 : add eax, 0xffefd6d3 ; ret
0x000002000046f409 : add eax, 0xfff09be9 ; inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000002000038cd7c : add eax, 0xfff0aea3 ; add rsp, 0x28 ; ret
0x000002000035fe95 : add eax, 0xfff25158 ; ret
0x000002000035eddf : add eax, 0xfff2b224 ; add rsp, 0x28 ; ret
0x000002000039bdb0 : add eax, 0xfff38a0b ; mov rax, r8 ; ret
0x00000200003e7143 : add eax, 0xfff6ff88 ; call rax
0x000002000046ecb3 : add eax, 0xfff7f1e9 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200003c1316 : add eax, 0xfff95db5 ; call rax
0x00000200003c0f48 : add eax, 0xfff96183 ; call rax
0x00000200006c2f1f : add eax, 0xfffc02d7 ; ret
0x000002000038f17f : add eax, 0xfffc7f4c ; call rax
0x0000020000385417 : add eax, 0xfffd1cb4 ; call rax
0x000002000045b4a2 : add eax, 0xfffe1719 ; ret
0x0000020000112b2f : add eax, 0xfffe8fcc ; ret
0x0000020000112b53 : add eax, 0xfffeb098 ; ret
0x0000020000112b63 : add eax, 0xfffeb3a8 ; ret
0x0000020000112b5b : add eax, 0xfffeb3f0 ; ret
0x0000020000112b6b : add eax, 0xfffeb400 ; ret
0x0000020000112b7f : add eax, 0xfffeb40c ; ret
0x0000020000112b73 : add eax, 0xfffeb448 ; ret
0x0000020000112b8a : add eax, 0xfffeb4a1 ; ret
0x000002000036e736 : add eax, 0xffffbd95 ; ret
0x000002000036e72e : add eax, 0xffffbdad ; ret
0x000002000036e726 : add eax, 0xffffbdc5 ; ret
0x000002000036e71e : add eax, 0xffffbddd ; ret
0x000002000036e716 : add eax, 0xffffbdf5 ; ret
0x000002000036e70e : add eax, 0xffffbe0d ; ret
0x000002000036e706 : add eax, 0xffffbe25 ; ret
0x000002000036e6fe : add eax, 0xffffbe3d ; ret
0x00000200005896e2 : add eax, 2 ; add rsp, 0x28 ; ret
0x000002000019fc08 : add eax, 2 ; jmp 0x2000019fc30
0x00000200000cf0e7 : add eax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x000002000014ec1a : add eax, 2 ; mov dword ptr [rdi], eax ; call 0x2000014ae6b
0x00000200000bf29a : add eax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x000002000005a930 : add eax, 2 ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200003f79d8 : add eax, 2 ; ret
0x0000020000466d41 : add eax, 3 ; and eax, 0xfffffffc ; add eax, edx ; ret
0x00000200001eee6c : add eax, 3 ; ret
0x000002000013c33f : add eax, 7 ; mov dword ptr [rip + 0x154610], eax ; ret
0x00000200000b2834 : add eax, 8 ; cmp rax, r8 ; jb 0x200000b282d ; ret
0x00000200001d8607 : add eax, 8 ; cmp rax, r8 ; jb 0x200001d8609 ; ret
0x000002000014eb92 : add eax, 8 ; dec r10 ; jne 0x2000014eb78 ; ret
0x00000200000aec9b : add eax, 8 ; dec r9 ; jne 0x200000aec97 ; ret
0x00000200001e71a0 : add eax, 8 ; inc r10 ; jmp 0x200001e7192
0x000002000019fbd5 : add eax, 8 ; jmp 0x2000019fbe9
0x00000200001a03ae : add eax, 8 ; jmp 0x200001a03c2
0x0000020000370771 : add eax, 8 ; shr rdx, 1 ; jne 0x20000370751 ; ret
0x00000200001064b8 : add eax, dword ptr [r10] ; je 0x200001064cb ; mov rax, qword ptr [rcx + 0x28] ; ret
0x00000200003cd9db : add eax, dword ptr [r11 + 0x3b41fce0] ; ret 0x1875
0x00000200004375f2 : add eax, dword ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a9194 : add eax, dword ptr [r8] ; mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000a90b2 : add eax, dword ptr [r9 + 0x32] ; ret
0x000002000000edf9 : add eax, dword ptr [r9 + 0xb] ; ret 0x4188
0x00000200000add1a : add eax, dword ptr [rax + rax*8 + 0x2a410774] ; ret 0x388
0x0000020000704566 : add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x0000020000153f86 : add eax, dword ptr [rax - 0x77becf3e] ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x000002000042ce1e : add eax, dword ptr [rax - 0x78] ; xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x00000200004c53c6 : add eax, dword ptr [rax] ; add al, al ; jmp 0x200004c5393
0x000002000038ec63 : add eax, dword ptr [rax] ; add al, al ; ret
0x00000200001adfd4 : add eax, dword ptr [rax] ; add al, bh ; ret
0x00000200006e2d34 : add eax, dword ptr [rax] ; add al, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200003bd7c9 : add eax, dword ptr [rax] ; add al, ch ; call qword ptr [rsi]
0x000002000036fe15 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00000200001d3910 : add eax, dword ptr [rax] ; add bh, bh ; ret
0x0000020000132b16 : add eax, dword ptr [rax] ; add bl, al ; mov eax, 0x7d0 ; ret
0x00000200006586f9 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000027bff : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x00000200006e2c0a : add eax, dword ptr [rax] ; add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e2c1b
0x000002000016d4f2 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200006a1059 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000050b221 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0xd233
0x00000200004688b4 : add eax, dword ptr [rax] ; add byte ptr [rax + 5], cl ; ror byte ptr [rax + rax], 0 ; ret
0x0000020000072156 : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x00000200000bd212 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22f1a31
0x000002000013b971 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2370290
0x000002000019f0dd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x000002000013e406 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x74000009], al ; ret 0x6ca3
0x00000200000ecb1a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; je 0x200000ecb4e ; js 0x200000ecb22 ; ret
0x000002000003259c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200004d95a8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x23], cl ; ret 0x3b4c
0x0000020000110ab3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004605d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004cd47f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000069b261 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000049782f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x00000200000d50b9 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x000002000069c7cd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000407a3b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; shr eax, cl ; ret 0xfff4
0x000002000019f0ed : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp 0x2000019f10c
0x000002000014fbeb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006c8a05 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xb808
0x00000200000b50d3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000db072 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xbf8
0x00000200006e4c69 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200001a5996 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xed0
0x00000200001737db : add eax, dword ptr [rax] ; add byte ptr [rax - 0x9000009], al ; ret
0x000002000008b942 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x00000200000cd944 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000037f91e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000013d41e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006084e6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005b51f0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200000322a2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; int 0x29
0x000002000039d623 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000039d5f2
0x000002000047de76 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000000a099
0x00000200000074a0 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000063b248 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x00000200006d5f4a : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5f5b
0x00000200006d5fbb : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5fcc
0x00000200004b37c6 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200001421d8 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x2b], cl ; ret
0x0000020000021f09 : add eax, dword ptr [rax] ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000494f0c : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x25], dh ; xor al, al ; ret
0x00000200000e0d68 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x74ed8b25], al ; ret
0x000002000069b7e5 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006d6f23 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x348
0x000002000069efd1 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x3b45
0x000002000069bd4e : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8341
0x00000200004337d1 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200004d169c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x5b351738], cl ; ret
0x00000200004f0b3e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x00000200004f4f74 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7374b63f], cl ; ret
0x00000200003c591f : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd15], al ; ret 2
0x00000200003cdb05 : add eax, dword ptr [rax] ; add byte ptr [rbx], al ; ret
0x0000020000565397 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x4374
0x00000200006095a0 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x4466
0x00000200000adeb7 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200001acdcc : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x850f
0x00000200001b3304 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xc77
0x0000020000556b27 : add eax, dword ptr [rax] ; add byte ptr [rbx], cl ; fcompi st(7) ; ret
0x00000200000eb687 : add eax, dword ptr [rax] ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200000f069b : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200001ab117 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0xf41
0x00000200000250ca : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000476d6e : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000050add8 : add eax, dword ptr [rax] ; add byte ptr [rcx + 3], cl ; ret
0x0000020000572d1f : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x2f], al ; call 0x20042193075
0x00000200004e9880 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200001b0168 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 - 0x7b] ; ret
0x0000020000023816 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; or byte ptr [r11], al ; ret
0x00000200001ab152 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x000002000012fe80 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000069fdea : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000069b223 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000069bd5d : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000b4774 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x00000200006d2510 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000590f15 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x2302
0x0000020000591160 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x6602
0x000002000046fa29 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0x0000020000108d34 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000155f1c : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x9ce9
0x000002000002b0bd : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0xff49
0x00000200001a222d : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001a2210 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 1] ; ret
0x00000200000b7bc0 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0xc ; ret 0x8b44
0x00000200000a2133 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200001e948d : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; ret 0xffee
0x00000200003964ee : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test dword ptr [rsi - 6], ebx ; sub byte ptr [rax], al ; ret
0x00000200006a1074 : add eax, dword ptr [rax] ; add byte ptr [rdx + 1], bh ; jmp r8
0x000002000070a5ae : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x0000020000024f93 : add eax, dword ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200003dbc17 : add eax, dword ptr [rax] ; add cl, al ; jmp 0x1ffc200473c
0x000002000035ee63 : add eax, dword ptr [rax] ; add cl, ch ; cli ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001098e1 : add eax, dword ptr [rax] ; add cl, ch ; stc ; hlt ; push rsi ; ret
0x0000020000049ecb : add eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000040cb2e : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7503
0x0000020000011b61 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf03
0x000002000006bc89 : add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200003ca1e9 : add eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006fa9b : add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000037e922 : add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x00000200004d58e3 : add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200003e8be8 : add eax, dword ptr [rax] ; jmp 0x200003e875d
0x0000020000399dec : add eax, dword ptr [rax] ; mov al, 1 ; ret
0x00000200000a9195 : add eax, dword ptr [rax] ; mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000220f6 : add eax, dword ptr [rax] ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000057511b : add eax, dword ptr [rax] ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000142557 : add eax, dword ptr [rax] ; nop ; jmp 0x2000003e82c
0x000002000011510b : add eax, dword ptr [rax] ; ret
0x00000200000c9a11 : add eax, dword ptr [rbp + 0x22] ; ret
0x000002000057e00d : add eax, dword ptr [rbp + 0x32] ; leave ; mov al, r9b ; ret
0x000002000016beab : add eax, dword ptr [rbp + 0x33] ; leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x000002000012f3f0 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001ab213 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x000002000064ca14 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x000002000050afc5 : add eax, dword ptr [rbp - 0x73] ; inc qword ptr [rcx + 3] ; ret 0x4489
0x00000200000e0e23 : add eax, dword ptr [rbp - 0x75] ; ret
0x00000200001ab3e6 : add eax, dword ptr [rbp - 0x75] ; ret 0x8d41
0x00000200005748c3 : add eax, dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], 1 ; ret 0x90c3
0x000002000016d0aa : add eax, dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], cl ; ret 0x8b48
0x0000020000465a0e : add eax, dword ptr [rbp - 0x76] ; ret 0x3345
0x00000200005ba1cf : add eax, dword ptr [rbp - 0x77] ; adc dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x00000200003cd9dc : add eax, dword ptr [rbx + 0x3b41fce0] ; ret 0x1875
0x0000020000472d53 : add eax, dword ptr [rbx + 0xa01fce1] ; xor eax, eax ; ret
0x0000020000064184 : add eax, dword ptr [rbx + rcx*4 - 0x38] ; mov eax, r9d ; ret
0x000002000003fa60 : add eax, dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x0000020000466d43 : add eax, dword ptr [rbx - 0x3dfc0320] ; ret
0x000002000051dbfa : add eax, dword ptr [rbx - 0x3fccfbf7] ; ret
0x00000200000198dc : add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x00000200006d325b : add eax, dword ptr [rbx - 0x74be9e3f] ; ret 0xe1c1
0x000002000007c640 : add eax, dword ptr [rbx - 0x899fd38] ; ret 0x100
0x00000200001a137f : add eax, dword ptr [rbx - 0xb7f81f] ; ret 0x8348
0x0000020000569a1c : add eax, dword ptr [rbx] ; add al, al ; ret
0x0000020000395abb : add eax, dword ptr [rbx] ; add cl, byte ptr [rax - 0x7d] ; ret 0xff04
0x0000020000368045 : add eax, dword ptr [rbx] ; jmp 0x2000036800f
0x000002000053eaff : add eax, dword ptr [rbx] ; ret 0x349
0x000002000058fffa : add eax, dword ptr [rbx] ; ret 0x3b41
0x000002000010ec0c : add eax, dword ptr [rcx + 0x10] ; add edx, -8 ; jne 0x2000010ebd4 ; ret
0x00000200000ee84d : add eax, dword ptr [rcx + 0x2b] ; ret 0x3b48
0x00000200000a90b3 : add eax, dword ptr [rcx + 0x32] ; ret
0x0000020000637186 : add eax, dword ptr [rcx + 0x33] ; ret
0x000002000014cf5c : add eax, dword ptr [rcx + 0x3a] ; ret 0x840f
0x00000200001305e2 : add eax, dword ptr [rcx + 0x3b] ; ret
0x00000200006eabec : add eax, dword ptr [rcx + 0x3b] ; sal byte ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x00000200000dd780 : add eax, dword ptr [rcx + 0x98] ; ret
0x000002000000edfa : add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x00000200003bdfa4 : add eax, dword ptr [rcx + 0xb] ; ret 0x8841
0x000002000002b0e6 : add eax, dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8844
0x00000200000f889e : add eax, dword ptr [rcx + 3] ; ret
0x000002000058ada0 : add eax, dword ptr [rcx + 3] ; ror dword ptr [rcx + 3], cl ; ret
0x00000200003d8985 : add eax, dword ptr [rcx + 3] ; xor ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200004c6656 : add eax, dword ptr [rcx + rax + 0x19] ; ret
0x000002000057354e : add eax, dword ptr [rcx + rax + 1] ; mov eax, 1 ; ret
0x00000200001781b4 : add eax, dword ptr [rcx + rcx*4 + 0x45] ; ret
0x000002000046cd53 : add eax, dword ptr [rcx + rcx*4 + 0x5b] ; sub byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200006d327a : add eax, dword ptr [rcx - 0x3f] ; call 0x1ffc2f8738e
0x00000200006d39c4 : add eax, dword ptr [rcx - 0x3f] ; call 0x1ffc2f87ad8
0x00000200006d40fe : add eax, dword ptr [rcx - 0x3f] ; call 0x1ffc2f88212
0x00000200006eadce : add eax, dword ptr [rcx - 0x3f] ; jmp 0x1ffc2f9eee2
0x000002000019a3db : add eax, dword ptr [rcx - 0x75] ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000020000111a2a : add eax, dword ptr [rcx - 0x75] ; ret
0x000002000061539a : add eax, dword ptr [rcx - 0x75] ; rol byte ptr [rcx - 1], cl ; ret 0x2b41
0x0000020000489b72 : add eax, dword ptr [rcx - 0x75] ; shr eax, 1 ; mov ch, 0x7e ; ret
0x00000200000113a6 : add eax, dword ptr [rcx - 0x7c] ; ret 0x2d74
0x000002000003d0a8 : add eax, dword ptr [rcx - 0x7c] ; ret 0x850f
0x000002000053e839 : add eax, dword ptr [rcx - 0x7f] ; ret
0x0000020000426b5f : add eax, dword ptr [rcx - 0xa] ; ret
0x000002000019a30c : add eax, dword ptr [rcx - 0xa] ; ret 0x7507
0x00000200003f3f6c : add eax, dword ptr [rcx - 1] ; ret
0x0000020000501eec : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001d2a1 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200001b0c0f : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001b7551 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; ret
0x000002000054f4db : add eax, dword ptr [rcx] ; dec r9 ; jne 0x2000054f4d5 ; ret
0x000002000040ef7a : add eax, dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064943f : add eax, dword ptr [rcx] ; xor eax, eax ; ret
0x00000200003a00b9 : add eax, dword ptr [rdi - 0xd] ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x00000200001090db : add eax, dword ptr [rdx + 0x260] ; ret
0x000002000012b05b : add eax, dword ptr [rdx + 0x60] ; ret
0x0000020000175f1b : add eax, dword ptr [rdx + rcx*4 - 0x31] ; xor r8d, r8d ; call rax
0x00000200001064b9 : add eax, dword ptr [rdx] ; je 0x200001064ca ; mov rax, qword ptr [rcx + 0x28] ; ret
0x00000200005438a8 : add eax, dword ptr [rip - 0x25d6e6] ; ret
0x0000020000576d4b : add eax, dword ptr [rip - 0x2d81bd] ; ret
0x0000020000217d08 : add eax, dword ptr [rsi] ; or al, 6 ; sysenter
0x000002000021ecae : add eax, dword ptr [rsi] ; sysenter
0x0000020000556b26 : add eax, dword ptr ss:[rax] ; add byte ptr [rbx], cl ; fcompi st(7) ; ret
0x00000200001c52fe : add eax, eax ; and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200000b8737 : add eax, eax ; jmp rax
0x00000200005367e2 : add eax, eax ; mov qword ptr [rdx + 0x48], rax ; ret
0x00000200001e5911 : add eax, eax ; movzx eax, word ptr [r10 + rax*8 + 0xc] ; ret
0x00000200006385b9 : add eax, eax ; ret
0x000002000012efda : add eax, eax ; xor eax, eax ; mov word ptr [r10 + 2], r8w ; ret
0x000002000047d136 : add eax, ebp ; and al, 0x7f ; ret
0x0000020000517179 : add eax, ebp ; and dword ptr [rdi], esp ; ret
0x00000200001aef30 : add eax, ebp ; cmp dh, byte ptr [rdi] ; add bh, bh ; ret
0x00000200000bd4ae : add eax, ebp ; insb byte ptr [rdi], dx ; ret
0x0000020000489a03 : add eax, ebp ; ja 0x20000489a09 ; ret 0x4cff
0x000002000038de0b : add eax, ebp ; jg 0x2000038de55 ; int 0xff
0x00000200004c6dce : add eax, ebp ; lodsb al, byte ptr [rsi] ; sub bh, byte ptr [rdi - 0x9e97401] ; ret 0x7401
0x00000200004259eb : add eax, ebp ; outsd dx, dword ptr [rsi] ; popfq ; ret 0xfff
0x000002000048f492 : add eax, ebp ; pushfq ; ret 0x48ff
0x0000020000027e47 : add eax, ebp ; ret
0x00000200006edb7c : add eax, ebp ; ret 0xcc25
0x00000200004c9c88 : add eax, ebp ; ret 0xf9b9
0x000002000054e0c8 : add eax, ebp ; ret 0xf9e0
0x000002000049557f : add eax, ebp ; sti ; ret 0x4cff
0x00000200001246a4 : add eax, ebp ; stosb byte ptr [rdi], al ; ret
0x000002000056b194 : add eax, ebp ; xchg byte ptr [rbx], ch ; ret
0x0000020000020f87 : add eax, ebp ; xchg eax, ebx ; mov byte ptr [rax], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000048a449 : add eax, ebp ; xor esp, esi ; ret 0x4cff
0x000002000003a188 : add eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000036d64 : add eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019adf9 : add eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000017f113 : add eax, ebx ; cmp r9d, r10d ; jb 0x2000017f10b ; xor eax, eax ; ret
0x0000020000069166 : add eax, ebx ; jmp rax
0x00000200003b3076 : add eax, ebx ; mov eax, 1 ; ret
0x000002000058ffd5 : add eax, ecx ; add eax, r9d ; add rsp, 0x28 ; ret
0x000002000058ffd8 : add eax, ecx ; add rsp, 0x28 ; ret
0x000002000036ec02 : add eax, ecx ; add rsp, 0x38 ; ret
0x000002000060be59 : add eax, ecx ; call 0x1ff8422f16a
0x00000200001c6495 : add eax, ecx ; clc ; or byte ptr [rcx - 0x7d], cl ; ret
0x000002000058bf03 : add eax, ecx ; cmp r9, rax ; setae al ; ret
0x0000020000487401 : add eax, ecx ; dec r10 ; jne 0x200004873db ; ret
0x00000200001f6ea9 : add eax, ecx ; jmp 0x200000de5bd
0x00000200001bb1d3 : add eax, ecx ; jmp r8
0x00000200003f252c : add eax, ecx ; jmp rax
0x000002000001dc49 : add eax, ecx ; lea eax, dword ptr [rdx + rax*4] ; ret
0x0000020000424f7c : add eax, ecx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000006c20f : add eax, ecx ; ret
0x000002000016be6b : add eax, edi ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b45
0x00000200000739a5 : add eax, edi ; ret
0x000002000019d340 : add eax, edx ; cmp rcx, r10 ; jb 0x2000019d330 ; ret
0x000002000003a1d0 : add eax, edx ; jmp 0x2000003a1b2
0x0000020000046719 : add eax, edx ; jmp 0x200000466c1
0x00000200000ca867 : add eax, edx ; jmp 0x200000ca806
0x00000200004f4432 : add eax, edx ; jmp 0x200004f43ca
0x000002000058eaf2 : add eax, edx ; jmp 0x2000058eafa
0x000002000059676b : add eax, edx ; jmp 0x20000596774
0x00000200004012e6 : add eax, edx ; jmp rax
0x000002000017508b : add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200003681a1 : add eax, edx ; mov qword ptr [r11], rcx ; ret
0x0000020000466d47 : add eax, edx ; ret
0x00000200006a105d : add eax, edx ; sub rsp, 0x28 ; call rax
0x000002000004f22d : add eax, esi ; cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x2000004f24d ; ret
0x00000200000beee8 : add eax, esi ; cmpxchg qword ptr [rcx], r8 ; jne 0x200000bef01 ; ret
0x00000200000beee7 : add eax, esi ; cmpxchg qword ptr [rcx], r8 ; jne 0x200000bef02 ; ret
0x00000200000df888 : add eax, esi ; cmpxchg qword ptr [rcx], r8 ; jne 0x200000df8b7 ; ret
0x00000200000df887 : add eax, esi ; cmpxchg qword ptr [rcx], r8 ; jne 0x200000df8b8 ; ret
0x000002000065407c : add eax, esi ; inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200000d972b : add eax, esp ; call r8
0x00000200000d9637 : add eax, esp ; mov rdx, rbp ; call rax
0x00000200003f5fab : add eax, esp ; ret 0xe9ff
0x00000200003b3075 : add eax, r11d ; mov eax, 1 ; ret
0x00000200000739a4 : add eax, r15d ; ret
0x000002000058ffd7 : add eax, r9d ; add rsp, 0x28 ; ret
0x000002000060be58 : add eax, r9d ; call 0x1ff8422f16b
0x000002000019bff2 : add eax, r9d ; ret
0x0000020000368d32 : add ebp, 3 ; call 0x200000d4fc5
0x0000020000579fd8 : add ebp, dword ptr [rax] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000009f41c : add ebp, dword ptr [rax] ; ret
0x000002000041da40 : add ebp, dword ptr [rbx - 0x2e] ; cmove ebp, dword ptr [rbx] ; ret 0xf749
0x00000200001215f7 : add ebp, eax ; ret
0x0000020000368046 : add ebp, ebx ; ret
0x000002000039f0f2 : add ebp, ecx ; ret
0x00000200003c2f93 : add ebp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000073987 : add ebp, edi ; ret
0x000002000056de9a : add ebp, esi ; inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a815
0x0000020000076cfc : add ebp, esi ; rcr rax, 1 ; sar rax, 0x14 ; ret
0x0000020000073986 : add ebp, r15d ; ret
0x00000200001aec10 : add ebx, 0x3b000000 ; ret 0x57e
0x000002000005aff1 : add ebx, 0x3b000000 ; ret 0x8d0f
0x00000200004218f7 : add ebx, 0xf699ebff ; ret 0x7504
0x000002000062377c : add ebx, 2 ; jmp 0x20000623775
0x000002000008f5b2 : add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x000002000057a07a : add ebx, dword ptr [rax] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000f9509 : add ebx, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000140131 : add ebx, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001dd485 : add ebx, dword ptr [rsi - 0x1d] ; push rsi ; ret 0x7404
0x000002000001de24 : add ebx, eax ; cmp ecx, 0x14 ; ja 0x2000001de37 ; xor al, al ; ret
0x00000200003aa2ee : add ebx, eax ; dec ecx ; jne 0x200003aa301 ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200000e62c1 : add ebx, eax ; mov qword ptr [r8], r11 ; mov qword ptr [r9], r11 ; ret
0x00000200001c50fd : add ebx, eax ; nop ; movzx edx, cx ; in al, dx ; ret
0x0000020000129470 : add ebx, eax ; nop ; nop ; lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200005438b7 : add ebx, eax ; nop ; nop ; nop ; and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x000002000006cdc9 : add ebx, eax ; pause ; xor al, al ; ret
0x00000200001491b1 : add ebx, eax ; ret
0x0000020000137523 : add ebx, eax ; test al, 1 ; je 0x2000013751f ; xor al, al ; ret
0x000002000006fb3f : add ebx, eax ; test eax, eax ; jne 0x2000006fb39 ; xor al, al ; ret
0x00000200000c02d1 : add ebx, eax ; test r8b, r8b ; je 0x200000c02d2 ; mov al, 1 ; ret
0x00000200004c54e2 : add ebx, eax ; test r8d, r8d ; je 0x200004c54d4 ; xor al, al ; ret
0x000002000000e019 : add ebx, eax ; xor al, al ; ret
0x00000200003dbebb : add ebx, ebp ; add eax, dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x000002000043676a : add ebx, ebp ; dec dword ptr [rbx + 0x54e0e8d0] ; ret
0x000002000043673a : add ebx, ebp ; dec dword ptr [rbx + 0x5510e8d0] ; ret
0x000002000052acba : add ebx, ebp ; in eax, dx ; mov eax, 0xc000000d ; ret
0x00000200000d3c24 : add ebx, ebp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4504
0x00000200004757e6 : add ebx, ebp ; mov rax, rdx ; jmp 0x200004757b5
0x000002000053157d : add ebx, ebp ; out dx, eax ; xor al, al ; ret
0x0000020000148413 : add ebx, ebp ; ret
0x00000200004f4528 : add ebx, ebp ; ret 0x4880
0x0000020000640c91 : add ebx, ebx ; ret
0x0000020000073993 : add ebx, edi ; ret
0x0000020000199c48 : add ebx, edx ; loop 0x20000199c5b ; ret 0x8941
0x000002000064f164 : add ebx, esi ; movq qword ptr [rdx], mm0 ; ret
0x00000200000e61cf : add ebx, esi ; ret
0x0000020000073992 : add ebx, r15d ; ret
0x00000200000dda56 : add ecx, -0x10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000011033a : add ecx, -8 ; jne 0x200001102df ; mov al, 1 ; ret
0x00000200004a4fa5 : add ecx, 0x10 ; dec rax ; jne 0x200004a4fa6 ; ret
0x0000020000477692 : add ecx, 0x1c ; call r10
0x0000020000477552 : add ecx, 0x1c ; call rax
0x0000020000423fd1 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x20000423fe2 ; ret
0x0000020000424015 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x20000424026 ; ret
0x00000200001326a4 : add ecx, 0x28 ; add rdx, 0x28 ; jmp 0x20000132678
0x000002000019ec00 : add ecx, 0x30 ; cmp rcx, rax ; jb 0x2000019ec01 ; ret
0x00000200006f43cd : add ecx, 0x38 ; dec r8 ; jne 0x200006f43b9 ; ret
0x00000200000a38e4 : add ecx, 0x40 ; sub rdx, 0x40 ; ja 0x200000a38e9 ; ret 0
0x00000200004e3eb7 : add ecx, 0x5984 ; call r14
0x00000200003c3ef2 : add ecx, 0xb40 ; jmp 0x200003c3ec4
0x0000020000102276 : add ecx, 0xbf8 ; jmp 0x20000102248
0x0000020000147c9d : add ecx, 2 ; cmp rax, rdx ; jb 0x20000147c9c ; ret
0x00000200003ba83e : add ecx, 2 ; dec r9 ; jne 0x200003ba83c ; ret
0x00000200003cb273 : add ecx, 2 ; dec rdx ; jne 0x200003cb275 ; ret
0x00000200004e72b8 : add ecx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x0000020000154421 : add ecx, 2 ; test r8, r8 ; jne 0x2000015441d ; ret
0x000002000014fbf3 : add ecx, 3 ; jmp 0x2000014fc4d
0x0000020000157d49 : add ecx, 4 ; dec r9 ; jne 0x20000157d2e ; ret
0x00000200005234c6 : add ecx, 6 ; call 0x2000014a4aa
0x0000020000123ad3 : add ecx, 8 ; call 0x200000cfd31
0x0000020000132b0a : add ecx, 8 ; cmp edx, r8d ; jb 0x20000132b0b ; ret
0x000002000052a2f2 : add ecx, 8 ; cmp r9d, edx ; jb 0x2000052a2f2 ; ret
0x0000020000368261 : add ecx, 8 ; cmp rcx, rdx ; jbe 0x2000036825d ; ret
0x000002000012a01e : add ecx, 8 ; dec r10 ; jne 0x2000012a01a ; ret
0x00000200001785c8 : add ecx, 8 ; dec rdx ; jne 0x200001785c1 ; ret
0x0000020000363ea4 : add ecx, 8 ; dec rdx ; jne 0x20000363e9e ; ret
0x0000020000526449 : add ecx, 8 ; dec rdx ; jne 0x2000052644e ; ret
0x00000200001a1d47 : add ecx, dword ptr [r8 + 3] ; ret 0x3b48
0x00000200001a1962 : add ecx, dword ptr [r8 - 0x7d] ; ret
0x000002000000edff : add ecx, dword ptr [r9 + rcx*4 + 0x76] ; cmp byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000c9ee7 : add ecx, dword ptr [rax + 0x23] ; ret 0xc148
0x000002000004576b : add ecx, dword ptr [rax + 0x23] ; ret 0xcf8b
0x00000200004d7b2f : add ecx, dword ptr [rax + 0x33] ; ret 0x8948
0x00000200006d17de : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1821 ; ret 0x8948
0x00000200006d19d3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1a16 ; ret 0x8948
0x00000200006d2620 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2663 ; ret 0x8948
0x00000200006d2cc8 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2d0b ; ret 0x8948
0x00000200006d3a5e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d3aa1 ; ret 0x8948
0x00000200006d6464 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d64a7 ; ret 0x8948
0x00000200006d66d4 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d6717 ; ret 0x8948
0x00000200006d7339 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d737c ; ret 0x8948
0x00000200006d7bd9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7c1c ; ret 0x8948
0x00000200006d812c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d816f ; ret 0x8948
0x00000200006d8867 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d88aa ; ret 0x8948
0x00000200006d9117 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d915a ; ret 0x8948
0x00000200006d95c7 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d960a ; ret 0x8948
0x00000200006d9cfb : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d9d3e ; ret 0x8948
0x00000200006da5be : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da601 ; ret 0x8948
0x00000200006daa52 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006daa95 ; ret 0x8948
0x00000200006db26e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006db2b1 ; ret 0x8948
0x00000200006dbb45 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dbb88 ; ret 0x8948
0x00000200006dc04e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc091 ; ret 0x8948
0x00000200006dc7ef : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc832 ; ret 0x8948
0x00000200006dd09f : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd0e2 ; ret 0x8948
0x00000200006dd561 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd5a4 ; ret 0x8948
0x00000200006dddc0 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dde03 ; ret 0x8948
0x00000200006de6a7 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006de6ea ; ret 0x8948
0x00000200006deb8d : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006debd0 ; ret 0x8948
0x00000200006df130 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df173 ; ret 0x8948
0x00000200006df5d9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df61c ; ret 0x8948
0x00000200006dfabe : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dfb01 ; ret 0x8948
0x00000200006dffab : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dffee ; ret 0x8948
0x00000200006e0381 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e03c4 ; ret 0x8948
0x00000200006e0765 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e07a8 ; ret 0x8948
0x00000200006e0b57 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0b9a ; ret 0x8948
0x00000200006e0f5e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0fa1 ; ret 0x8948
0x00000200006e135f : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e13a2 ; ret 0x8948
0x00000200006e1777 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e17ba ; ret 0x8948
0x00000200006e1b81 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1bc4 ; ret 0x8948
0x00000200006e1fa0 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1fe3 ; ret 0x8948
0x00000200006e23cf : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2412 ; ret 0x8948
0x00000200006e289c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e28df ; ret 0x8948
0x00000200006e2e5b : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2e9e ; ret 0x8948
0x00000200006e342f : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3472 ; ret 0x8948
0x00000200006e38ec : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e392f ; ret 0x8948
0x00000200006e3d64 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3da7 ; ret 0x8948
0x00000200006e3f3c : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3f7f ; ret 0x8948
0x00000200006e442b : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e446e ; ret 0x8948
0x00000200006e48d5 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e4918 ; ret 0x8948
0x00000200006e50b4 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e50f7 ; ret 0x8948
0x00000200006e54e3 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5526 ; ret 0x8948
0x00000200006e5912 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5955 ; ret 0x8948
0x00000200006e5d52 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5d95 ; ret 0x8948
0x00000200006e6181 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e61c4 ; ret 0x8948
0x00000200006e680e : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6851 ; ret 0x8948
0x00000200006e6ad9 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6b1c ; ret 0x8948
0x00000200006e6e59 : add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6e9c ; ret 0xbd83
0x000002000006c407 : add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200000c2250 : add ecx, dword ptr [rax + 0xb] ; ret
0x00000200001bffac : add ecx, dword ptr [rax + 0xb] ; ret 0x8944
0x00000200001f737a : add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x00000200001f7111 : add ecx, dword ptr [rax + 0xb] ; ret 0x8949
0x000002000019f0e3 : add ecx, dword ptr [rax + 3] ; ret
0x00000200001a1d48 : add ecx, dword ptr [rax + 3] ; ret 0x3b48
0x000002000014101d : add ecx, dword ptr [rax + 3] ; ret 0x8948
0x00000200003f0fa7 : add ecx, dword ptr [rax + 3] ; ret 0x8b48
0x000002000014ec62 : add ecx, dword ptr [rax - 0x67] ; idiv r8 ; ret
0x000002000015fb15 : add ecx, dword ptr [rax - 0x75] ; adc dil, r15b ; ret
0x00000200006d3336 : add ecx, dword ptr [rax - 0x75] ; add al, byte ptr [rbx - 0x7cb7073f] ; ret 0x4808
0x000002000069b3dd : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x0000020000702d3e : add ecx, dword ptr [rax - 0x75] ; and byte ptr [r8 - 0x7d], cl ; ret
0x000002000053d88d : add ecx, dword ptr [rax - 0x75] ; iretd ; call 0x2000015e537
0x000002000053d88c : add ecx, dword ptr [rax - 0x75] ; iretd ; call 0x2000015e538
0x00000200001a4711 : add ecx, dword ptr [rax - 0x75] ; je 0x200001a4742 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001a8261 : add ecx, dword ptr [rax - 0x75] ; je 0x200001a8292 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004ddf05 : add ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000002e145 : add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000008da7 : add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200006311bd : add ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbp ; call rax
0x00000200003b32ab : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000032595 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 3
0x0000020000474625 : add ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rsi*2 + 0x48], 0xff ; ret 0x8348
0x00000200001a1295 : add ecx, dword ptr [rax - 0x7cb700b9] ; ret
0x000002000002393a : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004cddc1 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4120
0x00000200006c8a5d : add ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200006a111f : add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000617bc2 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200001a1844 : add ecx, dword ptr [rax - 0x7d] ; ret 0xeb03
0x0000020000544bdf : add ecx, dword ptr [rax - 1] ; and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200005fe234 : add ecx, dword ptr [rax - 1] ; int 0x48
0x0000020000168477 : add ecx, dword ptr [rax - 1] ; loope 0x2000016843d ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000001ac97 : add ecx, dword ptr [rax - 1] ; ret
0x00000200000770bb : add ecx, dword ptr [rax - 1] ; ret 0x334d
0x0000020000039fe1 : add ecx, dword ptr [rax - 1] ; ret 0x348
0x00000200001eb144 : add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x0000020000027cc6 : add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000002000004aaec : add ecx, dword ptr [rax - 9] ; ret
0x00000200006d0705 : add ecx, dword ptr [rbp + 0x23] ; ret
0x0000020000511178 : add ecx, dword ptr [rbp + 0x33] ; ret
0x0000020000188e3c : add ecx, dword ptr [rbp + 0x6348014a] ; ret 0xd13b
0x00000200006d8488 : add ecx, dword ptr [rbp + 3] ; fisttp qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200006dc3cc : add ecx, dword ptr [rbp + 3] ; fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x0000020000177baa : add ecx, dword ptr [rbp + 3] ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000037b75e : add ecx, dword ptr [rbp - 0x1d3e3fec] ; add al, 0x83 ; ret 0xe830
0x00000200006e72b7 : add ecx, dword ptr [rbp - 0x75] ; ret 0x44f0
0x00000200005761ee : add ecx, dword ptr [rbp - 0x75] ; ret 0x8b4d
0x000002000012932e : add ecx, dword ptr [rbx + 0x428d0450] ; sbb byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200004d80f2 : add ecx, dword ptr [rbx + 0xf023cdd] ; xchg eax, esp ; ret
0x00000200004ff538 : add ecx, dword ptr [rbx + rcx*4 + 1] ; mov rax, r8 ; ret
0x00000200004ceccc : add ecx, dword ptr [rbx - 0x7cb63c3f] ; ret 0x4d48
0x000002000019a42c : add ecx, dword ptr [rbx] ; ret 0x8941
0x0000020000071923 : add ecx, dword ptr [rcx + 0x1d39045e] ; ret
0x00000200006d9908 : add ecx, dword ptr [rcx + 0x33] ; adc al, byte ptr [rbp + 3] ; ret
0x0000020000144773 : add ecx, dword ptr [rcx + 0x33] ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200006e31ba : add ecx, dword ptr [rcx + 0x33] ; adc byte ptr [rcx - 0x7d], al ; ret 0x49f8
0x000002000069b22c : add ecx, dword ptr [rcx + 0x33] ; adc dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x0000020000187118 : add ecx, dword ptr [rcx + 0x3b] ; ret
0x0000020000008aa8 : add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200001f71d3 : add ecx, dword ptr [rcx + 0xb] ; ret
0x00000200001f72be : add ecx, dword ptr [rcx + 0xb] ; ret 0x8949
0x00000200000c20d1 : add ecx, dword ptr [rcx + 0xb] ; ror byte ptr [rax - 0x77], 2 ; ret
0x000002000013a5b2 : add ecx, dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200000d4c42 : add ecx, dword ptr [rcx + 3] ; ret
0x000002000000eda6 : add ecx, dword ptr [rcx + 3] ; ret 0x3b49
0x000002000000ee00 : add ecx, dword ptr [rcx + rcx*4 + 0x76] ; cmp byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003fd18b : add ecx, dword ptr [rcx + rcx*4 + 2] ; mov al, 1 ; ret
0x00000200000116e6 : add ecx, dword ptr [rcx - 0x74afdbac] ; ret 0x348
0x0000020000126455 : add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000004c013 : add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004d6eca : add ecx, dword ptr [rcx - 0x75] ; ret 0xf748
0x00000200000e61cc : add ecx, dword ptr [rcx - 0x77] ; add ebx, esi ; ret
0x000002000064d89e : add ecx, dword ptr [rcx - 0x77] ; or dword ptr [rax + 1], edi ; ret
0x00000200004c8c7b : add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x000002000003b5b8 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000014aa50 : add ecx, dword ptr [rcx - 1] ; loopne 0x2000014aa16 ; add al, byte ptr [rax] ; add al, al ; ret
0x00000200000c5e2c : add ecx, dword ptr [rcx - 1] ; ret
0x0000020000038d22 : add ecx, dword ptr [rcx] ; xor byte ptr [rbp + rbp - 0x75], 0xc2 ; ret
0x000002000070047a : add ecx, dword ptr [rdi] ; mov bh, 0x41 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000550320 : add ecx, dword ptr [rdi] ; mov bh, 0x4b ; add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x00000200004a1079 : add ecx, dword ptr [rdi] ; test al, cl ; ret
0x00000200004425ba : add ecx, dword ptr [rdi] ; test byte ptr [rdx - 0xffe3ec], bh ; ret 0x8348
0x00000200005eec0c : add ecx, dword ptr [rdi] ; test byte ptr [rsi + rax*8], bh ; lock dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000012adf5 : add ecx, dword ptr [rdi] ; test dword ptr [rax - 0x75000000], edi ; ret
0x00000200006f4bbf : add ecx, dword ptr [rdi] ; test edx, edx ; ret
0x00000200003a3d01 : add ecx, dword ptr [rdi] ; test esi, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000015fb9 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x7ae8
0x0000020000425359 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x000002000006fcde : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000200003fd8bc : add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x00000200006bfd43 : add ecx, dword ptr [rdx - 0x7cb7debf] ; ret
0x000002000035dadd : add ecx, dword ptr [rdx] ; rol byte ptr [rcx - 0x78], 1 ; dec dword ptr [rax - 1] ; ret
0x00000200001305df : add ecx, eax ; call 0x1ffc34e46ef
0x000002000019c15b : add ecx, eax ; cmp cx, dx ; setbe al ; ret
0x000002000012724d : add ecx, eax ; cmp qword ptr [r9 + 0x50], rcx ; je 0x20000127260 ; ret
0x00000200004757d4 : add ecx, eax ; cmp r8d, r9d ; jb 0x200004757ce ; mov eax, edx ; ret
0x00000200004757d4 : add ecx, eax ; cmp r8d, r9d ; jb 0x200004757cf ; mov eax, edx ; ret
0x000002000038eb4b : add ecx, eax ; jmp 0x2000038eb15
0x00000200005dc9ec : add ecx, eax ; jmp 0x200005dca01
0x00000200001f4ec3 : add ecx, eax ; jmp rcx
0x00000200001b5b04 : add ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000044254d : add ecx, eax ; mov qword ptr [rbp + 0x18], rcx ; call 0x2000006cccd
0x000002000002c81b : add ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x0000020000545311 : add ecx, eax ; movzx eax, r10w ; jmp 0x20000545326
0x0000020000153130 : add ecx, eax ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000643651 : add ecx, eax ; sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x000002000046e4f8 : add ecx, ebp ; jmp rcx
0x000002000003d578 : add ecx, ebp ; mov ebp, 0xf6fffffa ; ret 0xf03
0x00000200000de91f : add ecx, ebp ; mov esp, 0xf6fffff9 ; ret 0xf03
0x0000020000447b98 : add ecx, ebp ; ret
0x00000200005dfef5 : add ecx, ebp ; ret 0xec46
0x00000200000d0fbe : add ecx, ebp ; ret 0xfffd
0x000002000000b3d4 : add ecx, ebp ; ret 0xfffe
0x00000200006161c6 : add ecx, ebp ; test edx, 0x8b44ffde ; ret
0x00000200005c0004 : add ecx, ebx ; call 0x200000771c9
0x0000020000068e8c : add ecx, ebx ; jmp rcx
0x00000200004118b3 : add ecx, ebx ; mov rdx, rbx ; call 0x2000051db67
0x000002000013455c : add ecx, ecx ; jmp 0x20000134538
0x00000200005502d4 : add ecx, ecx ; jmp r9
0x00000200000dd081 : add ecx, ecx ; jmp rcx
0x0000020000641de0 : add ecx, ecx ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x00000200006f5e29 : add ecx, ecx ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000589450 : add ecx, ecx ; movzx eax, cx ; ret
0x000002000001809b : add ecx, edi ; jmp rcx
0x000002000007399f : add ecx, edi ; ret
0x0000020000578023 : add ecx, edx ; call 0x2000018cbf5
0x0000020000069183 : add ecx, edx ; jmp rcx
0x0000020000590a2c : add ecx, edx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x000002000036416c : add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x000002000051ea59 : add ecx, esi ; ret 0x85ff
0x00000200004671a9 : add ecx, esp ; jmp rcx
0x000002000007399e : add ecx, r15d ; ret
0x000002000015312f : add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000058944f : add ecx, r9d ; movzx eax, cx ; ret
0x000002000046f029 : add edi, 0x18 ; inc edx ; jmp 0x2000046efba
0x00000200004812f0 : add edi, 0x18 ; jmp 0x200004812bb
0x000002000010cfe9 : add edi, dword ptr [r11] ; ret
0x0000020000023546 : add edi, dword ptr [rbx + rax] ; jne 0x2000002356a ; mov rcx, rsi ; call r14
0x000002000010cfea : add edi, dword ptr [rbx] ; ret
0x00000200001573d8 : add edi, dword ptr [rbx] ; ret 0x472
0x00000200004d015f : add edi, dword ptr [rcx - 0x3b7cb701] ; ret
0x00000200000841b1 : add edi, dword ptr [rcx - 0x5c] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x0000020000517a11 : add edi, dword ptr [rcx] ; xlatb ; push rsi ; ret
0x0000020000404d04 : add edi, dword ptr [rdi + 0x15] ; test edx, edx ; jne 0x20000404d1c ; xor eax, eax ; ret
0x00000200003f9484 : add edi, dword ptr [rdi + 0xd] ; xor eax, eax ; ret
0x000002000019062b : add edi, dword ptr [rdx] ; ret
0x0000020000511191 : add edi, dword ptr [rdx] ; ret 0x1275
0x00000200005d2c9b : add edi, dword ptr [rdx] ; ret 0x1b75
0x00000200001acecf : add edi, dword ptr [rdx] ; ret 0x6e75
0x00000200000297d9 : add edi, dword ptr [rdx] ; sbb al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000129edc : add edi, eax ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000200001dd24b : add edi, ebp ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200006f06b5 : add edi, ebx ; mov r12d, ebx ; jmp 0x200006f068f
0x0000020000064a08 : add edi, edi ; ret
0x0000020000428b22 : add edi, edi ; ret 0x5489
0x00000200004fdb38 : add edi, edi ; ret 0x8348
0x0000020000569a84 : add edi, edi ; ret 0x8349
0x0000020000199d6f : add edi, edi ; ret 0x8b49
0x000002000003d603 : add edi, edi ; ret 0x9489
0x0000020000024e24 : add edi, edi ; ret 0xff25
0x0000020000491b6b : add edi, edx ; ret 0x48ff
0x0000020000076cea : add edi, esi ; enter 0x48c3, -0x75 ; ret 0x2548
0x00000200003d724a : add edi, esi ; jmp 0x200003d7214
0x00000200000bead3 : add edi, esi ; ret
0x000002000064090b : add edi, esp ; ret 0x8bff
0x00000200003d7249 : add edi, r14d ; jmp 0x200003d7215
0x000002000007397a : add edi, r15d ; ret
0x000002000010ec0f : add edx, -8 ; jne 0x2000010ebd1 ; ret
0x000002000064d277 : add edx, 0x10 ; dec rdx ; jne 0x2000064d267 ; ret
0x0000020000492991 : add edx, 0x28 ; call 0x200000bf036
0x000002000064d8c1 : add edx, 0x28 ; cmp qword ptr [rdx], rax ; jne 0x2000064d8c3 ; ret
0x00000200001326a8 : add edx, 0x28 ; jmp 0x20000132674
0x00000200004927bf : add edx, 0x38 ; call 0x200000bf036
0x00000200006f39d0 : add edx, 0x40 ; call rax
0x00000200005197c2 : add edx, 0xfffffe00 ; jne 0x20000519774 ; ret
0x0000020000395abf : add edx, 4 ; dec ecx ; jne 0x20000395ac1 ; ret
0x0000020000023172 : add edx, 4 ; dec rcx ; jne 0x20000023178 ; ret
0x00000200006d16bd : add edx, 4 ; mov qword ptr [rbp - 0x10], rdx ; jmp 0x200006d1690
0x00000200006223ce : add edx, 8 ; dec r8 ; jne 0x200006223c3 ; ret
0x000002000017244b : add edx, 8 ; dec r9d ; jne 0x20000172432 ; ret
0x00000200004b5c1a : add edx, 8 ; mov rax, rdx ; ret
0x00000200003707d5 : add edx, 8 ; shr r9, 1 ; jne 0x2000037078a ; ret
0x00000200003f2fa9 : add edx, dword ptr [rax] ; ret
0x000002000038292f : add edx, dword ptr [rbx] ; add byte ptr [rbx - 0x7af00008], al ; ret 0x26bd
0x0000020000101b73 : add edx, dword ptr [rcx + 0x58] ; add rdx, rax ; jmp 0x20000101b44
0x0000020000264515 : add edx, dword ptr [rdx] ; ret
0x0000020000182920 : add edx, eax ; call qword ptr [rdi + 0x10]
0x0000020000101b77 : add edx, eax ; jmp 0x20000101b40
0x000002000014aa2b : add edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200000adc9a : add edx, eax ; xor eax, eax ; cmp ecx, edx ; setg al ; ret
0x000002000012d0db : add edx, ebx ; jmp rdx
0x000002000019a44c : add edx, ebx ; loop 0x2000019a45f ; ret 0x8b41
0x000002000042f729 : add edx, ecx ; jmp rdx
0x000002000019c558 : add edx, ecx ; mov qword ptr [r9], r8 ; mov eax, edx ; ret
0x0000020000425e9b : add edx, ecx ; movzx eax, dx ; ret
0x0000020000073999 : add edx, edi ; ret
0x00000200004a5070 : add edx, edi ; shr edx, 3 ; call 0x200000c7388
0x0000020000187b32 : add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x0000020000467144 : add edx, edx ; jmp rdx
0x0000020000073998 : add edx, r15d ; ret
0x00000200003c40c0 : add esi, 8 ; jmp 0x200003c4026
0x000002000004fe24 : add esi, dword ptr [rax + 0xa894901] ; ret
0x000002000038c9c4 : add esi, dword ptr [rax + 4] ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x2000038c999
0x000002000000e017 : add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x000002000006cdc7 : add esi, dword ptr [rax - 0x6f0c3cff] ; xor al, al ; ret
0x0000020000023548 : add esi, dword ptr [rbp + 0x16] ; mov rcx, rsi ; call r14
0x000002000006740b : add esi, dword ptr [rbp + 0x5c] ; mov rcx, rdi ; call rsi
0x0000020000441d74 : add esi, dword ptr [rbp + 5] ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x000002000038dfb6 : add esi, dword ptr [rbp + 6] ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x00000200000adf24 : add esi, dword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x0000020000655250 : add esi, dword ptr [rbp - 0x3b] ; xor eax, eax ; ret
0x0000020000199cf5 : add esi, dword ptr [rbx] ; fild dword ptr [rbp + 0x3b] ; ret 0x3875
0x000002000054c2ba : add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200000f9106 : add esi, dword ptr [rbx] ; rol bl, 0x41 ; mov eax, ecx ; ret
0x00000200004ac729 : add esi, dword ptr [rbx] ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000006626e : add esi, dword ptr [rbx] ; rol bl, 0x4c ; mov dword ptr [rdx + 8], eax ; ret
0x00000200000c03a6 : add esi, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005be26e : add esi, dword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200006c0561 : add esi, dword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret 0xff49
0x000002000001e2c7 : add esi, dword ptr [rdi + 0x24] ; mov eax, 1 ; ret
0x000002000008ff24 : add esi, dword ptr [rdi - 0x58ea1719] ; ret
0x00000200004b1f8e : add esi, dword ptr [rdx + rax - 0xd] ; ret
0x00000200001b4144 : add esi, dword ptr [rdx + rcx - 0x7d] ; rol dword ptr [rdx], -1 ; ret 0xf983
0x0000020000060e96 : add esi, dword ptr [rdx] ; add r8b, byte ptr [r9 + 0x22] ; ret
0x000002000041fa65 : add esi, dword ptr [rdx] ; ret
0x000002000014f693 : add esi, dword ptr [rdx] ; ret 0x3824
0x00000200000165f4 : add esi, dword ptr [rdx] ; rol bl, 0x48 ; jmp rcx
0x0000020000140649 : add esi, dword ptr [rsp + rax + 0x3b] ; ret
0x000002000011b9ba : add esi, dword ptr [rsp + rdx*8 + 0x48] ; add esp, 0x28 ; ret
0x00000200005386d9 : add esi, dword ptr [rsp - 0xa] ; ret 0x7402
0x00000200003c2eac : add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004f4422 : add esi, eax ; call 0x200001183bd
0x000002000056e05c : add esi, ebp ; inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a815
0x00000200004d8e13 : add esi, edi ; jmp 0x200004d8bc8
0x0000020000073981 : add esi, edi ; ret
0x000002000008b99d : add esi, edx ; call qword ptr [rcx]
0x000002000003fcab : add esi, esi ; ret
0x00000200005bdd72 : add esi, esi ; ret 0x7403
0x000002000006bc5e : add esi, esi ; ret 0x7502
0x000002000013d6a2 : add esi, esi ; ret 0xf02
0x00000200000eb72b : add esi, esi ; ret 0xf04
0x000002000003ff55 : add esi, esp ; mov rdx, rsi ; call r14
0x0000020000073980 : add esi, r15d ; ret
0x000002000002990e : add esp, 0x10 ; pop rdi ; ret
0x0000020000063a06 : add esp, 0x100 ; pop rbp ; ret
0x00000200001313b9 : add esp, 0x100 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000004f82f : add esp, 0x110 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000fe7bc : add esp, 0x118 ; ret
0x0000020000501360 : add esp, 0x120 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d9c65 : add esp, 0x128 ; pop r12 ; pop rbp ; ret
0x00000200000a9533 : add esp, 0x130 ; pop r15 ; ret
0x00000200004e3e59 : add esp, 0x130 ; pop rbp ; ret
0x000002000041b152 : add esp, 0x130 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000078678 : add esp, 0x138 ; ret
0x0000020000076c20 : add esp, 0x138 ; sti ; ret
0x0000020000707bd0 : add esp, 0x140 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006368bd : add esp, 0x140 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000402318 : add esp, 0x140 ; pop rdi ; ret
0x0000020000541fcb : add esp, 0x148 ; ret
0x00000200001944e3 : add esp, 0x150 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004b11a4 : add esp, 0x160 ; pop rbp ; ret
0x00000200001060e5 : add esp, 0x170 ; pop rbp ; ret
0x0000020000521020 : add esp, 0x170 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c7c5f : add esp, 0x18 ; pop r15 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000034b2 : add esp, 0x18 ; ret
0x0000020000372ab9 : add esp, 0x190 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000019abb2 : add esp, 0x190 ; pop rdi ; ret
0x00000200005a022d : add esp, 0x1a0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000007c2f7 : add esp, 0x1a8 ; ret
0x00000200001b30e3 : add esp, 0x1c0 ; pop rdi ; ret
0x00000200006c15d4 : add esp, 0x1e0 ; pop rbp ; ret
0x00000200006f33d9 : add esp, 0x20 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000041b971 : add esp, 0x20 ; pop r12 ; ret
0x0000020000523594 : add esp, 0x20 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000643e89 : add esp, 0x20 ; pop r14 ; jmp rax
0x000002000001ba04 : add esp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000003989e : add esp, 0x20 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200001398ff : add esp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000001aba5 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x00000200001ac3b9 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000b5ff : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000005059 : add esp, 0x20 ; pop r14 ; ret
0x000002000013b1f6 : add esp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000050ca06 : add esp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x0000020000004327 : add esp, 0x20 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000002784 : add esp, 0x20 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200003a09a4 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000acc3d : add esp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000974b : add esp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000005e312 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200003fa67f : add esp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200000f9280 : add esp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000492a0 : add esp, 0x20 ; pop r15 ; pop rsi ; pop rbx ; ret
0x00000200000386d4 : add esp, 0x20 ; pop r15 ; ret
0x000002000000b91d : add esp, 0x20 ; pop rbp ; ret
0x0000020000526003 : add esp, 0x20 ; pop rbx ; jmp 0x2000014c5ab
0x0000020000019c43 : add esp, 0x20 ; pop rbx ; jmp rax
0x00000200000043bd : add esp, 0x20 ; pop rbx ; ret
0x000002000019656e : add esp, 0x20 ; pop rcx ; ret
0x00000200004218e5 : add esp, 0x20 ; pop rdi ; jmp 0x2000004d1c7
0x00000200005cfc2c : add esp, 0x20 ; pop rdi ; jmp rax
0x00000200000d0970 : add esp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000105e9b : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000037eabe : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000142463 : add esp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000003408 : add esp, 0x20 ; pop rdi ; ret
0x000002000003046f : add esp, 0x20 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002f136 : add esp, 0x20 ; pop rsi ; ret
0x00000200001babc3 : add esp, 0x200 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005c4af7 : add esp, 0x210 ; pop rdi ; ret
0x00000200005a1ca0 : add esp, 0x230 ; pop rbp ; ret
0x000002000036444a : add esp, 0x230 ; pop rdi ; ret
0x000002000052b770 : add esp, 0x240 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000035f375 : add esp, 0x240 ; pop rdi ; ret
0x00000200004ef1c0 : add esp, 0x250 ; pop rdi ; ret
0x00000200005a0e59 : add esp, 0x260 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004ee646 : add esp, 0x260 ; pop rdi ; ret
0x0000020000363761 : add esp, 0x28 ; jmp 0x2000011f9a5
0x00000200005cb8de : add esp, 0x28 ; jmp qword ptr [r10]
0x00000200000b4386 : add esp, 0x28 ; jmp rax
0x000002000046c810 : add esp, 0x28 ; pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x0000020000463c5d : add esp, 0x28 ; pop r14 ; pop rbx ; ret
0x0000020000473783 : add esp, 0x28 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004385a2 : add esp, 0x28 ; pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000c6c74 : add esp, 0x28 ; pop r15 ; pop r14 ; ret
0x00000200003d7b38 : add esp, 0x28 ; pop r15 ; pop rdi ; ret
0x000002000015f9a9 : add esp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000e02ae : add esp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000affc6 : add esp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000046806f : add esp, 0x28 ; pop rsi ; pop rbp ; ret
0x0000020000003000 : add esp, 0x28 ; ret
0x000002000054d1fc : add esp, 0x280 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200006f66de : add esp, 0x290 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003b7d3d : add esp, 0x2e0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000b0879 : add esp, 0x30 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f59cd : add esp, 0x30 ; pop r12 ; ret
0x00000200000ab1ab : add esp, 0x30 ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000f5ba4 : add esp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000c8cbe : add esp, 0x30 ; pop r14 ; pop r12 ; pop rsi ; ret
0x00000200000f20fe : add esp, 0x30 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200001604f1 : add esp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ba44c : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000139161 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000361062 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x00000200001c78dc : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000019c24f : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002af28 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000054d9 : add esp, 0x30 ; pop r14 ; ret
0x00000200000059c1 : add esp, 0x30 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000003c5da : add esp, 0x30 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200001c28ac : add esp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000702d : add esp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000003a021 : add esp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000002cab5 : add esp, 0x30 ; pop r15 ; ret
0x00000200000a2de5 : add esp, 0x30 ; pop rbp ; ret
0x000002000007524f : add esp, 0x30 ; pop rbx ; pop rdi ; pop r12 ; ret
0x00000200000166c5 : add esp, 0x30 ; pop rbx ; ret
0x00000200000a835a : add esp, 0x30 ; pop rcx ; ret
0x00000200000061b8 : add esp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000e9c46 : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001191f5 : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000013b73 : add esp, 0x30 ; pop rdi ; ret
0x000002000003fe03 : add esp, 0x30 ; pop rsi ; ret
0x0000020000037f8a : add esp, 0x308 ; ret
0x000002000065a31e : add esp, 0x38 ; jmp r8
0x0000020000659911 : add esp, 0x38 ; jmp r9
0x0000020000659918 : add esp, 0x38 ; jmp rax
0x000002000042bded : add esp, 0x38 ; pop r12 ; pop rsi ; ret
0x00000200003704f4 : add esp, 0x38 ; pop r13 ; pop rbp ; ret
0x00000200000bb873 : add esp, 0x38 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003b1ae0 : add esp, 0x38 ; pop r14 ; pop r13 ; ret
0x00000200005201eb : add esp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003b85bd : add esp, 0x38 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001c70b3 : add esp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200001c80dc : add esp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000004e9a4 : add esp, 0x38 ; pop rdi ; pop rbx ; ret
0x00000200001c7657 : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046cce8 : add esp, 0x38 ; pop rdi ; pop rsi ; ret
0x000002000013e7e4 : add esp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200000064b1 : add esp, 0x38 ; ret
0x00000200005adbb8 : add esp, 0x390 ; pop rsi ; ret
0x00000200000460df : add esp, 0x40 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200004791d8 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x000002000011d6aa : add esp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000054baf7 : add esp, 0x40 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200004877c9 : add esp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200001b6ea0 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000c6e95 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000c70ad : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000041bc78 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003e068 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000e65b : add esp, 0x40 ; pop r14 ; ret
0x00000200004a9ff3 : add esp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200003bccd3 : add esp, 0x40 ; pop r15 ; pop r13 ; pop rbp ; ret
0x000002000001c10f : add esp, 0x40 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000061907 : add esp, 0x40 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200001344a9 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000001bd0f : add esp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200001017f9 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200005d0d3a : add esp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x0000020000433fb9 : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000004978c : add esp, 0x40 ; pop r15 ; ret
0x0000020000038cf8 : add esp, 0x40 ; pop rbp ; ret
0x000002000000546f : add esp, 0x40 ; pop rbx ; ret
0x00000200004d050d : add esp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000380d24 : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000005aa54 : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001b1c4 : add esp, 0x40 ; pop rdi ; ret
0x00000200003781b9 : add esp, 0x40 ; pop rsi ; ret
0x0000020000705509 : add esp, 0x450 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000da263 : add esp, 0x48 ; pop r12 ; pop rdi ; ret
0x00000200000ace95 : add esp, 0x48 ; pop r13 ; pop r12 ; ret
0x000002000045b445 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000177cc7 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000abd26 : add esp, 0x48 ; pop r15 ; pop r13 ; ret
0x00000200000e955e : add esp, 0x48 ; pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000160048 : add esp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000159805 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200000c0202 : add esp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001c73f3 : add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046c5a1 : add esp, 0x48 ; pop rsi ; pop rbx ; ret
0x0000020000016e0d : add esp, 0x48 ; ret
0x00000200000735ad : add esp, 0x4d8 ; ret
0x000002000007b5e5 : add esp, 0x50 ; call r10
0x00000200000be33f : add esp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000016f974 : add esp, 0x50 ; pop r13 ; ret
0x0000020000361583 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000039a106 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000047c699 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000040661c : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000045b50f : add esp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000002201b : add esp, 0x50 ; pop r14 ; ret
0x00000200005a3c73 : add esp, 0x50 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000127d88 : add esp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000026ded : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003a8bbd : add esp, 0x50 ; pop r15 ; ret
0x00000200000629ce : add esp, 0x50 ; pop rbp ; ret
0x000002000000280e : add esp, 0x50 ; pop rbx ; ret
0x0000020000134a33 : add esp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001020ca : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001a956a : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006e9a : add esp, 0x50 ; pop rdi ; ret
0x0000020000169923 : add esp, 0x50 ; pop rsi ; ret
0x000002000019cdcb : add esp, 0x518 ; ret
0x00000200000aa2d7 : add esp, 0x58 ; pop r13 ; pop rdi ; pop rbx ; pop rcx ; ret
0x00000200000d635c : add esp, 0x58 ; pop r13 ; pop rsi ; ret
0x00000200004dd03c : add esp, 0x58 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000109709 : add esp, 0x58 ; pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000a4f58 : add esp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200000452b2 : add esp, 0x58 ; pop rdi ; pop rbx ; ret
0x00000200000259f1 : add esp, 0x58 ; ret
0x00000200001b5a74 : add esp, 0x5c0 ; pop rbx ; ret
0x000002000046b004 : add esp, 0x60 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000051424 : add esp, 0x60 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000013888a : add esp, 0x60 ; pop r13 ; ret
0x00000200000ee470 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000153aa1 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001aac15 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000011aec9 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000cc983 : add esp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000552527 : add esp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x000002000006b186 : add esp, 0x60 ; pop rbp ; ret
0x00000200000070ca : add esp, 0x60 ; pop rbx ; ret
0x00000200001487b3 : add esp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000106966 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000036c97 : add esp, 0x60 ; pop rdi ; ret
0x00000200000b4959 : add esp, 0x68 ; pop r12 ; pop rdi ; ret
0x00000200000c9d94 : add esp, 0x68 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200000516d7 : add esp, 0x68 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000ef7f4 : add esp, 0x68 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000438993 : add esp, 0x68 ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000dbb6a : add esp, 0x68 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011769c : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000020000069f20 : add esp, 0x68 ; pop rdi ; pop rbx ; ret
0x0000020000536291 : add esp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001ee4f : add esp, 0x68 ; ret
0x00000200005156cb : add esp, 0x70 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000644a5 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003c30c2 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003f0d91 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000138d45 : add esp, 0x70 ; pop r14 ; ret
0x00000200005ade56 : add esp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000aa06c : add esp, 0x70 ; pop rbp ; ret
0x0000020000115328 : add esp, 0x70 ; pop rbx ; ret
0x00000200004ae7a0 : add esp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000001d4ba : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004ab672 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000117811 : add esp, 0x70 ; pop rdi ; ret
0x00000200000b28a4 : add esp, 0x70 ; pop rsi ; ret
0x000002000043aa0b : add esp, 0x78 ; pop r14 ; pop rsi ; ret
0x0000020000472573 : add esp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200003cf7b3 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b1e17 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000270f49 : add esp, 0x78 ; pop rsi ; pop rbp ; ret
0x0000020000116936 : add esp, 0x78 ; ret
0x00000200000e40af : add esp, 0x80 ; pop r12 ; ret
0x000002000016511f : add esp, 0x80 ; pop rbp ; ret
0x0000020000107ebc : add esp, 0x80 ; pop rbx ; ret
0x0000020000476b8a : add esp, 0x80 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000003a0e7 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001347c1 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000018550e : add esp, 0x80 ; pop rdi ; ret
0x00000200005a1992 : add esp, 0x830 ; pop rbp ; ret
0x00000200000aca06 : add esp, 0x88 ; pop rbp ; pop rbx ; ret
0x0000020000706d4a : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000200000eb812 : add esp, 0x88 ; pop rdi ; pop rbx ; ret
0x00000200000661c9 : add esp, 0x88 ; ret
0x00000200004d4f11 : add esp, 0x90 ; pop r12 ; ret
0x000002000015b3d9 : add esp, 0x90 ; pop rbp ; ret
0x0000020000120ea8 : add esp, 0x90 ; pop rbx ; ret
0x0000020000131569 : add esp, 0x90 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000003e5b7 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003cbe09 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000014ef1c : add esp, 0x90 ; pop rdi ; ret
0x000002000046a858 : add esp, 0x98 ; pop r13 ; pop rbp ; ret
0x000002000017accb : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000020000363323 : add esp, 0x98 ; ret
0x00000200000a19fb : add esp, 0xa0 ; pop r12 ; ret
0x00000200000acf1a : add esp, 0xa0 ; pop rbp ; ret
0x00000200004dd10b : add esp, 0xa0 ; pop rbx ; ret
0x00000200001bbc56 : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000161ec3 : add esp, 0xa0 ; pop rdi ; ret
0x0000020000439ad5 : add esp, 0xa0 ; pop rsi ; ret
0x000002000017ac05 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000200005a269a : add esp, 0xa8 ; pop rdi ; pop rbx ; ret
0x000002000011d1ad : add esp, 0xa8 ; ret
0x0000020000497cef : add esp, 0xb0 ; pop rbp ; ret
0x0000020000034344 : add esp, 0xb0 ; pop rbx ; ret
0x00000200004c6f1b : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001bcb07 : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000049bf5a : add esp, 0xb0 ; pop rdi ; ret
0x000002000017adc1 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000200005a275f : add esp, 0xb8 ; pop rdi ; pop rbx ; ret
0x00000200000aed6d : add esp, 0xb8 ; ret
0x000002000005c027 : add esp, 0xc0 ; pop rbp ; ret
0x0000020000019cf9 : add esp, 0xc0 ; pop rbx ; ret
0x000002000010503a : add esp, 0xc0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000a9617 : add esp, 0xc0 ; pop rdi ; ret
0x000002000017aec4 : add esp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000020000009d25 : add esp, 0xc8 ; ret
0x0000020000165b89 : add esp, 0xce0 ; pop rbx ; ret
0x0000020000165b4f : add esp, 0xce8 ; ret
0x0000020000020b6b : add esp, 0xd0 ; pop rbp ; ret
0x000002000007c554 : add esp, 0xd0 ; pop rbx ; ret
0x00000200004a0ddc : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000552ade : add esp, 0xd0 ; pop rdi ; ret
0x0000020000102c14 : add esp, 0xd8 ; ret
0x00000200001949d4 : add esp, 0xe0 ; pop rbp ; ret
0x000002000054d2a1 : add esp, 0xe0 ; pop rbx ; ret
0x0000020000170671 : add esp, 0xe0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003caaa2 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000550c66 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000191a8e : add esp, 0xe0 ; pop rdi ; ret
0x00000200000f56dd : add esp, 0xe8 ; pop r13 ; pop rdi ; ret
0x000002000011b359 : add esp, 0xf0 ; pop r13 ; ret
0x00000200000ac151 : add esp, 0xf0 ; pop rbp ; ret
0x00000200004c60ca : add esp, 0xf0 ; pop rdi ; ret
0x00000200006a114d : add esp, 8 ; jmp r8
0x0000020000061a6c : add esp, 8 ; ret
0x00000200001637b5 : add esp, dword ptr [r11] ; ret
0x0000020000478a39 : add esp, dword ptr [rax] ; sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001637b6 : add esp, dword ptr [rbx] ; ret
0x0000020000554228 : add esp, dword ptr [rcx + 0x24] ; jmp 0x2000055423c
0x0000020000393984 : add esp, dword ptr [rcx + rax] ; ret
0x0000020000081f78 : add esp, dword ptr [rcx] ; ret
0x0000020000623770 : add esp, dword ptr [rsi + 0x3b] ; ret 0x5074
0x000002000058f83d : add esp, dword ptr [rsi - 0x7d] ; ret
0x000002000017c138 : add esp, ecx ; add rsp, 0x38 ; ret
0x00000200005d343e : add esp, ecx ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001c6f57 : add esp, ecx ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003718b5 : add esp, edi ; mov rcx, r15 ; call 0x2000014db87
0x000002000007398d : add esp, edi ; ret
0x000002000007398c : add esp, r15d ; ret
0x00000200003f6f63 : add qword ptr [r10 + 0x18], r8 ; ret
0x000002000057a078 : add qword ptr [r11], 0x18 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000579fd6 : add qword ptr [r11], 0x28 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005640e6 : add qword ptr [r11], r15 ; ret 0xe75
0x0000020000372669 : add qword ptr [r13 + 0x2b], rcx ; ret
0x00000200005919e5 : add qword ptr [r13 + r9*4 + 5], r9 ; ret 0xec03
0x000002000000e706 : add qword ptr [r13 - 0x74bbfeaa], r9 ; ret
0x000002000069e110 : add qword ptr [r8 + 0x33], r9 ; ret 0x8948
0x00000200001e55ac : add qword ptr [r8 + 0x3b], rcx ; ret
0x00000200000f239e : add qword ptr [r8 - 0x75], rcx ; ret
0x000002000019c102 : add qword ptr [r8], 2 ; ret
0x00000200000ea031 : add qword ptr [r8], r8 ; add dh, dh ; ret
0x000002000000e8e3 : add qword ptr [r8], r8 ; add rsp, 0x38 ; ret
0x000002000007f875 : add qword ptr [r8], rax ; add cl, ch ; ret 0xffb7
0x00000200004f940c : add qword ptr [r9 + rdi + 0x1d], r9 ; ret
0x0000020000197c8a : add qword ptr [r9 - 0x75], rax ; ret
0x00000200000c819a : add qword ptr [r9 - 0x75], rax ; ret 0x2341
0x00000200001f6a87 : add qword ptr [r9 - 0x75], rax ; ret 0x8b45
0x00000200001a195f : add qword ptr [r9 - 0x7cb7fcbd], rcx ; ret
0x000002000059a0c2 : add qword ptr [r9 - 0x7d], rax ; ret
0x000002000069daaf : add qword ptr [rax + 0x33], r9 ; ret 0x8948
0x0000020000188e3e : add qword ptr [rax + 0x63], rcx ; ret 0xd13b
0x0000020000617bbd : add qword ptr [rax + r9*4 + 0x42], rax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200005c3d3a : add qword ptr [rax], rax ; add byte ptr [rbp + 0x33], al ; div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200004faa8a : add qword ptr [rax], rax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200006bd8e6 : add qword ptr [rcx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200006e7a8f : add qword ptr [rcx + 0x18], rax ; add rsp, 0x38 ; ret
0x00000200006bd8b5 : add qword ptr [rcx + 0x18], rax ; ret
0x00000200001adcdb : add qword ptr [rcx + 8], -0x18 ; ret
0x0000020000197c6c : add qword ptr [rcx - 0x75], rax ; ret
0x00000200001f6a69 : add qword ptr [rcx - 0x75], rax ; ret 0xe1f7
0x0000020000054b60 : add qword ptr [rcx - 0xa], r8 ; ret
0x0000020000004c34 : add qword ptr [rcx], rdx ; ret
0x00000200006ec4e9 : add qword ptr [rdx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200001a26b2 : add qword ptr [rdx], rcx ; ret
0x0000020000417624 : add r11b, al ; mov al, 6 ; ret
0x00000200003718b4 : add r12, r15 ; mov rcx, r15 ; call 0x2000014db88
0x00000200005640e0 : add r12b, byte ptr [r11] ; ret 0x8d45
0x0000020000554227 : add r12d, dword ptr [rcx + 0x24] ; jmp 0x2000055423d
0x00000200000bffe9 : add r13b, byte ptr [rbx] ; ret
0x000002000043e460 : add r14b, byte ptr [rax] ; sahf ; loop 0x2000043e483 ; ret 0xac83
0x00000200000a46a9 : add r14b, r14b ; ret
0x00000200004812ef : add r15, 0x18 ; jmp 0x200004812bc
0x0000020000555a08 : add r15b, byte ptr [rbx] ; ror dword ptr [rdi], -0x7e ; ret 5
0x00000200000c564b : add r15b, dil ; ret 0x348
0x000002000019fbc0 : add r8, 0x10 ; jmp 0x2000019fbea
0x00000200001a0399 : add r8, 0x10 ; jmp 0x200001a03c3
0x000002000019fbb6 : add r8, 0x14 ; jmp 0x2000019fbea
0x00000200001a038f : add r8, 0x14 ; jmp 0x200001a03c3
0x000002000019fbac : add r8, 0x18 ; jmp 0x2000019fbea
0x00000200001a0385 : add r8, 0x18 ; jmp 0x200001a03c3
0x000002000019fba2 : add r8, 0x1c ; jmp 0x2000019fbea
0x00000200001a037b : add r8, 0x1c ; jmp 0x200001a03c3
0x000002000019fbca : add r8, 0xc ; jmp 0x2000019fbea
0x00000200001a03a3 : add r8, 0xc ; jmp 0x200001a03c3
0x000002000019fc07 : add r8, 2 ; jmp 0x2000019fc31
0x00000200001e719f : add r8, 8 ; inc r10 ; jmp 0x200001e7193
0x000002000019fbd4 : add r8, 8 ; jmp 0x2000019fbea
0x00000200001a03ad : add r8, 8 ; jmp 0x200001a03c3
0x0000020000175f1a : add r8, qword ptr [r10 + r9*4 - 0x31] ; xor r8d, r8d ; call rax
0x00000200001d390f : add r8, qword ptr [r8] ; add bh, bh ; ret
0x0000020000188274 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004612ec : add r8, qword ptr [rax] ; add dh, dh ; ret
0x000002000011510a : add r8, qword ptr [rax] ; ret
0x00000200000d972a : add r8, r12 ; call r8
0x0000020000487400 : add r8, rcx ; dec r10 ; jne 0x200004873dc ; ret
0x00000200001bb1d2 : add r8, rcx ; jmp r8
0x00000200004c9e16 : add r8b, byte ptr [r8] ; add bh, dh ; ret 0xfccc
0x00000200000e1e8a : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000003a968 : add r8b, byte ptr [r8] ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x0000020000128b7d : add r8b, byte ptr [r8] ; add dh, dh ; ret
0x00000200004c6dfd : add r8b, byte ptr [r8] ; add dh, dh ; ret 0xf04
0x00000200001eea02 : add r8b, byte ptr [r8] ; jmp 0x200000aacb1
0x0000020000060e98 : add r8b, byte ptr [r9 + 0x22] ; ret
0x00000200000ecc14 : add r8b, byte ptr [rax] ; add dh, dh ; ret
0x00000200005d2f0c : add r8b, byte ptr [rbx + rdi] ; ret
0x00000200005a459e : add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200005a459a
0x000002000024c4d2 : add r8b, r11b ; ret 0x4d
0x0000020000539682 : add r8b, r13b ; xlatb ; ret 0xffbc
0x00000200000198db : add r8d, dword ptr [r11 - 0x74b7f020] ; ret
0x00000200000198ff : add r8d, dword ptr [rbx - 0x74b7f020] ; ret
0x00000200003bdfa3 : add r8d, dword ptr [rcx + 0xb] ; ret 0x8841
0x00000200001f6ea8 : add r8d, ecx ; jmp 0x200000de5be
0x000002000014fbf2 : add r9, 3 ; jmp 0x2000014fc4e
0x00000200005502d3 : add r9, rcx ; jmp r9
0x0000020000590a2b : add r9, rdx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x0000020000467ea3 : add r9b, byte ptr [r8 + 0x2b] ; ret
0x0000020000170976 : add r9b, byte ptr [r8 - 0x75] ; je 0x200001709a8 ; js 0x20000170911 ; ret
0x00000200001c3e4b : add r9b, byte ptr [r9 - 0x48f0bafe] ; ret
0x0000020000381ef1 : add r9b, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x0000020000110339 : add r9d, -8 ; jne 0x200001102e0 ; mov al, 1 ; ret
0x0000020000110338 : add r9d, -8 ; jne 0x200001102e1 ; mov al, 1 ; ret
0x000002000019f0e2 : add r9d, dword ptr [r8 + 3] ; ret
0x000002000010565d : add rax, -0x20 ; ret
0x0000020000576083 : add rax, -0x74b40000 ; ret
0x00000200005a5d69 : add rax, -0x7eb80000 ; ret
0x000002000004315a : add rax, -0x8b80000 ; ret
0x0000020000399dab : add rax, -4 ; add rsp, 0x28 ; ret
0x0000020000656634 : add rax, -8 ; ret
0x00000200004f48f2 : add rax, 0x10 ; ret
0x00000200004e1d42 : add rax, 0x1004 ; add rax, rdx ; ret
0x00000200004d5087 : add rax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004386e6 : add rax, 0x20 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000051080 : add rax, 0x20 ; add rsp, 0x28 ; ret
0x0000020000665903 : add rax, 0x20 ; ret
0x000002000038dd29 : add rax, 0x378 ; ret
0x00000200000c795a : add rax, 0x40 ; jne 0x200000c7939 ; sfence ; ret
0x0000020000125249 : add rax, 0x40 ; ret
0x00000200006c66ce : add rax, 0x850 ; ret
0x00000200004688b7 : add rax, 0xcc0 ; ret
0x00000200000cf0e6 : add rax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200004f0b3d : add rax, qword ptr [r8] ; add byte ptr [rbx - 0x6b74b63f], cl ; ret
0x00000200003bd7c8 : add rax, qword ptr [rax] ; add al, ch ; call qword ptr [rsi]
0x0000020000368044 : add rax, qword ptr [rbx] ; jmp 0x20000368010
0x00000200000dd77f : add rax, qword ptr [rcx + 0x98] ; ret
0x000002000064943e : add rax, qword ptr [rcx] ; xor eax, eax ; ret
0x00000200005438a7 : add rax, qword ptr [rip - 0x25d6e6] ; ret
0x00000200004012e5 : add rax, r10 ; jmp rax
0x0000020000069165 : add rax, r11 ; jmp rax
0x00000200000d9636 : add rax, r12 ; mov rdx, rbp ; call rax
0x00000200000b8736 : add rax, r8 ; jmp rax
0x00000200005367e1 : add rax, r8 ; mov qword ptr [rdx + 0x48], rax ; ret
0x0000020000182ea7 : add rax, r9 ; ret
0x00000200001e5910 : add rax, rax ; movzx eax, word ptr [r10 + rax*8 + 0xc] ; ret
0x000002000038de0a : add rax, rbp ; jg 0x2000038de56 ; int 0xff
0x0000020000027e46 : add rax, rbp ; ret
0x000002000003a187 : add rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000036d63 : add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019adf8 : add rax, rbx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000036ec01 : add rax, rcx ; add rsp, 0x38 ; ret
0x000002000058bf02 : add rax, rcx ; cmp r9, rax ; setae al ; ret
0x00000200003f252b : add rax, rcx ; jmp rax
0x0000020000424f7b : add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000006c20e : add rax, rcx ; ret
0x000002000019d33f : add rax, rdx ; cmp rcx, r10 ; jb 0x2000019d331 ; ret
0x0000020000046718 : add rax, rdx ; jmp 0x200000466c2
0x00000200000ca866 : add rax, rdx ; jmp 0x200000ca807
0x00000200004f4431 : add rax, rdx ; jmp 0x200004f43cb
0x000002000059676a : add rax, rdx ; jmp 0x20000596775
0x00000200003681a0 : add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x00000200004e1d48 : add rax, rdx ; ret
0x00000200006a105c : add rax, rdx ; sub rsp, 0x28 ; call rax
0x0000020000368d31 : add rbp, 3 ; call 0x200000d4fc6
0x000002000062377b : add rbx, 2 ; jmp 0x20000623776
0x0000020000423fd0 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x20000423fe3 ; ret
0x0000020000424014 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x20000424027 ; ret
0x00000200001326a3 : add rcx, 0x28 ; add rdx, 0x28 ; jmp 0x20000132679
0x00000200004e3eb6 : add rcx, 0x5984 ; call r14
0x00000200003c3ef1 : add rcx, 0xb40 ; jmp 0x200003c3ec5
0x0000020000102275 : add rcx, 0xbf8 ; jmp 0x20000102249
0x00000200004e72b7 : add rcx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x00000200005234c5 : add rcx, 6 ; call 0x2000014a4ab
0x0000020000123ad2 : add rcx, 8 ; call 0x200000cfd32
0x00000200003e0d08 : add rcx, r10 ; jmp rcx
0x0000020000068e8b : add rcx, r11 ; jmp rcx
0x00000200004671a8 : add rcx, r12 ; jmp rcx
0x000002000046e4f7 : add rcx, r13 ; jmp rcx
0x00000200001f4ec2 : add rcx, r8 ; jmp rcx
0x000002000002c81a : add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000002000013455b : add rcx, r9 ; jmp 0x20000134539
0x00000200000dd080 : add rcx, r9 ; jmp rcx
0x0000020000641ddf : add rcx, r9 ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x00000200004757d3 : add rcx, rax ; cmp r8d, r9d ; jb 0x200004757cf ; mov eax, edx ; ret
0x000002000038eb4a : add rcx, rax ; jmp 0x2000038eb16
0x00000200006161c5 : add rcx, rbp ; test edx, 0x8b44ffde ; ret
0x000002000043a67a : add rcx, rbx ; jmp rcx
0x00000200004118b2 : add rcx, rbx ; mov rdx, rbx ; call 0x2000051db68
0x000002000001809a : add rcx, rdi ; jmp rcx
0x0000020000069182 : add rcx, rdx ; jmp rcx
0x000002000046f028 : add rdi, 0x18 ; inc edx ; jmp 0x2000046efbb
0x00000200006f06b4 : add rdi, rbx ; mov r12d, ebx ; jmp 0x200006f0690
0x0000020000492990 : add rdx, 0x28 ; call 0x200000bf037
0x00000200001326a7 : add rdx, 0x28 ; jmp 0x20000132675
0x00000200004927be : add rdx, 0x38 ; call 0x200000bf037
0x00000200006f39cf : add rdx, 0x40 ; call rax
0x0000020000395abe : add rdx, 4 ; dec ecx ; jne 0x20000395ac2 ; ret
0x00000200006d16bc : add rdx, 4 ; mov qword ptr [rbp - 0x10], rdx ; jmp 0x200006d1691
0x000002000017244a : add rdx, 8 ; dec r9d ; jne 0x20000172433 ; ret
0x00000200004b5c19 : add rdx, 8 ; mov rax, rdx ; ret
0x0000020000101b72 : add rdx, qword ptr [rcx + 0x58] ; add rdx, rax ; jmp 0x20000101b45
0x0000020000467143 : add rdx, r10 ; jmp rdx
0x000002000012d0da : add rdx, r11 ; jmp rdx
0x000002000018291f : add rdx, rax ; call qword ptr [rdi + 0x10]
0x0000020000101b76 : add rdx, rax ; jmp 0x20000101b41
0x000002000047483e : add rdx, rbx ; jmp rdx
0x000002000042f728 : add rdx, rcx ; jmp rdx
0x00000200006c0560 : add rsi, qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret 0xff49
0x000002000003ff54 : add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200004f4421 : add rsi, rax ; call 0x200001183be
0x000002000002990d : add rsp, 0x10 ; pop rdi ; ret
0x0000020000063a05 : add rsp, 0x100 ; pop rbp ; ret
0x00000200000fe7bb : add rsp, 0x118 ; ret
0x00000200000a9532 : add rsp, 0x130 ; pop r15 ; ret
0x00000200004e3e58 : add rsp, 0x130 ; pop rbp ; ret
0x0000020000078677 : add rsp, 0x138 ; ret
0x0000020000076c1f : add rsp, 0x138 ; sti ; ret
0x0000020000402317 : add rsp, 0x140 ; pop rdi ; ret
0x0000020000541fca : add rsp, 0x148 ; ret
0x00000200004b11a3 : add rsp, 0x160 ; pop rbp ; ret
0x00000200001060e4 : add rsp, 0x170 ; pop rbp ; ret
0x00000200000034b1 : add rsp, 0x18 ; ret
0x000002000019abb1 : add rsp, 0x190 ; pop rdi ; ret
0x000002000007c2f6 : add rsp, 0x1a8 ; ret
0x00000200001b30e2 : add rsp, 0x1c0 ; pop rdi ; ret
0x00000200006c15d3 : add rsp, 0x1e0 ; pop rbp ; ret
0x00000200006f33d8 : add rsp, 0x20 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000041b970 : add rsp, 0x20 ; pop r12 ; ret
0x0000020000643e88 : add rsp, 0x20 ; pop r14 ; jmp rax
0x000002000001ba03 : add rsp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200001398fe : add rsp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000001aba4 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000000b5fe : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000005058 : add rsp, 0x20 ; pop r14 ; ret
0x000002000013b1f5 : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000050ca05 : add rsp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x00000200003a09a3 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000acc3c : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000974a : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000005e311 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200003fa67e : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200000f927f : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000004929f : add rsp, 0x20 ; pop r15 ; pop rsi ; pop rbx ; ret
0x00000200000386d3 : add rsp, 0x20 ; pop r15 ; ret
0x000002000000b91c : add rsp, 0x20 ; pop rbp ; ret
0x0000020000526002 : add rsp, 0x20 ; pop rbx ; jmp 0x2000014c5ac
0x0000020000019c42 : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200000043bc : add rsp, 0x20 ; pop rbx ; ret
0x000002000019656d : add rsp, 0x20 ; pop rcx ; ret
0x00000200004218e4 : add rsp, 0x20 ; pop rdi ; jmp 0x2000004d1c8
0x00000200004218e3 : add rsp, 0x20 ; pop rdi ; jmp 0x2000004d1c9
0x00000200005cfc2b : add rsp, 0x20 ; pop rdi ; jmp rax
0x00000200000d096f : add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000105e9a : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000037eabd : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000142462 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000003407 : add rsp, 0x20 ; pop rdi ; ret
0x000002000003046e : add rsp, 0x20 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002f135 : add rsp, 0x20 ; pop rsi ; ret
0x00000200005c4af6 : add rsp, 0x210 ; pop rdi ; ret
0x00000200005a1c9f : add rsp, 0x230 ; pop rbp ; ret
0x0000020000364449 : add rsp, 0x230 ; pop rdi ; ret
0x000002000035f374 : add rsp, 0x240 ; pop rdi ; ret
0x00000200004ef1bf : add rsp, 0x250 ; pop rdi ; ret
0x00000200004ee645 : add rsp, 0x260 ; pop rdi ; ret
0x0000020000363760 : add rsp, 0x28 ; jmp 0x2000011f9a6
0x00000200005cb8dd : add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200000b4385 : add rsp, 0x28 ; jmp rax
0x0000020000463c5c : add rsp, 0x28 ; pop r14 ; pop rbx ; ret
0x0000020000473782 : add rsp, 0x28 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c6c73 : add rsp, 0x28 ; pop r15 ; pop r14 ; ret
0x00000200003d7b37 : add rsp, 0x28 ; pop r15 ; pop rdi ; ret
0x000002000015f9a8 : add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000e02ad : add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000affc5 : add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000046806e : add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x0000020000002fff : add rsp, 0x28 ; ret
0x00000200000b0878 : add rsp, 0x30 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f59cc : add rsp, 0x30 ; pop r12 ; ret
0x00000200000ab1aa : add rsp, 0x30 ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000f5ba3 : add rsp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000c8cbd : add rsp, 0x30 ; pop r14 ; pop r12 ; pop rsi ; ret
0x00000200001604f0 : add rsp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ba44b : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000139160 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000361061 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000002af27 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000054d8 : add rsp, 0x30 ; pop r14 ; ret
0x00000200001c28ab : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000702c : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000003a020 : add rsp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000002cab4 : add rsp, 0x30 ; pop r15 ; ret
0x00000200000a2de4 : add rsp, 0x30 ; pop rbp ; ret
0x000002000007524e : add rsp, 0x30 ; pop rbx ; pop rdi ; pop r12 ; ret
0x00000200000166c4 : add rsp, 0x30 ; pop rbx ; ret
0x00000200000a8359 : add rsp, 0x30 ; pop rcx ; ret
0x00000200000061b7 : add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000e9c45 : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001191f4 : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000013b72 : add rsp, 0x30 ; pop rdi ; ret
0x000002000003fe02 : add rsp, 0x30 ; pop rsi ; ret
0x0000020000037f89 : add rsp, 0x308 ; ret
0x000002000065a31d : add rsp, 0x38 ; jmp r8
0x0000020000659910 : add rsp, 0x38 ; jmp r9
0x0000020000659917 : add rsp, 0x38 ; jmp rax
0x000002000042bdec : add rsp, 0x38 ; pop r12 ; pop rsi ; ret
0x00000200003704f3 : add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x00000200000bb872 : add rsp, 0x38 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003b1adf : add rsp, 0x38 ; pop r14 ; pop r13 ; ret
0x00000200005201ea : add rsp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001c70b2 : add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200001c80db : add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000004e9a3 : add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x00000200001c7656 : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046cce7 : add rsp, 0x38 ; pop rdi ; pop rsi ; ret
0x000002000013e7e3 : add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200000064b0 : add rsp, 0x38 ; ret
0x00000200005adbb7 : add rsp, 0x390 ; pop rsi ; ret
0x00000200000460de : add rsp, 0x40 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200004791d7 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x000002000011d6a9 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004877c8 : add rsp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200001b6e9f : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000c6e94 : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000003e067 : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000e65a : add rsp, 0x40 ; pop r14 ; ret
0x00000200004a9ff2 : add rsp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200003bccd2 : add rsp, 0x40 ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200001344a8 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000001bd0e : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200005d0d39 : add rsp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x0000020000433fb8 : add rsp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000004978b : add rsp, 0x40 ; pop r15 ; ret
0x0000020000038cf7 : add rsp, 0x40 ; pop rbp ; ret
0x000002000000546e : add rsp, 0x40 ; pop rbx ; ret
0x00000200004d050c : add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000380d23 : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000005aa53 : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001b1c3 : add rsp, 0x40 ; pop rdi ; ret
0x00000200003781b8 : add rsp, 0x40 ; pop rsi ; ret
0x00000200000da262 : add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x00000200000ace94 : add rsp, 0x48 ; pop r13 ; pop r12 ; ret
0x000002000045b444 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000177cc6 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000abd25 : add rsp, 0x48 ; pop r15 ; pop r13 ; ret
0x00000200000e955d : add rsp, 0x48 ; pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000160047 : add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000159804 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200000c0201 : add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001c73f2 : add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046c5a0 : add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x0000020000016e0c : add rsp, 0x48 ; ret
0x00000200000735ac : add rsp, 0x4d8 ; ret
0x000002000007b5e4 : add rsp, 0x50 ; call r10
0x00000200000be33e : add rsp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000016f973 : add rsp, 0x50 ; pop r13 ; ret
0x0000020000361582 : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000040661b : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000045b50e : add rsp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000002201a : add rsp, 0x50 ; pop r14 ; ret
0x00000200005a3c72 : add rsp, 0x50 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000127d87 : add rsp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003a8bbc : add rsp, 0x50 ; pop r15 ; ret
0x00000200000629cd : add rsp, 0x50 ; pop rbp ; ret
0x000002000000280d : add rsp, 0x50 ; pop rbx ; ret
0x0000020000134a32 : add rsp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001020c9 : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001a9569 : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006e99 : add rsp, 0x50 ; pop rdi ; ret
0x0000020000169922 : add rsp, 0x50 ; pop rsi ; ret
0x000002000019cdca : add rsp, 0x518 ; ret
0x00000200000aa2d6 : add rsp, 0x58 ; pop r13 ; pop rdi ; pop rbx ; pop rcx ; ret
0x00000200000d635b : add rsp, 0x58 ; pop r13 ; pop rsi ; ret
0x00000200004dd03b : add rsp, 0x58 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000a4f57 : add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200000452b1 : add rsp, 0x58 ; pop rdi ; pop rbx ; ret
0x00000200000259f0 : add rsp, 0x58 ; ret
0x00000200001b5a73 : add rsp, 0x5c0 ; pop rbx ; ret
0x000002000046b003 : add rsp, 0x60 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000051423 : add rsp, 0x60 ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000138889 : add rsp, 0x60 ; pop r13 ; ret
0x00000200000ee46f : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000011aec8 : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000cc982 : add rsp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000552526 : add rsp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x000002000006b185 : add rsp, 0x60 ; pop rbp ; ret
0x00000200000070c9 : add rsp, 0x60 ; pop rbx ; ret
0x00000200001487b2 : add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000106965 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000036c96 : add rsp, 0x60 ; pop rdi ; ret
0x00000200000b4958 : add rsp, 0x68 ; pop r12 ; pop rdi ; ret
0x00000200000ef7f3 : add rsp, 0x68 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000dbb69 : add rsp, 0x68 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011769b : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000020000069f1f : add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x0000020000536290 : add rsp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001ee4e : add rsp, 0x68 ; ret
0x00000200005156ca : add rsp, 0x70 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f0d90 : add rsp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000138d44 : add rsp, 0x70 ; pop r14 ; ret
0x00000200005ade55 : add rsp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000aa06b : add rsp, 0x70 ; pop rbp ; ret
0x0000020000115327 : add rsp, 0x70 ; pop rbx ; ret
0x00000200004ae79f : add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000001d4b9 : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004ab671 : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000117810 : add rsp, 0x70 ; pop rdi ; ret
0x00000200000b28a3 : add rsp, 0x70 ; pop rsi ; ret
0x000002000043aa0a : add rsp, 0x78 ; pop r14 ; pop rsi ; ret
0x0000020000472572 : add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200003cf7b2 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b1e16 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000270f48 : add rsp, 0x78 ; pop rsi ; pop rbp ; ret
0x0000020000116935 : add rsp, 0x78 ; ret
0x00000200000e40ae : add rsp, 0x80 ; pop r12 ; ret
0x000002000016511e : add rsp, 0x80 ; pop rbp ; ret
0x0000020000107ebb : add rsp, 0x80 ; pop rbx ; ret
0x000002000018550d : add rsp, 0x80 ; pop rdi ; ret
0x00000200005a1991 : add rsp, 0x830 ; pop rbp ; ret
0x00000200000aca05 : add rsp, 0x88 ; pop rbp ; pop rbx ; ret
0x0000020000706d49 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000200000eb811 : add rsp, 0x88 ; pop rdi ; pop rbx ; ret
0x00000200000661c8 : add rsp, 0x88 ; ret
0x00000200004d4f10 : add rsp, 0x90 ; pop r12 ; ret
0x000002000015b3d8 : add rsp, 0x90 ; pop rbp ; ret
0x0000020000120ea7 : add rsp, 0x90 ; pop rbx ; ret
0x000002000014ef1b : add rsp, 0x90 ; pop rdi ; ret
0x000002000017acca : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000020000363322 : add rsp, 0x98 ; ret
0x00000200000a19fa : add rsp, 0xa0 ; pop r12 ; ret
0x00000200000acf19 : add rsp, 0xa0 ; pop rbp ; ret
0x00000200004dd10a : add rsp, 0xa0 ; pop rbx ; ret
0x0000020000161ec2 : add rsp, 0xa0 ; pop rdi ; ret
0x0000020000439ad4 : add rsp, 0xa0 ; pop rsi ; ret
0x000002000017ac04 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000200005a2699 : add rsp, 0xa8 ; pop rdi ; pop rbx ; ret
0x000002000011d1ac : add rsp, 0xa8 ; ret
0x0000020000497cee : add rsp, 0xb0 ; pop rbp ; ret
0x0000020000034343 : add rsp, 0xb0 ; pop rbx ; ret
0x000002000049bf59 : add rsp, 0xb0 ; pop rdi ; ret
0x000002000017adc0 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000200005a275e : add rsp, 0xb8 ; pop rdi ; pop rbx ; ret
0x00000200000aed6c : add rsp, 0xb8 ; ret
0x000002000005c026 : add rsp, 0xc0 ; pop rbp ; ret
0x0000020000019cf8 : add rsp, 0xc0 ; pop rbx ; ret
0x00000200000a9616 : add rsp, 0xc0 ; pop rdi ; ret
0x000002000017aec3 : add rsp, 0xc8 ; pop rbx ; pop rbp ; ret
0x0000020000009d24 : add rsp, 0xc8 ; ret
0x0000020000165b88 : add rsp, 0xce0 ; pop rbx ; ret
0x0000020000165b4e : add rsp, 0xce8 ; ret
0x0000020000020b6a : add rsp, 0xd0 ; pop rbp ; ret
0x000002000007c553 : add rsp, 0xd0 ; pop rbx ; ret
0x0000020000552add : add rsp, 0xd0 ; pop rdi ; ret
0x0000020000102c13 : add rsp, 0xd8 ; ret
0x00000200001949d3 : add rsp, 0xe0 ; pop rbp ; ret
0x000002000054d2a0 : add rsp, 0xe0 ; pop rbx ; ret
0x0000020000191a8d : add rsp, 0xe0 ; pop rdi ; ret
0x000002000011b358 : add rsp, 0xf0 ; pop r13 ; ret
0x00000200000ac150 : add rsp, 0xf0 ; pop rbp ; ret
0x00000200004c60c9 : add rsp, 0xf0 ; pop rdi ; ret
0x00000200006a114c : add rsp, 8 ; jmp r8
0x0000020000061a6b : add rsp, 8 ; ret
0x0000020000159106 : add sil, byte ptr [r11 + 3] ; xor al, al ; ret
0x000002000004772c : add sil, byte ptr [r14 + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000bf29f : add sil, r11b ; ret
0x0000020000020a78 : add sil, r14b ; ret 0xf04
0x0000020000018c12 : add sil, sil ; ret
0x000002000025d3a2 : add spl, bpl ; jmp qword ptr [rbx]
0x00000200004c37e9 : add spl, byte ptr [rsi + 0x3b] ; ret
0x000002000022cc5e : add spl, r15b ; ret 0x23
0x0000020000261586 : add spl, r9b ; ret 0x23
0x0000020000177e2a : add word ptr [rcx + 0x66], ax ; ret
0x0000020000517596 : add word ptr [rcx + 0xa], dx ; ret
0x00000200003e027e : add word ptr [rdi - 0x5e], bx ; mov rax, rdx ; jmp 0x200003e0261
0x000002000017416d : add word ptr [rip + 0x110e80], ax ; ret
0x000002000036d924 : and ah, al ; add rsp, 0x28 ; ret
0x0000020000016ddd : and ah, al ; mov cr4, rcx ; ret
0x00000200004e4464 : and ah, al ; push qword ptr [rdi + 2] ; ret
0x000002000037154e : and ah, bl ; add rsp, 0x28 ; ret
0x0000020000601c74 : and ah, bl ; dec esp ; mov rcx, rdi ; call 0x2000012deb5
0x000002000070ed6e : and ah, byte ptr [rsi + 0x3b] ; ret 0x3a72
0x0000020000706b79 : and ah, byte ptr [rsi + 0x3b] ; ret 0x820f
0x000002000070699e : and ah, byte ptr [rsi + 0x3b] ; ret 0x8d72
0x0000020000016de0 : and ah, cl ; ret
0x0000020000060cec : and al, 0 ; add al, al ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001043b9 : and al, 0 ; add al, al ; jmp 0x20000104387
0x0000020000055ed0 : and al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200000d4a34 : and al, 0 ; add dword ptr [rax], eax ; add al, ch ; ret 0x1e8
0x000002000007b501 : and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000057a95d : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001f9545 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8948
0x00000200005214c2 : and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000058f70 : and al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000039b26 : and al, 0 ; add rsp, 0x28 ; ret
0x000002000025ee72 : and al, 0 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000056964b : and al, 0 ; cmp rcx, qword ptr [rcx] ; sete al ; ret
0x0000020000365396 : and al, 0 ; je 0x200003653a1 ; ret
0x00000200003681cb : and al, 0 ; je 0x200003681dc ; add rsp, 0x28 ; ret
0x000002000038b65d : and al, 0 ; mov al, 1 ; ret
0x0000020000392ba6 : and al, 0 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e0df8 : and al, 0 ; mov byte ptr [rip - 0x26063e], 1 ; ret
0x00000200003cb359 : and al, 0 ; mov eax, 0xc000000d ; pop rbx ; ret
0x00000200003abfbf : and al, 0 ; mov eax, r9d ; ret
0x000002000069e079 : and al, 0 ; or byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000030e65 : and al, 0 ; ret
0x0000020000055eec : and al, 0 ; test dl, dl ; je 0x20000055eff ; mov al, byte ptr [rax + rcx*2] ; ret
0x000002000003c1eb : and al, 0 ; test eax, eax ; js 0x2000003c1fc ; xor al, al ; ret
0x000002000003c1ea : and al, 0 ; test eax, eax ; js 0x2000003c1fd ; xor al, al ; ret
0x00000200003c2455 : and al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000139b06 : and al, 0 ; xor eax, eax ; ret
0x00000200004693d9 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8d4d
0x00000200004307a2 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000040b081 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8488
0x00000200000bd102 : and al, 0x10 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000063c7e : and al, 0x10 ; je 0x200001dc685 ; ret
0x00000200000d8789 : and al, 0x10 ; mov al, r9b ; ret
0x000002000003f825 : and al, 0x10 ; mov byte ptr [r8 + 4], r9b ; ret
0x0000020000100f10 : and al, 0x10 ; mov dword ptr [r11 + 0x18], ecx ; ret
0x00000200003cb305 : and al, 0x10 ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000200001b783d : and al, 0x10 ; mov eax, 1 ; ret
0x0000020000192d1f : and al, 0x10 ; mov eax, edx ; ret
0x000002000019d034 : and al, 0x10 ; mov eax, r10d ; ret
0x000002000002722d : and al, 0x10 ; mov eax, r11d ; ret
0x00000200000a96d7 : and al, 0x10 ; mov eax, r8d ; add rsp, 8 ; ret
0x0000020000191825 : and al, 0x10 ; mov eax, r8d ; ret
0x000002000003ecd1 : and al, 0x10 ; mov eax, r9d ; ret
0x00000200004cf6e4 : and al, 0x10 ; mov rax, r10 ; ret
0x000002000018b9da : and al, 0x10 ; mov rax, r9 ; ret
0x000002000059b1d3 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000002d305 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000464ee2 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; sub eax, edx ; ret
0x00000200001405b3 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; xor eax, eax ; ret
0x000002000017674a : and al, 0x10 ; mov word ptr [r11], cx ; ret
0x0000020000002fa7 : and al, 0x10 ; ret
0x00000200003f0ff3 : and al, 0x10 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003f109d : and al, 0x10 ; shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x000002000039a227 : and al, 0x10 ; test edx, edx ; sete al ; ret
0x00000200000ca895 : and al, 0x10 ; xor eax, eax ; ret
0x00000200001b992c : and al, 0x11 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200001438c4 : and al, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000050344e : and al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000192c1b : and al, 0x18 ; mov al, r10b ; ret
0x00000200000ab7d2 : and al, 0x18 ; mov al, r9b ; ret
0x00000200001a1b24 : and al, 0x18 ; mov byte ptr [rip + 0x15452b], 1 ; ret
0x000002000017f256 : and al, 0x18 ; mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000059b1d8 : and al, 0x18 ; mov eax, ecx ; ret
0x000002000013a4b7 : and al, 0x18 ; mov eax, r10d ; ret
0x000002000019dadd : and al, 0x18 ; mov eax, r11d ; ret
0x000002000063fc5a : and al, 0x18 ; mov qword ptr [rdx], r11 ; mov rax, r9 ; ret
0x000002000014c7e1 : and al, 0x18 ; mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000001fc7f : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x0000020000060ba1 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000024310 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000013b40b : and al, 0x18 ; mov word ptr [rip + 0x149be0], cx ; ret
0x000002000002d30a : and al, 0x18 ; ret
0x0000020000464ee7 : and al, 0x18 ; sub eax, edx ; ret
0x00000200001405b8 : and al, 0x18 ; xor eax, eax ; ret
0x000002000063181d : and al, 0x19 ; add byte ptr [rax], al ; add cl, ch ; ret 0xe4e8
0x00000200003e8788 : and al, 0x1b ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x0000020000481e28 : and al, 0x1b ; ret 0x45ff
0x000002000000e1f1 : and al, 0x1e ; add dh, dh ; ret
0x00000200005e2301 : and al, 0x20 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e538
0x000002000053d947 : and al, 0x20 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e539
0x00000200003aaa8f : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004860ef : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x0000020000630b83 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x000002000039dbcc : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x00000200004882a0 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x00000200003c67e6 : and al, 0x20 ; add al, ch ; ret 0x81e
0x00000200006c2d66 : and al, 0x20 ; add al, ch ; ret 0xcbf3
0x00000200006ed253 : and al, 0x20 ; add byte ptr [rax], 0 ; add al, ch ; ret 0xd044
0x00000200005dc9aa : and al, 0x20 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005cbf8f : and al, 0x20 ; add byte ptr [rbp + 0x33], al ; leave ; call r10
0x0000020000519064 : and al, 0x20 ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf3b0
0x00000200003c2ba2 : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000642da6 : and al, 0x20 ; add byte ptr [rbx], ch ; ret 0x8d4c
0x000002000037e1eb : and al, 0x20 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000651ce5 : and al, 0x20 ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006512b9 : and al, 0x20 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b4c
0x000002000006ea87 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006112ac : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200005e2243 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000015e538
0x00000200005e2242 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000015e539
0x00000200003b6b9d : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r10
0x00000200004a9153 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r12
0x000002000039af1b : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000200004ecc93 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call r15
0x000002000039db22 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x000002000048823c : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rsi
0x000002000054e0c6 : and al, 0x20 ; add eax, ebp ; ret 0xf9e0
0x000002000046806c : and al, 0x20 ; add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x00000200004c8662 : and al, 0x20 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000b8d27 : and al, 0x20 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042bdea : and al, 0x20 ; add rsp, 0x38 ; pop r12 ; pop rsi ; ret
0x000002000004e9a1 : and al, 0x20 ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x0000020000038175 : and al, 0x20 ; add rsp, 0x38 ; ret
0x00000200000c01ff : and al, 0x20 ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200003b253e : and al, 0x20 ; and edx, 1 ; call rdi
0x000002000000f623 : and al, 0x20 ; call 0x20000017fcd
0x0000020000425222 : and al, 0x20 ; call 0x2000004fd25
0x0000020000425221 : and al, 0x20 ; call 0x2000004fd26
0x000002000051cb9c : and al, 0x20 ; call 0x20000056cd9
0x000002000018003d : and al, 0x20 ; call 0x2000007c344
0x000002000018003c : and al, 0x20 ; call 0x2000007c345
0x0000020000490f53 : and al, 0x20 ; call 0x2000007d1c4
0x0000020000490f52 : and al, 0x20 ; call 0x2000007d1c5
0x0000020000545dbd : and al, 0x20 ; call 0x200000a2044
0x000002000047a12e : and al, 0x20 ; call 0x200000a2045
0x0000020000480b61 : and al, 0x20 ; call 0x200000a66a5
0x0000020000480b60 : and al, 0x20 ; call 0x200000a66a6
0x000002000064af03 : and al, 0x20 ; call 0x200000a7114
0x00000200001ecfa2 : and al, 0x20 ; call 0x200000a91e4
0x00000200001ecfa1 : and al, 0x20 ; call 0x200000a91e5
0x0000020000126b75 : and al, 0x20 ; call 0x200000b67a9
0x0000020000491b68 : and al, 0x20 ; call 0x200000bf275
0x0000020000491b67 : and al, 0x20 ; call 0x200000bf276
0x00000200000e7c2c : and al, 0x20 ; call 0x200000f3ed4
0x00000200000e7c2b : and al, 0x20 ; call 0x200000f3ed5
0x000002000051dba8 : and al, 0x20 ; call 0x2000014a301
0x000002000051dba7 : and al, 0x20 ; call 0x2000014a302
0x00000200005259df : and al, 0x20 ; call 0x20000150f09
0x00000200005259de : and al, 0x20 ; call 0x20000150f0a
0x00000200005e2299 : and al, 0x20 ; call 0x2000015e534
0x0000020000542f8d : and al, 0x20 ; call 0x2000016d2ad
0x0000020000542f8c : and al, 0x20 ; call 0x2000016d2ae
0x00000200006ea73d : and al, 0x20 ; call 0x20000364d89
0x00000200001cde6f : and al, 0x20 ; call 0x2000037b059
0x00000200003a143e : and al, 0x20 ; call 0x200003a08f1
0x00000200005c99ec : and al, 0x20 ; call 0x200003b5cbc
0x00000200005c99eb : and al, 0x20 ; call 0x200003b5cbd
0x000002000059a697 : and al, 0x20 ; call 0x200003c68f0
0x0000020000104122 : and al, 0x20 ; call 0x200003e0404
0x0000020000472052 : and al, 0x20 ; call 0x2000046e314
0x00000200004d6b25 : and al, 0x20 ; call 0x200004d9908
0x00000200004d6b24 : and al, 0x20 ; call 0x200004d9909
0x000002000061d8d2 : and al, 0x20 ; call 0x20000594290
0x000002000061d8d1 : and al, 0x20 ; call 0x20000594291
0x0000020000643b8d : and al, 0x20 ; call 0x200006436f9
0x000002000065b367 : and al, 0x20 ; call 0x20000648179
0x000002000064fedb : and al, 0x20 ; call 0x200006587d1
0x0000020000592cf7 : and al, 0x20 ; call qword ptr [r11]
0x0000020000653ec0 : and al, 0x20 ; call qword ptr [rip + 0x3c2a0]
0x00000200003a77ad : and al, 0x20 ; call qword ptr [rsi]
0x0000020000037c0c : and al, 0x20 ; call r10
0x00000200000dd8ea : and al, 0x20 ; call r11
0x00000200003aaa19 : and al, 0x20 ; call r12
0x00000200003aa8dd : and al, 0x20 ; call r14
0x00000200003c996a : and al, 0x20 ; call r15
0x000002000039f74f : and al, 0x20 ; call rax
0x00000200003b5ade : and al, 0x20 ; call rbx
0x0000020000443be9 : and al, 0x20 ; call rdi
0x0000020000385bd3 : and al, 0x20 ; call rsi
0x00000200003e6724 : and al, 0x20 ; cmp ebx, 4 ; je 0x200003e6738 ; call r12
0x00000200003e6723 : and al, 0x20 ; cmp ebx, 4 ; je 0x200003e6739 ; call r12
0x00000200004aa77d : and al, 0x20 ; enter 0, 0 ; call r10
0x00000200000cb116 : and al, 0x20 ; jmp 0x200000caf25
0x00000200003a8b5f : and al, 0x20 ; jmp 0x200003a8bac
0x000002000001bccc : and al, 0x20 ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x00000200005c552e : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; mov rcx, r15 ; call rsi
0x00000200005c53b6 : and al, 0x20 ; lea r8d, dword ptr [r9 + 2] ; mov rcx, r15 ; call rsi
0x0000020000168dd6 : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x0000020000150ba7 : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x00000200005e003b : and al, 0x20 ; loop 0x200005e0048 ; add byte ptr [rax], al ; call 0x2000007c348
0x00000200005e003a : and al, 0x20 ; loop 0x200005e0049 ; add byte ptr [rax], al ; call 0x2000007c349
0x0000020000708132 : and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x0000020000112cb1 : and al, 0x20 ; mov al, r10b ; ret
0x0000020000060c3e : and al, 0x20 ; mov dword ptr [r9], r10d ; xor eax, eax ; pop rdi ; ret
0x0000020000669b8d : and al, 0x20 ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200004a6b66 : and al, 0x20 ; mov ecx, 0x800c ; call rax
0x0000020000522d11 : and al, 0x20 ; mov ecx, edi ; call rsi
0x000002000070efa9 : and al, 0x20 ; mov ecx, r15d ; call 0x200000fb20f
0x00000200005d5b14 : and al, 0x20 ; mov edx, 2 ; call 0x20000441dd9
0x00000200005201ac : and al, 0x20 ; mov edx, esi ; mov rcx, r14 ; call r9
0x0000020000396c86 : and al, 0x20 ; mov edx, r10d ; call r11
0x00000200001c5e1b : and al, 0x20 ; mov qword ptr [rdx - 0x58], r8 ; ret
0x0000020000423be2 : and al, 0x20 ; mov r15d, eax ; call 0x200000522b4
0x000002000064c4a6 : and al, 0x20 ; mov r9, rbx ; mov rcx, r14 ; call rax
0x00000200005c7d35 : and al, 0x20 ; mov r9d, 2 ; call rax
0x00000200005c7d6e : and al, 0x20 ; mov r9d, 3 ; call rax
0x0000020000391aa4 : and al, 0x20 ; mov rbp, qword ptr [rsp + 0x28] ; pop rsi ; ret
0x00000200003f5bbd : and al, 0x20 ; mov rcx, r13 ; call 0x20000441dd7
0x00000200003f5bbc : and al, 0x20 ; mov rcx, r13 ; call 0x20000441dd8
0x00000200005c6f21 : and al, 0x20 ; mov rcx, r14 ; mov rdx, r12 ; call rsi
0x0000020000487522 : and al, 0x20 ; mov rcx, r15 ; mov rdx, r12 ; call rdi
0x0000020000423b55 : and al, 0x20 ; mov rcx, rax ; call 0x200000522b4
0x0000020000421ce7 : and al, 0x20 ; mov rcx, rbp ; call 0x2000004fa8c
0x000002000064700c : and al, 0x20 ; mov rcx, rbp ; call rax
0x000002000064736c : and al, 0x20 ; mov rcx, rsi ; call r12
0x0000020000157cc4 : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x000002000049ef8d : and al, 0x20 ; mov rdx, rbx ; call 0x200000bf278
0x000002000049ef8c : and al, 0x20 ; mov rdx, rbx ; call 0x200000bf279
0x00000200007055bd : and al, 0x20 ; movzx eax, r9w ; ret
0x00000200006d0b43 : and al, 0x20 ; nop ; add byte ptr [rax], al ; add al, ch ; ret 0xffa4
0x00000200005dd7df : and al, 0x20 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x200003899f8
0x00000200005dd7de : and al, 0x20 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x200003899f9
0x0000020000548c8e : and al, 0x20 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200005b4ef8
0x0000020000548c8d : and al, 0x20 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200005b4ef9
0x000002000019a749 : and al, 0x20 ; pop r14 ; ret
0x0000020000060ba6 : and al, 0x20 ; pop rdi ; ret
0x00000200005204b3 : and al, 0x20 ; push -0x178d9d97 ; add bh, ah ; ret 0x48ff
0x000002000001fc84 : and al, 0x20 ; ret
0x00000200005e22bc : and al, 0x20 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e538
0x000002000053d9b7 : and al, 0x20 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e539
0x000002000043a879 : and al, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000002000047714e : and al, 0x20 ; xor edx, edx ; call 0x200000a3957
0x000002000047714d : and al, 0x20 ; xor edx, edx ; call 0x200000a3958
0x000002000051db94 : and al, 0x20 ; xor edx, edx ; mov qword ptr [rsp + 0x38], rbx ; call rdi
0x00000200005d5ade : and al, 0x20 ; xor edx, edx ; mov rcx, rdi ; call 0x20000441dd9
0x0000020000582c28 : and al, 0x22 ; mov dl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000038c9c9 : and al, 0x24 ; inc edx ; jmp 0x2000038c994
0x0000020000641c64 : and al, 0x24 ; jmp 0x20000641c2e
0x0000020000071a16 : and al, 0x27 ; add dh, dh ; ret
0x00000200001736b8 : and al, 0x28 ; add byte ptr [rax + 0xb], cl ; ret 0x8944
0x000002000052fe8f : and al, 0x28 ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200003ab584 : and al, 0x28 ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200001c010d : and al, 0x28 ; add cl, byte ptr [rax + 0xb] ; ret 0x8944
0x00000200001748de : and al, 0x28 ; add dword ptr [rax + 0xb], ecx ; ret 0x8944
0x0000020000611ef7 : and al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001bffaa : and al, 0x28 ; add ecx, dword ptr [rax + 0xb] ; ret 0x8944
0x00000200000b4383 : and al, 0x28 ; add rsp, 0x28 ; jmp rax
0x00000200001086bc : and al, 0x28 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000049a62e : and al, 0x28 ; add rsp, 0x48 ; ret
0x000002000019c587 : and al, 0x28 ; je 0x2000019c597 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000019c586 : and al, 0x28 ; je 0x2000019c598 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000047680a : and al, 0x28 ; lea r8d, dword ptr [rdx + 0x20] ; call 0x200000a3959
0x0000020000596937 : and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x0000020000596919 : and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x0000020000168ddb : and al, 0x28 ; mov cl, bl ; call rax
0x00000200005aaeab : and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x0000020000653ebc : and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call qword ptr [rip + 0x3c2a0]
0x0000020000443be5 : and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000064c4cb : and al, 0x28 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000647008 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbp ; call rax
0x00000200005acb97 : and al, 0x28 ; mov dword ptr [rsp + 0x20], edi ; call r14
0x000002000010411d : and al, 0x28 ; mov dword ptr [rsp + 0x20], r15d ; call 0x200003e0409
0x000002000013ef86 : and al, 0x28 ; mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x000002000056a97a : and al, 0x28 ; mov eax, r11d ; pop rdi ; ret
0x00000200006f5d27 : and al, 0x28 ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x0000020000644d54 : and al, 0x28 ; mov edx, r15d ; call rdi
0x00000200005d74e6 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call r10
0x0000020000497248 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000046d2e5 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200005d75ae : and al, 0x28 ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x0000020000464489 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003c9965 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000385bce : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000043aa46 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rsi ; call rax
0x0000020000498c55 : and al, 0x28 ; mov rcx, rbx ; call 0x200000b8e88
0x00000200001c84b1 : and al, 0x28 ; mov rcx, rbx ; call 0x2000017473b
0x0000020000157cc9 : and al, 0x28 ; pop r14 ; ret
0x000002000013ef8a : and al, 0x28 ; pop rdi ; pop rsi ; ret
0x0000020000024315 : and al, 0x28 ; pop rdi ; ret
0x0000020000391aa9 : and al, 0x28 ; pop rsi ; ret
0x0000020000150bac : and al, 0x28 ; xor ecx, ecx ; call rax
0x0000020000534898 : and al, 0x29 ; mov ah, 0xff ; add rsp, 0x28 ; ret
0x0000020000466407 : and al, 0x2b ; ret 0x2b41
0x0000020000669b92 : and al, 0x2c ; call rax
0x00000200004143d8 : and al, 0x2c ; hlt ; dec dword ptr [rax + 0x3b] ; ret 0x2a77
0x000002000014ac91 : and al, 0x30 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200004a934b : and al, 0x30 ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x0000020000023aca : and al, 0x30 ; add byte ptr [rcx + rdi - 0x75], dh ; ret 0x41f0
0x00000200000c37da : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d775e : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x5364
0x00000200005896e0 : and al, 0x30 ; add eax, 2 ; add rsp, 0x28 ; ret
0x00000200000d9634 : and al, 0x30 ; add rax, r12 ; mov rdx, rbp ; call rax
0x000002000002fd88 : and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x000002000002a3bc : and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ef325 : and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003b9dbc : and al, 0x30 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000bad6c : and al, 0x30 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000019656b : and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200005cfc29 : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000003405 : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002f133 : and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000107e6e : and al, 0x30 ; add rsp, 0x28 ; ret
0x00000200000ad032 : and al, 0x30 ; add rsp, 0x38 ; ret
0x0000020000172c46 : and al, 0x30 ; add rsp, 0x48 ; ret
0x0000020000134a30 : and al, 0x30 ; add rsp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000eae58 : and al, 0x30 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000445b06 : and al, 0x30 ; call 0x20000072e45
0x0000020000445b05 : and al, 0x30 ; call 0x20000072e46
0x0000020000491b5a : and al, 0x30 ; call 0x200000bf275
0x0000020000491b59 : and al, 0x30 ; call 0x200000bf276
0x0000020000640908 : and al, 0x30 ; call 0x2000026f015
0x0000020000640907 : and al, 0x30 ; call 0x2000026f016
0x00000200006f2014 : and al, 0x30 ; call 0x200006f20cd
0x00000200006a11d0 : and al, 0x30 ; call r10
0x00000200000aca96 : and al, 0x30 ; call rax
0x0000020000567849 : and al, 0x30 ; cmp rbx, rax ; jne 0x20000567818 ; jmp 0x200005678c1
0x0000020000567848 : and al, 0x30 ; cmp rbx, rax ; jne 0x20000567819 ; jmp 0x200005678c2
0x00000200005896b8 : and al, 0x30 ; inc eax ; add rsp, 0x28 ; ret
0x00000200000e1f7a : and al, 0x30 ; jmp 0x200000e1cad
0x00000200000e1f79 : and al, 0x30 ; jmp 0x200000e1cae
0x00000200001a0370 : and al, 0x30 ; jmp 0x200001a0418
0x00000200003e8c21 : and al, 0x30 ; jmp 0x200003e8731
0x00000200003e8c20 : and al, 0x30 ; jmp 0x200003e8732
0x00000200007054e4 : and al, 0x30 ; jmp 0x200007054ae
0x00000200004876cc : and al, 0x30 ; lea r8d, dword ptr [rdx + 0x48] ; call 0x200000a3958
0x00000200004876cb : and al, 0x30 ; lea r8d, dword ptr [rdx + 0x48] ; call 0x200000a3959
0x0000020000420f0d : and al, 0x30 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000038cd48 : and al, 0x30 ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063144c : and al, 0x30 ; mov dword ptr [rsp + 0x38], r14d ; call rax
0x000002000011d263 : and al, 0x30 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000164d73 : and al, 0x30 ; mov eax, r11d ; pop r15 ; pop r12 ; ret
0x000002000014857d : and al, 0x30 ; mov eax, r11d ; pop r15 ; pop r14 ; ret
0x000002000006ffc4 : and al, 0x30 ; mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200004b0de7 : and al, 0x30 ; mov ebx, eax ; call 0x2000007d0e6
0x00000200004b0de6 : and al, 0x30 ; mov ebx, eax ; call 0x2000007d0e7
0x0000020000520b0b : and al, 0x30 ; mov ecx, edi ; call 0x2000014b867
0x0000020000152a25 : and al, 0x30 ; mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x000002000039def5 : and al, 0x30 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000015af54 : and al, 0x30 ; mov r8, rbp ; call 0x200000771c7
0x000002000015af53 : and al, 0x30 ; mov r8, rbp ; call 0x200000771c8
0x00000200001a2ba2 : and al, 0x30 ; mov rax, rdx ; add rsp, 0x48 ; ret
0x000002000002fbd4 : and al, 0x30 ; mov rcx, r14 ; call 0x200000dbe27
0x00000200003d272f : and al, 0x30 ; pop r14 ; pop rsi ; ret
0x0000020000006393 : and al, 0x30 ; pop r15 ; pop r14 ; ret
0x0000020000132a8f : and al, 0x30 ; test eax, eax ; jne 0x20000132aae ; ret
0x0000020000132a8e : and al, 0x30 ; test eax, eax ; jne 0x20000132aaf ; ret
0x00000200000a9ffe : and al, 0x30 ; xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005d29b : and al, 0x30 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000195e56 : and al, 0x30 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000047728f : and al, 0x30 ; xor edx, edx ; call 0x200000a3957
0x000002000047728e : and al, 0x30 ; xor edx, edx ; call 0x200000a3958
0x00000200004837a5 : and al, 0x31 ; mov qword ptr [rbp - 0x80], r12 ; call 0x200000a3959
0x000002000001a9dc : and al, 0x32 ; add rsp, 0x28 ; ret
0x000002000069e848 : and al, 0x33 ; ret 0xba0f
0x00000200004812eb : and al, 0x34 ; inc edi ; add r15, 0x18 ; jmp 0x200004812c0
0x000002000006187e : and al, 0x34 ; jmp 0x200000618d8
0x000002000006187d : and al, 0x34 ; jmp 0x200000618d9
0x00000200003b67f4 : and al, 0x34 ; mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000259bd : and al, 0x38 ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000011b19 : and al, 0x38 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000026ee0 : and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bf091 : and al, 0x38 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000646e61 : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000003716 : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c73c9 : and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000635cd : and al, 0x38 ; add rsp, 0x28 ; ret
0x0000020000069f1d : and al, 0x38 ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x0000020000526c31 : and al, 0x38 ; call 0x200001536f5
0x0000020000631451 : and al, 0x38 ; call rax
0x000002000051db9b : and al, 0x38 ; call rdi
0x000002000041dbf2 : and al, 0x38 ; imul eax, ecx ; add eax, r9d ; ret
0x000002000041da7a : and al, 0x38 ; imul eax, ecx ; sub eax, r8d ; ret
0x000002000037c8fb : and al, 0x38 ; imul eax, ecx ; xor eax, r9d ; ret
0x000002000005c3d0 : and al, 0x38 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000490849 : and al, 0x38 ; mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x0000020000483784 : and al, 0x38 ; mov dword ptr [rbp - 0x50], r12d ; call 0x200000a3959
0x0000020000172aa0 : and al, 0x38 ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x000002000016b777 : and al, 0x38 ; mov dword ptr [rsp + 0x40], eax ; call r9
0x00000200001067cb : and al, 0x38 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013a8e4 : and al, 0x38 ; mov eax, edx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000383805 : and al, 0x38 ; mov rcx, rsi ; call 0x2000004fa8b
0x00000200006f39ca : and al, 0x38 ; movzx ecx, bx ; add rdx, 0x40 ; call rax
0x00000200006056ca : and al, 0x38 ; or byte ptr [rdi], cl ; test edi, ebx ; ret 0xffec
0x000002000019f815 : and al, 0x38 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000010b200 : and al, 0x38 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000411cf1 : and al, 0x38 ; ret
0x00000200004a45fa : and al, 0x38 ; xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c2015 : and al, 0x38 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e18ae : and al, 0x38 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000163403 : and al, 0x3b ; ret
0x0000020000003b96 : and al, 0x3c ; cmp esi, ecx ; jb 0x20000003bee ; inc edx ; jmp 0x20000003b82
0x0000020000545bcb : and al, 0x3f ; xor al, r8b ; mov byte ptr [rcx + 6], al ; ret
0x00000200005bd31b : and al, 0x40 ; add bh, bh ; ret
0x000002000041b96e : and al, 0x40 ; add rsp, 0x20 ; pop r12 ; ret
0x0000020000005056 : and al, 0x40 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c046d : and al, 0x40 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003a8349 : and al, 0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000043c167 : and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000105e98 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000006be1 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c1a7b : and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000ca6db : and al, 0x40 ; add rsp, 0x28 ; ret
0x00000200000267c0 : and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000002cab2 : and al, 0x40 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200005872e5 : and al, 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000651300 : and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000020aa8 : and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006af77 : and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000da260 : and al, 0x40 ; add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x000002000006d06b : and al, 0x40 ; add rsp, 0x48 ; ret
0x000002000007b5e2 : and al, 0x40 ; add rsp, 0x50 ; call r10
0x00000200000cd03a : and al, 0x40 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000449d08 : and al, 0x40 ; call 0x20000072e45
0x0000020000449d07 : and al, 0x40 ; call 0x20000072e46
0x00000200004f4409 : and al, 0x40 ; call 0x200001183bd
0x00000200005098f0 : and al, 0x40 ; call 0x20000405b8c
0x00000200005098ef : and al, 0x40 ; call 0x20000405b8d
0x000002000014243d : and al, 0x40 ; call qword ptr [rbx]
0x00000200003f0bb7 : and al, 0x40 ; call r10
0x000002000016b77b : and al, 0x40 ; call r9
0x00000200004ea250 : and al, 0x40 ; call rax
0x00000200004f442c : and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x200004f43d0
0x00000200004b1a72 : and al, 0x40 ; inc edx ; jmp 0x200004b1a31
0x00000200001eb934 : and al, 0x40 ; jmp 0x20000025011
0x00000200003fc3ef : and al, 0x40 ; jmp 0x200003fc118
0x000002000040c733 : and al, 0x40 ; jmp 0x2000040c3d7
0x000002000040c732 : and al, 0x40 ; jmp 0x2000040c3d8
0x0000020000413209 : and al, 0x40 ; jmp 0x2000041330a
0x00000200000abec2 : and al, 0x40 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005b27b : and al, 0x40 ; mov al, dl ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000383cf2 : and al, 0x40 ; mov al, r8b ; add rsp, 0x38 ; ret
0x00000200005c6e2e : and al, 0x40 ; mov dword ptr [rsp + 0x54], r11d ; call rax
0x00000200001b0e65 : and al, 0x40 ; mov dword ptr [rsp + 0x7c], eax ; call r9
0x000002000001b787 : and al, 0x40 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000061c71 : and al, 0x40 ; mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200005b846d : and al, 0x40 ; mov qword ptr [rsp + 0x48], rax ; call 0x200000b46e9
0x0000020000159e05 : and al, 0x40 ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200003e1566 : and al, 0x40 ; mov rcx, rbx ; call 0x200000bd7b7
0x0000020000525e06 : and al, 0x40 ; mov rcx, rbx ; call 0x2000014bd18
0x00000200000eac29 : and al, 0x40 ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000069668 : and al, 0x40 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055e090 : and al, 0x40 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000477219 : and al, 0x40 ; xor rcx, rsp ; call 0x200000a4e58
0x0000020000477218 : and al, 0x40 ; xor rcx, rsp ; call 0x200000a4e59
0x000002000054868f : and al, 0x41 ; mov dl, dil ; call 0x2000016e164
0x000002000006fec2 : and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x00000200006017e4 : and al, 0x44 ; jmp 0x2000046dab6
0x00000200006017e3 : and al, 0x44 ; jmp 0x2000046dab7
0x0000020000601939 : and al, 0x44 ; jmp 0x2000046db80
0x0000020000601938 : and al, 0x44 ; jmp 0x2000046db81
0x0000020000594350 : and al, 0x44 ; sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000594392
0x00000200004aeea8 : and al, 0x47 ; mov esp, 0x75c085ff ; ret
0x0000020000471d1f : and al, 0x48 ; add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret
0x0000020000541f1e : and al, 0x48 ; add esp, 0x18 ; ret
0x000002000045aa5d : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000061a6a : and al, 0x48 ; add esp, 8 ; ret
0x000002000059122c : and al, 0x48 ; add rsp, 0x20 ; pop r12 ; ret
0x0000020000643e86 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; jmp rax
0x0000020000005435 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000386d1 : and al, 0x48 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000b05f1 : and al, 0x48 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000065acca : and al, 0x48 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c06d7 : and al, 0x48 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000125c5e : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000142460 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000005176 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f6148 : and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004eda2c : and al, 0x48 ; add rsp, 0x28 ; ret
0x0000020000399320 : and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000035ecc2 : and al, 0x48 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006516f7 : and al, 0x48 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000013b70 : and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fe00 : and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004f7c42 : and al, 0x48 ; add rsp, 0x38 ; ret
0x00000200000b96a0 : and al, 0x48 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005b8472 : and al, 0x48 ; call 0x200000b46e4
0x00000200005b8471 : and al, 0x48 ; call 0x200000b46e5
0x00000200003b1c8a : and al, 0x48 ; call 0x200000ddf64
0x00000200004cfa99 : and al, 0x48 ; call 0x200000f22c5
0x00000200004cfa98 : and al, 0x48 ; call 0x200000f22c6
0x00000200004cfab1 : and al, 0x48 ; call 0x200000f8d55
0x00000200004cfab0 : and al, 0x48 ; call 0x200000f8d56
0x000002000040d918 : and al, 0x48 ; call 0x20000439b34
0x000002000040d917 : and al, 0x48 ; call 0x20000439b35
0x0000020000023e90 : and al, 0x48 ; call r10
0x0000020000431ffb : and al, 0x48 ; call rax
0x0000020000067a9d : and al, 0x48 ; inc al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004174e : and al, 0x48 ; jmp 0x20000040dc9
0x000002000004174d : and al, 0x48 ; jmp 0x20000040dca
0x00000200004bb1b9 : and al, 0x48 ; jmp 0x200004bb21b
0x0000020000021d9e : and al, 0x48 ; lea eax, dword ptr [rip + 0xdc05a] ; ret
0x0000020000522d0c : and al, 0x48 ; lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200000de15f : and al, 0x48 ; mov al, 1 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000039a47f : and al, 0x48 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004b23e7 : and al, 0x48 ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000448fc4 : and al, 0x48 ; mov dword ptr [rcx + 4], edi ; call 0x20000072e48
0x0000020000448fc3 : and al, 0x48 ; mov dword ptr [rcx + 4], edi ; call 0x20000072e49
0x000002000015ae24 : and al, 0x48 ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000038121 : and al, 0x48 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000360696 : and al, 0x48 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b2de9 : and al, 0x48 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000074db9 : and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200005755c1 : and al, 0x48 ; mov rcx, rdi ; call 0x20000131817
0x00000200004a5243 : and al, 0x48 ; mov rcx, rdi ; call rax
0x000002000051c8f8 : and al, 0x48 ; mov rdx, r15 ; call 0x2000014a724
0x000002000051c8f7 : and al, 0x48 ; mov rdx, r15 ; call 0x2000014a725
0x000002000049f535 : and al, 0x48 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bf014 : and al, 0x48 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b97d0 : and al, 0x48 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000492dec : and al, 0x48 ; xor edx, edx ; call 0x2000026f016
0x0000020000492deb : and al, 0x48 ; xor edx, edx ; call 0x2000026f017
0x0000020000476842 : and al, 0x48 ; xor rcx, rsp ; call 0x200000a4e58
0x0000020000476841 : and al, 0x48 ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000136fbf : and al, 0x4c ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x0000020000411210 : and al, 0x4c ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005b881e : and al, 0x4d ; mov eax, esp ; call 0x20000054ada
0x00000200004b11e0 : and al, 0x50 ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000011751d : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x00000200000f98d7 : and al, 0x50 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200000d096d : and al, 0x50 ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000013afeb : and al, 0x50 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003d7b35 : and al, 0x50 ; add rsp, 0x28 ; pop r15 ; pop rdi ; ret
0x00000200000affc3 : and al, 0x50 ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000003238b : and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000364d1a : and al, 0x50 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001b395e : and al, 0x50 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000a8357 : and al, 0x50 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000061b5 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000e9c43 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000564d9 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cb52c : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012ba05 : and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000368acb : and al, 0x50 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200001340dc : and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000d07be : and al, 0x50 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001b1c1 : and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004f8412 : and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000b4956 : and al, 0x50 ; add rsp, 0x68 ; pop r12 ; pop rdi ; ret
0x0000020000270f46 : and al, 0x50 ; add rsp, 0x78 ; pop rsi ; pop rbp ; ret
0x00000200006f3405 : and al, 0x50 ; call 0x2000047f610
0x00000200006f3404 : and al, 0x50 ; call 0x2000047f611
0x0000020000074dbe : and al, 0x50 ; call rdx
0x00000200001e2359 : and al, 0x50 ; jmp 0x200001e2658
0x00000200003d9d09 : and al, 0x50 ; jmp 0x200003d9889
0x000002000019794b : and al, 0x50 ; jmp qword ptr [rcx]
0x000002000006c344 : and al, 0x50 ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000001fd2f : and al, 0x50 ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000154987 : and al, 0x50 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006e52d : and al, 0x50 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000062e323 : and al, 0x50 ; mov r9, r15 ; call r12
0x00000200003f0bb2 : and al, 0x50 ; mov rcx, qword ptr [rsp + 0x40] ; call r10
0x00000200001af166 : and al, 0x50 ; mov rcx, rbx ; call 0x200001ab3a7
0x00000200001af1ba : and al, 0x50 ; mov rcx, rbx ; call 0x200001ab437
0x0000020000462439 : and al, 0x50 ; mov rcx, rbx ; call r15
0x0000020000163620 : and al, 0x50 ; movzx ecx, ax ; call r9
0x00000200000b02f4 : and al, 0x50 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016ba75 : and al, 0x50 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004772db : and al, 0x50 ; xor rcx, rsp ; call 0x200000a4e58
0x00000200004772da : and al, 0x50 ; xor rcx, rsp ; call 0x200000a4e59
0x00000200003c1887 : and al, 0x54 ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000180b62 : and al, 0x54 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005c6e33 : and al, 0x54 ; call rax
0x00000200006d1e38 : and al, 0x54 ; inc dword ptr [rcx - 0x75] ; ret 0x8d48
0x000002000039e34b : and al, 0x54 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004909f1 : and al, 0x54 ; mov rcx, qword ptr [rbx + 0x20] ; call 0x200000b5019
0x0000020000478e68 : and al, 0x55 ; ret 0x48ff
0x0000020000011237 : and al, 0x58 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000011b4b : and al, 0x58 ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfff6
0x0000020000621a4c : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200004621c5 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200000054d6 : and al, 0x58 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000037e62e : and al, 0x58 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001b616e : and al, 0x58 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000198525 : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000028456 : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049bf21 : and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000030234 : and al, 0x58 ; add rsp, 0x38 ; ret
0x0000020000117cca : and al, 0x58 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200003806b0 : and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000330cf : and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001b175f : and al, 0x58 ; call 0x200001ada44
0x00000200001b175e : and al, 0x58 ; call 0x200001ada45
0x00000200003b41f8 : and al, 0x58 ; call rax
0x000002000001280d : and al, 0x58 ; jmp 0x2000001285c
0x0000020000041e24 : and al, 0x58 ; jmp 0x20000040f4c
0x0000020000041e23 : and al, 0x58 ; jmp 0x20000040f4d
0x00000200001ee9b2 : and al, 0x58 ; jmp 0x200000aac59
0x00000200001ee9b1 : and al, 0x58 ; jmp 0x200000aac5a
0x0000020000461681 : and al, 0x58 ; jmp 0x200004613a2
0x0000020000142438 : and al, 0x58 ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x000002000019232c : and al, 0x58 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000038b8ac : and al, 0x58 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016e540 : and al, 0x58 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000e2b81 : and al, 0x58 ; mov ecx, 1 ; call 0x200000aee29
0x00000200003e7978 : and al, 0x58 ; mov rcx, rbx ; call r12
0x000002000005182d : and al, 0x58 ; mov rdx, rsi ; mov rcx, r14 ; call r11
0x000002000048998b : and al, 0x58 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b2133 : and al, 0x58 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004793c2 : and al, 0x58 ; xor rcx, rsp ; call 0x200000a4e58
0x00000200004793c1 : and al, 0x58 ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000607c93 : and al, 0x5c ; call 0x200004e3ef8
0x0000020000607c92 : and al, 0x5c ; call 0x200004e3ef9
0x0000020000610ff9 : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200000b9026 : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003b2238 : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012f8c9 : and al, 0x60 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200004f87aa : and al, 0x60 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200004a80af : and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000380d21 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003a14d : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003781b6 : and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000468398 : and al, 0x60 ; add rsp, 0x48 ; ret
0x000002000012b8c9 : and al, 0x60 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000014a496 : and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000045c7ac : and al, 0x60 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001079ae : and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000058a13 : and al, 0x60 ; add rsp, 0x68 ; ret
0x00000200003f6cf9 : and al, 0x60 ; call 0x2000004d1c8
0x00000200003f6cf8 : and al, 0x60 ; call 0x2000004d1c9
0x000002000051a992 : and al, 0x60 ; call 0x20000056bc4
0x000002000051a991 : and al, 0x60 ; call 0x20000056bc5
0x00000200005d5b8c : and al, 0x60 ; call 0x20000441dd4
0x00000200005d5b8b : and al, 0x60 ; call 0x20000441dd5
0x000002000001bcd1 : and al, 0x60 ; call qword ptr [rdi]
0x00000200001ee61d : and al, 0x60 ; call qword ptr [rsi]
0x00000200001569fb : and al, 0x60 ; jmp 0x200001568c8
0x00000200001569fa : and al, 0x60 ; jmp 0x200001568c9
0x00000200005eb539 : and al, 0x60 ; jmp 0x20000447794
0x000002000012e12a : and al, 0x60 ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000016852f : and al, 0x60 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000184a18 : and al, 0x60 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000532fed : and al, 0x60 ; mov qword ptr [rsp + 0x68], rax ; call 0x200000bf279
0x0000020000489502 : and al, 0x60 ; mov rcx, r10 ; call 0x200000b8ae8
0x00000200003c1242 : and al, 0x60 ; mov rcx, rbx ; call rsi
0x00000200000169f0 : and al, 0x60 ; sub eax, dword ptr [rax] ; ret
0x0000020000125b08 : and al, 0x60 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000476503 : and al, 0x60 ; xor rcx, rsp ; call 0x200000a4e58
0x0000020000476502 : and al, 0x60 ; xor rcx, rsp ; call 0x200000a4e59
0x00000200005cd4a8 : and al, 0x61 ; stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xc18b40] ; ret
0x0000020000556aa2 : and al, 0x66 ; mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556ac1
0x0000020000556aa1 : and al, 0x66 ; mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556ac2
0x00000200000238df : and al, 0x68 ; add byte ptr [rbx + rcx - 0x77], dh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000054530e : and al, 0x68 ; add cx, ax ; movzx eax, r10w ; jmp 0x20000545329
0x000002000054530d : and al, 0x68 ; add cx, ax ; movzx eax, r10w ; jmp 0x2000054532a
0x000002000055218c : and al, 0x68 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000064820c : and al, 0x68 ; add rsp, 0x38 ; ret
0x000002000000e658 : and al, 0x68 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000049789 : and al, 0x68 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200001ad0a8 : and al, 0x68 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004cd708 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000017037e : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003846d8 : and al, 0x68 ; add rsp, 0x48 ; ret
0x000002000013f07b : and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x0000020000100e3e : and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000006e97 : and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001ba665 : and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000532ff2 : and al, 0x68 ; call 0x200000bf274
0x0000020000532ff1 : and al, 0x68 ; call 0x200000bf275
0x00000200003c3d55 : and al, 0x68 ; jmp 0x200003c39df
0x000002000054dd22 : and al, 0x68 ; mov eax, ecx ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000535d22 : and al, 0x68 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c58e1 : and al, 0x68 ; mov eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x000002000064c68d : and al, 0x68 ; mov qword ptr [rcx + 0x58], rax ; ret
0x00000200003aac72 : and al, 0x68 ; mov qword ptr [rsp + 0x20], r13 ; call rax
0x0000020000407997 : and al, 0x68 ; xor edx, edx ; call r11
0x00000200001b966e : and al, 0x70 ; add rsp, 0x38 ; ret
0x000002000038df3e : and al, 0x70 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000022018 : and al, 0x70 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001c25b6 : and al, 0x70 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001020c7 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003e1ea : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000169920 : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200000d6359 : and al, 0x70 ; add rsp, 0x58 ; pop r13 ; pop rsi ; ret
0x0000020000154404 : and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000004fdba : and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000492f53 : and al, 0x70 ; call 0x200000b5015
0x0000020000492f52 : and al, 0x70 ; call 0x200000b5016
0x00000200003a2f91 : and al, 0x70 ; call 0x200000bf274
0x00000200003a2f90 : and al, 0x70 ; call 0x200000bf275
0x00000200001b18cf : and al, 0x70 ; call 0x200001adb30
0x00000200001b18ce : and al, 0x70 ; call 0x200001adb31
0x000002000041113b : and al, 0x70 ; call 0x200003dd3e4
0x0000020000476cc8 : and al, 0x70 ; lea r8d, dword ptr [rdx + 0x20] ; call 0x200000a3959
0x0000020000499e3a : and al, 0x70 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200005c3290 : and al, 0x70 ; mov eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000166acd : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000484404 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x0000020000013edc : and al, 0x70 ; mov r9d, r12d ; call 0x2000010010b
0x0000020000013edb : and al, 0x70 ; mov r9d, r12d ; call 0x2000010010c
0x00000200001843f6 : and al, 0x70 ; mov rax, rcx ; add rsp, 0x58 ; ret
0x0000020000054ac3 : and al, 0x70 ; mov rax, rcx ; add rsp, 0x68 ; ret
0x000002000051b7f0 : and al, 0x70 ; mov rcx, rbp ; call 0x2000014a7a0
0x000002000051b7ef : and al, 0x70 ; mov rcx, rbp ; call 0x2000014a7a1
0x00000200003c0819 : and al, 0x70 ; mov rcx, rbp ; call rsi
0x00000200001a5c4f : and al, 0x70 ; mov rcx, rdi ; call r9
0x00000200006bd09e : and al, 0x70 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000418a09 : and al, 0x70 ; or eax, dword ptr [rax] ; add bh, dh ; ret 0xf838
0x000002000055d495 : and al, 0x70 ; xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005cb4e9 : and al, 0x70 ; xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001a5c91 : and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000025d4a0 : and al, 0x71 ; add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x0000020000539bda : and al, 0x72 ; ret
0x000002000005a9c8 : and al, 0x75 ; lodsb al, byte ptr [rsi] ; mov rcx, rbx ; jmp 0x2000005a999
0x00000200004961b7 : and al, 0x75 ; ret 0x394d
0x0000020000585b36 : and al, 0x78 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003a83ec : and al, 0x78 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000016f971 : and al, 0x78 ; add rsp, 0x50 ; pop r13 ; ret
0x0000020000185451 : and al, 0x78 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200003a8bba : and al, 0x78 ; add rsp, 0x50 ; pop r15 ; ret
0x00000200000629cb : and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000040c33e : and al, 0x78 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000001b12f : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000006b183 : and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000036c94 : and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000045b4db : and al, 0x78 ; call 0x200000c02b8
0x00000200003e27ba : and al, 0x78 ; jmp 0x200003e28bc
0x000002000039f472 : and al, 0x78 ; lea rdx, qword ptr [rbp - 0x50] ; mov rcx, r10 ; call rax
0x000002000041b317 : and al, 0x78 ; mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x00000200003b6e76 : and al, 0x78 ; mov eax, edi ; add rsp, 0x60 ; pop rdi ; ret
0x00000200005213de : and al, 0x78 ; xor al, al ; add rsp, 0x60 ; pop rdi ; ret
0x000002000057b10a : and al, 0x78 ; xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200004821d8 : and al, 0x79 ; ret
0x00000200001b0e69 : and al, 0x7c ; call r9
0x000002000047d138 : and al, 0x7f ; ret
0x00000200004f53f0 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000be3cb : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200001386fb : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x00000200001a028c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000038b09a : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff04
0x000002000045e6ac : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp + 0xb], al ; ret 0x8b44
0x0000020000483f82 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x00000200004f5e2f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000004aa73 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000aa2a7 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000002000012fb70 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000200001242af : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200000c2799 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x000002000057d46b : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xb60f
0x0000020000487681 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x000002000060e4db : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret 0xffe1
0x00000200001b3284 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000472eb1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x000002000041a606 : and al, 0x80 ; add dword ptr [rax], eax ; add bh, dh ; ret
0x00000200001e38fc : and al, 0x81 ; call qword ptr [rdi]
0x00000200001bcecc : and al, 0x81 ; jmp qword ptr [rdx]
0x000002000018845b : and al, 0x84 ; ret
0x0000020000018b44 : and al, 0x84 ; ret 0x850f
0x000002000015220b : and al, 0x86 ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200003ff5f3 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005b98b4 : and al, 0x88 ; add byte ptr [rax], al ; add bh, bh ; ret 0x8349
0x00000200003be91b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x2b49
0x000002000059aa08 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000400d79 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003c0e38 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call r15
0x0000020000461ff1 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005b3a08 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000020000376e85 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000596ab6 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx - 0xa], dh ; ret
0x0000020000433fd6 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x0000020000138845 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200004112f8 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000a5343 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000472ecc : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000002000041a72c : and al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000013aeca : and al, 0x89 ; test byte ptr [rdx + 0x359790], cl ; ret
0x0000020000421c3b : and al, 0x8b ; enter 0x41e8, -0x1d ; ret 0x48ff
0x0000020000127606 : and al, 0x8b ; fmul dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b42
0x00000200000563a4 : and al, 0x8b ; ret
0x00000200005ac9b5 : and al, 0x8b ; ret 0x8d4c
0x00000200001528b9 : and al, 0x8b ; ror byte ptr [rax - 0x75], 0x94 ; ret
0x0000020000127635 : and al, 0x8b ; ror dword ptr [rax + 0xf], -0x51 ; ret
0x0000020000540e92 : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000002affe : and al, 0x8e ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000064eb20 : and al, 0x8f ; ret 0xebff
0x00000200001afdd5 : and al, 0x90 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003be559 : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; fld qword ptr [rcx - 1] ; ret 0x8944
0x0000020000180f40 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004125ab : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004fd3e4 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001a1ba5 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000040e28a : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x39e8
0x000002000040e120 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xa3e8
0x0000020000032064 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x0000020000009d53 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200003bedbb : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4108
0x000002000010ed84 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004cf520 : and al, 0x91 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8d44
0x000002000047a628 : and al, 0x93 ; ret 0x48ff
0x00000200000113b2 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x0000020000051544 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x3b49
0x00000200001a6630 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc16328d0
0x00000200003b0c61 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200005893c5 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x0000020000138505 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000012a4e3 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000001404e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200003fdbbf : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003b9f4b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x00000200005ebf09 : and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; pop rax ; ret 0xffe5
0x00000200004d543c : and al, 0x99 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x000002000046662f : and al, 0x9c ; add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x000002000064569c : and al, 0x9c ; ret
0x000002000052a928 : and al, 0xa ; ret
0x00000200004664db : and al, 0xa0 ; add byte ptr [rax], al ; add bl, ch ; fiadd dword ptr [rcx - 1] ; ret
0x00000200001de98c : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa677
0x000002000041599a : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000d3ab5 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000003fe9 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200005893b5 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x000002000002368e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200005d26bb : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000041176b : and al, 0xa8 ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000016cb26 : and al, 0xa8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x000002000003f2ab : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003f2d8 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003f2f5 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003f312 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003f332 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003f352 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200003c6a62 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], dh ; ret
0x00000200000c356b : and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x0000020000645418 : and al, 0xac ; ret 0x48ff
0x0000020000665444 : and al, 0xac ; ret 0x89ff
0x0000020000167b1f : and al, 0xb0 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005c9020 : and al, 0xb0 ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000d1df6 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000031488 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4789
0x00000200003d821d : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200001b597d : and al, 0xb0 ; add eax, 0x8b480000 ; ret 0x8341
0x000002000001133a : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000416b83 : and al, 0xb8 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000540c94 : and al, 0xb8 ; add byte ptr [rax], al ; add al, ch ; ret 0xb77e
0x000002000014fe7e : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x894d
0x000002000037aa1e : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200001f52c2 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000001e2c9 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000664837 : and al, 0xb9 ; ret 0xff
0x00000200003fd78c : and al, 0xbb ; ret
0x00000200003e4d59 : and al, 0xc0 ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x00000200003c3a26 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000471e80 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000598200 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000058f984 : and al, 0xc0 ; mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x000002000017ccd1 : and al, 0xc1 ; add byte ptr [rax - 1], cl ; ret
0x00000200001ed259 : and al, 0xc2 ; inc dword ptr [rbx + 0x1ce918ce] ; ret 0xfff2
0x000002000003b4a7 : and al, 0xc2 ; mov eax, 0xc000025f ; ret
0x00000200005982b2 : and al, 0xc8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x00000200003c1c9a : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret
0x0000020000130784 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200004c28e3 : and al, 0xcc ; add dword ptr [rax], eax ; add al, ch ; ret
0x000002000064e2e8 : and al, 0xd ; ret 0x48ff
0x000002000002b3f4 : and al, 0xd0 ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000050bf76 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000045bcb0 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0xba41
0x00000200001e3470 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0x00000200000a1bff : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000000be4f : and al, 0xd8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200004c2308 : and al, 0xd8 ; add byte ptr [rax], al ; add cl, ch ; ret 0xf999
0x000002000051cce0 : and al, 0xd8 ; push rsi ; ret
0x000002000043bf80 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or eax, ebp ; ret
0x00000200003ccdb8 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000010a5b2 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; ret 0x3b66
0x00000200006108ec : and al, 0xe0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003f4274 : and al, 0xe8 ; add byte ptr [rax], al ; add al, ch ; ret 0xc7eb
0x000002000018d2f0 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000367194 : and al, 0xe8 ; ret 0xfff0
0x0000020000497429 : and al, 0xe9 ; ret 0x41e
0x000002000055422a : and al, 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000641c65 : and al, 0xeb ; ret
0x000002000051a36c : and al, 0xeb ; ret 0xfb8b
0x00000200000c5646 : and al, 0xeb ; sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000010f0bc : and al, 0xf ; xchg eax, ebp ; ret 0x2be8
0x000002000056f208 : and al, 0xf0 ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x000002000058ed2b : and al, 0xf0 ; add byte ptr [rax], al ; add bh, bh ; ret 0x49e8
0x00000200001cbcf2 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001cbcb2 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200000cc0d5 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x00000200003b7af4 : and al, 0xf0 ; add dword ptr [rax], eax ; add al, ch ; ret 0xcbf6
0x00000200006108b9 : and al, 0xf0 ; add dword ptr [rax], eax ; add bh, dh ; ret
0x00000200001f0bd7 : and al, 0xf5 ; push rsi ; ret
0x00000200000c5edf : and al, 0xf6 ; ret
0x00000200005386db : and al, 0xf6 ; ret 0x7402
0x0000020000134a89 : and al, 0xf6 ; ret 0x740f
0x0000020000128cc8 : and al, 0xf6 ; ret 0xf01
0x0000020000419da6 : and al, 0xf6 ; ret 0xf03
0x00000200000c4736 : and al, 0xf6 ; ret 0xf04
0x000002000038ed28 : and al, 0xf6 ; ret 0xf08
0x0000020000376e2f : and al, 0xf8 ; add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], al ; push rcx ; ret 0x30
0x0000020000162f57 : and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200004ce6bc : and al, 0xf8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000126b78 : and al, 0xfc ; clc ; dec dword ptr [rax - 0x7f] ; ret
0x000002000060d1cf : and al, 0xfc ; cmp dl, r8b ; setb al ; ret
0x00000200003f4188 : and al, 0xfe ; ret 0x48ff
0x00000200001a7b94 : and al, 0xff ; ret
0x00000200001b434a : and al, 0xff ; ret 0x5489
0x00000200000b8518 : and al, 0xff ; ret 0x8349
0x000002000038c9ca : and al, 0xff ; ret 0xc2eb
0x000002000013db5e : and al, 0xff ; ret 0xfbe9
0x0000020000146871 : and al, 1 ; add byte ptr [rax], al ; ret
0x0000020000030203 : and al, 1 ; ret
0x000002000002c85f : and al, 2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000bdf4b : and al, 3 ; add byte ptr [rax], al ; ret
0x00000200001c2ff4 : and al, 3 ; ret
0x000002000066a222 : and al, 4 ; ret 0xff
0x000002000025a04a : and al, 6 ; sysenter
0x000002000008e28d : and al, 7 ; sahf ; ret
0x00000200000af0d5 : and al, 8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x0000020000070fc2 : and al, 8 ; cmp eax, r8d ; jb 0x20000070fb4 ; ret
0x0000020000070fc1 : and al, 8 ; cmp eax, r8d ; jb 0x20000070fb5 ; ret
0x00000200005cf6be : and al, 8 ; jae 0x200005cf6cd ; or eax, 0xffffffff ; ret
0x00000200005cf6bd : and al, 8 ; jae 0x200005cf6ce ; or eax, 0xffffffff ; ret
0x000002000004b088 : and al, 8 ; jmp 0x2000004ac56
0x000002000012a0af : and al, 8 ; mov al, dl ; ret
0x00000200000d25e2 : and al, 8 ; mov dword ptr [r10 + 0xc], r9d ; ret
0x0000020000159c6f : and al, 8 ; mov dword ptr [r8], r10d ; ret
0x00000200003daf3c : and al, 8 ; mov dword ptr [rcx + 0x7c], eax ; ret
0x00000200005ba8c4 : and al, 8 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200003a80f1 : and al, 8 ; mov eax, edx ; ret
0x0000020000039c55 : and al, 8 ; mov eax, r10d ; ret
0x0000020000105efe : and al, 8 ; mov eax, r11d ; ret
0x000002000010eb2f : and al, 8 ; mov eax, r8d ; ret
0x00000200001a26ad : and al, 8 ; mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x0000020000142d18 : and al, 8 ; mov rax, r10 ; ret
0x0000020000130928 : and al, 8 ; mov rax, r9 ; ret
0x000002000006c1c0 : and al, 8 ; mov rax, rdx ; ret
0x0000020000192d1a : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; mov eax, edx ; ret
0x0000020000002fa2 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000003e9e2 : and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000004c0e3 : and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200001c2c16 : and al, 8 ; mov word ptr [r10], cx ; ret
0x0000020000588f5b : and al, 8 ; movzx eax, r9w ; ret
0x00000200000220cc : and al, 8 ; ret
0x00000200003b1c07 : and al, 8 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x0000020000411e34 : and al, 8 ; ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003db1eb : and al, 8 ; sbb eax, eax ; and eax, 0x80000005 ; ret
0x00000200005cf6cb : and al, 8 ; seta cl ; mov eax, ecx ; ret
0x0000020000378ca7 : and al, 8 ; test r8d, r8d ; js 0x20000378cba ; xor eax, eax ; ret
0x00000200001b41d7 : and al, 8 ; test rax, rax ; jne 0x200001b41ec ; mov r8, r10 ; jmp 0x200001b4200
0x00000200001c2d09 : and al, 8 ; xor eax, eax ; ret
0x000002000006cc22 : and al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015f9a6 : and al, al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000eb50e : and al, al ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000ebddb : and al, al ; add rsp, 0x28 ; ret
0x00000200000ad091 : and al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000160045 : and al, al ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000006053a : and al, al ; cmp al, 1 ; jae 0x2000006054b ; mov al, cl ; ret
0x00000200001c5652 : and al, al ; cmp al, 2 ; jae 0x200001c5663 ; xor eax, eax ; ret
0x00000200000df4af : and al, al ; jmp 0x200000df3b1
0x0000020000126d92 : and al, al ; jmp 0x20000126d5c
0x000002000016719b : and al, al ; jmp 0x20000167164
0x00000200000ba2f2 : and al, al ; movzx ecx, cl ; mov cr8, rcx ; ret
0x00000200000dce02 : and al, al ; pause ; xor al, al ; ret
0x0000020000050f94 : and al, al ; ret
0x00000200000f1c9c : and al, al ; xor eax, eax ; jmp 0x200000f1c6a
0x0000020000023e9b : and al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008c531 : and al, bl ; jmp qword ptr [rcx]
0x0000020000371556 : and al, bl ; mov cr3, rax ; add rsp, 0x28 ; ret
0x0000020000016de4 : and al, bl ; mov cr3, rax ; ret
0x0000020000141df1 : and al, bl ; ret
0x0000020000476b38 : and al, bpl ; adc esi, ecx ; ret 0x8aff
0x000002000047680e : and al, bpl ; cmp edx, ecx ; ret 0xc6ff
0x0000020000476ccc : and al, bpl ; jge 0x20000476ca2 ; ret 0x48ff
0x000002000065514a : and al, bpl ; jmp rdi
0x000002000038f92d : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000501b01 : and al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x000002000004d3b1 : and al, byte ptr [rax] ; add al, al ; ret
0x000002000020fd98 : and al, byte ptr [rax] ; add al, byte ptr [rax] ; add al, 0x16 ; add byte ptr [rsi], al ; ret 0xd90
0x000002000025e6e8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; adc al, 0xc1 ; cmp eax, dword ptr [rax] ; ret
0x00000200002273f0 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add bl, 0x11 ; add al, dl ; ret
0x0000020000225c0c : and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; call qword ptr [rax]
0x0000020000224870 : and al, byte ptr [rax] ; add byte ptr [rax], al ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x0000020000230e14 : and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ret 0x3f
0x0000020000261424 : and al, byte ptr [rax] ; add byte ptr [rax], al ; jl 0x200002613f5 ; add byte ptr [r8], dl ; ret
0x00000200002282d4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; jo 0x200002282f3 ; adc dword ptr [rax], eax ; ret
0x0000020000260544 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov al, 0xc2 ; cmp byte ptr [rax], al ; ret
0x000002000021903c : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x200011fe ; call qword ptr [rcx]
0x0000020000262338 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0x30004ac1 ; ret
0x0000020000216410 : and al, byte ptr [rax] ; add byte ptr [rax], al ; mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x0000020000262fb8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret
0x00000200002237e8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x14
0x000002000025e9d4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; or dl, al ; add al, spl ; ret 0x40
0x000002000025e644 : and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x0000020000217b10 : and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret 0x13
0x000002000025ee74 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000026187c : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x42
0x000002000026393c : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x47
0x000002000025cc78 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x50
0x000002000026dcec : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x6c
0x000002000020fdc4 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xd90
0x00000200002276a8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; rol cl, 4 ; add byte ptr [rax], dh ; ret 4
0x0000020000260070 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ror qword ptr [rdi], -0x44 ; ret 0x4f
0x000002000024c4cc : and al, byte ptr [rax] ; add byte ptr [rax], al ; sub al, 0xc1 ; add r8b, r11b ; ret 0x4d
0x00000200001592b8 : and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000262fb6 : and al, byte ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret
0x00000200003b5b20 : and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x000002000012ed71 : and al, byte ptr [rax] ; call rax
0x00000200003c01e9 : and al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004fcce9 : and al, byte ptr [rax] ; mov eax, 0x8000001a ; ret
0x000002000019aa6d : and al, byte ptr [rax] ; mov eax, 0xc0000001 ; ret
0x000002000036b40b : and al, byte ptr [rax] ; mov eax, 0xc00000bb ; ret
0x00000200001273d9 : and al, byte ptr [rax] ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001592f5 : and al, byte ptr [rax] ; ret
0x000002000013c59c : and al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000567ba1 : and al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200000a8bbf : and al, byte ptr [rax] ; xor r8d, r8d ; call 0x200000a4e87
0x0000020000573517 : and al, byte ptr [rbx + 0x3740af8] ; xor eax, eax ; ret
0x0000020000197c87 : and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret
0x00000200001f6a84 : and al, byte ptr [rcx - 0x73] ; add qword ptr [r9 - 0x75], rax ; ret 0x8b45
0x000002000045e5fa : and al, byte ptr [rcx - 0xa] ; ret 0xf40
0x0000020000658d25 : and al, byte ptr [rcx] ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000048b3e8 : and al, ch ; adc ah, byte ptr [rdi] ; mov edi, 0x200f44ff ; ret
0x00000200004909f6 : and al, ch ; adc al, 0x46 ; ret 0x45ff
0x0000020000542f8e : and al, ch ; adc al, 0xa3 ; ret 0x85ff
0x0000020000476b39 : and al, ch ; adc esi, ecx ; ret 0x8aff
0x0000020000056e95 : and al, ch ; add eax, 0x8b0000af ; ret
0x0000020000133795 : and al, ch ; add eax, 0x8bfff2e6 ; ret
0x0000020000491b69 : and al, ch ; add edi, edx ; ret 0x48ff
0x0000020000126b76 : and al, ch ; and al, 0xfc ; clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200003a9f87 : and al, ch ; call rax
0x000002000018003e : and al, ch ; cld ; ret 0xffef
0x000002000047680f : and al, ch ; cmp edx, ecx ; ret 0xc6ff
0x000002000048cf91 : and al, ch ; fldenv dword ptr [rdx] ; ret
0x0000020000507acd : and al, ch ; in eax, -0xd ; ret
0x0000020000506cee : and al, ch ; insb byte ptr [rdi], dx ; int1 ; ret
0x00000200005973d5 : and al, ch ; insd dword ptr [rdi], dx ; add al, 0 ; add bh, bh ; ret
0x0000020000476ccd : and al, ch ; jge 0x20000476ca1 ; ret 0x48ff
0x0000020000113bbb : and al, ch ; jmp rcx
0x000002000065514b : and al, ch ; jmp rdi
0x0000020000396b8e : and al, ch ; lodsb al, byte ptr [rsi] ; ret 0xffcd
0x00000200004e4d8a : and al, ch ; mov al, 0x80 ; ret
0x0000020000425309 : and al, ch ; mov ch, 0x7f ; ret
0x0000020000154de2 : and al, ch ; mov eax, 0x8bfff0cf ; ret
0x0000020000491ddf : and al, ch ; mov edx, esp ; ret 0x90ff
0x00000200005f6c8e : and al, ch ; mov word ptr [rax - 0x166f005b], ss ; ret
0x00000200005e229a : and al, ch ; nop ; ret 0xffb7
0x00000200005c1441 : and al, ch ; or eax, 0x8bffffd5 ; ret
0x000002000015552b : and al, ch ; outsd dx, dword ptr [rsi] ; enter -0x10, -0x75 ; ret
0x00000200005974e3 : and al, ch ; pop rdi ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000070ffdc : and al, ch ; pop rsi ; ret
0x00000200000e7c2d : and al, ch ; popfq ; ret 0
0x0000020000643bdb : and al, ch ; psubq mm7, mm7 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000145a79 : and al, ch ; push rcx ; ret
0x000002000046cbf3 : and al, ch ; push rdi ; insd dword ptr [rdi], dx ; ret
0x00000200004bd89e : and al, ch ; pushfq ; mov r14d, 0x3bf88bff ; ret
0x0000020000632c22 : and al, ch ; rcr ah, 0xd6 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000006ffee : and al, ch ; ret
0x00000200003a2038 : and al, ch ; ret 0
0x0000020000008858 : and al, ch ; ret 0x474
0x00000200006c2bc8 : and al, ch ; ret 0x95eb
0x0000020000582378 : and al, ch ; ret 0xb1fc
0x0000020000523078 : and al, ch ; ret 0xb5a0
0x0000020000518e18 : and al, ch ; ret 0xb641
0x00000200004853b8 : and al, ch ; ret 0xc816
0x0000020000710518 : and al, ch ; ret 0xce54
0x00000200004de1b8 : and al, ch ; ret 0xe86b
0x00000200001ea278 : and al, ch ; ret 0xe920
0x00000200004d13d4 : and al, ch ; ret 0xf51b
0x00000200005f2144 : and al, ch ; ret 0xf5d9
0x00000200004a3a08 : and al, ch ; ret 0xf9e3
0x00000200003d6438 : and al, ch ; ret 0xff91
0x0000020000490f54 : and al, ch ; ret 0xffbe
0x00000200001a2038 : and al, ch ; ret 0xffde
0x000002000059a698 : and al, ch ; ret 0xffe2
0x0000020000028cd0 : and al, ch ; ret 0xfffd
0x000002000010f140 : and al, ch ; ret 4
0x00000200001ad5e8 : and al, ch ; ret 6
0x0000020000507a22 : and al, ch ; sub ch, dh ; ret
0x0000020000104123 : and al, ch ; xlatb ; ret 0x2d
0x00000200004bebb9 : and al, ch ; xor dword ptr [rsi + rdi*4], 0x3bf88bff ; ret
0x00000200000a9803 : and al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008c5df : and al, cl ; call qword ptr [rdx]
0x00000200000677bc : and al, cl ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000034ac : and al, cl ; mov eax, r8d ; add rsp, 0x18 ; ret
0x00000200000ba2f9 : and al, cl ; ret
0x0000020000644da2 : and al, r13b ; ret
0x000002000005071f : and bh, ah ; push rsi ; ret
0x00000200001bfd04 : and bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000065b9b7 : and bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000648209 : and bh, bh ; push rsp ; and al, 0x68 ; add rsp, 0x38 ; ret
0x00000200001b966b : and bh, bh ; push rsp ; and al, 0x70 ; add rsp, 0x38 ; ret
0x0000020000496277 : and bh, bh ; ret
0x0000020000115ab3 : and bh, bh ; ret 0x5489
0x00000200004e900a : and bh, bh ; ret 0x8348
0x00000200005682ee : and bh, bh ; ret 0xff48
0x000002000020d418 : and bh, bl ; or eax, dword ptr [rax] ; push rdx ; fisttp word ptr [rbx] ; add ah, bh ; ret
0x000002000001e2e7 : and bh, byte ptr [rax + 0x10] ; ret
0x000002000002c71d : and bh, byte ptr [rdi + 1] ; add bh, bh ; ret
0x000002000008324a : and bh, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xf023
0x000002000014f2ea : and bh, ch ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062f6ea : and bh, cl ; ret
0x0000020000601c2b : and bl, ah ; dec dword ptr [rax - 0x75] ; ret
0x0000020000590342 : and bl, ah ; mov r9b, bl ; call 0x2000019c577
0x0000020000371559 : and bl, al ; add rsp, 0x28 ; ret
0x00000200003ca3de : and bl, al ; mov al, r9b ; ret
0x0000020000016de7 : and bl, al ; ret
0x0000020000574538 : and bl, al ; xor eax, eax ; ret
0x0000020000495d7a : and bl, byte ptr [rbx] ; in al, -1 ; call 0x200000b9b07
0x000002000008e2cb : and bl, byte ptr [rdi + 0x6670408c] ; mov ch, 0x6e ; ret
0x000002000057b874 : and bl, ch ; adc dword ptr [rbp + rcx*4 + 5], ecx ; ret 0xed2e
0x00000200006e72b5 : and bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x44f0
0x00000200004e5d2a : and bl, ch ; lodsd eax, dword ptr [rsi] ; call r12
0x00000200003cf7bd : and bl, ch ; ret
0x000002000036de94 : and bl, dh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000590341 : and bl, r12b ; mov r9b, bl ; call 0x2000019c578
0x00000200000917c9 : and bpl, 0xe4 ; ret 0x394e
0x0000020000112028 : and byte ptr [r10], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000144bcc : and byte ptr [r11 + r9*4 + 0x47], r8b ; sbb byte ptr [rax + 3], cl ; ret
0x00000200001c76a4 : and byte ptr [r11 - 0x7af0fe08], r8b ; ret
0x000002000000b919 : and byte ptr [r11], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000667225 : and byte ptr [r13 + 0x58b48ff], 0x10 ; insd dword ptr [rdi], dx ; ret 0x48ff
0x0000020000153826 : and byte ptr [r13 - 0x77], cl ; ret 0x8b41
0x0000020000504364 : and byte ptr [r13 - 0x77], r8b ; adc byte ptr [r8 - 0x75], r9b ; ret
0x000002000018e859 : and byte ptr [r15 + r9 + 0x20], r8b ; ret
0x000002000056518e : and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x0000020000548a57 : and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200000c7886 : and byte ptr [r8 + 0xf], cl ; ret
0x0000020000019515 : and byte ptr [r8 + rcx*2], r9b ; add esp, 0x20 ; pop rbp ; ret
0x000002000004c41b : and byte ptr [r8 - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000017a56b : and byte ptr [r8 - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x00000200000551a2 : and byte ptr [r8 - 0x7d], cl ; ret
0x000002000058a1b9 : and byte ptr [r8 - 0x7d], cl ; ret 0x491c
0x00000200006f524f : and byte ptr [r8 - 0x7d], cl ; ret 0x4d10
0x00000200001521f4 : and byte ptr [r8], r8b ; ret
0x00000200000ca01a : and byte ptr [r9 + 0x23], cl ; ret 0x3148
0x0000020000371ef6 : and byte ptr [r9 + 0x2b], al ; ret
0x00000200004683bb : and byte ptr [r9 + 0xf], al ; xchg eax, ebp ; ret 0xf749
0x00000200006c963c : and byte ptr [r9 + 3], cl ; ret 0x3b48
0x000002000004c179 : and byte ptr [r9 + 3], r8b ; enter -0xd75, -0x75 ; ret 0xe8c1
0x0000020000399166 : and byte ptr [r9 - 0x75], cl ; ror byte ptr [rax - 1], cl ; ret 0x4566
0x000002000051bd14 : and byte ptr [r9 - 0x75], cl ; shr al, cl ; ret 0xc2e9
0x00000200000e796b : and byte ptr [r9 - 0x7b], r9b ; sal byte ptr [rsp + rbp + 0x48], 0x8b ; ret 0x48f0
0x000002000035e845 : and byte ptr [r9 - 0x7d], cl ; ret
0x00000200004fdbf4 : and byte ptr [r9 - 0x7d], r9b ; ret
0x000002000018811a : and byte ptr [rax + 0x23], cl ; ret 0xba48
0x0000020000423fd3 : and byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200003ae02d : and byte ptr [rax + 0x3b], cl ; ret
0x000002000006cf1c : and byte ptr [rax + 0x3b], cl ; ret 0x2674
0x00000200001df4a4 : and byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200004c6ac9 : and byte ptr [rax + 0x44047404], ch ; add dword ptr [rcx + 0x40], ebx ; ret
0x00000200005d3e1e : and byte ptr [rax + 0x63], cl ; ret
0x00000200001b8d77 : and byte ptr [rax + 0x63], cl ; ret 0x8b49
0x00000200006c26f5 : and byte ptr [rax + 0xb483fe1], al ; ret 0x8b41
0x0000020000371002 : and byte ptr [rax + 0xb], cl ; ret 0x10a8
0x00000200006ff69f : and byte ptr [rax + 0xb], cl ; ret 0x188
0x00000200003652bb : and byte ptr [rax + 0xb], cl ; ret 0x1a8
0x00000200000164f0 : and byte ptr [rax + 0xb], cl ; ret 0x2b48
0x0000020000634348 : and byte ptr [rax + 0xb], cl ; ret 0x2b49
0x000002000042e8a8 : and byte ptr [rax + 0xb], cl ; ret 0x3344
0x0000020000174822 : and byte ptr [rax + 0xb], cl ; ret 0x3345
0x0000020000372172 : and byte ptr [rax + 0xb], cl ; ret 0x3840
0x000002000007b173 : and byte ptr [rax + 0xb], cl ; ret 0x3948
0x0000020000078a9a : and byte ptr [rax + 0xb], cl ; ret 0x3949
0x00000200006bd5f8 : and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x000002000035fcae : and byte ptr [rax + 0xb], cl ; ret 0x3b4d
0x000002000017a442 : and byte ptr [rax + 0xb], cl ; ret 0x48c3
0x00000200005e6b03 : and byte ptr [rax + 0xb], cl ; ret 0x4ba
0x00000200000a254d : and byte ptr [rax + 0xb], cl ; ret 0x538b
0x00000200001339fa : and byte ptr [rax + 0xb], cl ; ret 0x548b
0x00000200006eb87a : and byte ptr [rax + 0xb], cl ; ret 0x6348
0x00000200001baf41 : and byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200006c2796 : and byte ptr [rax + 0xb], cl ; ret 0x83f0
0x0000020000118cc7 : and byte ptr [rax + 0xb], cl ; ret 0x8445
0x00000200004186d0 : and byte ptr [rax + 0xb], cl ; ret 0x8941
0x00000200000aab56 : and byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000078968 : and byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000071841 : and byte ptr [rax + 0xb], cl ; ret 0x894a
0x0000020000002647 : and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000654ff : and byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000000a3d2 : and byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x000002000036d955 : and byte ptr [rax + 0xb], cl ; ret 0x8ba
0x000002000069dc03 : and byte ptr [rax + 0xb], cl ; ret 0x8d41
0x0000020000701183 : and byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200003722fd : and byte ptr [rax + 0xb], cl ; ret 0x8d49
0x0000020000133cb5 : and byte ptr [rax + 0xb], cl ; ret 0x90c3
0x0000020000073e07 : and byte ptr [rax + 0xb], cl ; ret 0x918b
0x0000020000370e2a : and byte ptr [rax + 0xb], cl ; ret 0xb49
0x0000020000057203 : and byte ptr [rax + 0xb], cl ; ret 0xb941
0x00000200006e6eff : and byte ptr [rax + 0xb], cl ; ret 0xba41
0x00000200006f460c : and byte ptr [rax + 0xb], cl ; ret 0xba48
0x00000200006a0596 : and byte ptr [rax + 0xb], cl ; ret 0xbb41
0x0000020000173c96 : and byte ptr [rax + 0xb], cl ; ret 0xc084
0x000002000007109a : and byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200001b10b2 : and byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000151e20 : and byte ptr [rax + 0xb], cl ; ret 0xc35f
0x0000020000177b1f : and byte ptr [rax + 0xb], cl ; ret 0xc88b
0x000002000036ec62 : and byte ptr [rax + 0xb], cl ; ret 0xc9ff
0x00000200001d5104 : and byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200001ce303 : and byte ptr [rax + 0xb], cl ; ret 0xd68b
0x00000200001d5406 : and byte ptr [rax + 0xb], cl ; ret 0xf48
0x00000200000b1052 : and byte ptr [rax + 0xb], cl ; ret 0xffba
0x00000200001682ce : and byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x90c3
0x00000200000c7887 : and byte ptr [rax + 0xf], cl ; ret
0x00000200001549e7 : and byte ptr [rax + 0xffff], bh ; ret
0x000002000000e012 : and byte ptr [rax + rax], al ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200006e7178 : and byte ptr [rax + rax], bl ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000052aba9 : and byte ptr [rax + rax], bl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000019516 : and byte ptr [rax + rcx*2], cl ; add esp, 0x20 ; pop rbp ; ret
0x00000200006ed254 : and byte ptr [rax - 0x18000000], al ; ret 0xd044
0x00000200006d0b44 : and byte ptr [rax - 0x18000000], dl ; ret 0xffa4
0x000002000006d00a : and byte ptr [rax - 0x3f], cl ; call 0x1ffc22a1822
0x00000200000c10d3 : and byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000004c41c : and byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001da712 : and byte ptr [rax - 0x3f], cl ; jmp 0x1ffc3a8f32d
0x0000020000544be2 : and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200005f0f41 : and byte ptr [rax - 0x67ffe1f], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000020000168dd7 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x0000020000150ba8 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x0000020000658619 : and byte ptr [rax - 0x74bf0000], al ; ret 0x8348
0x0000020000161c10 : and byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200006f8397 : and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x0000020000423b56 : and byte ptr [rax - 0x75], cl ; enter 0x4de8, -0x19 ; ret 0x8bff
0x0000020000421c4f : and byte ptr [rax - 0x75], cl ; enter 0x54e8, 6 ; ret
0x00000200000349e9 : and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x0000020000668db0 : and byte ptr [rax - 0x75], cl ; fld1 ; ret
0x0000020000391aa5 : and byte ptr [rax - 0x75], cl ; insb byte ptr [rdi], dx ; and al, 0x28 ; pop rsi ; ret
0x000002000064700d : and byte ptr [rax - 0x75], cl ; int 0xff
0x0000020000423b7a : and byte ptr [rax - 0x75], cl ; iretd ; mov esi, eax ; call 0x2000004fa8d
0x000002000056a976 : and byte ptr [rax - 0x75], cl ; je 0x2000056a9a7 ; sub byte ptr [rcx - 0x75], al ; ret
0x0000020000157cc5 : and byte ptr [rax - 0x75], cl ; jl 0x20000157cf6 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000177be7 : and byte ptr [rax - 0x75], cl ; jl 0x20000177c18 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200003cbcfd : and byte ptr [rax - 0x75], cl ; jl 0x200003cbd2d ; xor cl, ch ; ret 0
0x000002000054564a : and byte ptr [rax - 0x75], cl ; jl 0x2000054567b ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000047acb8 : and byte ptr [rax - 0x75], cl ; jmp 0x1ffc367bc0b
0x00000200005587e1 : and byte ptr [rax - 0x75], cl ; push rdi ; or al, ch ; int1 ; ret
0x00000200000cdb51 : and byte ptr [rax - 0x75], cl ; ret
0x0000020000468426 : and byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000004f1a5 : and byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000012113e : and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004cf3c9 : and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000576ce5 : and byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000004a6e9 : and byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000423c03 : and byte ptr [rax - 0x75], cl ; retf ; mov edi, eax ; call 0x2000004fa8d
0x000002000006cc74 : and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x000002000049ef8e : and byte ptr [rax - 0x75], cl ; shr eax, cl ; fld dword ptr [rdx] ; ret 0x66ff
0x000002000048cfec : and byte ptr [rax - 0x75], cl ; shr eax, cl ; jnp 0x2000048d01c ; ret
0x0000020000438685 : and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7d], cl ; ret 0x4820
0x000002000017a56c : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x0000020000489216 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rsi + 0x44], 0x8b ; ret
0x00000200000473f9 : and byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; test byte ptr [rbx], al ; ret
0x00000200000551a3 : and byte ptr [rax - 0x7d], cl ; ret
0x00000200003db252 : and byte ptr [rax - 0x7d], cl ; ret 0x4210
0x000002000006c005 : and byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000200004fc1bd : and byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000002000058a1ba : and byte ptr [rax - 0x7d], cl ; ret 0x491c
0x00000200006f5250 : and byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x0000020000054a61 : and byte ptr [rax - 0x7d], cl ; ret 0x6602
0x000002000048d558 : and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x000002000056b955 : and byte ptr [rax - 0x7f], cl ; ret
0x000002000055f9a8 : and byte ptr [rax - 0x7f], cl ; ret 0x2980
0x00000200005eec65 : and byte ptr [rax - 0x7f], cl ; ret 0x88
0x000002000062ead8 : and byte ptr [rax - 1], cl ; ret 0x5fe8
0x0000020000524f0c : and byte ptr [rax - 1], cl ; ret 0xbe41
0x0000020000073b30 : and byte ptr [rax - 1], cl ; ret 0xff49
0x000002000062ead7 : and byte ptr [rax - 1], r9b ; ret 0x5fe8
0x000002000001b99f : and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x000002000008c58d : and byte ptr [rax], ah ; call qword ptr [rdx]
0x0000020000557c53 : and byte ptr [rax], al ; add bh, al ; ret
0x0000020000708164 : and byte ptr [rax], al ; add bl, al ; mov eax, 0x1000 ; ret
0x00000200001348e0 : and byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; lodsb al, byte ptr [rsi] ; call rax
0x0000020000020e4c : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004b83d2 : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001a98f8 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001b5b26
0x00000200000dd2d9 : and byte ptr [rax], al ; add byte ptr [rcx - 0x99fdbbc], cl ; ret 0x8b0c
0x0000020000615a38 : and byte ptr [rax], al ; add cl, ch ; ret 0xe891
0x000002000015312d : and byte ptr [rax], al ; add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200003dd86d : and byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ed96c : and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000225c0a : and byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; clc ; call qword ptr [rax]
0x000002000020fdc2 : and byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xd90
0x00000200003db712 : and byte ptr [rax], al ; and qword ptr [rbx + 8], 0 ; jmp 0x200003db6e6
0x0000020000018451 : and byte ptr [rax], al ; call 0x20000017fcd
0x0000020000403d88 : and byte ptr [rax], al ; call 0x20000023fb5
0x00000200001018d3 : and byte ptr [rax], al ; je 0x200001018e4 ; mov rax, rcx ; ret
0x00000200006344f4 : and byte ptr [rax], al ; je 0x200006344ee ; mov al, 1 ; ret
0x0000020000069637 : and byte ptr [rax], al ; jmp 0x20000069601
0x00000200003d7bfe : and byte ptr [rax], al ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000105a4a : and byte ptr [rax], al ; ret
0x00000200001418bc : and byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005cbf90 : and byte ptr [rax], al ; xor r9d, r9d ; call r10
0x000002000008c59d : and byte ptr [rax], bh ; call qword ptr [rdx]
0x00000200000933c7 : and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x000002000064bd73 : and byte ptr [rax], bl ; ret
0x00000200004cfa9c : and byte ptr [rax], ch ; ret 0xe9ff
0x0000020000548c8f : and byte ptr [rax], cl ; add byte ptr [rax], al ; add al, ch ; push rdi ; ret 6
0x000002000053d948 : and byte ptr [rax], dl ; add byte ptr [rax], al ; add al, ch ; fimul word ptr [rbx] ; ret 0x4dff
0x000002000053da32 : and byte ptr [rax], dl ; add byte ptr [rax], al ; call 0x2000015e538
0x0000020000028a73 : and byte ptr [rbp + 0x2b], cl ; ret
0x00000200003b71d8 : and byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], 0xd7 ; call 0x200003b340d
0x0000020000667226 : and byte ptr [rbp + 0x58b48ff], 0x10 ; insd dword ptr [rdi], dx ; ret 0x48ff
0x00000200006671dc : and byte ptr [rbp + 0x58b48ff], 0xaa ; insd dword ptr [rdi], dx ; ret 0x48ff
0x00000200005904c8 : and byte ptr [rbp + 0x63], cl ; ret
0x00000200005904c7 : and byte ptr [rbp + 0x63], r9b ; ret
0x000002000005940b : and byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf49
0x000002000010a95d : and byte ptr [rbp + 4], dh ; lea eax, dword ptr [rcx + 6] ; ret
0x00000200000360cb : and byte ptr [rbp + rax + 0x41], dh ; or dword ptr [rax], 0xffffffff ; ret
0x0000020000519847 : and byte ptr [rbp + rcx - 0x18], dh ; cmp dword ptr [rdi], ecx ; ret
0x000002000001bccd : and byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x60 ; call qword ptr [rdi]
0x000002000036a118 : and byte ptr [rbp + rcx*4 + 0x6b], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x0000020000058406 : and byte ptr [rbp + rcx*4 + 5], cl ; ret 0xff9c
0x00000200001cf670 : and byte ptr [rbp - 0x72bbe7b6], cl ; adc al, bpl ; ret
0x00000200005c53b7 : and byte ptr [rbp - 0x73], al ; add cl, byte ptr [r9 - 0x75] ; iretd ; call rsi
0x00000200005c552f : and byte ptr [rbp - 0x73], al ; add dword ptr [r9 - 0x75], ecx ; iretd ; call rsi
0x000002000070948a : and byte ptr [rbp - 0x74bb8eb6], cl ; ret 0xaae8
0x00000200000362a6 : and byte ptr [rbp - 0x75], cl ; jae 0x200000362dc ; mov rsp, r11 ; pop rbp ; ret
0x000002000039bc39 : and byte ptr [rbp - 0x75], cl ; jae 0x2000039bc6f ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ad4a2 : and byte ptr [rbp - 0x75], cl ; jae 0x200003ad4d8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004163d6 : and byte ptr [rbp - 0x75], cl ; jae 0x2000041640c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000479507 : and byte ptr [rbp - 0x75], cl ; jae 0x2000047953d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000488b70 : and byte ptr [rbp - 0x75], cl ; jae 0x20000488ba6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b46b0 : and byte ptr [rbp - 0x75], cl ; jae 0x200004b46e6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e7cb7 : and byte ptr [rbp - 0x75], cl ; jae 0x200004e7ced ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ea44d : and byte ptr [rbp - 0x75], cl ; jae 0x200004ea483 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f09b6 : and byte ptr [rbp - 0x75], cl ; jae 0x200004f09ec ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f9040 : and byte ptr [rbp - 0x75], cl ; jae 0x200004f9076 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055ca2a : and byte ptr [rbp - 0x75], cl ; jae 0x2000055ca60 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005909ef : and byte ptr [rbp - 0x75], cl ; jae 0x20000590a25 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005aa6d2 : and byte ptr [rbp - 0x75], cl ; jae 0x200005aa708 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c6bda : and byte ptr [rbp - 0x75], cl ; jae 0x200005c6c10 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c6caa : and byte ptr [rbp - 0x75], cl ; jae 0x200005c6ce0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000618454 : and byte ptr [rbp - 0x75], cl ; jae 0x2000061848a ; mov rsp, r11 ; pop rbp ; ret
0x00000200006be494 : and byte ptr [rbp - 0x75], cl ; jae 0x200006be4ca ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c331b : and byte ptr [rbp - 0x75], cl ; jae 0x200006c3351 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c3625 : and byte ptr [rbp - 0x75], cl ; jae 0x200006c365b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000704f98 : and byte ptr [rbp - 0x75], cl ; jae 0x20000704fce ; mov rsp, r11 ; pop rbp ; ret
0x0000020000016881 : and byte ptr [rbp - 0x75], cl ; jnp 0x200000168b7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049c538 : and byte ptr [rbp - 0x75], cl ; jnp 0x2000049c56e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b55c8 : and byte ptr [rbp - 0x75], cl ; jnp 0x200004b55fe ; mov rsp, r11 ; pop rbp ; ret
0x00000200004eec5e : and byte ptr [rbp - 0x75], cl ; jnp 0x200004eec94 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051cfb4 : and byte ptr [rbp - 0x75], cl ; jnp 0x2000051cfea ; mov rsp, r11 ; pop rbp ; ret
0x0000020000563e08 : and byte ptr [rbp - 0x75], cl ; jnp 0x20000563e3e ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bbd53 : and byte ptr [rbp - 0x75], cl ; jnp 0x200006bbd89 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000150695 : and byte ptr [rbp - 0x75], cl ; ret
0x0000020000570e4b : and byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200001dc278 : and byte ptr [rbp - 0x75], cl ; ret 0x89ba
0x00000200001a335e : and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000151bcf : and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000504365 : and byte ptr [rbp - 0x77], al ; adc byte ptr [r8 - 0x75], r9b ; ret
0x0000020000153827 : and byte ptr [rbp - 0x77], cl ; ret 0x8b41
0x0000020000189719 : and byte ptr [rbp - 0x7b], al ; sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x00000200004f3034 : and byte ptr [rbp - 0x7ef68725], al ; jmp qword ptr [rax]
0x000002000059be9d : and byte ptr [rbp - 0x8a48a40], al ; ret 0
0x0000020000664bac : and byte ptr [rbp - 0x9be003e], dh ; ret
0x00000200003fd7e7 : and byte ptr [rbp - 0x9d08b37], al ; ret
0x000002000005c2b9 : and byte ptr [rbx + 0x200f44f9], cl ; ret
0x00000200004b2d19 : and byte ptr [rbx + 0x2ae8ffcf], al ; ret
0x00000200006ce091 : and byte ptr [rbx + 0x2d], ch ; add byte ptr [rcx + 3], cl ; ret
0x000002000069cd76 : and byte ptr [rbx + 0x3b48e], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000069bd59 : and byte ptr [rbx + 0x3b48e], cl ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000069b21f : and byte ptr [rbx + 0x3b48f], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000d4f81 : and byte ptr [rbx + 0x434], 0xf7 ; jmp 0x200000d4f54
0x0000020000123be9 : and byte ptr [rbx + 0x47], 0xbf ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000019c45 : and byte ptr [rbx + 0x48], bl ; jmp rax
0x00000200003e6725 : and byte ptr [rbx + 0x57404fb], al ; call r12
0x00000200006d1b04 : and byte ptr [rbx + 0xb48f8c3], al ; ret 0x8b48
0x00000200006d276d : and byte ptr [rbx + 0xb48f8c6], al ; ret 0x8b48
0x00000200001a95ae : and byte ptr [rbx + 0xb48ffcf], al ; ret 0xd233
0x00000200004f7054 : and byte ptr [rbx + 0xd8d48d9], cl ; ret 0xda0d
0x00000200005e0076 : and byte ptr [rbx + 1], ah ; add byte ptr [rax], al ; call 0x2000007c347
0x000002000064bd8f : and byte ptr [rbx + rax*8], bl ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x0000020000416fa8 : and byte ptr [rbx + rcx*4 + 0x15], cl ; nop ; ret
0x0000020000144bcd : and byte ptr [rbx + rcx*4 + 0x47], al ; sbb byte ptr [rax + 3], cl ; ret
0x00000200003656e3 : and byte ptr [rbx + rcx*4 + 0x6d], al ; sbb byte ptr [rbp + 0x3b], al ; ret
0x000002000066134f : and byte ptr [rbx + rcx*4 + 5], cl ; int1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x00000200000ea9da : and byte ptr [rbx + rcx*4 - 0x2e], cl ; mov rdx, rcx ; jne 0x200000ea9ed ; ret
0x000002000064c4a7 : and byte ptr [rbx + rcx*4 - 0x35], cl ; mov rcx, r14 ; call rax
0x000002000019afa3 : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov rcx, rbp ; call 0x200000771c9
0x0000020000423be3 : and byte ptr [rbx + rcx*4 - 8], al ; call 0x200000522b3
0x00000200003dd8ff : and byte ptr [rbx - 0x17], bl ; adc cl, dh ; ret
0x0000020000526005 : and byte ptr [rbx - 0x17], bl ; cwde ; ret 0x49ff
0x000002000013b812 : and byte ptr [rbx - 0x17], bl ; ret
0x00000200005201ad : and byte ptr [rbx - 0x3174b62a], cl ; call r9
0x0000020000117a01 : and byte ptr [rbx - 0x3d], bl ; jmp 0x200001179cd
0x00000200001184e9 : and byte ptr [rbx - 0x3d], bl ; mov ecx, dword ptr [rip + 0x171852] ; call rax
0x0000020000550a55 : and byte ptr [rbx - 0x3d], bl ; xor al, al ; ret
0x0000020000590dc8 : and byte ptr [rbx - 0x74afdb8c], cl ; ret 0x3345
0x00000200004233e8 : and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x00000200005ac9b1 : and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x00000200001c76a5 : and byte ptr [rbx - 0x7af0fe08], al ; ret
0x00000200001b4346 : and byte ptr [rbx - 0xdbdbac], cl ; ret 0x5489
0x000002000003b519 : and byte ptr [rbx - 1], al ; adc al, 0xd3 ; add rsp, 0x48 ; ret
0x000002000037abba : and byte ptr [rbx], ah ; ret 0x3148
0x000002000058e5e3 : and byte ptr [rbx], al ; ret
0x00000200003af716 : and byte ptr [rbx], bh ; ret
0x0000020000163a01 : and byte ptr [rbx], bh ; ret 0xb677
0x0000020000464a7a : and byte ptr [rbx], bl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000933c5 : and byte ptr [rbx], bl ; and byte ptr [rax], bl ; add dword ptr [rax], eax ; call qword ptr [rax]
0x000002000064bd81 : and byte ptr [rbx], bl ; ret
0x00000200003f79d5 : and byte ptr [rbx], bl ; rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x000002000019ae78 : and byte ptr [rbx], ch ; fdivr st(7) ; ret
0x00000200002581e9 : and byte ptr [rbx], cl ; add byte ptr [rip + 0x11061506], cl ; ret 0xf00d
0x0000020000239705 : and byte ptr [rbx], cl ; add byte ptr [rip + 0x11068506], cl ; ret 0xf00d
0x000002000000b91a : and byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x000002000037bbf8 : and byte ptr [rbx], cl ; ret
0x0000020000573e02 : and byte ptr [rbx], dh ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005d5adf : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000441dd8
0x00000200004d37ff : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], 0x42 ; push rax ; ret
0x00000200004d384a : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x00000200004d37ef : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], 0x42 ; sub bl, dh ; ret
0x000002000051db95 : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x38 ; call rdi
0x00000200001f4911 : and byte ptr [rbx], dh ; ror byte ptr [rbp - 0x74b3f3b6], cl ; ret
0x00000200006f666e : and byte ptr [rbx], dh ; shr al, cl ; ret 0xd40d
0x000002000037abb9 : and byte ptr [rbx], r12b ; ret 0x3148
0x00000200004d37fe : and byte ptr [rbx], sil ; ror byte ptr [rax - 0x77], 0x42 ; push rax ; ret
0x00000200004d3849 : and byte ptr [rbx], sil ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x00000200004d37ee : and byte ptr [rbx], sil ; ror byte ptr [rax - 0x77], 0x42 ; sub bl, dh ; ret
0x000002000070377a : and byte ptr [rcx + 0x200], bh ; call r9
0x000002000002e2ff : and byte ptr [rcx + 0x23], cl ; ret
0x00000200000ca01b : and byte ptr [rcx + 0x23], cl ; ret 0x3148
0x0000020000371ef7 : and byte ptr [rcx + 0x2b], al ; ret
0x00000200000d2f1d : and byte ptr [rcx + 0x2b], cl ; ret
0x000002000005e51b : and byte ptr [rcx + 0x2b], cl ; ret 0xf748
0x00000200001adfd1 : and byte ptr [rcx + 0x338], 0xf8 ; ret
0x00000200000bc3a6 : and byte ptr [rcx + 0x33], cl ; fimul word ptr [rax - 9] ; ret
0x000002000006d07f : and byte ptr [rcx + 0x3b], cl ; ret 0x1b74
0x00000200000d2f39 : and byte ptr [rcx + 0x3b], cl ; ret 0x8374
0x00000200001e054b : and byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x00000200006f33db : and byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; ret
0x000002000041b973 : and byte ptr [rcx + 0x5c], al ; ret
0x0000020000523596 : and byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000643e8b : and byte ptr [rcx + 0x5e], al ; jmp rax
0x000002000015c82d : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001ba06 : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000047cb5 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000d21fa : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000398a0 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x000002000002552e : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000139901 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x000002000001aba7 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x00000200001ac3bb : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000b601 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000000505b : and byte ptr [rcx + 0x5e], al ; ret
0x000002000013b1f8 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x00000200004cc46e : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000050ca08 : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x000002000038180b : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000006d94 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000004329 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000003a887 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000002786 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x00000200003a09a6 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200000acc3f : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x000002000005243a : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000974d : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000005e314 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200003fa681 : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x00000200000f9282 : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x00000200000492a2 : and byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x00000200000386d6 : and byte ptr [rcx + 0x5f], al ; ret
0x00000200004a6b67 : and byte ptr [rcx + 0x800c], bh ; call rax
0x00000200007055be : and byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x00000200004683bc : and byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xf749
0x000002000004c17a : and byte ptr [rcx + 3], al ; enter -0xd75, -0x75 ; ret 0xe8c1
0x00000200006d9265 : and byte ptr [rcx + 3], al ; fimul word ptr [rax + 0xb] ; ret 0x8b48
0x00000200004c1516 : and byte ptr [rcx + 3], al ; ret 0x4589
0x00000200006c963d : and byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200006dbe8d : and byte ptr [rcx + 3], cl ; ret 0xc9ff
0x00000200003a67fd : and byte ptr [rcx + rcx*4 + 0x6d], al ; ret
0x0000020000481e22 : and byte ptr [rcx + rcx*4 + 0x6f], al ; adc al, 0xe8 ; and al, 0x1b ; ret 0x45ff
0x0000020000669b8e : and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x00000200003dd807 : and byte ptr [rcx + rdx - 0xd], dh ; ret
0x00000200006eb038 : and byte ptr [rcx - 0x39], cl ; ret 0x7400
0x000002000018a7a1 : and byte ptr [rcx - 0x3f], cl ; jmp 0x2000018a7bc
0x000002000018ca20 : and byte ptr [rcx - 0x3f], cl ; jmp 0x2000018ca3b
0x0000020000187114 : and byte ptr [rcx - 0x3f], cl ; sti ; add ecx, dword ptr [rcx + 0x3b] ; ret
0x00000200001401e6 : and byte ptr [rcx - 0x3fccfff8], al ; ret
0x00000200005c7d36 : and byte ptr [rcx - 0x47], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200005c7d6f : and byte ptr [rcx - 0x47], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x000002000070efaa : and byte ptr [rcx - 0x75], al ; iretd ; call 0x200000fb20e
0x00000200000df613 : and byte ptr [rcx - 0x75], al ; ret
0x00000200001c2cec : and byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000058a214 : and byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200004a42fe : and byte ptr [rcx - 0x75], cl ; fisttp qword ptr [rcx - 0x7d] ; ret 0x660a
0x0000020000037d4e : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x000002000054b1e0 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x0000020000520ba2 : and byte ptr [rcx - 0x75], cl ; imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000487523 : and byte ptr [rcx - 0x75], cl ; iretd ; mov rdx, r12 ; call rdi
0x000002000001ae0b : and byte ptr [rcx - 0x75], cl ; jae 0x2000001ae41 ; mov rsp, r11 ; pop rdi ; ret
0x000002000005d3a6 : and byte ptr [rcx - 0x75], cl ; jae 0x2000005d3dc ; mov rsp, r11 ; pop rdi ; ret
0x00000200000dcd32 : and byte ptr [rcx - 0x75], cl ; jae 0x200000dcd68 ; mov rsp, r11 ; pop rdi ; ret
0x000002000010c128 : and byte ptr [rcx - 0x75], cl ; jae 0x2000010c15e ; mov rsp, r11 ; pop rdi ; ret
0x000002000017bcac : and byte ptr [rcx - 0x75], cl ; jae 0x2000017bce2 ; mov rsp, r11 ; pop rdi ; ret
0x000002000017f6ce : and byte ptr [rcx - 0x75], cl ; jae 0x2000017f704 ; mov rsp, r11 ; pop rdi ; ret
0x000002000017f8ee : and byte ptr [rcx - 0x75], cl ; jae 0x2000017f924 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000180147 : and byte ptr [rcx - 0x75], cl ; jae 0x2000018017d ; mov rsp, r11 ; pop rdi ; ret
0x000002000018f368 : and byte ptr [rcx - 0x75], cl ; jae 0x2000018f39e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000197ddb : and byte ptr [rcx - 0x75], cl ; jae 0x20000197e11 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b4017 : and byte ptr [rcx - 0x75], cl ; jae 0x200001b404d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b44dd : and byte ptr [rcx - 0x75], cl ; jae 0x200001b4513 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b5daa : and byte ptr [rcx - 0x75], cl ; jae 0x200001b5de0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003945df : and byte ptr [rcx - 0x75], cl ; jae 0x20000394615 ; mov rsp, r11 ; pop rdi ; ret
0x000002000039aa82 : and byte ptr [rcx - 0x75], cl ; jae 0x2000039aab8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003bd81e : and byte ptr [rcx - 0x75], cl ; jae 0x200003bd854 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c2860 : and byte ptr [rcx - 0x75], cl ; jae 0x200003c2896 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ab011 : and byte ptr [rcx - 0x75], cl ; jae 0x200004ab047 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004adb0d : and byte ptr [rcx - 0x75], cl ; jae 0x200004adb43 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c2ba3 : and byte ptr [rcx - 0x75], cl ; jae 0x200004c2bd9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501422 : and byte ptr [rcx - 0x75], cl ; jae 0x20000501458 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005019f5 : and byte ptr [rcx - 0x75], cl ; jae 0x20000501a2b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000506d1e : and byte ptr [rcx - 0x75], cl ; jae 0x20000506d54 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005080ff : and byte ptr [rcx - 0x75], cl ; jae 0x20000508135 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053c024 : and byte ptr [rcx - 0x75], cl ; jae 0x2000053c05a ; mov rsp, r11 ; pop rdi ; ret
0x000002000054d422 : and byte ptr [rcx - 0x75], cl ; jae 0x2000054d458 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000569c12 : and byte ptr [rcx - 0x75], cl ; jae 0x20000569c48 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005846e3 : and byte ptr [rcx - 0x75], cl ; jae 0x20000584719 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a52dd : and byte ptr [rcx - 0x75], cl ; jae 0x200005a5313 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b2aae : and byte ptr [rcx - 0x75], cl ; jae 0x200005b2ae4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b3e8e : and byte ptr [rcx - 0x75], cl ; jae 0x200005b3ec4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000063ef8b : and byte ptr [rcx - 0x75], cl ; jae 0x2000063efc1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000640d75 : and byte ptr [rcx - 0x75], cl ; jae 0x20000640dab ; mov rsp, r11 ; pop rdi ; ret
0x000002000064b8a5 : and byte ptr [rcx - 0x75], cl ; jae 0x2000064b8db ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d4a1 : and byte ptr [rcx - 0x75], cl ; jae 0x2000064d4d7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d741 : and byte ptr [rcx - 0x75], cl ; jae 0x2000064d777 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064fca7 : and byte ptr [rcx - 0x75], cl ; jae 0x2000064fcdd ; mov rsp, r11 ; pop rdi ; ret
0x00000200006561b2 : and byte ptr [rcx - 0x75], cl ; jae 0x200006561e8 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000656596 : and byte ptr [rcx - 0x75], cl ; jae 0x200006565cc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000062c99 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000062ccf ; mov rsp, r11 ; pop rbp ; ret
0x000002000011b885 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000011b8bb ; mov rsp, r11 ; pop rbp ; ret
0x000002000012bd78 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000012bdae ; mov rsp, r11 ; pop rbp ; ret
0x000002000013e5bd : and byte ptr [rcx - 0x75], cl ; jnp 0x2000013e5f3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000150d73 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000150da9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001700cb : and byte ptr [rcx - 0x75], cl ; jnp 0x20000170101 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000176341 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000176377 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001890ac : and byte ptr [rcx - 0x75], cl ; jnp 0x200001890e2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000194fb4 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000194fea ; mov rsp, r11 ; pop rbp ; ret
0x00000200001956ae : and byte ptr [rcx - 0x75], cl ; jnp 0x200001956e4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001957f7 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000019582d ; mov rsp, r11 ; pop rbp ; ret
0x00000200001971b4 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001971ea ; mov rsp, r11 ; pop rbp ; ret
0x00000200001b9203 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001b9239 ; mov rsp, r11 ; pop rbp ; ret
0x000002000036632a : and byte ptr [rcx - 0x75], cl ; jnp 0x20000366360 ; mov rsp, r11 ; pop rbp ; ret
0x000002000036f533 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000036f569 ; mov rsp, r11 ; pop rbp ; ret
0x000002000038674c : and byte ptr [rcx - 0x75], cl ; jnp 0x20000386782 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a8cab : and byte ptr [rcx - 0x75], cl ; jnp 0x200003a8ce1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d9fc8 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003d9ffe ; mov rsp, r11 ; pop rbp ; ret
0x000002000049880e : and byte ptr [rcx - 0x75], cl ; jnp 0x20000498844 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049a723 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000049a759 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049e3df : and byte ptr [rcx - 0x75], cl ; jnp 0x2000049e415 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab335 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004ab36b ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b342b : and byte ptr [rcx - 0x75], cl ; jnp 0x200004b3461 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e87dd : and byte ptr [rcx - 0x75], cl ; jnp 0x200004e8813 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000500729 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000050075f ; mov rsp, r11 ; pop rbp ; ret
0x000002000050096b : and byte ptr [rcx - 0x75], cl ; jnp 0x200005009a1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000534f4f : and byte ptr [rcx - 0x75], cl ; jnp 0x20000534f85 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000545859 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000054588f ; mov rsp, r11 ; pop rbp ; ret
0x000002000054adbd : and byte ptr [rcx - 0x75], cl ; jnp 0x2000054adf3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000552ef2 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000552f28 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564a19 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000564a4f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000580113 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000580149 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000580316 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000058034c ; mov rsp, r11 ; pop rbp ; ret
0x000002000058187d : and byte ptr [rcx - 0x75], cl ; jnp 0x200005818b3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005883d3 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000588409 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059e94a : and byte ptr [rcx - 0x75], cl ; jnp 0x2000059e980 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005a6414 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005a644a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005a8c0f : and byte ptr [rcx - 0x75], cl ; jnp 0x200005a8c45 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bb261 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005bb297 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bbdd3 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005bbe09 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c1542 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005c1578 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006342f5 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000063432b ; mov rsp, r11 ; pop rbp ; ret
0x00000200006eb5c8 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006eb5fe ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f5d18 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006f5d4e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000007571 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000075da ; ret
0x000002000000d007 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000d070 ; ret
0x000002000002027f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000202e8 ; ret
0x000002000003427c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000342e3 ; ret
0x0000020000037c9a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000037d01 ; ret
0x0000020000059cfa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000059d63 ; ret
0x0000020000068660 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000686ac ; pop rsi ; ret
0x00000200000fabaa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fac13 ; ret
0x0000020000101a27 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000101a8e ; ret
0x00000200001098c1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000109928 ; ret
0x000002000010a2b2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010a319 ; ret
0x000002000010aa2a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010aa91 ; ret
0x000002000010abda : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010ac41 ; ret
0x000002000011be34 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011be9b ; ret
0x000002000011bf68 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011bfcf ; ret
0x000002000012b95b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012b9c4 ; ret
0x0000020000143bb8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000143c21 ; ret
0x0000020000143d68 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000143dcf ; ret
0x000002000016ee23 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000016ee8c ; ret
0x0000020000186732 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000018679b ; ret
0x0000020000186938 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000018699f ; ret
0x0000020000198c43 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000198cac ; ret
0x000002000019d0f0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000019d159 ; ret
0x00000200001c156b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c15d2 ; ret
0x000002000037ddbe : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037de0a ; pop rsi ; ret
0x000002000037e0fa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037e163 ; ret
0x00000200003847b3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038481c ; ret
0x000002000038d07a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038d0e1 ; ret
0x00000200003922e9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000392335 ; pop rsi ; ret
0x0000020000398642 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003986a9 ; ret
0x000002000039e37e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039e3e7 ; ret
0x00000200003b0073 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b00da ; ret
0x00000200003de6f8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003de761 ; ret
0x00000200003fbdee : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fbe57 ; ret
0x00000200003fef5a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fefc3 ; ret
0x000002000040f4eb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040f537 ; pop rsi ; ret
0x0000020000410a0f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000410a5b ; pop rdi ; ret
0x0000020000416705 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041676c ; ret
0x000002000041a520 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041a56c ; pop rsi ; ret
0x0000020000423add : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000423b46 ; ret
0x000002000042c3c1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042c40d ; pop rsi ; ret
0x000002000043a212 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043a27b ; ret
0x000002000046e24e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046e29a ; pop rsi ; ret
0x00000200004783d5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047843e ; ret
0x000002000047a671 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047a6da ; ret
0x000002000047d1b2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047d1fe ; pop rsi ; ret
0x000002000048b753 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048b7bc ; ret
0x00000200004995d3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049963a ; ret
0x000002000049a2cc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049a333 ; ret
0x000002000049c126 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049c18d ; ret
0x00000200004ab1d8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab23f ; ret
0x00000200004ab273 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab2da ; ret
0x00000200004ab449 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab4b2 ; ret
0x00000200004ada37 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ada9e ; ret
0x00000200004b1d49 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b1db2 ; ret
0x00000200004b24ca : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b2531 ; ret
0x00000200004b3540 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b35a9 ; ret
0x00000200004dc63f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dc6a8 ; ret
0x00000200004e370b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e3774 ; ret
0x00000200004ea267 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ea2d0 ; ret
0x00000200004f9e55 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f9ebe ; ret
0x0000020000501821 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050188a ; ret
0x0000020000501e4c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000501eb5 ; ret
0x0000020000504b19 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000504b80 ; ret
0x000002000051a625 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a68c ; ret
0x000002000051b092 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b0f9 ; ret
0x000002000051b216 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b27d ; ret
0x000002000051d581 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051d5e8 ; ret
0x000002000052a619 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052a680 ; ret
0x000002000052b4d0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052b539 ; ret
0x0000020000532950 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005329b9 ; ret
0x0000020000541287 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005412d3 ; pop rsi ; ret
0x0000020000541770 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005417d9 ; ret
0x0000020000542fcf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000543038 ; ret
0x000002000054962e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000549695 ; ret
0x000002000054d771 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054d7d8 ; ret
0x00000200005624eb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000562537 ; pop rsi ; ret
0x0000020000562852 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056289e ; pop rsi ; ret
0x000002000056452d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000564579 ; pop rsi ; ret
0x0000020000564926 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056498d ; ret
0x0000020000566f7b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000566fe2 ; ret
0x0000020000567a47 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000567aae ; ret
0x000002000056f594 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056f5fd ; ret
0x00000200005728d8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000572941 ; ret
0x00000200005745f5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057465e ; ret
0x00000200005767d0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057681c ; pop rdi ; ret
0x000002000057d762 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057d7cb ; ret
0x000002000057f752 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057f7bb ; ret
0x0000020000581f0f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000581f78 ; ret
0x00000200005865d9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000586625 ; pop rsi ; ret
0x0000020000593ec2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000593f29 ; ret
0x000002000059860c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000598673 ; ret
0x000002000059f954 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059f9bb ; ret
0x00000200005a53ee : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a5457 ; ret
0x00000200005ad507 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ad56e ; ret
0x00000200005b92e5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b934e ; ret
0x00000200005bc02e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bc07a ; pop rdi ; ret
0x00000200005bf8cd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bf934 ; ret
0x00000200005c7c6c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c7cd5 ; ret
0x00000200005c7d09 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c7d72 ; ret
0x00000200005d047d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d04e6 ; ret
0x00000200006645e2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066464b ; ret
0x00000200006bb8af : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bb916 ; ret
0x00000200006bdb6d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bdbd4 ; ret
0x00000200006c4ebd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c4f24 ; ret
0x00000200006c64d6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c653d ; ret
0x00000200006ca8f3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ca95a ; ret
0x00000200006d03db : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d0444 ; ret
0x00000200006f7fa9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f8010 ; ret
0x0000020000703cff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000703d66 ; ret
0x0000020000023e2c : and byte ptr [rcx - 0x75], cl ; or dword ptr [rdi + rcx + 0x20], eax ; ret
0x00000200006ffe52 : and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200001f53e2 : and byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000399167 : and byte ptr [rcx - 0x75], cl ; ror byte ptr [rax - 1], cl ; ret 0x4566
0x000002000051bd15 : and byte ptr [rcx - 0x75], cl ; shr al, cl ; ret 0xc2e9
0x0000020000112cb2 : and byte ptr [rcx - 0x76], al ; ret 0x90c3
0x000002000017681b : and byte ptr [rcx - 0x76], al ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x0000020000548a54 : and byte ptr [rcx - 0x77], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x000002000063417c : and byte ptr [rcx - 0x77], cl ; jl 0x20000634151 ; adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200006145f4 : and byte ptr [rcx - 0x78], al ; or cl, byte ptr [rcx - 1] ; ret 0x8841
0x00000200000e796c : and byte ptr [rcx - 0x7b], cl ; sal byte ptr [rsp + rbp + 0x48], 0x8b ; ret 0x48f0
0x000002000013cf00 : and byte ptr [rcx - 0x7d], al ; ret
0x000002000035e846 : and byte ptr [rcx - 0x7d], cl ; ret
0x00000200003c8cab : and byte ptr [rcx - 0x7d], cl ; ret 0x4210
0x0000020000115ab9 : and byte ptr [rcx - 0x7f], cl ; ret 0
0x0000020000128491 : and byte ptr [rcx - 0xa], al ; ret
0x000002000057a457 : and byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000020000441e89 : and byte ptr [rcx - 0xa], al ; ret 0xf01
0x000002000052bec9 : and byte ptr [rcx - 1], al ; ret
0x0000020000173079 : and byte ptr [rcx - 1], al ; ret 0x2b9
0x00000200001e694a : and byte ptr [rcx - 1], al ; ret 0x8944
0x00000200001546ee : and byte ptr [rcx - 1], cl ; ret
0x0000020000141715 : and byte ptr [rcx], ah ; pop rbp ; ret
0x000002000045ee28 : and byte ptr [rcx], al ; add byte ptr [rax - 0x75], cl ; test al, 0x8b ; ret
0x00000200000536d4 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xa15
0x00000200004e80d9 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret
0x00000200005d7d85 : and byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x0000020000029ce0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000501362 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000065a75e : and byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200004c6a4c : and byte ptr [rcx], al ; inc dword ptr [rcx + 0x3c] ; ret
0x00000200001b897e : and byte ptr [rcx], bh ; adc esi, dword ptr [rdx - 8] ; jmp 0x200001b899a
0x0000020000632daa : and byte ptr [rcx], bh ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x000002000064bd7a : and byte ptr [rcx], bl ; ret
0x000002000013e9c9 : and byte ptr [rcx], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000632da9 : and byte ptr [rcx], dil ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x0000020000141714 : and byte ptr [rcx], r12b ; pop rbp ; ret
0x00000200005cfc2e : and byte ptr [rdi + 0x48], bl ; jmp rax
0x00000200000d0972 : and byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x0000020000105e9d : and byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000037eac0 : and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000142465 : and byte ptr [rdi + 0x5e], bl ; pop rcx ; ret
0x0000020000632dac : and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x00000200000a81b5 : and byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000632dad : and byte ptr [rdi + rcx + 0x4c], cl ; ret 0x8348
0x00000200005b7221 : and byte ptr [rdi + rcx - 0x42], al ; ret
0x00000200003defb3 : and byte ptr [rdi + rcx - 0x49], al ; ret 0x34c
0x00000200004d927c : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000192189 : and byte ptr [rdi - 0x3d], bl ; lock dec dword ptr [rcx + 8] ; ret
0x0000020000654201 : and byte ptr [rdi - 0x3d], bl ; mov qword ptr [rcx + 0x70], rdx ; ret
0x0000020000177490 : and byte ptr [rdi - 0x3d], bl ; nop ; lock dec dword ptr [rcx] ; ret
0x000002000036b3ee : and byte ptr [rdi - 0x3d], bl ; nop ; nop ; nop ; ret 0
0x0000020000193657 : and byte ptr [rdi - 0x3d], bl ; nop ; nop ; xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x000002000059da0c : and byte ptr [rdi - 0x7cb70055], ch ; ret
0x000002000036e904 : and byte ptr [rdi - 0x9be000f], dh ; ret
0x000002000023f0cd : and byte ptr [rdi], al ; ret
0x000002000042517c : and byte ptr [rdi], ch ; push qword ptr [rbp + 1] ; ret
0x00000200004996b1 : and byte ptr [rdi], cl ; mov edx, 0x430f1fe2 ; ret 0x4489
0x0000020000708405 : and byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000020000055951 : and byte ptr [rdi], cl ; test byte ptr [rax - 0x9fffffe], al ; ret
0x0000020000400db6 : and byte ptr [rdi], cl ; test byte ptr [rbx - 0x7cffdf9b], dl ; jmp qword ptr [rdx]
0x00000200004e6caa : and byte ptr [rdi], cl ; test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000ea064 : and byte ptr [rdi], cl ; test dword ptr [rdx - 0x9fffffc], edx ; ret
0x00000200001280e5 : and byte ptr [rdi], cl ; test eax, edx ; int 0xfb
0x0000020000444946 : and byte ptr [rdi], cl ; test ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x0000020000153b81 : and byte ptr [rdi], cl ; test edx, edx ; and ecx, dword ptr [rdx] ; add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000446c21 : and byte ptr [rdi], cl ; test esi, ebx ; or eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200001a3693 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000548a58 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200005e5263 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200001a539a : and byte ptr [rdi], cl ; xchg eax, edx ; ret 0x3345
0x00000200001a536c : and byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8b49
0x000002000016203f : and byte ptr [rdi], cl ; xor byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000161fea : and byte ptr [rdi], cl ; xor byte ptr [rcx - 0x75], al ; rol dword ptr [rcx - 0x75], cl ; ret
0x000002000035fdce : and byte ptr [rdi], cl ; xor byte ptr [rcx - 1], al ; ret
0x00000200005d5b15 : and byte ptr [rdx + 2], bh ; call 0x20000441dd8
0x0000020000443800 : and byte ptr [rdx + r10], r14b ; out dx, al ; out dx, al ; call 0x20000072e49
0x000002000006b533 : and byte ptr [rdx + rbx - 0xa], dh ; ret
0x0000020000443801 : and byte ptr [rdx + rdx], dh ; out dx, al ; out dx, al ; call 0x20000072e48
0x000002000019e495 : and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x00000200001639fc : and byte ptr [rdx - 0x75], al ; push rsp ; xchg eax, ecx ; and byte ptr [rbx], bh ; ret 0xb677
0x000002000003ff47 : and byte ptr [rdx], al ; add byte ptr [rax], al ; jmp 0x2000003ff14
0x000002000001b9a0 : and byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000002000066a508 : and byte ptr [rdx], bh ; ret 0x4cff
0x000002000064bd96 : and byte ptr [rdx], bl ; ret
0x0000020000112029 : and byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006d59e7 : and byte ptr [rip + 0x33480000], dl ; ret 0xd233
0x000002000014acfc : and byte ptr [rip - 0x74b2000c], ch ; ret
0x00000200001b3af9 : and byte ptr [rsi + 0x44], 0x89 ; sbb dword ptr [rcx - 0x75], eax ; ret 0x90c3
0x0000020000030471 : and byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200006cbb2f : and byte ptr [rsi + rcx - 1], dh ; ret
0x00000200000c1a80 : and byte ptr [rsi - 0xd], bl ; ret
0x000002000042149c : and byte ptr [rsi], ah ; add dh, dh ; ret
0x000002000008c589 : and byte ptr [rsi], cl ; call qword ptr [rdx]
0x00000200003656e2 : and byte ptr gs:[rbx + rcx*4 + 0x6d], al ; sbb byte ptr [rbp + 0x3b], al ; ret
0x000002000059cbf6 : and byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200000917ca : and ch, 0xe4 ; ret 0x394e
0x00000200005f918a : and ch, byte ptr [rsi - 0x166f005e] ; xlatb ; ret
0x000002000012b3b9 : and cl, byte ptr [rax + 3] ; ret 0x8b41
0x0000020000009ea8 : and cl, byte ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000597ce2 : and cl, byte ptr [rax - 0x73] ; push rbp ; out dx, eax ; call 0x20000593f7f
0x00000200000ebd49 : and cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000011437a : and cl, byte ptr [rax - 0x75] ; ret
0x000002000043bbbb : and cl, byte ptr [rax - 0x75] ; sbb r8b, bpl ; jnp 0x2000043bc3d ; ret
0x00000200006bde39 : and cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x000002000023b464 : and cl, byte ptr [rax] ; add al, 0 ; or eax, dword ptr [rsi] ; ret
0x00000200006bdc2e : and cl, byte ptr [rbx + 0x3480843] ; ret
0x00000200001f6191 : and cl, byte ptr [rbx + 0x4c8b48c5] ; ret
0x00000200002404bd : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x14063206], cl ; ret 0xf00d
0x000002000021e319 : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22061306], cl ; ret 0xf01b
0x0000020000220591 : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22061606], cl ; ret 0xf01b
0x000002000024bf71 : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22165a06], cl ; ret 0xf01e
0x0000020000205dcd : and cl, byte ptr [rbx] ; add byte ptr [rip + 0x22265f06], cl ; ret 0xf01b
0x0000020000129ffe : and cl, byte ptr [rcx + 3] ; ret 0x2b45
0x000002000006aa64 : and cl, byte ptr [rcx - 0x7d] ; ret 0xb908
0x000002000015471c : and cl, byte ptr [rcx - 1] ; ret 0x1ba
0x000002000006195f : and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x000002000024613d : and cl, byte ptr [rcx] ; add byte ptr [rdx], ah ; ret 0xf01b
0x0000020000400dbf : and cl, byte ptr [rdi] ; test byte ptr [rdx - 0x7cffdf9b], cl ; jmp qword ptr [rcx]
0x0000020000008e36 : and cl, ch ; ret 0x64a
0x0000020000033f9c : and cl, ch ; ret 0xfffe
0x000002000003b4a1 : and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x00000200003dc990 : and dh, bh ; ret
0x00000200001c3ed3 : and dh, byte ptr [rbx] ; rol byte ptr [rdi + rcx - 0x49], cl ; ret 0x4166
0x0000020000582c29 : and dh, byte ptr [rdx - 0x3b7cb701] ; push rax ; pop rbx ; ret
0x000002000004ad44 : and dh, dh ; ret
0x00000200001dcde5 : and dh, dh ; ret 0x7402
0x0000020000574b4b : and dh, dh ; ret 0x7403
0x0000020000574bf7 : and dh, dh ; ret 0x7407
0x000002000016aa7d : and dh, dh ; ret 0x750f
0x000002000014a2cb : and dh, dh ; ret 0xf01
0x00000200000c4743 : and dh, dh ; ret 0xf02
0x00000200001f6e2c : and dh, dh ; ret 0xf03
0x0000020000006f62 : and dh, dh ; ret 0xf0f
0x00000200005e003c : and dl, ah ; add dword ptr [rax], eax ; add al, ch ; cli ; ret 0xffa9
0x000002000064c9c9 : and dl, al ; neg dl ; sbb ecx, ecx ; and eax, ecx ; ret
0x00000200001f3e41 : and dl, byte ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x000002000009a2aa : and dl, byte ptr [rbx - 6] ; sahf ; ret
0x00000200004b9038 : and dl, cl ; mov al, dl ; ret
0x000002000019a55a : and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000015038c : and dword ptr [r10], eax ; ret
0x0000020000169a9f : and dword ptr [r8 - 0x75], r9d ; ret
0x00000200006bfd45 : and dword ptr [r8 - 0x7d], ecx ; ret
0x000002000015b200 : and dword ptr [r8], 0 ; ret
0x0000020000547440 : and dword ptr [r9], 0 ; add rsp, 0x18 ; ret
0x0000020000407c7d : and dword ptr [r9], 0 ; ret
0x000002000056fdce : and dword ptr [r9], eax ; ret
0x000002000064afe9 : and dword ptr [rax + 0x10], 0 ; mov qword ptr [rax + 8], rcx ; ret
0x000002000008f9a8 : and dword ptr [rax + 0x746b68], esi ; ret 0xa8b3
0x0000020000091be1 : and dword ptr [rax + 0x79], ebp ; ret
0x00000200006c67b0 : and dword ptr [rax + 0xc], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000657e58 : and dword ptr [rax + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cb358 : and dword ptr [rax + rax], 0xffffffb8 ; or eax, 0x5bc00000 ; ret
0x0000020000030e64 : and dword ptr [rax + rax], esp ; ret
0x00000200001530ef : and dword ptr [rax + rdx*8 + 8], eax ; ret
0x0000020000021e67 : and dword ptr [rax - 0x73], ecx ; add eax, 0xdc151 ; ret
0x00000200000bad5a : and dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000169aa0 : and dword ptr [rax - 0x75], ecx ; ret
0x00000200006bfd46 : and dword ptr [rax - 0x7d], ecx ; ret
0x00000200004a50a3 : and dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x0000020000105a49 : and dword ptr [rax], 0 ; ret
0x000002000005e525 : and dword ptr [rax], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e6b70 : and dword ptr [rax], eax ; add byte ptr [rax - 0x75], al ; ret
0x00000200002644cc : and dword ptr [rax], eax ; add byte ptr [rax], al ; sub al, al ; add byte ptr [rax], r12b ; ret 0x4e
0x000002000013fa07 : and dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000013f9e3 : and dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000013f9f2 : and dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x0000020000547442 : and dword ptr [rax], eax ; add rsp, 0x18 ; ret
0x0000020000174add : and dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ade68 : and dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000151f42 : and dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200002237e6 : and dword ptr [rax], eax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x14
0x0000020000217b0e : and dword ptr [rax], eax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret 0x13
0x00000200006d12cc : and dword ptr [rax], eax ; and qword ptr [rcx + 0x10], 0 ; ret
0x0000020000640484 : and dword ptr [rax], eax ; and qword ptr [rcx + 8], 0 ; ret
0x00000200006f40c0 : and dword ptr [rax], eax ; call 0x200000771c9
0x000002000013cb91 : and dword ptr [rax], eax ; call qword ptr [rcx]
0x0000020000647413 : and dword ptr [rax], eax ; je 0x2000064742a ; mov rcx, rdi ; call 0x2000017363d
0x000002000063af9b : and dword ptr [rax], eax ; mov eax, 0xc00000bb ; ret
0x00000200004183ee : and dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001184b5 : and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000139d11 : and dword ptr [rax], eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200003e3f7c : and dword ptr [rax], eax ; mov rcx, r15 ; call 0x20000012a68
0x000002000018fdb3 : and dword ptr [rax], eax ; mov rsi, rcx ; jmp 0x2000018fe23
0x000002000006795e : and dword ptr [rax], eax ; ret
0x00000200001413d2 : and dword ptr [rax], eax ; sete al ; ret
0x00000200004f452d : and dword ptr [rax], edx ; jmp 0x200004f44f6
0x0000020000172aaf : and dword ptr [rax], edx ; mov eax, 0xc0000001 ; ret
0x0000020000172aae : and dword ptr [rax], r10d ; mov eax, 0xc0000001 ; ret
0x0000020000061542 : and dword ptr [rbp + 0x61], 0x19 ; add byte ptr [rbp - 0x75], al ; ret 0x8a40
0x0000020000518eab : and dword ptr [rbp + 0x77], ebx ; call 0x200000bf277
0x000002000001346b : and dword ptr [rbp - 0x49f0ffe5], ecx ; ret
0x00000200001f9f27 : and dword ptr [rbp - 0x75], eax ; ret 0x8b49
0x000002000017385a : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064e7ad : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000011bc99 : and dword ptr [rbx + 0x28], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000136d6d : and dword ptr [rbx + 0x30], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c029c : and dword ptr [rbx + 0x50], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005614b3 : and dword ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003db715 : and dword ptr [rbx + 8], 0 ; jmp 0x200003db6e3
0x00000200000476fa : and dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000637aa1 : and dword ptr [rbx + rcx - 1], esi ; ret
0x00000200001fa9b8 : and dword ptr [rbx + rdx + 0xf], esi ; mov bh, 0x41 ; add bh, bh ; ret 0x348
0x00000200001f0b83 : and dword ptr [rbx + rsi*8 - 0x17347401], esp ; ret 0xf71c
0x0000020000468601 : and dword ptr [rbx - 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ca5a7 : and dword ptr [rbx - 0x6af0beff], esi ; ret
0x00000200000e9b9c : and dword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000144b83 : and dword ptr [rbx], ebp ; and dword ptr [rax], eax ; ret
0x0000020000233b45 : and dword ptr [rbx], ecx ; add byte ptr [rip + 0x2106e406], cl ; ret 0xf01a
0x00000200002367e1 : and dword ptr [rbx], ecx ; add byte ptr [rip + 0x21168306], cl ; ret 0xf01a
0x00000200006b568b : and dword ptr [rbx], esi ; ret
0x000002000000cc02 : and dword ptr [rbx], esi ; test byte ptr [rbx - 0x38dcbef9], 0x3b ; ret
0x00000200006d12cf : and dword ptr [rcx + 0x10], 0 ; ret
0x0000020000150dc9 : and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000047d26a : and dword ptr [rcx + 0x14], 0 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000054e185 : and dword ptr [rcx + 0x1a], eax ; ret
0x000002000038a6f2 : and dword ptr [rcx + 0x20], 0 ; ret
0x0000020000105b3b : and dword ptr [rcx + 0x20], 0xff ; ret
0x000002000038a1d2 : and dword ptr [rcx + 0x30], 0 ; ret
0x00000200004c717a : and dword ptr [rcx + 0x3a8], eax ; ret
0x00000200004c7122 : and dword ptr [rcx + 0x3e0], edx ; xor eax, eax ; ret
0x000002000014432e : and dword ptr [rcx + 0x42c], 0xffffffef ; ret
0x0000020000141dcc : and dword ptr [rcx + 0x4c], 0 ; or dword ptr [rcx + 0x48], 0xffffffff ; ret
0x0000020000105659 : and dword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x000002000014b785 : and dword ptr [rcx + 0x68], 0 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000016a578 : and dword ptr [rcx + 0x70], 0 ; ret
0x00000200004a51c0 : and dword ptr [rcx + 0xc], 0 ; add dword ptr [rcx + 4], eax ; ret
0x00000200000b8868 : and dword ptr [rcx + 4], 0 ; ret
0x00000200004c84d1 : and dword ptr [rcx + 8], 0 ; ret
0x0000020000174e54 : and dword ptr [rcx + rax*8 + 8], eax ; ret
0x00000200001c5301 : and dword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200005438bc : and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x000002000003b7e0 : and dword ptr [rcx - 0x75], ecx ; ret
0x0000020000613e01 : and dword ptr [rcx - 0x78], eax ; or cl, byte ptr [rcx - 1] ; ret 0xc883
0x0000020000155ae3 : and dword ptr [rcx - 1], ecx ; ret 0xf45
0x00000200003c0f49 : and dword ptr [rcx - 7], 0xffffffff ; call rax
0x0000020000547441 : and dword ptr [rcx], 0 ; add rsp, 0x18 ; ret
0x0000020000174adc : and dword ptr [rcx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051bd1f : and dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200006d12cb : and dword ptr [rcx], 0 ; and qword ptr [rcx + 0x10], 0 ; ret
0x0000020000640483 : and dword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x000002000063af9a : and dword ptr [rcx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200001184b4 : and dword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000006795d : and dword ptr [rcx], 0 ; ret
0x00000200003f8ab4 : and dword ptr [rcx], 0xfffffff ; ret
0x00000200004f4527 : and dword ptr [rcx], eax ; jmp 0x200004f44f0
0x00000200004f4526 : and dword ptr [rcx], eax ; jmp 0x200004f44f1
0x00000200003f3e8b : and dword ptr [rcx], eax ; ret
0x0000020000381cab : and dword ptr [rcx], ebx ; iretd ; inc dword ptr [rbp - 0x607bf040] ; call qword ptr [rax]
0x000002000022e531 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; adc al, byte ptr [rsi] ; sysenter
0x0000020000256971 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x000002000025a045 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; and al, 6 ; sysenter
0x0000020000264d59 : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; or al, byte ptr [rsi] ; sysenter
0x000002000025a01d : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0dd : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f4d : and dword ptr [rcx], ecx ; add byte ptr [rsi + rax], al ; xor byte ptr [rsi], al ; sysenter
0x000002000036c288 : and dword ptr [rdi + 0xf000000], 0xffffffb7 ; ret
0x0000020000617afc : and dword ptr [rdi - 0x11], ecx ; inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200001dd93b : and dword ptr [rdi - 0x74b7001a], eax ; ret
0x00000200000936ad : and dword ptr [rdi], ecx ; add eax, 0x1ac10510 ; ret
0x00000200001fb02e : and dword ptr [rdi], ecx ; test byte ptr [rdx - 0x16000b30], bl ; ret
0x000002000051717b : and dword ptr [rdi], esp ; ret
0x000002000006c390 : and dword ptr [rdx + 0x18], 0 ; ret
0x000002000062eade : and dword ptr [rdx + 0x48c933ff], 0xffffffff ; ret
0x00000200001ab3a7 : and dword ptr [rdx + 8], 0 ; ret
0x0000020000507d96 : and dword ptr [rdx + 8], ecx ; ret
0x00000200001592b7 : and dword ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x00000200003b5b1f : and dword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x00000200004fcce8 : and dword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x000002000019aa6c : and dword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x000002000036b40a : and dword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200001592f4 : and dword ptr [rdx], 0 ; ret
0x0000020000567ba0 : and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x000002000019a55b : and dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000015038d : and dword ptr [rdx], eax ; ret
0x0000020000498c5b : and dword ptr [rdx], eax ; ret 0x41ff
0x0000020000403d8b : and dword ptr [rdx], eax ; ret 0xebff
0x0000020000193263 : and dword ptr [rip + 0x1052ae], 0 ; ret
0x0000020000496e8e : and dword ptr [rip + 0x1ec723], 0 ; xor eax, eax ; ret
0x00000200001620b9 : and dword ptr [rip + 0x1f4fb1], eax ; ret
0x00000200006430a7 : and dword ptr [rip + 0x27ffe], 0 ; ret
0x00000200001a23b3 : and dword ptr [rip + 0x41fffffd], 0xffffff8b ; ret 0xc148
0x00000200006c0fa6 : and dword ptr [rip - 0x3d8fa4], ecx ; ret
0x00000200006c7331 : and dword ptr [rip - 0x438778], 0 ; ret
0x000002000051bdcc : and dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000117135 : and dword ptr [rsi], eax ; add bl, ch ; ret
0x000002000066a3e3 : and dword ptr [rsi], ecx ; test eax, 0x58b48ff ; jp 0x2000066a430 ; ret 0x4cff
0x00000200005cbf8d : and dword ptr [rsp + 0x20], 0 ; xor r9d, r9d ; call r10
0x00000200000f1c5c : and eax, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000036d78 : and eax, 0x10001 ; ret
0x000002000042baf0 : and eax, 0x101 ; add rsp, 0x28 ; ret
0x000002000007b7e3 : and eax, 0x10241f6 ; je 0x2000007b801 ; call 0x20000177a7d
0x0000020000392ae9 : and eax, 0x10408b00 ; add rsp, 0x38 ; ret
0x0000020000176f03 : and eax, 0x128 ; ret
0x00000200001360fc : and eax, 0x15292e ; dec byte ptr [rax - 0x75] ; ret
0x0000020000144381 : and eax, 0x157 ; ret
0x00000200003c14a3 : and eax, 0x158d4800 ; push rsp ; sti ; ret
0x000002000054a3e4 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000019754c : and eax, 0x188 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000019755c : and eax, 0x188 ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000152924 : and eax, 0x188 ; ret
0x00000200006ccab1 : and eax, 0x1b0ffba ; add rsp, 0x28 ; ret
0x0000020000392abc : and eax, 0x1f ; ret
0x00000200000ca861 : and eax, 0x1ff ; add rax, rdx ; jmp 0x200000ca80c
0x000002000057a0ca : and eax, 0x1ffffff ; mov dword ptr [rdx + 0x10], eax ; ret
0x00000200001869b6 : and eax, 0x20 ; inc eax ; add rsp, 0x28 ; ret
0x00000200001db0fd : and eax, 0x2d85ee03 ; ret
0x000002000015f877 : and eax, 0x2e40 ; ret
0x00000200003cd783 : and eax, 0x2e44 ; ret
0x000002000038f8f3 : and eax, 0x2e48 ; ret
0x000002000008c59a : and eax, 0x3820125c ; call qword ptr [rdx]
0x0000020000417f12 : and eax, 0x3bc00002 ; ret
0x000002000003cc56 : and eax, 0x408d4100 ; jmp qword ptr [rbx]
0x000002000012ad64 : and eax, 0x41000c60 ; mov eax, eax ; ret
0x000002000003f97f : and eax, 0x4800317d ; mov edx, dword ptr [rdx + rax*8] ; jmp 0x2000003f993
0x000002000038a03b : and eax, 0x4801b000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003cc4af : and eax, 0x4801b200 ; mov ecx, ebx ; call 0x20000378759
0x00000200003c8242 : and eax, 0x48c00002 ; add esp, 0x20 ; pop rdi ; ret
0x000002000017f987 : and eax, 0x48ffea46 ; add esp, 0x20 ; pop rbx ; ret
0x000002000049f4b7 : and eax, 0x48fffcdd ; add esp, 0x38 ; ret
0x000002000064e7bb : and eax, 0x48ffffff ; add esp, 0x30 ; pop rbx ; ret
0x000002000000ec07 : and eax, 0x5504 ; ret
0x000002000015f86b : and eax, 0x5540 ; ret
0x000002000025199d : and eax, 0x60c000d ; ret 0x2546
0x00000200004dc157 : and eax, 0x73ffe73f ; or edi, edi ; ret
0x00000200001510ff : and eax, 0x74c00002 ; or byte ptr [rbx], bh ; ret 0x850f
0x00000200004e9005 : and eax, 0x79c0854d ; and bh, bh ; ret 0x8348
0x00000200001364da : and eax, 0x7fff ; ret
0x000002000013c8d1 : and eax, 0x80 ; ret
0x0000020000391cde : and eax, 0x80000005 ; pop r14 ; ret
0x00000200003db1ef : and eax, 0x80000005 ; ret
0x00000200003916f2 : and eax, 0x8348c7ff ; ret
0x000002000048fd24 : and eax, 0x8348c803 ; ret 0x4902
0x00000200005cb4d0 : and eax, 0x8348ffdd ; ret
0x00000200003d4dea : and eax, 0x8349fa03 ; ret 0x4902
0x0000020000429bed : and eax, 0x84000003 ; ret 0xb75
0x000002000013a1a7 : and eax, 0x85fff394 ; sal byte ptr [rbp - 0x34], 0xeb ; ret 0x7e8b
0x0000020000527c27 : and eax, 0x8a44ffb6 ; ret
0x0000020000371338 : and eax, 0x8b08e9c1 ; ret 0xe8c1
0x00000200006eda73 : and eax, 0x8b44ffb8 ; ret
0x0000020000149dc4 : and eax, 0x8b44ffed ; rol byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x00000200003a7a3d : and eax, 0x8b48ffd1 ; ret
0x000002000018a1cd : and eax, 0x8b4cfff0 ; ret 0x3345
0x00000200003b4d88 : and eax, 0x8bc00002 ; ret
0x00000200001e9dc9 : and eax, 0x8bccffe9 ; ret
0x000002000061ef17 : and eax, 0x8bffa53f ; ret
0x00000200005c98b7 : and eax, 0x8bffab38 ; ret
0x000002000051ddd7 : and eax, 0x8bffb5f5 ; ret
0x00000200003aacb7 : and eax, 0x8bffcd24 ; ret
0x0000020000191cc3 : and eax, 0x8bffed39 ; ret
0x000002000038f2e7 : and eax, 0x8bffedfd ; ret
0x0000020000066abe : and eax, 0x8bffffff ; ret
0x000002000008e68f : and eax, 0x9a617b32 ; push rbx ; ret
0x0000020000091ef1 : and eax, 0x9e0da434 ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200001f01bb : and eax, 0xa ; add eax, 0xa ; ret
0x000002000003fdec : and eax, 0xb60ffffc ; ret
0x00000200003c94e1 : and eax, 0xb70f4400 ; ret
0x00000200003c2a39 : and eax, 0xb70f4400 ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000002000008c626 : and eax, 0xbc20125c ; call qword ptr [rdx]
0x000002000005e6ee : and eax, 0xc0000001 ; ret
0x000002000038ec5c : and eax, 0xc0000004 ; ret
0x000002000056f165 : and eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200000521e1 : and eax, 0xc000000d ; ret
0x0000020000007200 : and eax, 0xc000000e ; add rsp, 0x28 ; ret
0x000002000004d3b0 : and eax, 0xc0000022 ; ret
0x0000020000162298 : and eax, 0xc0000023 ; ret
0x0000020000398ec7 : and eax, 0xc0000033 ; add rsp, 0x28 ; ret
0x00000200003dd7d8 : and eax, 0xc0000034 ; ret
0x000002000013977c : and eax, 0xc00000a4 ; add rsp, 0x48 ; ret
0x00000200003fc51c : and eax, 0xc00000bb ; ret
0x00000200004d6256 : and eax, 0xc00002b9 ; ret
0x00000200004a5933 : and eax, 0xc0190001 ; add rsp, 0x28 ; ret
0x00000200000e9698 : and eax, 0xc148001e ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000056ccc4 : and eax, 0xc3c00002 ; mov qword ptr [rcx], r9 ; ret
0x000002000042312c : and eax, 0xc468b48 ; mov qword ptr [r14], rax ; jmp 0x20000423102
0x000002000038a36d : and eax, 0xd8b4800 ; ret
0x0000020000395438 : and eax, 0xdb800 ; add al, al ; jmp 0x2000039540c
0x000002000008c586 : and eax, 0xe20125c ; call qword ptr [rdx]
0x00000200000c1187 : and eax, 0xe9000202 ; ret 0xfff9
0x000002000056c400 : and eax, 0xe9c00002 ; ret 0
0x000002000002c157 : and eax, 0xf6003249 ; ret
0x00000200006e942d : and eax, 0xf641ffbb ; ret
0x0000020000592987 : and eax, 0xf6ffd04a ; ret
0x000002000062adda : and eax, 0xf6ffddfb ; ret
0x0000020000577b2b : and eax, 0xff000000 ; ret
0x00000200000c68d0 : and eax, 0xff001f0f ; ret
0x0000020000583769 : and eax, 0xffcf3dcd ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x000002000004fa75 : and eax, 0xfffff ; ret
0x00000200001b36f7 : and eax, 0xfffff000 ; ret
0x00000200006c0831 : and eax, 0xfffffe00 ; add rsp, 0x18 ; ret
0x0000020000041f3e : and eax, 0xffffffbd ; jmp 0x20000040e00
0x00000200000e9869 : and eax, 0xffffffe7 ; mov eax, r8d ; ret
0x0000020000665900 : and eax, 0xfffffff0 ; add rax, 0x20 ; ret
0x000002000015b578 : and eax, 0xfffffff0 ; ret
0x00000200000e9849 : and eax, 0xfffffff7 ; mov eax, r8d ; ret
0x00000200000beeaa : and eax, 0xfffffff9 ; ret
0x0000020000466d44 : and eax, 0xfffffffc ; add eax, edx ; ret
0x000002000007c65c : and eax, 0xfffffffc ; or eax, r8d ; wrmsr ; ret 0
0x00000200001b6e83 : and eax, 0xfffffffc ; ret
0x000002000007c79d : and eax, 0xfffffffc ; wrmsr ; ret 0
0x00000200001a6fa6 : and eax, 0xfffffffe ; inc eax ; ret
0x00000200001090d8 : and eax, 1 ; add eax, dword ptr [rdx + 0x260] ; ret
0x0000020000637235 : and eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b5065 : and eax, 1 ; add rsp, 0x38 ; ret
0x000002000054b2db : and eax, 1 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x000002000041de08 : and eax, 1 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x0000020000187b34 : and eax, 1 ; or eax, edx ; ret
0x00000200000a86c1 : and eax, 1 ; pop rcx ; ret
0x00000200000549e7 : and eax, 1 ; ret
0x000002000041dd46 : and eax, 1 ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000014ac05 : and eax, 2 ; dec eax ; ret
0x000002000013c56a : and eax, 2 ; mov dword ptr [rip + 0x144d5d], eax ; ret
0x000002000001ab3a : and eax, 2 ; ret
0x0000020000441d72 : and eax, 3 ; jne 0x20000441d85 ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x00000200000c20cf : and eax, 3 ; or rax, r8 ; mov qword ptr [rdx], rax ; ret
0x000002000010dad5 : and eax, 4 ; ret
0x000002000011ae14 : and eax, 7 ; mov eax, r8d ; ret
0x000002000013c8f9 : and eax, 8 ; ret
0x000002000015b1fc : and eax, dword ptr [rax] ; add al, al ; and dword ptr [r8], 0 ; ret
0x0000020000162299 : and eax, dword ptr [rax] ; add al, al ; ret
0x0000020000523502 : and eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200006675a9 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000154a6d : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000e9b9d : and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dce71 : and eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000230e12 : and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ret 0x3f
0x000002000025e642 : and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x000002000026187a : and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x42
0x000002000026393a : and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x47
0x000002000025cc76 : and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x50
0x000002000005d1c0 : and eax, dword ptr [rax] ; jne 0x2000005d1d3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000115105 : and eax, dword ptr [rax] ; jne 0x20000149ff4 ; ret
0x0000020000116a60 : and eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011b5cc : and eax, dword ptr [rax] ; ret
0x000002000019a59a : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000199dfb : and eax, dword ptr [rbp + 0x3b] ; ret 0x1e73
0x000002000000bd78 : and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200001eec4d : and eax, dword ptr [rcx - 1] ; ret 0x8944
0x00000200000905bd : and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000006fa7e : and eax, dword ptr [rip + 0x2e75f0] ; ret
0x00000200000ca6d9 : and eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x0000020000480d89 : and eax, eax ; or eax, 5 ; ret
0x00000200000ead73 : and eax, eax ; shr eax, 0xe ; ret
0x0000020000664055 : and eax, ebp ; scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; jo 0x20000664027 ; ret 0x41ff
0x0000020000027073 : and eax, ecx ; ret
0x000002000012dc33 : and eax, ecx ; test r8, r8 ; jne 0x2000012dc4c ; ret
0x0000020000090f16 : and eax, edi ; ret 0xf958
0x0000020000609e46 : and eax, edx ; jmp 0x20000609eb5
0x00000200001869eb : and eax, edx ; ret
0x0000020000120f6f : and eax, esi ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000480d88 : and eax, r8d ; or eax, 5 ; ret
0x00000200000ead72 : and eax, r8d ; shr eax, 0xe ; ret
0x000002000038a36a : and ebp, 0x37 ; and eax, 0xd8b4800 ; ret
0x0000020000082988 : and ebp, dword ptr [rsi + 0x1a7a] ; add byte ptr [rax], al ; ret
0x00000200006407e9 : and ebp, eax ; ret 0x48ff
0x00000200001d32dc : and ebp, ebp ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x0000020000133fd9 : and ebp, ebx ; int 0xe8
0x00000200003f5489 : and ebp, ebx ; ret 0x48ff
0x00000200001e81be : and ebx, 0xffffffc1 ; in eax, dx ; push qword ptr [rbx] ; leave ; call 0x200001444b5
0x00000200006157c2 : and ebx, dword ptr [rbp - 0x74b70018] ; ret
0x00000200003675e9 : and ebx, dword ptr [rsi] ; push qword ptr [rbx] ; shr al, cl ; pop rsp ; ret
0x0000020000616385 : and ebx, edi ; push rsi ; ret
0x00000200000fe8eb : and ecx, 0x3f ; mov eax, ecx ; ret
0x0000020000174b50 : and ecx, 0x3f ; shl rax, cl ; or qword ptr [r8], rax ; ret
0x0000020000472d54 : and ecx, 0xfffffffc ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000579f2a : and ecx, 0xfffffffc ; mov rax, rcx ; ret
0x000002000064c04d : and ecx, 1 ; mov eax, ecx ; ret
0x000002000041dd22 : and ecx, 1 ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x0000020000442762 : and ecx, dword ptr [rax - 0x75] ; ret
0x000002000035ebac : and ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000002b6c8 : and ecx, dword ptr [rax - 0x7d] ; ret
0x000002000036f786 : and ecx, dword ptr [rbx + rcx*4 + 5] ; ret 0x31f8
0x00000200000044a9 : and ecx, dword ptr [rcx - 0x75] ; ret 0xb948
0x00000200000e80b6 : and ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000a66e9 : and ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000153b85 : and ecx, dword ptr [rdx] ; add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000006c2d4 : and ecx, eax ; cmp ecx, dword ptr [rax + 0xc] ; jb 0x2000006c2e7 ; mov eax, ecx ; ret
0x0000020000657f9d : and ecx, eax ; cmp edx, ecx ; je 0x20000657fad ; xor eax, eax ; ret
0x00000200004cc8f2 : and ecx, eax ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x000002000003b4a3 : and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x000002000003b4a2 : and ecx, r9d ; jmp qword ptr [r10 + rax*8]
0x000002000049b769 : and edi, dword ptr [rdx] ; clc ; dec dword ptr [rax - 0x75] ; ret
0x000002000042f5ea : and edi, dword ptr [rip + 0x45474150] ; je 0x2000042f5fe ; mov eax, edx ; ret
0x0000020000443f1b : and edi, ebp ; ret 0x48ff
0x000002000065ba3e : and edi, edi ; dec dword ptr [rax - 0x75] ; ret
0x000002000018bb3f : and edi, edi ; ret
0x00000200000c2036 : and edi, esp ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b0004 : and edx, 0xfffffffe ; lea r9, qword ptr [rcx + rax*2] ; mov r8, rdx ; jmp 0x200001b0032
0x00000200003b2540 : and edx, 1 ; call rdi
0x0000020000066f48 : and edx, 8 ; je 0x20000066f3b ; mov al, 1 ; ret
0x0000020000015ce9 : and edx, dword ptr [rbx - 0x166fffdb] ; ret 0xc57
0x00000200000ca85f : and edx, eax ; and eax, 0x1ff ; add rax, rdx ; jmp 0x200000ca80e
0x00000200004e8c5d : and edx, eax ; mov eax, edx ; ret
0x0000020000126581 : and edx, ebp ; sub rdx, rsi ; call r12
0x00000200004072d9 : and edx, esi ; ret
0x0000020000420311 : and esi, dword ptr [rax + 0x20] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006d6aa7 : and esi, dword ptr [rbx] ; leave ; call rdi
0x0000020000605c82 : and esi, ecx ; push rsi ; ret
0x0000020000369ad3 : and esi, esi ; dec dword ptr [rax - 0x75] ; sbb cl, ch ; ret 0xfffe
0x0000020000012398 : and esi, esi ; ret
0x0000020000362f71 : and esi, esi ; ret 0x7504
0x0000020000573a8e : and esi, esi ; ret 0x7508
0x00000200001e022a : and esp, 0x1e ; lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001b8976 : and esp, 0xfffffffe ; jmp 0x200001b8986
0x000002000048f4d2 : and esp, 0xffffffff ; call 0x200000b9b06
0x0000020000417c41 : and esp, dword ptr [rbx] ; ret 0xfc3
0x00000200004680bf : and esp, eax ; jmp 0x20000468089
0x000002000049557b : and esp, esp ; push qword ptr [rdx + 0x42fbe801] ; ret 0x4cff
0x00000200001530ee : and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000105a48 : and qword ptr [r8], 0 ; ret
0x000002000015290d : and qword ptr [r8], rax ; ret
0x000002000051bd1e : and qword ptr [r9], 0 ; add rsp, 0x28 ; ret
0x000002000064afe8 : and qword ptr [rax + 0x10], 0 ; mov qword ptr [rax + 8], rcx ; ret
0x00000200004f452c : and qword ptr [rax], rdx ; jmp 0x200004f44f7
0x0000020000518eaa : and qword ptr [rbp + 0x77], rbx ; call 0x200000bf278
0x00000200003db714 : and qword ptr [rbx + 8], 0 ; jmp 0x200003db6e4
0x00000200000476f9 : and qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000106f79 : and qword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d12ce : and qword ptr [rcx + 0x10], 0 ; ret
0x000002000038a6f1 : and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000105b3a : and qword ptr [rcx + 0x20], 0xff ; ret
0x000002000038a1d1 : and qword ptr [rcx + 0x30], 0 ; ret
0x00000200004c7121 : and qword ptr [rcx + 0x3e0], rdx ; xor eax, eax ; ret
0x0000020000105658 : and qword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x000002000014b784 : and qword ptr [rcx + 0x68], 0 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000016a577 : and qword ptr [rcx + 0x70], 0 ; ret
0x00000200004c84d0 : and qword ptr [rcx + 8], 0 ; ret
0x0000020000174e53 : and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200001c5300 : and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x0000020000174adb : and qword ptr [rcx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000640482 : and qword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x00000200001184b3 : and qword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000006795c : and qword ptr [rcx], 0 ; ret
0x000002000006c38f : and qword ptr [rdx + 0x18], 0 ; ret
0x00000200001ab3a6 : and qword ptr [rdx + 8], 0 ; ret
0x00000200001592b6 : and qword ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x00000200003b5b1e : and qword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x00000200004fcce7 : and qword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x000002000019aa6b : and qword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x000002000036b409 : and qword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200001592f3 : and qword ptr [rdx], 0 ; ret
0x00000200006c0fa5 : and qword ptr [rip - 0x3d8fa4], rcx ; ret
0x00000200006c7330 : and qword ptr [rip - 0x438778], 0 ; ret
0x00000200001b8975 : and r12, 0xfffffffffffffffe ; jmp 0x200001b8987
0x00000200004680be : and r12d, eax ; jmp 0x2000046808a
0x00000200004d4f7c : and r14b, r14b ; ret
0x00000200000c4742 : and r14b, r14b ; ret 0xf02
0x000002000012dc32 : and r8, rcx ; test r8, r8 ; jne 0x2000012dc4d ; ret
0x00000200004909f5 : and r8b, bpl ; adc al, 0x46 ; ret 0x45ff
0x0000020000396b8d : and r8b, bpl ; lodsb al, byte ptr [rsi] ; ret 0xffcd
0x00000200005b8078 : and r8b, bpl ; ret
0x00000200004853b7 : and r8b, bpl ; ret 0xc816
0x0000020000523077 : and r8b, r13b ; ret 0xb5a0
0x00000200000e9868 : and r8d, 0xffffffe7 ; mov eax, r8d ; ret
0x00000200000e9848 : and r8d, 0xfffffff7 ; mov eax, r8d ; ret
0x000002000011ae13 : and r8d, 7 ; mov eax, r8d ; ret
0x0000020000609e45 : and r8d, edx ; jmp 0x20000609eb6
0x0000020000144380 : and rax, 0x157 ; ret
0x000002000013c8d0 : and rax, 0x80 ; ret
0x00000200001b36f6 : and rax, 0xfffff000 ; ret
0x00000200006658ff : and rax, 0xfffffffffffffff0 ; add rax, 0x20 ; ret
0x000002000015b577 : and rax, 0xfffffffffffffff0 ; ret
0x00000200000beea9 : and rax, 0xfffffffffffffff9 ; ret
0x0000020000154564 : and rax, 1 ; ret
0x0000020000154588 : and rax, 2 ; ret
0x000002000010dad4 : and rax, 4 ; ret
0x000002000013c8f8 : and rax, 8 ; ret
0x000002000025e641 : and rax, qword ptr [r8] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x00000200000ca6d8 : and rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x0000020000154677 : and rax, rcx ; ret
0x00000200001869ea : and rax, rdx ; ret
0x0000020000579f29 : and rcx, 0xfffffffffffffffc ; mov rax, rcx ; ret
0x00000200004cc8f1 : and rcx, r8 ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x0000020000126580 : and rdx, r13 ; sub rdx, rsi ; call r12
0x00000200001c3ed2 : and sil, byte ptr [r11] ; rol byte ptr [rdi + rcx - 0x49], cl ; ret 0x4166
0x000002000054e184 : and word ptr [rcx + 0x1a], ax ; ret
0x0000020000507d95 : and word ptr [rdx + 8], cx ; ret
0x00000200002481ac : andps xmm1, xmmword ptr [rax + rax] ; sysenter
0x00000200001e4f3a : bsr eax, eax ; jne 0x200001e4f4b ; mov r8d, edx ; jmp 0x200001e4f54
0x00000200001e4f39 : bsr rax, r8 ; jne 0x200001e4f4c ; mov r8d, edx ; jmp 0x200001e4f55
0x0000020000608b96 : bswap eax ; call qword ptr [rax]
0x0000020000608b5a : bswap eax ; inc dword ptr [rbx - 0x37f02bf3] ; jmp qword ptr [rax]
0x0000020000608b60 : bswap eax ; jmp qword ptr [rax]
0x00000200006e7cc2 : bswap eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000116b54 : bt dword ptr [rax], edx ; setb al ; ret
0x000002000063f03b : bt eax, 0x11 ; jb 0x2000063f04c ; mov al, 1 ; ret
0x000002000049bb8c : bt eax, 0xd ; cmovb edx, ecx ; mov al, dl ; ret
0x0000020000494ee6 : bt eax, 9 ; jae 0x20000494ef7 ; mov al, 1 ; ret
0x0000020000144357 : bt eax, ecx ; setb al ; ret
0x0000020000111ac2 : bt ecx, 0x11 ; jb 0x20000111ad3 ; xor eax, eax ; ret
0x000002000003a1bf : bt ecx, 0x1b ; jb 0x2000003a1d3 ; ret
0x00000200003c95e9 : bt ecx, 0x1c ; jb 0x200003c9604 ; ret
0x00000200003d6bc2 : bt edx, 0x10 ; jb 0x200003d6be0 ; ret
0x0000020000054a1b : btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000060c7c : btr dword ptr [rax], edx ; ret
0x000002000019a5b0 : btr qword ptr [rax], rdx ; ret
0x000002000064bd6f : bts dword ptr [r8 + 0x20], 0x18 ; ret
0x000002000064bd76 : bts dword ptr [r8 + 0x20], 0x19 ; ret
0x000002000064bd92 : bts dword ptr [r8 + 0x20], 0x1a ; ret
0x000002000064bd7d : bts dword ptr [r8 + 0x20], 0x1b ; ret
0x000002000064bd8b : bts dword ptr [r8 + 0x20], 0x1c ; ret
0x000002000064bd84 : bts dword ptr [r8 + 0x20], 0x1d ; ret
0x000002000064bd70 : bts dword ptr [rax + 0x20], 0x18 ; ret
0x000002000064bd77 : bts dword ptr [rax + 0x20], 0x19 ; ret
0x000002000064bd93 : bts dword ptr [rax + 0x20], 0x1a ; ret
0x000002000064bd7e : bts dword ptr [rax + 0x20], 0x1b ; ret
0x000002000064bd8c : bts dword ptr [rax + 0x20], 0x1c ; ret
0x000002000064bd85 : bts dword ptr [rax + 0x20], 0x1d ; ret
0x00000200001ced27 : bts dword ptr [rax + 0x40], 9 ; ret
0x00000200000eaab1 : bts dword ptr [rax], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000060aac : bts dword ptr [rax], edx ; ret
0x000002000006bc37 : bts dword ptr [rcx], 0 ; jb 0x2000006bc48 ; mov al, 1 ; ret
0x00000200000a818e : bts dword ptr [rcx], 0 ; jb 0x200000a819b ; ret
0x000002000011d48a : bts dword ptr [rcx], 0 ; jb 0x2000011d497 ; ret
0x000002000039bd0e : bts dword ptr [rcx], 0 ; jb 0x2000039bd1b ; ret
0x00000200004aeefa : bts dword ptr [rcx], 0 ; jb 0x200004aef07 ; ret
0x000002000005b30e : bts dword ptr [rcx], 0xd ; ret
0x00000200003fee28 : bts dword ptr [rdx], 0x18 ; ret
0x00000200003a994c : bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x000002000014ca68 : bts dword ptr [rdx], ecx ; ret
0x0000020000652c02 : bts dword ptr [rip - 0x2fbb52], 0x1c ; ret
0x00000200001450a9 : bts eax, 0x1c ; add rsp, 0x60 ; pop rbx ; ret
0x000002000042c005 : bts eax, 0xa ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200003e6e19 : bts eax, 0xc ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200003d6bd9 : bts eax, 0xc ; ret
0x000002000012123d : bts eax, 0xd ; jmp 0x2000012120b
0x00000200000eaab0 : bts qword ptr [rax], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006bc36 : bts qword ptr [rcx], 0 ; jb 0x2000006bc49 ; mov al, 1 ; ret
0x00000200000a818d : bts qword ptr [rcx], 0 ; jb 0x200000a819c ; ret
0x000002000011d489 : bts qword ptr [rcx], 0 ; jb 0x2000011d498 ; ret
0x000002000039bd0d : bts qword ptr [rcx], 0 ; jb 0x2000039bd1c ; ret
0x00000200004aeef9 : bts qword ptr [rcx], 0 ; jb 0x200004aef08 ; ret
0x000002000005b30d : bts qword ptr [rcx], 0xd ; ret
0x000002000014ca67 : bts qword ptr [rdx], rcx ; ret
0x000002000012123c : bts rax, 0xd ; jmp 0x2000012120c
0x00000200003ba65f : call 0x1ff824b68a1
0x00000200003845c4 : call 0x1ff8381459f
0x00000200004079f6 : call 0x1ff83887aed
0x00000200004cdddc : call 0x1ff8395a4e9
0x00000200005d32a4 : call 0x1ff83a5c3b0
0x00000200005d32e8 : call 0x1ff83a5c3f4
0x00000200005d330e : call 0x1ff83a5c41a
0x0000020000392ab8 : call 0x1ff83fb5dc9
0x000002000060be5b : call 0x1ff8422f168
0x00000200004cc418 : call 0x1ff885c84a8
0x00000200004c25ee : call 0x1ff8b9625ed
0x000002000017721b : call 0x1ff8bd9fd67
0x000002000018bebf : call 0x1ff8bdae1d3
0x000002000066225c : call 0x1ff8c65e4fa
0x0000020000376124 : call 0x1ff8d846100
0x00000200005dfe24 : call 0x1ff915dc720
0x00000200000138d6 : call 0x1ffa8c36c16
0x00000200001afd7f : call 0x1ffa8dd20cb
0x000002000015682e : call 0x1ffb724a940
0x00000200006145ad : call 0x1ffb77086c3
0x000002000006d762 : call 0x1ffbac8da76
0x00000200001a6637 : call 0x1ffc16328c9
0x00000200000413ff : call 0x1ffc1c71f0e
0x00000200005f4c4f : call 0x1ffc1ea955c
0x000002000003de25 : call 0x1ffc2072632
0x000002000003de59 : call 0x1ffc2072666
0x000002000003dec0 : call 0x1ffc20726cd
0x00000200000466bb : call 0x1ffc207af03
0x00000200000498b6 : call 0x1ffc20fe4c5
0x000002000006c2c9 : call 0x1ffc21206e2
0x0000020000115ed5 : call 0x1ffc214a7e2
0x0000020000119904 : call 0x1ffc214e111
0x0000020000121107 : call 0x1ffc215594f
0x00000200001453e5 : call 0x1ffc217a02d
0x00000200001529df : call 0x1ffc21871ec
0x00000200000f6dda : call 0x1ffc21ab9e9
0x00000200000fed6b : call 0x1ffc21b397a
0x00000200000fee8d : call 0x1ffc21b3a9c
0x00000200000ff0bb : call 0x1ffc21b3cca
0x00000200000ffac1 : call 0x1ffc21b46d0
0x00000200001893d1 : call 0x1ffc21be019
0x0000020000132cda : call 0x1ffc21e78e9
0x0000020000137807 : call 0x1ffc21ec416
0x0000020000137967 : call 0x1ffc21ec576
0x000002000013810d : call 0x1ffc21ecd1c
0x000002000013844a : call 0x1ffc21ed059
0x00000200001f22ce : call 0x1ffc2226adb
0x0000020000018c60 : call 0x1ffc224d575
0x0000020000027aa4 : call 0x1ffc225c2b9
0x0000020000027c59 : call 0x1ffc225c46e
0x000002000003c441 : call 0x1ffc2270d56
0x000002000003c870 : call 0x1ffc2271085
0x00000200000447a5 : call 0x1ffc22790ba
0x0000020000045df1 : call 0x1ffc227a603
0x000002000004a8a7 : call 0x1ffc227f1b9
0x0000020000050af5 : call 0x1ffc228530a
0x0000020000050d95 : call 0x1ffc22855aa
0x0000020000050eb0 : call 0x1ffc22856c5
0x0000020000053109 : call 0x1ffc228791b
0x00000200000585f1 : call 0x1ffc228ce03
0x0000020000062fa0 : call 0x1ffc22977b2
0x000002000006d00d : call 0x1ffc22a181f
0x000002000006d01c : call 0x1ffc22a182e
0x000002000006d02b : call 0x1ffc22a183d
0x000002000006fa30 : call 0x1ffc22a423b
0x00000200000a96ab : call 0x1ffc22ddfb6
0x00000200000bd217 : call 0x1ffc22f1a2c
0x00000200000ce66b : call 0x1ffc2302e7d
0x00000200000ce679 : call 0x1ffc2302e8b
0x00000200000ce687 : call 0x1ffc2302e99
0x00000200000ce695 : call 0x1ffc2302ea7
0x00000200000d1757 : call 0x1ffc2305f6c
0x00000200000d17c2 : call 0x1ffc2305fd7
0x00000200000d9b27 : call 0x1ffc230e33c
0x00000200000e203b : call 0x1ffc2316950
0x00000200000ebff2 : call 0x1ffc2320804
0x00000200000ec001 : call 0x1ffc2320813
0x00000200000ec010 : call 0x1ffc2320822
0x00000200000f05e9 : call 0x1ffc2324dfe
0x00000200001047ea : call 0x1ffc2338fff
0x000002000010bf19 : call 0x1ffc234072e
0x00000200001109c9 : call 0x1ffc23451de
0x000002000011b26b : call 0x1ffc234fb80
0x000002000012dae6 : call 0x1ffc23623fb
0x000002000013b976 : call 0x1ffc237028b
0x000002000017739c : call 0x1ffc23abca7
0x0000020000029918 : call 0x1ffc23de238
0x00000200003acf69 : call 0x1ffc23e1776
0x00000200001d2d21 : call 0x1ffc240752c
0x00000200001d958a : call 0x1ffc240dd9f
0x00000200001d9e68 : call 0x1ffc240e67d
0x00000200001de263 : call 0x1ffc2412e78
0x00000200001f1ef6 : call 0x1ffc2426801
0x00000200001f2122 : call 0x1ffc2426a2d
0x00000200001f25ab : call 0x1ffc2426db6
0x00000200000c89a5 : call 0x1ffc247cac2
0x00000200004186cf : call 0x1ffc24ccef8
0x000002000049cc6c : call 0x1ffc24d18b4
0x000002000014448b : call 0x1ffc24f8c96
0x00000200001df4a3 : call 0x1ffc2593ccc
0x00000200001e054a : call 0x1ffc2594e73
0x0000020000368d6c : call 0x1ffc259d681
0x00000200003691ff : call 0x1ffc259da14
0x00000200004cf8d9 : call 0x1ffc261842a
0x00000200004cf8d8 : call 0x1ffc261842b
0x00000200005a2062 : call 0x1ffc265647b
0x00000200004b0137 : call 0x1ffc26e4942
0x00000200006c9582 : call 0x1ffc26fdd97
0x00000200004f0c60 : call 0x1ffc272546b
0x000002000057296b : call 0x1ffc27a717d
0x00000200005744b1 : call 0x1ffc27a8cc6
0x00000200004d8154 : call 0x1ffc280cd64
0x000002000045b8f3 : call 0x1ffc280fd00
0x000002000003d0a7 : call 0x1ffc28811b3
0x00000200004d674c : call 0x1ffc288b054
0x00000200006c06b0 : call 0x1ffc28f4ec5
0x00000200006c07d7 : call 0x1ffc28f50e9
0x00000200006cffb0 : call 0x1ffc29047c2
0x000002000070bed9 : call 0x1ffc29406e4
0x000002000002beb2 : call 0x1ffc2eabee4
0x0000020000424f36 : call 0x1ffc2f03427
0x00000200006d3242 : call 0x1ffc2f87350
0x00000200006d327d : call 0x1ffc2f8738b
0x00000200006d398c : call 0x1ffc2f87a9a
0x00000200006d39c7 : call 0x1ffc2f87ad5
0x00000200006d40c6 : call 0x1ffc2f881d4
0x00000200006d4101 : call 0x1ffc2f8820f
0x0000020000043a47 : call 0x1ffc30384c4
0x0000020000030201 : call 0x1ffc304260e
0x0000020000039e78 : call 0x1ffc304c28d
0x000002000003b454 : call 0x1ffc304d875
0x0000020000056c5f : call 0x1ffc306906c
0x00000200000dfacf : call 0x1ffc30dfadb
0x000002000011e923 : call 0x1ffc311e92f
0x000002000011fa9f : call 0x1ffc311faab
0x0000020000132b15 : call 0x1ffc3132b21
0x0000020000132ab4 : call 0x1ffc3144ec9
0x0000020000165b51 : call 0x1ffc3165b66
0x000002000016ab93 : call 0x1ffc316ab9f
0x0000020000188c51 : call 0x1ffc3188c78
0x0000020000188c58 : call 0x1ffc3188c7f
0x00000200006449b4 : call 0x1ffc31ad0a5
0x0000020000491cea : call 0x1ffc31e9ddb
0x0000020000491ce9 : call 0x1ffc31e9ddc
0x0000020000491c90 : call 0x1ffc31ef781
0x0000020000491c8f : call 0x1ffc31ef782
0x00000200001d69a5 : call 0x1ffc322f5ad
0x000002000005d1db : call 0x1ffc325e128
0x000002000003216e : call 0x1ffc3266a83
0x0000020000032ef8 : call 0x1ffc326770a
0x0000020000046178 : call 0x1ffc327a98d
0x00000200000506b7 : call 0x1ffc3284fcc
0x00000200000530b8 : call 0x1ffc32879cd
0x0000020000028a72 : call 0x1ffc32dd79b
0x00000200000c9a10 : call 0x1ffc32edf1c
0x00000200000c0aa2 : call 0x1ffc32f53ad
0x00000200000c371c : call 0x1ffc32f8031
0x00000200000e2429 : call 0x1ffc3316d3b
0x00000200000e2438 : call 0x1ffc3316d4a
0x000002000012c6e5 : call 0x1ffc3360efa
0x00000200001386b6 : call 0x1ffc336cfcb
0x00000200001769c7 : call 0x1ffc3377914
0x00000200001769c6 : call 0x1ffc3377915
0x0000020000177211 : call 0x1ffc337815e
0x0000020000177210 : call 0x1ffc337815f
0x0000020000393983 : call 0x1ffc33a5d8f
0x000002000048a935 : call 0x1ffc33a6f26
0x000002000048a934 : call 0x1ffc33a6f27
0x00000200003ab55d : call 0x1ffc33bd969
0x000002000019cfc1 : call 0x1ffc33d13ce
0x00000200001c6cd0 : call 0x1ffc33faddb
0x00000200001dcf15 : call 0x1ffc341182a
0x00000200001dd1fe : call 0x1ffc3411b13
0x00000200001e0a55 : call 0x1ffc341536a
0x000002000048f9ec : call 0x1ffc34178dd
0x000002000048f9eb : call 0x1ffc34178de
0x00000200004266d4 : call 0x1ffc3438ae1
0x00000200000c485c : call 0x1ffc347896b
0x00000200000d7af0 : call 0x1ffc348bbff
0x000002000047e823 : call 0x1ffc349c8af
0x00000200004cf6f3 : call 0x1ffc34e1afe
0x00000200001305e1 : call 0x1ffc34e46ed
0x00000200000907d4 : call 0x1ffc3526fb6
0x0000020000060ee5 : call 0x1ffc3529a36
0x0000020000060ee4 : call 0x1ffc3529a37
0x000002000018f875 : call 0x1ffc3544085
0x00000200005438b4 : call 0x1ffc3555cc0
0x00000200001e0108 : call 0x1ffc3594710
0x000002000063f072 : call 0x1ffc365148a
0x00000200004c4019 : call 0x1ffc36c4f66
0x00000200004d5a9b : call 0x1ffc36d69e8
0x00000200004d5a9a : call 0x1ffc36d69e9
0x00000200004cd506 : call 0x1ffc3701f0e
0x00000200003ae02c : call 0x1ffc3762855
0x00000200000c9a6c : call 0x1ffc390dbae
0x00000200000c9dd0 : call 0x1ffc390df12
0x00000200000ca1ec : call 0x1ffc390e32e
0x00000200006cbcde : call 0x1ffc3989372
0x00000200006cbcdd : call 0x1ffc3989373
0x00000200001e0a4e : call 0x1ffc3a95356
0x00000200003c2f0b : call 0x1ffc3bf7718
0x00000200003b232a : call 0x1ffc3c6673e
0x00000200003f45dd : call 0x1ffc3cb45ad
0x000002000046baa6 : call 0x1ffc3cb45f8
0x000002000046baa5 : call 0x1ffc3cb45f9
0x000002000046baed : call 0x1ffc3cb463f
0x000002000046baec : call 0x1ffc3cb4640
0x000002000046bb03 : call 0x1ffc3cb4655
0x000002000046bb02 : call 0x1ffc3cb4656
0x000002000046bb1d : call 0x1ffc3cb466f
0x000002000046bb1c : call 0x1ffc3cb4670
0x000002000040ecb3 : call 0x1ffc3cc35bb
0x0000020000571205 : call 0x1ffc3d0d293
0x00000200001e7d40 : call 0x1ffc3d48d48
0x000002000049b5d1 : call 0x1ffc3d4d64c
0x00000200004c8ce0 : call 0x1ffc3d7d9e8
0x00000200004de854 : call 0x1ffc3d9e816
0x000002000019e497 : call 0x1ffc3da6fe9
0x00000200005c07fe : call 0x1ffc3e807d1
0x00000200005f69b1 : call 0x1ffc3eab2b9
0x00000200006157c4 : call 0x1ffc3eca0cc
0x00000200006186ce : call 0x1ffc3ed86ce
0x0000020000624472 : call 0x1ffc3ee441f
0x000002000001fbff : call 0x1ffc3f8ec93
0x0000020000061a55 : call 0x1ffc3fc5b6e
0x00000200000b1585 : call 0x1ffc4016e02
0x00000200000d91a8 : call 0x1ffc403b528
0x00000200001fcd3c : call 0x1ffc416cd2b
0x00000200001fcd3b : call 0x1ffc416cd2c
0x000002000058dad3 : call 0x1ffc419ddec
0x00000200004c7938 : call 0x1ffc442bb40
0x00000200004f66c5 : call 0x1ffc445a8cd
0x000002000050704c : call 0x1ffc44f6f3d
0x000002000050704b : call 0x1ffc44f6f3e
0x0000020000529cbd : call 0x1ffc45265f9
0x00000200001450ab : call 0x1ffc49798d3
0x00000200005f04ed : call 0x1ffc7bc90f7
0x00000200000b2554 : call 0x1ffc80e6d9e
0x00000200004d2752 : call 0x1ffc888705d
0x00000200004d2751 : call 0x1ffc888705e
0x000002000040c324 : call 0x1ffcacc0d2e
0x00000200001d1a02 : call 0x1ffcfa75c0d
0x0000020000615837 : call 0x1ffcfeca141
0x0000020000443585 : call 0x1ffd0c2c2de
0x0000020000443584 : call 0x1ffd0c2c2df
0x0000020000579ade : call 0x1ffd11f1e33
0x0000020000579add : call 0x1ffd11f1e34
0x0000020000443b23 : call 0x1ffd7a9c47c
0x0000020000443b22 : call 0x1ffd7a9c47d
0x0000020000422fd1 : call 0x1ffd887b926
0x000002000065080d : call 0x1ffd8f0081b
0x00000200005f6b84 : call 0x1ffdba4f78f
0x000002000054b1aa : call 0x1ffdbdab18e
0x000002000003ea20 : call 0x1ffe0c66d2c
0x00000200000c6e3b : call 0x1ffe0cdb768
0x00000200004654cd : call 0x1ffe1c9bae5
0x000002000062f183 : call 0x1ffe3f9d977
0x000002000062f182 : call 0x1ffe3f9d978
0x0000020000482fa2 : call 0x1ffe8482fae
0x000002000001e0e9 : call 0x1ffe8c3a2f3
0x0000020000410ad8 : call 0x1ffe902cce2
0x00000200005560c2 : call 0x1ffe91722cc
0x000002000057c32d : call 0x1ffe9198537
0x000002000048aa52 : call 0x1ffe91c35a6
0x000002000048aa51 : call 0x1ffe91c35a7
0x00000200005f6b70 : call 0x1ffebdcef7d
0x0000020000420b30 : call 0x1fff08d9383
0x000002000062a123 : call 0x1fff16669ba
0x000002000062a122 : call 0x1fff16669bb
0x0000020000603920 : call 0x1fff6e6390f
0x000002000012c3b4 : call 0x1fff812bb61
0x000002000016fd10 : call 0x1fff8af0804
0x000002000016fd0f : call 0x1fff8af0805
0x000002000004a42c : call 0x1fffb038d47
0x00000200000c10d2 : call 0x1ffffcd58fb
0x0000020000510441 : call 0x1ffffce8849
0x0000020000126e9f : call 0x1ffffd4efb3
0x000002000014ab65 : call 0x1ffffd772b5
0x000002000015359d : call 0x1ffffd7b6b1
0x000002000018e542 : call 0x1ffffda2d6b
0x0000020000184ae0 : call 0x1ffffdacbf4
0x000002000009087c : call 0x1fffff59d08
0x000002000009087b : call 0x1fffff59d09
0x000002000070b48d : call 0x20000005dd9
0x00000200005bc4b4 : call 0x200000086de
0x00000200003de4eb : call 0x200000086df
0x000002000047de60 : call 0x2000000a092
0x000002000018ad1f : call 0x2000000cfb9
0x00000200001d8bbe : call 0x2000000dbb7
0x000002000000e1e6 : call 0x2000000e0a2
0x000002000003484c : call 0x20000010a82
0x000002000005071d : call 0x20000012a26
0x00000200003e3f81 : call 0x20000012a63
0x00000200003e3f81 : call 0x20000012a66
0x000002000000f625 : call 0x20000017fcb
0x0000020000131c2f : call 0x20000018f6f
0x00000200000f6ae9 : call 0x2000001b7ee
0x0000020000592ab5 : call 0x2000001ed82
0x0000020000592ae6 : call 0x2000001edca
0x00000200003f6204 : call 0x20000020167
0x000002000049d1a2 : call 0x20000020fc7
0x00000200001c51ab : call 0x200000213c2
0x0000020000407d21 : call 0x20000023fb2
0x00000200003f402b : call 0x20000023fb3
0x00000200000cec05 : call 0x20000023fb6
0x0000020000133434 : call 0x2000002700e
0x000002000018438d : call 0x2000002700f
0x00000200004017a4 : call 0x20000029cf3
0x00000200003fc323 : call 0x2000002a13b
0x000002000061f3ce : call 0x2000002bb84
0x00000200004eb1c6 : call 0x2000002db77
0x00000200006c5351 : call 0x2000002db78
0x0000020000405146 : call 0x2000002dc43
0x000002000010d8f8 : call 0x2000002e6bb
0x000002000070da0b : call 0x20000030a77
0x0000020000560bce : call 0x20000030b7d
0x000002000052b8d4 : call 0x20000038f9b
0x000002000015d095 : call 0x200000392b6
0x000002000040d52b : call 0x200000392b7
0x0000020000123920 : call 0x2000003fbfa
0x000002000054a128 : call 0x200000479e6
0x000002000041a4c1 : call 0x20000048fff
0x000002000041a4cc : call 0x2000004969b
0x0000020000066646 : call 0x2000004c4f7
0x000002000041f62e : call 0x2000004d1c3
0x00000200003f6cfb : call 0x2000004d1c6
0x000002000042125b : call 0x2000004d4f2
0x000002000060138a : call 0x2000004d652
0x000002000042189f : call 0x2000004d653
0x000002000006e902 : call 0x2000004dabf
0x00000200001e2f4b : call 0x2000004f212
0x00000200004259ec : call 0x2000004f763
0x000002000038380a : call 0x2000004fa86
0x0000020000421cec : call 0x2000004fa87
0x0000020000143a2c : call 0x2000004fd22
0x0000020000424f37 : call 0x2000004fd23
0x0000020000421c3e : call 0x2000004ff87
0x0000020000421563 : call 0x2000004fffb
0x0000020000053df8 : call 0x20000050092
0x0000020000428cb6 : call 0x20000050f47
0x0000020000428cc3 : call 0x20000050f53
0x0000020000423b5a : call 0x200000522af
0x00000200004275bc : call 0x20000052463
0x00000200004275ce : call 0x20000053b23
0x0000020000426e58 : call 0x20000054293
0x0000020000426c98 : call 0x200000547eb
0x00000200004f8856 : call 0x20000054ad6
0x00000200005b8870 : call 0x20000054af6
0x00000200004789c3 : call 0x20000054c12
0x0000020000426c51 : call 0x20000055ea7
0x000002000042b7ee : call 0x20000055ec7
0x00000200004297c6 : call 0x20000055f63
0x000002000051a085 : call 0x20000056342
0x000002000051a994 : call 0x20000056bc2
0x000002000051cb9e : call 0x20000056cd7
0x0000020000428629 : call 0x20000056fbf
0x000002000059da0b : call 0x20000058937
0x00000200006bc3a5 : call 0x20000058938
0x000002000059ef38 : call 0x2000005b1f2
0x000002000001aff3 : call 0x20000061c97
0x00000200006c7356 : call 0x200000635ae
0x000002000042f518 : call 0x20000063807
0x00000200000c8867 : call 0x20000064b02
0x0000020000438c71 : call 0x20000064b03
0x00000200006537e5 : call 0x20000065df6
0x00000200001db4fe : call 0x20000067802
0x0000020000446d1d : call 0x20000067ea3
0x0000020000460a57 : call 0x20000067ea6
0x000002000043becc : call 0x20000068c4b
0x000002000063549e : call 0x2000006ad15
0x000002000043b295 : call 0x2000006ad2b
0x00000200003d4d63 : call 0x2000006ad2e
0x00000200004475ec : call 0x2000006b503
0x000002000064f319 : call 0x2000006b5a2
0x000002000015f950 : call 0x2000006bc56
0x000002000043c1f1 : call 0x2000006bc57
0x0000020000564f4d : call 0x2000006bdaa
0x000002000059e070 : call 0x2000006cb73
0x0000020000442553 : call 0x2000006ccc7
0x0000020000442563 : call 0x2000006ccfb
0x0000020000123708 : call 0x2000006f95e
0x00000200003a4dac : call 0x20000071002
0x000002000044416d : call 0x20000071003
0x00000200003d1fb8 : call 0x20000071006
0x0000020000446598 : call 0x20000072d73
0x0000020000136bd5 : call 0x20000072e42
0x0000020000443806 : call 0x20000072e43
0x0000020000449d09 : call 0x20000072e44
0x000002000001d0dc : call 0x20000072e47
0x000002000036e5e8 : call 0x20000072e48
0x000002000036e5e7 : call 0x20000072e49
0x0000020000597300 : call 0x200000735d2
0x0000020000449052 : call 0x20000076d13
0x00000200004487d1 : call 0x20000076da3
0x0000020000118213 : call 0x20000076da7
0x000002000018fcc8 : call 0x20000076da9
0x000002000015af59 : call 0x200000771c2
0x00000200004475ab : call 0x200000771c3
0x000002000014f145 : call 0x200000771c4
0x000002000070744c : call 0x200000771c6
0x0000020000107da3 : call 0x200000771c7
0x000002000070be39 : call 0x200000771c8
0x000002000018003f : call 0x2000007c342
0x00000200004b0deb : call 0x2000007d0e2
0x0000020000490f55 : call 0x2000007d1c2
0x0000020000545dbf : call 0x200000a2042
0x0000020000477f12 : call 0x200000a2043
0x000002000047ad17 : call 0x200000a3703
0x000002000006770f : call 0x200000a3952
0x0000020000475ce3 : call 0x200000a3953
0x00000200004876d0 : call 0x200000a3954
0x0000020000139d8e : call 0x200000a3956
0x00000200006652aa : call 0x200000a3959
0x0000020000605869 : call 0x200000a3a46
0x0000020000018c3a : call 0x200000a4e52
0x0000020000475136 : call 0x200000a4e53
0x00000200000a8bc4 : call 0x200000a4e82
0x0000020000477d03 : call 0x200000a4e83
0x00000200000a5451 : call 0x200000a4e86
0x0000020000480b63 : call 0x200000a66a3
0x000002000012c3b3 : call 0x200000a66a7
0x000002000064ae9b : call 0x200000a7112
0x000002000049cc7b : call 0x200000a7116
0x00000200001ecfa4 : call 0x200000a91e2
0x000002000054cfe2 : call 0x200000a9252
0x00000200004838a0 : call 0x200000a9253
0x00000200003ecfe1 : call 0x200000a92d2
0x00000200004821b7 : call 0x200000a97e7
0x00000200000312ab : call 0x200000ad51e
0x000002000014b936 : call 0x200000ad523
0x00000200000e2b88 : call 0x200000aee22
0x000002000048582d : call 0x200000b4333
0x00000200005b8474 : call 0x200000b46e2
0x000002000049054b : call 0x200000b46e3
0x0000020000665aeb : call 0x200000b46e9
0x0000020000485a46 : call 0x200000b5013
0x0000020000478dec : call 0x200000b5062
0x000002000048bc62 : call 0x200000b5063
0x000002000048958c : call 0x200000b6723
0x00000200001de7f3 : call 0x200000b6726
0x000002000041fa97 : call 0x200000b6727
0x00000200005ff5b5 : call 0x200000b6728
0x000002000004a523 : call 0x200000b67a2
0x0000020000126b77 : call 0x200000b67a7
0x0000020000489507 : call 0x200000b8ae3
0x0000020000413cf7 : call 0x200000b8b66
0x0000020000498c5a : call 0x200000b8e83
0x000002000048a874 : call 0x200000b90e3
0x000002000016d53a : call 0x200000b90e8
0x00000200003cd401 : call 0x200000b9662
0x0000020000489a04 : call 0x200000b9883
0x000002000037d882 : call 0x200000b9b02
0x000002000048a46b : call 0x200000b9b03
0x00000200004918ef : call 0x200000b9b04
0x00000200004918ee : call 0x200000b9b05
0x000002000052ff4c : call 0x200000b9b07
0x00000200004967c1 : call 0x200000b9f43
0x000002000045ba62 : call 0x200000bb076
0x00000200003e156b : call 0x200000bd7b2
0x0000020000365a00 : call 0x200000bd7b8
0x000002000049261d : call 0x200000bf033
0x00000200003a2f93 : call 0x200000bf272
0x000002000048f9ed : call 0x200000bf273
0x0000020000518eae : call 0x200000bf274
0x0000020000567c14 : call 0x200000bf277
0x00000200005ac162 : call 0x200000bf278
0x000002000056c09e : call 0x200000bf279
0x0000020000493d93 : call 0x200000bf2c3
0x0000020000493d92 : call 0x200000bf2c4
0x0000020000493d91 : call 0x200000bf2c5
0x000002000045b4dd : call 0x200000c02b6
0x00000200000d539d : call 0x200000c168d
0x00000200004a0017 : call 0x200000c44d3
0x00000200005750b2 : call 0x200000c5a46
0x000002000006acb1 : call 0x200000c6f82
0x000002000049dfc6 : call 0x200000c6f83
0x00000200004a5075 : call 0x200000c7383
0x0000020000471cf0 : call 0x200000c7ad6
0x00000200000bbcdc : call 0x200000c7f22
0x000002000006cb38 : call 0x200000c7f26
0x00000200004a134c : call 0x200000c85e3
0x00000200006c085d : call 0x200000c85e7
0x000002000049df5b : call 0x200000cac93
0x00000200005c2e2d : call 0x200000cf0e6
0x0000020000123abb : call 0x200000cfd2e
0x000002000001e9f8 : call 0x200000d256b
0x00000200001c7605 : call 0x200000d38f2
0x0000020000368cc4 : call 0x200000d4f12
0x00000200001e8d03 : call 0x200000d4fc2
0x00000200004b59ed : call 0x200000d5ba3
0x0000020000575794 : call 0x200000d97d6
0x000002000012dd54 : call 0x200000d9fd2
0x00000200004baa2f : call 0x200000dbad3
0x00000200004baa2e : call 0x200000dbad4
0x00000200004baa2d : call 0x200000dbad5
0x000002000002fbd9 : call 0x200000dbe22
0x00000200000b14bc : call 0x200000dd792
0x00000200003b1c8c : call 0x200000ddf62
0x00000200003b1c8b : call 0x200000ddf63
0x00000200004aefae : call 0x200000ddfe3
0x000002000057fad5 : call 0x200000df877
0x00000200000c1186 : call 0x200000e13b6
0x0000020000055f13 : call 0x200000e21f2
0x00000200000c4df3 : call 0x200000e48a7
0x00000200000c82b2 : call 0x200000e9477
0x0000020000071f32 : call 0x200000ebd26
0x000002000037db35 : call 0x200000ebf16
0x00000200004c243e : call 0x200000f22c3
0x00000200004cfa9a : call 0x200000f22c4
0x00000200001c708a : call 0x200000f3302
0x00000200000e7c2e : call 0x200000f3ed2
0x00000200001ca888 : call 0x200000f6b12
0x00000200001dca82 : call 0x200000f8d52
0x00000200004cc0b0 : call 0x200000f8d53
0x00000200004cfab2 : call 0x200000f8d54
0x000002000041e8c5 : call 0x200000f8d56
0x00000200003dcb41 : call 0x200000f8e32
0x00000200003dcb40 : call 0x200000f8e33
0x000002000002ae20 : call 0x200000f9ed8
0x000002000070ef51 : call 0x200000fb20a
0x000002000059173e : call 0x200000fb20e
0x0000020000013ee1 : call 0x20000100106
0x0000020000706075 : call 0x20000102292
0x00000200004e2cd5 : call 0x20000104d33
0x0000020000539673 : call 0x20000105962
0x00000200004e1ec2 : call 0x20000105b77
0x00000200004e1ec1 : call 0x20000105b78
0x000002000047e922 : call 0x200001067f7
0x00000200004895e5 : call 0x20000107956
0x00000200004d16a1 : call 0x2000010bb76
0x000002000018ed32 : call 0x20000110583
0x0000020000584bc6 : call 0x2000011203f
0x0000020000537fbd : call 0x20000112041
0x00000200004f1b04 : call 0x200001183bb
0x00000200004f440a : call 0x200001183bc
0x000002000011a318 : call 0x2000011a2d7
0x00000200006d0b49 : call 0x2000011ce42
0x00000200004f525f : call 0x2000011d047
0x000002000036371b : call 0x2000011f94e
0x00000200004f085a : call 0x2000011f94f
0x000002000036374b : call 0x2000011f9a2
0x00000200004f5d31 : call 0x2000011f9a3
0x00000200001d7892 : call 0x20000124b15
0x000002000012667c : call 0x20000124c69
0x0000020000183ad2 : call 0x200001277d7
0x00000200004fd828 : call 0x2000012ac4b
0x00000200004fdc2d : call 0x2000012ad4b
0x00000200001efa4d : call 0x2000012bd0e
0x00000200004cbebc : call 0x2000012d997
0x0000020000601c7b : call 0x2000012deae
0x00000200001803e0 : call 0x2000013049b
0x00000200005755c6 : call 0x20000131812
0x0000020000645352 : call 0x20000131ab7
0x0000020000576ea6 : call 0x20000133837
0x0000020000059074 : call 0x20000135332
0x00000200003c3226 : call 0x20000138feb
0x00000200006d0bdb : call 0x2000013b027
0x000002000013d4a4 : call 0x2000013d826
0x0000020000156e8e : call 0x2000013e5d7
0x000002000016cfbc : call 0x2000013e637
0x0000020000635382 : call 0x200001415fa
0x00000200004e68db : call 0x20000142b5a
0x00000200005137c2 : call 0x200001434b3
0x00000200004fe154 : call 0x20000143713
0x00000200001e81c5 : call 0x200001444ae
0x000002000051d705 : call 0x2000014a21b
0x000002000051dbaa : call 0x2000014a2ff
0x00000200005234c9 : call 0x2000014a4a7
0x000002000051bd0d : call 0x2000014a6e3
0x000002000051c8fd : call 0x2000014a71f
0x00000200004de48d : call 0x2000014a78a
0x000002000051b7f5 : call 0x2000014a79b
0x000002000013ebc2 : call 0x2000014ae46
0x000002000014ec1f : call 0x2000014ae66
0x000002000019f1f9 : call 0x2000014b4f2
0x0000020000520609 : call 0x2000014b797
0x000002000051dcea : call 0x2000014b863
0x000002000036b183 : call 0x2000014b887
0x0000020000522017 : call 0x2000014b9d7
0x0000020000525e0b : call 0x2000014bd13
0x00000200005202d9 : call 0x2000014bfdf
0x0000020000522c49 : call 0x2000014c277
0x0000020000524fa9 : call 0x2000014cae3
0x0000020000524fd5 : call 0x2000014cbcb
0x0000020000523133 : call 0x2000014cc77
0x00000200003718ba : call 0x2000014db82
0x00000200003718ce : call 0x2000014dbd2
0x00000200005204b9 : call 0x200001500c3
0x000002000036de92 : call 0x200001500c7
0x000002000036de91 : call 0x200001500c8
0x0000020000664331 : call 0x2000015057e
0x00000200005222e6 : call 0x20000150a1f
0x00000200005259e1 : call 0x20000150f07
0x0000020000525a5c : call 0x20000150f47
0x000002000052667b : call 0x20000152e13
0x000002000012714a : call 0x200001533da
0x0000020000526c33 : call 0x200001536f3
0x0000020000528666 : call 0x20000153ff3
0x000002000052a4e3 : call 0x20000159937
0x00000200005e2249 : call 0x2000015e532
0x000002000053d891 : call 0x2000015e533
0x00000200005e14dd : call 0x2000015e536
0x0000020000186622 : call 0x20000162852
0x00000200001ef0eb : call 0x20000162857
0x0000020000175d5f : call 0x20000165cc7
0x0000020000169170 : call 0x20000168e9a
0x0000020000549837 : call 0x20000169f83
0x00000200005497e8 : call 0x2000016a033
0x0000020000549f19 : call 0x2000016aa53
0x0000020000549146 : call 0x2000016af13
0x0000020000544a92 : call 0x2000016af83
0x000002000016bf3c : call 0x2000016c0db
0x0000020000542f8f : call 0x2000016d2ab
0x0000020000542f20 : call 0x2000016d867
0x0000020000548694 : call 0x2000016e15f
0x000002000054e4d8 : call 0x2000016f0cb
0x0000020000171f53 : call 0x20000171f62
0x0000020000171f52 : call 0x20000171f63
0x000002000064741a : call 0x20000173636
0x00000200001c84b6 : call 0x20000174736
0x00000200000c850d : call 0x200001747b2
0x0000020000175fe9 : call 0x2000017635d
0x0000020000176011 : call 0x200001763c9
0x00000200001761e1 : call 0x20000176833
0x000002000007b7ea : call 0x20000177a76
0x000002000005b8c0 : call 0x20000177ae2
0x0000020000122f8b : call 0x2000017f26a
0x0000020000185829 : call 0x20000181a3a
0x00000200001e7442 : call 0x20000181a3e
0x00000200001826fb : call 0x20000181d87
0x00000200000ee6fb : call 0x2000018a906
0x00000200005779d5 : call 0x2000018bbc3
0x0000020000578025 : call 0x2000018cbf3
0x000002000018ed49 : call 0x2000018ed77
0x000002000056591c : call 0x200001935cb
0x000002000064c8a9 : call 0x20000198ad6
0x0000020000576d89 : call 0x2000019a56f
0x000002000056dad0 : call 0x2000019a80f
0x0000020000590347 : call 0x2000019c572
0x0000020000590394 : call 0x2000019c5a2
0x00000200005903b9 : call 0x2000019c5f2
0x0000020000590627 : call 0x2000019c8c2
0x000002000059078f : call 0x2000019c9ee
0x00000200005907bb : call 0x2000019ca3a
0x0000020000026dfd : call 0x200001a3056
0x000002000057a341 : call 0x200001a3baf
0x00000200001a521f : call 0x200001a493f
0x00000200001ab036 : call 0x200001a7292
0x00000200001acb41 : call 0x200001a8d62
0x00000200001ae05e : call 0x200001aa326
0x00000200001af16b : call 0x200001ab3a2
0x00000200001af1bf : call 0x200001ab432
0x00000200001a1b55 : call 0x200001ad718
0x00000200001b1761 : call 0x200001ada42
0x00000200001b18d1 : call 0x200001adb2e
0x00000200001b18e9 : call 0x200001adb86
0x00000200001a98fc : call 0x200001b5b22
0x00000200001ac246 : call 0x200001b847a
0x000002000038e911 : call 0x200001babe2
0x00000200001bde89 : call 0x200001bda22
0x0000020000640012 : call 0x200001c0339
0x00000200001c362d : call 0x200001c2c2b
0x00000200001b2d35 : call 0x2000026f012
0x000002000063f5b0 : call 0x2000026f013
0x00000200005ffeba : call 0x2000026f016
0x0000020000143a93 : call 0x2000026f017
0x00000200001fb15c : call 0x2000026f018
0x0000020000583304 : call 0x2000026f019
0x0000020000133dbc : call 0x20000270042
0x0000020000523db9 : call 0x20000270043
0x00000200005c26c9 : call 0x20000270044
0x0000020000361d9c : call 0x2000035e0a2
0x0000020000582825 : call 0x2000035e0a7
0x0000020000508842 : call 0x2000035e0a8
0x00000200006ea73f : call 0x20000364d87
0x000002000036e1f9 : call 0x2000036e187
0x0000020000372881 : call 0x2000036eac6
0x00000200005ff848 : call 0x20000377be2
0x00000200003cc4b6 : call 0x20000378752
0x00000200001cde71 : call 0x2000037b057
0x0000020000186701 : call 0x2000037c3f7
0x000002000037fedb : call 0x2000038195a
0x000002000036a294 : call 0x20000386572
0x00000200005dd967 : call 0x20000389ba2
0x000002000059f3ba : call 0x2000038b66e
0x0000020000580485 : call 0x2000038c69e
0x000002000038ccb1 : call 0x2000038ca9f
0x000002000039b9be : call 0x2000039bc83
0x000002000055952a : call 0x2000039da97
0x00000200003a1440 : call 0x200003a08ef
0x00000200003a0fcc : call 0x200003a1007
0x00000200003b2f32 : call 0x200003b321b
0x00000200003b71df : call 0x200003b3406
0x00000200005c99ee : call 0x200003b5cba
0x0000020000620f55 : call 0x200003bbcfb
0x0000020000107bee : call 0x200003c3e92
0x000002000059a699 : call 0x200003c68ee
0x00000200005d8f69 : call 0x200003d5172
0x00000200005d9336 : call 0x200003d5582
0x000002000053c8b4 : call 0x200003d8b5a
0x000002000041113d : call 0x200003dd3e2
0x0000020000104124 : call 0x200003e0402
0x00000200005fe1c4 : call 0x200003f572a
0x00000200005db053 : call 0x200003f82a6
0x00000200005dfe67 : call 0x200003f82a7
0x00000200005098f2 : call 0x20000405b8a
0x00000200005098f1 : call 0x20000405b8b
0x0000020000532ce1 : call 0x2000040ef62
0x000002000016b32e : call 0x20000417632
0x0000020000018c0f : call 0x2000042186a
0x0000020000416ea9 : call 0x2000042316a
0x0000020000587579 : call 0x20000423836
0x0000020000520107 : call 0x20000424e1b
0x00000200004d5169 : call 0x20000425e57
0x0000020000426b3b : call 0x20000427a58
0x000002000036e3ea : call 0x2000043743f
0x00000200003ccb82 : call 0x20000438e62
0x000002000040d91a : call 0x20000439b32
0x000002000040d919 : call 0x20000439b33
0x000002000047fdc2 : call 0x2000043c042
0x00000200003f5bc2 : call 0x20000441dd2
0x00000200006381dc : call 0x200004644cb
0x00000200006381db : call 0x200004644cc
0x000002000039a98e : call 0x20000466c92
0x00000200006ec64d : call 0x20000468872
0x000002000047ddfc : call 0x20000468876
0x000002000055b0a6 : call 0x20000468877
0x0000020000472054 : call 0x2000046e312
0x000002000047eabf : call 0x2000047e69a
0x0000020000504df9 : call 0x2000047eaf8
0x00000200006f3407 : call 0x2000047f60e
0x00000200005d53ab : call 0x200004815ce
0x0000020000489349 : call 0x200004855d6
0x00000200005596b1 : call 0x200004858fe
0x00000200005596b0 : call 0x200004858ff
0x00000200005596af : call 0x20000485900
0x000002000041162a : call 0x2000048d902
0x0000020000491564 : call 0x20000492427
0x000002000013b684 : call 0x20000497966
0x000002000051d3e4 : call 0x2000049961a
0x00000200004b3c93 : call 0x200004b3ca5
0x00000200004b3c92 : call 0x200004b3ca6
0x000002000051af9f : call 0x200004b71e6
0x00000200004018fb : call 0x200004b71ea
0x000002000042b68f : call 0x200004d5d38
0x00000200004d6b27 : call 0x200004d9906
0x0000020000607c95 : call 0x200004e3ef6
0x0000020000411900 : call 0x200004edb0e
0x00000200004f4096 : call 0x200004f410f
0x00000200004fb2a3 : call 0x200004fb307
0x00000200005a4fdb : call 0x200004ff54f
0x0000020000505128 : call 0x20000503968
0x00000200005a5040 : call 0x20000510877
0x0000020000517c40 : call 0x20000517583
0x000002000070fb16 : call 0x2000051bd62
0x00000200004118b8 : call 0x2000051db62
0x0000020000401eeb : call 0x2000052006f
0x0000020000541533 : call 0x2000054161e
0x00000200004921f8 : call 0x2000055e452
0x00000200005fed16 : call 0x200005729b2
0x00000200005848e3 : call 0x20000580b92
0x0000020000584e54 : call 0x200005810f2
0x0000020000584ff9 : call 0x20000581292
0x0000020000597ce7 : call 0x20000593f7a
0x000002000061d8d4 : call 0x2000059428e
0x00000200000d8c09 : call 0x200005b4eda
0x0000020000548c94 : call 0x200005b4ef2
0x00000200001c2558 : call 0x200005bbab7
0x0000020000636ac5 : call 0x20000634845
0x000002000064313f : call 0x20000642e37
0x0000020000646c2e : call 0x20000642f1e
0x0000020000643b8f : call 0x200006436f7
0x000002000063fdb4 : call 0x20000648176
0x000002000063f43d : call 0x20000648177
0x0000020000654571 : call 0x20000648178
0x000002000064d38d : call 0x2000064d8b7
0x0000020000651b60 : call 0x2000064ddfe
0x000002000064012b : call 0x2000064e949
0x00000200006417d6 : call 0x2000065179e
0x000002000064fedd : call 0x200006587cf
0x00000200006600b6 : call 0x2000065c2be
0x0000020000660095 : call 0x2000065c396
0x00000200003673e5 : call 0x2000066510c
0x0000020000669bd8 : call 0x20000665ed6
0x00000200006f2016 : call 0x200006f20cb
0x00000200006f9e5c : call 0x200006f6152
0x00000200006e6e82 : call 0x200007030d2
0x000002000056f140 : call 0x2000419e74c
0x000002000014c744 : call 0x20004a21356
0x000002000018ad22 : call 0x20005a3fa2c
0x0000020000545c7d : call 0x20007c91ebf
0x000002000001388d : call 0x2000fc3739b
0x0000020000045735 : call 0x2000fc69243
0x000002000006abc8 : call 0x2000fc8e6d6
0x00000200000ee3fb : call 0x2000fd11f09
0x00000200000efa2a : call 0x2000fd13538
0x00000200000f111b : call 0x2000fd14c29
0x000002000046dde8 : call 0x200100918fc
0x00000200005e0a1f : call 0x200105e02ae
0x000002000010f90d : call 0x20010d37a5d
0x000002000010f90c : call 0x20010d37a5e
0x000002000061b831 : call 0x200115a3c3c
0x00000200006e6ff5 : call 0x20012a1b904
0x00000200005cf81d : call 0x200131f7c24
0x00000200000c6515 : call 0x2001fece827
0x0000020000416fa4 : call 0x2002065cc3b
0x0000020000545bc7 : call 0x20025168dd1
0x00000200000204ed : call 0x2002bc49036
0x00000200000f71e3 : call 0x2002bd1fd2c
0x000002000070a690 : call 0x2002c762fa7
0x00000200004dbb85 : call 0x200332aa699
0x000002000042c007 : call 0x2003344491c
0x000002000014845d : call 0x20033d687b1
0x000002000001dc03 : call 0x20041c3df4f
0x00000200000276a1 : call 0x20041c501ea
0x00000200000c78bb : call 0x20041cf8810
0x00000200000c78ba : call 0x20041cf8811
0x000002000019bfca : call 0x20041dbc316
0x00000200006ccdff : call 0x20041e90773
0x00000200003d17c2 : call 0x20041ff3ad6
0x00000200003d78bc : call 0x20041ff7c08
0x000002000040263c : call 0x2004202b185
0x000002000040263b : call 0x2004202b186
0x0000020000572d24 : call 0x20042193070
0x0000020000554a40 : call 0x2004371d794
0x0000020000556606 : call 0x2004371f35a
0x00000200000287f8 : call 0x2004402a301
0x00000200000ce214 : call 0x20044cf982b
0x00000200006370a1 : call 0x200452573ed
0x00000200006370a0 : call 0x200452573ee
0x00000200001acce8 : call 0x200459a8f72
0x00000200001b66b3 : call 0x20045de1dca
0x00000200001b66b2 : call 0x20045de1dcb
0x0000020000368ca5 : call 0x200486215f8
0x0000020000702403 : call 0x200487723c7
0x000002000006108d : call 0x20048c6c7a8
0x000002000006108c : call 0x20048c6c7a9
0x000002000005549e : call 0x20048c777ee
0x000002000006e6b7 : call 0x20048c8e9cb
0x000002000006fa17 : call 0x20048c91d67
0x0000020000146019 : call 0x20048d6836a
0x00000200001529af : call 0x20048d74cff
0x00000200001d2d08 : call 0x20048df5058
0x00000200001d4dcc : call 0x20048df711c
0x00000200001d4e47 : call 0x20048df7197
0x00000200001f1ee7 : call 0x20048e14237
0x00000200001f2297 : call 0x20048e145e7
0x00000200003b1bb5 : call 0x20048fd1f05
0x00000200003f0f7c : call 0x200490112cc
0x00000200003f1030 : call 0x20049011380
0x00000200003f7219 : call 0x20049017569
0x00000200003fe97d : call 0x2004901eccd
0x00000200003fea8d : call 0x2004901eddd
0x0000020000411c7d : call 0x20049031fcd
0x0000020000411d24 : call 0x20049032074
0x0000020000411de5 : call 0x20049032135
0x0000020000411e7d : call 0x200490321cd
0x0000020000414c08 : call 0x20049034f58
0x000002000041b5c5 : call 0x2004903b915
0x000002000041dab7 : call 0x2004903de07
0x000002000041dc3d : call 0x2004903df8d
0x000002000041dd8d : call 0x2004903e0dd
0x00000200004216f0 : call 0x20049041a40
0x0000020000423c7d : call 0x20049043fcd
0x0000020000423d1d : call 0x2004904406d
0x000002000047b6b3 : call 0x2004909ba03
0x00000200004e302e : call 0x2004910bb7a
0x00000200004e302d : call 0x2004910bb7b
0x00000200004f0e40 : call 0x20049113190
0x000002000052e8a9 : call 0x2004914ebf9
0x0000020000581b89 : call 0x200491a1ed9
0x000002000058a4b8 : call 0x200491aa7c4
0x00000200006586ed : call 0x20049278a3d
0x00000200006c5e33 : call 0x200492e6183
0x00000200006d4f41 : call 0x200492f5291
0x00000200006df030 : call 0x200492ff380
0x00000200006eab49 : call 0x2004930ae99
0x00000200006f4273 : call 0x200493165c3
0x0000020000703686 : call 0x200493239d6
0x000002000070bec0 : call 0x2004932e210
0x000002000048eb14 : call 0x2004948adca
0x0000020000177383 : call 0x20049d996d4
0x00000200001dc7a3 : call 0x20049dfcaf7
0x00000200001e825b : call 0x20049e085af
0x00000200001f2109 : call 0x20049e1445a
0x000002000047b5fd : call 0x2004a09b951
0x00000200001bb038 : call 0x2004a0d6752
0x00000200004f83ec : call 0x2004a118740
0x000002000002e2cc : call 0x2004bc56e19
0x000002000003dea4 : call 0x2004cc601f4
0x00000200001198d3 : call 0x2004cd3bc23
0x0000020000613db9 : call 0x2004d184cce
0x000002000066a46c : call 0x2004d6666ad
0x00000200000a3a23 : call 0x20051cd4978
0x00000200000f9552 : call 0x200559957e4
0x00000200005bb20a : call 0x2005de4fe37
0x0000020000498214 : call 0x20066494433
0x00000200003bc3dc : call 0x20069fdf6ed
0x00000200003dbdc8 : call 0x20069fff0d9
0x00000200001a1657 : call 0x20072dc51ac
0x0000020000410005 : call 0x2007442c302
0x0000020000556ad1 : call 0x20074556add
0x000002000011dd46 : call 0x20074d4615c
0x00000200001470eb : call 0x20074d4f640
0x000002000013b31c : call 0x20074d63727
0x000002000018e8a3 : call 0x20074db23b1
0x000002000019144b : call 0x20074db4e6b
0x00000200000516ee : call 0x2007506bf09
0x00000200000f9264 : call 0x2007510ceb0
0x00000200005f0c2e : call 0x200751f9183
0x00000200006d15d3 : call 0x200752f511f
0x00000200006d15d2 : call 0x200752f5120
0x000002000066175c : call 0x2007565da05
0x000002000003c590 : call 0x20075c6009e
0x00000200000476e9 : call 0x20075c6b1f7
0x000002000013042d : call 0x20075d53f3b
0x00000200001888ca : call 0x20075da0ce5
0x000002000018b00b : call 0x20075daeb54
0x00000200001a6dac : call 0x20075dcf31a
0x00000200000a657e : call qword ptr [r10]
0x000002000007b5c7 : call qword ptr [r11]
0x0000020000369397 : call qword ptr [r14]
0x00000200001703bf : call qword ptr [r8]
0x000002000060c1bd : call qword ptr [rax + 0x10ff8390]
0x000002000047daee : call qword ptr [rax + 0x1817c2e9]
0x000002000062806e : call qword ptr [rax + 0x20ff8341]
0x00000200001fe4e1 : call qword ptr [rax + 0x49c28b90]
0x000002000038fbde : call qword ptr [rax + 0xb5ac2e9]
0x00000200005e7aad : call qword ptr [rax - 0x103db317]
0x00000200001ccfc9 : call qword ptr [rax - 0x103dc717]
0x0000020000609153 : call qword ptr [rax - 0x109a3d17]
0x00000200001db74b : call qword ptr [rax - 0x10c76d17]
0x0000020000606cf2 : call qword ptr [rax - 0x11003d17]
0x00000200001dfaef : call qword ptr [rax - 0x110dd317]
0x0000020000609c9c : call qword ptr [rax - 0x112b8417]
0x00000200001e9597 : call qword ptr [rax - 0x113d2f17]
0x00000200001e96ac : call qword ptr [rax - 0x113d9017]
0x00000200001e96e0 : call qword ptr [rax - 0x113dc417]
0x000002000061fd46 : call qword ptr [rax - 0x11a10917]
0x000002000062a6b2 : call qword ptr [rax - 0x12063d17]
0x00000200001e8193 : call qword ptr [rax - 0x123d5a17]
0x00000200001e81a9 : call qword ptr [rax - 0x123d7017]
0x00000200001e8231 : call qword ptr [rax - 0x123df817]
0x00000200001d44fd : call qword ptr [rax - 0x1254dd17]
0x00000200001d8011 : call qword ptr [rax - 0x130e3d17]
0x00000200001ff19a : call qword ptr [rax - 0x143db517]
0x000002000050da25 : call qword ptr [rax - 0x17073d17]
0x00000200005f8abc : call qword ptr [rax - 0x17943d17]
0x00000200001e803e : call qword ptr [rax - 0x18123d17]
0x00000200005fe01c : call qword ptr [rax - 0x18c33d17]
0x00000200001dba1b : call qword ptr [rax - 0x18ce1117]
0x00000200006019ca : call qword ptr [rax - 0x193d1e17]
0x00000200001db1cc : call qword ptr [rax - 0x1a2b5017]
0x00000200005ebb98 : call qword ptr [rax - 0x1a3d7917]
0x00000200005eb552 : call qword ptr [rax - 0x1a3dec17]
0x00000200005ebb7f : call qword ptr [rax - 0x1a3dff17]
0x00000200005dfe27 : call qword ptr [rax - 0x1ab33d17]
0x00000200001d5ebf : call qword ptr [rax - 0x1add4817]
0x00000200001dbbab : call qword ptr [rax - 0x1b0db517]
0x00000200001dbb4b : call qword ptr [rax - 0x1b0def17]
0x00000200001f7fb8 : call qword ptr [rax - 0x1c3d8617]
0x00000200001f7fce : call qword ptr [rax - 0x1c3d8917]
0x00000200001f7e22 : call qword ptr [rax - 0x1c3d8f17]
0x00000200001f7e09 : call qword ptr [rax - 0x1c3daf17]
0x000002000060e769 : call qword ptr [rax - 0x1e3d0917]
0x000002000060c1eb : call qword ptr [rax - 0x1e3d5c17]
0x00000200006083d0 : call qword ptr [rax - 0x1e3d8017]
0x000002000060c241 : call qword ptr [rax - 0x1e3db217]
0x0000020000608407 : call qword ptr [rax - 0x1e3df217]
0x000002000060c795 : call qword ptr [rax - 0x1e3ff117]
0x00000200006078d1 : call qword ptr [rax - 0x2057aa17]
0x0000020000466c79 : call qword ptr [rax - 0x2093d17]
0x000002000062aebe : call qword ptr [rax - 0x20c6c817]
0x0000020000619206 : call qword ptr [rax - 0x225d3d17]
0x00000200005ff8e7 : call qword ptr [rax - 0x24243d17]
0x00000200005dd7b2 : call qword ptr [rax - 0x253d7417]
0x0000020000604a90 : call qword ptr [rax - 0x25453d17]
0x000002000062104f : call qword ptr [rax - 0x278a3d17]
0x0000020000625920 : call qword ptr [rax - 0x28ef3d17]
0x00000200006300f7 : call qword ptr [rax - 0x2afd3d17]
0x0000020000625f71 : call qword ptr [rax - 0x3174b770]
0x000002000013d224 : call qword ptr [rax - 0x3c09aa15]
0x000002000063872f : call qword ptr [rax - 0x3d3217]
0x00000200006f8ace : call qword ptr [rax - 0x3d]
0x0000020000133291 : call qword ptr [rax - 0x5043d17]
0x00000200006077f1 : call qword ptr [rax - 0x97ab270]
0x000002000049d747 : call qword ptr [rax - 0x9fa3d17]
0x00000200001d48cd : call qword ptr [rax - 0xa043d17]
0x00000200001e6dc0 : call qword ptr [rax - 0xae53d17]
0x00000200001d6781 : call qword ptr [rax - 0xb0a3d17]
0x0000020000111c64 : call qword ptr [rax - 0xb2a3d17]
0x00000200001ef8f2 : call qword ptr [rax - 0xc3d7d17]
0x00000200001c97d1 : call qword ptr [rax - 0xc833d17]
0x00000200004c2990 : call qword ptr [rax - 0xcdd3d17]
0x00000200001e0e71 : call qword ptr [rax - 0xcf89917]
0x00000200001dba7b : call qword ptr [rax - 0xe1c6717]
0x00000200001db7fb : call qword ptr [rax - 0xe9bee17]
0x00000200001dad37 : call qword ptr [rax - 0xfbf7217]
0x00000200000f0bc5 : call qword ptr [rax]
0x0000020000022857 : call qword ptr [rbx]
0x000002000001163e : call qword ptr [rcx]
0x00000200004fbdf7 : call qword ptr [rdi + 0x100]
0x0000020000182922 : call qword ptr [rdi + 0x10]
0x000002000043b7fd : call qword ptr [rdi - 0x3d]
0x000002000000d044 : call qword ptr [rdi]
0x000002000008b815 : call qword ptr [rdx]
0x00000200001756fd : call qword ptr [rip + 0x1d7d15]
0x0000020000653ec2 : call qword ptr [rip + 0x3c2a0]
0x00000200001c5096 : call qword ptr [rip + 0xb937c]
0x0000020000521358 : call qword ptr [rip - 0x1d3d16]
0x00000200006c17c2 : call qword ptr [rip - 0x3dac20]
0x00000200006c1821 : call qword ptr [rip - 0x3dac7f]
0x00000200006c18ca : call qword ptr [rip - 0x3dad28]
0x00000200006c191d : call qword ptr [rip - 0x3dad7b]
0x00000200006c1adc : call qword ptr [rip - 0x3daf3a]
0x00000200006c1afe : call qword ptr [rip - 0x3daf5c]
0x00000200006c1b1c : call qword ptr [rip - 0x3daf7a]
0x00000200006c1b50 : call qword ptr [rip - 0x3dafae]
0x0000020000003691 : call qword ptr [rsi]
0x00000200003a578e : call qword ptr fs:[rax]
0x00000200003a57ca : call qword ptr fs:[rdi]
0x00000200003a5842 : call qword ptr fs:[rdx]
0x00000200003a56f4 : call qword ptr gs:[rbx]
0x00000200000812b8 : call qword ptr ss:[rcx]
0x000002000000b9fa : call r10
0x0000020000051835 : call r11
0x00000200001264ee : call r12
0x000002000002354e : call r14
0x0000020000005cd6 : call r15
0x0000020000003034 : call r8
0x000002000001fd29 : call r9
0x0000020000002ff1 : call rax
0x0000020000051836 : call rbx
0x000002000001fd2a : call rcx
0x0000020000005cd7 : call rdi
0x000002000000b9fb : call rdx
0x000002000002354f : call rsi
0x00000200001264ef : call rsp
0x000002000057a342 : cbw ; ret 0x84ff
0x0000020000379b6f : cdq ; adc edi, ecx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004cde40 : cdq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200004d543d : cdq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x00000200003fa5fd : cdq ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000007e275 : cdq ; add byte ptr [rax], al ; add cl, ch ; ret 0xffcd
0x000002000063e750 : cdq ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000080275 : cdq ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffad
0x000002000017204c : cdq ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000002000043b75c : cdq ; cld ; dec dword ptr [rax - 0x77] ; or byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000501b6d : cdq ; cmp cl, byte ptr [rsi] ; add bh, bh ; ret
0x0000020000704b48 : cdq ; dec dword ptr [rbx - 0x7e97db84] ; jmp qword ptr [rbx]
0x000002000013b455 : cdq ; idiv bh ; add rsp, 0x48 ; ret
0x000002000019ca8b : cdq ; idiv ecx ; add eax, 0xd800 ; ret
0x000002000019bfef : cdq ; idiv ecx ; add eax, r9d ; ret
0x000002000019ca6f : cdq ; idiv ecx ; lea eax, dword ptr [rdx + 0xdc00] ; ret
0x000002000014ec64 : cdq ; idiv r8 ; ret
0x000002000013f9c2 : cdq ; idiv rcx ; ret
0x0000020000605b5b : cdq ; in al, dx ; push rsi ; ret
0x00000200001ea1fb : cdq ; in eax, dx ; push rsi ; ret 0x7401
0x00000200006694c3 : cdq ; insb byte ptr [rdi], dx ; ret 0x48ff
0x0000020000091fdd : cdq ; jl 0x20000092006 ; ret 0x23e8
0x0000020000665333 : cdq ; lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x000002000011033e : cdq ; mov al, 1 ; ret
0x000002000014917f : cdq ; or al, byte ptr [rax] ; xor al, al ; ret
0x000002000060bd05 : cdq ; push 0xf000001 ; xchg eax, ebp ; ret
0x00000200001ff197 : cdq ; push rbp ; idiv edi ; nop ; jmp 0x200000bb3f2
0x000002000070e791 : cdq ; push rsi ; ret
0x0000020000085680 : cdq ; ret
0x0000020000522019 : cdq ; ret 0x48ff
0x000002000047a028 : cdq ; ret 0x49ff
0x00000200004494e8 : cdq ; ret 0x4cff
0x000002000066206b : cdq ; ret 0x4dff
0x00000200004c69bb : cdq ; ret 0x6ee8
0x00000200004a5a34 : cdq ; ret 0x8b48
0x000002000038e943 : cdq ; ret 0xffe2
0x00000200001d798d : cdq ; rol byte ptr [rcx + 0xf], 0xb6 ; ror byte ptr [rax - 0x75], 0xc ; ret 0x8548
0x00000200006f6d4e : cdq ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200000f8783 : cdq ; test al, 0x17 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b0efc : cdq ; test dword ptr [rsi], 0xe9c68b00 ; ret 0xfffe
0x000002000070722b : cdq ; xor al, al ; ret
0x0000020000496b8e : cdqe ; call 0x200000bf275
0x00000200004902f0 : cdqe ; mov rdx, rbx ; call 0x200000bf278
0x000002000008a6bf : cdqe ; movsxd rdi, esi ; ret
0x000002000011ae48 : cdqe ; or rax, r9 ; or rax, rcx ; ret
0x000002000070e215 : clc ; adc byte ptr [rax + 0x2b], cl ; ret 0x349
0x0000020000041f12 : clc ; adc byte ptr [rax + 0x3b], cl ; ret 0xba48
0x0000020000102307 : clc ; adc byte ptr [rax + 0x3b], cl ; ret 0xe473
0x00000200003fb3b9 : clc ; adc byte ptr [rax + rax*2 - 0xa], dh ; ret 0x7502
0x00000200005724f1 : clc ; adc byte ptr [rbp + 0x2b], cl ; ret
0x00000200001364d8 : clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x0000020000485689 : clc ; adc eax, 0x63483b77 ; ret 0x8d48
0x000002000014f33e : clc ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000376e30 : clc ; add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], al ; push rcx ; ret 0x30
0x000002000037287a : clc ; add al, 0x75 ; or ecx, dword ptr [rax - 0x75] ; retf ; call 0x2000036eacd
0x0000020000655214 : clc ; add al, 0x7e ; cmp edi, dword ptr [rax + 1] ; ret
0x00000200004d145e : clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x0000020000421f18 : clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000045ba29 : clc ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000b517e : clc ; add bh, byte ptr [rdx + rax - 0xd] ; ret
0x0000020000162f58 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x000002000015f0ea : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000024ea9 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200000b883f : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; ret
0x00000200000d9e97 : clc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000016e050 : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b41
0x0000020000024f4f : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200005f96eb : clc ; add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x00000200001630f2 : clc ; add byte ptr [rdx], al ; add byte ptr [rax], al ; jb 0x200001630e7 ; xor eax, eax ; ret
0x00000200001d93dc : clc ; add cl, byte ptr [rdi] ; or dword ptr [rdx + 6], 0xfffffff0 ; push rsi ; ret 0x7401
0x000002000006f974 : clc ; add dh, byte ptr [rax + rcx - 0x75] ; ret
0x00000200001140af : clc ; add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ce6bd : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000464fa4 : clc ; add dword ptr [rdx + rbp*8 - 0x75], esi ; ret 0xc8a3
0x00000200001174f9 : clc ; add dword ptr [rdx + rdx - 1], esi ; ret
0x000002000055709e : clc ; add dword ptr [rsi + 0x3b], esi ; ret 0x2274
0x00000200005af9c9 : clc ; add eax, 0xe3c1ca77 ; add al, 0x83 ; ret
0x000002000058fff9 : clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x0000020000132fef : clc ; add eax, dword ptr [rcx + 3] ; ret
0x00000200003fd0f7 : clc ; add eax, dword ptr [rcx - 0x75] ; ret
0x000002000014101c : clc ; add ecx, dword ptr [rax + 3] ; ret 0x8948
0x00000200006d0704 : clc ; add ecx, dword ptr [rbp + 0x23] ; ret
0x0000020000008aa7 : clc ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200003f9483 : clc ; add edi, dword ptr [rdi + 0xd] ; xor eax, eax ; ret
0x00000200000adf23 : clc ; add esi, dword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x000002000065524f : clc ; add esi, dword ptr [rbp - 0x3b] ; xor eax, eax ; ret
0x0000020000140648 : clc ; add esi, dword ptr [rsp + rax + 0x3b] ; ret
0x00000200003718b3 : clc ; add r12, r15 ; mov rcx, r15 ; call 0x2000014db89
0x0000020000076c1e : clc ; add rsp, 0x138 ; sti ; ret
0x00000200001fb02d : clc ; and dword ptr [rdi], ecx ; test byte ptr [rdx - 0x16000b30], bl ; ret
0x0000020000423c08 : clc ; call 0x2000004fa88
0x0000020000423be6 : clc ; call 0x200000522b0
0x000002000048c913 : clc ; call 0x200000b9b04
0x00000200001d5ebe : clc ; call qword ptr [rax - 0x1add4817]
0x00000200001d6780 : clc ; call qword ptr [rax - 0xb0a3d17]
0x0000020000225c10 : clc ; call qword ptr [rax]
0x0000020000656f57 : clc ; call qword ptr [rbx]
0x000002000051e480 : clc ; call r15
0x0000020000090ca5 : clc ; call rdx
0x000002000013b454 : clc ; cdq ; idiv bh ; add rsp, 0x48 ; ret
0x000002000012950a : clc ; cmp dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d520d : clc ; dec dword ptr [rax + 0xb] ; ret 0x894c
0x000002000016ecd8 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000002000015db12 : clc ; dec dword ptr [rax - 0x75] ; je 0x2000015db45 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000049b76b : clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200004c9665 : clc ; dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4466
0x000002000018ed35 : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000126b7a : clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200006ffe4d : clc ; dec dword ptr [rbx + rcx*4 + 0x50] ; and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x0000020000171ef0 : clc ; dec dword ptr [rcx - 0x74b637ab] ; ret
0x00000200000473fc : clc ; dec dword ptr [rdi] ; test byte ptr [rbx], al ; ret
0x00000200004b3e48 : clc ; dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000177e58 : clc ; dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000154874 : clc ; dec rax ; ret
0x00000200004fb10d : clc ; emms ; sal byte ptr [rdx], 0xc0 ; ret
0x0000020000578f24 : clc ; fsubr dword ptr [rdi + rdi*8 + 0x20c48348] ; pop rbx ; ret
0x000002000016be6c : clc ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b45
0x000002000051fc94 : clc ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000401ea7 : clc ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200006d1100 : clc ; ja 0x200006d10fa ; lea eax, dword ptr [r8 - 0x37] ; jmp 0x200006d10d6
0x00000200006c389d : clc ; jb 0x200006c387a ; ret
0x000002000009030f : clc ; jbe 0x20000090381 ; popfq ; ret
0x00000200001aff4b : clc ; jg 0x200001aff84 ; ret 0x789
0x0000020000168957 : clc ; jl 0x200001688e1 ; ret
0x00000200000558f4 : clc ; jmp 0x20000055aef
0x00000200001a636a : clc ; jmp 0x200001a6376
0x00000200001a834d : clc ; jmp 0x200001a8359
0x00000200001a8492 : clc ; jmp 0x200001a849e
0x00000200001a8942 : clc ; jmp 0x200001a894e
0x00000200001a8d12 : clc ; jmp 0x200001a8d1e
0x00000200001a8e75 : clc ; jmp 0x200001a8e81
0x00000200001abb2a : clc ; jmp 0x200001abb36
0x00000200001abc89 : clc ; jmp 0x200001abc95
0x00000200001b8982 : clc ; jmp 0x200001b8996
0x000002000059098e : clc ; jmp 0x200005909c6
0x00000200001c6e79 : clc ; jmp rsi
0x00000200000c7854 : clc ; jne 0x200000c7833 ; ret 0
0x00000200000c7853 : clc ; jne 0x200000c7834 ; ret 0
0x000002000010ec11 : clc ; jne 0x2000010ebcf ; ret
0x000002000011033c : clc ; jne 0x200001102dd ; mov al, 1 ; ret
0x00000200004af1af : clc ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x00000200006d648a : clc ; lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x000002000069db1c : clc ; lea r13, qword ptr [rax + 8] ; mov rcx, r13 ; call r9
0x00000200003c8c20 : clc ; mov al, 0x24 ; add byte ptr [rbx], bh ; ret 0x8b44
0x0000020000485827 : clc ; mov byte ptr [r11 - 0x45], 0xe0 ; call 0x200000b4339
0x0000020000646bb2 : clc ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x000002000001a994 : clc ; mov eax, 0xc000000d ; ret
0x0000020000132af8 : clc ; mov edx, eax ; test r8d, r8d ; jne 0x20000132b0b ; ret
0x0000020000576d85 : clc ; mov rbx, rcx ; call 0x2000019a573
0x0000020000576d84 : clc ; mov rbx, rcx ; call 0x2000019a574
0x000002000064ad51 : clc ; mov rcx, qword ptr [rbx + 8] ; mov rdx, r14 ; call r11
0x0000020000448f44 : clc ; mov rcx, rdi ; call 0x20000072e47
0x000002000069e3af : clc ; mov rdx, qword ptr [rcx] ; call r8
0x000002000069fd36 : clc ; mov rdx, qword ptr [rcx] ; call r9
0x000002000069debf : clc ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200004e1ebe : clc ; mov rsi, rdx ; call 0x20000105b7b
0x000002000014b508 : clc ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000448944 : clc ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006dc05a : clc ; or al, 0 ; add byte ptr [rbx + 0x2341ffca], al ; ret 0xe0c1
0x00000200000e980c : clc ; or byte ptr [rax + rdi + 0x41], dh ; mov eax, eax ; ret
0x00000200001c6497 : clc ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200001c60ba : clc ; or byte ptr [rcx - 0x7d], cl ; ret 0x4102
0x000002000012488f : clc ; or byte ptr [rsp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003ab274 : clc ; or dword ptr [rbx + rbp - 0x75], esi ; ret
0x0000020000102278 : clc ; or eax, dword ptr [rax] ; add bl, ch ; ret
0x000002000041b580 : clc ; out -1, eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000e77c6 : clc ; popfq ; add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret
0x000002000014672c : clc ; push -0x7cb7ffd9 ; ret 0x4808
0x000002000059cdc3 : clc ; push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x0000020000107be7 : clc ; push qword ptr [rsp + rbp + 0x48] ; mov ecx, eax ; call 0x200003c3e99
0x0000020000421c38 : clc ; push qword ptr [rsp - 0x75] ; enter 0x41e8, -0x1d ; ret 0x48ff
0x00000200001528b6 : clc ; push qword ptr [rsp - 0x75] ; ror byte ptr [rax - 0x75], 0x94 ; ret
0x00000200005a7a24 : clc ; push rax ; jmp 0x200005a79ed
0x000002000035d0a5 : clc ; push rsi ; ret
0x000002000035d11c : clc ; push rsi ; ret 0xf02
0x0000020000479c54 : clc ; pushfq ; ret 0xffff
0x00000200000739a6 : clc ; ret
0x00000200000a389f : clc ; ret 0
0x00000200003f46b7 : clc ; ret 0x48ff
0x0000020000669b84 : clc ; ret 0x49ff
0x000002000048f9ef : clc ; ret 0xbfff
0x0000020000090f17 : clc ; ret 0xf958
0x00000200001ed229 : clc ; ret 0xfff2
0x00000200001d6554 : clc ; ret 0xfff8
0x000002000019c019 : clc ; sbb dword ptr [rdi + 6], esi ; movzx eax, cx ; sub eax, edx ; ret
0x000002000019c030 : clc ; sbb dword ptr [rsi - 0x17], esi ; or eax, 0xffffffff ; ret
0x00000200006c038d : clc ; sbb eax, 0xff416673 ; ret
0x0000020000140874 : clc ; stosb byte ptr [rdi], al ; or eax, dword ptr [rax] ; ret
0x00000200005bb539 : clc ; sub dword ptr [rdx - 0x10], esi ; or eax, 0xffffffff ; ret
0x0000020000083858 : clc ; sysenter
0x000002000011a1e3 : clc ; xor eax, eax ; ret
0x00000200004e8bd4 : clc ; xor rcx, rsp ; call 0x200000a4e56
0x00000200004e8bd3 : clc ; xor rcx, rsp ; call 0x200000a4e57
0x00000200004cf6ee : cld ; add al, byte ptr [rax] ; add al, al ; call 0x1ffc34e1b03
0x000002000060e133 : cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x0000020000053fb7 : cld ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000ca003 : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x000002000054d7af : cld ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200006fed3a : cld ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000020000569a7d : cld ; add byte ptr [rcx - 0x75], al ; add byte ptr [rax - 0x77], cl ; add edi, edi ; ret 0x8349
0x000002000003a8e7 : cld ; add dword ptr [rax], eax ; add byte ptr [rbp + 0xc8bff43], cl ; ret 0x48b
0x0000020000472d56 : cld ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000466d46 : cld ; add eax, edx ; ret
0x00000200000d9729 : cld ; add r8, r12 ; call r8
0x0000020000399dae : cld ; add rsp, 0x28 ; ret
0x0000020000126b79 : cld ; clc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005dd7b0 : cld ; cmc ; call qword ptr [rax - 0x253d7417]
0x000002000011735f : cld ; cmove rax, r8 ; mov qword ptr [rcx + 0x50], rax ; ret
0x000002000060d1d1 : cld ; cmp dl, r8b ; setb al ; ret
0x000002000004d68d : cld ; cmp rax, rcx ; jne 0x2000004d66d ; xor eax, eax ; ret
0x00000200001b8ed3 : cld ; cmp rcx, r8 ; jb 0x200001b8ecb ; ret
0x00000200001b8ed2 : cld ; cmp rcx, r8 ; jb 0x200001b8ecc ; ret
0x00000200003962d0 : cld ; dec dword ptr [rax + 0x3b] ; ret 0x1177
0x00000200004f238c : cld ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000013c12b : cld ; dec dword ptr [rax - 0x75] ; ret 0xaee9
0x00000200003bd65e : cld ; dec dword ptr [rax - 0x75] ; retf ; call rsi
0x000002000043b75d : cld ; dec dword ptr [rax - 0x77] ; or byte ptr [r8 + 0x3b], r9b ; ret
0x00000200007096cf : cld ; dec dword ptr [rax - 0x7d] ; ret 0x4410
0x00000200001be763 : cld ; dec dword ptr [rcx - 9] ; ret 0xfff
0x00000200004c2be6 : cld ; dec r9 ; jne 0x200004c2bd1 ; ret
0x00000200004c2be5 : cld ; dec r9 ; jne 0x200004c2bd2 ; ret
0x00000200006d0c2c : cld ; enter 0x48ff, -0x7d ; ret 0x4850
0x000002000018d005 : cld ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x2372
0x000002000018d023 : cld ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x573
0x000002000018d014 : cld ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf73
0x00000200001e86cf : cld ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret 0x23e9
0x00000200004e02a2 : cld ; inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200005ad75f : cld ; inc dword ptr [rbx - 0x74bbffde] ; ret
0x000002000038f271 : cld ; inc dword ptr [rcx - 0xa] ; ret
0x00000200000a64a0 : cld ; jmp 0x200000a6219
0x00000200003fbddc : cld ; jmp qword ptr [rcx]
0x00000200001649aa : cld ; mov eax, 0xf9eb ; mov word ptr [rdx], ax ; ret
0x0000020000490776 : cld ; mov esi, 0xc48348ff ; pop rbx ; ret
0x0000020000579f2c : cld ; mov rax, rcx ; ret
0x000002000007c65e : cld ; or eax, r8d ; wrmsr ; ret 0
0x0000020000050720 : cld ; push rsi ; ret
0x000002000007398e : cld ; ret
0x000002000022cc60 : cld ; ret 0x23
0x00000200004475ad : cld ; ret 0x33ff
0x00000200003f4363 : cld ; ret 0x48ff
0x000002000063b574 : cld ; ret 0x4c1f
0x00000200005137c4 : cld ; ret 0x4cff
0x00000200004c25f6 : cld ; ret 0x90ff
0x0000020000180040 : cld ; ret 0xffef
0x0000020000006eeb : cld ; sub byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200006c9520 : cld ; sub eax, 0x2349ffc0 ; ret
0x0000020000081361 : cld ; test al, 0x92 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000007c79f : cld ; wrmsr ; ret 0
0x00000200000c2037 : cld ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013bd8a : cli ; adc al, 0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000018185f : cli ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000057b975 : cli ; adc byte ptr [rdx - 0x10], dh ; xor al, al ; ret
0x0000020000569a04 : cli ; adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x000002000013e9bb : cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200005a459a : cli ; adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200005a459e
0x000002000063f577 : cli ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000038ec1e : cli ; add al, 0 ; or dword ptr [rax], eax ; je 0x2000038ec31 ; xor al, al ; ret
0x000002000019ca10 : cli ; add al, 0x8b ; ret 0xe8c1
0x00000200004a106f : cli ; add al, 0xf ; test cl, dl ; ret
0x000002000035ee67 : cli ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200004adbce : cli ; add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x0000020000363f6a : cli ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x00000200006551ad : cli ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x200006551c0 ; xor eax, eax ; ret
0x00000200001a0b0c : cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x00000200004d4e73 : cli ; add cl, byte ptr [rdi] ; test byte ptr [rdi - 0xa000000], bl ; ret
0x000002000052b6e9 : cli ; add dh, byte ptr [rbp + 8] ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x2000052b70c
0x0000020000564897 : cli ; add dh, byte ptr [rbp + 8] ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x200005648ba
0x000002000049a1d5 : cli ; add dh, byte ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x0000020000498351 : cli ; add dh, byte ptr [rdx + rax - 0xd] ; ret
0x0000020000497903 : cli ; add dh, byte ptr [rdx - 0x5a] ; mov al, 2 ; ret
0x0000020000018914 : cli ; add dword ptr [rax + rdx + 0x48], esi ; add esp, 0x28 ; ret
0x000002000019faae : cli ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000114e59 : cli ; add dword ptr [rdi + rcx - 0x75], esi ; ret
0x0000020000147b85 : cli ; add eax, 0xc033f072 ; ret
0x0000020000008da6 : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001eb143 : cli ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x0000020000027cc5 : cli ; add ecx, dword ptr [rax - 1] ; ret 0x8348
0x000002000004c012 : cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004c8c7a : cli ; add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200004a1078 : cli ; add ecx, dword ptr [rdi] ; test al, cl ; ret
0x00000200004b1f5d : cli ; add esi, dword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x00000200004b1f8d : cli ; add esi, dword ptr [rdx + rax - 0xd] ; ret
0x000002000011b9b9 : cli ; add esi, dword ptr [rsp + rdx*8 + 0x48] ; add esp, 0x28 ; ret
0x00000200000194e0 : cli ; add rsp, 0x20 ; pop rbp ; ret
0x000002000013ccf5 : cli ; add rsp, 8 ; ret
0x000002000010a89d : cli ; and qword ptr [rcx], 0 ; ret
0x0000020000549145 : cli ; call 0x2000016af14
0x00000200001e8192 : cli ; call qword ptr [rax - 0x123d5a17]
0x00000200001e81a8 : cli ; call qword ptr [rax - 0x123d7017]
0x00000200001e8230 : cli ; call qword ptr [rax - 0x123df817]
0x00000200001d8010 : cli ; call qword ptr [rax - 0x130e3d17]
0x00000200001ef8f1 : cli ; call qword ptr [rax - 0xc3d7d17]
0x00000200001ecf14 : cli ; cmc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000064c9b9 : cli ; cmp al, 0x72 ; ret
0x000002000011e3c2 : cli ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000011e37d : cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200001f8e92 : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; jmp rsp
0x0000020000183ad5 : cli ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000055141 : cli ; dec dword ptr [rbx - 0x6b74b73f] ; ret 0xf880
0x00000200000ef6a5 : cli ; dec dword ptr [rdi] ; test byte ptr [rax - 0x75000000], bl ; ret 0x41f0
0x00000200005639fb : cli ; inc dword ptr [rax + rax*8 + 0x458b1874] ; ret
0x000002000013e762 : cli ; inc dword ptr [rax + rax*8 - 0x7eb6ec8c] ; ret 0x1000
0x00000200006ca039 : cli ; inc dword ptr [rcx - 9] ; ret
0x000002000010b900 : cli ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200006be741 : cli ; jmp qword ptr [rax]
0x00000200006be716 : cli ; jmp rax
0x000002000052701a : cli ; jmp rdx
0x000002000040fbf3 : cli ; jp 0x2000040fc74 ; or al, byte ptr [rdi + rcx - 0x49] ; ret 0x8341
0x00000200006652d2 : cli ; lodsd eax, dword ptr [rsi] ; ret 0x4cff
0x000002000009d689 : cli ; mov byte ptr [rbp - 0x3a], ah ; xchg eax, edi ; ret
0x0000020000643f98 : cli ; mov dword ptr [r8], r9d ; ret
0x0000020000592aaf : cli ; mov ebx, 0xc0000002 ; call 0x2000001ed88
0x000002000000e1e3 : cli ; mov ebx, ecx ; call 0x2000000e0a5
0x00000200001dd95d : cli ; mov esp, esi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000076661 : cli ; mov rcx, qword ptr [rip + 0x2d6d6f] ; call qword ptr [rcx]
0x0000020000075f0a : cli ; mov rcx, qword ptr [rip + 0x2d74c6] ; call qword ptr [rcx]
0x0000020000075bb8 : cli ; mov rcx, qword ptr [rip + 0x2d7818] ; call qword ptr [rcx]
0x00000200000757ee : cli ; mov rcx, qword ptr [rip + 0x2d7be2] ; call qword ptr [rcx]
0x000002000007546e : cli ; mov rcx, qword ptr [rip + 0x2d7f62] ; call qword ptr [rcx]
0x0000020000074fba : cli ; mov rcx, qword ptr [rip + 0x2d8416] ; call qword ptr [rcx]
0x0000020000074d60 : cli ; mov rcx, qword ptr [rip + 0x2d8670] ; call qword ptr [rcx]
0x0000020000073ebd : cli ; mov rcx, qword ptr [rip + 0x2d9513] ; call qword ptr [rcx]
0x000002000007136d : cli ; mov rcx, qword ptr [rip + 0x2dc063] ; call qword ptr [rcx]
0x00000200004890dc : cli ; mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x00000200004e68d5 : cli ; mov rsi, rcx ; xor ebx, ebx ; call 0x20000142b60
0x0000020000090877 : cli ; movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1fffff59d0d
0x0000020000169138 : cli ; or al, 0x8b ; ret 0xe8c1
0x00000200001c64f7 : cli ; or byte ptr [rcx - 0x78], al ; push rbx ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200001c611a : cli ; or byte ptr [rcx - 0x78], al ; push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000200004000aa : cli ; or ch, cl ; push rsi ; ret
0x000002000050b7ba : cli ; or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x0000020000068445 : cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000b8b31 : cli ; push qword ptr [rax + rbx - 0x75] ; ret 0x41f0
0x0000020000122efe : cli ; push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x0000020000173dbf : cli ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200000cdf39 : cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000010181d : cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x45f0
0x0000020000101e4b : cli ; push rsi ; ret
0x0000020000123041 : cli ; push rsi ; ret 0x7401
0x000002000007399a : cli ; ret
0x00000200003f4527 : cli ; ret 0x48ff
0x00000200004753b7 : cli ; ret 0x4cff
0x000002000043b297 : cli ; ret 0xe9ff
0x000002000063f5b2 : cli ; ret 0xebff
0x00000200005e0042 : cli ; ret 0xffa9
0x00000200003df956 : cli ; ret 0xffc8
0x0000020000364552 : cli ; ret 0xfff1
0x0000020000660096 : cli ; ret 0xffff
0x000002000009a2ac : cli ; sahf ; ret
0x000002000048fd4b : cli ; sbb al, 0x8b ; ret 0xe8c1
0x000002000008e85f : cli ; sbb bl, bh ; ret 0xda8
0x000002000001b016 : cli ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x000002000064c232 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c24f
0x000002000064c2dd : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c2fa
0x000002000064c395 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c3b2
0x000002000064c466 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c483
0x000002000061788d : cli ; stosb byte ptr [rdi], al ; inc dword ptr [rbx + rcx*4 + 0x5b] ; or byte ptr [rcx - 0xa], al ; ret
0x0000020000448342 : cli ; stosb byte ptr [rdi], al ; ret 0x48ff
0x00000200003964f4 : cli ; sub byte ptr [rax], al ; ret
0x000002000059efab : cli ; xor edi, edi ; xor ebp, ebp ; call 0x2000005b1f7
0x00000200002128c9 : clts ; add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x000002000025a3dd : clts ; add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x0000020000240b15 : clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x00000200002490b5 : clts ; add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x00000200002087d1 : clts ; add byte ptr [rdi], cl ; push rsp ; or byte ptr [rax], al ; sysenter
0x00000200002179dd : clts ; add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000254d1e : clts ; sysenter
0x000002000007edf5 : cmc ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000002000040c089 : cmc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000200003c591e : cmc ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fd15], al ; ret 2
0x000002000003ff53 : cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x0000020000186700 : cmc ; call 0x2000037c3f8
0x00000200001866ff : cmc ; call 0x2000037c3f9
0x00000200001e803d : cmc ; call qword ptr [rax - 0x18123d17]
0x00000200005dd7b1 : cmc ; call qword ptr [rax - 0x253d7417]
0x00000200006352fd : cmc ; cli ; ret
0x00000200004dbb48 : cmc ; cmp eax, edx ; cmovae eax, edx ; ret
0x00000200001e6491 : cmc ; dec dword ptr [rax + 0x33] ; ret 0x8549
0x00000200001de9a9 : cmc ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x0000020000117385 : cmc ; dec dword ptr [rax + 0xf] ; ret 0xd7eb
0x00000200001ecf9d : cmc ; dec dword ptr [rax - 0x73] ; and al, 0x20 ; call 0x200000a91e9
0x00000200001f0279 : cmc ; dec dword ptr [rax - 0x73] ; or eax, 0xffebccaa ; call rax
0x000002000016fbae : cmc ; dec dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000020000146fe6 : cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000a46a5 : cmc ; dec dword ptr [rax - 0x77] ; add r14b, r14b ; ret
0x00000200004d516c : cmc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000118216 : cmc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001f51a8 : cmc ; dec dword ptr [rbp + 0x3b] ; ret
0x0000020000482034 : cmc ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200000a4557 : cmc ; dec dword ptr [rbp - 0x75] ; lodsb al, byte ptr [rsi] ; ret
0x00000200001eed9e : cmc ; dec dword ptr [rbx + 0x5892043] ; ret
0x00000200005dd7c7 : cmc ; dec dword ptr [rbx + 0xfc085f8] ; mov byte ptr [rcx], dh ; ret 0xffda
0x00000200001f5034 : cmc ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001e8135 : cmc ; dec esp ; xor ebx, ebx ; jmp 0x20000144427
0x00000200001e2761 : cmc ; in eax, dx ; push rsi ; ret
0x0000020000393657 : cmc ; inc dword ptr [rax] ; jb 0x200003756a6 ; ret
0x0000020000381a32 : cmc ; inc dword ptr [rbp + rcx*4 + 0x7f] ; add dword ptr [rdi + rcx + 0x20], eax ; ret
0x00000200001e6d17 : cmc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001e4fc0 : cmc ; inc dword ptr [rcx - 0x75] ; ret 0xc933
0x00000200000cb381 : cmc ; inc dword ptr [rcx - 0x7d] ; ret 0x48e0
0x00000200001f4fae : cmc ; inc dword ptr [rcx - 0xa] ; ret 0x743f
0x0000020000392f50 : cmc ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000004184d : cmc ; jmp 0x20000041118
0x000002000053803f : cmc ; lahf ; mov ebp, 0x1d8a44ff ; salc ; ret 0xffd9
0x00000200006005cc : cmc ; leave ; push rsi ; ret
0x00000200004ebe2f : cmc ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200006f91ba : cmc ; mov ecx, 0x2ff ; add byte ptr [rcx - 0xa], al ; ret
0x000002000039362c : cmc ; push qword ptr [rbp + 7] ; ret
0x0000020000115323 : cmc ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000115390 ; ret
0x0000020000388091 : cmc ; push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0x3d ; ret
0x0000020000109dfd : cmc ; push rsi ; ret
0x0000020000076cfd : cmc ; rcr rax, 1 ; sar rax, 0x14 ; ret
0x00000200000202d3 : cmc ; ret
0x00000200003f4a01 : cmc ; ret 0x48ff
0x000002000043c6da : cmc ; ret 0xe9ff
0x000002000043c6fa : cmc ; ret 0xebff
0x0000020000489509 : cmc ; ret 0xf0ff
0x0000020000402d17 : cmc ; ret 0xffe6
0x00000200000f8b57 : cmc ; ret 0xfffa
0x00000200003df2e3 : cmc ; xchg eax, ebx ; ret 0xebff
0x000002000006bc87 : cmc ; xchg eax, ecx ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000014686c : cmova eax, ecx ; mov dword ptr [rdx + 0x124], eax ; ret
0x00000200005842f8 : cmova eax, ecx ; ret
0x00000200005137bc : cmova ebx, ebp ; mov rdx, rbx ; call 0x200001434b9
0x0000020000100a89 : cmova ecx, eax ; mov eax, ecx ; ret
0x00000200001605d5 : cmova ecx, edx ; mov rax, r9 ; ret
0x00000200000fe56a : cmova edx, ecx ; mov rax, r10 ; ret
0x00000200000fe569 : cmova r10, rcx ; mov rax, r10 ; ret
0x00000200001605d4 : cmova r9, r10 ; mov rax, r9 ; ret
0x00000200005842f7 : cmova rax, rcx ; ret
0x0000020000100a88 : cmova rcx, rax ; mov eax, ecx ; ret
0x00000200004dbb4b : cmovae eax, edx ; ret
0x0000020000127821 : cmovb eax, ecx ; mov qword ptr [r8 + 0x20], rax ; ret
0x00000200006e395c : cmovb ecx, dword ptr [rbp - 0x36cce1ec] ; call r9
0x000002000049bb90 : cmovb edx, ecx ; mov al, dl ; ret
0x00000200004bb28b : cmovb esp, eax ; jmp 0x200004bb151
0x0000020000127820 : cmovb rax, rcx ; mov qword ptr [r8 + 0x20], rax ; ret
0x00000200001e7a1e : cmovbe eax, eax ; ret
0x00000200001e7a1d : cmovbe eax, r8d ; ret
0x00000200003a6247 : cmove eax, eax ; mov eax, r8d ; ret
0x0000020000117361 : cmove eax, eax ; mov qword ptr [rcx + 0x50], rax ; ret
0x000002000005217a : cmove eax, eax ; ret
0x000002000056eb82 : cmove eax, ecx ; add rsp, 0x28 ; ret
0x00000200003ab599 : cmove eax, ecx ; add rsp, 0x38 ; ret
0x0000020000499e4d : cmove eax, ecx ; add rsp, 0x48 ; ret
0x000002000000a2e4 : cmove eax, ecx ; mov rax, r8 ; ret
0x0000020000480d6a : cmove eax, ecx ; ret
0x00000200003c0044 : cmove eax, ecx ; test eax, eax ; cmove eax, r8d ; ret
0x00000200004cd43d : cmove eax, ecx ; test r8, r8 ; jne 0x200004cd437 ; ret
0x00000200001620b6 : cmove eax, edx ; and dword ptr [rip + 0x1f4fb1], eax ; ret
0x00000200000da7f4 : cmove eax, edx ; jmp 0x200000da7e7
0x00000200005070fb : cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x0000020000150616 : cmove eax, edx ; ret
0x000002000049fa09 : cmove eax, esi ; jmp 0x200004bbc51
0x0000020000052179 : cmove eax, r8d ; ret
0x000002000041da43 : cmove ebp, dword ptr [rbx] ; ret 0xf749
0x0000020000362df1 : cmove edx, ebx ; mov al, r10b ; ret
0x0000020000025867 : cmove edx, ecx ; mov rax, rdx ; ret
0x0000020000362df0 : cmove r10d, r11d ; mov al, r10b ; ret
0x000002000000a2e3 : cmove r8, rcx ; mov rax, r8 ; ret
0x00000200003a6246 : cmove r8d, eax ; mov eax, r8d ; ret
0x0000020000117360 : cmove rax, r8 ; mov qword ptr [rcx + 0x50], rax ; ret
0x00000200000da7f3 : cmove rax, rdx ; jmp 0x200000da7e8
0x0000020000025866 : cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000059000c : cmovg eax, eax ; ret
0x00000200004fbb3e : cmovg eax, ecx ; add rsp, 0x28 ; ret
0x0000020000154859 : cmovg eax, ecx ; ret
0x000002000059000b : cmovg eax, r8d ; ret
0x0000020000370b24 : cmovge eax, dword ptr [rbx] ; ret
0x00000200004fe023 : cmovne eax, ecx ; add rsp, 0x28 ; ret
0x000002000001fce7 : cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200000e450c : cmovne eax, ecx ; ret
0x0000020000117388 : cmovne eax, edx ; jmp 0x20000117366
0x00000200001c43be : cmovne eax, edx ; ret
0x0000020000421315 : cmovne ebp, ebp ; jmp 0x20000421289
0x00000200003bad6e : cmovne ecx, dword ptr [rbx + 0x58850fe5] ; ret 0xd
0x000002000065c40d : cmovne ecx, eax ; mov eax, ecx ; ret
0x0000020000576d83 : cmovne edi, eax ; mov rbx, rcx ; call 0x2000019a575
0x00000200001590e3 : cmovne edx, eax ; mov eax, edx ; ret
0x00000200001590e2 : cmovne edx, r8d ; mov eax, edx ; ret
0x00000200003bad6d : cmovne r9d, dword ptr [r11 + 0x58850fe5] ; ret 0xd
0x0000020000117387 : cmovne rax, rdx ; jmp 0x20000117367
0x000002000036238c : cmovno eax, dword ptr [rbx + 0x5ee80fe0] ; ret
0x0000020000137ee8 : cmovno edi, dword ptr [rbx] ; ret 0x8772
0x0000020000157cff : cmovno edi, edi ; ret 0x8348
0x000002000018a7a5 : cmovno esi, edi ; ret
0x000002000061b52e : cmovno esi, esi ; ret 0x7401
0x0000020000137ee7 : cmovno r15d, dword ptr [r11] ; ret 0x8772
0x0000020000490f8b : cmovns ebp, dword ptr [rbx] ; ret
0x000002000017e6cc : cmovns ecx, dword ptr [rbx + 0x440f480e] ; ret 0x8948
0x0000020000652d74 : cmovns ecx, dword ptr [rbx - 0x3774b72a] ; call r15
0x00000200001b3e0a : cmovns edi, dword ptr [rbx] ; ret
0x0000020000154ec0 : cmovns edi, edi ; ret
0x00000200001b3e01 : cmovns esp, dword ptr [rbx] ; ret
0x000002000002b212 : cmovs eax, dword ptr [r11 - 0x7cb7cf3f] ; ret 0x4908
0x00000200004fd709 : cmovs eax, dword ptr [rbx + 0x34910c0] ; ret 0x3b48
0x000002000002b213 : cmovs eax, dword ptr [rbx - 0x7cb7cf3f] ; ret 0x4908
0x0000020000389c14 : cmovs eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008f2ab : cmovs ebp, dword ptr [rbx + rbx*8 - 0x41] ; xlatb ; mov cl, 0xbc ; ret
0x000002000048a933 : cmovs ebp, eax ; call 0x200000b9b06
0x00000200000b8019 : cmovs ecx, dword ptr [rbp - 0x74b701b6] ; ret 0x49f0
0x0000020000366901 : cmovs ecx, dword ptr [rbp - 0x74bbd1ec] ; ret
0x0000020000600cf1 : cmovs ecx, dword ptr [rbp - 0x74bbefb0] ; ret
0x00000200003db10b : cmovs ecx, dword ptr [rbp - 0x74be0eaf] ; ret 0x8d4f
0x00000200005e03fb : cmovs ecx, dword ptr [rbx + 0x408b3843] ; sub byte ptr [rbx], al ; ret 0x8948
0x000002000019dad9 : cmovs ecx, dword ptr [rbx + 0x4118247c] ; mov eax, ebx ; ret
0x00000200000138d0 : cmovs ecx, dword ptr [rbx - 0x173eb73f] ; cmp byte ptr [rbx], dh ; ret 0xfa8
0x0000020000525e99 : cmovs ecx, dword ptr [rbx - 0x7487db84] ; ret
0x00000200000bbb19 : cmovs ecx, dword ptr [rbx - 0x74bbf7a9] ; ret
0x000002000037239e : cmovs ecx, dword ptr [rbx] ; ret 0x894c
0x00000200001211e3 : cmovs ecx, dword ptr [rbx] ; ret 0x8b48
0x000002000000673d : cmovs ecx, edx ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000012d7b7 : cmovs edi, dword ptr [rbx] ; ret
0x00000200006038f9 : cmovs edi, dword ptr [rbx] ; ret 0xa77
0x00000200001a1915 : cmovs edi, edi ; ret
0x000002000062fc4a : cmovs edi, edi ; ret 0x3966
0x00000200001b3d59 : cmovs esp, dword ptr [rbx] ; ret
0x0000020000119912 : cmovs esp, dword ptr [rbx] ; ret 0xba48
0x000002000048a932 : cmovs r13d, eax ; call 0x200000b9b07
0x00000200004cd8e2 : cmp ah, byte ptr [rcx] ; ret
0x000002000070d3ba : cmp ah, byte ptr [rsi - 0x74bb003c] ; ret 0x8348
0x0000020000634a44 : cmp al, 0 ; add bh, bh ; ret
0x00000200004e4471 : cmp al, 0 ; add byte ptr [rax], al ; ret
0x0000020000232ab2 : cmp al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x3c
0x000002000005aa51 : cmp al, 0 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000118514 : cmp al, 0 ; jne 0x200001f11e9 ; ret
0x0000020000232aae : cmp al, 0 ; ret 0x3c
0x0000020000190ba5 : cmp al, 0 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000aa83f : cmp al, 0x14 ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret
0x00000200001dca7f : cmp al, 0x17 ; add al, ch ; leave ; ret 0xfff1
0x000002000046913f : cmp al, 0x19 ; add byte ptr [rax - 9], cl ; ret
0x000002000012303f : cmp al, 0x1a ; cli ; push rsi ; ret 0x7401
0x00000200000cc873 : cmp al, 0x24 ; mov al, 1 ; add rsp, 8 ; ret
0x00000200000cc8b1 : cmp al, 0x24 ; xor al, al ; add rsp, 8 ; ret
0x0000020000550700 : cmp al, 0x27 ; mov dl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000395b4 : cmp al, 0x3b ; fmul dword ptr [rdi] ; ret
0x0000020000003b97 : cmp al, 0x3b ; int1 ; jb 0x20000003bed ; inc edx ; jmp 0x20000003b81
0x00000200001966fb : cmp al, 0x3b ; ret
0x000002000012998c : cmp al, 0x59 ; or al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000649188 : cmp al, 0x68 ; add al, 0 ; add rsp, 0x38 ; ret
0x00000200006695ec : cmp al, 0x6b ; ret 0xe8ff
0x000002000064c96f : cmp al, 0x72 ; out dx, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064c9ba : cmp al, 0x72 ; ret
0x0000020000071921 : cmp al, 0x75 ; add ecx, dword ptr [rcx + 0x1d39045e] ; ret
0x0000020000666e30 : cmp al, 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; mov ch, 0x92 ; ret 0x48ff
0x0000020000666088 : cmp al, 0x8b ; ret 0xc7ff
0x0000020000523134 : cmp al, 0x9b ; ret 0x89ff
0x0000020000664555 : cmp al, 0xc1 ; call rcx
0x000002000066452e : cmp al, 0xc1 ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8b44
0x00000200005eec0f : cmp al, 0xc6 ; lock dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000011e90d : cmp al, 0xd ; je 0x2000011e8ee ; mov eax, 0xc000000d ; ret
0x0000020000472b10 : cmp al, 0xe ; ret
0x0000020000509b00 : cmp al, 0xe8 ; ret 0xe834
0x00000200004fb10c : cmp al, 0xf ; ja 0x200004fb0d8 ; xor al, al ; ret
0x00000200000bd042 : cmp al, 0xf6 ; ret
0x00000200005fed18 : cmp al, 0xf7 ; push rsi ; ret
0x0000020000183ad4 : cmp al, 0xfa ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003e1579 : cmp al, 0xff ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000006053c : cmp al, 1 ; jae 0x20000060549 ; mov al, cl ; ret
0x0000020000158e26 : cmp al, 1 ; sete cl ; mov eax, ecx ; ret
0x00000200001c5654 : cmp al, 2 ; jae 0x200001c5661 ; xor eax, eax ; ret
0x000002000066510f : cmp al, 2 ; jbe 0x20000665112 ; mov eax, 0xc0000001 ; ret
0x0000020000049381 : cmp al, 2 ; je 0x2000004938e ; mov eax, ecx ; ret
0x0000020000023547 : cmp al, 3 ; jne 0x20000023569 ; mov rcx, rsi ; call r14
0x00000200003f3970 : cmp al, 6 ; ret
0x00000200003aebe6 : cmp al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x00000200001c7eb9 : cmp al, byte ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001f7ec6 : cmp al, byte ptr [rax] ; nop ; jmp 0x20000034133
0x00000200001f7f53 : cmp al, byte ptr [rax] ; nop ; jmp 0x2000003420c
0x000002000069d31e : cmp al, byte ptr [rbp + 3] ; ret
0x0000020000465c93 : cmp al, byte ptr [rbp - 0x75] ; fmul dword ptr [rcx - 0x7d] ; ret
0x00000200000fe8ea : cmp al, byte ptr [rbx - 0x3e74c01f] ; ret
0x00000200003babca : cmp al, byte ptr [rcx + 0x2b] ; ret
0x00000200000e6a93 : cmp al, byte ptr [rdi + rcx + 0x20] ; ret
0x000002000022cc59 : cmp al, byte ptr [rsi] ; sub byte ptr [rbx], bh ; add spl, r15b ; ret 0x23
0x0000020000369d6f : cmp al, ch ; ret
0x0000020000549ce8 : cmp al, ch ; ret 0xb144
0x00000200004cd218 : cmp al, ch ; ret 0xbebe
0x000002000062446f : cmp al, ch ; sti ; call 0x1ffc3ee4422
0x0000020000590a87 : cmp al, cl ; jae 0x20000590a55 ; ret
0x00000200001172fb : cmp al, dl ; jne 0x2000011730a ; mov rax, rcx ; ret
0x00000200001172fa : cmp al, dl ; jne 0x2000011730b ; mov rax, rcx ; ret
0x0000020000590a86 : cmp al, r9b ; jae 0x20000590a56 ; ret
0x000002000019c02e : cmp ax, 0x19 ; jbe 0x2000019c026 ; or eax, 0xffffffff ; ret
0x0000020000018047 : cmp ax, dx ; jne 0x20000018058 ; mov rax, rcx ; ret
0x00000200007071bf : cmp ax, r8w ; jle 0x200007071d0 ; mov al, 1 ; ret
0x0000020000141976 : cmp ax, word ptr [r8] ; jb 0x20000141965 ; ret
0x000002000008b998 : cmp bh, 0x5c ; pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x00000200001ae4c2 : cmp bh, 7 ; add byte ptr [rbx], al ; ret 0xc123
0x000002000049b76a : cmp bh, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000050b6f8 : cmp bh, al ; ret
0x000002000008c59e : cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x0000020000008dd8 : cmp bh, bh ; ret
0x000002000057cc26 : cmp bh, bh ; ret 0x8349
0x00000200001c3234 : cmp bh, bh ; ror byte ptr [rbx + rdi - 0x3e], 0x7c ; loopne 0x200001c3239 ; ret
0x000002000041f24a : cmp bh, byte ptr [rdi - 0xd] ; push rdi ; ret 0x3fc
0x0000020000101ecc : cmp bh, byte ptr [rdx - 0x74b7fff2] ; ret
0x000002000036b1d2 : cmp bh, byte ptr [rsi - 0x9be0002] ; ret
0x000002000039c9fc : cmp bh, dh ; ret
0x0000020000130997 : cmp bl, al ; inc r10 ; jmp 0x20000130948
0x000002000046729d : cmp bl, al ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200000e99b4 : cmp bl, al ; xor eax, eax ; ret
0x00000200000297da : cmp bl, byte ptr [rax + rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006eb433 : cmp bl, byte ptr [rcx - 0x3b7cb701] ; pop rax ; ret
0x000002000004727e : cmp bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d4c15 : cmp bl, byte ptr [rsi + 0x20] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004263a5 : cmp bl, ch ; mov al, 0x48 ; lea edx, dword ptr [rbx + 0x18] ; call rax
0x00000200005ebf15 : cmp byte ptr [ecx + 0x4ce93047], cl ; ret 0xffe5
0x0000020000175360 : cmp byte ptr [r10], al ; call r8
0x0000020000047221 : cmp byte ptr [r11 + 0xbead1d0], r9b ; sal dh, 1 ; ret 0xf01
0x00000200004807e5 : cmp byte ptr [r11], r15b ; ret 0x430f
0x000002000000805a : cmp byte ptr [r11], r8b ; ret
0x00000200006cca1c : cmp byte ptr [r13 + 0x2b], r8b ; ret 0x8b4a
0x0000020000383610 : cmp byte ptr [r14 + rax + 0x48], sil ; add esp, 0x20 ; pop rbx ; ret
0x000002000019c90f : cmp byte ptr [r14 - 0x77], spl ; ret
0x000002000003115d : cmp byte ptr [r8 + 0x3b], r9b ; ret 0x147c
0x000002000057d658 : cmp byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x00000200001cd7d5 : cmp byte ptr [r8 - 0x73], cl ; push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000004922d : cmp byte ptr [r8 - 0x73], cl ; push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0xd74
0x000002000059cbd4 : cmp byte ptr [r8 - 0x77], cl ; or byte ptr [rcx - 0x75], al ; ret
0x00000200000dfafc : cmp byte ptr [r8 - 0x77], cl ; ret
0x00000200005b9ad1 : cmp byte ptr [r8 - 1], cl ; ret
0x00000200003a3663 : cmp byte ptr [r9 + 0x33], r9b ; ret
0x0000020000159869 : cmp byte ptr [r9 + 1], dil ; call rax
0x00000200005438f5 : cmp byte ptr [r9 + rcx*4 + 0x51], cl ; ret
0x00000200006f5ffb : cmp byte ptr [r9 - 0x75], al ; iretd ; call rax
0x000002000006a220 : cmp byte ptr [rax + 0x2b], cl ; ret
0x000002000041daae : cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003b1baf : cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x0000020000008167 : cmp byte ptr [rax + 0x33], cl ; ret 0xa948
0x000002000069b53c : cmp byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x000002000003115e : cmp byte ptr [rax + 0x3b], cl ; ret 0x147c
0x000002000000665f : cmp byte ptr [rax + 0x3b], cl ; ret 0x227d
0x00000200001cd7da : cmp byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000049232 : cmp byte ptr [rax + 0x3b], cl ; ret 0xd74
0x0000020000004144 : cmp byte ptr [rax + 0x48000000], 0x8b ; int 0x80
0x000002000016f676 : cmp byte ptr [rax + 0x48000000], 0x8b ; ret 0x90c3
0x00000200001750eb : cmp byte ptr [rax + 0xf], cl ; ret 0x3345
0x00000200003fd8b7 : cmp byte ptr [rax + 1], 0xf ; ja 0x200003fd8c8 ; mov al, cl ; ret
0x0000020000115c21 : cmp byte ptr [rax + 3], cl ; ret
0x00000200004026fa : cmp byte ptr [rax + rax*4], 0x8a ; ret 0x940f
0x00000200004cda24 : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000057d659 : cmp byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000200006dcaba : cmp byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; dec dword ptr [rcx - 0x75] ; ret 0xbb41
0x000002000038d410 : cmp byte ptr [rax + rax], cl ; ret
0x0000020000013be0 : cmp byte ptr [rax + rax], dh ; call r8
0x0000020000013c46 : cmp byte ptr [rax + rax], dh ; call rax
0x00000200004fdbbe : cmp byte ptr [rax - 0x39], cl ; ret 0xfff8
0x000002000049084a : cmp byte ptr [rax - 0x3b7cb7f6], cl ; ret
0x00000200000632da : cmp byte ptr [rax - 0x3b7cb7ff], dh ; pop rdi ; ret
0x0000020000668309 : cmp byte ptr [rax - 0x3fffffff], bh ; ret
0x000002000057fa2e : cmp byte ptr [rax - 0x6bf00030], ah ; ret
0x00000200001e3b68 : cmp byte ptr [rax - 0x73], cl ; loopne 0x200001e3b5c ; ret 0xf90b
0x00000200001cd7d6 : cmp byte ptr [rax - 0x73], cl ; push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000004922e : cmp byte ptr [rax - 0x73], cl ; push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0xd74
0x00000200001044be : cmp byte ptr [rax - 0x75], cl ; call rax
0x000002000063deb4 : cmp byte ptr [rax - 0x75], cl ; imul eax, dword ptr [rax + 0x4c], -0x75 ; ret
0x000002000041a4bd : cmp byte ptr [rax - 0x75], cl ; iretd ; call 0x20000049003
0x000002000058aef8 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 - 0x7d], cl ; ret
0x000002000001b887 : cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000654048 : cmp byte ptr [rax - 0x77], cl ; imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x000002000059cbd5 : cmp byte ptr [rax - 0x77], cl ; or byte ptr [rcx - 0x75], al ; ret
0x00000200000dfafd : cmp byte ptr [rax - 0x77], cl ; ret
0x0000020000654047 : cmp byte ptr [rax - 0x77], r9b ; imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x00000200001414bf : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x200001414d0 ; xor al, al ; ret
0x00000200001414be : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x200001414d1 ; xor al, al ; ret
0x0000020000641b50 : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x000002000064c6dc : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x000002000002ccd1 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000053e51d : cmp byte ptr [rax - 0x7d], cl ; ret 0x4120
0x00000200000e98ce : cmp byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000020000575c44 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000016f3d : cmp byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000200005364a9 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200001a2b3c : cmp byte ptr [rax - 0x7d], cl ; ret 0xff0
0x000002000040072e : cmp byte ptr [rax - 0x7f], cl ; ret
0x000002000019b46d : cmp byte ptr [rax - 1], cl ; ret
0x000002000015409c : cmp byte ptr [rax], 0 ; jne 0x20000154090 ; mov rax, rcx ; ret
0x00000200000b4421 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x0000020000080517 : cmp byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000063b238 : cmp byte ptr [rax], al ; cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000002000025b882 : cmp byte ptr [rax], al ; hlt ; ret
0x0000020000027277 : cmp byte ptr [rax], al ; jne 0x2000002725c ; mov rax, rcx ; ret
0x000002000015409d : cmp byte ptr [rax], al ; jne 0x2000015408f ; mov rax, rcx ; ret
0x000002000038fc58 : cmp byte ptr [rax], al ; jne 0x2000038fc6b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000641d2c : cmp byte ptr [rax], al ; jne 0x20000641d20 ; xor al, al ; ret
0x000002000025b87e : cmp byte ptr [rax], al ; push -0xbffc75d ; ret
0x000002000025bb2a : cmp byte ptr [rax], al ; push rsp ; ret
0x000002000025baaa : cmp byte ptr [rax], al ; ret
0x000002000025bb5a : cmp byte ptr [rax], al ; ret 0x22
0x00000200000555d1 : cmp byte ptr [rax], bl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004d6aed : cmp byte ptr [rax], cl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000025f8d8 : cmp byte ptr [rbp + 0x23], dh ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret 0x40
0x00000200006cca1d : cmp byte ptr [rbp + 0x2b], al ; ret 0x8b4a
0x000002000017c03b : cmp byte ptr [rbp + 0x3b], al ; ret 0xcc72
0x000002000057ccc7 : cmp byte ptr [rbp + 0x3b], cl ; ret 0xd17c
0x00000200001c70b5 : cmp byte ptr [rbp + 0x5b], bl ; ret
0x000002000058e66f : cmp byte ptr [rbp + 0x7f3d8043], cl ; call qword ptr [rax]
0x00000200004df662 : cmp byte ptr [rbp + 0xb], cl ; sbb byte ptr [r10], dil ; ret 0x470f
0x000002000064c8e2 : cmp byte ptr [rbp + rcx - 1], dh ; ret
0x00000200006cca13 : cmp byte ptr [rbp - 0x75], al ; ret
0x0000020000066faf : cmp byte ptr [rbp - 0x75], al ; ret 0x8b41
0x0000020000531a43 : cmp byte ptr [rbp - 0x75], al ; ret 0xc283
0x0000020000071946 : cmp byte ptr [rbp - 0x75], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6c80
0x00000200001b3d94 : cmp byte ptr [rbp - 0x75], cl ; ret 0xe183
0x00000200006cca12 : cmp byte ptr [rbp - 0x75], r8b ; ret
0x0000020000071945 : cmp byte ptr [rbp - 0x75], r9b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6c80
0x00000200004a1b80 : cmp byte ptr [rbx + 0x2b411446], cl ; ret
0x00000200006d9a35 : cmp byte ptr [rbx + 0x3a8be], cl ; add byte ptr [rbp - 0x75], al ; ret
0x00000200001ac782 : cmp byte ptr [rbx + 0x8886], cl ; add byte ptr [rdx], bh ; ret
0x0000020000047222 : cmp byte ptr [rbx + 0xbead1d0], cl ; sal dh, 1 ; ret 0xf01
0x000002000064eb28 : cmp byte ptr [rbx + rax*8], al ; call qword ptr [rax]
0x0000020000064202 : cmp byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2e
0x000002000019f1f2 : cmp byte ptr [rbx + rcx*4 - 0x39], cl ; mov rdx, r13 ; call 0x2000014b4f9
0x00000200005f8a38 : cmp byte ptr [rbx - 0x18], ch ; push rsi ; ret
0x00000200004d4f76 : cmp byte ptr [rbx - 0x76bec3bf], cl ; and r14b, r14b ; ret
0x00000200005b13b2 : cmp byte ptr [rbx - 0x7cb7dbac], cl ; ret 0x306
0x00000200005682ea : cmp byte ptr [rbx - 0xdfdbac], cl ; ret 0xff48
0x00000200001adfd3 : cmp byte ptr [rbx], al ; add byte ptr [rax], al ; clc ; ret
0x000002000000805b : cmp byte ptr [rbx], al ; ret
0x00000200004807e6 : cmp byte ptr [rbx], bh ; ret 0x430f
0x000002000058570e : cmp byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x000002000047d6cd : cmp byte ptr [rbx], dh ; fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x00000200004ebdc4 : cmp byte ptr [rbx], dh ; leave ; call rax
0x00000200000138d7 : cmp byte ptr [rbx], dh ; ret 0xfa8
0x00000200001be1c5 : cmp byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0x8d4d
0x00000200001d2d51 : cmp byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x000002000055f103 : cmp byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200000d1872 : cmp byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000006cb5c : cmp byte ptr [rbx], dl ; add byte ptr [rdi], cl ; mov bh, 0x41 ; ret
0x000002000055f102 : cmp byte ptr [rbx], r14b ; ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000047d6cc : cmp byte ptr [rbx], sil ; fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x0000020000172aad : cmp byte ptr [rcx + 0x10], al ; mov eax, 0xc0000001 ; ret
0x00000200005ac7fb : cmp byte ptr [rcx + 0x232], al ; setne al ; ret
0x000002000035d89a : cmp byte ptr [rcx + 0x3340245c], cl ; ret 0xe0c1
0x00000200003a3664 : cmp byte ptr [rcx + 0x33], cl ; ret
0x000002000013fd43 : cmp byte ptr [rcx + 0x3a], al ; sete al ; ret
0x00000200004c730f : cmp byte ptr [rcx + 0x3b], cl ; ret
0x000002000016b778 : cmp byte ptr [rcx + 0x41402444], cl ; call rcx
0x0000020000466b4b : cmp byte ptr [rcx + 0x4c], 0 ; jne 0x20000466b19 ; ret
0x00000200003f6f2f : cmp byte ptr [rcx + 0x4c], cl ; jne 0x200003f6f3c ; ret
0x00000200003f6f2e : cmp byte ptr [rcx + 0x4c], r9b ; jne 0x200003f6f3d ; ret
0x00000200005ebf16 : cmp byte ptr [rcx + 0x4ce93047], cl ; ret 0xffe5
0x0000020000466b3b : cmp byte ptr [rcx + 0x4f], 0 ; je 0x20000466b5a ; dec dword ptr [rdx + 0x18] ; ret
0x000002000042bdef : cmp byte ptr [rcx + 0x5c], al ; pop rsi ; ret
0x00000200003704f6 : cmp byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x00000200000bb875 : cmp byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000019f816 : cmp byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200003b1ae2 : cmp byte ptr [rcx + 0x5e], al ; pop r13 ; ret
0x00000200005201ed : cmp byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000010b201 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200003b85bf : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004ebdd1 : cmp byte ptr [rcx + 1], bh ; call r8
0x000002000015986a : cmp byte ptr [rcx + 1], bh ; call rax
0x00000200005b51ee : cmp byte ptr [rcx + 3], bh ; call rax
0x00000200006d776b : cmp byte ptr [rcx + 3], cl ; ret
0x00000200000c02c2 : cmp byte ptr [rcx + rax*2 + 1], 0 ; jne 0x200000c02dc ; xor al, al ; ret
0x0000020000172aa1 : cmp byte ptr [rcx + rcx*4 + 0x19], al ; mov eax, r10d ; ret
0x00000200003bc482 : cmp byte ptr [rcx + rcx*4 + 0x41], cl ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200005438f6 : cmp byte ptr [rcx + rcx*4 + 0x51], cl ; ret
0x0000020000404816 : cmp byte ptr [rcx + rcx*4 + 0x7d], cl ; or byte ptr [rax - 0x75], cl ; ret
0x00000200006c7449 : cmp byte ptr [rcx + rcx*4 + 5], cl ; mov edi, 0x8bffc903 ; ret
0x0000020000583499 : cmp byte ptr [rcx - 0x74bbc3aa], cl ; ret 0x348
0x0000020000583498 : cmp byte ptr [rcx - 0x74bbc3aa], r9b ; ret 0x348
0x00000200006f5ffc : cmp byte ptr [rcx - 0x75], al ; iretd ; call rax
0x00000200003f861c : cmp byte ptr [rcx - 0x75], al ; ret
0x000002000000389c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000038eb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000000660e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000665c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000000a203 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000a252 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000034102 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000034151 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000047136 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000047185 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000643c0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000006440f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000066052 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000660a1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000007300c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000007305b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000d4c28 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000d4c76 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000010ad41 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010ad90 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001188f3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000118942 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000123f25 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000123f74 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000137063 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001370b2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000147f83 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000147fd2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000015b536 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000015b584 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000170f9d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000170feb ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000171167 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001711b5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000174fa9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000174ff8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000176220 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017626f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000180bc9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000180c17 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000192fc6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000193015 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000196f75 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000196fc3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001bd476 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bd4c4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c17a3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c17f2 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003679fe : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000367a4d ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200003684e2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000368531 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036a241 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036a290 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000378bef : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000378c3d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000037a070 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037a0bf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003803d0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038041f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000038485a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003848a8 ; pop rsp ; pop rdi ; pop rbp ; ret
0x000002000038f4bc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000038f50b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003929ca : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000392a19 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000399089 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003990d8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039ce3c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039ce8b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003a9ba4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a9bf3 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200003aaf78 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003aafc7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003abc52 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003abca1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003abde4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003abe33 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ad73e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ad78d ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003adc20 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003adc6f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003afda7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003afdf5 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003b2dd3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b2e22 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003b3bea : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b3c39 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b555f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b55ae ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b6994 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b69e3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003bcef1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003bcf40 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e3f54 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e3fa3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003fccd6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fcd25 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040c830 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040c87f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041795b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004179aa ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000462fb8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000463007 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004755ee : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047563d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047651d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047656c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047988f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004798de ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047a8de : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047a92d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047baa5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047baf4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047c525 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047c573 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000495deb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000495e39 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004986dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049872b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049f61a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049f669 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200004a9559 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a95a8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ac5f0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ac63f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b0e15 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b0e64 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b7cd6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b7d25 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b8b39 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b8b88 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004c4d61 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c4db0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c9075 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c90c4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c944e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c949d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004dbcff : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dbd4e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004de42d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004de47c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ded62 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dedb0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004df5e5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004df634 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e0d86 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e0dd4 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004e74ba : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e7509 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ea372 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ea3c1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fc6c5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fc714 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000501095 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005010e4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000505821 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050586f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050752e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050757d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000510910 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051095f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000510f2f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000510f7d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000511b2f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511b7d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000518895 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005188e4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000518e71 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000518ebf ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051f503 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051f551 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000520c9a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000520ce8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000053607b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005360c9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000536902 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000536951 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005372ac : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005372fb ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000541dcb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000541e19 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000546ca9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000546cf8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000547336 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000547385 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000548212 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000548260 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000054d109 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054d158 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000054ebb4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054ec02 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000054f155 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054f1a4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005526c2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000552710 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055388e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005538dd ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000562bea : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000562c39 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000563f9b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000563fea ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200005645df : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056462e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005654e4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000565532 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000567938 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000567987 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000573c55 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000573ca3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000577251 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057729f ; pop rsp ; pop rdi ; pop rbp ; ret
0x0000020000577c24 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000577c72 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000586fbc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000058700b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000058d2fa : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000058d349 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000592e42 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000592e91 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000593830 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059387f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005939ef : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000593a3e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000596135 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000596184 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000059b44a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059b499 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000059b741 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059b790 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a4c99 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a4ce8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a66f9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a6748 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a81ce : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a821d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005a9208 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a9256 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200005aac58 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aaca7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005aae53 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aaea2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ac36a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ac3b9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c0822 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c0870 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005c5d16 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c5d65 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c7001 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c7050 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c73f0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c743f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005cfa00 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cfa4f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005cfdd9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cfe27 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000060589b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006058ea ; pop rdi ; pop r12 ; pop rbp ; ret
0x00000200006357ba : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000635809 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000636155 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006361a3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000637711 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063775f ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000637883 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006378d2 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000064b7d4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b823 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006564da : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000656528 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006beede : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bef2d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c1223 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c1272 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c1480 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c14cf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c4896 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c48e4 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006c5633 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c5681 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006cba9a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006cbae8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006cceda : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ccf29 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006e9de5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e9e33 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ea075 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ea0c4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f374b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f379a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f6aa3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f6af2 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200006f740c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f745a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f7beb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f7c39 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ff7ff : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ff84e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007028d3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000702922 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200007050d3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000705122 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007053b8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000705406 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000624f6f : cmp byte ptr [rcx - 0x75], cl ; ret
0x000002000002f111 : cmp byte ptr [rcx - 0x76], al ; ret 0xc232
0x000002000052f714 : cmp byte ptr [rcx - 0x76], al ; xor byte ptr [rdx], r12b ; ret 0xd8f6
0x00000200004df678 : cmp byte ptr [rcx - 0x78], al ; push rdx ; xor byte ptr [rcx - 0x77], al ; ret
0x0000020000434675 : cmp byte ptr [rcx - 0xa], al ; ret
0x00000200006f43cf : cmp byte ptr [rcx - 1], cl ; enter -0x248b, -0xd ; ret
0x0000020000659913 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659969 ; add esp, 0x38 ; jmp rax
0x000002000065996b : cmp byte ptr [rcx - 1], cl ; loope 0x200006599c1 ; add esp, 0x38 ; jmp rax
0x00000200006599c3 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659a19 ; add esp, 0x38 ; jmp rax
0x0000020000659a1b : cmp byte ptr [rcx - 1], cl ; loope 0x20000659a71 ; add esp, 0x38 ; jmp rax
0x0000020000659a73 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659ac9 ; add esp, 0x38 ; jmp rax
0x0000020000659acb : cmp byte ptr [rcx - 1], cl ; loope 0x20000659b21 ; add esp, 0x38 ; jmp rax
0x0000020000659b23 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659b79 ; add esp, 0x38 ; jmp rax
0x0000020000659b7b : cmp byte ptr [rcx - 1], cl ; loope 0x20000659bd1 ; add esp, 0x38 ; jmp rax
0x0000020000659bd3 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659c29 ; add esp, 0x38 ; jmp rax
0x0000020000659c2b : cmp byte ptr [rcx - 1], cl ; loope 0x20000659c81 ; add esp, 0x38 ; jmp rax
0x0000020000659c83 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659cd9 ; add esp, 0x38 ; jmp rax
0x0000020000659cdb : cmp byte ptr [rcx - 1], cl ; loope 0x20000659d31 ; add esp, 0x38 ; jmp rax
0x0000020000659d33 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659d89 ; add esp, 0x38 ; jmp rax
0x0000020000659d8b : cmp byte ptr [rcx - 1], cl ; loope 0x20000659de1 ; add esp, 0x38 ; jmp rax
0x0000020000659de3 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659e39 ; add esp, 0x38 ; jmp rax
0x0000020000659e3b : cmp byte ptr [rcx - 1], cl ; loope 0x20000659e91 ; add esp, 0x38 ; jmp rax
0x0000020000659e90 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659ee6 ; add esp, 0x38 ; jmp rax
0x0000020000659ee4 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659f3a ; add esp, 0x38 ; jmp rax
0x0000020000659f38 : cmp byte ptr [rcx - 1], cl ; loope 0x20000659f8e ; add esp, 0x38 ; jmp rax
0x0000020000659f8c : cmp byte ptr [rcx - 1], cl ; loope 0x20000659fe2 ; add esp, 0x38 ; jmp rax
0x0000020000659fe0 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a036 ; add esp, 0x38 ; jmp rax
0x000002000065a034 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a08a ; add esp, 0x38 ; jmp rax
0x000002000065a088 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a0de ; add esp, 0x38 ; jmp rax
0x000002000065a0dc : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a132 ; add esp, 0x38 ; jmp rax
0x000002000065a130 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a186 ; add esp, 0x38 ; jmp rax
0x000002000065a184 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a1da ; add esp, 0x38 ; jmp rax
0x000002000065a1d8 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a22e ; add esp, 0x38 ; jmp rax
0x000002000065a22c : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a282 ; add esp, 0x38 ; jmp rax
0x000002000065a27b : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a2d1 ; add esp, 0x38 ; jmp rax
0x000002000065a2d0 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a326 ; add esp, 0x38 ; jmp rax
0x000002000065a370 : cmp byte ptr [rcx - 1], cl ; loope 0x2000065a3c6 ; add esp, 0x38 ; jmp rax
0x000002000065a320 : cmp byte ptr [rcx - 1], cl ; loopne 0x2000065a376 ; add esp, 0x38 ; jmp rax
0x000002000015410e : cmp byte ptr [rcx], 0 ; jne 0x2000015410f ; ret
0x0000020000172bea : cmp byte ptr [rcx], 0xcc ; sete al ; ret
0x00000200001ced23 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x0000020000565918 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200001935cf
0x0000020000411626 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x2000048d906
0x0000020000581e42 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000007867a : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000076c22 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x00000200004c65e0 : cmp byte ptr [rcx], al ; inc dword ptr [rcx] ; ret
0x000002000046df42 : cmp byte ptr [rcx], bl ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000011a54b : cmp byte ptr [rcx], dl ; cmove r8, rcx ; mov rax, r8 ; ret
0x0000020000090f3b : cmp byte ptr [rdi + 0x4b20c2e1], ah ; ret
0x000002000004e9a6 : cmp byte ptr [rdi + 0x5b], bl ; ret
0x00000200001c80de : cmp byte ptr [rdi + 0x5d], bl ; ret
0x00000200001c7659 : cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000046ccea : cmp byte ptr [rdi + 0x5e], bl ; ret
0x00000200000439ec : cmp byte ptr [rdi + rcx + 0x20], al ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x000002000000ee04 : cmp byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000465613 : cmp byte ptr [rdi + rcx - 0x49], al ; or cl, byte ptr [rax - 0x75] ; ret 0xb70f
0x00000200004d4494 : cmp byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000010c973 : cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x000002000047483b : cmp byte ptr [rdi], al ; add rdx, rbx ; jmp rdx
0x000002000045ff04 : cmp byte ptr [rdi], ch ; sar edi, -0x75 ; ret
0x0000020000005f2d : cmp byte ptr [rdi], cl ; mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f39cb : cmp byte ptr [rdi], cl ; mov bh, 0xcb ; add rdx, 0x40 ; call rax
0x000002000041da7b : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x000002000037c8fc : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3f ; ret
0x000002000041dbf3 : cmp byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x000002000070dea0 : cmp byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; or byte ptr [rcx - 0x7d], cl ; ret
0x000002000047483a : cmp byte ptr [rdi], r8b ; add rdx, rbx ; jmp rdx
0x000002000066542c : cmp byte ptr [rdx + rax*8 - 0x7dfa7601], ch ; lodsb al, byte ptr [rsi] ; ret 0x8bff
0x000002000070e152 : cmp byte ptr [rdx + rcx*8 + 0xe], 1 ; setne al ; ret
0x0000020000640c27 : cmp byte ptr [rdx - 0x48], 0xe ; je 0x20000640c38 ; xor eax, eax ; ret
0x000002000025bb24 : cmp byte ptr [rdx - 0x6cffffc8], dl ; cmp byte ptr [rax], al ; push rsp ; ret
0x000002000058dfd7 : cmp byte ptr [rdx - 0xcedbb4], cl ; ret
0x00000200003df373 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200006d29e3 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000175361 : cmp byte ptr [rdx], al ; call r8
0x00000200004b070a : cmp byte ptr [rdx], bh ; ret 0x820f
0x0000020000142b62 : cmp byte ptr [rdx], bl ; jne 0x20000142b71 ; mov rax, rcx ; ret
0x000002000014f697 : cmp byte ptr [rdx], dh ; ret 0x4788
0x0000020000142b61 : cmp byte ptr [rdx], r11b ; jne 0x20000142b72 ; mov rax, rcx ; ret
0x0000020000143be7 : cmp byte ptr [rip + 0x13db2b], al ; je 0x20000143c0c ; call rcx
0x0000020000104f10 : cmp byte ptr [rip + 0x17c897], 0 ; jne 0x20000104f23 ; ret
0x0000020000101408 : cmp byte ptr [rip + 0x1e6954], al ; jne 0x20000101446 ; ret
0x000002000025ee70 : cmp byte ptr [rip + 0x220024], al ; add byte ptr [rax], al ; ret
0x00000200000c8958 : cmp byte ptr [rip + 0x3b410020], dh ; ret 0x870f
0x0000020000373498 : cmp byte ptr [rip - 0x166f0024], ch ; ret
0x00000200006e6e7b : cmp byte ptr [rip - 0x74b80000], bl ; retf ; call 0x200007030d9
0x00000200004ad07c : cmp byte ptr [rsi + 0x2fe8ffde], cl ; ret 0xffb8
0x00000200001d2c48 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x000002000013e7e6 : cmp byte ptr [rsi + 0x5b], bl ; ret
0x000002000020cc60 : cmp byte ptr [rsi + 0xb], 0 ; ret
0x0000020000488538 : cmp byte ptr [rsi + 8], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000383611 : cmp byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200006476a2 : cmp byte ptr [rsi + rsi*8], dl ; ret
0x0000020000380274 : cmp byte ptr [rsi - 0x2d], cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000019c910 : cmp byte ptr [rsi - 0x77], ah ; ret
0x000002000023166e : cmp byte ptr [rsi], al ; sysenter
0x000002000066a3cc : cmp byte ptr [rsi], cl ; test eax, 0xd8b44ff ; push rcx ; pop rbp ; ret 0x4cff
0x00000200003dd818 : cmp ch, bl ; loopne 0x200003dd82d ; ret
0x00000200006236a3 : cmp ch, byte ptr [rdx - 0x2b] ; inc dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000007acd : cmp ch, byte ptr [rip - 0x74b7ffe2] ; ret 0xc148
0x0000020000571201 : cmp ch, dl ; dec dword ptr [rbx + 0x79c085e8] ; ret
0x0000020000625145 : cmp ch, dl ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000444402 : cmp ch, dl ; ret 0x4cff
0x000002000010304a : cmp cl, 0x8d ; je 0x20000103059 ; xor al, al ; ret
0x000002000036d63e : cmp cl, 0xf ; cmovne eax, edx ; ret
0x000002000013fd44 : cmp cl, byte ptr [r8 + 0x48] ; sete al ; ret
0x00000200000204ea : cmp cl, byte ptr [rax + 0x2b] ; call 0x2002bc49039
0x000002000014536b : cmp cl, byte ptr [rax + 0x3b] ; ret 0xaf76
0x000002000013fd45 : cmp cl, byte ptr [rax + 0x48] ; sete al ; ret
0x0000020000003368 : cmp cl, byte ptr [rax + 3] ; ret 0x8948
0x00000200004fb0d0 : cmp cl, byte ptr [rax - 0x75] ; add cl, byte ptr [rax + 0x3b] ; ret 0x3874
0x00000200000bca3d : cmp cl, byte ptr [rax - 0x75] ; ret
0x00000200001ff6a6 : cmp cl, byte ptr [rax - 0x77] ; jl 0x200001ff6d6 ; xor cl, ch ; ret
0x000002000019fba7 : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000200004daffa : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x00000200005b9148 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4830
0x00000200006e70a5 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006d166c : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000200004af22a : cmp cl, byte ptr [rbp - 0x49f0001e] ; ret
0x00000200000ccadf : cmp cl, byte ptr [rcx + 0xf] ; mov edx, 0x820f0be1 ; ret 0x1209
0x00000200003cd5d3 : cmp cl, byte ptr [rcx - 0x77] ; push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000020000155b32 : cmp cl, byte ptr [rcx - 1] ; ret 0x3b4d
0x0000020000154e88 : cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x00000200003b54e2 : cmp cl, byte ptr [rdi + 9] ; add byte ptr [rax - 1], cl ; ret 0x3966
0x000002000066a2ca : cmp cl, byte ptr [rdi] ; test eax, 0xd8b48ff ; pop r14 ; ret 0x48ff
0x000002000013a627 : cmp cl, byte ptr [rdx + 0xf] ; mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000501b6e : cmp cl, byte ptr [rsi] ; add bh, bh ; ret
0x000002000012303d : cmp cl, ch ; cmp al, 0x1a ; cli ; push rsi ; ret 0x7401
0x00000200000b5b8c : cmp cl, ch ; psubd mm7, mm7 ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000f13e9 : cmp cl, ch ; ret
0x000002000062a28a : cmp cl, ch ; ret 0xe4e5
0x00000200003f5674 : cmp cl, ch ; ret 0xe9ff
0x0000020000415e20 : cmp cl, dh ; ret
0x000002000014a78a : cmp cl, dl ; and byte ptr [rax], al ; ret
0x0000020000589404 : cmp cx, 0x41 ; jae 0x20000589417 ; movzx eax, cx ; ret
0x0000020000425e50 : cmp cx, 0x61 ; jae 0x20000425e63 ; movzx eax, cx ; ret
0x000002000019c06a : cmp cx, 0x7f ; jbe 0x2000019c07b ; mov al, 1 ; ret
0x0000020000707227 : cmp cx, ax ; jg 0x200007071cc ; xor al, al ; ret
0x000002000019c15d : cmp cx, dx ; setbe al ; ret
0x00000200000b1562 : cmp dh, byte ptr [rax - 0x74b7ffee] ; sbb esi, esi ; ret
0x000002000012f241 : cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000600916 : cmp dh, byte ptr [rbx - 0x49f0005a] ; ret
0x00000200000e797a : cmp dh, byte ptr [rdi + 0x1b] ; add byte ptr [rax + 3], cl ; ret 0x349
0x00000200001aef32 : cmp dh, byte ptr [rdi] ; add bh, bh ; ret
0x000002000001c8de : cmp dh, dh ; ret
0x00000200000d4b41 : cmp dh, dh ; ret 0x7520
0x000002000006ed06 : cmp dh, dh ; ret 0xf08
0x00000200006ff606 : cmp dil, r8b ; dec dword ptr [rax - 0x75] ; ret
0x000002000064c231 : cmp dl, 0x1b ; ja 0x2000064c244 ; movzx eax, r10b ; jmp 0x2000064c250
0x000002000064c2dc : cmp dl, 0x1b ; ja 0x2000064c2ef ; movzx eax, r10b ; jmp 0x2000064c2fb
0x000002000064c394 : cmp dl, 0x1b ; ja 0x2000064c3a7 ; movzx eax, r10b ; jmp 0x2000064c3b3
0x000002000064c465 : cmp dl, 0x1b ; ja 0x2000064c478 ; movzx eax, r10b ; jmp 0x2000064c484
0x00000200000d24cf : cmp dl, 0xff ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000059948 : cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000497902 : cmp dl, 2 ; jb 0x200004978b4 ; mov al, 2 ; ret
0x000002000011b9b8 : cmp dl, 3 ; je 0x2000011b99a ; add rsp, 0x28 ; ret
0x0000020000655d8c : cmp dl, al ; jne 0x20000655d98 ; xor eax, eax ; ret
0x000002000060d1d3 : cmp dl, al ; setb al ; ret
0x000002000008f1a1 : cmp dl, byte ptr [rbx + rax*4 - 0x20] ; mov cl, 0x18 ; pop rax ; ret 0x4609
0x00000200000abdee : cmp dl, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000200006c6360 : cmp dl, byte ptr [rdi + rdi*8 + 0x28c48348] ; ret
0x00000200003d3927 : cmp dl, cl ; inc dword ptr [rbx + rcx*4 + 0x5d] ; or byte ptr [rcx - 0xa], al ; ret
0x0000020000443c04 : cmp dl, dh ; ret 0x81ff
0x000002000060d1d2 : cmp dl, r8b ; setb al ; ret
0x0000020000174b9f : cmp dword ptr [r8], r10d ; je 0x20000174bb0 ; mov eax, r9d ; ret
0x000002000052656a : cmp dword ptr [r9], r11d ; ja 0x2000052652c ; ret
0x000002000006626a : cmp dword ptr [rax + 0x10], ecx ; je 0x20000066279 ; xor eax, eax ; ret
0x0000020000062a36 : cmp dword ptr [rax + 0x10], ecx ; jne 0x20000062a57 ; ret
0x000002000006791d : cmp dword ptr [rax + 0x10], ecx ; jne 0x20000067946 ; add rsp, 0x28 ; ret
0x00000200004ebe2b : cmp dword ptr [rax + 0x1a], edx ; jne 0x200004ebe2e ; lock inc dword ptr [rax + 0x10] ; ret
0x000002000035fc2d : cmp dword ptr [rax + 0x24], eax ; je 0x2000035fc3c ; mov al, 1 ; ret
0x000002000035fc2c : cmp dword ptr [rax + 0x24], r8d ; je 0x2000035fc3d ; mov al, 1 ; ret
0x00000200001d8280 : cmp dword ptr [rax + 1], 0x8b440000 ; ret 0xf44
0x00000200000219ef : cmp dword ptr [rax + 3], ecx ; ret
0x000002000054fedd : cmp dword ptr [rax + 3], ecx ; ret 0x3d48
0x000002000047e815 : cmp dword ptr [rax + 8], 0 ; je 0x2000047e826 ; xor eax, eax ; ret
0x000002000004d666 : cmp dword ptr [rax + 8], ecx ; jne 0x2000004d68a ; ret
0x00000200006f839a : cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200001e46ef : cmp dword ptr [rax - 0x75], ecx ; ret 0xb948
0x000002000012d4cf : cmp dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000132a33 : cmp dword ptr [rax - 0x75de8bff], ebp ; push rcx ; sbb dh, dh ; ret 0x7510
0x0000020000015cb3 : cmp dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x18 ; ret
0x00000200000dfd78 : cmp dword ptr [rax - 0x9d28bff], ebp ; ret 0xf08
0x000002000019b397 : cmp dword ptr [rax - 1], ecx ; ret
0x0000020000041665 : cmp dword ptr [rax - 7], -1 ; push rsi ; ret
0x0000020000027276 : cmp dword ptr [rax], 0 ; jne 0x2000002725d ; mov rax, rcx ; ret
0x0000020000641d2b : cmp dword ptr [rax], 0 ; jne 0x20000641d21 ; xor al, al ; ret
0x000002000016aa76 : cmp dword ptr [rax], 0x8b000001 ; push rax ; and dh, dh ; ret 0x750f
0x000002000063b23a : cmp dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000002000012950b : cmp dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b504 : cmp dword ptr [rax], eax ; jne 0x2000000b510 ; xor eax, eax ; ret
0x000002000004f1e2 : cmp dword ptr [rax], eax ; jne 0x2000004f200 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000063d4e : cmp dword ptr [rax], eax ; jne 0x20000063d73 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b2481 : cmp dword ptr [rax], eax ; jne 0x200000b2492 ; add rsp, 0x28 ; ret
0x00000200000bdfd5 : cmp dword ptr [rax], eax ; jne 0x200000bdfde ; ret
0x000002000010bb52 : cmp dword ptr [rax], eax ; jne 0x2000010bb65 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011cd82 : cmp dword ptr [rax], eax ; jne 0x2000011cd95 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011d4e1 : cmp dword ptr [rax], eax ; jne 0x2000011d4f4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014cc03 : cmp dword ptr [rax], eax ; jne 0x2000014cc16 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015410f : cmp dword ptr [rax], eax ; jne 0x2000015410e ; ret
0x00000200004b8fc9 : cmp dword ptr [rax], eax ; jne 0x200004b8fda ; add rsp, 0x28 ; ret
0x0000020000641d82 : cmp dword ptr [rax], eax ; jne 0x20000641d76 ; xor al, al ; ret
0x000002000064d883 : cmp dword ptr [rax], eax ; jne 0x2000064d87d ; ret
0x000002000003b466 : cmp dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004cbb91 : cmp dword ptr [rax], eax ; sete al ; ret
0x0000020000705c46 : cmp dword ptr [rax], ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x00000200001590e0 : cmp dword ptr [rax], edx ; cmovne edx, r8d ; mov eax, edx ; ret
0x0000020000174ba0 : cmp dword ptr [rax], edx ; je 0x20000174baf ; mov eax, r9d ; ret
0x0000020000228391 : cmp dword ptr [rax], esp ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bl ; ret 5
0x000002000002011b : cmp dword ptr [rbp + 0x2c], edi ; add byte ptr [rcx - 0xa], al ; ret
0x00000200001d302a : cmp dword ptr [rbp - 0x49f00012], esp ; ret
0x00000200005466b9 : cmp dword ptr [rbx + 0x105f89ff], 0x3b ; ret
0x000002000008dfc8 : cmp dword ptr [rbx + 0x69f75db1], esi ; ret
0x0000020000592873 : cmp dword ptr [rbx - 0x30], ecx ; push rsi ; ret
0x00000200000c7b11 : cmp dword ptr [rbx], ebx ; jne 0x200000c7b2f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b897f : cmp dword ptr [rbx], edx ; jb 0x200001b8983 ; jmp 0x200001b8999
0x00000200006018ff : cmp dword ptr [rbx], esi ; shr cl, 0x6f ; ret
0x000002000014ee94 : cmp dword ptr [rcx + 0x10], 0x6d ; je 0x2000014eea5 ; xor eax, eax ; ret
0x0000020000103d9f : cmp dword ptr [rcx + 0x10], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000003bb8f : cmp dword ptr [rcx + 0x10], eax ; jne 0x2000003bb76 ; lea rax, qword ptr [r9 - 0x10] ; ret
0x000002000019c8c5 : cmp dword ptr [rcx + 0x10], edx ; sete al ; ret
0x00000200001018d1 : cmp dword ptr [rcx + 0x20], 0 ; je 0x200001018e6 ; mov rax, rcx ; ret
0x00000200006344f2 : cmp dword ptr [rcx + 0x20], 0 ; je 0x200006344f0 ; mov al, 1 ; ret
0x00000200003f79d3 : cmp dword ptr [rcx + 0x20], eax ; sbb eax, eax ; add eax, 2 ; ret
0x0000020000365394 : cmp dword ptr [rcx + 0x24], 0 ; je 0x200003653a3 ; ret
0x00000200004107e2 : cmp dword ptr [rcx + 0x28], eax ; je 0x200004107f1 ; xor eax, eax ; ret
0x000002000019c8a5 : cmp dword ptr [rcx + 0x28], edx ; setb al ; ret
0x000002000001d6e2 : cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x00000200000badb5 : cmp dword ptr [rcx + 0x30], eax ; jne 0x200000badaf ; mov al, 1 ; ret
0x0000020000123a0d : cmp dword ptr [rcx + 0x30], eax ; setne al ; ret
0x00000200003d7322 : cmp dword ptr [rcx + 0x38], eax ; sete al ; ret
0x000002000057cec3 : cmp dword ptr [rcx + 0x3b48ffdd], esp ; ret 0x977
0x000002000002d33d : cmp dword ptr [rcx + 0x3b], ecx ; ret
0x00000200000660fc : cmp dword ptr [rcx + 0x50], eax ; jne 0x2000006610d ; mov al, r8b ; ret
0x0000020000127250 : cmp dword ptr [rcx + 0x50], ecx ; je 0x2000012725d ; ret
0x00000200001248ed : cmp dword ptr [rcx + 0x50], ecx ; jne 0x200001248fe ; mov al, r9b ; ret
0x00000200000660fb : cmp dword ptr [rcx + 0x50], r8d ; jne 0x2000006610e ; mov al, r8b ; ret
0x00000200001248ec : cmp dword ptr [rcx + 0x50], r9d ; jne 0x200001248ff ; mov al, r9b ; ret
0x0000020000159105 : cmp dword ptr [rcx + 2], eax ; jae 0x20000159114 ; xor al, al ; ret
0x000002000063e5b2 : cmp dword ptr [rcx + 4], 0 ; jl 0x2000063e5c3 ; mov al, 1 ; ret
0x000002000039c026 : cmp dword ptr [rcx + 4], edx ; jae 0x2000039bffa ; mov dword ptr [r9 + 4], edx ; ret
0x0000020000025863 : cmp dword ptr [rcx + 8], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000055421c : cmp dword ptr [rcx + rax*2], ecx ; jne 0x2000055421d ; jmp 0x200005541ec
0x000002000055421b : cmp dword ptr [rcx + rax*2], r9d ; jne 0x2000055421e ; jmp 0x200005541ed
0x000002000064bdae : cmp dword ptr [rcx + rax*8 + 0x70], edx ; setne al ; ret
0x00000200000fee51 : cmp dword ptr [rcx - 0x75], eax ; ret 0xc22b
0x00000200000c9a6d : cmp dword ptr [rcx - 0x7c], eax ; ret
0x0000020000043c81 : cmp dword ptr [rcx - 0x7d], ecx ; jmp qword ptr [rax]
0x0000020000037180 : cmp dword ptr [rcx - 0xa], eax ; ret
0x0000020000127833 : cmp dword ptr [rcx - 0xa], eax ; ret 0x7501
0x0000020000154e96 : cmp dword ptr [rcx - 1], ecx ; ret
0x00000200004b8fc8 : cmp dword ptr [rcx], 0 ; jne 0x200004b8fdb ; add rsp, 0x28 ; ret
0x0000020000641d81 : cmp dword ptr [rcx], 0 ; jne 0x20000641d77 ; xor al, al ; ret
0x00000200004cbb90 : cmp dword ptr [rcx], 0 ; sete al ; ret
0x00000200001c2b5d : cmp dword ptr [rcx], eax ; jb 0x200001c2b6a ; xor al, al ; ret
0x000002000058d1ee : cmp dword ptr [rcx], eax ; jne 0x2000058d201 ; mov eax, 1 ; ret
0x00000200001a6fa2 : cmp dword ptr [rcx], eax ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000019abdf : cmp dword ptr [rcx], eax ; sete al ; ret
0x000002000052656b : cmp dword ptr [rcx], ebx ; ja 0x2000052652b ; ret
0x00000200000badd1 : cmp dword ptr [rcx], ecx ; jne 0x200000bade0 ; mov rax, rcx ; ret
0x0000020000378715 : cmp dword ptr [rcx], ecx ; jne 0x20000378722 ; xor eax, eax ; ret
0x0000020000423fd5 : cmp dword ptr [rcx], ecx ; jne 0x20000423fde ; ret
0x0000020000424019 : cmp dword ptr [rcx], ecx ; jne 0x20000424022 ; ret
0x000002000000a2e1 : cmp dword ptr [rcx], edx ; cmove r8, rcx ; mov rax, r8 ; ret
0x000002000055677b : cmp dword ptr [rcx], edx ; mov qword ptr [rbp - 0x48], rcx ; jne 0x2000055674c ; jmp 0x200005567a8
0x00000200005e7720 : cmp dword ptr [rdi + 0x4cffd9b8], 0x63 ; ret
0x000002000014ee9f : cmp dword ptr [rdi + 0x74], edi ; idiv dword ptr [rax + 1] ; ret
0x00000200004b4d49 : cmp dword ptr [rdi + rdi*8 + 0x60c48348], 0x5b ; ret
0x0000020000067409 : cmp dword ptr [rdi], 3 ; jne 0x20000067472 ; mov rcx, rdi ; call rsi
0x0000020000527d58 : cmp dword ptr [rdi], ecx ; mov bh, 0x56 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000051984b : cmp dword ptr [rdi], ecx ; ret
0x0000020000031b01 : cmp dword ptr [rdi], ecx ; test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000054f6b : cmp dword ptr [rdi], esp ; xor byte ptr [rax], al ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000036cfc1 : cmp dword ptr [rdx + 0x10], eax ; ja 0x2000036cfd0 ; mov al, 1 ; ret
0x0000020000029d3a : cmp dword ptr [rdx + 0x168], 0 ; jne 0x20000029d5d ; ret
0x0000020000485a67 : cmp dword ptr [rdx + rcx], 0 ; setne al ; ret
0x000002000055d21b : cmp dword ptr [rdx - 0x74bb004e], esp ; ret
0x00000200003a6244 : cmp dword ptr [rdx], eax ; cmove r8d, eax ; mov eax, r8d ; ret
0x000002000064d8c5 : cmp dword ptr [rdx], eax ; jne 0x2000064d8bf ; ret
0x0000020000026e17 : cmp dword ptr [rdx], ebx ; jne 0x20000026e26 ; mov rax, rcx ; ret
0x000002000054380c : cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x00000200000342da : cmp dword ptr [rdx], esi ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x0000020000026e16 : cmp dword ptr [rdx], r11d ; jne 0x20000026e27 ; mov rax, rcx ; ret
0x00000200001549da : cmp dword ptr [rip + 0x12bd88], ecx ; sete al ; ret
0x0000020000139a76 : cmp dword ptr [rip + 0x139c34], eax ; setb al ; ret
0x0000020000139a49 : cmp dword ptr [rip + 0x1ae231], eax ; jne 0x20000139a5a ; ret
0x00000200001413ce : cmp dword ptr [rip + 0x216034], eax ; sete al ; ret
0x0000020000006ee8 : cmp dword ptr [rip + 0x28fc95], 0 ; jne 0x20000006efb ; ret
0x000002000005d2c6 : cmp dword ptr [rip + 0x2f9fc0], eax ; setne al ; ret
0x00000200006e9e65 : cmp dword ptr [rip - 0x392b4b], ecx ; je 0x200006e9e84 ; ret
0x000002000063ad50 : cmp dword ptr [rip - 0x3a418e], ecx ; jne 0x2000063ad61 ; ret
0x00000200005cf6bc : cmp dword ptr [rsp + 8], eax ; jae 0x200005cf6cf ; or eax, 0xffffffff ; ret
0x00000200005cf6c9 : cmp dword ptr [rsp + 8], eax ; seta cl ; mov eax, ecx ; ret
0x0000020000495c63 : cmp dword ptr [rsp], ebx ; push qword ptr [rdx + 0x3c12e801] ; ret 0x48ff
0x00000200000a37c4 : cmp eax, 0 ; jne 0x200000a38b9 ; ret 0
0x0000020000104f11 : cmp eax, 0x17c897 ; add byte ptr [rbp + 1], dh ; ret
0x000002000016225a : cmp eax, 0x1890018 ; xor eax, eax ; ret
0x000002000019c018 : cmp eax, 0x19 ; ja 0x2000019c02c ; movzx eax, cx ; sub eax, edx ; ret
0x000002000019c02f : cmp eax, 0x19 ; jbe 0x2000019c025 ; or eax, 0xffffffff ; ret
0x000002000019e160 : cmp eax, 0x20b ; je 0x2000019e173 ; xor al, al ; ret
0x000002000013f9ef : cmp eax, 0x21766e ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x0000020000055ecd : cmp eax, 0x240fa9 ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200001169f6 : cmp eax, 0x24aa70e8 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000640dfe : cmp eax, 0x250 ; setb al ; ret
0x00000200001621f5 : cmp eax, 0x2890018 ; xor eax, eax ; ret
0x0000020000006ee9 : cmp eax, 0x28fc95 ; add byte ptr [rbp + 1], dh ; ret
0x00000200005bb538 : cmp eax, 0x29 ; jb 0x200005bb535 ; or eax, 0xffffffff ; ret
0x0000020000657303 : cmp eax, 0x2a80001 ; je 0x20000657316 ; xor eax, eax ; ret
0x0000020000494f0a : cmp eax, 0x30b ; jne 0x20000494ef5 ; xor al, al ; ret
0x00000200001e0107 : cmp eax, 0x3b45ffe8 ; ret
0x00000200006c389c : cmp eax, 0x40 ; jb 0x200006c387b ; ret
0x0000020000168956 : cmp eax, 0x40 ; jl 0x200001688e2 ; ret
0x00000200006344e1 : cmp eax, 0x4000001f ; je 0x200006344f4 ; xor al, al ; ret
0x000002000007b09d : cmp eax, 0x41000001 ; jmp rbx
0x00000200006c4b73 : cmp eax, 0x44b6058b ; ret 0x41ff
0x000002000042f5eb : cmp eax, 0x45474150 ; je 0x2000042f5fd ; mov eax, edx ; ret
0x000002000042f5eb : cmp eax, 0x45474150 ; je 0x2000042f5fe ; mov eax, edx ; ret
0x000002000064864f : cmp eax, 0x48000479 ; add esp, 0x48 ; ret
0x00000200004b7b5f : cmp eax, 0x48fff84e ; add esp, 0x28 ; ret
0x00000200005a7a23 : cmp eax, 0x50 ; jmp 0x200005a79ee
0x000002000019bf5b : cmp eax, 0x6020000 ; je 0x2000019bf6e ; xor al, al ; ret
0x00000200006d10f3 : cmp eax, 0x61 ; jae 0x200006d1113 ; movzx eax, r9w ; ret
0x000002000044408e : cmp eax, 0x8341fff7 ; ret
0x00000200003dd82c : cmp eax, 0x8b000005 ; ret 0x8b48
0x0000020000113624 : cmp eax, 0x8b440024 ; ret
0x000002000046dbdc : cmp eax, 0x8b4c0019 ; ret
0x00000200004e429d : cmp eax, 0x8b4cffdf ; ret
0x00000200004a58ff : cmp eax, 0x8bffbcd5 ; ret
0x0000020000191a6f : cmp eax, 0x8bffe925 ; ret
0x00000200005bbc38 : cmp eax, 0x8bffffff ; ret
0x0000020000573518 : cmp eax, 0xa ; je 0x20000573527 ; xor eax, eax ; ret
0x00000200003b7f25 : cmp eax, 0xb60fffcb ; ret
0x000002000008def5 : cmp eax, 0xd8511437 ; ret
0x000002000008e85d : cmp eax, 0xdf1afacc ; ret 0xda8
0x00000200000c0ba1 : cmp eax, 0xf60012bd ; ret
0x00000200000ec933 : cmp eax, 0xf748d68b ; fimul dword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000425354 : cmp eax, 0xffe647e7 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x00000200005da88a : cmp eax, 0xffffea6c ; ret
0x00000200000b517d : cmp eax, 2 ; jl 0x200000b518a ; ret
0x00000200000adf22 : cmp eax, 3 ; je 0x200000adf35 ; add rsp, 0x28 ; ret
0x00000200003f9482 : cmp eax, 3 ; jg 0x200003f949b ; xor eax, eax ; ret
0x000002000065524e : cmp eax, 3 ; jne 0x2000065521f ; xor eax, eax ; ret
0x00000200000c3158 : cmp eax, 7 ; je 0x200000c3179 ; or eax, 0x18 ; ret
0x00000200000e980b : cmp eax, 8 ; je 0x200000e9850 ; mov eax, r8d ; ret
0x0000020000141977 : cmp eax, dword ptr [r8] ; jb 0x20000141964 ; ret
0x0000020000634b63 : cmp eax, dword ptr [rax] ; add byte ptr [rcx + 3], al ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000231096 : cmp eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000179339 : cmp eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141978 : cmp eax, dword ptr [rax] ; jb 0x20000141963 ; ret
0x000002000045a9ea : cmp eax, dword ptr [rax] ; jne 0x2000045a9fd ; add rsp, 0x20 ; pop rbx ; ret
0x000002000025c746 : cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x00000200002633a2 : cmp eax, dword ptr [rax] ; pop rsp ; jmp qword ptr [rdx]
0x0000020000263782 : cmp eax, dword ptr [rax] ; push rax ; jle 0x200002637c9 ; add byte ptr [rax], cl ; jmp qword ptr [rdx]
0x0000020000231092 : cmp eax, dword ptr [rax] ; ret
0x000002000023108e : cmp eax, dword ptr [rax] ; xchg eax, edx ; cmp eax, dword ptr [rax] ; ret
0x0000020000141da9 : cmp eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000004d2ff : cmp eax, dword ptr [rbx + 0x1c] ; jbe 0x2000004d2ca ; jmp 0x2000004d30f
0x000002000042180d : cmp eax, dword ptr [rbx + rbp - 0x3e] ; movzx eax, r8w ; ret
0x00000200004033dd : cmp eax, dword ptr [rbx + rcx*4 + 0x53] ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rbx]
0x000002000013db59 : cmp eax, dword ptr [rcx + 0xf] ; mov bh, 0x14 ; and al, 0xff ; ret 0xfbe9
0x00000200006404ee : cmp eax, dword ptr [rcx + 8] ; jbe 0x20000640500 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000017fae1 : cmp eax, dword ptr [rcx - 0x75] ; ret 0xd523
0x00000200003de8c1 : cmp eax, dword ptr [rdi + 0x3b48fff7] ; ret 0x1577
0x00000200000a3a6f : cmp eax, dword ptr [rdx + rdx*8 - 0x6cc7c88b] ; ret 0
0x000002000022cc5d : cmp eax, dword ptr [rsi] ; cld ; ret 0x23
0x0000020000590009 : cmp eax, eax ; cmovg eax, r8d ; ret
0x00000200004f32a4 : cmp eax, eax ; ja 0x200004f32b7 ; jae 0x200004f32c5 ; or eax, 0xffffffff ; ret
0x0000020000066f39 : cmp eax, eax ; jae 0x20000066f2b ; xor al, al ; ret
0x0000020000045377 : cmp eax, eax ; jb 0x2000004532c ; xor eax, eax ; ret
0x0000020000070fc5 : cmp eax, eax ; jb 0x20000070fb1 ; ret
0x00000200000b2838 : cmp eax, eax ; jb 0x200000b2829 ; ret
0x00000200000c6e20 : cmp eax, eax ; jb 0x200000c6ea5 ; inc ecx ; inc rdx ; jmp 0x200000c6e11
0x000002000019e41a : cmp eax, eax ; jb 0x2000019e413 ; mov al, 1 ; ret
0x00000200001a683b : cmp eax, eax ; jb 0x200001a6823 ; mov eax, r9d ; ret
0x00000200001d860b : cmp eax, eax ; jb 0x200001d8605 ; ret
0x0000020000389c72 : cmp eax, eax ; jb 0x20000389c6c ; xor al, al ; ret
0x00000200004b0616 : cmp eax, eax ; je 0x200004b05e8 ; ret
0x00000200007071c1 : cmp eax, eax ; jle 0x200007071ce ; mov al, 1 ; ret
0x0000020000023ed9 : cmp eax, eax ; jne 0x20000023ebc ; mov eax, r9d ; ret
0x000002000015311d : cmp eax, eax ; jne 0x2000015312c ; or eax, 0xffffffff ; ret
0x00000200004c775d : cmp eax, eax ; jne 0x200004c774c ; xor eax, eax ; ret
0x000002000059e840 : cmp eax, eax ; jne 0x2000059e81e ; xor eax, eax ; ret
0x000002000065662d : cmp eax, eax ; jne 0x20000656629 ; xor eax, eax ; ret
0x00000200005092d3 : cmp eax, ebp ; ret
0x00000200004eb67c : cmp eax, ebx ; dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x00000200005348f7 : cmp eax, ebx ; jb 0x200005348cd ; movzx eax, r8w ; ret
0x00000200000dc811 : cmp eax, ebx ; jne 0x200000dc824 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052057e : cmp eax, ebx ; jne 0x20000520570 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005842f5 : cmp eax, ecx ; cmova rax, rcx ; ret
0x00000200004fbb3c : cmp eax, ecx ; cmovg eax, ecx ; add rsp, 0x28 ; ret
0x00000200006645b1 : cmp eax, ecx ; inc dword ptr [rcx - 1] ; ret 0x8148
0x00000200000ca967 : cmp eax, ecx ; ja 0x200000ca972 ; ret
0x000002000014012e : cmp eax, ecx ; ja 0x2000014013b ; sbb eax, eax ; ret
0x00000200003fd188 : cmp eax, ecx ; ja 0x200003fd198 ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x0000020000136c3f : cmp eax, ecx ; jae 0x20000136c50 ; add rsp, 0x38 ; ret
0x000002000016be99 : cmp eax, ecx ; jae 0x2000016bea6 ; mov al, 1 ; ret
0x000002000019c0c2 : cmp eax, ecx ; jae 0x2000019c0bd ; mov rax, rdx ; ret
0x000002000019c0c2 : cmp eax, ecx ; jae 0x2000019c0be ; mov rax, rdx ; ret
0x00000200001a6a1a : cmp eax, ecx ; jae 0x200001a6a29 ; or eax, 0xffffffff ; ret
0x0000020000362fe7 : cmp eax, ecx ; jae 0x20000362fff ; mov al, 1 ; ret
0x0000020000706099 : cmp eax, ecx ; jae 0x200007060a8 ; or eax, 0xffffffff ; ret
0x0000020000054ad7 : cmp eax, ecx ; jb 0x20000054aea ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000054af9 : cmp eax, ecx ; jb 0x20000054b0c ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000140735 : cmp eax, ecx ; jb 0x20000140748 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000015eb61 : cmp eax, ecx ; jb 0x2000015eb4e ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000017502c : cmp eax, ecx ; jb 0x20000175024 ; mov eax, 0xc0000225 ; ret
0x00000200001a7be1 : cmp eax, ecx ; jb 0x200001a7bde ; xor eax, eax ; ret
0x00000200001bfcee : cmp eax, ecx ; jb 0x200001bfcd2 ; ret
0x00000200001c1b67 : cmp eax, ecx ; jb 0x200001c1b7a ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000470ed7 : cmp eax, ecx ; jb 0x20000470e7e ; ret
0x00000200004757d7 : cmp eax, ecx ; jb 0x200004757cb ; mov eax, edx ; ret
0x00000200004757d7 : cmp eax, ecx ; jb 0x200004757cc ; mov eax, edx ; ret
0x00000200001e64bb : cmp eax, ecx ; jbe 0x20000145333 ; jmp 0x200001e6491
0x00000200001857d9 : cmp eax, ecx ; jbe 0x200001857ec ; mov eax, 1 ; ret
0x00000200001c2a45 : cmp eax, ecx ; jbe 0x200001c2a58 ; mov eax, 0xc000009a ; ret
0x00000200004f3364 : cmp eax, ecx ; jbe 0x200004f337f ; mov eax, 1 ; ret
0x00000200000bdf77 : cmp eax, ecx ; je 0x200000bdf74 ; mov rax, qword ptr [rax + 8] ; ret
0x000002000015a2e6 : cmp eax, ecx ; jl 0x2000015a2da ; xor eax, eax ; ret
0x00000200004e2c5a : cmp eax, ecx ; jl 0x200004e2c4c ; ret
0x00000200000232be : cmp eax, ecx ; jne 0x200000232b7 ; add rsp, 0x28 ; ret
0x000002000004d68f : cmp eax, ecx ; jne 0x2000004d66b ; xor eax, eax ; ret
0x0000020000191df2 : cmp eax, ecx ; jne 0x20000191dc4 ; shr edx, 0x18 ; mov al, dl ; ret
0x00000200001b9611 : cmp eax, ecx ; jne 0x200001b9601 ; ret
0x00000200003d9374 : cmp eax, ecx ; jne 0x200003d9381 ; xor eax, eax ; ret
0x00000200004855b9 : cmp eax, ecx ; jne 0x200004855c5 ; mov al, dl ; ret
0x00000200004855b9 : cmp eax, ecx ; jne 0x200004855c6 ; mov al, dl ; ret
0x000002000054e19f : cmp eax, ecx ; jne 0x2000054e19b ; xor eax, eax ; ret
0x000002000056fb80 : cmp eax, ecx ; jne 0x2000056fb58 ; xor eax, eax ; ret
0x00000200005c194e : cmp eax, ecx ; jne 0x200005c193e ; mov eax, 0xc0000225 ; ret
0x00000200005eee0d : cmp eax, ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x00000200004e8c59 : cmp eax, ecx ; sbb eax, eax ; and edx, eax ; mov eax, edx ; ret
0x000002000007368f : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000020000181a25 : cmp eax, ecx ; seta al ; add rsp, 0x28 ; ret
0x00000200000588c4 : cmp eax, ecx ; seta al ; ret
0x00000200005ba748 : cmp eax, ecx ; setb al ; ret
0x00000200001a6a25 : cmp eax, ecx ; setne al ; ret
0x000002000049b7b7 : cmp eax, edi ; push rsi ; ret
0x00000200004dbb49 : cmp eax, edx ; cmovae eax, edx ; ret
0x00000200000bdbce : cmp eax, edx ; cmove eax, r8d ; ret
0x00000200004f22b0 : cmp eax, edx ; ja 0x200004f22bd ; mov eax, ecx ; ret
0x00000200005122dc : cmp eax, edx ; ja 0x200005122f5 ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x00000200000aec08 : cmp eax, edx ; jae 0x200000aec19 ; add rsp, 0x28 ; ret
0x00000200000b676d : cmp eax, edx ; jae 0x200000b6792 ; ret
0x000002000014d926 : cmp eax, edx ; jae 0x2000014d978 ; mov r8d, edx ; jmp 0x2000014d978
0x00000200001639b8 : cmp eax, edx ; jae 0x200001639c7 ; or eax, 0xffffffff ; ret
0x00000200005aae92 : cmp eax, edx ; jae 0x200005aaea5 ; mov eax, 0xc0000023 ; ret
0x0000020000147ca1 : cmp eax, edx ; jb 0x20000147c98 ; ret
0x0000020000153fad : cmp eax, edx ; jb 0x20000153f9f ; ret
0x0000020000154074 : cmp eax, edx ; jb 0x20000154064 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000015468f : cmp eax, edx ; jb 0x20000154688 ; ret
0x00000200004dbb45 : cmp eax, edx ; jb 0x200004dbb47 ; cmp eax, edx ; cmovae eax, edx ; ret
0x0000020000566cfb : cmp eax, edx ; jb 0x20000566ced ; xor al, al ; ret
0x000002000056ccbf : cmp eax, edx ; jb 0x2000056ccbb ; mov eax, 0xc0000225 ; ret
0x00000200006f0b0e : cmp eax, edx ; jb 0x200006f0b07 ; ret
0x00000200000e84ac : cmp eax, edx ; jbe 0x200000e84ca ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000569a5c : cmp eax, edx ; jbe 0x20000569a6f ; mov eax, 0xc0000023 ; ret
0x000002000035fed2 : cmp eax, edx ; je 0x2000035fed2 ; ret
0x00000200001c3238 : cmp eax, edx ; jl 0x200001c3221 ; ret
0x00000200001a31d4 : cmp eax, edx ; jmp 0x200001a3201
0x000002000052ac71 : cmp eax, edx ; jmp 0x2000052aca9
0x0000020000018048 : cmp eax, edx ; jne 0x20000018057 ; mov rax, rcx ; ret
0x00000200000c9342 : cmp eax, edx ; jne 0x200000c9356 ; mov rax, r9 ; ret
0x000002000001ab34 : cmp eax, edx ; sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000002000037bd3b : cmp eax, edx ; setbe al ; ret
0x000002000015dcd7 : cmp eax, edx ; sete al ; ret
0x00000200005267d1 : cmp eax, esi ; ret 0x8bff
0x0000020000368b7f : cmp eax, esp ; jbe 0x20000368b8d ; xor ecx, ecx ; call rax
0x0000020000590008 : cmp eax, r8d ; cmovg eax, r8d ; ret
0x0000020000070fc4 : cmp eax, r8d ; jb 0x20000070fb2 ; ret
0x00000200000c6e1f : cmp eax, r8d ; jb 0x200000c6ea6 ; inc ecx ; inc rdx ; jmp 0x200000c6e12
0x0000020000389c71 : cmp eax, r8d ; jb 0x20000389c6d ; xor al, al ; ret
0x00000200007071c0 : cmp eax, r8d ; jle 0x200007071cf ; mov al, 1 ; ret
0x00000200004c775c : cmp eax, r8d ; jne 0x200004c774d ; xor eax, eax ; ret
0x00000200004e8c58 : cmp eax, r9d ; sbb eax, eax ; and edx, eax ; mov eax, edx ; ret
0x00000200005d43ee : cmp ebp, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005d442a : cmp ebp, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005d44b6 : cmp ebp, 0xff ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000091fd9 : cmp ebp, dword ptr [rax] ; jne 0x20000092059 ; cdq ; jl 0x2000009200a ; ret 0x23e8
0x00000200005f69b0 : cmp ebp, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200001169cf : cmp ebp, eax ; or eax, dword ptr [rax] ; mov eax, edx ; ret
0x0000020000508dd3 : cmp ebp, ebp ; ret
0x00000200005e0a66 : cmp ebp, ebx ; jb 0x200005e0a11 ; jmp 0x2000037ccc3
0x00000200003c91dd : cmp ebp, ebx ; ror byte ptr [rax - 0x75], 0x53 ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x0000020000133436 : cmp ebp, edi ; push rsi ; ret
0x00000200006358b3 : cmp ebp, esi ; ret
0x00000200003e6726 : cmp ebx, 4 ; je 0x200003e6736 ; call r12
0x00000200001e121b : cmp ebx, dword ptr [rcx - 0x12] ; inc dword ptr [rcx - 0xa] ; ret
0x000002000056784c : cmp ebx, eax ; jne 0x20000567815 ; jmp 0x200005678be
0x0000020000163a10 : cmp ebx, eax ; seta al ; ret
0x00000200001ab20c : cmp ebx, ebx ; seta r10b ; jmp 0x200001ab21c
0x00000200001be864 : cmp ebx, ecx ; jae 0x200001be877 ; mov eax, 1 ; ret
0x00000200005fc844 : cmp ebx, edi ; push rsi ; ret
0x0000020000101436 : cmp ecx, 0x10 ; je 0x20000101418 ; ret
0x000002000019c16c : cmp ecx, 0x10000 ; setge al ; ret
0x000002000001de1e : cmp ecx, 0x12 ; jae 0x2000001de2d ; mov al, 1 ; ret
0x000002000019ca3e : cmp ecx, 0x12 ; setbe al ; ret
0x000002000001de26 : cmp ecx, 0x14 ; ja 0x2000001de35 ; xor al, al ; ret
0x000002000019e493 : cmp ecx, 0x20 ; jb 0x2000019e488 ; mov rax, r8 ; ret
0x00000200003dd805 : cmp ecx, 0x20 ; je 0x200003dd821 ; ret
0x00000200004193ab : cmp ecx, 0x24 ; jb 0x20000419388 ; mov rax, r8 ; ret
0x000002000019ca52 : cmp ecx, 0x2ba3 ; setbe al ; ret
0x0000020000181960 : cmp ecx, 0x32 ; jb 0x20000181938 ; xor eax, eax ; ret
0x000002000012f23f : cmp ecx, 0x3a ; jae 0x2000012f253 ; movzx eax, cx ; sub eax, edx ; ret
0x00000200001c43bb : cmp ecx, 0x40 ; cmovne eax, edx ; ret
0x0000020000589405 : cmp ecx, 0x41 ; jae 0x20000589416 ; movzx eax, cx ; ret
0x0000020000144cf8 : cmp ecx, 0x6020000 ; setbe al ; ret
0x0000020000425e51 : cmp ecx, 0x61 ; jae 0x20000425e62 ; movzx eax, cx ; ret
0x000002000019c06b : cmp ecx, 0x7f ; jbe 0x2000019c07a ; mov al, 1 ; ret
0x0000020000105704 : cmp ecx, 0x7fffffff ; ja 0x20000105717 ; ret
0x00000200001487c8 : cmp ecx, 0x7fffffff ; ja 0x200001487db ; ret
0x00000200006c34fd : cmp ecx, 0x80 ; jb 0x200006c34c5 ; ret
0x00000200004c60fb : cmp ecx, 0x80 ; setae al ; ret
0x000002000013df6a : cmp ecx, 0x80 ; setb al ; ret
0x0000020000038d1f : cmp ecx, 0x8009035d ; je 0x20000038d5d ; mov eax, edx ; ret
0x00000200004fa48e : cmp ecx, 0xf ; jne 0x200004fa49f ; mov rax, r8 ; ret
0x00000200001525f9 : cmp ecx, 0xff ; je 0x20000152608 ; mov al, 1 ; ret
0x000002000042ee61 : cmp ecx, 1 ; je 0x2000042ee6c ; ret
0x0000020000198c68 : cmp ecx, 1 ; setle al ; ret
0x000002000069bbb8 : cmp ecx, 2 ; je 0x2000069bbc7 ; mov eax, edx ; jmp 0x2000069bc01
0x000002000011fa18 : cmp ecx, 5 ; jb 0x2000011fa14 ; xor eax, eax ; ret
0x0000020000150610 : cmp ecx, 5 ; lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x000002000052aee3 : cmp ecx, 6 ; jb 0x2000052aed5 ; add rsp, 0x28 ; ret
0x000002000012b3d0 : cmp ecx, 6 ; jl 0x2000012b3b3 ; add rsp, 0x28 ; ret
0x000002000041cafb : cmp ecx, 6 ; jne 0x2000041cb61 ; ret
0x000002000001e9f9 : cmp ecx, dword ptr [ebx] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000019c6fa : cmp ecx, dword ptr [rax + 0x28] ; jne 0x2000019c6f2 ; ret
0x000002000048568c : cmp ecx, dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000006c2d6 : cmp ecx, dword ptr [rax + 0xc] ; jb 0x2000006c2e5 ; mov eax, ecx ; ret
0x000002000014463b : cmp ecx, dword ptr [rax - 0x73] ; add al, 0xb ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000525687 : cmp ecx, dword ptr [rax - 0x74befbbd] ; ret
0x0000020000181874 : cmp ecx, dword ptr [rax - 0x75] ; ret 0xb849
0x00000200001a0de8 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000062e650 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4518
0x00000200005e6c60 : cmp ecx, dword ptr [rax - 0x7f] ; ret
0x000002000063756d : cmp ecx, dword ptr [rbx + 0x3d8d48da] ; leave ; ret
0x000002000001e9fa : cmp ecx, dword ptr [rbx] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000019f3fd : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x1977
0x000002000019f24f : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x870f
0x00000200006f520b : cmp ecx, dword ptr [rcx + rcx*4 + 0x73] ; or byte ptr [rax - 0x75], cl ; ret
0x00000200001352be : cmp ecx, dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], cl ; ret
0x000002000056964e : cmp ecx, dword ptr [rcx] ; sete al ; ret
0x0000020000641dd0 : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x20000641ddf ; xor eax, eax ; ret
0x0000020000641dcf : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x20000641de0 ; xor eax, eax ; ret
0x000002000064e5d1 : cmp ecx, dword ptr [rdx] ; ret 0x48ff
0x00000200000dc851 : cmp ecx, dword ptr [rip + 0x27a7c9] ; sete al ; ret
0x0000020000100a86 : cmp ecx, eax ; cmova rcx, rax ; mov eax, ecx ; ret
0x00000200004cc8f5 : cmp ecx, eax ; cmovne eax, edx ; ret
0x000002000001b28f : cmp ecx, eax ; ja 0x2000001b29e ; sub rax, rcx ; ret
0x000002000002335b : cmp ecx, eax ; ja 0x2000002336a ; sub rax, rcx ; ret
0x000002000002dc6a : cmp ecx, eax ; ja 0x2000002dc7b ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000019a9d6 : cmp ecx, eax ; ja 0x2000019a9e9 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x000002000040620b : cmp ecx, eax ; ja 0x2000040621e ; sbb eax, eax ; add eax, 2 ; ret
0x000002000000587d : cmp ecx, eax ; jae 0x20000005878 ; mov eax, 1 ; ret
0x000002000000586b : cmp ecx, eax ; jae 0x20000005878 ; xor eax, eax ; ret
0x0000020000023e1e : cmp ecx, eax ; jae 0x20000023e1d ; mov eax, 1 ; ret
0x0000020000023e10 : cmp ecx, eax ; jae 0x20000023e1d ; xor eax, eax ; ret
0x00000200001239c7 : cmp ecx, eax ; jae 0x200001239d4 ; xor eax, eax ; ret
0x00000200004cec94 : cmp ecx, eax ; jae 0x200004ceca7 ; mov eax, 0xc0000095 ; ret
0x0000020000527a74 : cmp ecx, eax ; jae 0x20000527a87 ; mov eax, 0xc0000095 ; ret
0x00000200006ba278 : cmp ecx, eax ; jae 0x200006ba28b ; mov eax, 1 ; ret
0x00000200001540fb : cmp ecx, eax ; jb 0x200001540ef ; mov rax, r10 ; ret
0x00000200001544ec : cmp ecx, eax ; jb 0x200001544d9 ; mov rax, r10 ; ret
0x00000200001544ec : cmp ecx, eax ; jb 0x200001544da ; mov rax, r10 ; ret
0x000002000019e334 : cmp ecx, eax ; jb 0x2000019e32a ; mov al, 1 ; ret
0x000002000019ec04 : cmp ecx, eax ; jb 0x2000019ebfd ; ret
0x00000200001a689f : cmp ecx, eax ; jb 0x200001a6898 ; mov eax, edx ; ret
0x00000200001b8ed5 : cmp ecx, eax ; jb 0x200001b8ec9 ; ret
0x00000200006c442e : cmp ecx, eax ; jb 0x200006c444b ; add rsp, 0x28 ; ret
0x00000200005498bf : cmp ecx, eax ; jbe 0x200005498cc ; xor eax, eax ; ret
0x00000200003b3c7c : cmp ecx, eax ; je 0x200003b3c89 ; xor al, al ; ret
0x000002000046bdb2 : cmp ecx, eax ; jg 0x2000046bdc3 ; add rsp, 0x38 ; ret
0x0000020000707228 : cmp ecx, eax ; jg 0x200007071cb ; xor al, al ; ret
0x00000200001a85f4 : cmp ecx, eax ; jne 0x200001a85dc ; mov eax, r8d ; ret
0x00000200001a8a31 : cmp ecx, eax ; jne 0x200001a8a19 ; mov eax, r8d ; ret
0x00000200001ab419 : cmp ecx, eax ; jne 0x200001ab401 ; mov eax, r8d ; ret
0x000002000056ef38 : cmp ecx, eax ; jne 0x2000056ef2d ; xor eax, eax ; ret
0x0000020000391b4b : cmp ecx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x000002000058bf06 : cmp ecx, eax ; setae al ; ret
0x000002000037d9b7 : cmp ecx, eax ; sete al ; ret
0x000002000041d409 : cmp ecx, ebx ; jb 0x2000041d400 ; mov eax, r9d ; sub eax, r10d ; jmp 0x2000041d421
0x00000200004d5cf9 : cmp ecx, ebx ; jne 0x200004d5d0c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001362db : cmp ecx, ecx ; jb 0x200001362c2 ; ret
0x000002000041c4c2 : cmp ecx, ecx ; jb 0x2000041c4bb ; and eax, 0x1f ; ret
0x000002000059cddb : cmp ecx, ecx ; jb 0x2000059cdc9 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200000fe3c7 : cmp ecx, ecx ; setbe dl ; mov eax, edx ; ret
0x00000200001e7a1b : cmp ecx, edx ; cmovbe eax, r8d ; ret
0x00000200001a5ea5 : cmp ecx, edx ; jae 0x200001a5e6d ; xor eax, eax ; ret
0x00000200000c7807 : cmp ecx, edx ; jb 0x200000c77c4 ; ret 0
0x00000200000fe57f : cmp ecx, edx ; jb 0x200000fe58e ; mov rax, r11 ; ret
0x000002000017f116 : cmp ecx, edx ; jb 0x2000017f108 ; xor eax, eax ; ret
0x00000200001875f1 : cmp ecx, edx ; jb 0x200001875ef ; add rsp, 0x38 ; ret
0x000002000019d343 : cmp ecx, edx ; jb 0x2000019d32d ; ret
0x000002000019e37e : cmp ecx, edx ; jb 0x2000019e359 ; mov al, 1 ; ret
0x000002000019e46d : cmp ecx, edx ; jb 0x2000019e441 ; mov al, 1 ; ret
0x000002000019ed46 : cmp ecx, edx ; jb 0x2000019ed2e ; ret
0x000002000050603e : cmp ecx, edx ; jb 0x20000506019 ; mov al, cl ; ret
0x000002000052a2f6 : cmp ecx, edx ; jb 0x2000052a2ee ; ret
0x0000020000643f8d : cmp ecx, edx ; jb 0x20000643f86 ; xor eax, eax ; ret
0x0000020000368265 : cmp ecx, edx ; jbe 0x20000368259 ; ret
0x00000200004252e1 : cmp ecx, edx ; jl 0x200004252f3 ; setle al ; inc eax ; ret
0x000002000017e34e : cmp ecx, edx ; jne 0x2000017e34b ; mov qword ptr [r8], rax ; ret
0x000002000019e3c5 : cmp ecx, edx ; jne 0x2000019e3a0 ; mov al, 1 ; ret
0x000002000045b607 : cmp ecx, edx ; jne 0x2000045b5fb ; add rsp, 0x28 ; ret
0x00000200005a923b : cmp ecx, edx ; jne 0x200005a922f ; xor al, al ; ret
0x00000200004f32bd : cmp ecx, edx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x00000200004ab040 : cmp ecx, edx ; seta al ; ret
0x00000200001c5694 : cmp ecx, edx ; setb r8b ; mov eax, r8d ; ret
0x000002000019c15e : cmp ecx, edx ; setbe al ; ret
0x000002000058dd90 : cmp ecx, edx ; sete al ; ret
0x00000200000adc9e : cmp ecx, edx ; setg al ; ret
0x000002000060fbf7 : cmp ecx, esp ; push rsi ; ret
0x000002000046bdb1 : cmp ecx, r8d ; jg 0x2000046bdc4 ; add rsp, 0x38 ; ret
0x00000200001a85f3 : cmp ecx, r8d ; jne 0x200001a85dd ; mov eax, r8d ; ret
0x00000200001a8a30 : cmp ecx, r8d ; jne 0x200001a8a1a ; mov eax, r8d ; ret
0x00000200001ab418 : cmp ecx, r8d ; jne 0x200001ab402 ; mov eax, r8d ; ret
0x000002000037d9b6 : cmp ecx, r8d ; sete al ; ret
0x000002000058eaea : cmp edi, 0x5a ; ja 0x2000058eaff ; movzx eax, di ; add eax, edx ; jmp 0x2000058eb02
0x000002000015502d : cmp edi, 0xff ; jne 0x20000154ff8 ; jmp 0x20000155015
0x0000020000655217 : cmp edi, dword ptr [rax + 1] ; ret
0x00000200001772b9 : cmp edi, edi ; ret
0x000002000043bdfe : cmp edi, edi ; ret 0x8349
0x0000020000517a12 : cmp edi, edx ; push rsi ; ret
0x000002000057b974 : cmp edx, 0x10 ; jb 0x2000057b970 ; xor al, al ; ret
0x000002000064c9b8 : cmp edx, 0x3c ; jb 0x2000064c9b3 ; ret
0x0000020000640e08 : cmp edx, 0x98 ; sete al ; ret
0x000002000043a661 : cmp edx, 1 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000020000018913 : cmp edx, 1 ; je 0x20000018931 ; add rsp, 0x28 ; ret
0x0000020000498350 : cmp edx, 2 ; je 0x2000049835d ; ret
0x000002000049a1d4 : cmp edx, 2 ; je 0x2000049a1e7 ; add rsp, 0x28 ; ret
0x00000200004b1f5c : cmp edx, 3 ; je 0x200004b1f6f ; add rsp, 0x28 ; ret
0x00000200004b1f8c : cmp edx, 3 ; je 0x200004b1f99 ; ret
0x0000020000117742 : cmp edx, 5 ; cmovne eax, ecx ; ret
0x0000020000147b84 : cmp edx, 5 ; jb 0x20000147b80 ; xor eax, eax ; ret
0x0000020000140af0 : cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000140ad8 ; ret
0x0000020000140aef : cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000140ad9 ; ret
0x0000020000569a8f : cmp edx, dword ptr [r9] ; jb 0x20000569a7e ; xor eax, eax ; ret
0x0000020000140af1 : cmp edx, dword ptr [rax + 0x40] ; jb 0x20000140ad7 ; ret
0x00000200004223ec : cmp edx, dword ptr [rbx + 0x250] ; ja 0x200004223ff ; ret
0x00000200005837a7 : cmp edx, dword ptr [rcx + 0x10] ; jae 0x200005837be ; mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000491722 : cmp edx, dword ptr [rcx + 0xc] ; jbe 0x200004916fe ; and dword ptr [rcx + 4], 0 ; ret
0x0000020000569a90 : cmp edx, dword ptr [rcx] ; jb 0x20000569a7d ; xor eax, eax ; ret
0x000002000066a5a1 : cmp edx, eax ; inc dword ptr [rbx + rcx*4 + 0xd] ; jno 0x2000066a5ea ; ret 0x48ff
0x0000020000020bde : cmp edx, eax ; ja 0x20000020be9 ; ret
0x00000200000a735c : cmp edx, eax ; ja 0x200000a73ad ; ret
0x00000200000aecd9 : cmp edx, eax ; jb 0x200000aecd8 ; mov rax, r8 ; ret
0x0000020000132b0e : cmp edx, eax ; jb 0x20000132b07 ; ret
0x0000020000157d08 : cmp edx, eax ; jb 0x20000157ce9 ; xor al, al ; ret
0x000002000019e3f2 : cmp edx, eax ; jb 0x2000019e3ef ; mov al, 1 ; ret
0x00000200003d88d4 : cmp edx, eax ; jb 0x200003d88c8 ; shr rax, 1 ; ret
0x00000200001120da : cmp edx, eax ; jbe 0x200001120eb ; add rsp, 0x28 ; ret
0x00000200001c0586 : cmp edx, eax ; jbe 0x200001c0578 ; add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000020edd : cmp edx, eax ; jne 0x20000020eda ; xor eax, eax ; ret
0x0000020000054f07 : cmp edx, eax ; jne 0x20000054f14 ; mov al, 1 ; ret
0x000002000037e9a2 : cmp edx, eax ; jne 0x2000037e99d ; ret
0x000002000052aca6 : cmp edx, eax ; jne 0x2000052acb8 ; xor eax, eax ; ret
0x00000200006ba2a1 : cmp edx, eax ; jne 0x200006ba291 ; xor eax, eax ; ret
0x000002000038ec58 : cmp edx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x00000200000e47cb : cmp edx, ebx ; jne 0x200000e47de ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000fe567 : cmp edx, ecx ; cmova r10, rcx ; mov rax, r10 ; ret
0x000002000012cd0c : cmp edx, ecx ; ja 0x2000012cd17 ; ret
0x00000200000d30f7 : cmp edx, ecx ; jae 0x200000d310a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004cecc9 : cmp edx, ecx ; jae 0x200004cecd6 ; mov eax, ecx ; ret
0x0000020000527aa9 : cmp edx, ecx ; jae 0x20000527ab6 ; mov eax, ecx ; ret
0x000002000053156b : cmp edx, ecx ; jae 0x20000531578 ; mov al, 1 ; ret
0x00000200001064c9 : cmp edx, ecx ; jb 0x200001064bd ; xor eax, eax ; ret
0x0000020000126104 : cmp edx, ecx ; jb 0x200001260fa ; mov eax, 0x10 ; ret
0x00000200001a3e82 : cmp edx, ecx ; jb 0x200001a3e51 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003bd4f9 : cmp edx, ecx ; jb 0x200003bd510 ; add rsp, 0x28 ; ret
0x0000020000634a8d : cmp edx, ecx ; jb 0x20000634a7f ; xor eax, eax ; ret
0x0000020000188e80 : cmp edx, ecx ; je 0x20000188e8f ; mov eax, r11d ; ret
0x0000020000657f9f : cmp edx, ecx ; je 0x20000657fab ; xor eax, eax ; ret
0x000002000011e136 : cmp edx, ecx ; jne 0x2000011e133 ; sub rax, rdx ; ret
0x0000020000378737 : cmp edx, ecx ; jne 0x2000037872f ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200005841b8 : cmp edx, ecx ; push rsi ; ret
0x0000020000476811 : cmp edx, ecx ; ret 0xc6ff
0x000002000012189d : cmp edx, ecx ; seta al ; ret
0x000002000000e25e : cmp edx, edx ; jb 0x2000000e24b ; xor eax, eax ; ret
0x000002000000e25d : cmp edx, r10d ; jb 0x2000000e24c ; xor eax, eax ; ret
0x0000020000132b0d : cmp edx, r8d ; jb 0x20000132b08 ; ret
0x00000200003d88d3 : cmp edx, r8d ; jb 0x200003d88c9 ; shr rax, 1 ; ret
0x00000200001064c8 : cmp edx, r9d ; jb 0x200001064be ; xor eax, eax ; ret
0x00000200001064c7 : cmp edx, r9d ; jb 0x200001064bf ; xor eax, eax ; ret
0x0000020000634a8c : cmp edx, r9d ; jb 0x20000634a80 ; xor eax, eax ; ret
0x0000020000020999 : cmp esi, 0x8b44ffff ; ret 0x7ce9
0x00000200001a1ad6 : cmp esi, dword ptr [rbx] ; enter -0x2efd, -0x75 ; ret 0xe8c1
0x000002000061676d : cmp esi, dword ptr [rbx] ; rol byte ptr [rbp - 0x75], cl ; ret
0x00000200005c2e27 : cmp esi, dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000cf0ec
0x000002000064ce01 : cmp esi, dword ptr [rdx] ; ret 0x48ff
0x0000020000392f4f : cmp esi, ebp ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200004b4cdb : cmp esi, ebx ; ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x0000020000003b98 : cmp esi, ecx ; jb 0x20000003bec ; inc edx ; jmp 0x20000003b80
0x0000020000172beb : cmp esp, ecx ; sete al ; ret
0x000002000064d882 : cmp qword ptr [r8], rax ; jne 0x2000064d87e ; ret
0x000002000012724f : cmp qword ptr [r9 + 0x50], rcx ; je 0x2000012725e ; ret
0x0000020000066269 : cmp qword ptr [rax + 0x10], rcx ; je 0x2000006627a ; xor eax, eax ; ret
0x0000020000062a35 : cmp qword ptr [rax + 0x10], rcx ; jne 0x20000062a58 ; ret
0x000002000047e814 : cmp qword ptr [rax + 8], 0 ; je 0x2000047e827 ; xor eax, eax ; ret
0x000002000004d665 : cmp qword ptr [rax + 8], rcx ; jne 0x2000004d68b ; ret
0x0000020000641d2a : cmp qword ptr [rax], 0 ; jne 0x20000641d22 ; xor al, al ; ret
0x000002000000b503 : cmp qword ptr [rax], rax ; jne 0x2000000b511 ; xor eax, eax ; ret
0x00000200000b2480 : cmp qword ptr [rax], rax ; jne 0x200000b2493 ; add rsp, 0x28 ; ret
0x00000200000bdfd4 : cmp qword ptr [rax], rax ; jne 0x200000bdfdf ; ret
0x00000200001590df : cmp qword ptr [rax], rdx ; cmovne edx, r8d ; mov eax, edx ; ret
0x000002000019c8c4 : cmp qword ptr [rcx + 0x10], rdx ; sete al ; ret
0x00000200006344f1 : cmp qword ptr [rcx + 0x20], 0 ; je 0x200006344f1 ; mov al, 1 ; ret
0x00000200003f79d2 : cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; add eax, 2 ; ret
0x00000200004107e1 : cmp qword ptr [rcx + 0x28], rax ; je 0x200004107f2 ; xor eax, eax ; ret
0x000002000019c8a4 : cmp qword ptr [rcx + 0x28], rdx ; setb al ; ret
0x00000200000badb4 : cmp qword ptr [rcx + 0x30], rax ; jne 0x200000badb0 ; mov al, 1 ; ret
0x0000020000123a0c : cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x00000200003d7321 : cmp qword ptr [rcx + 0x38], rax ; sete al ; ret
0x000002000064bdad : cmp qword ptr [rcx + r8*8 + 0x70], rdx ; setne al ; ret
0x0000020000641d80 : cmp qword ptr [rcx], 0 ; jne 0x20000641d78 ; xor al, al ; ret
0x000002000019abde : cmp qword ptr [rcx], rax ; sete al ; ret
0x00000200000badd0 : cmp qword ptr [rcx], rcx ; jne 0x200000bade1 ; mov rax, rcx ; ret
0x0000020000378714 : cmp qword ptr [rcx], rcx ; jne 0x20000378723 ; xor eax, eax ; ret
0x0000020000423fd4 : cmp qword ptr [rcx], rcx ; jne 0x20000423fdf ; ret
0x0000020000424018 : cmp qword ptr [rcx], rcx ; jne 0x20000424023 ; ret
0x000002000036cfc0 : cmp qword ptr [rdx + 0x10], rax ; ja 0x2000036cfd1 ; mov al, 1 ; ret
0x0000020000485a66 : cmp qword ptr [rdx + rcx], 0 ; setne al ; ret
0x000002000064d8c4 : cmp qword ptr [rdx], rax ; jne 0x2000064d8c0 ; ret
0x0000020000139a48 : cmp qword ptr [rip + 0x1ae231], rax ; jne 0x20000139a5b ; ret
0x000002000004d664 : cmp qword ptr cs:[rax + 8], rcx ; jne 0x2000004d68c ; ret
0x00000200000fe566 : cmp r10, rcx ; cmova r10, rcx ; mov rax, r10 ; ret
0x000002000064c230 : cmp r10b, 0x1b ; ja 0x2000064c245 ; movzx eax, r10b ; jmp 0x2000064c251
0x000002000064c2db : cmp r10b, 0x1b ; ja 0x2000064c2f0 ; movzx eax, r10b ; jmp 0x2000064c2fc
0x000002000064c393 : cmp r10b, 0x1b ; ja 0x2000064c3a8 ; movzx eax, r10b ; jmp 0x2000064c3b4
0x000002000064c464 : cmp r10b, 0x1b ; ja 0x2000064c479 ; movzx eax, r10b ; jmp 0x2000064c485
0x000002000053156a : cmp r10d, ecx ; jae 0x20000531579 ; mov al, 1 ; ret
0x0000020000157d07 : cmp r10d, r8d ; jb 0x20000157cea ; xor al, al ; ret
0x00000200001ab20b : cmp r11d, ebx ; seta r10b ; jmp 0x200001ab21d
0x0000020000163a0f : cmp r11d, r8d ; seta al ; ret
0x0000020000168955 : cmp r8, 0x40 ; jl 0x200001688e3 ; ret
0x0000020000141da8 : cmp r8, qword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000153fac : cmp r8, r10 ; jb 0x20000153fa0 ; ret
0x000002000056fb7f : cmp r8, r9 ; jne 0x2000056fb59 ; xor eax, eax ; ret
0x0000020000045376 : cmp r8, rax ; jb 0x2000004532d ; xor eax, eax ; ret
0x000002000019e419 : cmp r8, rax ; jb 0x2000019e414 ; mov al, 1 ; ret
0x00000200001a683a : cmp r8, rax ; jb 0x200001a6824 ; mov eax, r9d ; ret
0x0000020000023ed8 : cmp r8, rax ; jne 0x20000023ebd ; mov eax, r9d ; ret
0x0000020000706098 : cmp r8, rcx ; jae 0x200007060a9 ; or eax, 0xffffffff ; ret
0x00000200001b9610 : cmp r8, rcx ; jne 0x200001b9602 ; ret
0x00000200003d9373 : cmp r8, rcx ; jne 0x200003d9382 ; xor eax, eax ; ret
0x00000200000588c3 : cmp r8, rcx ; seta al ; ret
0x00000200001c3237 : cmp r8, rdx ; jl 0x200001c3222 ; ret
0x000002000037bd3a : cmp r8, rdx ; setbe al ; ret
0x000002000015dcd6 : cmp r8, rdx ; sete al ; ret
0x00000200004fb10b : cmp r8b, 0xf ; ja 0x200004fb0d9 ; xor al, al ; ret
0x0000020000662542 : cmp r8b, bpl ; ret
0x000002000015311c : cmp r8d, eax ; jne 0x2000015312d ; or eax, 0xffffffff ; ret
0x00000200001a6a19 : cmp r8d, ecx ; jae 0x200001a6a2a ; or eax, 0xffffffff ; ret
0x00000200001bfced : cmp r8d, ecx ; jb 0x200001bfcd3 ; ret
0x0000020000470ed6 : cmp r8d, ecx ; jb 0x20000470e7f ; ret
0x00000200001a6a24 : cmp r8d, ecx ; setne al ; ret
0x000002000014d925 : cmp r8d, edx ; jae 0x2000014d979 ; mov r8d, edx ; jmp 0x2000014d979
0x0000020000566cfa : cmp r8d, edx ; jb 0x20000566cee ; xor al, al ; ret
0x00000200006f0b0d : cmp r8d, edx ; jb 0x200006f0b08 ; ret
0x000002000052ac70 : cmp r8d, edx ; jmp 0x2000052acaa
0x00000200005348f6 : cmp r8d, r11d ; jb 0x200005348ce ; movzx eax, r8w ; ret
0x000002000016be98 : cmp r8d, r9d ; jae 0x2000016bea7 ; mov al, 1 ; ret
0x00000200004757d6 : cmp r8d, r9d ; jb 0x200004757cc ; mov eax, edx ; ret
0x00000200004757d6 : cmp r8d, r9d ; jb 0x200004757cd ; mov eax, edx ; ret
0x000002000015a2e5 : cmp r8d, r9d ; jl 0x2000015a2db ; xor eax, eax ; ret
0x00000200005ba707 : cmp r8d, r9d ; seta al ; ret
0x00000200005ba747 : cmp r8d, r9d ; setb al ; ret
0x00000200005ba706 : cmp r8w, r9w ; seta al ; ret
0x00000200005ba746 : cmp r8w, r9w ; setb al ; ret
0x000002000042ee60 : cmp r9, 1 ; je 0x2000042ee6d ; ret
0x00000200001a5ea4 : cmp r9, r10 ; jae 0x200001a5e6e ; xor eax, eax ; ret
0x000002000019e37d : cmp r9, r10 ; jb 0x2000019e35a ; mov al, 1 ; ret
0x000002000019e46c : cmp r9, r10 ; jb 0x2000019e442 ; mov al, 1 ; ret
0x000002000019e3c4 : cmp r9, r10 ; jne 0x2000019e3a1 ; mov al, 1 ; ret
0x00000200005a923a : cmp r9, r10 ; jne 0x200005a9230 ; xor al, al ; ret
0x00000200001540fa : cmp r9, r8 ; jb 0x200001540f0 ; mov rax, r10 ; ret
0x00000200001544eb : cmp r9, r8 ; jb 0x200001544da ; mov rax, r10 ; ret
0x00000200001544eb : cmp r9, r8 ; jb 0x200001544db ; mov rax, r10 ; ret
0x000002000058bf05 : cmp r9, rax ; setae al ; ret
0x000002000012303c : cmp r9b, r13b ; cmp al, 0x1a ; cli ; push rsi ; ret 0x7401
0x000002000018195f : cmp r9d, 0x32 ; jb 0x20000181939 ; xor eax, eax ; ret
0x000002000041cafa : cmp r9d, 6 ; jne 0x2000041cb62 ; ret
0x00000200001362da : cmp r9d, ecx ; jb 0x200001362c3 ; ret
0x00000200000fe57e : cmp r9d, edx ; jb 0x200000fe58f ; mov rax, r11 ; ret
0x000002000050603d : cmp r9d, edx ; jb 0x2000050601a ; mov al, cl ; ret
0x000002000052a2f5 : cmp r9d, edx ; jb 0x2000052a2ef ; ret
0x000002000017f115 : cmp r9d, r10d ; jb 0x2000017f109 ; xor eax, eax ; ret
0x0000020000643f8c : cmp r9d, r10d ; jb 0x20000643f87 ; xor eax, eax ; ret
0x000002000060fbf6 : cmp r9d, r12d ; push rsi ; ret
0x000002000050603c : cmp r9w, dx ; jb 0x2000050601b ; mov al, cl ; ret
0x00000200006c389b : cmp rax, 0x40 ; jb 0x200006c387c ; ret
0x0000020000368b7e : cmp rax, r12 ; jbe 0x20000368b8e ; xor ecx, ecx ; call rax
0x0000020000066f38 : cmp rax, r8 ; jae 0x20000066f2c ; xor al, al ; ret
0x00000200000b2837 : cmp rax, r8 ; jb 0x200000b282a ; ret
0x00000200001d860a : cmp rax, r8 ; jb 0x200001d8606 ; ret
0x00000200004b0615 : cmp rax, r8 ; je 0x200004b05e9 ; ret
0x000002000059e83f : cmp rax, r8 ; jne 0x2000059e81f ; xor eax, eax ; ret
0x000002000065662c : cmp rax, r8 ; jne 0x2000065662a ; xor eax, eax ; ret
0x00000200000232bd : cmp rax, r9 ; jne 0x200000232b8 ; add rsp, 0x28 ; ret
0x00000200005842f4 : cmp rax, rcx ; cmova rax, rcx ; ret
0x000002000019c0c1 : cmp rax, rcx ; jae 0x2000019c0be ; mov rax, rdx ; ret
0x000002000019c0c1 : cmp rax, rcx ; jae 0x2000019c0bf ; mov rax, rdx ; ret
0x0000020000362fe6 : cmp rax, rcx ; jae 0x20000363000 ; mov al, 1 ; ret
0x0000020000362fe5 : cmp rax, rcx ; jae 0x20000363001 ; mov al, 1 ; ret
0x00000200001a7be0 : cmp rax, rcx ; jb 0x200001a7bdf ; xor eax, eax ; ret
0x00000200000bdf76 : cmp rax, rcx ; je 0x200000bdf75 ; mov rax, qword ptr [rax + 8] ; ret
0x00000200004e2c59 : cmp rax, rcx ; jl 0x200004e2c4d ; ret
0x000002000004d68e : cmp rax, rcx ; jne 0x2000004d66c ; xor eax, eax ; ret
0x00000200004855b8 : cmp rax, rcx ; jne 0x200004855c6 ; mov al, dl ; ret
0x00000200004855b8 : cmp rax, rcx ; jne 0x200004855c7 ; mov al, dl ; ret
0x000002000054e19e : cmp rax, rcx ; jne 0x2000054e19c ; xor eax, eax ; ret
0x000002000007368e : cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200000aec07 : cmp rax, rdx ; jae 0x200000aec1a ; add rsp, 0x28 ; ret
0x00000200000b676c : cmp rax, rdx ; jae 0x200000b6793 ; ret
0x0000020000147ca0 : cmp rax, rdx ; jb 0x20000147c99 ; ret
0x000002000015468e : cmp rax, rdx ; jb 0x20000154689 ; ret
0x00000200001a31d3 : cmp rax, rdx ; jmp 0x200001a3202
0x000002000056784b : cmp rbx, rax ; jne 0x20000567816 ; jmp 0x200005678bf
0x00000200003dd804 : cmp rcx, 0x20 ; je 0x200003dd822 ; ret
0x00000200001525f8 : cmp rcx, 0xff ; je 0x20000152609 ; mov al, 1 ; ret
0x000002000019c6f9 : cmp rcx, qword ptr [r8 + 0x28] ; jne 0x2000019c6f3 ; ret
0x000002000056964d : cmp rcx, qword ptr [rcx] ; sete al ; ret
0x000002000019d342 : cmp rcx, r10 ; jb 0x2000019d32e ; ret
0x000002000019ed45 : cmp rcx, r10 ; jb 0x2000019ed2f ; ret
0x00000200004cc8f4 : cmp rcx, r8 ; cmovne eax, edx ; ret
0x00000200001b8ed4 : cmp rcx, r8 ; jb 0x200001b8eca ; ret
0x000002000041c4c1 : cmp rcx, r9 ; jb 0x2000041c4bc ; and eax, 0x1f ; ret
0x00000200000fe3c6 : cmp rcx, r9 ; setbe dl ; mov eax, edx ; ret
0x0000020000100a85 : cmp rcx, rax ; cmova rcx, rax ; mov eax, ecx ; ret
0x000002000001b28e : cmp rcx, rax ; ja 0x2000001b29f ; sub rax, rcx ; ret
0x000002000002335a : cmp rcx, rax ; ja 0x2000002336b ; sub rax, rcx ; ret
0x000002000002dc69 : cmp rcx, rax ; ja 0x2000002dc7c ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000000586a : cmp rcx, rax ; jae 0x20000005879 ; xor eax, eax ; ret
0x0000020000023e0f : cmp rcx, rax ; jae 0x20000023e1e ; xor eax, eax ; ret
0x00000200001239c6 : cmp rcx, rax ; jae 0x200001239d5 ; xor eax, eax ; ret
0x000002000019e333 : cmp rcx, rax ; jb 0x2000019e32b ; mov al, 1 ; ret
0x000002000019ec03 : cmp rcx, rax ; jb 0x2000019ebfe ; ret
0x00000200001a689e : cmp rcx, rax ; jb 0x200001a6899 ; mov eax, edx ; ret
0x00000200006c442d : cmp rcx, rax ; jb 0x200006c444c ; add rsp, 0x28 ; ret
0x00000200005498be : cmp rcx, rax ; jbe 0x200005498cd ; xor eax, eax ; ret
0x00000200003b3c7b : cmp rcx, rax ; je 0x200003b3c8a ; xor al, al ; ret
0x000002000056ef37 : cmp rcx, rax ; jne 0x2000056ef2e ; xor eax, eax ; ret
0x00000200001e7a1a : cmp rcx, rdx ; cmovbe eax, r8d ; ret
0x00000200000c7806 : cmp rcx, rdx ; jb 0x200000c77c5 ; ret 0
0x00000200001875f0 : cmp rcx, rdx ; jb 0x200001875f0 ; add rsp, 0x38 ; ret
0x0000020000368264 : cmp rcx, rdx ; jbe 0x2000036825a ; ret
0x000002000017e34d : cmp rcx, rdx ; jne 0x2000017e34c ; mov qword ptr [r8], rax ; ret
0x000002000045b606 : cmp rcx, rdx ; jne 0x2000045b5fc ; add rsp, 0x28 ; ret
0x00000200004ab03f : cmp rcx, rdx ; seta al ; ret
0x000002000015502c : cmp rdi, 0xff ; jne 0x20000154ff9 ; jmp 0x20000155016
0x0000020000020edc : cmp rdx, r8 ; jne 0x20000020edb ; xor eax, eax ; ret
0x000002000037e9a1 : cmp rdx, r8 ; jne 0x2000037e99e ; ret
0x00000200006ba2a0 : cmp rdx, r8 ; jne 0x200006ba292 ; xor eax, eax ; ret
0x00000200004cecc8 : cmp rdx, r9 ; jae 0x200004cecd7 ; mov eax, ecx ; ret
0x0000020000527aa8 : cmp rdx, r9 ; jae 0x20000527ab7 ; mov eax, ecx ; ret
0x00000200000a735b : cmp rdx, rax ; ja 0x200000a73ae ; ret
0x00000200000aecd8 : cmp rdx, rax ; jb 0x200000aecd9 ; mov rax, r8 ; ret
0x000002000019e3f1 : cmp rdx, rax ; jb 0x2000019e3f0 ; mov al, 1 ; ret
0x00000200001120d9 : cmp rdx, rax ; jbe 0x200001120ec ; add rsp, 0x28 ; ret
0x0000020000054f06 : cmp rdx, rax ; jne 0x20000054f15 ; mov al, 1 ; ret
0x00000200003bd4f8 : cmp rdx, rcx ; jb 0x200003bd511 ; add rsp, 0x28 ; ret
0x000002000011e135 : cmp rdx, rcx ; jne 0x2000011e134 ; sub rax, rdx ; ret
0x0000020000378736 : cmp rdx, rcx ; jne 0x20000378730 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000012189c : cmp rdx, rcx ; seta al ; ret
0x0000020000174b9e : cmp word ptr [r8], r10w ; je 0x20000174bb1 ; mov eax, r9d ; ret
0x0000020000027275 : cmp word ptr [rax], 0 ; jne 0x2000002725e ; mov rax, rcx ; ret
0x0000020000159104 : cmp word ptr [rcx + 2], ax ; jae 0x20000159115 ; xor al, al ; ret
0x000002000055421a : cmp word ptr [rcx + rax*2], r9w ; jne 0x2000055421f ; jmp 0x200005541ee
0x000002000055677a : cmp word ptr [rcx], dx ; mov qword ptr [rbp - 0x48], rcx ; jne 0x2000055674d ; jmp 0x200005567a9
0x0000020000067408 : cmp word ptr [rdi], 3 ; jne 0x20000067473 ; mov rcx, rdi ; call rsi
0x0000020000026e15 : cmp word ptr [rdx], r11w ; jne 0x20000026e28 ; mov rax, rcx ; ret
0x000002000008299b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax + 0x7e], bh ; ret
0x00000200001bf742 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000002000004aae2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000061b830 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call 0x200115a3c3d
0x0000020000609152 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0x109a3d17]
0x0000020000653bab : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax + 0x3b] ; ret 0x1675
0x00000200006d0bde : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005fa01c : cmpsb byte ptr [rsi], byte ptr [rdi] ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200005f9fec
0x00000200001158ad : cmpsb byte ptr [rsi], byte ptr [rdi] ; lock inc dword ptr [ebp + 0x3b0e74f6] ; ret 0xe76
0x000002000054cac3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; loopne 0x2000054cac9 ; call r9
0x0000020000497906 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov al, 2 ; ret
0x000002000052a792 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov bh, 0xff ; add rsp, 0x68 ; ret
0x000002000049a49e : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esp, 0xe8a3ebff ; sub bl, bh ; ret
0x00000200004dcf97 : cmpsb byte ptr [rsi], byte ptr [rdi] ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4110
0x00000200001e81a6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or edi, edx ; call qword ptr [rax - 0x123d7017]
0x00000200006c1af6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; ret 0x66ff
0x0000020000645366 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pushfq ; ret 0x49ff
0x00000200000827c0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000002000042b7fa : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0x000002000042b7f0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x000002000066595d : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x49ff
0x0000020000665956 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4cff
0x000002000042b833 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4dff
0x000002000048f4d7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x65ff
0x0000020000665a19 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x84ff
0x0000020000665a7d : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x89ff
0x0000020000665a32 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000002000069d0b0 : cmpsb byte ptr [rsi], byte ptr [rdi] ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069d0c3
0x0000020000601838 : cmpsb byte ptr [rsi], byte ptr [rdi] ; scasb al, byte ptr [rdi] ; dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x0000020000151c13 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; dec dword ptr [rbp - 0x75] ; ret 0xbfe9
0x00000200006bd27e : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, edx ; mov ebp, 0x158d48ff ; call rsp
0x000002000048f4d6 : cmpsb byte ptr es:[rsi], byte ptr [rdi] ; ret 0x65ff
0x00000200006018d6 : cmpsb byte ptr ss:[rsi], byte ptr [rdi] ; scasb al, byte ptr [rdi] ; dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x00000200004762b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000050727 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000125ecf : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000523501 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and eax, dword ptr [rax] ; add bh, bh ; ret
0x0000020000443fa5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x20000072e44
0x0000020000085de0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000042b7f9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0x00000200006c8c36 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c74c8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x9de9
0x00000200006ca463 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rbx + rcx*4 + 0x1d] ; je 0x200006ca42e ; ret 0x4dff
0x000002000048eb10 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -1 ; call 0x200000b9b06
0x00000200006601c9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; insb byte ptr [rdi], dx ; ret
0x0000020000639295 : cmpsd dword ptr [rsi], dword ptr [rdi] ; insd dword ptr [rdi], dx ; ret
0x000002000036e677 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; push rsi ; ret
0x0000020000039c51 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000105b07 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, 0 ; xor eax, eax ; ret
0x0000020000091e9a : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x0000020000667071 : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret 0x48ff
0x000002000001050d : cmpsd dword ptr [rsi], dword ptr [rdi] ; outsd dx, dword ptr [rsi] ; xor al, 0 ; call rax
0x0000020000645621 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; ret
0x000002000008ff29 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200006659ea : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x00000200006612f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ff
0x0000020000443b95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x4dff
0x000002000009d4c6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x9ca6
0x0000020000442555 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x00000200003f981d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xebff
0x0000020000665944 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xff
0x0000020000605d03 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x00000200001ca7b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x00000200006448da : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x000002000003d71a : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000090f14 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xlatb ; and eax, edi ; ret 0xf958
0x00000200005a4986 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000476e54 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x0000020000443fa4 : cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x20000072e45
0x0000020000091e99 : cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x0000020000476e53 : cmpsq qword ptr [rsi], qword ptr [rdi] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x000002000006440c : cmpxchg dword ptr [rax], ecx ; jne 0x200000643f4 ; mov dl, 1 ; mov al, dl ; ret
0x00000200000b7fe0 : cmpxchg dword ptr [rax], ecx ; jne 0x200000b7fef ; mov al, 1 ; ret
0x00000200000b8023 : cmpxchg dword ptr [rax], ecx ; jne 0x200000b8017 ; ret
0x000002000013751d : cmpxchg dword ptr [rax], ecx ; jne 0x2000013752c ; mov al, 1 ; ret
0x00000200000bde95 : cmpxchg dword ptr [rax], edx ; jne 0x200000bde7e ; ret
0x00000200001e3afc : cmpxchg dword ptr [rcx + 0x10], ecx ; jne 0x200001e3adf ; ret
0x00000200003bbb9b : cmpxchg dword ptr [rcx + 0x10], edx ; jne 0x200003bbb9b ; mov al, 1 ; ret
0x00000200004051e1 : cmpxchg dword ptr [rcx + 0x1c8], ecx ; ret
0x00000200001620d1 : cmpxchg dword ptr [rcx + rax*8], ecx ; ret
0x0000020000063ce1 : cmpxchg dword ptr [rcx], eax ; jne 0x20000063cc3 ; ret
0x00000200000beeeb : cmpxchg dword ptr [rcx], eax ; jne 0x200000beefe ; ret
0x00000200000df88b : cmpxchg dword ptr [rcx], eax ; jne 0x200000df8b4 ; ret
0x000002000002a589 : cmpxchg dword ptr [rcx], ecx ; jne 0x2000002a59c ; add rsp, 0x28 ; ret
0x000002000015f994 : cmpxchg dword ptr [rcx], edx ; je 0x2000015f9aa ; mov edx, eax ; call 0x2000006bc5d
0x000002000057dd5c : cmpxchg dword ptr [rcx], edx ; je 0x2000057dd6d ; call 0x200000d9fd7
0x000002000057dd8b : cmpxchg dword ptr [rcx], edx ; je 0x2000057dd9c ; call 0x200000d9fd7
0x000002000001eddc : cmpxchg dword ptr [rcx], edx ; jne 0x2000001ede7 ; ret
0x00000200000202cf : cmpxchg dword ptr [rcx], edx ; jne 0x200000202cf ; ret
0x000002000006cc35 : cmpxchg dword ptr [rcx], edx ; jne 0x2000006cc40 ; ret
0x00000200000bde28 : cmpxchg dword ptr [rcx], edx ; jne 0x200000bde41 ; mov al, 1 ; ret
0x00000200000cc42d : cmpxchg dword ptr [rcx], edx ; jne 0x200000cc438 ; ret
0x00000200000d9fb0 : cmpxchg dword ptr [rcx], edx ; jne 0x200000d9fc2 ; mov al, 1 ; ret
0x0000020000009e27 : cmpxchg dword ptr [rcx], edx ; jne 0x20000120b49 ; ret
0x0000020000152a4c : cmpxchg dword ptr [rcx], edx ; jne 0x20000152a5b ; mov al, 1 ; ret
0x000002000039a4a9 : cmpxchg dword ptr [rcx], edx ; jne 0x2000039a4b4 ; ret
0x000002000046aa27 : cmpxchg dword ptr [rcx], edx ; jne 0x2000046aa32 ; ret
0x0000020000064b27 : cmpxchg dword ptr [rcx], edx ; mov r8, rax ; jne 0x20000064b38 ; ret
0x00000200000d9fe5 : cmpxchg dword ptr [rcx], edx ; mov r8, rax ; jne 0x200000da017 ; ret
0x000002000015f949 : cmpxchg dword ptr [rcx], esp ; je 0x2000015f95e ; mov edx, eax ; call 0x2000006bc5d
0x00000200001b6af6 : cmpxchg dword ptr [rdi], ecx ; jne 0x200001b6b05 ; mov al, dl ; jmp 0x200001b6b0d
0x000002000004f230 : cmpxchg dword ptr [rdx + 0x40], edx ; jne 0x2000004f24a ; ret
0x0000020000076d8a : cmpxchg dword ptr [rdx], ebx ; jne 0x20000076d61 ; mov rax, r8 ; pop rbx ; ret
0x0000020000137562 : cmpxchg dword ptr [rdx], ecx ; mov r9, rax ; jne 0x20000137573 ; ret
0x00000200001e592b : cmpxchg dword ptr [rip + 0xb9b86], ecx ; ret
0x0000020000425179 : cmpxchg dword ptr [rip - 0x18d3e0], ecx ; jne 0x2000042518c ; ret
0x0000020000393627 : cmpxchg dword ptr [rip - 0xabcae], ecx ; jne 0x20000393640 ; ret
0x000002000004f22f : cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x2000004f24b ; ret
0x0000020000137561 : cmpxchg qword ptr [r10], rcx ; mov r9, rax ; jne 0x20000137574 ; ret
0x00000200000b7fdf : cmpxchg qword ptr [r8], rcx ; jne 0x200000b7ff0 ; mov al, 1 ; ret
0x00000200000b8022 : cmpxchg qword ptr [r8], rcx ; jne 0x200000b8018 ; ret
0x000002000013751c : cmpxchg qword ptr [r8], rcx ; jne 0x2000013752d ; mov al, 1 ; ret
0x00000200000bde94 : cmpxchg qword ptr [r8], rdx ; jne 0x200000bde7f ; ret
0x00000200001e3afb : cmpxchg qword ptr [r9 + 0x10], rcx ; jne 0x200001e3ae0 ; ret
0x00000200001620d0 : cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200004051e0 : cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x0000020000063ce0 : cmpxchg qword ptr [rcx], r8 ; jne 0x20000063cc4 ; ret
0x00000200000beeea : cmpxchg qword ptr [rcx], r8 ; jne 0x200000beeff ; ret
0x00000200000df88a : cmpxchg qword ptr [rcx], r8 ; jne 0x200000df8b5 ; ret
0x000002000057dd5b : cmpxchg qword ptr [rcx], rdx ; je 0x2000057dd6e ; call 0x200000d9fd8
0x000002000057dd8a : cmpxchg qword ptr [rcx], rdx ; je 0x2000057dd9d ; call 0x200000d9fd8
0x000002000001eddb : cmpxchg qword ptr [rcx], rdx ; jne 0x2000001ede8 ; ret
0x00000200000202ce : cmpxchg qword ptr [rcx], rdx ; jne 0x200000202d0 ; ret
0x000002000006cc34 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000006cc41 ; ret
0x00000200000bde27 : cmpxchg qword ptr [rcx], rdx ; jne 0x200000bde42 ; mov al, 1 ; ret
0x00000200000d9faf : cmpxchg qword ptr [rcx], rdx ; jne 0x200000d9fc3 ; mov al, 1 ; ret
0x0000020000152a4b : cmpxchg qword ptr [rcx], rdx ; jne 0x20000152a5c ; mov al, 1 ; ret
0x000002000039a4a8 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000039a4b5 ; ret
0x000002000046aa26 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000046aa33 ; ret
0x0000020000064b26 : cmpxchg qword ptr [rcx], rdx ; mov r8, rax ; jne 0x20000064b39 ; ret
0x00000200000d9fe4 : cmpxchg qword ptr [rcx], rdx ; mov r8, rax ; jne 0x200000da018 ; ret
0x00000200001b6af5 : cmpxchg qword ptr [rdi], rcx ; jne 0x200001b6b06 ; mov al, dl ; jmp 0x200001b6b0e
0x0000020000076ebf : cmpxchg16b xmmword ptr [r11] ; jne 0x20000076eb0 ; mov rax, r10 ; pop rbx ; ret
0x0000020000076ec0 : cmpxchg8b qword ptr [rbx] ; jne 0x20000076eaf ; mov rax, r10 ; pop rbx ; ret
0x0000020000076ec0 : cmpxchg8b qword ptr [rbx] ; jne 0x20000076eb1 ; mov rax, r10 ; pop rbx ; ret
0x0000020000076d42 : cmpxchg8b qword ptr [rdx] ; jne 0x20000076d2f ; mov rax, r8 ; pop rbx ; ret
0x0000020000076dce : cmpxchg8b qword ptr [rdx] ; jne 0x20000076dc4 ; mov rax, r8 ; pop rbx ; ret
0x000002000014ec63 : cqo ; idiv r8 ; ret
0x000002000013f9c1 : cqo ; idiv rcx ; ret
0x000002000010a8c9 : cwde ; adc byte ptr [rax], al ; add rcx, rdx ; jmp rcx
0x00000200006a0a0f : cwde ; add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000069c293 : cwde ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x1574
0x0000020000105977 : cwde ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001b6df6 : cwde ; add al, ch ; ret
0x00000200003b8c53 : cwde ; add al, ch ; ret 0xffce
0x000002000043a677 : cwde ; add byte ptr [r8 + 3], cl ; retf ; jmp rcx
0x000002000038626d : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200003eb6d5 : cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000dd782 : cwde ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000020000067047 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200000bdfd0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000051545 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x3b49
0x00000200001a6631 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x1ffc16328cf
0x000002000061d88f : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x00000200003b0c62 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200001685cf : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001685e3 ; call rcx
0x00000200001a0373 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000016d1df : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x00000200003f3e19 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200001f6252 : cwde ; add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x200001f61ff
0x000002000003af85 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200005893c6 : cwde ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x000002000017accd : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000020000138506 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x0000020000558c0b : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8b48
0x000002000012a4e4 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000001404f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000046a85a : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x000002000004ede9 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r13 ; ret
0x00000200003cff7d : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003e075d : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x00000200003fdbc0 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000058e96e : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x00000200004622bc : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200000f20c2 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200003b9f4c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x00000200004e4487 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200005ebf0a : cwde ; add byte ptr [rax], al ; add cl, ch ; pop rax ; ret 0xffe5
0x000002000002c83e : cwde ; add byte ptr [rcx + rcx*4 + 2], cl ; ret
0x0000020000556edc : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200006f347c : cwde ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000036d62 : cwde ; add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019adf7 : cwde ; add rax, rbx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000007c1ad : cwde ; add rsp, 0x68 ; ret
0x000002000065080c : cwde ; call 0x1ffd8f0081c
0x0000020000496b8f : cwde ; call 0x200000bf274
0x00000200006f3fbd : cwde ; dec dword ptr [rax - 0x7d] ; ret
0x000002000057b6b4 : cwde ; fcom st(0), st(1) ; push rsi ; ret
0x0000020000513cec : cwde ; idiv bh ; add rsp, 0x58 ; ret
0x0000020000605add : cwde ; in al, dx ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x0000020000361da4 : cwde ; jge 0x20000361d9f ; inc dword ptr [rcx - 0xa] ; ret
0x000002000015c904 : cwde ; mov dl, 0x18 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004902f1 : cwde ; mov rdx, rbx ; call 0x200000bf277
0x000002000008a6c0 : cwde ; movsxd rdi, esi ; ret
0x000002000011ae49 : cwde ; or rax, r9 ; or rax, rcx ; ret
0x00000200001f78ac : cwde ; push rsi ; ret
0x000002000041f76f : cwde ; ret
0x0000020000499914 : cwde ; ret 0x291c
0x00000200006ba060 : cwde ; ret 0x4009
0x0000020000478c34 : cwde ; ret 0x48ff
0x0000020000526008 : cwde ; ret 0x49ff
0x0000020000665db5 : cwde ; ret 0x4cff
0x000002000057a343 : cwde ; ret 0x84ff
0x0000020000415118 : cwde ; ret 0xe9ff
0x00000200006646bb : cwde ; ret 0xff
0x00000200001f7e32 : cwde ; ret 0xffe3
0x0000020000230e10 : cwde ; salc ; and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ret 0x3f
0x000002000003a2ae : cwde ; sbb al, byte ptr [rax] ; ret
0x0000020000378501 : cwde ; sbb byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200004cfab4 : cwde ; xchg eax, edx ; ret 0xe9ff
0x0000020000076ceb : dec al ; ret
0x00000200001a6350 : dec byte ptr [r8 + 3] ; ror byte ptr [rax - 0x75], 0x4c ; ret
0x00000200001279da : dec byte ptr [rax + 0x23] ; ret 0xc148
0x00000200006e4c1a : dec byte ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200006d5f3b : dec byte ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x0000020000596cfb : dec byte ptr [rax + 0x3b] ; ret
0x00000200004a652b : dec byte ptr [rax + 0x3b] ; ret 0x820f
0x000002000011ec7d : dec byte ptr [rax + 0x3b] ; ret 0x840f
0x000002000011ed09 : dec byte ptr [rax + 0x3b] ; ror dword ptr [rbp + 0xf], 0x44 ; ret 0x344
0x00000200000df989 : dec byte ptr [rax + 0x437] ; ret
0x000002000051fbd6 : dec byte ptr [rax + 0x63] ; ret 0x5489
0x00000200001a6351 : dec byte ptr [rax + 3] ; ror byte ptr [rax - 0x75], 0x4c ; ret
0x000002000064da00 : dec byte ptr [rax - 0x3f] ; loop 0x2000064da11 ; call 0x20000270048
0x00000200004a00d0 : dec byte ptr [rax - 0x74b70faf] ; ret
0x000002000003c476 : dec byte ptr [rax - 0x75] ; ret
0x00000200000b801d : dec byte ptr [rax - 0x75] ; ret 0x49f0
0x00000200004c6651 : dec byte ptr [rax - 0x7b] ; leave ; je 0x200004c6663 ; add dword ptr [rcx], r11d ; ret
0x00000200000e888c : dec byte ptr [rax - 0x7d] ; ret
0x0000020000644d50 : dec byte ptr [rbp + rcx*4 + 0x44] ; and al, 0x28 ; mov edx, r15d ; call rdi
0x00000200001b0006 : dec byte ptr [rbp + rcx*4 + 0xc] ; mov r8, rdx ; jmp 0x200001b0030
0x00000200000d73ad : dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x000002000063fb32 : dec byte ptr [rcx - 0x75] ; ret 0x894d
0x000002000014dbd4 : dec byte ptr [rdi] ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x000002000010cdd7 : dec byte ptr [rdi] ; ret 0x4589
0x0000020000447412 : dec byte ptr [rdi] ; test dword ptr [rax + rdi*8 - 1], ebx ; push rsi ; ret
0x000002000047e2c7 : dec byte ptr [rdi] ; test dword ptr [rcx - 0x74ffe7f1], eax ; ret
0x00000200000a8430 : dec dword ptr [r8 + 0x23] ; ret 0x34c
0x000002000002d7de : dec dword ptr [r8 + 3] ; ret 0x3b48
0x00000200001436a4 : dec dword ptr [r8 - 0x3f] ; call qword ptr [rax]
0x00000200001a1297 : dec dword ptr [r8 - 0x7d] ; ret
0x00000200001a6e53 : dec dword ptr [r8 - 0x7d] ; ret 0x480b
0x0000020000491499 : dec dword ptr [r8 - 1] ; ret 0x6348
0x000002000001bd81 : dec dword ptr [r8] ; ret
0x00000200004d22e9 : dec dword ptr [r9 + 0x3b] ; ret
0x000002000017f233 : dec dword ptr [r9 + 3] ; ret 0x2349
0x00000200000b509a : dec dword ptr [rax + 0x1e4] ; ret
0x00000200000bdf9a : dec dword ptr [rax + 0x1e6] ; ret
0x0000020000188c56 : dec dword ptr [rax + 0x1ee8] ; ret
0x0000020000415e23 : dec dword ptr [rax + 0x23] ; ret
0x000002000004c0d5 : dec dword ptr [rax + 0x23] ; ret 0x3348
0x00000200000a8431 : dec dword ptr [rax + 0x23] ; ret 0x34c
0x00000200000dcd08 : dec dword ptr [rax + 0x23] ; ret 0x8348
0x000002000057bf61 : dec dword ptr [rax + 0x23] ; ret 0x8948
0x0000020000188854 : dec dword ptr [rax + 0x23] ; ret 0x8b48
0x00000200001883f0 : dec dword ptr [rax + 0x23] ; ret 0xb48
0x000002000004c702 : dec dword ptr [rax + 0x23] ; ret 0xc148
0x000002000018e745 : dec dword ptr [rax + 0x23] ; ret 0xce8b
0x00000200001854f1 : dec dword ptr [rax + 0x2b] ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000669537 : dec dword ptr [rax + 0x2b] ; ret
0x0000020000113dfa : dec dword ptr [rax + 0x2b] ; ret 0x348
0x0000020000134a49 : dec dword ptr [rax + 0x2b] ; ret 0xd58b
0x00000200001e6492 : dec dword ptr [rax + 0x33] ; ret 0x8549
0x00000200006445f2 : dec dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x00000200000b1582 : dec dword ptr [rax + 0x3b] ; call 0x1ffc4016e05
0x000002000006185f : dec dword ptr [rax + 0x3b] ; ret
0x00000200003962d1 : dec dword ptr [rax + 0x3b] ; ret 0x1177
0x000002000018cfe6 : dec dword ptr [rax + 0x3b] ; ret 0x1372
0x00000200003de8c4 : dec dword ptr [rax + 0x3b] ; ret 0x1577
0x0000020000653bac : dec dword ptr [rax + 0x3b] ; ret 0x1675
0x000002000018cfd7 : dec dword ptr [rax + 0x3b] ; ret 0x1e76
0x000002000056ee11 : dec dword ptr [rax + 0x3b] ; ret 0x2274
0x000002000018d008 : dec dword ptr [rax + 0x3b] ; ret 0x2372
0x00000200004143db : dec dword ptr [rax + 0x3b] ; ret 0x2a77
0x000002000018cfb9 : dec dword ptr [rax + 0x3b] ; ret 0x3c76
0x00000200004a65f7 : dec dword ptr [rax + 0x3b] ; ret 0x4077
0x000002000018cff5 : dec dword ptr [rax + 0x3b] ; ret 0x477
0x000002000018d026 : dec dword ptr [rax + 0x3b] ; ret 0x573
0x000002000018cfa0 : dec dword ptr [rax + 0x3b] ; ret 0x577
0x000002000045b0ec : dec dword ptr [rax + 0x3b] ; ret 0x5977
0x0000020000041f26 : dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200000463c4 : dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000041db6 : dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200001de9aa : dec dword ptr [rax + 0x3b] ; ret 0x870f
0x00000200001c936e : dec dword ptr [rax + 0x3b] ; ret 0x876
0x0000020000185a2d : dec dword ptr [rax + 0x3b] ; ret 0x8d4c
0x0000020000653b97 : dec dword ptr [rax + 0x3b] ; ret 0x975
0x000002000057cec6 : dec dword ptr [rax + 0x3b] ; ret 0x977
0x000002000041382e : dec dword ptr [rax + 0x3b] ; ret 0xa674
0x00000200005fd0e9 : dec dword ptr [rax + 0x3b] ; ret 0xa73
0x000002000037ebcd : dec dword ptr [rax + 0x3b] ; ret 0xa74
0x00000200001bc5b6 : dec dword ptr [rax + 0x3b] ; ret 0xc74
0x000002000018cf84 : dec dword ptr [rax + 0x3b] ; ret 0xd77
0x000002000018cfc8 : dec dword ptr [rax + 0x3b] ; ret 0xf72
0x000002000018d017 : dec dword ptr [rax + 0x3b] ; ret 0xf73
0x00000200006bd8b0 : dec dword ptr [rax + 0x63] ; or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; ret
0x000002000064ce85 : dec dword ptr [rax + 0x63] ; ret
0x00000200006bba1d : dec dword ptr [rax + 0x63] ; ret 0x8d49
0x0000020000566c70 : dec dword ptr [rax + 0x63] ; ror byte ptr [rax - 1], 1 ; ret 0xc149
0x00000200001fcf52 : dec dword ptr [rax + 0x63] ; ror dword ptr [rbp - 0x75], -0x6c ; ret 0x64c0
0x00000200000ec3b0 : dec dword ptr [rax + 0xb] ; ret
0x00000200001b76a8 : dec dword ptr [rax + 0xb] ; ret 0x8949
0x00000200001d520e : dec dword ptr [rax + 0xb] ; ret 0x894c
0x00000200000a2691 : dec dword ptr [rax + 0xb] ; ret 0x8b48
0x0000020000069c9d : dec dword ptr [rax + 0xb] ; ret 0x8b4c
0x0000020000366a42 : dec dword ptr [rax + 0xb] ; ret 0xcf8b
0x00000200001a95b1 : dec dword ptr [rax + 0xb] ; ret 0xd233
0x00000200000eeaf9 : dec dword ptr [rax + 0xf] ; mov edx, 0x8b4809f3 ; ret
0x0000020000564a74 : dec dword ptr [rax + 0xf] ; ret
0x000002000016ecd9 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000020000117386 : dec dword ptr [rax + 0xf] ; ret 0xd7eb
0x0000020000401486 : dec dword ptr [rax + 0xf] ; xchg eax, esp ; ret 0x8d4c
0x0000020000008a1c : dec dword ptr [rax + 3] ; ret
0x000002000002d7df : dec dword ptr [rax + 3] ; ret 0x3b48
0x00000200004dcd03 : dec dword ptr [rax + 3] ; ret 0x3b49
0x00000200004c15ff : dec dword ptr [rax + 3] ; ret 0x8548
0x0000020000467b3b : dec dword ptr [rax + 3] ; ret 0x8948
0x00000200006445a2 : dec dword ptr [rax + 3] ; ret 0x8b4c
0x00000200004722ec : dec dword ptr [rax - 0x17cfdba4] ; or dh, bh ; ret
0x000002000038de10 : dec dword ptr [rax - 0x39] ; ret
0x000002000003c6d0 : dec dword ptr [rax - 0x39] ; ret 0xd300
0x00000200001df4a0 : dec dword ptr [rax - 0x3f] ; call 0x1ffc2593ccf
0x00000200003691fc : dec dword ptr [rax - 0x3f] ; call 0x1ffc259da17
0x00000200000c10cf : dec dword ptr [rax - 0x3f] ; call 0x1ffffcd58fe
0x000002000018e53f : dec dword ptr [rax - 0x3f] ; call 0x1ffffda2d6e
0x00000200000085cf : dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x000002000019088c : dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200006ec908 : dec dword ptr [rax - 0x3f] ; out dx, eax ; adc eax, 0x2b44df03 ; ret
0x0000020000415639 : dec dword ptr [rax - 0x73] ; adc al, bpl ; jno 0x20000415685 ; ret 0xe9ff
0x0000020000415112 : dec dword ptr [rax - 0x73] ; adc r8b, bpl ; cwde ; ret 0xe9ff
0x00000200004150f6 : dec dword ptr [rax - 0x73] ; adc r8b, r13b ; mov ah, 0x41 ; ret 0xe9ff
0x00000200004433e7 : dec dword ptr [rax - 0x73] ; adc r8b, r13b ; ret
0x0000020000441d91 : dec dword ptr [rax - 0x73] ; add al, 0x90 ; ret
0x000002000011e3c3 : dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x00000200002008f4 : dec dword ptr [rax - 0x73] ; add eax, 0xffefb204 ; ret
0x0000020000200905 : dec dword ptr [rax - 0x73] ; add eax, 0xffefd6d3 ; ret
0x00000200001a1d44 : dec dword ptr [rax - 0x73] ; add ecx, dword ptr [r8 + 3] ; ret 0x3b48
0x00000200000f239b : dec dword ptr [rax - 0x73] ; add qword ptr [r8 - 0x75], rcx ; ret
0x00000200001ecf9e : dec dword ptr [rax - 0x73] ; and al, 0x20 ; call 0x200000a91e8
0x00000200006f3401 : dec dword ptr [rax - 0x73] ; and al, 0x50 ; call 0x2000047f614
0x00000200001ee9ae : dec dword ptr [rax - 0x73] ; and al, 0x58 ; jmp 0x200000aac5d
0x000002000048f9e8 : dec dword ptr [rax - 0x73] ; call 0x1ffc34178e1
0x0000020000496b8b : dec dword ptr [rax - 0x73] ; cdqe ; call 0x200000bf278
0x000002000026fe49 : dec dword ptr [rax - 0x73] ; fucompi st(0) ; int 0x80
0x0000020000038f73 : dec dword ptr [rax - 0x73] ; loopne 0x20000038f67 ; ret
0x00000200001f027a : dec dword ptr [rax - 0x73] ; or eax, 0xffebccaa ; call rax
0x00000200001ee619 : dec dword ptr [rax - 0x73] ; push rsp ; and al, 0x60 ; call qword ptr [rsi]
0x0000020000532f19 : dec dword ptr [rax - 0x73] ; shr r8b, 1 ; ret
0x0000020000147791 : dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200006cfb5d : dec dword ptr [rax - 0x73] ; sub byte ptr [rax - 0x77], r9b ; add edi, edi ; ret
0x00000200005e79fd : dec dword ptr [rax - 0x73] ; sub byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200004db2e1 : dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x00000200003f9ae7 : dec dword ptr [rax - 0x73] ; xor r8b, r13b ; ret
0x0000020000604c31 : dec dword ptr [rax - 0x75] ; adc byte ptr [r11], r14b ; shr al, cl ; ret
0x00000200004f57bb : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x75], r9b ; ret
0x00000200000e30a1 : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x75], r9b ; shr eax, cl ; ret 0xfc5c
0x000002000035e967 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000a46c7 : dec dword ptr [rax - 0x75] ; adc dh, dh ; ret
0x000002000041b582 : dec dword ptr [rax - 0x75] ; add al, 0xc1 ; ret
0x00000200000f3789 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001cd800 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200001cd7f3 : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x00000200000ca102 : dec dword ptr [rax - 0x75] ; add dword ptr [rax + 0x33], ecx ; ret 0x2349
0x0000020000183bd6 : dec dword ptr [rax - 0x75] ; add eax, 0x1cc4a2 ; ret
0x0000020000520579 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000449d04 : dec dword ptr [rax - 0x75] ; and al, 0x40 ; call 0x20000072e49
0x00000200004cfaad : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x200000f8d59
0x0000020000492f4f : dec dword ptr [rax - 0x75] ; and al, 0x70 ; call 0x200000b5019
0x00000200004918eb : dec dword ptr [rax - 0x75] ; call 0x200000b9b08
0x0000020000443fa1 : dec dword ptr [rax - 0x75] ; cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x20000072e48
0x000002000042b7ea : dec dword ptr [rax - 0x75] ; enter -0x2e18, -0x5a ; ret 0x48ff
0x0000020000123701 : dec dword ptr [rax - 0x75] ; enter -0x74b8, -0x28 ; call 0x2000006f965
0x0000020000435647 : dec dword ptr [rax - 0x75] ; enter -0xf18, -0x29 ; ret
0x00000200005af26c : dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x000002000070e66a : dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x000002000050598c : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000148d3f : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004f44af : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x11ea
0x000002000062e5ea : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 1] ; ret
0x00000200004fadf7 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200004487d5 : dec dword ptr [rax - 0x75] ; int 0xe8
0x00000200004cfc9d : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000f8d57
0x00000200000ee6f7 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000018a90a
0x000002000059067d : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000019c8c6
0x00000200005d9332 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200003d5586
0x000002000039a98a : dec dword ptr [rax - 0x75] ; iretd ; call 0x20000466c96
0x0000020000033fa1 : dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000064579d : dec dword ptr [rax - 0x75] ; iretd ; call rsi
0x0000020000645ce8 : dec dword ptr [rax - 0x75] ; iretd ; mov rsi, rax ; call rbx
0x000002000015db13 : dec dword ptr [rax - 0x75] ; je 0x2000015db44 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001ba6cd : dec dword ptr [rax - 0x75] ; je 0x200001ba6fe ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000037c295 : dec dword ptr [rax - 0x75] ; je 0x2000037c2c5 ; js 0x2000037c22e ; ret
0x000002000051f66e : dec dword ptr [rax - 0x75] ; je 0x2000051f69e ; js 0x2000051f607 ; ret
0x00000200005a3c65 : dec dword ptr [rax - 0x75] ; je 0x200005a3c95 ; js 0x200005a3bfe ; ret
0x00000200001c9b40 : dec dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x3b], cl ; ret
0x00000200004d54c1 : dec dword ptr [rax - 0x75] ; or byte ptr [r9 + 0x23], cl ; ret 0x3b49
0x00000200003c4d65 : dec dword ptr [rax - 0x75] ; or byte ptr [rcx + 0x2b], r9b ; ret
0x000002000052e81c : dec dword ptr [rax - 0x75] ; or eax, 0xffd5253c ; call r11
0x00000200006fe8ad : dec dword ptr [rax - 0x75] ; or ebp, eax ; ret 0xff9c
0x0000020000495f1f : dec dword ptr [rax - 0x75] ; pop rax ; or cl, ch ; ret 0xfef3
0x00000200000eeb1b : dec dword ptr [rax - 0x75] ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005fe642 : dec dword ptr [rax - 0x75] ; pop rcx ; adc byte ptr [rbx], dh ; shr al, cl ; ret 0xc709
0x000002000014a107 : dec dword ptr [rax - 0x75] ; pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x00000200003dc45a : dec dword ptr [rax - 0x75] ; pop rdi ; or dh, dh ; ret
0x00000200000ca891 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x10 ; xor eax, eax ; ret
0x00000200007054e0 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x30 ; jmp 0x200007054b2
0x000002000010eb2b : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x0000020000706381 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; xor eax, eax ; ret
0x000002000016fbaf : dec dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000002000039914f : dec dword ptr [rax - 0x75] ; push rcx ; sub byte ptr [rcx - 1], al ; ret
0x0000020000656efc : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rbp - 0x75], al ; ret
0x000002000000497b : dec dword ptr [rax - 0x75] ; ret
0x00000200000a5eca : dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200000a60fc : dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200001e86d1 : dec dword ptr [rax - 0x75] ; ret 0x23e9
0x0000020000145f98 : dec dword ptr [rax - 0x75] ; ret 0x3345
0x00000200000d08c4 : dec dword ptr [rax - 0x75] ; ret 0x3349
0x000002000006317f : dec dword ptr [rax - 0x75] ; ret 0x349
0x00000200000b56a9 : dec dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200001f1150 : dec dword ptr [rax - 0x75] ; ret 0x4908
0x00000200000e4deb : dec dword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000470b11 : dec dword ptr [rax - 0x75] ; ret 0x7be9
0x0000020000046355 : dec dword ptr [rax - 0x75] ; ret 0x8348
0x0000020000072483 : dec dword ptr [rax - 0x75] ; ret 0x8349
0x00000200001f3490 : dec dword ptr [rax - 0x75] ; ret 0x854d
0x00000200004b269b : dec dword ptr [rax - 0x75] ; ret 0x8948
0x00000200000e08e5 : dec dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000013c12c : dec dword ptr [rax - 0x75] ; ret 0xaee9
0x00000200001dd9b1 : dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000576025 : dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000110c80 : dec dword ptr [rax - 0x75] ; ret 0xd148
0x000002000051d2b5 : dec dword ptr [rax - 0x75] ; ret 0xd233
0x00000200006f83cb : dec dword ptr [rax - 0x75] ; ret 0xff48
0x00000200003a00bc : dec dword ptr [rax - 0x75] ; ret 0xffc3
0x0000020000601386 : dec dword ptr [rax - 0x75] ; retf ; call 0x2000004d656
0x00000200004275ca : dec dword ptr [rax - 0x75] ; retf ; call 0x20000053b27
0x000002000005b8bc : dec dword ptr [rax - 0x75] ; retf ; call 0x20000177ae6
0x00000200005d8f65 : dec dword ptr [rax - 0x75] ; retf ; call 0x200003d5176
0x0000020000178111 : dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200003bd65f : dec dword ptr [rax - 0x75] ; retf ; call rsi
0x00000200005d53a4 : dec dword ptr [rax - 0x75] ; retf ; mov dword ptr [rdx + 4], eax ; call 0x200004815d5
0x0000020000101b39 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 0x75], 1 ; ret 0x8348
0x000002000038475d : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 0x7b], 1 ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000630118 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x000002000052228c : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200005acd6c : dec dword ptr [rax - 0x75] ; ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200003db5e1 : dec dword ptr [rax - 0x75] ; ror byte ptr [rbx + 0x3b411840], 1 ; ret
0x00000200005f4c50 : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x73], 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000020000660099 : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call 0x2000065c39d
0x000002000007119b : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200004c9666 : dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4466
0x00000200001ca882 : dec dword ptr [rax - 0x75] ; sal dword ptr [rbx], cl ; leave ; call 0x200000f6b18
0x00000200001ca881 : dec dword ptr [rax - 0x75] ; sal dword ptr [rbx], cl ; leave ; call 0x200000f6b19
0x0000020000369ad5 : dec dword ptr [rax - 0x75] ; sbb cl, ch ; ret 0xfffe
0x000002000000f380 : dec dword ptr [rax - 0x75] ; sbb ebp, ebx ; ret 0x1ba
0x00000200001d7a2f : dec dword ptr [rax - 0x75] ; shr ebx, 1 ; ret 0x8b48
0x000002000060c643 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x66a8
0x0000020000443b0a : dec dword ptr [rax - 0x75] ; xlatb ; call 0x20000072e48
0x00000200005ff369 : dec dword ptr [rax - 0x75] ; xor byte ptr [r11], r14b ; shr al, cl ; ret
0x000002000036fae3 : dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005015ae : dec dword ptr [rax - 0x75] ; xor r15b, r15b ; ret
0x00000200004072d3 : dec dword ptr [rax - 0x75] ; xor r8b, r13b ; and edx, esi ; ret
0x0000020000504db1 : dec dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x00000200004b6e5b : dec dword ptr [rax - 0x77] ; adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200000a46a6 : dec dword ptr [rax - 0x77] ; add r14b, r14b ; ret
0x000002000003115a : dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 0x3b], r9b ; ret 0x147c
0x000002000062a285 : dec dword ptr [rax - 0x77] ; jl 0x2000062a2b5 ; cmp cl, ch ; ret 0xe4e5
0x0000020000494a43 : dec dword ptr [rax - 0x77] ; or al, bpl ; mov bl, 0x50 ; ret 0x65ff
0x000002000043b75e : dec dword ptr [rax - 0x77] ; or byte ptr [r8 + 0x3b], r9b ; ret
0x00000200003869a0 : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 1], cl ; ret 0x3966
0x00000200000a4d57 : dec dword ptr [rax - 0x77] ; or byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000047fd27 : dec dword ptr [rax - 0x77] ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200005a1a7c : dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000410797 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x3b], r9b ; ret
0x00000200006bfe02 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x75], cl ; ret 0xffc3
0x00000200001f7e9a : dec dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; test byte ptr [rdx], ch ; ret 0xffe3
0x00000200001e6f4b : dec dword ptr [rax - 0x7b] ; ret
0x00000200001f8e93 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; jmp rsp
0x00000200006f4559 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000002000037b644 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x26ae
0x000002000038088d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 1
0x0000020000364844 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rbp ; ret 0
0x00000200006c74c9 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x9de9
0x000002000059b22c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000002000063e63f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x00000200004793b7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000042b7f2 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x34], 0xe8 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0x0000020000198261 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x00000200006bd7f9 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x000002000064af87 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x0000020000489ae7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*4 + 0x44], 0x8b ; ret
0x00000200001df204 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret 0xe46f
0x00000200001d6a63 : dec dword ptr [rax - 0x7d] ; jnp 0x200001d6a81 ; add byte ptr [rdi], cl ; test byte ptr [rbx], dh ; ret
0x0000020000018457 : dec dword ptr [rax - 0x7d] ; ret
0x00000200007096d0 : dec dword ptr [rax - 0x7d] ; ret 0x4410
0x000002000012605a : dec dword ptr [rax - 0x7d] ; ret 0x4510
0x00000200001d3de3 : dec dword ptr [rax - 0x7d] ; ret 0x45c0
0x00000200000deaa1 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001a6e54 : dec dword ptr [rax - 0x7d] ; ret 0x480b
0x00000200000b94f4 : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000020000702dd1 : dec dword ptr [rax - 0x7d] ; ret 0x4830
0x00000200005229f1 : dec dword ptr [rax - 0x7d] ; ret 0x4838
0x00000200006d0c2f : dec dword ptr [rax - 0x7d] ; ret 0x4850
0x0000020000072ccc : dec dword ptr [rax - 0x7d] ; ret 0x48c0
0x00000200003c5fe2 : dec dword ptr [rax - 0x7d] ; ret 0x4902
0x0000020000019a73 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000187524 : dec dword ptr [rax - 0x7d] ; ret 0x4910
0x00000200005c0a24 : dec dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000200005047ff : dec dword ptr [rax - 0x7d] ; ret 0x6602
0x00000200001e91b9 : dec dword ptr [rax - 0x7d] ; ret 0x8308
0x00000200005c0039 : dec dword ptr [rax - 0x7d] ; ret 0x890b
0x000002000066868e : dec dword ptr [rax - 0x7d] ; ret 0x890c
0x00000200001491d3 : dec dword ptr [rax - 0x7d] ; ret 0xb904
0x00000200006efc33 : dec dword ptr [rax - 0x7d] ; ret 0xe80c
0x00000200005f5ad2 : dec dword ptr [rax - 0x7d] ; ret 0xe838
0x0000020000547362 : dec dword ptr [rax - 0x7d] ; ret 0xe904
0x00000200004d8dfa : dec dword ptr [rax - 0x7d] ; ret 0xe910
0x00000200006bde4f : dec dword ptr [rax - 0x7d] ; ret 0xf04
0x000002000065430c : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xe77c
0x0000020000653908 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x0000020000060bcc : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx + rax*2], 0x83 ; ret 0x4920
0x00000200004476f7 : dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200000ca562 : dec dword ptr [rax - 0x7f] ; ret
0x00000200003cdcd5 : dec dword ptr [rax - 0x7f] ; ret 0x1000
0x00000200004d520a : dec dword ptr [rax - 0x7f] ; ret 0x5dcb
0x00000200004a05aa : dec dword ptr [rax - 0x7f] ; ret 0xfd30
0x000002000006c056 : dec dword ptr [rax - 1] ; ret
0x000002000001fa08 : dec dword ptr [rax - 1] ; ret 0x3966
0x000002000015588e : dec dword ptr [rax - 1] ; ret 0x3c80
0x0000020000196f03 : dec dword ptr [rax - 1] ; ret 0x4466
0x000002000049149a : dec dword ptr [rax - 1] ; ret 0x6348
0x0000020000633afa : dec dword ptr [rax - 1] ; ret 0x8349
0x00000200004d9849 : dec dword ptr [rax - 1] ; ret 0x9ceb
0x00000200001a6176 : dec dword ptr [rax - 1] ; ret 0xc148
0x00000200004d2009 : dec dword ptr [rax - 1] ; ret 0xeceb
0x000002000063f755 : dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000070ce3 : dec dword ptr [rax - 9] ; fmul dword ptr [rbp + rcx*4 + 0x34] ; ret
0x000002000026f0e6 : dec dword ptr [rax - 9] ; ret 0xfff
0x00000200003706c3 : dec dword ptr [rax - 9] ; ror byte ptr [rax + 0x23], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004031f8 : dec dword ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200004fbb1c : dec dword ptr [rax - 9] ; ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x000002000001bd82 : dec dword ptr [rax] ; ret
0x00000200002717e2 : dec dword ptr [rbp + 0x23410142] ; ret 0xd08b
0x000002000048d14b : dec dword ptr [rbp + 0x2b490a4e] ; ret
0x00000200004f2675 : dec dword ptr [rbp + 0x2b] ; ret 0x8b44
0x00000200000feff6 : dec dword ptr [rbp + 0x3b] ; ret
0x00000200001a1f6a : dec dword ptr [rbp + 0x3b] ; ret 0x830f
0x000002000003ac47 : dec dword ptr [rbp + 0x448b0143] ; ret 0x4104
0x000002000003ac64 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x3ee9
0x000002000003ac22 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x6ae9
0x000002000003abc2 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x80e9
0x00000200006d77bb : dec dword ptr [rbp + 3] ; ret
0x00000200006d9250 : dec dword ptr [rbp + 3] ; ret 0xfb83
0x0000020000524eae : dec dword ptr [rbp + rcx*4 + 0x1d] ; jbe 0x20000524f29 ; ret 0x48ff
0x000002000049bd35 : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x000002000010d136 : dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0xef3e
0x00000200000d064f : dec dword ptr [rbp + rcx*4 + 5] ; ret
0x000002000039b16e : dec dword ptr [rbp + rcx*4 + 5] ; ret 0xcf09
0x0000020000376126 : dec dword ptr [rbp + rcx*4 + 5] ; ret 0xde6
0x000002000064de90 : dec dword ptr [rbp - 0x367afeb0] ; cmovne eax, edx ; ret
0x0000020000527bb3 : dec dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xda75
0x0000020000527b37 : dec dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x00000200004cedbc : dec dword ptr [rbp - 0x75] ; add byte ptr [rcx - 0x75], cl ; ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x00000200000a4558 : dec dword ptr [rbp - 0x75] ; lodsb al, byte ptr [rsi] ; ret
0x000002000014acff : dec dword ptr [rbp - 0x75] ; ret
0x00000200001c937b : dec dword ptr [rbp - 0x75] ; ret 0x60e9
0x000002000010f971 : dec dword ptr [rbp - 0x75] ; ret 0x8948
0x00000200004f710e : dec dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200001e9299 : dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000373725 : dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x0000020000151c15 : dec dword ptr [rbp - 0x75] ; ret 0xbfe9
0x00000200004f52d0 : dec dword ptr [rbp - 0x75] ; ret 0xc9e9
0x00000200000e80b3 : dec dword ptr [rbp - 0x77] ; and ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000011f6b5 : dec dword ptr [rbp - 0x7b] ; div byte ptr [rbx + rcx - 0x75] ; ret
0x00000200005757d5 : dec dword ptr [rbp - 0x7b] ; div byte ptr [rsi + rdx - 0xa] ; ret
0x00000200000c7e28 : dec dword ptr [rbp - 0x7b] ; ret
0x000002000060ddee : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0xe08d
0x0000020000636ef8 : dec dword ptr [rbx + 0x148b48c1] ; ret 0x8548
0x00000200005f9f52 : dec dword ptr [rbx + 0x18495] ; add dh, dh ; ret 0xf40
0x00000200003caa60 : dec dword ptr [rbx + 0x23db33c1] ; ret 0xf883
0x00000200003fbe03 : dec dword ptr [rbx + 0x244489d8] ; xor cl, ch ; jmp qword ptr [rcx]
0x00000200005e66e2 : dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x000002000006b7e9 : dec dword ptr [rbx + 0x2eb81c05] ; add bh, bh ; ret
0x00000200005b4792 : dec dword ptr [rbx + 0x35894cd8] ; insb byte ptr [rdi], dx ; ret 0xffcd
0x00000200006a1055 : dec dword ptr [rbx + 0x39082] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000000c4c9 : dec dword ptr [rbx + 0x3bc323c6] ; ret
0x00000200005a925c : dec dword ptr [rbx + 0x40] ; inc dword ptr [r11 + 0x44] ; mov al, 1 ; ret
0x00000200004fea36 : dec dword ptr [rbx + 0x48302444] ; add esp, 0x28 ; ret
0x00000200004eda29 : dec dword ptr [rbx + 0x48482444] ; add esp, 0x28 ; ret
0x00000200006ec48a : dec dword ptr [rbx + 0x4d8d48d8] ; shr al, 0xda ; ret
0x000002000043676c : dec dword ptr [rbx + 0x54e0e8d0] ; ret
0x000002000043673c : dec dword ptr [rbx + 0x5510e8d0] ; ret
0x00000200001eed9f : dec dword ptr [rbx + 0x5892043] ; ret
0x00000200001b5f2f : dec dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044474f : dec dword ptr [rbx + 0x74fde8d0] ; ret 0xe9ff
0x000002000044473c : dec dword ptr [rbx + 0x7510e8d0] ; ret 0xe9ff
0x00000200005ba232 : dec dword ptr [rbx + 0x75c085d8] ; ret 0xc38b
0x00000200004ce95f : dec dword ptr [rbx + 0x78c085c7] ; int 0x48
0x00000200003ab3bb : dec dword ptr [rbx + 0x78c085c8] ; ret 0x8b48
0x0000020000426628 : dec dword ptr [rbx + 0x78c085d8] ; ret
0x0000020000596b17 : dec dword ptr [rbx + 0x78c085f0] ; xor edi, edi ; ret
0x0000020000578706 : dec dword ptr [rbx + 0x78c085f8] ; ret 0x8b48
0x0000020000571203 : dec dword ptr [rbx + 0x79c085e8] ; ret
0x000002000037a7cb : dec dword ptr [rbx + 0x8896] ; add bh, dh ; ret 0x402
0x00000200000ed98c : dec dword ptr [rbx + 0x9091] ; add dh, dh ; ret 0x7501
0x000002000043b281 : dec dword ptr [rbx + 0x9cbe8d0] ; ret
0x00000200005dd7c8 : dec dword ptr [rbx + 0xfc085f8] ; mov byte ptr [rcx], dh ; ret 0xffda
0x00000200004804ba : dec dword ptr [rbx + 0xfc085f8] ; test edx, edi ; ret 0x1a
0x0000020000574b08 : dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f8e99 : dec dword ptr [rbx + 8] ; inc dword ptr [rbx + 0x40] ; call rax
0x00000200006ca464 : dec dword ptr [rbx + rcx*4 + 0x1d] ; je 0x200006ca42d ; ret 0x4dff
0x0000020000661ee5 : dec dword ptr [rbx + rcx*4 + 0x1d] ; pop rbx ; wait ; ret 0x41ff
0x00000200006612eb : dec dword ptr [rbx + rcx*4 + 0x1d] ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ff
0x000002000056651a : dec dword ptr [rbx + rcx*4 + 0x45] ; ror byte ptr [rax - 0x75], 0xd ; ret 0xd1b2
0x00000200006ffe4e : dec dword ptr [rbx + rcx*4 + 0x50] ; and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200005fb9b4 : dec dword ptr [rbx + rcx*4 + 0x51] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200004d8a8f : dec dword ptr [rbx + rcx*4 + 0x75] ; or bh, bh ; ret
0x000002000066211a : dec dword ptr [rbx + rcx*4 + 0xd] ; cdq ; ret 0x4dff
0x000002000060364f : dec dword ptr [rbx + rcx*4 + 4] ; ret 0x8d48
0x00000200006193ad : dec dword ptr [rbx + rcx*4 + 5] ; ret
0x000002000018aea0 : dec dword ptr [rbx + rcx*4 + 5] ; ret 0x1c
0x000002000062793d : dec dword ptr [rbx + rdi + 0x35] ; ret
0x00000200004626e3 : dec dword ptr [rbx - 0x10b631eb] ; push rsi ; ret 0x7501
0x0000020000508dcf : dec dword ptr [rbx - 0x12c6172a] ; ret
0x0000020000508e46 : dec dword ptr [rbx - 0x133d172a] ; ret
0x0000020000508ec1 : dec dword ptr [rbx - 0x13b8172d] ; ret
0x000002000047b0d2 : dec dword ptr [rbx - 0x15d91708] ; ret
0x000002000059078a : dec dword ptr [rbx - 0x170f7438] ; pop rax ; ret 0xffc0
0x00000200005092cf : dec dword ptr [rbx - 0x17c6172a] ; ret
0x0000020000509346 : dec dword ptr [rbx - 0x183d172a] ; ret
0x00000200004f95fc : dec dword ptr [rbx - 0x1a2462f3] ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c17bf : dec dword ptr [rbx - 0x1fea0030] ; push rbx ; ret 0x48ff
0x000002000054b125 : dec dword ptr [rbx - 0x24c81738] ; ret
0x000002000054b208 : dec dword ptr [rbx - 0x25ab1738] ; ret
0x000002000048c911 : dec dword ptr [rbx - 0x2e181708] ; ret 0x65ff
0x00000200006473d6 : dec dword ptr [rbx - 0x3074b72b] ; mov rsi, rax ; call rbx
0x000002000070ef5e : dec dword ptr [rbx - 0x3174be29] ; call 0x200000fb210
0x0000020000094967 : dec dword ptr [rbx - 0x33fbdbbc] ; ret 4
0x000002000057f2ef : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x2000057f35a ; ret
0x00000200006406d6 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x20000640741 ; ret
0x00000200004dff30 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; pop rbp ; ret
0x000002000056ea20 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200004fc7cd : dec dword ptr [rbx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x000002000066452a : dec dword ptr [rbx - 0x3ec39cf3] ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8b44
0x000002000040c811 : dec dword ptr [rbx - 0x3ef00f3d] ; adc byte ptr [r11], r8b ; ret
0x0000020000609ca2 : dec dword ptr [rbx - 0x3ef00f3d] ; add dword ptr [rbx], eax ; ret
0x0000020000122b8b : dec dword ptr [rbx - 0x3ef00f3d] ; cmp byte ptr [r11], r8b ; ret
0x000002000061fd4c : dec dword ptr [rbx - 0x3ef00f3d] ; sub byte ptr [r11], r8b ; ret
0x000002000048e550 : dec dword ptr [rbx - 0x4a571708] ; ret 0x33ff
0x00000200001ee34d : dec dword ptr [rbx - 0x5374b33f] ; ret 0x6c80
0x000002000043c1ee : dec dword ptr [rbx - 0x5a11730] ; ret 0xe9ff
0x00000200005f6b85 : dec dword ptr [rbx - 0x6a1624bb] ; ret
0x0000020000055142 : dec dword ptr [rbx - 0x6b74b73f] ; ret 0xf880
0x00000200005566bc : dec dword ptr [rbx - 0x74b34fb3] ; ret
0x000002000005ddd8 : dec dword ptr [rbx - 0x74b6afab] ; pop rsi ; and dh, dh ; ret
0x000002000058b52d : dec dword ptr [rbx - 0x74b6bfab] ; sbb dil, r15b ; ret 0x8348
0x00000200005f2d45 : dec dword ptr [rbx - 0x74b717ab] ; sbb r15b, r15b ; ret 0x8349
0x00000200006c9535 : dec dword ptr [rbx - 0x74b7bfbf] ; or dword ptr [rax + 3], ecx ; ret 0xc149
0x00000200003bf552 : dec dword ptr [rbx - 0x74bb87aa] ; ret
0x0000020000533281 : dec dword ptr [rbx - 0x74bbe7b0] ; ret
0x000002000001f1fc : dec dword ptr [rbx - 0x77bb3883] ; insd dword ptr [rdi], dx ; ret
0x00000200006c191a : dec dword ptr [rbx - 0x7aea0030] ; push rdx ; ret 0x48ff
0x0000020000364216 : dec dword ptr [rbx - 0x7c39dbba] ; ret
0x000002000037b7bb : dec dword ptr [rbx - 0x7cb706be] ; ret 0x8920
0x0000020000179117 : dec dword ptr [rbx - 0x7cb7dba7] ; ret
0x0000020000704b49 : dec dword ptr [rbx - 0x7e97db84] ; jmp qword ptr [rbx]
0x00000200006c181e : dec dword ptr [rbx - 0x7eea0030] ; push rbx ; ret 0x48ff
0x0000020000701bf0 : dec dword ptr [rbx - 0x96b7eeb] ; push rdi ; ret 0xfffe
0x00000200000bd03e : dec dword ptr [rbx - 0x9c3dbac] ; ret
0x000002000043c6d5 : dec dword ptr [rbx - 0xa881730] ; ret 0xe9ff
0x000002000043c6f5 : dec dword ptr [rbx - 0xaa81730] ; ret 0xebff
0x00000200004eb67e : dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x000002000041af2d : dec dword ptr [rbx] ; ret
0x00000200000602cc : dec dword ptr [rbx] ; ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x0000020000139a91 : dec dword ptr [rcx + 0x1e4] ; ret
0x00000200004cd507 : dec dword ptr [rcx + 0x23] ; ret
0x0000020000140fef : dec dword ptr [rcx + 0x23] ; ret 0x8d41
0x000002000046dc3e : dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x00000200005efae7 : dec dword ptr [rcx + 0x2b] ; ret
0x00000200005880b1 : dec dword ptr [rcx + 0x34c] ; xor eax, eax ; ret
0x00000200001280e1 : dec dword ptr [rcx + 0x39] ; imul esp, dword ptr [rax], 0xf ; test eax, edx ; int 0xfb
0x00000200004d22ea : dec dword ptr [rcx + 0x3b] ; ret
0x00000200001dcc42 : dec dword ptr [rcx + 0x3b] ; ret 0x2374
0x000002000056ecff : dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200005e2dff : dec dword ptr [rcx + 0x3b] ; ror byte ptr [rdi], 0x85 ; ret 0xe3ab
0x000002000005aa9e : dec dword ptr [rcx + 0x46c] ; ret
0x00000200006601c3 : dec dword ptr [rcx + 0x58b0443] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; insb byte ptr [rdi], dx ; ret
0x000002000062817c : dec dword ptr [rcx + 0x58b0c47] ; ret 0xd2f1
0x00000200005a764c : dec dword ptr [rcx + 0x58b8845] ; ret 0xceb4
0x00000200003604bf : dec dword ptr [rcx + 0x64] ; ret
0x000002000036b095 : dec dword ptr [rcx + 0x80bb] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012c194 : dec dword ptr [rcx + 0x8c] ; ret
0x0000020000071097 : dec dword ptr [rcx + 0xb482075] ; ret 0xc123
0x00000200001e4f38 : dec dword ptr [rcx + 0xf] ; mov ebp, 0x440575c0 ; mov eax, edx ; jmp 0x200001e4f56
0x00000200005e64ed : dec dword ptr [rcx + 0xf] ; mov edi, 0xff4166c2 ; ret 0x4166
0x00000200006f3f6f : dec dword ptr [rcx + 1] ; or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000d0a2c : dec dword ptr [rcx + 3] ; ret
0x000002000017f234 : dec dword ptr [rcx + 3] ; ret 0x2349
0x000002000037f860 : dec dword ptr [rcx + 3] ; ret 0x58e9
0x000002000045f6b7 : dec dword ptr [rcx + 3] ; ret 0x8948
0x000002000019218d : dec dword ptr [rcx + 8] ; ret
0x0000020000665ead : dec dword ptr [rcx + rax + 0x1d] ; push rbx ; xchg eax, ebp ; ret 0xe9ff
0x0000020000431173 : dec dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050a422 : dec dword ptr [rcx + rax*4] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006f8a59 : dec dword ptr [rcx + rcx*4 + 0x1d] ; call qword ptr [rbx]
0x000002000062b5de : dec dword ptr [rcx + rcx*4 + 0x2d] ; ret 0xc627
0x00000200006f9a56 : dec dword ptr [rcx + rcx*4 + 0x35] ; ret 0xbdfd
0x00000200006fdf56 : dec dword ptr [rcx + rcx*4 + 0x35] ; ret 0xbe82
0x000002000048b41e : dec dword ptr [rcx + rcx*4 + 0x3d] ; ret 0xe4c3
0x00000200006e9fe0 : dec dword ptr [rcx + rcx*4 + 5] ; push -0x170044b5 ; ret
0x0000020000063c97 : dec dword ptr [rcx + rdx*4 + 0x50] ; ret
0x0000020000414b7b : dec dword ptr [rcx - 0x186de1c3] ; push rsi ; ret
0x000002000041fa9b : dec dword ptr [rcx - 0x39] ; ret
0x0000020000640043 : dec dword ptr [rcx - 0x3a9199c3] ; jmp qword ptr [rbx]
0x00000200001ecffd : dec dword ptr [rcx - 0x73] ; adc r9b, byte ptr [r8 + 3] ; ret
0x00000200001a1f90 : dec dword ptr [rcx - 0x73] ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x000002000051bd11 : dec dword ptr [rcx - 0x73] ; and byte ptr [r9 - 0x75], cl ; shr al, cl ; ret 0xc2e9
0x00000200000d0a28 : dec dword ptr [rcx - 0x73] ; dec qword ptr [r9 + 3] ; ret
0x00000200004d552d : dec dword ptr [rcx - 0x73] ; xor al, r13b ; sbb dword ptr [rax], edi ; ret 0xe9ff
0x00000200004495ba : dec dword ptr [rcx - 0x73] ; xor r8b, r13b ; jl 0x20000449562 ; ret 0xe9ff
0x00000200003d2883 : dec dword ptr [rcx - 0x7487dbbc] ; ret
0x0000020000171ef1 : dec dword ptr [rcx - 0x74b637ab] ; ret
0x00000200004b4c96 : dec dword ptr [rcx - 0x74b7ef85] ; ret
0x00000200000e82aa : dec dword ptr [rcx - 0x75] ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200006cca0f : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rbp - 0x75], r8b ; ret
0x00000200005259a6 : dec dword ptr [rcx - 0x75] ; fimul word ptr [rax - 1] ; ret
0x00000200004154e1 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000392bb
0x0000020000443f8f : dec dword ptr [rcx - 0x75] ; iretd ; call 0x20000072e47
0x00000200004896a0 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000b6727
0x000002000048aaa8 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000b9b07
0x00000200004d1a09 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000f22c7
0x00000200001cc8c8 : dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret
0x00000200001f9f13 : dec dword ptr [rcx - 0x75] ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200000516e8 : dec dword ptr [rcx - 0x75] ; ret
0x0000020000072694 : dec dword ptr [rcx - 0x75] ; ret 0x55e9
0x0000020000114f8c : dec dword ptr [rcx - 0x75] ; ret 0x62e9
0x00000200001e9259 : dec dword ptr [rcx - 0x75] ; ret 0x8348
0x0000020000398d24 : dec dword ptr [rcx - 0x75] ; ret 0x8b44
0x00000200006d75e3 : dec dword ptr [rcx - 0x75] ; ret 0xbb41
0x0000020000004479 : dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200001e1f3a : dec dword ptr [rcx - 0x75] ; ret 0xc933
0x00000200000671db : dec dword ptr [rcx - 0x75] ; ret 0xd1e9
0x00000200006c8b08 : dec dword ptr [rcx - 0x75] ; ret 0xdaeb
0x00000200000671e3 : dec dword ptr [rcx - 0x75] ; ret 0xf0e9
0x00000200005ac4b0 : dec dword ptr [rcx - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000051d3dd : dec dword ptr [rcx - 0x75] ; salc ; mov rcx, rdi ; call 0x20000499621
0x00000200003ecfdc : dec dword ptr [rcx - 0x75] ; sbb al, 0x24 ; call 0x200000a92d7
0x000002000051bd1d : dec dword ptr [rcx - 0x7d] ; and dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200001fbbb1 : dec dword ptr [rcx - 0x7d] ; jge 0x200001fbbc7 ; add byte ptr [rbp + rdi*2 - 0xa], dh ; ret
0x00000200001c10e9 : dec dword ptr [rcx - 0x7d] ; ret
0x000002000006a612 : dec dword ptr [rcx - 0x7d] ; ret 0x4008
0x00000200003c2f18 : dec dword ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000153662 : dec dword ptr [rcx - 0x7d] ; ret 0x4804
0x000002000011eff4 : dec dword ptr [rcx - 0x7d] ; ret 0x4808
0x00000200004cebe1 : dec dword ptr [rcx - 0x7d] ; ret 0x4848
0x00000200004f4ea3 : dec dword ptr [rcx - 0x7d] ; ret 0x4c04
0x00000200004ceda2 : dec dword ptr [rcx - 0x7d] ; ret 0x4d48
0x000002000006f513 : dec dword ptr [rcx - 0x7d] ; ret 0xe908
0x00000200000d47cd : dec dword ptr [rcx - 0x7ec7db8c] ; ret
0x00000200001be764 : dec dword ptr [rcx - 9] ; ret 0xfff
0x00000200003a5781 : dec dword ptr [rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0x2e4
0x0000020000424e14 : dec dword ptr [rcx] ; je 0x20000424e1d ; ret
0x00000200001537e6 : dec dword ptr [rcx] ; ret
0x00000200006150ac : dec dword ptr [rdi + rcx + 0x48] ; ret
0x0000020000126680 : dec dword ptr [rdi + rcx - 0x42] ; wait ; ret
0x00000200000d2c51 : dec dword ptr [rdi - 0x49f00007] ; ret
0x00000200000ab433 : dec dword ptr [rdi] ; adc dword ptr [rdi + 0xffffffe], -0x49 ; ret 0x4166
0x00000200000507ae : dec dword ptr [rdi] ; add byte ptr [rax], al ; add bh, bh ; ret 0xff49
0x00000200000bd16a : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200001814e5 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200001304ee : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200001e6468 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000003c78d : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000002000001e991 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000046636 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001823d5 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000003c3fe : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x00000200000bc1c9 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000070ce72 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000005dd63 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000576461 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000ce07b : dec dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffc
0x00000200000c14ff : dec dword ptr [rdi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001d8cfd : dec dword ptr [rdi] ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200000d2e03 : dec dword ptr [rdi] ; add byte ptr [rcx + 0x3b], al ; ret 0x860f
0x000002000018be1e : dec dword ptr [rdi] ; cdq ; ret
0x000002000070be3d : dec dword ptr [rdi] ; mov bh, 0x15 ; ret
0x00000200001231f9 : dec dword ptr [rdi] ; mov bh, 0x46 ; or byte ptr [rax - 0x75], cl ; ret
0x000002000065b755 : dec dword ptr [rdi] ; mov bh, 0x5f ; or dh, dh ; ret
0x00000200003e26d6 : dec dword ptr [rdi] ; mov byte ptr [rbx - 0xa000000], cl ; ret
0x0000020000407f5a : dec dword ptr [rdi] ; mov byte ptr [rdi - 0x9ffdf7b], cl ; ret
0x00000200000d92aa : dec dword ptr [rdi] ; mov dh, 0x53 ; add dh, dh ; ret 0x7401
0x00000200000b0f06 : dec dword ptr [rdi] ; mov dh, 0x8f ; ret 0
0x00000200000722b9 : dec dword ptr [rdi] ; mov dh, 0xbb ; ret
0x00000200000a81e4 : dec dword ptr [rdi] ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e4508 : dec dword ptr [rdi] ; mov dh, 0xca ; cmovne eax, ecx ; ret
0x00000200006652cb : dec dword ptr [rdi] ; mov edx, 0x5890df0 ; cli ; lodsd eax, dword ptr [rsi] ; ret 0x4cff
0x00000200001f3149 : dec dword ptr [rdi] ; mov edx, 0x830f12e6 ; ret
0x000002000037982c : dec dword ptr [rdi] ; mov edx, 0x830f18e7 ; ret 0xfff6
0x0000020000506c52 : dec dword ptr [rdi] ; mov edx, 0x8b480a2b ; ret
0x0000020000711152 : dec dword ptr [rdi] ; mov edx, 0xb7ef752d ; call qword ptr [rcx]
0x00000200006688bb : dec dword ptr [rdi] ; mov edx, 0xc0f8c435 ; call qword ptr [rax]
0x00000200006685d2 : dec dword ptr [rdi] ; mov edx, 0xc0fbad35 ; call qword ptr [rax]
0x00000200003f8ab8 : dec dword ptr [rdi] ; ret
0x0000020000362a91 : dec dword ptr [rdi] ; ret 0x4589
0x00000200001c60dd : dec dword ptr [rdi] ; ret 0x8841
0x0000020000664530 : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0x8b44
0x000002000035fc0f : dec dword ptr [rdi] ; test al, bl ; adc byte ptr [rcx], al ; add bl, dh ; ret
0x000002000060018f : dec dword ptr [rdi] ; test bh, dh ; ret 0xffe6
0x0000020000104bd1 : dec dword ptr [rdi] ; test bl, bh ; ret
0x000002000035faf7 : dec dword ptr [rdi] ; test byte ptr [rax + 0x11], dh ; add dword ptr [rax], eax ; ret
0x00000200000ef6a6 : dec dword ptr [rdi] ; test byte ptr [rax - 0x75000000], bl ; ret 0x41f0
0x0000020000128df7 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x9000003], dh ; ret
0x00000200000473fd : dec dword ptr [rdi] ; test byte ptr [rbx], al ; ret
0x00000200001f10ce : dec dword ptr [rdi] ; test byte ptr [rcx - 0x1600144b], al ; ret
0x00000200000dd0ed : dec dword ptr [rdi] ; test byte ptr [rcx], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000200000ab0d4 : dec dword ptr [rdi] ; test byte ptr [rcx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000102464 : dec dword ptr [rdi] ; test byte ptr [rdi + rdi*8 - 1], al ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200001f7e9d : dec dword ptr [rdi] ; test byte ptr [rdx], ch ; ret 0xffe3
0x000002000040c086 : dec dword ptr [rdi] ; test dh, ch ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000020000054e32 : dec dword ptr [rdi] ; test dword ptr [rbp - 0x74ffe850], ebp ; ret
0x0000020000137100 : dec dword ptr [rdi] ; test dword ptr [rbp - 0x74fff6a0], esi ; ret
0x00000200004eccd8 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x74ffebbc], eax ; ret
0x00000200003927ff : dec dword ptr [rdi] ; test dword ptr [rbx*2 - 0x49f0ffdc], esi ; ret
0x00000200004ecff2 : dec dword ptr [rdi] ; test dword ptr [rcx - 0x74ffebbe], ecx ; ret
0x00000200004d1b9c : dec dword ptr [rdi] ; test dword ptr [rdi - 0x74ffecbf], esp ; ret
0x00000200003bada6 : dec dword ptr [rdi] ; test dword ptr [rdi], esi ; ret 0xd
0x000002000049c3d2 : dec dword ptr [rdi] ; test dword ptr [rdx - 0x74ffe796], esi ; ret
0x00000200004419fa : dec dword ptr [rdi] ; test dword ptr [rdx], ebx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000002000048410e : dec dword ptr [rdi] ; test dword ptr [rsi - 0x7d000000], edx ; ret
0x00000200000416f6 : dec dword ptr [rdi] ; test dword ptr [rsi - 0x900000a], edx ; ret
0x00000200003baf16 : dec dword ptr [rdi] ; test dword ptr [rsi], ebp ; ret 0xd
0x000002000048c78c : dec dword ptr [rdi] ; test dword ptr [rsp + rsi - 0x49f0ffea], ebp ; ret
0x00000200003dedcf : dec dword ptr [rdi] ; test ecx, esi ; jmp 0x1ffc3c8ee04
0x0000020000145230 : dec dword ptr [rdi] ; test ecx, esp ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], al ; ret
0x000002000047fe3b : dec dword ptr [rdi] ; test edi, ebp ; mov edx, 0xb60f0015 ; ret
0x000002000041fd1b : dec dword ptr [rdi] ; test edx, ebp ; adc eax, 0xb60f001e ; ret
0x0000020000573214 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000609a6f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x8fe9
0x0000020000609a5c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xa2e9
0x0000020000168f21 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200003853fe : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x00000200001580e2 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x000002000027155c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x9848
0x0000020000412f4a : dec dword ptr [rdi] ; xchg ebp, eax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004cf263 : dec dword ptr [rdx + 0x10] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000466b41 : dec dword ptr [rdx + 0x18] ; ret
0x00000200004175fe : dec dword ptr [rdx + 0x6af81084] ; sub dword ptr [rax], eax ; ret
0x0000020000466b5b : dec dword ptr [rdx + 8] ; jmp 0x20000466b27
0x000002000048a871 : dec dword ptr [rdx - 0x1798172d] ; ret 0x48ff
0x00000200005ff06c : dec dword ptr [rdx - 0x2a8062f3] ; jmp qword ptr [rdx]
0x000002000048aa93 : dec dword ptr [rdx - 0x3074b62d] ; call 0x200000b90e9
0x00000200003718c8 : dec dword ptr [rdx - 0x3074b62d] ; call 0x2000014dbd8
0x00000200001a369b : dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000016e34d : dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x00000200005c359b : dec dword ptr [rdx - 0x74bb38bb] ; ret
0x0000020000193c59 : dec dword ptr [rip + 0x104551] ; ret
0x00000200001ee9c9 : dec dword ptr [rip + 0x10765d] ; jmp 0x200000aacaa
0x0000020000188d93 : dec dword ptr [rip + 0x1162f3] ; ret
0x0000020000188d75 : dec dword ptr [rip + 0x11630d] ; ret
0x00000200006680ba : dec dword ptr [rip - 0x7fd5ea77] ; ret 0x8bff
0x0000020000271059 : dec dword ptr [rsi + 0x4c] ; add rsp, 0x78 ; pop rsi ; pop rbp ; ret
0x00000200004a896b : dec dword ptr [rsi - 0x75] ; jl 0x200004a8940 ; sbb byte ptr [rbp + 3], al ; ret 0x34d
0x00000200003a577f : dec dword ptr fs:[rcx] ; add byte ptr [rax], al ; add cl, ch ; ret 0x2e4
0x00000200004f442f : dec eax ; add rax, rdx ; jmp 0x200004f43cd
0x00000200001549be : dec eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b517b : dec eax ; cmp eax, 2 ; jl 0x200000b518c ; ret
0x00000200003976ac : dec eax ; je 0x200003976b5 ; ret
0x000002000039bc90 : dec eax ; je 0x2000039bca3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000547354 : dec eax ; je 0x20000547367 ; mov eax, 0xc00000bb ; ret
0x000002000007360b : dec eax ; jne 0x20000073607 ; xor rax, rax ; ret
0x00000200000a38b9 : dec eax ; jne 0x200000a38b4 ; ret 0
0x00000200000a39b7 : dec eax ; jne 0x200000a39b5 ; ret 0
0x0000020000150dc5 : dec eax ; jne 0x20000150da1 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001f0dd0 : dec eax ; jne 0x200001f0dc8 ; ret
0x00000200004a4fa9 : dec eax ; jne 0x200004a4fa2 ; ret
0x00000200004defdc : dec eax ; jne 0x200004defdc ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006223d2 : dec eax ; jne 0x200006223bf ; ret
0x000002000063505d : dec eax ; jne 0x20000635059 ; ret
0x00000200006c0ece : dec eax ; jne 0x200006c0ecd ; add rsp, 0x28 ; ret
0x00000200006f2cb5 : dec eax ; jne 0x200006f2cb0 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f2cb5 : dec eax ; jne 0x200006f2cb1 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f43d1 : dec eax ; jne 0x200006f43b5 ; ret
0x0000020000175068 : dec eax ; jns 0x20000175061 ; or eax, 0xffffffff ; ret
0x000002000019c098 : dec eax ; jns 0x2000019c091 ; mov eax, edx ; ret
0x000002000019c098 : dec eax ; jns 0x2000019c092 ; mov eax, edx ; ret
0x000002000015367b : dec eax ; lock or dword ptr [r10], eax ; ret
0x00000200000773a8 : dec eax ; mov byte ptr [rcx], al ; jne 0x200000773a9 ; mov rax, r11 ; ret
0x000002000056fdc9 : dec eax ; not eax ; lock and dword ptr [r9], eax ; ret
0x00000200001a9869 : dec eax ; or rax, r8 ; jmp 0x200001a9888
0x00000200001ae3be : dec eax ; or rax, r8 ; jmp 0x200001ae3dd
0x00000200005f846d : dec eax ; push rsi ; ret
0x000002000005658f : dec eax ; ret
0x00000200006340db : dec eax ; test eax, eax ; jg 0x200006340e8 ; ret
0x000002000012cd2b : dec ebx ; jne 0x2000012cd26 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000177b3b : dec ebx ; jne 0x20000177b1b ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000582a2c : dec ebx ; jne 0x200005829cc ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000001e304 : dec ecx ; je 0x2000001e2cd ; jmp 0x2000001e301
0x00000200004063f3 : dec ecx ; je 0x200004a93b8 ; ret
0x0000020000566098 : dec ecx ; je 0x200005660a7 ; or eax, 0xffffffff ; ret
0x00000200005abe11 : dec ecx ; je 0x200005abe24 ; mov eax, 0xc000000d ; ret
0x000002000001e293 : dec ecx ; jne 0x2000001e30d ; mov eax, 2 ; ret
0x000002000001e2e4 : dec ecx ; jne 0x2000001e313 ; mov eax, 0x10 ; ret
0x0000020000023176 : dec ecx ; jne 0x20000023174 ; ret
0x00000200000aec9f : dec ecx ; jne 0x200000aec93 ; ret
0x000002000010a96c : dec ecx ; jne 0x2000010a987 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x00000200001419b2 : dec ecx ; jne 0x200001419a2 ; mov al, dl ; ret
0x0000020000157d4d : dec ecx ; jne 0x20000157d2a ; ret
0x000002000017244f : dec ecx ; jne 0x2000017242e ; ret
0x000002000019e076 : dec ecx ; jne 0x2000019e05c ; mov rax, r8 ; ret
0x00000200001a3acc : dec ecx ; jne 0x200001a3abc ; ret
0x0000020000395ac2 : dec ecx ; jne 0x20000395abe ; ret
0x00000200003a0f36 : dec ecx ; jne 0x200003a0f48 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003a0f36 : dec ecx ; jne 0x200003a0f49 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003aa2e8 : dec ecx ; jne 0x200003aa2f7 ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003aa2f0 : dec ecx ; jne 0x200003aa2ff ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003aa300 : dec ecx ; jne 0x200003aa30f ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200003ba842 : dec ecx ; jne 0x200003ba838 ; ret
0x00000200003fd2e1 : dec ecx ; jne 0x200003fd2df ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004c2be8 : dec ecx ; jne 0x200004c2bcf ; ret
0x00000200004dee8c : dec ecx ; jne 0x200004dee8a ; ret
0x000002000054f4de : dec ecx ; jne 0x2000054f4d2 ; ret
0x0000020000636e18 : dec ecx ; jne 0x20000636e03 ; ret
0x00000200006c0fa1 : dec ecx ; jne 0x200006c0f75 ; and qword ptr [rip - 0x3d8fa4], rcx ; ret
0x00000200006c3e2d : dec ecx ; jne 0x200006c3e01 ; ret
0x0000020000491561 : dec ecx ; jns 0x20000491556 ; mov eax, 0xc000000e ; ret
0x0000020000153faa : dec edx ; cmp r8, r10 ; jb 0x20000153fa2 ; ret
0x000002000002300f : dec edx ; je 0x20000023028 ; mov eax, 3 ; ret
0x00000200003c06b0 : dec edx ; je 0x200003c06bd ; xor eax, eax ; ret
0x000002000064c02a : dec edx ; je 0x2000064c037 ; xor eax, eax ; ret
0x00000200000c78c7 : dec edx ; jne 0x200000c7879 ; lock or byte ptr [rsp], 0 ; ret
0x00000200000fea93 : dec edx ; jne 0x200000fea81 ; not ecx ; mov eax, ecx ; ret
0x000002000012a022 : dec edx ; jne 0x2000012a016 ; ret
0x000002000014eb96 : dec edx ; jne 0x2000014eb74 ; ret
0x00000200001785cc : dec edx ; jne 0x200001785bd ; ret
0x0000020000363ea8 : dec edx ; jne 0x20000363e9a ; ret
0x00000200003cb277 : dec edx ; jne 0x200003cb271 ; ret
0x0000020000487404 : dec edx ; jne 0x200004873d8 ; ret
0x00000200004ba3d1 : dec edx ; jne 0x200004ba3b6 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004de487 : dec edx ; jne 0x200004de49e ; mov ebx, edi ; call 0x2000014a790
0x000002000052644d : dec edx ; jne 0x2000052644a ; ret
0x000002000052a2d2 : dec edx ; jne 0x2000052a2c2 ; mov eax, r8d ; ret
0x0000020000643922 : dec edx ; jne 0x2000064391e ; xor eax, eax ; ret
0x000002000064d27b : dec edx ; jne 0x2000064d263 ; ret
0x000002000015fe41 : dec edx ; mov dword ptr [r8 + 4], r10d ; ret
0x00000200000dcdbc : dec edx ; mov dword ptr [rax + 4], edx ; ret
0x00000200003bc000 : dec edx ; mov dword ptr [rcx + 0x50], edx ; test edx, edx ; je 0x200003bc013 ; ret
0x0000020000177e59 : dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001605f9 : dec esp ; add rsp, 0x28 ; ret
0x00000200006607bf : dec esp ; add rsp, 0x38 ; ret
0x000002000036d5a8 : dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x000002000006795a : dec esp ; and qword ptr [rcx], 0 ; ret
0x000002000044979e : dec esp ; call 0x20000071005
0x00000200004496b9 : dec esp ; call 0x20000072e45
0x0000020000173e1a : dec esp ; mov dword ptr [rip + 0x1e39a6], ecx ; ret
0x00000200005fff9d : dec esp ; mov eax, 0xc0000040 ; jmp 0x2000046c1b7
0x000002000061ef09 : dec esp ; mov eax, 0xc000005f ; jmp 0x2000041b146
0x00000200004c414a : dec esp ; mov rcx, r14 ; call 0x200000f22c8
0x0000020000601c76 : dec esp ; mov rcx, rdi ; call 0x2000012deb3
0x000002000043baa9 : dec esp ; mov rcx, rsi ; call 0x20000064b08
0x00000200001f058d : dec esp ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200001c0d39 : dec esp ; nop ; mov eax, 0xc000000e ; ret
0x00000200005e34e7 : dec esp ; nop ; nop ; nop ; call rax
0x0000020000710bc7 : dec esp ; nop ; nop ; nop ; mov rcx, r10 ; call r11
0x000002000061b463 : dec esp ; nop ; nop ; nop ; xor al, al ; jmp 0x200004276fd
0x000002000036703b : dec esp ; nop ; nop ; nop ; xor eax, eax ; ret
0x0000020000094963 : dec esp ; ret
0x00000200000a836e : dec esp ; xor al, al ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000164e0f : dec esp ; xor al, al ; add rsp, 0x38 ; ret
0x00000200001e8136 : dec esp ; xor ebx, ebx ; jmp 0x20000144426
0x00000200006445f1 : dec qword ptr [r8 + 0x33] ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x000002000004b9cd : dec qword ptr [r8 - 0x75] ; ret
0x00000200000d0a2b : dec qword ptr [r9 + 3] ; ret
0x00000200000d08c3 : dec qword ptr [rax - 0x75] ; ret 0x3349
0x00000200000e4d09 : dec qword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000e4dea : dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200004d5209 : dec qword ptr [rax - 0x7f] ; ret 0x5dcb
0x0000020000071096 : dec qword ptr [rcx + 0xb482075] ; ret 0xc123
0x0000020000153fa9 : dec r10 ; cmp r8, r10 ; jb 0x20000153fa3 ; ret
0x00000200000fea92 : dec r10 ; jne 0x200000fea82 ; not ecx ; mov eax, ecx ; ret
0x000002000012a021 : dec r10 ; jne 0x2000012a017 ; ret
0x000002000014eb95 : dec r10 ; jne 0x2000014eb75 ; ret
0x0000020000487403 : dec r10 ; jne 0x200004873d9 ; ret
0x000002000015fe40 : dec r10d ; mov dword ptr [r8 + 4], r10d ; ret
0x000002000007360a : dec r8 ; jne 0x20000073608 ; xor rax, rax ; ret
0x00000200000a38b8 : dec r8 ; jne 0x200000a38b5 ; ret 0
0x00000200000a39b6 : dec r8 ; jne 0x200000a39b6 ; ret 0
0x0000020000150dc4 : dec r8 ; jne 0x20000150da2 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200006223d1 : dec r8 ; jne 0x200006223c0 ; ret
0x00000200006f2cb4 : dec r8 ; jne 0x200006f2cb1 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f43d0 : dec r8 ; jne 0x200006f43b6 ; ret
0x000002000063505c : dec r8d ; jne 0x2000063505a ; ret
0x0000020000175067 : dec r8d ; jns 0x20000175062 ; or eax, 0xffffffff ; ret
0x000002000019c097 : dec r8d ; jns 0x2000019c092 ; mov eax, edx ; ret
0x000002000019c097 : dec r8d ; jns 0x2000019c093 ; mov eax, edx ; ret
0x0000020000175066 : dec r8w ; jns 0x20000175063 ; or eax, 0xffffffff ; ret
0x00000200000aec9e : dec r9 ; jne 0x200000aec94 ; ret
0x00000200001419b1 : dec r9 ; jne 0x200001419a3 ; mov al, dl ; ret
0x0000020000157d4c : dec r9 ; jne 0x20000157d2b ; ret
0x000002000019e075 : dec r9 ; jne 0x2000019e05d ; mov rax, r8 ; ret
0x00000200003ba841 : dec r9 ; jne 0x200003ba839 ; ret
0x00000200004c2be7 : dec r9 ; jne 0x200004c2bd0 ; ret
0x000002000054f4dd : dec r9 ; jne 0x2000054f4d3 ; ret
0x0000020000636e17 : dec r9 ; jne 0x20000636e04 ; ret
0x000002000017244e : dec r9d ; jne 0x2000017242f ; ret
0x00000200004f442e : dec rax ; add rax, rdx ; jmp 0x200004f43ce
0x00000200004f442d : dec rax ; add rax, rdx ; jmp 0x200004f43cf
0x00000200001549bd : dec rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a4fa8 : dec rax ; jne 0x200004a4fa3 ; ret
0x00000200006c0ecd : dec rax ; jne 0x200006c0ece ; add rsp, 0x28 ; ret
0x0000020000154875 : dec rax ; ret
0x0000020000023175 : dec rcx ; jne 0x20000023175 ; ret
0x00000200001a3acb : dec rcx ; jne 0x200001a3abd ; ret
0x00000200004dee8b : dec rcx ; jne 0x200004dee8b ; ret
0x00000200006c3e2c : dec rcx ; jne 0x200006c3e02 ; ret
0x00000200001785cb : dec rdx ; jne 0x200001785be ; ret
0x0000020000363ea7 : dec rdx ; jne 0x20000363e9b ; ret
0x00000200003cb276 : dec rdx ; jne 0x200003cb272 ; ret
0x000002000052644c : dec rdx ; jne 0x2000052644b ; ret
0x000002000052a2d1 : dec rdx ; jne 0x2000052a2c3 ; mov eax, r8d ; ret
0x0000020000643921 : dec rdx ; jne 0x2000064391f ; xor eax, eax ; ret
0x000002000064d27a : dec rdx ; jne 0x2000064d264 ; ret
0x00000200000b5099 : dec word ptr [rax + 0x1e4] ; ret
0x00000200000bdf99 : dec word ptr [rax + 0x1e6] ; ret
0x0000020000139a90 : dec word ptr [rcx + 0x1e4] ; ret
0x000002000005aa9c : div al ; dec dword ptr [rcx + 0x46c] ; ret
0x00000200004aad87 : div bh ; ret 0xfff0
0x000002000041dfbb : div bh ; ret 0xfffe
0x0000020000154112 : div bl ; ret
0x0000020000575779 : div byte ptr [rax + rdi - 0xa] ; ret
0x0000020000073975 : div byte ptr [rbp - 0x47] ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x00000200000738e2 : div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000007355e : div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x000002000048894c : div byte ptr [rbx + rax*2 + 0x48] ; mov ecx, esi ; call 0x200000b5019
0x000002000011f6b8 : div byte ptr [rbx + rcx - 0x75] ; ret
0x00000200005c3d40 : div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200006c6499 : div byte ptr [rbx] ; sar byte ptr [rcx], 0x35 ; ret 0xfef7
0x00000200005b1f74 : div byte ptr [rcx + rbp - 0xa] ; ret
0x000002000057b55d : div byte ptr [rdi - 0x7b] ; push qword ptr [rbx - 0xa] ; ret
0x000002000000e04d : div byte ptr [rdx - 0x75] ; ret
0x0000020000575038 : div byte ptr [rdx - 0xa] ; ret
0x00000200003dc98e : div byte ptr [rdx - 9] ; ret
0x00000200001158b2 : div byte ptr [rsi + rcx + 0x3b] ; ret 0xe76
0x00000200005757d8 : div byte ptr [rsi + rdx - 0xa] ; ret
0x00000200000e6495 : div byte ptr [rsi + rdx*2 + 0x48] ; lea edx, dword ptr [rsi + 0x10] ; call r8
0x00000200001565ca : div byte ptr [rsi + rsi - 0xa] ; ret
0x00000200005147ca : div byte ptr [rsi + rsi*2 - 0x15] ; ret
0x00000200001696ad : div byte ptr [rsp + rax + 0xb] ; ret
0x00000200000e669d : div byte ptr [rsp + rdx*2 - 0xa] ; ret
0x00000200001225cf : div dh ; ret
0x000002000000600b : div dh ; ret 0xf04
0x00000200004e8290 : div dword ptr [rcx + 8] ; ret
0x00000200000cd905 : div dword ptr [rsi] ; inc dword ptr [rbp + 0x3b] ; ret 0x850f
0x000002000035fed5 : div ebx ; ret
0x00000200000c8a33 : div ecx ; jmp 0x200000c89af
0x00000200001fb55a : div ecx ; mov rax, rdx ; ret
0x0000020000138b88 : div ecx ; ret
0x0000020000022fec : div edx ; mov r9, rax ; mov rax, r9 ; ret
0x0000020000022feb : div r10 ; mov r9, rax ; mov rax, r9 ; ret
0x00000200000c8a32 : div rcx ; jmp 0x200000c89b0
0x00000200001fb559 : div rcx ; mov rax, rdx ; ret
0x00000200003fd8ba : emms ; add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x00000200004fb10e : emms ; sal byte ptr [rdx], 0xc0 ; ret
0x000002000015552e : enter -0x10, -0x75 ; ret
0x00000200006f2cb6 : enter -0x108b, -0x3f ; loop 0x200006f2cdb ; or eax, edx ; ret
0x00000200006f2cb6 : enter -0x108b, -0x3f ; loop 0x200006f2cdc ; or eax, edx ; ret
0x00000200001f0dd1 : enter -0x108b, -0xd ; ret
0x00000200001a68a0 : enter -0x108e, -0x75 ; ret 0x90c3
0x000002000064e81c : enter -0x1118, 7 ; ret 0x48ff
0x0000020000168d5b : enter -0x118b, -0x75 ; ret 0x8b48
0x000002000000587e : enter -0x118d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004c5b6f : enter -0x128b, -0x75 ; ret 0xffb9
0x00000200004f1607 : enter -0x128b, -1 ; ret 0x8b48
0x000002000019e335 : enter -0x138e, -0x50 ; add ebx, eax ; xor al, al ; ret
0x00000200001b8ed6 : enter -0x148e, -0xd ; ret
0x00000200003d6bd5 : enter -0x14f0, -0x17 ; bts eax, 0xc ; ret
0x00000200000c316d : enter -0x14f8, -0x24 ; or eax, 0xffffffff ; ret
0x00000200003dd3c0 : enter -0x14fe, -0x34 ; mov eax, 0xc000000d ; ret
0x00000200005ee9f8 : enter -0x158b, -1 ; ret 0x8b4c
0x00000200005f6c19 : enter -0x1601, -0x49 ; ret
0x00000200005f6b6b : enter -0x1601, -0x66 ; ret 0xffe8
0x00000200001540fc : enter -0x168e, 0x49 ; mov eax, edx ; ret
0x00000200001425d4 : enter -0x16e0, -0x38 ; ret 0xffef
0x00000200001425c2 : enter -0x16f0, -0x26 ; ret 0xffef
0x00000200001eacf2 : enter -0x16f8, 0x7f ; in al, -0x10 ; push rsi ; ret 0x7401
0x0000020000606cec : enter -0x1701, -0x33 ; mov ch, 0xae ; call qword ptr [rax - 0x11003d17]
0x00000200006223d3 : enter -0x1b8b, -0xd ; ret
0x00000200001544ed : enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x0000020000708475 : enter -0x1e8b, -0x75 ; ret
0x0000020000150386 : enter -0x1f2d, -9 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x00000200000de1d1 : enter -0x208b, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001a85f5 : enter -0x228b, 0x41 ; mov eax, eax ; ret
0x00000200006f43d2 : enter -0x248b, -0xd ; ret
0x00000200001f4faa : enter -0x2617, -0x4d ; cmc ; inc dword ptr [rcx - 0xa] ; ret 0x743f
0x00000200005327bf : enter -0x2d, -0x75 ; ret
0x00000200003c4b76 : enter -0x2dcd, -0x18 ; ret 0xd158
0x000002000054273d : enter -0x2e, -0x75 ; ret
0x000002000042b7ed : enter -0x2e18, -0x5a ; ret 0x48ff
0x00000200001a1ad8 : enter -0x2efd, -0x75 ; ret 0xe8c1
0x00000200001c66e5 : enter -0x2efd, -0x75 ; ret 0xf8c1
0x000002000056fdca : enter -0x2f09, -0x10 ; and dword ptr [r9], eax ; ret
0x00000200001f9734 : enter -0x2f09, -0x17 ; ret 0xec5f
0x0000020000090ca2 : enter -0x31a1, -8 ; call rdx
0x00000200001f7f4f : enter -0x3418, 0x28 ; cmp al, byte ptr [rax] ; nop ; jmp 0x20000034210
0x00000200005bbe7f : enter -0x3418, 0x7a ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004487d0 : enter -0x3518, -0x1b ; ret 0x48ff
0x00000200004d16a0 : enter -0x3518, -0x5c ; ret
0x000002000037d9b3 : enter -0x35f5, 0x41 ; cmp ecx, eax ; sete al ; ret
0x00000200003c65b0 : enter -0x36, -0x75 ; ret
0x00000200004492d1 : enter -0x3618, -0x26 ; ret 0x4cff
0x0000020000117691 : enter -0x36cd, -0x18 ; jmp rdx
0x0000020000420a44 : enter -0x3b, 0x48 ; add esp, 0x28 ; ret
0x000002000070815f : enter -0x3c01, -0x48 ; add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000020000067865 : enter -0x3c01, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000a9d64 : enter -0x3c01, -0x70 ; mov al, 1 ; ret
0x000002000003e94d : enter -0x3e75, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001b5b05 : enter -0x3e75, 0x48 ; add esp, 0x28 ; ret
0x00000200001ab4f3 : enter -0x3eb7, -0x20 ; add al, 0xe8 ; ret
0x00000200001d2d4d : enter -0x3eb8, -0x17 ; cmp byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x00000200000cf53d : enter -0x3eb8, -0x19 ; sbb dword ptr [rax - 0x3f], ecx ; call qword ptr [rax]
0x00000200000b4e2b : enter -0x3eb8, -0x20 ; and byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000135886 : enter -0x3ebf, -0x18 ; or al, 0x81 ; ret
0x00000200003ab3bd : enter -0x3f7b, 0x78 ; ret 0x8b48
0x000002000006fa7b : enter -0x3fe5, 0x23 ; add eax, 0x2e75f0 ; ret
0x0000020000391b4c : enter -0x3fe5, 0x25 ; add al, 0 ; add al, al ; ret
0x000002000058c68b : enter -0x40, -0x70 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004985dd : enter -0x40, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200005e60ef : enter -0x438e, -0x17 ; ret
0x00000200006d06cc : enter -0x45bf, 0 ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], cl ; ret
0x000002000046b991 : enter -0x4618, 0x7f ; ret
0x00000200005d236f : enter -0x48f1, 0x41 ; or bh, bh ; ret 0x341
0x0000020000153131 : enter -0x48f1, 4 ; ret
0x0000020000520a78 : enter -0x4b, -0x75 ; ret
0x0000020000520cf4 : enter -0x4b, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000009f70e : enter -0x4b0d, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x0000020000478ad3 : enter -0x4f01, 1 ; add rsp, 0x28 ; ret
0x000002000048349b : enter -0x5018, 4 ; ret 0x8bff
0x00000200004307ed : enter -0x5615, 0x48 ; mov ebx, eax ; jmp 0x200004307be
0x00000200005081c9 : enter -0x5618, -0xb ; ret
0x000002000046b59d : enter -0x5715, 0x48 ; mov ecx, eax ; jmp 0x2000046b56f
0x00000200004764a3 : enter -0x5818, -0x2c ; ret 0x48ff
0x0000020000476aac : enter -0x6118, -0x32 ; ret 0x48ff
0x0000020000105bae : enter -0x6318, -0x23 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000438620 : enter -0x6518, -0x15 ; ret
0x00000200006f64e9 : enter -0x69, -0x75 ; ret
0x000002000037d9b8 : enter -0x6bf1, -0x40 ; ret
0x000002000058bf07 : enter -0x6cf1, -0x40 ; ret
0x000002000047c2b8 : enter -0x6d18, 0x76 ; ret 0x44ff
0x0000020000144359 : enter -0x6df1, -0x40 ; ret
0x00000200005dfe26 : enter -0x6f01, -0x17 ; ret 0xe54c
0x0000020000421562 : enter -0x6f18, -0x16 ; ret 0x48ff
0x00000200004830ba : enter -0x6f18, 8 ; ret 0x48ff
0x000002000043a10c : enter -0x7118, -0x34 ; ret
0x0000020000479c52 : enter -0x718, -0x64 ; ret 0xffff
0x0000020000407993 : enter -0x72b4, 0x44 ; and al, 0x68 ; xor edx, edx ; call r11
0x00000200000ccf94 : enter -0x72b6, 4 ; or dword ptr [rcx + 0x3b], ecx ; ret
0x00000200005adfb5 : enter -0x72b8, 0x15 ; ret
0x0000020000399381 : enter -0x72b8, 0x1c ; ret 0x8d41
0x000002000004c8cf : enter -0x72b8, 0x47 ; jo 0x2000004c8eb ; xchg eax, esp ; ret 0x8948
0x00000200004ee92d : enter -0x72b8, 0x4f ; pop rcx ; call rax
0x00000200001b1643 : enter -0x72b8, 0x50 ; adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000001c0ae : enter -0x72b8, 0xd ; ret 0x277c
0x0000020000441db9 : enter -0x72b8, 4 ; nop ; ret
0x00000200001428ad : enter -0x72b8, 4 ; or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x00000200001aa2e1 : enter -0x72b8, 4 ; ret
0x000002000062f97e : enter -0x7318, -0xa ; ret
0x0000020000414d49 : enter -0x74b3, -0x3c ; mov rcx, r13 ; call rax
0x0000020000022ff0 : enter -0x74b7, -0x3f ; ret
0x000002000010fcbd : enter -0x74b7, 0x46 ; sub byte ptr [rax + 0x23], cl ; ret 0xb48
0x00000200004422ad : enter -0x74b7, 0x58 ; and dh, dh ; ret
0x000002000041a4c8 : enter -0x74b8, -0x28 ; call 0x2000004969f
0x0000020000123704 : enter -0x74b8, -0x28 ; call 0x2000006f962
0x00000200005d23a9 : enter -0x74b8, -0x3f ; add rsp, 0x28 ; ret
0x0000020000199051 : enter -0x74b8, -0x3f ; add rsp, 0x40 ; pop rbx ; ret
0x000002000041b46e : enter -0x74b8, -0x3f ; ret
0x00000200001c31ad : enter -0x74b8, 0x15 ; sti ; ret
0x00000200000f50d8 : enter -0x74b8, 0x40 ; adc byte ptr [rax + 0x3b], cl ; ret
0x000002000017e9d7 : enter -0x74b8, 0x43 ; sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x00000200003b803e : enter -0x74b8, 0x70 ; or byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200000a3894 : enter -0x74b8, 4 ; adc dword ptr [rax + 0xf], ecx ; ret
0x0000020000068ef9 : enter -0x74b8, 5 ; jmp rax
0x00000200004aadba : enter -0x74b8, 5 ; ret 0xffea
0x000002000048460a : enter -0x74bc, -0x40 ; call rsi
0x0000020000632103 : enter -0x74bf, -0x2a ; call rax
0x0000020000419e50 : enter -0x74bf, -0x3f ; add rsp, 0x38 ; ret
0x0000020000064187 : enter -0x74bf, -0x3f ; ret
0x000002000017fa9a : enter -0x74bf, -0x40 ; mov word ptr [r9 + 0xa], cx ; ret
0x0000020000609b88 : enter -0x7601, 0x43 ; sbb al, 0xe9 ; ret 0xe17c
0x000002000047f3fa : enter -0x769a, 0x75 ; ret 0x2ce8
0x00000200004d4a1f : enter -0x76b4, 0x5d ; sal byte ptr [rbx], 1 ; ret 0x8d48
0x00000200001f62b9 : enter -0x76b6, 0x44 ; ret
0x000002000051a368 : enter -0x76b7, 4 ; and al, 0xeb ; ret 0xfb8b
0x0000020000490546 : enter -0x76b8, 0x40 ; sbb al, ch ; nop ; ret 0x48ff
0x00000200006d1a02 : enter -0x76b8, 0x45 ; test al, 0x41 ; call rcx
0x000002000044254e : enter -0x76b8, 0x4d ; sbb al, ch ; insb byte ptr [rdi], dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x000002000045e22a : enter -0x76b8, 0x5d ; fmul dword ptr [rax - 0x75] ; ret 0x8948
0x000002000002c81c : enter -0x76b8, 0xa ; ret
0x00000200005dce03 : enter -0x76b8, 0xd ; insd dword ptr [rdi], dx ; ret 0xffd0
0x000002000056e593 : enter -0x76bb, 0x7b ; fsubr st(0) ; ret
0x00000200006c4bf2 : enter -0x76e0, 5 ; ret 0xebff
0x00000200006c4be7 : enter -0x76f0, 5 ; ret 0xebff
0x00000200006c4bdc : enter -0x76f8, 5 ; ret 0xebff
0x00000200006c4bd1 : enter -0x76fc, 5 ; push rdi ; ret 0xebff
0x00000200006c4bbb : enter -0x76ff, 5 ; insd dword ptr [rdi], dx ; ret 0xebff
0x00000200000a59b5 : enter -0x77bc, -0x75 ; ret
0x00000200006c598f : enter -0x77bc, 5 ; jae 0x200006c59b2 ; leave ; call rbx
0x00000200000b517c : enter -0x77d, 2 ; jl 0x200000b518b ; ret
0x00000200005a2fbb : enter -0x78f1, -7 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf903
0x00000200004e3e42 : enter -0x78f1, 0x4f ; mov cl, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200005a7b61 : enter -0x7ab8, -0x37 ; jne 0x200005a7b53 ; mov rax, rcx ; ret
0x00000200006c8ade : enter -0x7af1, -0x49 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200006138ba : enter -0x7af1, 0x19 ; mov edx, esi ; dec dword ptr [rax - 1] ; ret
0x00000200004655c7 : enter -0x7c18, -0x1d ; ret
0x00000200000ca143 : enter -0x7cb7, -0x3f ; adc bh, bh ; ret 0x3b4d
0x000002000035fdd7 : enter -0x7cbf, -0x3e ; add al, byte ptr [rcx - 0x75] ; ret
0x0000020000428b1c : enter -0x7ce8, 0x74 ; enter 0x310, -1 ; ret 0x5489
0x000002000003d716 : enter -0x7cf1, 0x5b ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200000ab8d0 : enter -0x7df1, 0x7e ; add al, 0 ; add byte ptr [rbp - 0x75], cl ; ret 0xf44
0x00000200005f846e : enter -0x901, -0x3d ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x000002000046f654 : enter -0x918, 0x42 ; ret
0x0000020000198b54 : enter -0x9f7, -1 ; add rsp, 0x38 ; ret
0x0000020000003033 : enter -0xbf, -0x30 ; add rsp, 0x28 ; ret
0x000002000063505e : enter -0xc8b, -0xd ; ret
0x00000200006c0ecf : enter -0xc8b, 0x48 ; add esp, 0x28 ; ret
0x00000200004defdd : enter -0xc8b, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000004c17d : enter -0xd75, -0x75 ; ret 0xe8c1
0x0000020000023e1f : enter -0xd8d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000465359 : enter -0xe18, -0x1b ; ret
0x000002000007360c : enter -0xe8b, 0x48 ; xor eax, eax ; ret
0x000002000043564a : enter -0xf18, -0x29 ; ret
0x000002000059078c : enter -0xf75, -0x18 ; pop rax ; ret 0xffc0
0x000002000019c099 : enter -0xf87, -0x75 ; ret 0x41c3
0x00000200004a4faa : enter -0xf8b, -0xd ; ret
0x000002000019ec05 : enter -0xf8e, -0xd ; ret
0x0000020000669713 : enter -1, -0xa ; ret
0x0000020000597f6b : enter -1, 0x48 ; add esp, 0x38 ; ret
0x00000200000ef55f : enter -2, -0x75 ; ret
0x00000200004aa77f : enter 0, 0 ; call r10
0x00000200000ad949 : enter 0, 0 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000017aec6 : enter 0, 0 ; pop rbx ; pop rbp ; ret
0x00000200006ed143 : enter 0, 0 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000009d27 : enter 0, 0 ; ret
0x0000020000056c5a : enter 0, 0 ; shr al, 4 ; and al, 1 ; ret
0x00000200006c442f : enter 0x1172, 0x48 ; add esp, 0x28 ; ret
0x000002000047c339 : enter 0x11e8, 0x76 ; ret 0x4dff
0x00000200000c930e : enter 0x1243, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000052a3f8 : enter 0x12e8, 7 ; ret
0x00000200004b0793 : enter 0x13, -0x75 ; ret 0x8d48
0x00000200004ade12 : enter 0x15, 0x48 ; add esp, 0x28 ; ret
0x0000020000104f13 : enter 0x17, 0 ; jne 0x20000104f20 ; ret
0x00000200000773a9 : enter 0x188, 0x75 ; mov rax, r11 ; ret
0x000002000003d576 : enter 0x18a, -0x17 ; mov ebp, 0xf6fffffa ; ret 0xf03
0x00000200000de91d : enter 0x18a, -0x17 ; mov esp, 0xf6fffff9 ; ret 0xf03
0x000002000003d601 : enter 0x18a, -1 ; ret 0x9489
0x000002000044897d : enter 0x1de8, -0x1c ; ret 0x48ff
0x000002000041ba2d : enter 0x1de8, 0x7f ; enter 0x48ff, -0x75 ; ret
0x000002000044947c : enter 0x1ee8, -0x27 ; ret 0x8bff
0x0000020000362f6f : enter 0x2172, -0xa ; ret 0x7504
0x00000200000e9940 : enter 0x26d6, 0 ; ret
0x00000200003b3070 : enter 0x27d7, 0 ; lea eax, dword ptr [rcx + 3] ; ret
0x0000020000643652 : enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x00000200003fe9d3 : enter 0x2b45, -0x38 ; mov eax, r9d ; ret
0x00000200000b6768 : enter 0x2b49, -0x38 ; cmp rax, rdx ; jae 0x200000b6797 ; ret
0x0000020000428b20 : enter 0x310, -1 ; ret 0x5489
0x00000200003feae3 : enter 0x3345, -0x38 ; mov eax, r9d ; ret
0x000002000014ac09 : enter 0x33c3, -0x40 ; ret
0x00000200004f4430 : enter 0x348, -0x3e ; jmp 0x200004f43cc
0x000002000043b383 : enter 0x349, -0x3f ; ret
0x000002000054b127 : enter 0x37e8, -0x25 ; ret
0x000002000050b6f6 : enter 0x38e8, -0x39 ; ret
0x00000200006c848a : enter 0x3948, 0x59 ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000012724e : enter 0x3949, 0x49 ; push rax ; je 0x2000012725f ; ret
0x00000200004757d5 : enter 0x3b45, -0x3f ; jb 0x200004757cd ; mov eax, edx ; ret
0x00000200004757d5 : enter 0x3b45, -0x3f ; jb 0x200004757ce ; mov eax, edx ; ret
0x00000200004ab03e : enter 0x3b48, -0x36 ; seta al ; ret
0x00000200000b676b : enter 0x3b48, -0x3e ; jae 0x200000b6794 ; ret
0x00000200000fe3c5 : enter 0x3b49, -0x37 ; setbe dl ; mov eax, edx ; ret
0x00000200004cc8f3 : enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x000002000019c15c : enter 0x3b66, -0x36 ; setbe al ; ret
0x0000020000472b0e : enter 0x3ce8, 0xe ; ret
0x0000020000468c0d : enter 0x3de8, -0x53 ; ret
0x000002000047c30c : enter 0x3ee8, 0x76 ; ret 0xbaff
0x000002000064e6cc : enter 0x3ee8, 9 ; ret 0x48ff
0x000002000013a7ed : enter 0x4166, 0x3b ; ret
0x0000020000077208 : enter 0x4188, -1 ; jne 0x20000077209 ; mov rax, r11 ; ret
0x0000020000421c3d : enter 0x41e8, -0x1d ; ret 0x48ff
0x0000020000589ef5 : enter 0x41ff, -0x78 ; adc cl, byte ptr [rcx - 1] ; ret 0x344
0x0000020000144c8b : enter 0x41ff, 0x2b ; ret 0x344
0x00000200006ca2a8 : enter 0x41ff, 3 ; dec byte ptr [rax - 0x7d] ; ret
0x00000200001df082 : enter 0x4208, -0x77 ; push rsp ; ret
0x000002000014f449 : enter 0x4308, -0x77 ; push rsp ; ret
0x00000200004cc8f6 : enter 0x450f, -0x3e ; ret
0x00000200004a896f : enter 0x4518, 3 ; ret 0x34d
0x00000200005301ed : enter 0x45ff, -0x76 ; loopne 0x20000530183 ; ret
0x00000200001b3359 : enter 0x473, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x00000200001b7814 : enter 0x474, -0x7b ; ret 0xec74
0x000002000001b290 : enter 0x477, 0x48 ; sub eax, ecx ; ret
0x00000200001c1914 : enter 0x4808, -1 ; ret
0x0000020000634180 : enter 0x4810, 0xb ; ret 0x8949
0x000002000015e7ad : enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x000002000006c2d5 : enter 0x483b, 0xc ; jb 0x2000006c2e6 ; mov eax, ecx ; ret
0x0000020000076cec : enter 0x48c3, -0x75 ; ret 0x2548
0x000002000011d487 : enter 0x48f0, 0xf ; mov edx, 0x1720029 ; ret
0x00000200001878a2 : enter 0x48ff, -0x3f ; call qword ptr [rax]
0x000002000019088b : enter 0x48ff, -0x3f ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000062e5e9 : enter 0x48ff, -0x75 ; fmul dword ptr [rax - 1] ; ret
0x000002000041ba31 : enter 0x48ff, -0x75 ; ret
0x000002000052228b : enter 0x48ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200006d0c2e : enter 0x48ff, -0x7d ; ret 0x4850
0x000002000047e925 : enter 0x48ff, -0x7f ; ret
0x0000020000113df9 : enter 0x48ff, 0x2b ; ret 0x348
0x000002000047b001 : enter 0x49e8, -0x77 ; ret 0x44ff
0x00000200005ac4af : enter 0x49ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004f4ea2 : enter 0x49ff, -0x7d ; ret 0x4c04
0x00000200000dcdf7 : enter 0x4a89, 0x30 ; ret
0x0000020000159922 : enter 0x4b88, 6 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000044944e : enter 0x4ce8, -0x27 ; ret 0x65ff
0x0000020000423b59 : enter 0x4de8, -0x19 ; ret 0x8bff
0x0000020000426c50 : enter 0x4ee8, -0xe ; ret 0x49ff
0x00000200004703fa : enter 0x50e8, 0x35 ; ret
0x000002000041f46e : enter 0x50e8, 0x6a ; ret
0x000002000042b64d : enter 0x51e8, -0x58 ; ret 0x49ff
0x00000200003a63a0 : enter 0x5275, -0x75 ; ret
0x000002000054b20a : enter 0x54e8, -0x26 ; ret
0x0000020000445846 : enter 0x54e8, 0x15 ; ret
0x000002000047ebf6 : enter 0x54e8, 0x4d ; ret 0x41ff
0x0000020000421c52 : enter 0x54e8, 6 ; ret
0x00000200004731f3 : enter 0x57e8, 7 ; ret
0x000002000046bdb3 : enter 0x57f, 0x48 ; add esp, 0x38 ; ret
0x00000200000aecfd : enter 0x589, 0x18 ; test byte ptr [rax + rax], bl ; je 0x200000aed10 ; ret
0x0000020000666b8b : enter 0x589, 0x62 ; xchg eax, ebp ; ret 0x6bff
0x0000020000664551 : enter 0x58b, 0x5c ; cmp al, 0xc1 ; call rcx
0x00000200001f7ec2 : enter 0x58e8, 0x29 ; cmp al, byte ptr [rax] ; nop ; jmp 0x20000034137
0x000002000046fef1 : enter 0x59e8, 0x3a ; ret
0x00000200003b43d3 : enter 0x5fff, 0x5b ; ret
0x00000200003fc647 : enter 0x63e8, 0x79 ; ret 0xebff
0x000002000007c642 : enter 0x6602, -9 ; ret 0x100
0x0000020000061a5f : enter 0x6608, 3 ; ret
0x00000200006ba279 : enter 0x673, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000039bc91 : enter 0x674, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000019a9d7 : enter 0x677, 0x48 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000146fe2 : enter 0x68e8, -0x37 ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x000002000014d906 : enter 0x6972, 0x33 ; rol byte ptr [rcx - 0x75], cl ; ret 0xc06b
0x000002000047c2e1 : enter 0x69e8, 0x76 ; ret 0x41ff
0x000002000045ad2d : enter 0x6de8, -0x40 ; sar edi, -0x75 ; ret
0x000002000062f89b : enter 0x6fe8, -9 ; ret
0x00000200004b85ab : enter 0x7273, -0x75 ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x0000020000446027 : enter 0x73e8, 0xd ; ret
0x000002000008ef98 : enter 0x75ca, -0x74 ; ret 0x5e78
0x0000020000073a6c : enter 0x774, -0xa ; ret 0x7507
0x00000200000e993b : enter 0x775, -0x75 ; add eax, 0x26d6c8 ; ret
0x0000020000623ff3 : enter 0x775, 0xf ; mov bh, 0xd ; ret
0x00000200006c8c32 : enter 0x78e8, -0x58 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004fac1d : enter 0x7b80, 1 ; test byte ptr [rcx + 0xf], al ; ret
0x000002000000ba1b : enter 0x8b, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000200001043ea : enter 0x8b, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000200001ab0fc : enter 0xa73, -0x75 ; ret 0xe8c1
0x000002000064e200 : enter 0xae8, 0xe ; ret 0x48ff
0x00000200001a986a : enter 0xb49, -0x40 ; jmp 0x200001a9887
0x00000200001ae3bf : enter 0xb49, -0x40 ; jmp 0x200001ae3dc
0x000002000048353f : enter 0xbe8, 4 ; ret 0x83ff
0x0000020000192ccd : enter 0xc73, -0x75 ; ror dword ptr [rax - 0x75], -0x74 ; ret
0x00000200001cd841 : enter 0xde8, -0x1c ; jmp 0x1ffc3d2e851
0x00000200001c3ec4 : enter 0xdeb, -0xa ; ret 0x7440
0x00000200001da2b2 : enter 0xe72, -0x17 ; ret
0x000002000006ec72 : enter 0xf41, -0x49 ; ret
0x000002000019cef6 : enter 0xf41, -0x49 ; ret 0x4166
0x0000020000545312 : enter 0xf41, -0x49 ; ret 0x8eb
0x0000020000534882 : enter 0xf41, -0x49 ; ret 0xc149
0x000002000019cec4 : enter 0xf41, -0x49 ; ret 0xd166
0x00000200004bb867 : enter 0xf41, -0x4a ; add ecx, dword ptr [rcx - 1] ; ret
0x00000200004f0cbf : enter 0xf41, -0x4a ; ret 0x420f
0x00000200000ac3c8 : enter 0xf41, -0x4a ; ret 0x440f
0x0000020000157eaa : enter 0xf44, -0x49 ; fisttp word ptr [rax - 0x7d] ; ret 0x8320
0x0000020000174cfd : enter 0xf44, -0x49 ; ret 0x4166
0x0000020000584cd5 : enter 0xf44, 0x20 ; ret
0x000002000058ffbf : enter 0xf45, -0x51 ; fld dword ptr [rcx - 0x75] ; ret
0x00000200000c78a7 : enter 0xf48, -0x3d ; ror byte ptr [r8 + 0xf], 1 ; ret
0x000002000003d5fd : enter 0xf48, 0x43 ; enter 0x18a, -1 ; ret 0x9489
0x00000200001a5179 : enter 0xf4c, 0x42 ; ret 0xff41
0x00000200001e5929 : enter 0xff0, -0x4f ; or eax, 0xb9b86 ; ret
0x00000200006129d6 : enter 0xfff, -0x4a ; ret
0x000002000061932e : enter 1, 0 ; add cl, byte ptr [rdi] ; test ebx, ebp ; ret 0xffdd
0x00000200000df936 : enter 1, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001de07 : enter 1, 0 ; add rsp, 0x28 ; ret
0x00000200000517b3 : enter 1, 0 ; ret
0x000002000064e9a4 : enter 1, 0x48 ; add esp, 0x28 ; ret
0x0000020000398f02 : enter 1, 0x48 ; add esp, 0x48 ; ret
0x000002000047c117 : enter 2, 0 ; call 0x200000a3957
0x0000020000051f93 : enter 3, 0 ; ret
0x000002000005eab3 : enter 4, 0 ; ret
0x0000020000574c70 : enter 5, 0 ; jbe 0x20000574c64 ; xor eax, eax ; ret
0x0000020000593990 : fadd dword ptr [r11] ; ret
0x00000200001b902c : fadd dword ptr [r13 - 0x75] ; ret 0x6e8
0x00000200001b9084 : fadd dword ptr [r13 - 0x75] ; ret 0xa2e8
0x000002000045f45e : fadd dword ptr [r15 + rcx - 0x4a] ; ret
0x00000200005cf3ba : fadd dword ptr [r9 - 0x75] ; ret
0x000002000047182f : fadd dword ptr [rax + rax] ; add dh, dh ; ret
0x000002000010479a : fadd dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000001a904 : fadd dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200000f6125 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov dl, 1 ; call qword ptr [r11]
0x00000200001c8220 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rcx, r10 ; call r10
0x00000200003fc95a : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004d40e1 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000102c16 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000069b9c4 : fadd dword ptr [rax] ; add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x0000020000610e83 : fadd dword ptr [rbp + 0x23] ; fadd qword ptr [rcx + 0x33] ; ret
0x00000200004f12f0 : fadd dword ptr [rbp + 0x34880fc0] ; ret 0xf
0x00000200003bae79 : fadd dword ptr [rbp + 0x48880fc0] ; ret 0xd
0x00000200005998d5 : fadd dword ptr [rbp - 0x16be8640] ; ret 0
0x0000020000637180 : fadd dword ptr [rbp - 0x741a8b40] ; add eax, dword ptr [rcx + 0x33] ; ret
0x00000200005ba234 : fadd dword ptr [rbp - 0x743d8a40] ; ret
0x00000200004fefee : fadd dword ptr [rbp - 0x74578a40] ; ret
0x00000200004f1554 : fadd dword ptr [rbp - 0x74d58640] ; ret
0x0000020000124f1d : fadd dword ptr [rbp - 0x75] ; ret
0x00000200001b902d : fadd dword ptr [rbp - 0x75] ; ret 0x6e8
0x00000200001b9085 : fadd dword ptr [rbp - 0x75] ; ret 0xa2e8
0x00000200005f5d70 : fadd dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0xdb63
0x000002000003a924 : fadd dword ptr [rbx + rcx*4 + 0x44] ; ret 0x4504
0x0000020000593991 : fadd dword ptr [rbx] ; ret
0x00000200001f188b : fadd dword ptr [rbx] ; ret 0x4589
0x00000200003d2893 : fadd dword ptr [rcx + 0x3b] ; ret
0x00000200000a90ae : fadd dword ptr [rcx + 0xf] ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret
0x00000200000274ce : fadd dword ptr [rcx - 0x75] ; ret
0x00000200000f14e3 : fadd dword ptr [rcx - 0x75] ; ret 0x13e9
0x000002000047b15b : fadd dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200001875c3 : fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200004969a2 : fadd dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000060d95 : fadd dword ptr [rcx - 0x75] ; ret 0xe8eb
0x00000200001ab743 : fadd dword ptr [rcx - 0x7c] ; sal dword ptr [rsi + rax + 0x48], -0x7d ; ret 0xebf0
0x0000020000382d18 : fadd dword ptr [rcx - 0xa] ; ret
0x00000200004a8c4c : fadd dword ptr [rcx - 0xfff1d] ; jg 0x200004a8c8f ; ret
0x0000020000417b82 : fadd dword ptr [rcx - 1] ; ret
0x0000020000132545 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000064ee34 : fadd dword ptr [rcx] ; ret 0xebff
0x00000200000f05f8 : fadd dword ptr [rdi + rcx + 0x20] ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200001b691a : fadd dword ptr [rdi + rcx + 0x42] ; ret
0x0000020000124f19 : fadd dword ptr [rdi + rcx + 0x4c] ; fadd dword ptr [rbp - 0x75] ; ret
0x000002000045f45f : fadd dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000498fd1 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000049b8d : fadd qword ptr [r9 + 0x3b] ; ret 0x830f
0x00000200005824de : fadd qword ptr [rbp + 0xf] ; fild word ptr [rcx + 0x3b] ; ret
0x00000200003f3bd0 : fadd qword ptr [rbx] ; ret
0x0000020000610e86 : fadd qword ptr [rcx + 0x33] ; ret
0x0000020000049b8e : fadd qword ptr [rcx + 0x3b] ; ret 0x830f
0x0000020000590343 : fadd qword ptr [rdx + rcx*4 - 0x35] ; call 0x2000019c576
0x00000200001d3de0 : fadd qword ptr [rdx] ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x45c0
0x000002000009f43e : fadd qword ptr [rsi + rax + 0x46058678] ; ret 0x43ef
0x0000020000191449 : fadd st(1), st(0) ; call 0x20074db4e6d
0x0000020000483090 : fadd st(1), st(0) ; ret
0x0000020000002ffb : faddp st(0) ; fidiv word ptr [rip + 0x28c48348] ; ret
0x000002000008f53b : faddp st(5) ; ret 0xd4f
0x0000020000139d10 : fbld dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000048d808 : fbstp dword ptr [r11] ; shr al, cl ; call qword ptr [rdi]
0x000002000017530f : fbstp dword ptr [rax + rsi*2 - 0xa] ; ret
0x00000200003a1602 : fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000015a245 : fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000048d809 : fbstp dword ptr [rbx] ; shr al, cl ; call qword ptr [rdi]
0x000002000008edd2 : fbstp dword ptr [rcx + 0x32188b65] ; ret
0x00000200006047d3 : fbstp dword ptr [rcx + rdx - 0xa] ; ret
0x00000200005fb398 : fbstp dword ptr [rdx + rcx - 0xa] ; ret
0x000002000057b8ca : fcmovbe st(0), st(1) ; push rsi ; ret
0x0000020000491c92 : fcmovbe st(0), st(5) ; ret 0x48ff
0x00000200001e8133 : fcmovnb st(0), st(3) ; cmc ; dec esp ; xor ebx, ebx ; jmp 0x20000144429
0x000002000057b776 : fcmovnbe st(0), st(1) ; push rsi ; ret
0x000002000016b9c7 : fcom dword ptr [r15] ; add dh, dh ; ret
0x00000200003f2dd4 : fcom dword ptr [rcx] ; ret
0x000002000016b9c8 : fcom dword ptr [rdi] ; add dh, dh ; ret
0x000002000057b6b5 : fcom st(0), st(1) ; push rsi ; ret
0x0000020000631a30 : fcom st(0), st(5) ; ret
0x0000020000632c25 : fcom st(0), st(6) ; dec dword ptr [rax - 0x7d] ; ret
0x000002000057ba83 : fcom st(1) ; jmp qword ptr [rbx]
0x000002000057bada : fcom st(1) ; push rsi ; ret
0x0000020000140af5 : fcomi st(3) ; ret
0x000002000013c20d : fcomi st(6) ; rol dword ptr [rcx], 0x75 ; salc ; xor eax, eax ; ret
0x00000200005ba1a1 : fcomi st(7) ; ret 0
0x00000200003bcf80 : fcomi st(7) ; ret 0xffff
0x00000200000808b8 : fcomp dword ptr [r10] ; ret 0xa54d
0x00000200003f26d4 : fcomp dword ptr [rax] ; ret
0x00000200005b1fc1 : fcomp dword ptr [rbx] ; jmp qword ptr [rbx]
0x00000200001f11d5 : fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x00000200004ff77e : fcomp dword ptr [rcx - 0x49f0fff0] ; ret
0x00000200004b9035 : fcomp dword ptr [rdx] ; leave ; and dl, cl ; mov al, dl ; ret
0x00000200000808b9 : fcomp dword ptr [rdx] ; ret 0xa54d
0x0000020000026b65 : fcomp qword ptr [rax + rax] ; mov r8, r15 ; mov rcx, rbx ; call rax
0x000002000054bc91 : fcomp st(0) ; push rsi ; ret
0x000002000057b484 : fcomp st(0), st(1) ; push rsi ; ret
0x000002000019ed49 : fcompi st(3) ; ret
0x000002000016e039 : fcompi st(7) ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b44
0x0000020000556b15 : fcompi st(7) ; ret
0x0000020000548aad : fcos ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004f0858 : fcos ; call 0x2000011f951
0x00000200004f5d2f : fcos ; call 0x2000011f9a5
0x00000200004f5d2e : fcos ; call 0x2000011f9a6
0x00000200004e452d : fcos ; ret
0x00000200004815e6 : fcos ; ret 0x1b9
0x00000200004f937b : fcos ; test r11, r11 ; je 0x200004f938d ; call r11
0x00000200004f937a : fcos ; test r11, r11 ; je 0x200004f938e ; call r11
0x0000020000521aa1 : fdecstp ; ret 0x7404
0x0000020000422918 : fdecstp ; ret 0x7520
0x0000020000421b3b : fdiv dword ptr [rbp + 7] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000190098 : fdiv dword ptr [rbp + rcx - 0xa] ; ret
0x000002000056784d : fdiv dword ptr [rbp - 0x3e] ; jmp 0x200005678bd
0x00000200001c1313 : fdiv dword ptr [rcx + rdx - 0xa] ; ret
0x00000200005f0a78 : fdiv dword ptr [rcx - 0x49f00059] ; ret
0x00000200004dd614 : fdiv dword ptr [rip - 0x74b7ffef] ; ret 0x8b48
0x000002000056cc13 : fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x0000020000409782 : fdiv st(4) ; dec dword ptr [rax + 0x3b] ; ret
0x00000200000637c6 : fdiv st(6) ; ret
0x000002000060515e : fdiv st(6) ; ret 0x7404
0x0000020000615752 : fdiv st(6) ; ret 0x7420
0x000002000036932b : fdiv st(6), st(0) ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000650811 : fdiv st(7) ; ret
0x00000200004a64b3 : fdiv st(7), st(0) ; add rsp, 0x28 ; ret
0x00000200005736bd : fdiv st(7), st(0) ; ret 0x8348
0x00000200004b5a67 : fdiv st(7), st(0) ; test rax, rax ; je 0x200004b5a77 ; call rax
0x00000200001413ea : fdivp st(5) ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200004e1f73 : fdivp st(7) ; add rsp, 0x28 ; ret
0x000002000036d60c : fdivp st(7) ; add rsp, 0x38 ; ret
0x00000200004ad07e : fdivp st(7) ; call 0x200000392b8
0x00000200004b1fa2 : fdivp st(7) ; ret
0x00000200004b4cdc : fdivp st(7) ; test al, 3 ; sete al ; ret
0x00000200004b3518 : fdivp st(7) ; test rax, rax ; je 0x200004b3528 ; call rax
0x00000200004b37dd : fdivp st(7) ; test rax, rax ; je 0x200004b37ed ; call rax
0x00000200004b37dc : fdivp st(7) ; test rax, rax ; je 0x200004b37ee ; call rax
0x000002000057e764 : fdivp st(7) ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036def4 : fdivp st(7) ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200005dfdae : fdivp st(7) ; xor edx, edx ; mov rcx, rbx ; call 0x2000043c049
0x0000020000669988 : fdivr dword ptr [rax + 0x1d89ffff] ; ret 0xe9ff
0x000002000051fc92 : fdivr dword ptr [rax + 0x3b41fff8] ; ret
0x0000020000189b3f : fdivr dword ptr [rbp + 0x2c] ; jmp 0x20000189b7b
0x000002000000e7d8 : fdivr dword ptr [rbx] ; ret
0x0000020000429bd8 : fdivr dword ptr [rbx] ; ret 0x2475
0x00000200001f0942 : fdivr dword ptr [rbx] ; ret 0x375
0x0000020000194475 : fdivr dword ptr [rbx] ; ret 0x470f
0x00000200005e7610 : fdivr dword ptr [rbx] ; ret 0x774
0x00000200006ea593 : fdivr dword ptr [rdi + 0x158d48ff] ; ret
0x000002000013ac27 : fdivr qword ptr [rax + 0x48000015] ; add esp, 0x28 ; ret
0x000002000070fbfb : fdivr qword ptr [rbp + rdi*8 + 0x3705c7ff] ; jne 0x2000070fbd1 ; call qword ptr [rax]
0x000002000066a378 : fdivr qword ptr [rbx] ; ret 0x4cff
0x00000200003e1b35 : fdivr qword ptr [rdi - 0x3fffff84] ; jmp 0x200003e1ade
0x00000200004b71d3 : fdivr qword ptr [rsi - 0x3b7cb701] ; jo 0x200004b723e ; ret
0x000002000013e761 : fdivr st(2) ; inc dword ptr [rax + rax*8 - 0x7eb6ec8c] ; ret 0x1000
0x00000200004fe3dc : fdivr st(7) ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e446f : fdivr st(7) ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200004f4918 : fdivr st(7) ; jne 0x200006080cf ; ret
0x00000200004e82ed : fdivr st(7) ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000370564 : fdivr st(7) ; nop ; jmp 0x2000035d06f
0x0000020000371c9e : fdivr st(7) ; nop ; jmp 0x20000360103
0x0000020000073533 : fdivr st(7) ; ret
0x00000200004c7cf0 : fdivr st(7) ; ret 0xe2c1
0x0000020000569a49 : fdivr st(7) ; xor eax, eax ; ret
0x00000200004148a5 : fdivr st(7), st(0) ; ret
0x00000200004abcf4 : fdivr st(7), st(0) ; sal esi, cl ; ret
0x00000200001362de : fdivrp st(3) ; ret
0x00000200004d4d85 : fdivrp st(6) ; ret 0x7401
0x0000020000083850 : ffree st(4) ; out dx, eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x000002000010d3f7 : fiadd dword ptr [rbx - 0x7bf0fd17] ; ret
0x000002000036eb7b : fiadd dword ptr [rbx] ; ret 0x3b41
0x00000200000abbbb : fiadd dword ptr [rcx - 0x75] ; ret
0x0000020000700275 : fiadd dword ptr [rcx - 0x75] ; ret 0x8b4c
0x00000200003da1bf : fiadd dword ptr [rcx - 0x75] ; ret 0xc141
0x00000200004664e1 : fiadd dword ptr [rcx - 1] ; ret
0x0000020000665bb6 : fiadd dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x00000200006ec7ab : fiadd word ptr [rbp + 0x3b] ; ret 0xf41
0x0000020000024287 : fiadd word ptr [rcx - 0x75] ; ret
0x00000200000c595a : fiadd word ptr [rcx - 9] ; sal edi, cl ; rol byte ptr [rcx + 0x23], 1 ; ret
0x00000200006679ee : fiadd word ptr [rsi - 0x9be003e] ; ret
0x00000200001170ca : ficom word ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001ce130 : ficomp dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x1ba
0x000002000064c9cc : ficomp dword ptr [rbx] ; leave ; and eax, ecx ; ret
0x00000200001dd4aa : ficomp word ptr [rbp - 0x1d] ; push rsi ; ret 0x7410
0x0000020000085dee : ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x0000020000154f0d : fidiv dword ptr [rbx + 0x2a] ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000154f35
0x00000200001113a2 : fidiv dword ptr [rbx] ; ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000003fcc7 : fidiv dword ptr [rdx + rax + 0xa] ; ret 0xc184
0x000002000038c66c : fidiv word ptr [rbx] ; rol byte ptr [rdi + rax*4 + 0x1d], 0x4a ; ret
0x0000020000576d8a : fidiv word ptr [rdi] ; ret 0x8bff
0x0000020000002ffd : fidiv word ptr [rip + 0x28c48348] ; ret
0x0000020000040d3c : fidiv word ptr [rsi + rdi*8 + 0x200f44ff] ; ret 0x8948
0x0000020000481632 : fidivr dword ptr [rcx] ; ret
0x00000200005ba789 : fidivr word ptr [rax + 1] ; ret
0x000002000010b0dc : fild dword ptr [rax + 0x42] ; str word ptr [rax - 0x75] ; ret
0x000002000010b1d5 : fild dword ptr [rax + 0x42] ; str word ptr [rcx - 0x75] ; ret
0x0000020000642647 : fild dword ptr [rax + rax] ; add rsp, 0x48 ; ret
0x000002000058ad48 : fild dword ptr [rbp + 0x2b] ; ret
0x000002000047d6cf : fild dword ptr [rbp + 0x33] ; jmp qword ptr [rcx]
0x000002000015bcae : fild dword ptr [rbp + 0x33] ; rol byte ptr [rcx + 0x3b], cl ; ret
0x0000020000199cf7 : fild dword ptr [rbp + 0x3b] ; ret 0x3875
0x00000200004d82ea : fild dword ptr [rbp - 0x73] ; push rcx ; add dword ptr [rcx - 0x75], eax ; ret
0x000002000012f833 : fild dword ptr [rbp - 0x74fb8725] ; ret
0x00000200000bccf3 : fild dword ptr [rbp - 0x75] ; ret
0x00000200001a6ffb : fild dword ptr [rbp - 0x7c] ; ret
0x000002000062a0ac : fild dword ptr [rbx - 0x61f0f808] ; ret
0x00000200004148a1 : fild dword ptr [rcx + 0xf] ; fdivr st(7), st(0) ; ret
0x00000200005c8a5c : fild dword ptr [rcx + 0xf] ; ret
0x00000200001ab20d : fild dword ptr [rcx + 0xf] ; xchg eax, edi ; ret 0x3eb
0x00000200004928a6 : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000002000016d042 : fild dword ptr [rcx - 0x75] ; ret
0x000002000045e62d : fild dword ptr [rcx - 0x75] ; ret 0xe083
0x000002000008374a : fild dword ptr [rcx] ; ret
0x000002000016d03e : fild dword ptr [rdi + rcx + 0x42] ; fild dword ptr [rcx - 0x75] ; ret
0x00000200004c31c3 : fild dword ptr [rdi + rcx - 0x49] ; ret
0x0000020000642646 : fild dword ptr es:[rax + rax] ; add rsp, 0x48 ; ret
0x0000020000083749 : fild dword ptr gs:[rcx] ; ret
0x00000200004e1ef9 : fild word ptr [rax] ; add byte ptr [rax], al ; call 0x20000105b7b
0x0000020000471029 : fild word ptr [rbp - 0x74e88725] ; ret
0x00000200005824e2 : fild word ptr [rcx + 0x3b] ; ret
0x00000200004b1f40 : fild word ptr [rcx - 0x75] ; ret
0x000002000015682b : fild word ptr [rcx - 0x7d] ; call 0x1ffb724a943
0x0000020000043a55 : fild word ptr [rcx - 1] ; ret 0xd233
0x00000200000910fa : fild word ptr [rcx - 2] ; ret 0xb87
0x000002000016ba35 : fild word ptr [rdi + rcx + 0x44] ; fimul dword ptr [rbx] ; ret
0x00000200005a8120 : fild word ptr [rdi + rcx - 0x49] ; fadd dword ptr [rcx - 1] ; ret
0x0000020000704569 : fild word ptr [rdi + rcx - 0x4a] ; ret
0x0000020000162081 : fimul dword ptr [r10 - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001f25a8 : fimul dword ptr [rax - 0x3f] ; call 0x1ffc2426db9
0x00000200001ab709 : fimul dword ptr [rax - 0x3f] ; sti ; add cl, byte ptr [rax - 0x75] ; ret
0x000002000002e141 : fimul dword ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000178b1c : fimul dword ptr [rax - 0x49f027bb] ; ret
0x0000020000526677 : fimul dword ptr [rax - 0x75] ; int1 ; call 0x20000152e17
0x00000200000ec938 : fimul dword ptr [rax - 0x75] ; ret 0x49f0
0x00000200000191cc : fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000420325 : fimul dword ptr [rax - 0x7d] ; ret
0x00000200000349ec : fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x000002000046cf71 : fimul dword ptr [rax - 1] ; ret
0x0000020000131d91 : fimul dword ptr [rbp - 0x73] ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x000002000019742e : fimul dword ptr [rbp - 0x75] ; add cl, byte ptr [rbp + 0x3b] ; ret 0x3c74
0x000002000002b0b3 : fimul dword ptr [rbp - 0x75] ; ret
0x00000200000413f7 : fimul dword ptr [rbx + 0xbe8d1c3] ; ret
0x000002000016ba39 : fimul dword ptr [rbx] ; ret
0x000002000014c9d6 : fimul dword ptr [rcx - 0x3f] ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000001e7ea : fimul dword ptr [rcx - 0x7d] ; ret 0x4104
0x0000020000708921 : fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x000002000000956b : fimul dword ptr [rcx - 1] ; ret 0xc2ff
0x000002000066588b : fimul dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; pop rcx ; add al, 0x83 ; ret
0x00000200003f6299 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000da9ec : fimul dword ptr [rdi] ; xor dword ptr [rcx + 1], 0 ; add dh, bh ; ret 0x5788
0x0000020000389010 : fimul dword ptr [rdx + 0x25] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000162082 : fimul dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000008dc45 : fimul word ptr [r15 - 0x7f] ; jmp qword ptr [rdx]
0x000002000004d636 : fimul word ptr [r8 - 0x75] ; ret
0x00000200006d9268 : fimul word ptr [rax + 0xb] ; ret 0x8b48
0x000002000004d637 : fimul word ptr [rax - 0x75] ; ret
0x0000020000643ad6 : fimul word ptr [rax - 0x7d] ; ret
0x000002000046dc41 : fimul word ptr [rax - 1] ; ret
0x00000200000e9764 : fimul word ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000bc3a9 : fimul word ptr [rax - 9] ; ret
0x00000200006d5436 : fimul word ptr [rbp + 3] ; ret
0x00000200006d6b63 : fimul word ptr [rbp + 3] ; ret 0x34c
0x000002000053d94e : fimul word ptr [rbx] ; ret 0x4dff
0x00000200003ce5e0 : fimul word ptr [rcx + 0x2b] ; fmul dword ptr [rax - 0x7d] ; ret
0x00000200006f5209 : fimul word ptr [rcx + 0x73894c3b] ; or byte ptr [rax - 0x75], cl ; ret
0x00000200006ce815 : fimul word ptr [rcx - 0x7f] ; ret
0x00000200006d0185 : fimul word ptr [rcx - 9] ; ret
0x00000200000905b8 : fimul word ptr [rdi + 0x33] ; pop r10 ; and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000008dc46 : fimul word ptr [rdi - 0x7f] ; jmp qword ptr [rdx]
0x00000200003e83e0 : fimul word ptr [rdi] ; test dword ptr [rdi - 0x9fffff8], ecx ; ret
0x00000200006437d4 : fimul word ptr [rdi] ; test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000056994b : fincstp ; ret 0xfffe
0x0000020000143c00 : fist dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000008c9d : fist dword ptr [rcx + 6] ; add bh, bh ; ret
0x00000200001f1501 : fistp dword ptr [rax - 0x7cfffffe] ; ret
0x0000020000471cf1 : fistp dword ptr [rbp - 0x3b] ; push rsi ; ret
0x00000200000de1d3 : fistp qword ptr [rax + 1] ; ret
0x00000200003e6e30 : fistp qword ptr [rax - 0x3fffffde] ; ret
0x00000200003df82f : fistp qword ptr [rcx - 0x9beffde] ; ret
0x00000200006d0cd6 : fistp qword ptr [rdi + rdi*8 + 0x20c48348] ; pop rdi ; ret
0x000002000002b197 : fistp qword ptr [rdx + rbx - 0x7449f100] ; ret 0
0x00000200003aebe5 : fistp qword ptr [rdx] ; add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x000002000054c179 : fistp word ptr [rdi] ; ret 0xebff
0x0000020000468847 : fistp word ptr [rdx] ; add byte ptr [rcx - 0x73], cl ; or byte ptr [r8 - 0x7d], cl ; ret 0xe808
0x00000200004341a9 : fisttp dword ptr [rax + 0x63] ; ret
0x00000200000ca515 : fisttp dword ptr [rax + 3] ; ret 0x3d48
0x00000200003efa30 : fisttp dword ptr [rax + rax] ; xor edx, edx ; jmp 0x200003ebcd0
0x000002000049d00d : fisttp dword ptr [rax - 0x75] ; iretd ; call 0x200000bf2c7
0x00000200001b3578 : fisttp dword ptr [rax - 0x75] ; je 0x200001b35a9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003c4c49 : fisttp dword ptr [rax - 0x75] ; push -0x74c776b8 ; ret
0x000002000006af2b : fisttp dword ptr [rax - 0x75] ; ret
0x00000200003b3274 : fisttp dword ptr [rax - 0x75] ; ret 0x8948
0x0000020000641b9b : fisttp dword ptr [rax - 0x75dedba4] ; ret
0x0000020000641c7f : fisttp dword ptr [rax - 0x75dfdba4] ; ret
0x00000200005b4986 : fisttp dword ptr [rax - 0x7d] ; ret
0x000002000004af9d : fisttp dword ptr [rax - 9] ; ret
0x000002000070d855 : fisttp dword ptr [rbp + 0x63] ; ret
0x0000020000020e72 : fisttp dword ptr [rbp - 0x75] ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200003ae2b4 : fisttp dword ptr [rbx + 0x358d48f9] ; ret 0xfa99
0x00000200006d859b : fisttp dword ptr [rbx + 0x3a8be] ; add byte ptr [rbp - 0x75], al ; ret
0x00000200003deb68 : fisttp dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000431fb4 : fisttp dword ptr [rbx - 0x3ef00f3d] ; adc al, 3 ; ret
0x000002000009f70a : fisttp dword ptr [rbx - 0xc374dca] ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x00000200005d3e1b : fisttp dword ptr [rcx + 0x6348205d] ; ret
0x00000200001f723d : fisttp dword ptr [rcx + rdi + 0x52] ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200005ba998 : fisttp dword ptr [rcx - 0x74dfdba4] ; ret
0x000002000055210b : fisttp dword ptr [rcx - 0x75] ; jmp 0x2004917ac61
0x00000200001f5bd8 : fisttp dword ptr [rcx - 0x7d] ; rcl dword ptr [rcx + rax*2], -0x75 ; ret
0x00000200003a6eeb : fisttp dword ptr [rcx - 0x7d] ; ret
0x00000200004c69b9 : fisttp dword ptr [rdi] ; cdq ; ret 0x6ee8
0x00000200004a5a32 : fisttp dword ptr [rdi] ; cdq ; ret 0x8b48
0x00000200004753a2 : fisttp dword ptr [rdi] ; mov byte ptr [rbp - 0x74ffe8f9], al ; ret
0x0000020000386728 : fisttp dword ptr [rdi] ; mov byte ptr [rbx - 0x74ffee6b], dl ; ret
0x0000020000518adc : fisttp dword ptr [rdi] ; mov byte ptr [rbx - 0x74ffee93], ch ; ret
0x0000020000461a06 : fisttp dword ptr [rdi] ; mov byte ptr [rbx - 0x9fffb8f], ah ; ret
0x00000200003d9e03 : fisttp dword ptr [rdi] ; mov byte ptr [rdx - 0x74ffdf60], al ; ret
0x0000020000432e9b : fisttp dword ptr [rdi] ; mov byte ptr [rdx - 0x74ffffff], cl ; ret
0x00000200006cbebc : fisttp dword ptr [rdi] ; mov dword ptr [rdi + rcx + 4], edi ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000101a17 : fisttp dword ptr [rdi] ; ret
0x0000020000049ec7 : fisttp dword ptr [rdi] ; test byte ptr [rax], al ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000494e16 : fisttp dword ptr [rdi] ; test byte ptr [rcx - 0x7d000000], ch ; ret
0x0000020000175a7c : fisttp dword ptr [rdi] ; test byte ptr [rcx - 0xa000000], al ; ret
0x000002000004b9e3 : fisttp dword ptr [rdi] ; test byte ptr [rdi - 0x75000000], cl ; ret
0x00000200000e1bdd : fisttp dword ptr [rdi] ; test byte ptr [rdx + rax], bl ; add dh, dh ; ret
0x0000020000025ecd : fisttp dword ptr [rdi] ; test byte ptr [rdx], bh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004d4dd5 : fisttp dword ptr [rdi] ; test ch, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret
0x00000200005c064b : fisttp dword ptr [rdi] ; test dword ptr [rax - 0x1000000], eax ; ret
0x0000020000150b52 : fisttp dword ptr [rdi] ; test dword ptr [rax - 0x74000106], edi ; ret
0x00000200000d7ce0 : fisttp dword ptr [rdi] ; test dword ptr [rbp - 0x9ffefeb], edx ; ret
0x00000200004fc9cb : fisttp dword ptr [rdi] ; test dword ptr [rcx - 0x75fff0e1], esp ; ret
0x00000200000133d4 : fisttp dword ptr [rdi] ; test dword ptr [rip - 0x74ffe37a], ebx ; ret
0x00000200003aaeda : fisttp dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x000002000014306d : fisttp qword ptr [r10] ; add bl, dh ; ret
0x00000200005137bd : fisttp qword ptr [r8 - 0x75] ; shr eax, cl ; jmp 0x2004d50facc
0x00000200006d848b : fisttp qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x000002000048d805 : fisttp qword ptr [rax - 0x75] ; fbstp dword ptr [r11] ; shr al, cl ; call qword ptr [rdi]
0x00000200005137be : fisttp qword ptr [rax - 0x75] ; shr eax, cl ; jmp 0x2004d50facb
0x00000200006620a8 : fisttp qword ptr [rax - 0x7d] ; ret
0x00000200006c3e24 : fisttp qword ptr [rax - 0x7f] ; ret 0x600
0x00000200005af26f : fisttp qword ptr [rax - 1] ; ret
0x00000200005af152 : fisttp qword ptr [rax - 1] ; ret 0xdde8
0x00000200000b8a4b : fisttp qword ptr [rcx + 0x2b] ; fmul dword ptr [rax - 9] ; ret
0x0000020000127277 : fisttp qword ptr [rcx - 0x77] ; ret
0x00000200004a4301 : fisttp qword ptr [rcx - 0x7d] ; ret 0x660a
0x00000200006ced5f : fisttp qword ptr [rcx - 0x7f] ; ret
0x000002000019f9a1 : fisttp qword ptr [rdi] ; adc dword ptr [rcx + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006f1cb6 : fisttp qword ptr [rdi] ; ret 0x8b49
0x000002000018430b : fisttp qword ptr [rdi] ; sbb dword ptr [rsi + 0x48000000], -9 ; ret
0x000002000014ab5f : fisttp qword ptr [rdx + 0x15] ; add byte ptr [rax - 0x2f], cl ; call 0x1ffffd772bb
0x000002000014306e : fisttp qword ptr [rdx] ; add bl, dh ; ret
0x0000020000515d65 : fisttp qword ptr [rip - 0x7ae78800] ; ror byte ptr [rdi], 0x9e ; ret
0x000002000059098a : fisttp word ptr [r8 - 0x2f] ; clc ; jmp 0x200005909ca
0x000002000059098b : fisttp word ptr [rax - 0x2f] ; clc ; jmp 0x200005909c9
0x00000200001047e7 : fisttp word ptr [rax - 0x3f] ; call 0x1ffc2339002
0x00000200001b94e1 : fisttp word ptr [rax - 0x75] ; ret
0x0000020000390064 : fisttp word ptr [rax - 0x7d] ; ret
0x0000020000157eae : fisttp word ptr [rax - 0x7d] ; ret 0x8320
0x0000020000365bb0 : fisttp word ptr [rax - 0x7f] ; ret 0xc0
0x00000200004fe949 : fisttp word ptr [rax - 1] ; ret
0x00000200006d7460 : fisttp word ptr [rbp + 3] ; ret 0x34c
0x00000200006645ad : fisttp word ptr [rbx - 0x3ec433eb] ; inc dword ptr [rcx - 1] ; ret 0x8148
0x000002000020d41d : fisttp word ptr [rbx] ; add ah, bh ; ret
0x000002000020d419 : fisttp word ptr [rbx] ; add byte ptr [rdx - 0x21], dl ; or eax, dword ptr [rax] ; cld ; ret
0x000002000005e8e1 : fisttp word ptr [rcx + 0x33] ; ret 0x2349
0x00000200005a57cc : fisttp word ptr [rcx - 0x7d] ; ret 0x4504
0x00000200000d8946 : fisttp word ptr [rdi] ; mov dh, 0x4c ; pop rdi ; add al, 0x8b ; ret
0x0000020000032a1f : fisttp word ptr [rdi] ; ret
0x000002000039bf7f : fisttp word ptr [rdi] ; test dword ptr [rdx - 0x74ffdaa1], edi ; ret
0x000002000008e861 : fisttp word ptr [rdx + 0x41] ; ret 0xda8
0x000002000008e059 : fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x0000020000025412 : fisub dword ptr [rdx + 0x1c] ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000091d1b : fisub dword ptr [rdx] ; ret 0x3997
0x0000020000091d1a : fisub dword ptr gs:[rdx] ; ret 0x3997
0x0000020000377c5e : fisub word ptr [rbx - 0x74b7002e] ; ret
0x0000020000120f6e : fisub word ptr [rcx] ; lock inc dword ptr [rcx + 0x3b] ; ret
0x00000200005e7a1e : fisubr dword ptr [rbx - 0x11] ; jmp qword ptr [rcx]
0x0000020000005123 : fld dword ptr [rax - 0x49] ; add dword ptr [rbp - 0x75], eax ; ret 0x3944
0x0000020000020a2e : fld dword ptr [rbp + 0x78850fc0] ; ret 0x1d
0x000002000047707a : fld dword ptr [rbp + rcx*4 + 0x42] ; pop rax ; call 0x200000a3958
0x0000020000640723 : fld dword ptr [rbx + r9*4 - 0x3b] ; call 0x20000270048
0x0000020000640724 : fld dword ptr [rbx + rcx*4 - 0x3b] ; call 0x20000270047
0x00000200003ca27b : fld dword ptr [rbx - 0x70f0be05] ; ret
0x00000200004fe26e : fld dword ptr [rcx + 0xf] ; ret
0x00000200000aba04 : fld dword ptr [rcx - 0x75] ; ret
0x000002000049ef93 : fld dword ptr [rdx] ; ret 0x66ff
0x0000020000037499 : fld qword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000008428b : fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x00000200001a31cf : fld qword ptr [rax] ; add byte ptr [rax], al ; cmp rax, rdx ; jmp 0x200001a3206
0x0000020000665bba : fld qword ptr [rcx - 0x75] ; ret
0x00000200003be55f : fld qword ptr [rcx - 1] ; ret 0x8944
0x000002000038574e : fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x00000200000476e7 : fld st(1) ; call 0x20075c6b1f9
0x0000020000642dee : fld xword ptr [rbx] ; ret 0x2579
0x0000020000576d88 : fld1 ; fidiv word ptr [rdi] ; ret 0x8bff
0x000002000010d8f7 : fld1 ; mov bh, 0xd ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003d0837 : fld1 ; ret
0x000002000015a788 : fld1 ; ret 0xf491
0x00000200005a7724 : fld1 ; ret 0xffaf
0x0000020000085dea : fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x000002000003ab71 : fldcw word ptr [rbx] ; ret 0x2b41
0x000002000007c9a0 : fldcw word ptr [rcx] ; ret
0x000002000005462f : fldcw word ptr [rcx] ; xor byte ptr [rax], al ; mov dword ptr [rcx + 0x2c], eax ; ret
0x00000200000907d5 : fldenv dword ptr [rdi + 0x49] ; ret
0x00000200000218ba : fldenv dword ptr [rdi] ; add byte ptr [rbx], al ; ret
0x00000200001688e2 : fldenv dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret
0x000002000062a603 : fldenv dword ptr [rdx - 0x3a] ; push rsi ; ret
0x00000200003d2b59 : fldenv dword ptr [rdx] ; add byte ptr [rcx - 0x75], al ; adc dh, bh ; ret 0xfff
0x000002000008e2ca : fldenv dword ptr [rdx] ; lahf ; mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x000002000048cf93 : fldenv dword ptr [rdx] ; ret
0x0000020000149dc3 : fldenv dword ptr [rip - 0x74bb0013] ; rol byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x0000020000117383 : fldl2t ; cmc ; dec dword ptr [rax + 0xf] ; ret 0xd7eb
0x00000200004173e3 : fldz ; ret
0x00000200001bc182 : fmul dword ptr [r11 - 0x74ba3bbb] ; ret 0x4589
0x00000200001706a8 : fmul dword ptr [r13 - 0x73] ; fmul dword ptr [r8 - 0x75] ; ret 0x894d
0x0000020000532cdc : fmul dword ptr [r15] ; mov dh, 0x17 ; call 0x2000040ef67
0x00000200000c78b0 : fmul dword ptr [r8 + 0xf] ; ret
0x00000200005a6a14 : fmul dword ptr [r8 - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200001706ac : fmul dword ptr [r8 - 0x75] ; ret 0x894d
0x0000020000701a0b : fmul dword ptr [r8 - 0x77] ; pop rbp ; in al, 0x41 ; call qword ptr [rsi]
0x00000200005737fd : fmul dword ptr [r8 - 0x7b] ; sal byte ptr [rbp + 5], 0x83 ; ret
0x00000200001ec7bf : fmul dword ptr [r8 - 0x7f] ; ret 0x108
0x0000020000154673 : fmul dword ptr [rax + 0x1b] ; ror byte ptr [rax + 0x23], 0xc1 ; ret
0x0000020000030c71 : fmul dword ptr [rax + 0x63] ; ret
0x000002000058e974 : fmul dword ptr [rax + 0x63] ; ret 0x8b4c
0x00000200000a3a16 : fmul dword ptr [rax + 0xf] ; ret
0x0000020000127608 : fmul dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b42
0x0000020000144962 : fmul dword ptr [rax - 0x2d] ; ret
0x00000200005a6a15 : fmul dword ptr [rax - 0x73] ; rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200006ec48c : fmul dword ptr [rax - 0x73] ; shr r8b, 0xda ; ret
0x00000200003c917d : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200006436d1 : fmul dword ptr [rax - 0x75] ; je 0x20000643702 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006436d0 : fmul dword ptr [rax - 0x75] ; je 0x20000643703 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004bb1b5 : fmul dword ptr [rax - 0x75] ; jl 0x200004bb1e7 ; jmp 0x200004bb21f
0x00000200005bbef0 : fmul dword ptr [rax - 0x75] ; or r8b, r13b ; ret 0xebe1
0x00000200004ba3d4 : fmul dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000d171e : fmul dword ptr [rax - 0x75] ; ret
0x000002000045e22e : fmul dword ptr [rax - 0x75] ; ret 0x8948
0x000002000048f0ff : fmul dword ptr [rax - 0x75] ; ret 0x894c
0x00000200001706ad : fmul dword ptr [rax - 0x75] ; ret 0x894d
0x000002000018e9dc : fmul dword ptr [rax - 0x75] ; ret 0x8b4c
0x0000020000037d51 : fmul dword ptr [rax - 0x75] ; ret 0xc984
0x000002000054b1e3 : fmul dword ptr [rax - 0x75] ; ret 0xc985
0x000002000038302d : fmul dword ptr [rax - 0x75] ; sbb dil, dil ; ret 0x86e9
0x0000020000701a0c : fmul dword ptr [rax - 0x77] ; pop rbp ; in al, 0x41 ; call qword ptr [rsi]
0x00000200005c9271 : fmul dword ptr [rax - 0x77] ; ror byte ptr [r8 - 0x73], 0x35 ; ret
0x00000200003c4bd9 : fmul dword ptr [rax - 0x77] ; sbb cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000018e3c9 : fmul dword ptr [rax - 0x7b] ; ret 0xe74
0x00000200004cc3fa : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; call qword ptr [rax]
0x000002000050598f : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000148d42 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004f44b2 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x11ea
0x0000020000065d44 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfa75
0x00000200005737fe : fmul dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 5], 0x83 ; ret
0x0000020000564d87 : fmul dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rax + 0x49], 0x83 ; ret
0x0000020000003fc3 : fmul dword ptr [rax - 0x7d] ; ret
0x0000020000065ebd : fmul dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001ec7c0 : fmul dword ptr [rax - 0x7f] ; ret 0x108
0x000002000062e5ed : fmul dword ptr [rax - 1] ; ret
0x00000200004ec6ea : fmul dword ptr [rax - 1] ; ret 0x8348
0x00000200000b8a4e : fmul dword ptr [rax - 9] ; ret
0x00000200003cdd29 : fmul dword ptr [rax] ; add byte ptr [rbp + 0x33], al ; leave ; jmp 0x200003cdcfa
0x0000020000070ce6 : fmul dword ptr [rbp + rcx*4 + 0x34] ; ret
0x00000200001706a9 : fmul dword ptr [rbp - 0x73] ; fmul dword ptr [r8 - 0x75] ; ret 0x894d
0x000002000019745e : fmul dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x0000020000153f74 : fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x00000200000220e8 : fmul dword ptr [rbp - 0x7b] ; sal byte ptr [rdx + rdx + 0x4c], 0x8b ; ret 0x138b
0x00000200003ebc13 : fmul dword ptr [rbx + 0x5b70ff0] ; ret
0x0000020000052110 : fmul dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001bc183 : fmul dword ptr [rbx - 0x74ba3bbb] ; ret 0x4589
0x0000020000617fe0 : fmul dword ptr [rbx] ; ret 0x8941
0x00000200004f1e5e : fmul dword ptr [rcx + 0x3b] ; ret
0x000002000015f162 : fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x0000020000665dd3 : fmul dword ptr [rcx + 0xf] ; ret
0x00000200005b4794 : fmul dword ptr [rcx + rcx*4 + 0x35] ; insb byte ptr [rdi], dx ; ret 0xffcd
0x00000200003fbe05 : fmul dword ptr [rcx - 0x16cfdbbc] ; jmp qword ptr [rcx]
0x000002000004c00f : fmul dword ptr [rcx - 0x3f] ; cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000014485c : fmul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x75] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200001d64ce : fmul dword ptr [rcx - 0x75] ; ret
0x00000200003f409e : fmul dword ptr [rcx - 0x77] ; pop rsi ; sub byte ptr [rcx - 0x75], al ; ret 0x349
0x0000020000465c96 : fmul dword ptr [rcx - 0x7d] ; ret
0x0000020000021588 : fmul dword ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000151d23 : fmul dword ptr [rcx - 0x7d] ; ret 0xb807
0x00000200003e8747 : fmul dword ptr [rcx - 0x9abdba4] ; ret
0x000002000010065e : fmul dword ptr [rcx - 1] ; ret
0x00000200004aafda : fmul dword ptr [rdi + rcx + 0x4f] ; ret
0x0000020000371557 : fmul dword ptr [rdi] ; and bl, al ; add rsp, 0x28 ; ret
0x0000020000016de5 : fmul dword ptr [rdi] ; and bl, al ; ret
0x00000200000ae139 : fmul dword ptr [rdi] ; mov bh, 5 ; call rsi
0x0000020000532cdd : fmul dword ptr [rdi] ; mov dh, 0x17 ; call 0x2000040ef66
0x00000200000395b6 : fmul dword ptr [rdi] ; ret
0x000002000045ea3e : fmul dword ptr [rdi] ; test eax, esi ; or al, 0 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000046471 : fmul dword ptr [rdi] ; xchg dword ptr [rsi + rdi*8 - 0x74b70001], ecx ; ret
0x000002000058be79 : fmul dword ptr [rdi] ; xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004c0d61 : fmul dword ptr [rip - 0x74bc0000] ; ret
0x0000020000118fda : fmul qword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x000002000013593e : fmul qword ptr [rax + 0x33] ; ret 0x8b49
0x00000200006dc3cf : fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x00000200004c985a : fmul qword ptr [rax - 0x75] ; ret 0xff48
0x00000200006d0290 : fmul qword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000118fdb : fmul qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x00000200000c5e28 : fmul qword ptr [rcx - 0x3f] ; sti ; add ecx, dword ptr [rcx - 1] ; ret
0x00000200006b5685 : fmul qword ptr [rcx] ; imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x000002000054fbca : fmul qword ptr [rdi] ; ret 0x8b48
0x000002000058e207 : fmul qword ptr [rdi] ; xor dword ptr [rcx - 2], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x000002000064286c : fmul st(1) ; ret
0x0000020000638310 : fmul st(2), st(0) ; ret
0x0000020000444424 : fmul st(3) ; ret 0xe9ff
0x000002000001bd7d : fmul st(4) ; nop ; lock dec dword ptr [r8] ; ret
0x0000020000091e96 : fmul st(7) ; popfq ; cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x000002000064e42a : fmulp st(6) ; add dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000007c990 : fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x000002000007c980 : fninit ; ret
0x00000200001810c0 : fnsave dword ptr [rbp + rcx - 0xa] ; ret
0x000002000017c448 : fnsave dword ptr [rcx + rdx - 0xa] ; ret
0x00000200001a4e69 : fnsave dword ptr [rsi + rsi - 0x7f] ; ret
0x0000020000188e7f : fnstcw word ptr [rbx] ; sal dword ptr [rsp + rax + 0x41], 1 ; mov eax, ebx ; ret
0x000002000007c993 : fnstcw word ptr [rcx] ; ret
0x000002000026f5f3 : fnstcw word ptr [rsi + 0xe] ; add byte ptr [rax + 0x33], cl ; ret
0x00000200003c4dad : fnstenv dword ptr [rbp + 6] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001846a8 : fnstenv dword ptr [rbp + rcx - 0xa] ; ret
0x00000200001be865 : fnstenv dword ptr [rbx + 6] ; mov eax, 1 ; ret
0x00000200001f4fac : fnstenv dword ptr [rbx - 0x9be000b] ; ret 0x743f
0x00000200004023b2 : fnstenv dword ptr [rbx] ; ret
0x000002000041ae55 : fnstenv dword ptr [rsp + rcx - 9] ; ret
0x000002000047c0cb : fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x00000200004fe998 : frstor dword ptr [rdx - 0x74b3fff1] ; ret
0x000002000063531c : fsqrt ; ret
0x000002000006433d : fst dword ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000064369 : fst dword ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x8348
0x0000020000064331 : fst dword ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000064319 : fst dword ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x0000020000091bdb : fstp dword ptr [rdx + rcx + 0x10] ; mov ecx, 0x79682177 ; ret
0x00000200000f117b : fstp dword ptr [rdx] ; add byte ptr [rbp - 0x75], al ; ret 0xd233
0x00000200001d1a8f : fstp qword ptr [rcx - 0x447f001d] ; ret
0x00000200003673d3 : fstp qword ptr [rsi + 0xb48fff1] ; ret 0x8b48
0x000002000037c083 : fstp xword ptr [r11] ; ret 0xf74
0x000002000037c084 : fstp xword ptr [rbx] ; ret 0xf74
0x0000020000484343 : fstp xword ptr [rcx + 5] ; add rsp, 0x28 ; ret
0x00000200006f6204 : fstp xword ptr [rcx - 0x3b7cb701] ; pop rbx ; ret
0x0000020000558517 : fstp xword ptr [rcx] ; popfq ; lock add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x000002000008f2ae : fstp xword ptr [rdi + 0x46bcb1d7] ; ret
0x000002000054bb71 : fstpnce st(0), st(0) ; push rsi ; ret
0x0000020000418623 : fstpnce st(6), st(0) ; ret
0x000002000070c384 : fsub dword ptr [rsi + 0xf] ; ret
0x000002000015402c : fsub dword ptr [rsi - 0x77] ; or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x00000200006f04d0 : fsub qword ptr [rax - 0x74bc0000] ; ret
0x000002000020ed1d : fsub qword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret
0x0000020000225c08 : fsub qword ptr [rcx + 0x20] ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bh ; call qword ptr [rax]
0x000002000012ae06 : fsub st(3), st(0) ; add eax, 0x8b085d8b ; ret
0x0000020000578f25 : fsubr dword ptr [rdi + rdi*8 + 0x20c48348] ; pop rbx ; ret
0x00000200004219c4 : fsubr dword ptr [rdi] ; ret
0x0000020000481e74 : fsubr dword ptr [rdi] ; ret 0x4cff
0x000002000048c8c0 : fsubr qword ptr [rdi + 0x1b2ffe4] ; call 0x200000b90e9
0x000002000065bcb8 : fsubr qword ptr [rdx] ; ret 0x48ff
0x0000020000174a98 : fsubr qword ptr [rip - 0x7abc0000] ; ret 0x2274
0x00000200000071c9 : fsubr st(0) ; adc eax, 0xeb000c21 ; sal esi, cl ; ret 0x750e
0x00000200004a58fd : fsubr st(0) ; cmp eax, 0x8bffbcd5 ; ret
0x000002000046a9ee : fsubr st(0) ; jl 0x2000046a97c ; sar bh, 0x8b ; ret
0x000002000062f72a : fsubr st(0) ; loopne 0x2000062f72a ; ret
0x000002000056dfa2 : fsubr st(0) ; mov eax, 0x8bfff73f ; ret
0x00000200001b9ebe : fsubr st(0) ; mov ecx, ss ; hlt ; dec dword ptr [rax - 0x75] ; ret
0x00000200006679fe : fsubr st(0) ; mov esp, 0x8bffae2e ; ret
0x00000200006cd4ee : fsubr st(0) ; mov esp, fs ; xchg eax, ebp ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006cd421 : fsubr st(0) ; pop rcx ; in eax, -0x6b ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000592a68 : fsubr st(0) ; pop rdx ; ret
0x0000020000387e37 : fsubr st(0) ; ret
0x0000020000709e18 : fsubr st(0) ; ret 0x9732
0x0000020000496c18 : fsubr st(0) ; ret 0xbe64
0x0000020000123707 : fsubr st(0) ; ret 0xfff4
0x0000020000654802 : fsubr st(0) ; sar byte ptr [rdi], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000053e0bd : fsubr st(0) ; sbb eax, 0x8bffb3f0 ; ret
0x000002000014aa9d : fsubr st(0) ; sbb eax, 0x8bfffffe ; ret
0x0000020000489069 : fsubr st(0) ; sub eax, 0x8bffef90 ; ret
0x00000200006364bc : fsubr st(0), st(0) ; ret
0x00000200001ee5aa : fsubr st(1) ; cmc ; ret
0x00000200001f7ff8 : fsubr st(1) ; pop rsi ; ret 0xffe3
0x00000200004c32fd : fsubr st(1) ; ret
0x00000200003f55d4 : fsubr st(1) ; ret 0xe9ff
0x00000200004e95ef : fsubr st(1) ; ret 0xecd5
0x0000020000172d6b : fsubr st(3) ; int 0x44
0x00000200005895a5 : fsubr st(3) ; or eax, dword ptr [rdi + rcx - 0x49] ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x00000200004307f2 : fsubr st(3) ; ret 0x8b48
0x000002000010b0c3 : fsubr st(3) ; sub al, 0x33 ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000368c6a : fucomi st(0) ; push rax ; ret
0x00000200000827ba : fucomi st(1) ; add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200004f66c1 : fucomi st(1) ; lahf ; or eax, ebp ; inc dword ptr [rcx - 0xa] ; ret
0x00000200000bf823 : fucomi st(1) ; ret 0xfffb
0x00000200005f6b88 : fucomi st(1) ; xchg eax, ebp ; ret
0x0000020000571bbd : fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000000ebff : fucomi st(3) ; ret
0x00000200004c9d56 : fucomi st(3) ; ret 0x8b48
0x0000020000150fd3 : fucomi st(3) ; sub bh, bh ; ret
0x000002000013198b : fucomp st(3) ; mov cl, byte ptr [rax - 0x75] ; ret
0x00000200001e0dff : fucomp st(3) ; sub bh, bh ; ret
0x000002000026fe4d : fucompi st(0) ; int 0x80
0x000002000042b830 : fucompi st(0) ; outsb dx, byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4dff
0x00000200006f83b7 : fucompi st(0) ; ret
0x00000200000c6b66 : fucompi st(1) ; out dx, al ; idiv edi ; inc dword ptr [rcx - 0xa] ; ret
0x000002000018bb3d : fucompi st(3) ; and edi, edi ; ret
0x0000020000052207 : fucompi st(3) ; leave ; mov eax, 0xc000000d ; ret
0x0000020000196408 : fucompp ; ret 0xfffd
0x0000020000632733 : fxch st(0) ; ret
0x0000020000601209 : fxch st(0), st(1) ; push rsi ; ret
0x00000200005c26cb : fxch st(2) ; jmp qword ptr [rcx]
0x0000020000078a08 : fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x0000020000361008 : hlt ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fd18], al ; ret 0
0x000002000042ccfc : hlt ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x00000200001d9436 : hlt ; add eax, 0x8b48fff0 ; ret
0x0000020000409783 : hlt ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004143da : hlt ; dec dword ptr [rax + 0x3b] ; ret 0x2a77
0x00000200001b9ec2 : hlt ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d7a4e : hlt ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200001d7a2e : hlt ; dec dword ptr [rax - 0x75] ; shr ebx, 1 ; ret 0x8b48
0x000002000014acfe : hlt ; dec dword ptr [rbp - 0x75] ; ret
0x00000200005ba231 : hlt ; dec dword ptr [rbx + 0x75c085d8] ; ret 0xc38b
0x00000200001cc8c7 : hlt ; dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret
0x00000200005d8f62 : hlt ; imul esp, edx, -1 ; mov rcx, rbx ; call 0x200003d5179
0x00000200001e1a8a : hlt ; inc dword ptr [rbp - 0x75] ; out 0xe9, al ; ret
0x00000200001dc90f : hlt ; inc dword ptr [rcx - 0xa] ; rol byte ptr [rcx], 0x74 ; ret 0x8d44
0x00000200000910c5 : hlt ; insd dword ptr [rdi], dx ; push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x00000200003cfba2 : hlt ; jmp 0x1ffb9ffe7ab
0x00000200005d4947 : hlt ; jmp 0x20000505414
0x00000200005ad1c2 : hlt ; lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x00000200004b1f9c : hlt ; mov byte ptr [rip - 0x21efa3], r8b ; ret
0x000002000037ac1d : hlt ; mov eax, 1 ; ret
0x0000020000523e0c : hlt ; mov edx, eax ; mov dword ptr [rbp + 0x38], eax ; call 0x20000270048
0x00000200005d7faf : hlt ; mov esi, 0x8b48ffef ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000aecdc : hlt ; mov rax, r8 ; ret
0x000002000002587f : hlt ; mov rax, rcx ; ret
0x00000200006eab6e : hlt ; mov rax, rdx ; jmp 0x200006eab7d
0x000002000001be98 : hlt ; mov rax, rdx ; ret
0x000002000003ff56 : hlt ; mov rdx, rsi ; call r14
0x0000020000664d52 : hlt ; pop rax ; ret 0xfff
0x000002000047fdfd : hlt ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000043c049
0x00000200001277c0 : hlt ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200001098e7 : hlt ; push rsi ; ret
0x0000020000386b65 : hlt ; push rsi ; ret 0xf02
0x00000200001f5ee5 : hlt ; push rsi ; ret 0xf03
0x000002000004d681 : hlt ; ret
0x0000020000230e18 : hlt ; ret 0x3f
0x00000200003f4acc : hlt ; ret 0x48ff
0x000002000048a44c : hlt ; ret 0x4cff
0x0000020000489692 : hlt ; ret 0x4dff
0x000002000052a4e5 : hlt ; ret 0x85ff
0x0000020000171751 : hlt ; sub dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004672c0 : hlt ; test cl, 0x40 ; jne 0x200004672d1 ; xor al, al ; ret
0x000002000043e442 : hlt ; xchg eax, ebp ; pop rdx ; mov al, 0x54 ; jnp 0x2000043e451 ; ret 0x823c
0x000002000054d7ae : idiv ah ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200003f46b6 : idiv al ; ret 0x48ff
0x0000020000183e2f : idiv bh ; add rsp, 0x28 ; ret
0x0000020000198ac4 : idiv bh ; add rsp, 0x38 ; ret
0x000002000013b160 : idiv bh ; add rsp, 0x40 ; pop rbx ; ret
0x000002000013b456 : idiv bh ; add rsp, 0x48 ; ret
0x0000020000506402 : idiv bh ; add rsp, 0x58 ; ret
0x0000020000143e7d : idiv bh ; add rsp, 0x68 ; ret
0x0000020000141ccc : idiv bh ; add rsp, 0x70 ; pop rbp ; ret
0x00000200003e7146 : idiv bh ; call rax
0x000002000013ccf3 : idiv bh ; cli ; add rsp, 8 ; ret
0x00000200006cfec6 : idiv bh ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x000002000018cfe4 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1372
0x000002000018cfd5 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1e76
0x000002000018d006 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x2372
0x000002000018cfb7 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x3c76
0x000002000018cff3 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x477
0x000002000018d024 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x573
0x000002000018cf9e : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x577
0x000002000018cf82 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xd77
0x000002000018cfc6 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf72
0x000002000018d015 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf73
0x00000200000085cd : idiv bh ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x0000020000435645 : idiv bh ; dec dword ptr [rax - 0x75] ; enter -0xf18, -0x29 ; ret
0x00000200004fadf5 : idiv bh ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200000431aa : idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000046353 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200006c9502 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001826fd : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000547360 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xe904
0x0000020000140fed : idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0x8d41
0x0000020000004477 : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000019ee42 : idiv bh ; inc dword ptr [rax + rax*8 - 0x74b3da8c] ; ret
0x00000200004301b1 : idiv bh ; inc dword ptr [rbx - 0x7af0fb01] ; ret 0xa
0x000002000035faf6 : idiv bh ; je 0x20000370c77 ; ret
0x000002000035fc0e : idiv bh ; je 0x20000370ce2 ; ret
0x00000200001935b6 : idiv bh ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000416fa : idiv bh ; push rsi ; ret
0x00000200001638ca : idiv bh ; ret
0x0000020000665112 : idiv byte ptr [rax - 0x3fffffff] ; ret
0x000002000014eea2 : idiv dword ptr [rax + 1] ; ret
0x00000200005122eb : idiv dword ptr [rax - 0x3ffffff3] ; ret
0x0000020000083340 : idiv dword ptr [rax - 0x52] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005de5c8 : idiv dword ptr [rbx] ; ret
0x000002000040e7df : idiv dword ptr [rbx] ; ret 0x470f
0x00000200000921a6 : idiv dword ptr [rcx + 0x2bf76cb2] ; cdq ; ret
0x000002000066a49d : idiv dword ptr [rdx] ; ret 0x48ff
0x00000200004b5a65 : idiv dword ptr [rsp + rbx*8 - 0x3f7ab701] ; je 0x200004b5a79 ; call rax
0x000002000014ec66 : idiv eax ; ret
0x000002000019ca8c : idiv ecx ; add eax, 0xd800 ; ret
0x000002000019bff0 : idiv ecx ; add eax, r9d ; ret
0x000002000019ca70 : idiv ecx ; lea eax, dword ptr [rdx + 0xdc00] ; ret
0x000002000013f9c4 : idiv ecx ; ret
0x000002000036b8ca : idiv edi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000057e1f8 : idiv edi ; add rsp, 0x28 ; ret
0x000002000015c133 : idiv edi ; add rsp, 0x38 ; ret
0x0000020000105db3 : idiv edi ; add rsp, 0x40 ; pop rbx ; ret
0x000002000015c10c : idiv edi ; add rsp, 0x48 ; ret
0x000002000012a1f0 : idiv edi ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000138d42 : idiv edi ; add rsp, 0x70 ; pop r14 ; ret
0x00000200000a46c5 : idiv edi ; dec dword ptr [rax - 0x75] ; adc dh, dh ; ret
0x00000200000f3787 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000c10c2 : idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x00000200001a5221 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000a8528 : idiv edi ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000447f03 : idiv edi ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000364085 : idiv edi ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000046ecb6 : idiv edi ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000c6b69 : idiv edi ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001cbdba : idiv edi ; jmp 0x20000142a8e
0x000002000016abc0 : idiv edi ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000443b09 : idiv edi ; mov rcx, qword ptr [rbp - 0x29] ; call 0x20000072e49
0x0000020000601385 : idiv edi ; mov rcx, rbx ; call 0x2000004d657
0x00000200001ff199 : idiv edi ; nop ; jmp 0x200000bb3f0
0x00000200005f9b22 : idiv edi ; nop ; jmp 0x200003af9c2
0x00000200005fc83f : idiv edi ; nop ; jmp 0x200003f042d
0x00000200005fc56b : idiv edi ; nop ; jmp 0x20000420827
0x000002000060c1ea : idiv edi ; nop ; jmp 0x2000042849a
0x000002000038105b : idiv edi ; push rax ; inc dword ptr [rax] ; ret
0x0000020000464f8f : idiv edi ; push rbx ; ret
0x00000200000416be : idiv edi ; push rsi ; ret
0x000002000012c2fb : idiv edi ; ret 0x8348
0x000002000014ec65 : idiv r8 ; ret
0x000002000013f9c3 : idiv rcx ; ret
0x00000200005b878a : imul al ; ret
0x0000020000664330 : imul al ; ret 0xffae
0x000002000064a6de : imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x0000020000554220 : imul bl ; ret
0x00000200004fa0d4 : imul byte ptr [rdx + 0xf] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000038f956 : imul ch ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000485367 : imul cl ; ret
0x00000200005d90ee : imul cl ; test eax, 0x8bffde5e ; ret
0x00000200000921ab : imul dword ptr [rbx] ; cdq ; ret
0x000002000063b56d : imul dword ptr [rdx - 0x78f17dba] ; xor al, 0xfc ; ret 0x4c1f
0x00000200004c7937 : imul eax ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000553cf3 : imul eax ; ret
0x000002000065404b : imul eax, dword ptr [rax + 0x48], -0x75 ; ret
0x000002000037a5ff : imul eax, dword ptr [rax + 0x48], -0x7f ; ret
0x000002000063deb7 : imul eax, dword ptr [rax + 0x4c], -0x75 ; ret
0x0000020000648f12 : imul eax, dword ptr [rax + rax], 0x48 ; add esp, 0x68 ; ret
0x00000200006490f5 : imul eax, dword ptr [rax + rax], 0x48c48348 ; ret
0x0000020000649073 : imul eax, dword ptr [rax + rax], 0x68c48348 ; ret
0x00000200004a7b07 : imul eax, dword ptr [rax], 0x3b416600 ; ret
0x000002000003cd69 : imul eax, dword ptr [rbp + 0xf], -0x49 ; rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x00000200000c84a5 : imul eax, dword ptr [rcx], 0x12 ; add byte ptr [rbp - 0x74befeb5], cl ; ret 0x2341
0x00000200001187bd : imul eax, dword ptr [rcx], 0xb70f0000 ; ret 0xe0c1
0x00000200005f1ab6 : imul eax, dword ptr [rcx], 0xc1058d48 ; ret
0x000002000035fba9 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003ccd16 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000585ce2 : imul eax, dword ptr [rdx], 0 ; nop ; add rsp, 0x70 ; pop rbp ; ret
0x000002000035fb85 : imul eax, dword ptr [rdx], 0xb480000 ; ret 0x8949
0x000002000019c977 : imul eax, eax, 0x1c ; add eax, 0xac00 ; ret
0x000002000016919d : imul eax, eax, 0x64 ; mov dword ptr [rip + 0x170a5e], eax ; ret
0x000002000002c83a : imul eax, eax, 0x989680 ; mov qword ptr [rdx], r8 ; ret
0x000002000041dbf4 : imul eax, ecx ; add eax, r9d ; ret
0x00000200003ffe62 : imul eax, ecx ; ret
0x00000200000e99ae : imul eax, ecx ; shr rax, 0x38 ; ret
0x000002000041da7c : imul eax, ecx ; sub eax, r8d ; ret
0x000002000037c8fd : imul eax, ecx ; xor eax, r9d ; ret
0x00000200003fea4b : imul eax, edx ; ret
0x00000200003fea4a : imul eax, r10d ; ret
0x00000200003ffe61 : imul eax, r9d ; ret
0x000002000041db8f : imul eax, r9d ; sub eax, r8d ; ret
0x00000200000041af : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000520ba5 : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000000e0e1 : imul ebp, dword ptr [rbp + 9], 0 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003d8779 : imul ebp, dword ptr [rdx + rbp - 0x3b7cb800], 0x38 ; ret
0x0000020000181d09 : imul ebp, eax, -1 ; add rsp, 0x28 ; ret
0x0000020000371cff : imul ebp, ebx, -2 ; push rsi ; ret
0x00000200001fe4df : imul ebp, edx, 0x8b9090ff ; ret 0x8349
0x000002000009189c : imul ebp, esi, 0x48fca0a ; pop rbp ; ret
0x00000200000d4f87 : imul ebx ; ret 0xa380
0x000002000063549f : imul ebx, dword ptr [rax - 0x5d], 0xd8d48ff ; xchg eax, esi ; ret
0x000002000007714b : imul ebx, dword ptr [rax], 0x10618b48 ; jmp rdx
0x0000020000640420 : imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; ret
0x00000200003b449d : imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000010140b : imul ebx, dword ptr [rsi], 0xf32d7500 ; ret
0x00000200005c7dd5 : imul ebx, eax, 0x45 ; mov eax, ecx ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200001eabd1 : imul ebx, edx, 0xf641ffe1 ; ret
0x00000200004c12a3 : imul ecx ; stosb byte ptr [rdi], al ; ret
0x00000200006bc329 : imul ecx, dword ptr [rax + 0x44], -0x75 ; ret 0xd233
0x00000200006feea6 : imul ecx, dword ptr [rax - 0x73], 0x15 ; ret 0xffc6
0x0000020000705c31 : imul ecx, dword ptr [rax], 0xa ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003badf9 : imul ecx, dword ptr [rdi], -0x7b ; ret 0xd
0x00000200004eda5a : imul ecx, dword ptr [rdi], -0x7b ; ret 0xea5
0x000002000014f141 : imul ecx, dword ptr [rdi], 0x14 ; add al, ch ; jbe 0x2000014f0d0 ; jmp qword ptr [rcx]
0x000002000005e8dd : imul ecx, dword ptr [rdx - 0x75], 0x3349df04 ; ret 0x2349
0x0000020000021efd : imul ecx, dword ptr [rsi], 0x1b800 ; add byte ptr [rax], al ; ret
0x0000020000090249 : imul ecx, dword ptr [rsi], 0x8e976cb9 ; ret
0x00000200004927c3 : imul ecx, eax, 0x5ebffc2 ; call 0x200000bf279
0x000002000013c41f : imul ecx, edx ; shr rcx, 0x38 ; mov eax, ecx ; ret
0x00000200006bba42 : imul ecx, esp, -1 ; add rsp, 0x48 ; ret
0x0000020000448e97 : imul edi, dword ptr [rax + 1], 0xfc0920f ; mov dh, 0xc0 ; ret
0x0000020000180bc8 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005a9207 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000002ac97 : imul edi, dword ptr [rax], 0xe005f712 ; ret
0x0000020000634b62 : imul edi, dword ptr [rbx], 0 ; add byte ptr [rcx + 3], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001e96aa : imul edi, ebp, 0x6fe990ff ; ret 0xffee
0x00000200000e39de : imul edi, ebp, 0xb60f44ff ; ret
0x00000200003c2f15 : imul edi, edi, 0x8349ffff ; ret 0x4102
0x00000200000c7e25 : imul edi, edi, 0x854dffff ; ret
0x0000020000182438 : imul edi, esp, -1 ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x000002000059e071 : imul edx ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000066432b : imul edx, dword ptr [rax + rax], 0x33 ; imul al ; ret 0xffae
0x00000200005e9ba1 : imul edx, dword ptr [rax + rcx*8 - 1], -0x75 ; ret
0x000002000064980e : imul edx, dword ptr [rax], 0x1f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041fc96 : imul edx, dword ptr [rax], 0xbf92cbe8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001d6a91 : imul edx, dword ptr [rdi], 0x8e99000 ; ret
0x000002000017f9e1 : imul edx, dword ptr [rdx + rsi*8 - 1], 0x48 ; add esp, 0x58 ; ret
0x000002000000d3bd : imul edx, edx, 0xd ; sub r8, rdx ; mov eax, r8d ; ret
0x00000200006bc372 : imul esi, dword ptr [rax + 0x44], -0x75 ; ret 0xd233
0x00000200006c0b0e : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002ba73 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006b5687 : imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x0000020000500632 : imul esi, dword ptr [rdi + 0x48d233ff], -0x75 ; iretd ; call r14
0x00000200001479a3 : imul esi, dword ptr [rsi + 0x12], 0x200f4400 ; ret
0x000002000008184a : imul esi, dword ptr [rsi], 0 ; ret 0x344d
0x000002000001c566 : imul esp, dword ptr [rax], -0x75 ; ret 0x8d4c
0x00000200005b92e4 : imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x00000200004a43a6 : imul esp, dword ptr [rax], 0x8b440375 ; ret 0x8545
0x00000200001280e4 : imul esp, dword ptr [rax], 0xf ; test eax, edx ; int 0xfb
0x0000020000666f3a : imul esp, dword ptr [rcx + 0x1d8b48ff], -0x44 ; xchg eax, ecx ; ret 0x48ff
0x00000200005d8f63 : imul esp, edx, -1 ; mov rcx, rbx ; call 0x200003d5178
0x0000020000609e42 : imul esp, esp, 0xc22344ff ; jmp 0x20000609eb9
0x00000200004c7936 : imul rax ; inc dword ptr [rcx - 0xa] ; ret
0x00000200000e99ad : imul rax, rcx ; shr rax, 0x38 ; ret
0x00000200001eacf6 : in al, -0x10 ; push rsi ; ret 0x7401
0x000002000048ab18 : in al, -0x11 ; ret 0x65ff
0x0000020000530a40 : in al, -0x15 ; sub eax, dword ptr [rbx + rcx*4 + 0x75] ; ret
0x000002000061f56a : in al, -0x16 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001a658c : in al, -0x17 ; ret
0x00000200001d9ee3 : in al, -0x17 ; ret 0xf673
0x000002000064759d : in al, -0x18 ; lea ebx, dword ptr [rdi + rsi*4] ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200004720f2 : in al, -0x18 ; or cl, bh ; ret
0x00000200005011cf : in al, -0x18 ; ret
0x00000200004c41d8 : in al, -0x20 ; ret 0x90ff
0x0000020000090944 : in al, -0x37 ; movsxd rax, eax ; ret
0x0000020000477ff8 : in al, -0x3a ; ret
0x00000200001ff1c3 : in al, -0x3e ; jmp 0x200001ff1c7
0x000002000054f518 : in al, -0x43 ; cli ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000124892 : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000664a68 : in al, -0x4b ; ret 0x4cff
0x00000200006440b0 : in al, -0x4f ; ret
0x00000200003dd816 : in al, -0x50 ; cmp ch, bl ; loopne 0x200003dd82f ; ret
0x0000020000439c18 : in al, -0x52 ; ret 0xebff
0x0000020000424f38 : in al, -0x53 ; ret 0xebff
0x00000200005ca8df : in al, -0x54 ; jmp qword ptr [rcx]
0x00000200006cd4f1 : in al, -0x6b ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001c2ff1 : in al, -0x75 ; and al, 3 ; ret
0x00000200004c743d : in al, -0x75 ; ret 0x6b9
0x0000020000513cf8 : in al, -0x76 ; or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x00000200006660fc : in al, -0x76 ; ret 0xe8ff
0x00000200006d15d0 : in al, -0x77 ; call 0x200752f5122
0x00000200006d15cf : in al, -0x77 ; call 0x200752f5123
0x000002000047ad18 : in al, -0x77 ; ret 0x48ff
0x00000200004779b6 : in al, -0xa ; inc dword ptr [rcx - 0x76] ; xor byte ptr [r10], r12b ; ret 0xd8f6
0x00000200001b78ba : in al, -0xa ; ret
0x000002000062fa28 : in al, -0xb ; ret
0x000002000016499f : in al, -0xd ; ljmp ptr [rbx] ; ret 0x42c6
0x00000200006223d5 : in al, -0xd ; ret
0x0000020000522c97 : in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051dc44 : in al, -1 ; add rsp, 0x28 ; ret
0x000002000059801a : in al, -1 ; add rsp, 0x98 ; ret
0x0000020000609e43 : in al, -1 ; and r8d, edx ; jmp 0x20000609eb8
0x000002000048e3db : in al, -1 ; call 0x200000b9885
0x000002000048a469 : in al, -1 ; call 0x200000b9b05
0x000002000016af6a : in al, -1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a576a : in al, -1 ; jne 0x200005de928 ; ret
0x000002000048b5de : in al, -1 ; mov dl, 1 ; call 0x200000b90e7
0x0000020000489a00 : in al, -1 ; mov dl, 1 ; call 0x200000b9887
0x000002000048a870 : in al, -1 ; mov dl, bl ; call 0x200000b90e7
0x000002000048ad1b : in al, -1 ; mov dl, r12b ; call 0x200000b90e8
0x000002000048b1c0 : in al, -1 ; mov dl, r15b ; call 0x200000b90e8
0x000002000048c910 : in al, -1 ; mov edi, eax ; call 0x200000b9b07
0x0000020000494a42 : in al, -1 ; mov qword ptr [rdx + 8], rax ; call 0x200000b9b09
0x0000020000494c6e : in al, -1 ; mov sil, al ; call 0x200000b9b08
0x0000020000480df6 : in al, -1 ; ret
0x00000200001b8977 : in al, -2 ; jmp 0x200001b8985
0x0000020000371bcb : in al, -2 ; push rsi ; ret
0x00000200000da658 : in al, 0x10 ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000020000140c03 : in al, 0x12 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e022b : in al, 0x1e ; lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000038bb4 : in al, 0x31 ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200000d9f1f : in al, 0x3b ; ret 0xf45
0x0000020000701a10 : in al, 0x41 ; call qword ptr [rsi]
0x0000020000065276 : in al, 0x41 ; call rdi
0x000002000052aee7 : in al, 0x48 ; add esp, 0x28 ; ret
0x00000200003daf38 : in al, 0x48 ; mov ebx, dword ptr [rsp + 8] ; mov dword ptr [rcx + 0x7c], eax ; ret
0x000002000013fb80 : in al, 0x48 ; test edx, edx ; je 0x2000013fb93 ; mov byte ptr [rcx], 0 ; ret
0x0000020000665062 : in al, 0x55 ; ret 0xe8ff
0x000002000070d541 : in al, 0x56 ; sti ; push rsi ; ret 0xf08
0x0000020000639328 : in al, 0x5c ; ret
0x00000200001c23b8 : in al, 0x60 ; adc al, 0 ; add rsp, 0x38 ; ret
0x000002000058b197 : in al, 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000000bd76 : in al, 0x75 ; and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200004d7691 : in al, 0x75 ; cmp cl, byte ptr [rax - 0x75] ; ret
0x00000200000918b0 : in al, 0x7d ; ret
0x0000020000019fff : in al, 0xf ; test byte ptr [rcx - 0x75ffe4e5], al ; ret
0x00000200005fa0ab : in al, 0xf ; test cl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000042843 : in al, 0xf ; test ecx, ecx ; mov dl, 0x19 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003a5d1a : in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x000002000038370d : in al, 1 ; add byte ptr [rax], al ; call rdi
0x00000200000b509c : in al, 1 ; add byte ptr [rax], al ; ret
0x00000200000b4fe5 : in al, 1 ; add byte ptr [rax], al ; test cx, cx ; je 0x200000b4ff8 ; ret
0x000002000039454a : in al, dx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200004e6cad : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000c9577 : in al, dx ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000361271 : in al, dx ; add rsp, 0x80 ; pop rbx ; ret
0x0000020000425308 : in al, dx ; and al, ch ; mov ch, 0x7f ; ret
0x00000200006f8396 : in al, dx ; and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200000349e8 : in al, dx ; and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x0000020000668daf : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; ret
0x000002000047acb7 : in al, dx ; and byte ptr [rax - 0x75], cl ; jmp 0x1ffc367bc0c
0x0000020000468425 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000004f1a4 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000012113d : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004de5d4 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000576ce4 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000006cc73 : in al, dx ; and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x0000020000438684 : in al, dx ; and byte ptr [rax - 0x75], cl ; sub byte ptr [r8 - 0x7d], cl ; ret 0x4820
0x000002000005c2b8 : in al, dx ; and byte ptr [rbx + 0x200f44f9], cl ; ret
0x00000200004b2d18 : in al, dx ; and byte ptr [rbx + 0x2ae8ffcf], al ; ret
0x00000200004f7053 : in al, dx ; and byte ptr [rbx + 0xd8d48d9], cl ; ret 0xda0d
0x000002000066134e : in al, dx ; and byte ptr [rbx + rcx*4 + 5], cl ; int1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x0000020000590dc7 : in al, dx ; and byte ptr [rbx - 0x74afdb8c], cl ; ret 0x3345
0x00000200004233e7 : in al, dx ; and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x0000020000573e01 : in al, dx ; and byte ptr [rbx], dh ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000037d4d : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x000002000054b1df : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x0000020000023e2b : in al, dx ; and byte ptr [rcx - 0x75], cl ; or dword ptr [rdi + rcx + 0x20], eax ; ret
0x00000200000a81b4 : in al, dx ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000003ff46 : in al, dx ; and byte ptr [rdx], al ; add byte ptr [rax], al ; jmp 0x2000003ff15
0x0000020000520608 : in al, dx ; call 0x2000014b798
0x000002000009087f : in al, dx ; call qword ptr [rax]
0x0000020000465612 : in al, dx ; cmp byte ptr [rdi + rcx - 0x49], al ; or cl, byte ptr [rax - 0x75] ; ret 0xb70f
0x000002000010c972 : in al, dx ; cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x000002000010a8c8 : in al, dx ; cwde ; adc byte ptr [rax], al ; add rcx, rdx ; jmp rcx
0x00000200005b92fc : in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000489ae6 : in al, dx ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rsi*4 + 0x44], 0x8b ; ret
0x00000200001f9f12 : in al, dx ; dec dword ptr [rcx - 0x75] ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200001f058c : in al, dx ; dec esp ; mov rdx, r8 ; call qword ptr [rbx]
0x0000020000609b87 : in al, dx ; enter -0x7601, 0x43 ; sbb al, 0xe9 ; ret 0xe17c
0x0000020000598edc : in al, dx ; inc dword ptr [rax + rax*8 - 0x7cb7da8b] ; ret
0x0000020000605ade : in al, dx ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x00000200001b6364 : in al, dx ; inc dword ptr [rbx + rcx*4 + 0x5e] ; or byte ptr [rcx - 0x75], al ; ret
0x00000200001e9235 : in al, dx ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000169a9b : in al, dx ; inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x0000020000637fb3 : in al, dx ; jmp 0x2000063542f
0x000002000025d3a4 : in al, dx ; jmp qword ptr [rbx]
0x000002000037bdce : in al, dx ; jo 0x2000037bd5f ; ret 0x8b48
0x00000200005460ae : in al, dx ; jo 0x2000054603f ; ret 0x8b48
0x000002000037873a : in al, dx ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200005484ae : in al, dx ; loopne 0x200005484b4 ; call r9
0x000002000019e337 : in al, dx ; mov al, 1 ; ret
0x00000200000917c5 : in al, dx ; mov dword ptr [rbx - 0x1b1a7fb8], ebp ; ret 0x394e
0x0000020000119fe7 : in al, dx ; mov word ptr [rcx], r10w ; add rsp, 0x28 ; ret
0x000002000040a932 : in al, dx ; nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000031dce : in al, dx ; push -0x742dccbb ; ret 0xbb49
0x00000200005ebb7c : in al, dx ; push gs ; call qword ptr [rax - 0x1a3dff17]
0x00000200005e14c4 : in al, dx ; push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret
0x00000200005e1416 : in al, dx ; push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret 0xf
0x00000200001fa051 : in al, dx ; push rdi ; shl byte ptr [rbx], 1 ; ret
0x000002000040720e : in al, dx ; push rsi ; ret
0x00000200001ea782 : in al, dx ; push rsi ; ret 0xf02
0x0000020000134c10 : in al, dx ; ret
0x00000200003f52fe : in al, dx ; ret 0x48ff
0x00000200004441ef : in al, dx ; ret 0x4dff
0x00000200004f06ca : in al, dx ; rol byte ptr [rip - 0x74b80000], 5 ; ret 0xd8e0
0x00000200000ab4c3 : in al, dx ; sbb eax, 0x48c28a00 ; add esp, 0x28 ; ret
0x00000200004a9cbd : in al, dx ; sti ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000049a360 : in al, dx ; stosb byte ptr [rdi], al ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200001ba452 : in al, dx ; sub al, ch ; ret
0x0000020000421552 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000002fe2 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000003012 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x854d
0x000002000038b60a : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000002a546 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200003869ec : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000107f7e : in al, dx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000047a6ae : in al, dx ; sub byte ptr [rcx], cl ; xchg eax, ecx ; nop ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7447
0x000002000006fb44 : in al, dx ; xor al, al ; ret
0x000002000005f9e2 : in al, dx ; xor byte ptr [rax + 0x63], cl ; ret 0x8d49
0x00000200004b9f05 : in al, dx ; xor byte ptr [rbp - 0x75], cl ; loope 0x200004b9e9b ; ret 0x8b4c
0x00000200004a0b04 : in al, dx ; xor byte ptr [rbx + rcx*4 + 0x4a], cl ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000042325a : in al, dx ; xor byte ptr [rcx - 0x7d], cl ; movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000065ae6c : in al, dx ; xor byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000011e174 : in al, dx ; xor eax, eax ; ret
0x00000200001ee498 : in eax, -0x17 ; pop rbp ; ret
0x00000200000917cb : in eax, -0x1c ; ret 0x394e
0x00000200004487d3 : in eax, -0x3e ; dec dword ptr [rax - 0x75] ; int 0xe8
0x0000020000510cb0 : in eax, -0x46 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000447357 : in eax, -0x46 ; ret 0x45ff
0x00000200006f4557 : in eax, -0x5c ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200006cd424 : in eax, -0x6b ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000637184 : in eax, -0x75 ; add eax, dword ptr [rcx + 0x33] ; ret
0x0000020000487496 : in eax, -0x75 ; ret
0x000002000066539f : in eax, -0x75 ; ret 0x48ff
0x00000200004dcf10 : in eax, -0x75 ; ret 0x8948
0x0000020000665e57 : in eax, -0x80 ; ret 0x4cff
0x00000200003a9dc3 : in eax, -0xa ; ret
0x0000020000388090 : in eax, -0xb ; push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0x3d ; ret
0x0000020000507acf : in eax, -0xd ; ret
0x0000020000414582 : in eax, -1 ; add rsp, 0x28 ; ret
0x0000020000544e7c : in eax, -1 ; add rsp, 0x48 ; ret
0x00000200004446ac : in eax, -1 ; call 0x2000006ad2d
0x00000200004446ab : in eax, -1 ; call 0x2000006ad2e
0x000002000012667e : in eax, -1 ; dec dword ptr [rdi + rcx - 0x42] ; wait ; ret
0x000002000044473b : in eax, -1 ; mov edx, eax ; call 0x2000006bc5b
0x000002000044473a : in eax, -1 ; mov edx, eax ; call 0x2000006bc5c
0x00000200001c6ebf : in eax, -1 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001c7beb : in eax, -1 ; nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000040f8cf : in eax, -1 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005205d7 : in eax, -6 ; ret 0x48ff
0x00000200005c4da0 : in eax, 0 ; add al, al ; jmp 0x200005c4d6e
0x00000200005516ff : in eax, 0 ; sar edi, cl ; call rax
0x0000020000420987 : in eax, 0x14 ; add bl, ch ; mov esi, esi ; ret
0x000002000048c187 : in eax, 0x30 ; ret
0x00000200001630f8 : in eax, 0x33 ; rol bl, 0x48 ; mov eax, edx ; ret
0x000002000038a36b : in eax, 0x37 ; and eax, 0xd8b4800 ; ret
0x000002000052a2d5 : in eax, 0x41 ; mov eax, eax ; ret
0x0000020000520581 : in eax, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001548ae : in eax, 0x66 ; mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x000002000008ee8f : in eax, 0xa ; ret
0x0000020000050334 : in eax, 0xc ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000e2036 : in eax, 0xf ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2316955
0x00000200000c473d : in eax, 5 ; add byte ptr [rcx - 0x77], cl ; and r14b, r14b ; ret 0xf02
0x00000200000c474a : in eax, 5 ; add dh, dh ; ret 0x7508
0x00000200003c895f : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0fc08], al ; ret
0x000002000007ecf5 : in eax, dx ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000036195d : in eax, dx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000046e59d : in eax, dx ; add byte ptr [rcx + 3], r9b ; int 0xff
0x00000200000e84a8 : in eax, dx ; add byte ptr es:[rax + 0x3b], cl ; ret 0x1176
0x000002000019a30b : in eax, dx ; add eax, dword ptr [rcx - 0xa] ; ret 0x7507
0x00000200000232c1 : in eax, dx ; add rsp, 0x28 ; ret
0x000002000020fdc1 : in eax, dx ; and byte ptr [rax], al ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0xd90
0x000002000059efaf : in eax, dx ; call 0x2000005b1f3
0x0000020000633941 : in eax, dx ; call rcx
0x00000200004c15fe : in eax, dx ; dec dword ptr [rax + 3] ; ret 0x8548
0x000002000012a65b : in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200001e86d0 : in eax, dx ; dec dword ptr [rax - 0x75] ; ret 0x23e9
0x000002000038f957 : in eax, dx ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000198260 : in eax, dx ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x0000020000633400 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001d3de2 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x45c0
0x00000200003c5fe1 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x4902
0x000002000039b16d : in eax, dx ; dec dword ptr [rbp + rcx*4 + 5] ; ret 0xcf09
0x00000200001d4fcb : in eax, dx ; dec dword ptr [rbp - 0x75] ; ret
0x0000020000533280 : in eax, dx ; dec dword ptr [rbx - 0x74bbe7b0] ; ret
0x00000200000dd0ec : in eax, dx ; dec dword ptr [rdi] ; test byte ptr [rcx], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x00000200003baf15 : in eax, dx ; dec dword ptr [rdi] ; test dword ptr [rsi], ebp ; ret 0xd
0x000002000056e36e : in eax, dx ; inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a814
0x00000200001d61b5 : in eax, dx ; inc dword ptr [rcx - 0x75] ; ret 0x41f0
0x000002000047e0b8 : in eax, dx ; inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x0000020000121c7d : in eax, dx ; inc dword ptr [rcx - 0x7d] ; ret
0x00000200001d446e : in eax, dx ; inc dword ptr [rcx - 0xa] ; ret
0x000002000039b9db : in eax, dx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001d32dd : in eax, dx ; inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x000002000018e6f1 : in eax, dx ; inc dword ptr [rdx + rcx*4 + 0x5e] ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x000002000042b82e : in eax, dx ; je 0x2000042b816 ; call 0x20000055eaa
0x0000020000421317 : in eax, dx ; jmp 0x20000421287
0x0000020000421316 : in eax, dx ; jmp 0x20000421288
0x00000200006d1103 : in eax, dx ; lea eax, dword ptr [r8 - 0x37] ; jmp 0x200006d10d3
0x000002000063261f : in eax, dx ; leave ; ret
0x0000020000147e1e : in eax, dx ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x00000200003f948d : in eax, dx ; mov eax, 0xc000000d ; ret
0x000002000040daa6 : in eax, dx ; mov eax, 1 ; ret
0x00000200000387e2 : in eax, dx ; mov rax, rdx ; ret
0x000002000008e778 : in eax, dx ; mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000042ef6d : in eax, dx ; or al, 0x2b ; ret 0x3b48
0x00000200000c3cd7 : in eax, dx ; or bh, bh ; int 0x75
0x0000020000091935 : in eax, dx ; pop qword ptr [rcx + 0x6a] ; sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x00000200001e81c1 : in eax, dx ; push qword ptr [rbx] ; leave ; call 0x200001444b2
0x00000200001e2762 : in eax, dx ; push rsi ; ret
0x00000200001ea1fc : in eax, dx ; push rsi ; ret 0x7401
0x000002000015db5b : in eax, dx ; ret
0x000002000048aafe : in eax, dx ; ret 0x4cff
0x0000020000444108 : in eax, dx ; ret 0x4dff
0x000002000048ad3a : in eax, dx ; ret 0x65ff
0x0000020000562d1f : in eax, dx ; ret 0xffd0
0x0000020000570127 : in eax, dx ; ret 0xffd5
0x000002000070918f : in eax, dx ; ret 0xfffa
0x0000020000570be5 : in eax, dx ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200001857ef : in eax, dx ; sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000002000047df8f : in eax, dx ; scasb al, byte ptr [rdi] ; ret
0x00000200000f9d5a : in eax, dx ; sti ; inc dword ptr [rcx - 0x75] ; ret 0x8b48
0x0000020000665667 : in eax, dx ; stosb byte ptr [rdi], al ; ret 0x33ff
0x000002000008ee88 : in eax, dx ; xchg eax, esi ; add eax, 0x274b5945 ; in eax, 0xa ; ret
0x00000200001157d6 : in eax, dx ; xor byte ptr [rax], bl ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000067a9f : inc al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000057a0 : inc ax ; mov word ptr [rcx + 2], ax ; ret
0x000002000013b197 : inc ax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x0000020000073982 : inc bl ; lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000023a9f8 : inc byte ptr [r10] ; mov eax, 0xd10060c2 ; ret 0x60
0x000002000015fa36 : inc byte ptr [r11 + r9*4 + 0x14] ; ret 0x8b42
0x00000200000df9a9 : inc byte ptr [rax + 0x437] ; ret
0x0000020000554226 : inc byte ptr [rbx + rax + 0x61] ; and al, 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000015fa37 : inc byte ptr [rbx + rcx*4 + 0x14] ; ret 0x8b42
0x00000200005b6ab1 : inc byte ptr [rbx - 0x78f0e207] ; ret
0x0000020000143f26 : inc byte ptr [rcx + 0x13] ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200004e9886 : inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x000002000035d9a1 : inc byte ptr [rcx - 0x75] ; ret 0x8949
0x00000200004dd456 : inc byte ptr [rdi + rcx + 0x20] ; ret
0x000002000023a9f9 : inc byte ptr [rdx] ; mov eax, 0xd10060c2 ; ret 0x60
0x000002000001f7f4 : inc byte ptr [rsi + 0xf] ; ret
0x000002000015f875 : inc dword ptr [0x2e40] ; ret
0x00000200003cd781 : inc dword ptr [0x2e44] ; ret
0x000002000038f8f1 : inc dword ptr [0x2e48] ; ret
0x000002000000ec05 : inc dword ptr [0x5504] ; ret
0x000002000015f869 : inc dword ptr [0x5540] ; ret
0x000002000015e56e : inc dword ptr [r10 + 0xc] ; ret
0x00000200001a9469 : inc dword ptr [r10 + 0xd8] ; ret
0x000002000015e5a5 : inc dword ptr [r10 + 8] ; ret
0x00000200005a925f : inc dword ptr [r11 + 0x44] ; mov al, 1 ; ret
0x000002000005bd3f : inc dword ptr [r11] ; ret 0xf685
0x000002000015fa22 : inc dword ptr [r14 + 0x39] ; ret 0x7404
0x00000200000360d3 : inc dword ptr [r8] ; ret
0x000002000006c1d6 : inc dword ptr [r9 + 0x18] ; jmp 0x2000006c1a4
0x00000200005934f8 : inc dword ptr [r9 + 3] ; ret 0x4489
0x00000200000f8e80 : inc dword ptr [r9 + 3] ; ret 0x789
0x0000020000012a48 : inc dword ptr [r9 + rdx*4 + 0x50] ; ret
0x00000200001b016d : inc dword ptr [r9 - 0x7b] ; ret
0x00000200004ebe31 : inc dword ptr [rax + 0x10] ; ret
0x000002000065407e : inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x0000020000188c4f : inc dword ptr [rax + 0x1ee8] ; ret
0x0000020000149ec2 : inc dword ptr [rax + 0x200] ; ret
0x000002000016f675 : inc dword ptr [rax + 0xb8] ; mov rax, rdx ; ret
0x00000200005639fc : inc dword ptr [rax + rax*8 + 0x458b1874] ; ret
0x000002000052402d : inc dword ptr [rax + rax*8 + 0x7e894175] ; js 0x20000523fca ; ret
0x000002000053895a : inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x000002000019ee04 : inc dword ptr [rax + rax*8 - 0x74b39a8c] ; ret
0x000002000019ee14 : inc dword ptr [rax + rax*8 - 0x74b3aa8c] ; ret
0x000002000019ee24 : inc dword ptr [rax + rax*8 - 0x74b3ba8c] ; ret
0x000002000019ee34 : inc dword ptr [rax + rax*8 - 0x74b3ca8c] ; ret
0x000002000019ee44 : inc dword ptr [rax + rax*8 - 0x74b3da8c] ; ret
0x000002000056f935 : inc dword ptr [rax + rax*8 - 0x74b7a48c] ; ret
0x00000200006f9425 : inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x0000020000598edd : inc dword ptr [rax + rax*8 - 0x7cb7da8b] ; ret
0x000002000013e763 : inc dword ptr [rax + rax*8 - 0x7eb6ec8c] ; ret 0x1000
0x00000200001768b7 : inc dword ptr [rax + rax*8 - 0x7eb7b58c] ; ret
0x0000020000175324 : inc dword ptr [rax + rax*8 - 0xb6a68c] ; ret
0x000002000016e03b : inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b44
0x000002000016be6d : inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b45
0x0000020000637eca : inc dword ptr [rax + rcx*4 + 0x25] ; cli ; ret
0x00000200006355b0 : inc dword ptr [rax + rdi + 0x25] ; adc al, 0xed ; ret
0x0000020000177f42 : inc dword ptr [rax + rdi + 0x2d] ; salc ; ret
0x00000200001d8826 : inc dword ptr [rax + rdi - 0x6d] ; ret
0x0000020000117c93 : inc dword ptr [rax - 0x4a] ; add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000635656 : inc dword ptr [rax - 0x76] ; jmp 0x200006356ac
0x000002000057e71e : inc dword ptr [rax - 0x7c] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x000002000018243b : inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200001c07cc : inc dword ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x0000020000575c95 : inc dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000005796 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x8966
0x00000200004d8a43 : inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4918
0x0000020000652b13 : inc dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000105b3e : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000038c61e : inc dword ptr [rax] ; add byte ptr [rax], al ; setne al ; ret
0x00000200001f536a : inc dword ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000458f8 : inc dword ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x000002000041d2be : inc dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200001b4989 : inc dword ptr [rax] ; add byte ptr [rbx], dh ; ret 0xd78b
0x000002000070847d : inc dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000004aeda : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000011588c : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000bdc26 : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x0000020000177e27 : inc dword ptr [rax] ; add byte ptr [rsi + 1], ah ; ret
0x00000200004e02a3 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x0000020000514e58 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x0000020000528358 : inc dword ptr [rax] ; add cl, al ; jmp 0x1ffc2148e70
0x00000200006c674e : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000036b0de : inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000504c5f : inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000036164d : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000393658 : inc dword ptr [rax] ; jb 0x200003756a5 ; ret
0x0000020000020fcd : inc dword ptr [rax] ; je 0x200001fb764 ; ret
0x00000200004adc99 : inc dword ptr [rax] ; je 0x200004adca6 ; xor al, al ; ret
0x0000020000569a17 : inc dword ptr [rax] ; je 0x20000569a2a ; mov eax, 0xc0000303 ; ret
0x0000020000526f38 : inc dword ptr [rax] ; jne 0x20000526f48 ; and qword ptr [r8], 0 ; ret
0x00000200006601f6 : inc dword ptr [rax] ; jne 0x20000660209 ; mov eax, 0xc00000bb ; ret
0x00000200004e4203 : inc dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064afae : inc dword ptr [rax] ; mov rdx, rcx ; jne 0x2000064afc1 ; xor eax, eax ; ret
0x00000200000360d4 : inc dword ptr [rax] ; ret
0x00000200006643eb : inc dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000ff61b : inc dword ptr [rbp + 0x23] ; ret 0x840f
0x00000200000390a4 : inc dword ptr [rbp + 0x2b] ; rol dword ptr [rbp + 3], 1 ; ret 0x8b44
0x00000200000bccf0 : inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x00000200001ac3b1 : inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret
0x000002000056a7fb : inc dword ptr [rbp + 0x33] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200005551d3 : inc dword ptr [rbp + 0x33] ; imul cl ; ret
0x00000200001d9ee0 : inc dword ptr [rbp + 0x33] ; in al, -0x17 ; ret 0xf673
0x00000200001b78b7 : inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x000002000056dacc : inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a813
0x00000200003d5f7c : inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200003d5f12
0x00000200005fa01d : inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200005f9feb
0x000002000055df61 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x73], 0x51 ; add ch, al ; ret 0xff10
0x000002000058ac1f : inc dword ptr [rbp + 0x33] ; ror byte ptr [rbx + rcx*4 - 0x28], 0x3b ; ret
0x000002000036a28e : inc dword ptr [rbp + 0x33] ; sal byte ptr [rbx], 0xd2 ; call 0x20000386578
0x00000200001ea61b : inc dword ptr [rbp + 0x33] ; shr cl, 0xae ; ret 0xffec
0x00000200001ea603 : inc dword ptr [rbp + 0x33] ; shr cl, 0xc6 ; ret 0xffec
0x00000200001ea5ef : inc dword ptr [rbp + 0x33] ; shr cl, 0xda ; ret 0xffec
0x00000200006379b1 : inc dword ptr [rbp + 0x391275c0] ; ret
0x00000200001158b0 : inc dword ptr [rbp + 0x3b0e74f6] ; ret 0xe76
0x00000200001e0109 : inc dword ptr [rbp + 0x3b] ; ret
0x00000200000e1cad : inc dword ptr [rbp + 0x3b] ; ret 0x3574
0x000002000064abca : inc dword ptr [rbp + 0x3b] ; ret 0x4a75
0x00000200000c701f : inc dword ptr [rbp + 0x3b] ; ret 0x850f
0x00000200006315d7 : inc dword ptr [rbp + 0x45850fc0] ; mov gs, ecx ; call rcx
0x00000200005cb8c9 : inc dword ptr [rbp + 0x480575c0] ; add esp, 0x28 ; ret
0x0000020000129ead : inc dword ptr [rbp + 0x480c78c0] ; add esp, 0x28 ; ret
0x000002000060c225 : inc dword ptr [rbp + 0x67880fc0] ; ret 0xffe1
0x0000020000471d91 : inc dword ptr [rbp + 0x6f840fc0] ; ret
0x0000020000381c3b : inc dword ptr [rbp + 0x75840fc0] ; call qword ptr [rax]
0x000002000060c281 : inc dword ptr [rbp + 0xb880fc0] ; ret 0xffe1
0x0000020000426b5a : inc dword ptr [rbp + 0xf] ; mov dh, 0x5e ; add eax, dword ptr [rcx - 0xa] ; ret
0x000002000001e210 : inc dword ptr [rbp + 0xf] ; mov dh, 0x9c ; or dl, al ; ret 8
0x000002000070d851 : inc dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; fisttp dword ptr [rbp + 0x63] ; ret
0x000002000066885f : inc dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x344
0x00000200004fabc9 : inc dword ptr [rbp + 3] ; ret
0x00000200006c75f2 : inc dword ptr [rbp + rcx*4 + 0x6a] ; ret 0x8d44
0x0000020000381a33 : inc dword ptr [rbp + rcx*4 + 0x7f] ; add dword ptr [rdi + rcx + 0x20], eax ; ret
0x000002000013a1aa : inc dword ptr [rbp - 0x14338a40] ; ret 0x7e8b
0x0000020000381cc8 : inc dword ptr [rbp - 0x207bf040] ; call qword ptr [rax]
0x00000200004f7e09 : inc dword ptr [rbp - 0x5f8740] ; ret
0x0000020000381cae : inc dword ptr [rbp - 0x607bf040] ; call qword ptr [rax]
0x0000020000629f66 : inc dword ptr [rbp - 0x607bf040] ; ret
0x000002000042536b : inc dword ptr [rbp - 0x6af0be40] ; ret 0x3d83
0x000002000039e189 : inc dword ptr [rbp - 0x74398a40] ; ret
0x000002000017a804 : inc dword ptr [rbp - 0x74828740] ; mov r15b, 0xff ; ret
0x00000200003ac148 : inc dword ptr [rbp - 0x74b08725] ; ret
0x00000200005a7141 : inc dword ptr [rbp - 0x74d48b40] ; ret
0x00000200004c4117 : inc dword ptr [rbp - 0x74e58a40] ; ret
0x000002000054887e : inc dword ptr [rbp - 0x74eb8b25] ; ret
0x00000200006348b0 : inc dword ptr [rbp - 0x74f38740] ; ret
0x0000020000534d86 : inc dword ptr [rbp - 0x74fb8625] ; ret
0x00000200004b2e6f : inc dword ptr [rbp - 0x74fb8b13] ; ret
0x00000200006ce812 : inc dword ptr [rbp - 0x75] ; fimul word ptr [rcx - 0x7f] ; ret
0x00000200006ced5c : inc dword ptr [rbp - 0x75] ; fisttp qword ptr [rcx - 0x7f] ; ret
0x00000200001e1a8b : inc dword ptr [rbp - 0x75] ; out 0xe9, al ; ret
0x000002000006f535 : inc dword ptr [rbp - 0x75] ; ret
0x0000020000617677 : inc dword ptr [rbp - 0x75] ; ret 0x30bf
0x000002000064abbf : inc dword ptr [rbp - 0x75] ; ret 0x6eb
0x00000200001f76b6 : inc dword ptr [rbp - 0x75] ; ret 0x8a40
0x00000200000e26c3 : inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000043e57 : inc dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200005301ee : inc dword ptr [rbp - 0x76] ; loopne 0x20000530182 ; ret
0x000002000000f560 : inc dword ptr [rbp - 0x76] ; ret 0x8a41
0x000002000052ac9f : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x00000200003853fb : inc dword ptr [rbp - 0x7c] ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8b4c
0x00000200003c0f33 : inc dword ptr [rbp - 0x7c] ; in al, 0xf ; xchg eax, esp ; ret 0x8b4c
0x000002000042b82b : inc dword ptr [rbp - 0x7c] ; in eax, dx ; je 0x2000042b819 ; call 0x20000055ead
0x00000200001e60ec : inc dword ptr [rbp - 0x7c] ; ret
0x00000200000deb1b : inc dword ptr [rbp - 0x7c] ; ret 0x850f
0x00000200001ee83d : inc dword ptr [rbp - 0x7c] ; ror byte ptr [rdi], 0x85 ; ret
0x000002000038f16a : inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x00000200005b9fc4 : inc dword ptr [rbp - 0x9ef8640] ; ret
0x00000200005cd4ab : inc dword ptr [rbp - 0xc18b40] ; ret
0x00000200005cc8a5 : inc dword ptr [rbp - 0xce8b40] ; ret
0x00000200005cc555 : inc dword ptr [rbp - 0xcf8b40] ; ret
0x00000200005cce5b : inc dword ptr [rbp - 0xd58b40] ; ret
0x000002000036cefd : inc dword ptr [rbp - 0xdc8b40] ; ret
0x0000020000569512 : inc dword ptr [rbp - 0xe58740] ; ret
0x0000020000596d4a : inc dword ptr [rbp - 0xf38740] ; ret
0x00000200003a9657 : inc dword ptr [rbp - 0xf48b40] ; ret
0x00000200001cde1a : inc dword ptr [rbp - 0xf58740] ; ret
0x00000200006bc845 : inc dword ptr [rbp - 0xf68740] ; ret
0x00000200006cfd1c : inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200006bac23 : inc dword ptr [rbp - 0xf88740] ; ret
0x0000020000605adf : inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x000002000013ac75 : inc dword ptr [rbp - 0xf98b40] ; ret
0x00000200004fa554 : inc dword ptr [rbx + 0x18] ; xor r8d, r8d ; jmp 0x200004fa526
0x00000200001ed25c : inc dword ptr [rbx + 0x1ce918ce] ; ret 0xfff2
0x000002000041118d : inc dword ptr [rbx + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e647a : inc dword ptr [rbx + 0x3b44fec3] ; ret
0x00000200005f8e9c : inc dword ptr [rbx + 0x40] ; call rax
0x00000200005a9260 : inc dword ptr [rbx + 0x44] ; mov al, 1 ; ret
0x00000200001c43ba : inc dword ptr [rbx + 0x450f40f9] ; ret 0xb8c3
0x00000200000afa66 : inc dword ptr [rbx + r9*4 + 0x4c] ; ret
0x0000020000668af2 : inc dword ptr [rbx + rax + 5] ; ret 0xc0f6
0x000002000066706d : inc dword ptr [rbx + rcx*4 + 0x1d] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret 0x48ff
0x0000020000664058 : inc dword ptr [rbx + rcx*4 + 0x1d] ; jo 0x20000664024 ; ret 0x41ff
0x000002000066814e : inc dword ptr [rbx + rcx*4 + 0x1d] ; jp 0x200006681d9 ; ret 0x41ff
0x0000020000666df8 : inc dword ptr [rbx + rcx*4 + 0x1d] ; js 0x20000666e75 ; ret 0x48ff
0x0000020000666e33 : inc dword ptr [rbx + rcx*4 + 0x1d] ; mov ch, 0x92 ; ret 0x48ff
0x0000020000666d0c : inc dword ptr [rbx + rcx*4 + 0x1d] ; or al, 0x72 ; ret 0x48ff
0x00000200005a7645 : inc dword ptr [rbx + rcx*4 + 0x1d] ; ret
0x000002000066a3a2 : inc dword ptr [rbx + rcx*4 + 0x1d] ; sar byte ptr [rbx], cl ; ret 0x8bff
0x0000020000667d88 : inc dword ptr [rbx + rcx*4 + 0x1d] ; test al, 0x83 ; ret 0x8bff
0x0000020000666131 : inc dword ptr [rbx + rcx*4 + 0x1d] ; xchg eax, edi ; lahf ; ret 0x41ff
0x00000200000afa67 : inc dword ptr [rbx + rcx*4 + 0x4c] ; ret
0x00000200000f929c : inc dword ptr [rbx + rcx*4 + 0x4c] ; ret 0x4808
0x00000200006540cb : inc dword ptr [rbx + rcx*4 + 0x5b] ; and byte ptr [rcx - 0xa], al ; ret
0x000002000059d0a4 : inc dword ptr [rbx + rcx*4 + 0x5b] ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000061788f : inc dword ptr [rbx + rcx*4 + 0x5b] ; or byte ptr [rcx - 0xa], al ; ret
0x00000200003d3929 : inc dword ptr [rbx + rcx*4 + 0x5d] ; or byte ptr [rcx - 0xa], al ; ret
0x00000200001b6365 : inc dword ptr [rbx + rcx*4 + 0x5e] ; or byte ptr [rcx - 0x75], al ; ret
0x00000200004afb17 : inc dword ptr [rbx + rcx*4 + 0x5f] ; and byte ptr [rcx - 0xa], al ; ret
0x000002000048276d : inc dword ptr [rbx + rcx*4 + 0x5f] ; cmp byte ptr [rcx - 0xa], al ; ret
0x00000200003b77a4 : inc dword ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0x7d], al ; ret
0x00000200003c271c : inc dword ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000002000066a504 : inc dword ptr [rbx + rcx*4 + 0xd] ; and byte ptr [rdx], bh ; ret 0x4cff
0x000002000066a5a3 : inc dword ptr [rbx + rcx*4 + 0xd] ; jno 0x2000066a5e8 ; ret 0x48ff
0x000002000066a3cf : inc dword ptr [rbx + rcx*4 + 0xd] ; push rcx ; pop rbp ; ret 0x4cff
0x00000200005ff5b9 : inc dword ptr [rbx + rcx*4 + 5] ; ret
0x00000200004b347e : inc dword ptr [rbx + rcx*4 + 5] ; ret 0xdd66
0x00000200000ffd98 : inc dword ptr [rbx + rcx*4 - 0x3e] ; jmp 0x200000ffd21
0x00000200001ee50b : inc dword ptr [rbx - 0x1216fb37] ; ret
0x000002000062194b : inc dword ptr [rbx - 0x1704ef9d] ; pop rbx ; ret
0x0000020000608b5c : inc dword ptr [rbx - 0x37f02bf3] ; jmp qword ptr [rax]
0x0000020000608b92 : inc dword ptr [rbx - 0x37f061f3] ; call qword ptr [rax]
0x0000020000609e44 : inc dword ptr [rbx - 0x3e] ; jmp 0x20000609eb7
0x0000020000708efb : inc dword ptr [rbx - 0x420e3ef3] ; jmp qword ptr [rax]
0x0000020000708f35 : inc dword ptr [rbx - 0x420e78f3] ; call qword ptr [rax]
0x000002000018012f : inc dword ptr [rbx - 0x6bf0fe03] ; ret
0x00000200005ad760 : inc dword ptr [rbx - 0x74bbffde] ; ret
0x00000200000afe35 : inc dword ptr [rbx - 0x77] ; push rsp ; ret
0x000002000061b832 : inc dword ptr [rbx - 0x7af0ef08] ; ret 0xe8a6
0x00000200004301b3 : inc dword ptr [rbx - 0x7af0fb01] ; ret 0xa
0x000002000063311d : inc dword ptr [rbx - 0x7af0fc07] ; ret 0xeb4f
0x0000020000554bc0 : inc dword ptr [rbx - 0x7bf0f117] ; ret 0
0x000002000050f6cf : inc dword ptr [rbx - 0x7bf0fd16] ; ret 0
0x0000020000554cb5 : inc dword ptr [rbx - 0x7bf0fe08] ; ret 0
0x00000200006236a6 : inc dword ptr [rbx - 0x7cb70740] ; ret
0x000002000062f47f : inc dword ptr [rbx - 0x7cf0fa02] ; ret
0x0000020000623cfc : inc dword ptr [rbx - 0x7df0ef06] ; ret
0x000002000036b24b : inc dword ptr [rbx - 0x8318ef3] ; call qword ptr [rax]
0x00000200000eaa2c : inc dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000066999c : inc dword ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000f8443 : inc dword ptr [rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070891f : inc dword ptr [rbx] ; fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x00000200003d7b48 : inc dword ptr [rbx] ; ret
0x000002000056cb3e : inc dword ptr [rbx] ; ret 0xe083
0x000002000005bd40 : inc dword ptr [rbx] ; ret 0xf685
0x0000020000614603 : inc dword ptr [rbx] ; ror byte ptr [rcx - 1], 1 ; ret 0x1489
0x0000020000150f91 : inc dword ptr [rcx + 0x10] ; ret
0x000002000006c1d7 : inc dword ptr [rcx + 0x18] ; jmp 0x2000006c1a3
0x00000200004cd1a1 : inc dword ptr [rcx + 0x18] ; ret
0x00000200006e6aeb : inc dword ptr [rcx + 0x23] ; ret
0x00000200001aa242 : inc dword ptr [rcx + 0x23] ; ret 0x3b41
0x00000200006dc060 : inc dword ptr [rcx + 0x23] ; ret 0xe0c1
0x0000020000198ee8 : inc dword ptr [rcx + 0x244] ; ret
0x0000020000198edb : inc dword ptr [rcx + 0x248] ; ret
0x0000020000198ed4 : inc dword ptr [rcx + 0x24c] ; ret
0x00000200003c470e : inc dword ptr [rcx + 0x2b] ; ret
0x0000020000144c8c : inc dword ptr [rcx + 0x2b] ; ret 0x344
0x00000200004c6391 : inc dword ptr [rcx + 0x344] ; xor eax, eax ; ret
0x00000200000c03c1 : inc dword ptr [rcx + 0x38] ; ret
0x0000020000362f6c : inc dword ptr [rcx + 0x3b] ; enter 0x2172, -0xa ; ret 0x7504
0x0000020000120f71 : inc dword ptr [rcx + 0x3b] ; ret
0x0000020000582ad9 : inc dword ptr [rcx + 0x3b] ; ret 0x772
0x0000020000182300 : inc dword ptr [rcx + 0x3b] ; ret 0x850f
0x00000200001ca1e3 : inc dword ptr [rcx + 0x3b] ; rol dword ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x00000200004c6a4e : inc dword ptr [rcx + 0x3c] ; ret
0x000002000005aa8d : inc dword ptr [rcx + 0x46c] ; ret
0x00000200003981f1 : inc dword ptr [rcx + 0x4c0] ; ret
0x000002000037f3cc : inc dword ptr [rcx + 0x5a8] ; ret
0x0000020000505b22 : inc dword ptr [rcx + 0x5f] ; pop r14 ; pop r13 ; pop r12 ; ret
0x0000020000177e21 : inc dword ptr [rcx + 0x66] ; ret
0x00000200004a51d3 : inc dword ptr [rcx + 0xc] ; ret
0x0000020000615413 : inc dword ptr [rcx + 0xf] ; mov bh, 0x40 ; add bh, bh ; ret
0x000002000043825b : inc dword ptr [rcx + 0xf] ; mov bh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000002000049990f : inc dword ptr [rcx + 0xf] ; mov bh, 0x84 ; cwde ; ret 0x291c
0x000002000044525e : inc dword ptr [rcx + 0xf] ; mov edx, 0x820f19e0 ; ret 2
0x00000200006e9ed4 : inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xf44
0x00000200004b7192 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000200003995c8 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x00000200006ca2a9 : inc dword ptr [rcx + 3] ; dec byte ptr [rax - 0x7d] ; ret
0x00000200006ea765 : inc dword ptr [rcx + 3] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005de5c5 : inc dword ptr [rcx + 3] ; idiv dword ptr [rbx] ; ret
0x0000020000012744 : inc dword ptr [rcx + 3] ; ret
0x000002000050afc9 : inc dword ptr [rcx + 3] ; ret 0x4489
0x0000020000364075 : inc dword ptr [rcx + 3] ; ret 0x588
0x00000200000f8e81 : inc dword ptr [rcx + 3] ; ret 0x789
0x0000020000364087 : inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000041837f : inc dword ptr [rcx + 4] ; jmp 0x2000041834a
0x0000020000192195 : inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001921a1 : inc dword ptr [rcx + 4] ; ret
0x000002000049157f : inc dword ptr [rcx + 4] ; xor eax, eax ; ret
0x0000020000192199 : inc dword ptr [rcx + 8] ; ret
0x00000200005e7f79 : inc dword ptr [rcx + rcx*4 + 0x35] ; ret
0x000002000057ba7e : inc dword ptr [rcx + rcx*4 + 0x3d] ; xchg eax, esi ; fcom st(1) ; jmp qword ptr [rbx]
0x0000020000012a49 : inc dword ptr [rcx + rdx*4 + 0x50] ; ret
0x00000200004c1247 : inc dword ptr [rcx - 0x41] ; add byte ptr ds:[rax], al ; shr cl, 0x26 ; ret 0xfff2
0x000002000051e1ad : inc dword ptr [rcx - 0x41] ; ret
0x00000200001fef40 : inc dword ptr [rcx - 0x42] ; add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000200005eef1d : inc dword ptr [rcx - 0x47] ; add dword ptr [rax], eax ; add al, al ; jmp 0x200004fb1ce
0x000002000064c8a2 : inc dword ptr [rcx - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x20000198add
0x0000020000447b95 : inc dword ptr [rcx - 0x4c] ; add ecx, ebp ; ret
0x00000200004c9c85 : inc dword ptr [rcx - 0x50] ; add eax, ebp ; ret 0xf9b9
0x00000200004c5929 : inc dword ptr [rcx - 0x73] ; adc byte ptr [r11], r15b ; ret
0x000002000070e27a : inc dword ptr [rcx - 0x73] ; add dword ptr [r11], r12d ; ret 0xd2f7
0x00000200006c1b4b : inc dword ptr [rcx - 0x75] ; adc al, 0x84 ; call qword ptr [rip - 0x3dafae]
0x0000020000011a11 : inc dword ptr [rcx - 0x75] ; add al, 0x2b ; ret
0x00000200001dce00 : inc dword ptr [rcx - 0x75] ; and al, 0x8b ; ret
0x0000020000066070 : inc dword ptr [rcx - 0x75] ; ret
0x0000020000617aff : inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200001d61b6 : inc dword ptr [rcx - 0x75] ; ret 0x41f0
0x000002000042d0aa : inc dword ptr [rcx - 0x75] ; ret 0x42e9
0x00000200000062c4 : inc dword ptr [rcx - 0x75] ; ret 0x56e9
0x00000200003db1fa : inc dword ptr [rcx - 0x75] ; ret 0x8545
0x00000200000f73b1 : inc dword ptr [rcx - 0x75] ; ret 0x8b41
0x00000200000f7e27 : inc dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200000f9d5c : inc dword ptr [rcx - 0x75] ; ret 0x8b48
0x00000200001aa986 : inc dword ptr [rcx - 0x75] ; ret 0x8b4d
0x00000200006d1e3a : inc dword ptr [rcx - 0x75] ; ret 0x8d48
0x00000200000da03a : inc dword ptr [rcx - 0x75] ; ret 0x950f
0x00000200004fabd5 : inc dword ptr [rcx - 0x75] ; ret 0xb9e9
0x0000020000060aea : inc dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000f6ff7 : inc dword ptr [rcx - 0x75] ; ret 0xc933
0x00000200006385b2 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x73], 0xd ; add eax, eax ; ret
0x00000200001cd173 : inc dword ptr [rcx - 0x75] ; xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x00000200004e29c7 : inc dword ptr [rcx - 0x76] ; adc esi, esi ; ret 0x7502
0x000002000038574b : inc dword ptr [rcx - 0x76] ; fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x00000200004b536a : inc dword ptr [rcx - 0x76] ; ret
0x000002000048b1c1 : inc dword ptr [rcx - 0x76] ; xlatb ; call 0x200000b90e7
0x00000200004779b8 : inc dword ptr [rcx - 0x76] ; xor byte ptr [r10], r12b ; ret 0xd8f6
0x00000200006dbd13 : inc dword ptr [rcx - 0x78] ; adc byte ptr [rbp + 3], cl ; ret
0x0000020000589ef6 : inc dword ptr [rcx - 0x78] ; adc cl, byte ptr [rcx - 1] ; ret 0x344
0x00000200000cb0c1 : inc dword ptr [rcx - 0x7b] ; ret
0x00000200000cb448 : inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x00000200006047d0 : inc dword ptr [rcx - 0x7c] ; fbstp dword ptr [rcx + rdx - 0xa] ; ret
0x000002000056cc10 : inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x000002000010246a : inc dword ptr [rcx - 0x7c] ; ret
0x0000020000187626 : inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x00000200006ec7d0 : inc dword ptr [rcx - 0x7c] ; ret 0x5a75
0x000002000047e0b9 : inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x00000200003c5f74 : inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000020000621200 : inc dword ptr [rcx - 0x7d] ; call qword ptr [rsi]
0x000002000046e9de : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x0000020000060c08 : inc dword ptr [rcx - 0x7d] ; ret
0x00000200004cde8c : inc dword ptr [rcx - 0x7d] ; ret 0x4520
0x00000200000cb382 : inc dword ptr [rcx - 0x7d] ; ret 0x48e0
0x000002000018b1cd : inc dword ptr [rcx - 0x7d] ; ret 0x49e0
0x0000020000049ba2 : inc dword ptr [rcx - 0x7d] ; ret 0xfc0
0x00000200000207e9 : inc dword ptr [rcx - 0xa] ; ret
0x00000200001f4faf : inc dword ptr [rcx - 0xa] ; ret 0x743f
0x00000200000df5eb : inc dword ptr [rcx - 0xa] ; ret 0xf04
0x0000020000044146 : inc dword ptr [rcx - 0xa] ; ret 0xf08
0x00000200001dc910 : inc dword ptr [rcx - 0xa] ; rol byte ptr [rcx], 0x74 ; ret 0x8d44
0x0000020000524f59 : inc dword ptr [rcx - 0xa] ; sar byte ptr [rdi], 0x8b ; ret
0x0000020000050bd6 : inc dword ptr [rcx - 1] ; ret
0x00000200006645b3 : inc dword ptr [rcx - 1] ; ret 0x8148
0x0000020000701332 : inc dword ptr [rcx - 1] ; ret 0x8349
0x000002000006c1d5 : inc dword ptr [rcx - 1] ; sbb r11b, bpl ; ret
0x000002000018cfb4 : inc dword ptr [rcx - 5] ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x3c76
0x00000200006ca03a : inc dword ptr [rcx - 9] ; ret
0x0000020000526610 : inc dword ptr [rcx] ; add al, ch ; push rax ; ret
0x0000020000412e9f : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000ca862 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add rax, rdx ; jmp 0x200000ca80b
0x0000020000501c0b : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004eb172 : inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000057a0cd : inc dword ptr [rcx] ; mov dword ptr [rdx + 0x10], eax ; ret
0x00000200004eafb1 : inc dword ptr [rcx] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000371395 : inc dword ptr [rcx] ; ret
0x00000200006bb2e6 : inc dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000504505 : inc dword ptr [rcx] ; xor eax, eax ; ret
0x0000020000449a3d : inc dword ptr [rdi + 0x14] ; mov rcx, rdi ; call 0x20000076d19
0x00000200001b5fbb : inc dword ptr [rdi + 0x78] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dd002 : inc dword ptr [rdi + rcx + 0x20] ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200000df1fd : inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005ebe70 : inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x0000020000040d3f : inc dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x000002000065149a : inc dword ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x00000200004b1f3c : inc dword ptr [rdi + rcx + 0x48] ; fild word ptr [rcx - 0x75] ; ret
0x00000200001096de : inc dword ptr [rdi + rcx - 0x44] ; ret
0x0000020000382d14 : inc dword ptr [rdi + rcx - 0x49] ; fadd dword ptr [rcx - 0xa] ; ret
0x0000020000417b7e : inc dword ptr [rdi + rcx - 0x49] ; fadd dword ptr [rcx - 1] ; ret
0x000002000061dd59 : inc dword ptr [rdi + rcx - 0x49] ; pop rbx ; add al, byte ptr [rcx - 0xa] ; ret
0x00000200006f1823 : inc dword ptr [rdi + rcx - 0x49] ; ret 0x8341
0x00000200001f255b : inc dword ptr [rdi + rcx - 0x49] ; ret 0x8b41
0x00000200000c95f6 : inc dword ptr [rdi + rcx - 0x49] ; sub byte ptr [r8 - 0x75], cl ; ret
0x00000200001a10fa : inc dword ptr [rdi + rcx - 0x49] ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000e39e0 : inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000014965d : inc dword ptr [rdi + rcx - 0x4a] ; ret 0x3345
0x00000200001a10dd : inc dword ptr [rdi + rcx - 0x4a] ; xor ecx, dword ptr [rax - 1] ; ret
0x00000200001ae4c3 : inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x00000200006d0bd9 : inc dword ptr [rdi] ; call 0x2000013b029
0x0000020000388743 : inc dword ptr [rdx + 0x6c] ; ret
0x0000020000657ca2 : inc dword ptr [rdx + 0x8058] ; ret
0x000002000015e56f : inc dword ptr [rdx + 0xc] ; ret
0x00000200001a946a : inc dword ptr [rdx + 0xd8] ; ret
0x000002000015e5a6 : inc dword ptr [rdx + 8] ; ret
0x0000020000537fc1 : inc dword ptr [rdx + rcx*4 + 0x1d] ; push rdi ; ret
0x0000020000538042 : inc dword ptr [rdx + rcx*4 + 0x1d] ; salc ; ret 0xffd9
0x0000020000414001 : inc dword ptr [rdx + rcx*4 + 0x5b] ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x000002000018e6f2 : inc dword ptr [rdx + rcx*4 + 0x5e] ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x00000200006e4cec : inc dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rdi
0x00000200006f91bc : inc dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000042f725 : inc dword ptr [rdx] ; add rdx, rcx ; jmp rdx
0x0000020000549f85 : inc dword ptr [rdx] ; jb 0x20000549f98 ; mov eax, 0xc0000189 ; ret
0x00000200005b28b5 : inc dword ptr [rdx] ; je 0x200005b28c8 ; mov eax, 0xc0000002 ; ret
0x00000200005b2abd : inc dword ptr [rdx] ; je 0x200005b2ad0 ; mov eax, 0xc0000002 ; ret
0x00000200005b3c95 : inc dword ptr [rdx] ; je 0x200005b3ca8 ; mov eax, 0xc0000002 ; ret
0x00000200005b3e9d : inc dword ptr [rdx] ; je 0x200005b3eb0 ; mov eax, 0xc0000002 ; ret
0x00000200003653b0 : inc dword ptr [rdx] ; ret
0x000002000064e428 : inc dword ptr [rip + 0x1cede] ; xor eax, eax ; ret
0x000002000064abba : inc dword ptr [rip - 0x3b4040] ; mov r8d, r10d ; jmp 0x2000064abd3
0x000002000044904f : inc dword ptr [rsi + 0x14] ; call 0x20000076d16
0x0000020000449762 : inc dword ptr [rsi + 0x14] ; mov rcx, rsi ; call 0x20000076d19
0x000002000015fa23 : inc dword ptr [rsi + 0x39] ; ret 0x7404
0x00000200003b7fe5 : inc dword ptr [rsi] ; add al, ch ; ret
0x000002000015f874 : inc dword ptr gs:[0x2e40] ; ret
0x00000200003cd780 : inc dword ptr gs:[0x2e44] ; ret
0x000002000038f8f0 : inc dword ptr gs:[0x2e48] ; ret
0x000002000000ec04 : inc dword ptr gs:[0x5504] ; ret
0x000002000015f868 : inc dword ptr gs:[0x5540] ; ret
0x00000200000cd906 : inc dword ptr ss:[rbp + 0x3b] ; ret 0x850f
0x00000200001869b9 : inc eax ; add rsp, 0x28 ; ret
0x00000200003ac4e0 : inc eax ; add rsp, 0x38 ; ret
0x00000200001c3235 : inc eax ; cmp r8, rdx ; jl 0x200001c3224 ; ret
0x00000200006f0b0b : inc eax ; cmp r8d, edx ; jb 0x200006f0b0a ; ret
0x000002000015a2e3 : inc eax ; cmp r8d, r9d ; jl 0x2000015a2dd ; xor eax, eax ; ret
0x00000200006c3899 : inc eax ; cmp rax, 0x40 ; jb 0x200006c387e ; ret
0x000002000064391f : inc eax ; dec rdx ; jne 0x20000643921 ; xor eax, eax ; ret
0x00000200000057a1 : inc eax ; mov word ptr [rcx + 2], ax ; ret
0x000002000013b198 : inc eax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x000002000014ae52 : inc eax ; ret
0x000002000013e4d1 : inc eax ; sub r8b, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x00000200000360d1 : inc ebx ; inc dword ptr [r8] ; ret
0x00000200001639be : inc ebx ; jbe 0x200001639d1 ; mov eax, 1 ; ret
0x000002000007397c : inc ebx ; lea rax, qword ptr [rcx + rax - 2] ; ret
0x000002000057df73 : inc ebx ; lea rax, qword ptr [rip - 0x12f2ac] ; ret
0x000002000057df7b : inc ebx ; lea rax, qword ptr [rip - 0x12f2c4] ; ret
0x000002000057df83 : inc ebx ; lea rax, qword ptr [rip - 0x12f2dc] ; ret
0x000002000057df8b : inc ebx ; lea rax, qword ptr [rip - 0x12f2f4] ; ret
0x000002000057df93 : inc ebx ; lea rax, qword ptr [rip - 0x12f30c] ; ret
0x000002000057df9b : inc ebx ; lea rax, qword ptr [rip - 0x12f324] ; ret
0x000002000057dfa3 : inc ebx ; lea rax, qword ptr [rip - 0x12f33c] ; ret
0x00000200005842b6 : inc ebx ; lea rax, qword ptr [rip - 0x1336ff] ; ret
0x00000200005842be : inc ebx ; lea rax, qword ptr [rip - 0x133727] ; ret
0x00000200005842c6 : inc ebx ; lea rax, qword ptr [rip - 0x13374f] ; ret
0x0000020000112b6f : inc ebx ; lea rax, qword ptr [rip - 0x14bb8] ; ret
0x0000020000112b67 : inc ebx ; lea rax, qword ptr [rip - 0x14c00] ; ret
0x0000020000112b57 : inc ebx ; lea rax, qword ptr [rip - 0x14c10] ; ret
0x0000020000112b5f : inc ebx ; lea rax, qword ptr [rip - 0x14c58] ; ret
0x000002000036e702 : inc ebx ; lea rax, qword ptr [rip - 0x41db] ; ret
0x000002000036e70a : inc ebx ; lea rax, qword ptr [rip - 0x41f3] ; ret
0x000002000036e712 : inc ebx ; lea rax, qword ptr [rip - 0x420b] ; ret
0x000002000036e71a : inc ebx ; lea rax, qword ptr [rip - 0x4223] ; ret
0x000002000036e722 : inc ebx ; lea rax, qword ptr [rip - 0x423b] ; ret
0x000002000036e72a : inc ebx ; lea rax, qword ptr [rip - 0x4253] ; ret
0x000002000036e732 : inc ebx ; lea rax, qword ptr [rip - 0x426b] ; ret
0x00000200004b1fa3 : inc ebx ; mov byte ptr [rip - 0x21efab], 1 ; ret
0x0000020000583b21 : inc ebx ; mov dword ptr [rip - 0x30cb55], edx ; ret
0x0000020000708160 : inc ebx ; mov eax, 0x2000 ; ret
0x000002000064dab5 : inc ebx ; mov eax, 0xc000000d ; ret
0x0000020000067866 : inc ebx ; mov eax, 1 ; ret
0x000002000056609e : inc ebx ; mov eax, 6 ; ret
0x00000200000a9d65 : inc ebx ; nop ; mov al, 1 ; ret
0x000002000058d625 : inc ebx ; nop ; mov eax, 0xc000025f ; ret
0x00000200000738b1 : inc ebx ; xor eax, eax ; ret
0x000002000015410c : inc ecx ; cmp byte ptr [rcx], 0 ; jne 0x20000154111 ; ret
0x000002000015468c : inc ecx ; cmp rax, rdx ; jb 0x2000015468b ; ret
0x00000200000a38b6 : inc ecx ; dec r8 ; jne 0x200000a38b7 ; ret 0
0x00000200000a39b4 : inc ecx ; dec r8 ; jne 0x200000a39b8 ; ret 0
0x00000200000c6e24 : inc ecx ; inc rdx ; jmp 0x200000c6e0d
0x00000200001070a7 : inc ecx ; mov eax, ecx ; ret
0x00000200001540c0 : inc ecx ; test r8, r8 ; jne 0x200001540bd ; ret
0x0000020000060492 : inc edi ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000052ff7 : inc edi ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200004812ed : inc edi ; add r15, 0x18 ; jmp 0x200004812be
0x00000200001a1828 : inc edi ; inc rdx ; jmp 0x200001a1860
0x0000020000151130 : inc edi ; jmp 0x2000006e74e
0x000002000036416a : inc edx ; add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x000002000063505a : inc edx ; dec r8d ; jne 0x2000063505c ; ret
0x0000020000003b9c : inc edx ; jmp 0x20000003b7c
0x00000200000c6e27 : inc edx ; jmp 0x200000c6e0a
0x000002000012f820 : inc edx ; jmp 0x2000012f811
0x000002000013099a : inc edx ; jmp 0x20000130945
0x000002000013b356 : inc edx ; jmp 0x2000013b32d
0x000002000013c1f0 : inc edx ; jmp 0x2000013c1c0
0x00000200001506a5 : inc edx ; jmp 0x20000150645
0x0000020000154f15 : inc edx ; jmp 0x20000154f2d
0x00000200001a182b : inc edx ; jmp 0x200001a185d
0x00000200001e71a4 : inc edx ; jmp 0x200001e718e
0x00000200001f6258 : inc edx ; jmp 0x200001f61f9
0x000002000038c9cb : inc edx ; jmp 0x2000038c992
0x000002000038eea6 : inc edx ; jmp 0x2000038ee82
0x00000200003a15fa : inc edx ; jmp 0x200003a15e3
0x00000200003f9da6 : inc edx ; jmp 0x200003f9d91
0x000002000046f02c : inc edx ; jmp 0x2000046efb7
0x00000200004b1a74 : inc edx ; jmp 0x200004b1a2f
0x00000200004b1a73 : inc edx ; jmp 0x200004b1a30
0x00000200004d200b : inc edx ; jmp 0x200004d1ffc
0x00000200004d984b : inc edx ; jmp 0x200004d97ec
0x00000200004ecafc : inc edx ; jmp 0x200004ecae0
0x000002000050c9dd : inc edx ; jmp 0x2000050c9c8
0x0000020000545544 : inc edx ; jmp 0x2000054555e
0x00000200005a45a2 : inc edx ; jmp 0x200005a4596
0x00000200005a7133 : inc edx ; jmp 0x200005a7125
0x0000020000641c5f : inc edx ; mov dword ptr [rsp + 0x24], r10d ; jmp 0x20000641c33
0x00000200004adbd2 : inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x00000200001eea00 : inc esi ; add r8b, byte ptr [r8] ; jmp 0x200000aacb3
0x00000200001ee9ff : inc esi ; add r8b, byte ptr [r8] ; jmp 0x200000aacb4
0x0000020000169a9c : inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x000002000056e109 : inc esi ; ret 0x48ff
0x00000200005e0a64 : inc esp ; cmp ebp, ebx ; jb 0x200005e0a13 ; jmp 0x2000037ccc5
0x000002000002e37c : inc esp ; jmp 0x2000002e345
0x0000020000496ac7 : inc qword ptr [r13 - 0x75] ; ret
0x0000020000060ae9 : inc qword ptr [r9 - 0x75] ; ret 0xc148
0x00000200000df5ea : inc qword ptr [r9 - 0xa] ; ret 0xf04
0x000002000050afc8 : inc qword ptr [rcx + 3] ; ret 0x4489
0x0000020000003b9b : inc r10 ; jmp 0x20000003b7d
0x0000020000130999 : inc r10 ; jmp 0x20000130946
0x00000200001506a4 : inc r10 ; jmp 0x20000150646
0x0000020000154f14 : inc r10 ; jmp 0x20000154f2e
0x0000020000154f13 : inc r10 ; jmp 0x20000154f2f
0x00000200001e71a3 : inc r10 ; jmp 0x200001e718f
0x00000200003a15f9 : inc r10d ; jmp 0x200003a15e4
0x0000020000641c5e : inc r10d ; mov dword ptr [rsp + 0x24], r10d ; jmp 0x20000641c34
0x000002000041d422 : inc r11d ; mov eax, 1 ; ret
0x00000200005e0a63 : inc r12 ; cmp ebp, ebx ; jb 0x200005e0a14 ; jmp 0x2000037ccc6
0x000002000002e37b : inc r12d ; jmp 0x2000002e346
0x00000200006f0b0a : inc r8d ; cmp r8d, edx ; jb 0x200006f0b0b ; ret
0x000002000015410b : inc rcx ; cmp byte ptr [rcx], 0 ; jne 0x20000154112 ; ret
0x000002000015468b : inc rcx ; cmp rax, rdx ; jb 0x2000015468c ; ret
0x00000200000a38b5 : inc rcx ; dec r8 ; jne 0x200000a38b8 ; ret 0
0x00000200000a39b3 : inc rcx ; dec r8 ; jne 0x200000a39b9 ; ret 0
0x00000200001540bf : inc rcx ; test r8, r8 ; jne 0x200001540be ; ret
0x00000200001a1827 : inc rdi ; inc rdx ; jmp 0x200001a1861
0x0000020000635059 : inc rdx ; dec r8d ; jne 0x2000063505d ; ret
0x00000200000c6e26 : inc rdx ; jmp 0x200000c6e0b
0x000002000013c1ef : inc rdx ; jmp 0x2000013c1c1
0x00000200001a182a : inc rdx ; jmp 0x200001a185e
0x00000200001f6257 : inc rdx ; jmp 0x200001f61fa
0x00000200004d200a : inc rdx ; jmp 0x200004d1ffd
0x00000200004d984a : inc rdx ; jmp 0x200004d97ed
0x00000200004ecafb : inc rdx ; jmp 0x200004ecae1
0x000002000050c9dc : inc rdx ; jmp 0x2000050c9c9
0x0000020000177e20 : inc word ptr [rcx + 0x66] ; ret
0x0000020000648e3b : insb byte ptr [rdi], dx ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000648e1b : insb byte ptr [rdi], dx ; add al, 0 ; add rsp, 0x78 ; ret
0x000002000035fbbb : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000026dcf2 : insb byte ptr [rdi], dx ; add al, dh ; ret 0x6c
0x00000200003d8e36 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; jmp 0x200003d8db0
0x00000200003d4859 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000bce9 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x0000020000100f0f : insb byte ptr [rdi], dx ; and al, 0x10 ; mov dword ptr [r11 + 0x18], ecx ; ret
0x0000020000124f81 : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000002430f : insb byte ptr [rdi], dx ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200003b253d : insb byte ptr [rdi], dx ; and al, 0x20 ; and edx, 1 ; call rdi
0x000002000046d2e9 : insb byte ptr [rdi], dx ; and al, 0x20 ; call r10
0x00000200003aac76 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rax
0x00000200005c4e8e : insb byte ptr [rdi], dx ; and al, 0x20 ; call rdi
0x0000020000443be4 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200005acb96 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov dword ptr [rsp + 0x20], edi ; call r14
0x0000020000497247 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000046d2e4 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x0000020000464488 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003c9964 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000391aa8 : insb byte ptr [rdi], dx ; and al, 0x28 ; pop rsi ; ret
0x0000020000026edf : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000cfa1 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c73c8 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000032219 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039645a : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000cd039 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004caaf0 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f6147 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000036f294 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049efd8 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000051d6c4 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001415e6 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b2565 : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000018654a : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e1d33 : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000045c7ab : insb byte ptr [rdi], dx ; and al, 0x60 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003553a : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001ba664 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x000002000016991f : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x000002000004b087 : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x2000004ac57
0x0000020000442554 : insb byte ptr [rdi], dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x000002000008f2ad : insb byte ptr [rdi], dx ; fstp xword ptr [rdi + 0x46bcb1d7] ; ret
0x0000020000041751 : insb byte ptr [rdi], dx ; idiv bh ; push rsi ; ret
0x00000200000921aa : insb byte ptr [rdi], dx ; imul dword ptr [rbx] ; cdq ; ret
0x00000200004a7b06 : insb byte ptr [rdi], dx ; imul eax, dword ptr [rax], 0x3b416600 ; ret
0x0000020000362f6a : insb byte ptr [rdi], dx ; inc dword ptr [rcx + 0x3b] ; enter 0x2172, -0xa ; ret 0x7504
0x0000020000506cf0 : insb byte ptr [rdi], dx ; int1 ; ret
0x000002000008e326 : insb byte ptr [rdi], dx ; jae 0x2000008e316 ; ret
0x000002000041fa99 : insb byte ptr [rdi], dx ; leave ; dec dword ptr [rcx - 0x39] ; ret
0x000002000012f8a7 : insb byte ptr [rdi], dx ; mov dl, 0xc ; add bh, bh ; ret
0x000002000015ffe4 : insb byte ptr [rdi], dx ; mov esp, 0xb60ffff0 ; ret
0x00000200005e79fb : insb byte ptr [rdi], dx ; out dx, eax ; dec dword ptr [rax - 0x73] ; sub byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200003d4708 : insb byte ptr [rdi], dx ; push 0x3b660000 ; ret 0x4075
0x00000200000679b4 : insb byte ptr [rdi], dx ; push rax ; add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000005d6a9 : insb byte ptr [rdi], dx ; push rax ; add byte ptr [rax], al ; ret
0x000002000064358c : insb byte ptr [rdi], dx ; push rsi ; call 0x20000270045
0x0000020000060ecc : insb byte ptr [rdi], dx ; ret
0x0000020000139b77 : insb byte ptr [rdi], dx ; ret 0x400c
0x00000200002613ec : insb byte ptr [rdi], dx ; ret 0x41
0x00000200006694c4 : insb byte ptr [rdi], dx ; ret 0x48ff
0x00000200000f92a4 : insb byte ptr [rdi], dx ; ret 0x4c08
0x0000020000139b90 : insb byte ptr [rdi], dx ; ret 0x90c
0x0000020000139bfd : insb byte ptr [rdi], dx ; ret 0xa0c
0x00000200006c14bd : insb byte ptr [rdi], dx ; ret 0xc7ff
0x00000200004d2091 : insb byte ptr [rdi], dx ; ret 0xebff
0x00000200005b4798 : insb byte ptr [rdi], dx ; ret 0xffcd
0x000002000048fb70 : insb byte ptr [rdi], dx ; ret 0xffe3
0x00000200003fad90 : insb byte ptr [rdi], dx ; ret 0xfff5
0x0000020000123abc : insb byte ptr [rdi], dx ; ret 0xfffa
0x00000200001af1c0 : insb byte ptr [rdi], dx ; ret 0xffff
0x00000200000312ac : insb byte ptr [rdi], dx ; ret 7
0x0000020000030872 : insb byte ptr [rdi], dx ; xor al, byte ptr [rax] ; call rax
0x000002000010d65c : insb byte ptr [rdi], dx ; xor eax, 0x200f4400 ; ret
0x0000020000009e2d : insd dword ptr [rdi], dx ; adc dword ptr [rax], eax ; ret
0x00000200005973d7 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, bh ; ret
0x00000200000eb725 : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rcx - 0x4b], al ; add esi, esi ; ret 0xf04
0x00000200000e8bfd : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000035fbcd : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200000e5061 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; jmp 0x200000e4aec
0x00000200004f4097 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000019447c : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000001f7fd : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x00000200004c1515 : insd dword ptr [rdi], dx ; and byte ptr [rcx + 3], al ; ret 0x4589
0x000002000064ceb6 : insd dword ptr [rdi], dx ; call 0x2000026f014
0x000002000064cdff : insd dword ptr [rdi], dx ; call 0x20000270044
0x000002000001c8dd : insd dword ptr [rdi], dx ; cmp dh, dh ; ret
0x0000020000139d0f : insd dword ptr [rdi], dx ; fbld dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200001cbdb9 : insd dword ptr [rdi], dx ; idiv edi ; jmp 0x20000142a8f
0x000002000014ee97 : insd dword ptr [rdi], dx ; je 0x2000014eea2 ; xor eax, eax ; ret
0x000002000057f991 : insd dword ptr [rdi], dx ; mov dl, 0xff ; add rsp, 0x38 ; ret
0x000002000001e296 : insd dword ptr [rdi], dx ; mov eax, 2 ; ret
0x00000200004de074 : insd dword ptr [rdi], dx ; mov esp, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200005a5bc6 : insd dword ptr [rdi], dx ; or al, ch ; sysenter
0x000002000000e0e2 : insd dword ptr [rdi], dx ; or dword ptr [rax], eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000136c89 : insd dword ptr [rdi], dx ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200000910c6 : insd dword ptr [rdi], dx ; push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x00000200004c7ce9 : insd dword ptr [rdi], dx ; push rax ; push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x000002000001f202 : insd dword ptr [rdi], dx ; ret
0x00000200006671e3 : insd dword ptr [rdi], dx ; ret 0x48ff
0x00000200006c4bbf : insd dword ptr [rdi], dx ; ret 0xebff
0x00000200005dce07 : insd dword ptr [rdi], dx ; ret 0xffd0
0x0000020000503dcf : insd dword ptr [rdi], dx ; ret 0xffd6
0x00000200001f7ebd : insd dword ptr [rdi], dx ; ret 0xffe3
0x000002000038a8c7 : insd dword ptr [rdi], dx ; ret 0xfff5
0x0000020000700241 : insd dword ptr [rdi], dx ; ror byte ptr [rax - 0x3f], 1 ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000001e333 : insd dword ptr [rdi], dx ; sbb al, 0 ; ret
0x00000200003656e6 : insd dword ptr [rdi], dx ; sbb byte ptr [rbp + 0x3b], al ; ret
0x000002000066614f : insd dword ptr [rdi], dx ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000070757b : insd dword ptr [rdi], dx ; shr al, 0xce ; ret
0x00000200005cc8a3 : insd dword ptr [rdi], dx ; stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xce8b40] ; ret
0x0000020000030739 : insd dword ptr [rdi], dx ; xor al, byte ptr [rax] ; call rax
0x00000200004e4519 : insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200005dd45f : int 0x10
0x000002000014226f : int 0x12
0x00000200000322a6 : int 0x29
0x00000200001a95fc : int 0x41
0x0000020000172d6d : int 0x44
0x000002000018f221 : int 0x48
0x0000020000527016 : int 0x4c
0x0000020000657d27 : int 0x4f
0x000002000065500f : int 0x6d
0x00000200001b7c58 : int 0x74
0x00000200000c3cda : int 0x75
0x000002000000414b : int 0x80
0x000002000070e277 : int 0x8e
0x000002000049d155 : int 0xc1
0x000002000043bece : int 0xc2
0x0000020000104c2d : int 0xc3
0x00000200005b22fd : int 0xcb
0x0000020000133fdb : int 0xe8
0x00000200006c053a : int 0xe9
0x00000200003f436f : int 0xea
0x00000200000126ee : int 0xeb
0x00000200006f6193 : int 0xfc
0x00000200005566b9 : int 0xfe
0x00000200000e74b4 : int 0xff
0x00000200000b89a4 : int 3
0x000002000050b819 : int1 ; adc dword ptr [rax], eax ; mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x00000200003a3d04 : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007ed75 : int1 ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc2
0x00000200005fcc68 : int1 ; add byte ptr [rax], al ; shr cl, 0xdc ; ret 0xffe6
0x00000200000a622c : int1 ; add dl, byte ptr [rbx] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x0000020000053822 : int1 ; add eax, 0x74c08500 ; ret 0x8d48
0x000002000016982c : int1 ; add rsp, 0x28 ; ret
0x000002000006ad4d : int1 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000052667a : int1 ; call 0x20000152e14
0x00000200001e96df : int1 ; call qword ptr [rax - 0x113dc417]
0x00000200001c97d0 : int1 ; call qword ptr [rax - 0xc833d17]
0x0000020000661353 : int1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x00000200003d4c57 : int1 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000037ebcc : int1 ; dec dword ptr [rax + 0x3b] ; ret 0xa74
0x00000200003673d5 : int1 ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x0000020000532f18 : int1 ; dec dword ptr [rax - 0x73] ; shr r8b, 1 ; ret
0x0000020000147790 : int1 ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x000002000014a106 : int1 ; dec dword ptr [rax - 0x75] ; pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x000002000014a119 : int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f9f51 : int1 ; dec dword ptr [rbx + 0x18495] ; add dh, dh ; ret 0xf40
0x00000200000602cb : int1 ; dec dword ptr [rbx] ; ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x00000200004419f9 : int1 ; dec dword ptr [rdi] ; test dword ptr [rdx], ebx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200004a896a : int1 ; dec dword ptr [rsi - 0x75] ; jl 0x200004a8941 ; sbb byte ptr [rbp + 3], al ; ret 0x34d
0x00000200001c0d38 : int1 ; dec esp ; nop ; mov eax, 0xc000000e ; ret
0x0000020000164e0e : int1 ; dec esp ; xor al, al ; add rsp, 0x38 ; ret
0x00000200005dfe25 : int1 ; enter -0x6f01, -0x17 ; ret 0xe54c
0x000002000046ecb5 : int1 ; idiv edi ; inc dword ptr [rcx - 0x75] ; ret
0x000002000036b0dd : int1 ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000605b9b : int1 ; inc dword ptr [rbp - 0xf98b01] ; ret 0xefd1
0x00000200001e6aaa : int1 ; inc dword ptr [rcx - 0x75] ; ret
0x000002000036e906 : int1 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000035f1f9 : int1 ; inc dword ptr [rcx - 1] ; ret
0x00000200001c97cf : int1 ; int1 ; call qword ptr [rax - 0xc833d17]
0x00000200001f7fcb : int1 ; int1 ; out -1, eax ; nop ; jmp 0x20000034252
0x00000200003a9f23 : int1 ; jae 0x200003a9f4f ; add bh, bh ; ret
0x0000020000003b99 : int1 ; jb 0x20000003beb ; inc edx ; jmp 0x20000003b7f
0x000002000062677a : int1 ; jmp 0x1ffc3edb086
0x00000200000c8a34 : int1 ; jmp 0x200000c89ae
0x000002000018fdb7 : int1 ; jmp 0x2000018fe1f
0x00000200001f4e43 : int1 ; jmp rax
0x00000200005a3c63 : int1 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; je 0x200005a3c97 ; js 0x200005a3c00 ; ret
0x00000200000c02d7 : int1 ; mov al, 1 ; ret
0x0000020000549141 : int1 ; mov cl, 0xb0 ; mov edi, edx ; call 0x2000016af18
0x0000020000520605 : int1 ; mov ebp, r12d ; call 0x2000014b79b
0x00000200000bdf7a : int1 ; mov rax, qword ptr [rax + 8] ; ret
0x000002000019c0c5 : int1 ; mov rax, rdx ; ret
0x00000200003fd2e4 : int1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000111288 : int1 ; or eax, 0xc4834800 ; pop rbx ; ret
0x00000200001f7fcc : int1 ; out -1, eax ; nop ; jmp 0x20000034251
0x00000200001ed224 : int1 ; push qword ptr [rbx] ; shr cl, 0xf8 ; ret 0xfff2
0x000002000050468f : int1 ; push rdi ; ret
0x0000020000151135 : int1 ; push rsi ; ret
0x00000200001cbf5c : int1 ; push rsi ; ret 0xf10
0x000002000008e58e : int1 ; ret
0x000002000041a4ce : int1 ; ret 0x48ff
0x000002000048a938 : int1 ; ret 0x65ff
0x0000020000443cd3 : int1 ; ret 0xe9ff
0x0000020000661b53 : int1 ; sahf ; ret 0x85ff
0x0000020000085679 : int1 ; sbb bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x00000200004ff6d3 : int1 ; sbb byte ptr [r8], al ; ret
0x000002000004d2fa : int1 ; shr rax, 0xc ; cmp eax, dword ptr [rbx + 0x1c] ; jbe 0x2000004d2cf ; jmp 0x2000004d314
0x000002000006e904 : int1 ; std ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000ae48b : int1 ; stosb byte ptr [rdi], al ; adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006648db : int1 ; stosd dword ptr [rdi], eax ; ret 0x33ff
0x0000020000364733 : int1 ; sub bh, bh ; ljmp ptr [rax - 0x327af0ff] ; ret 0
0x00000200001172da : int1 ; test r8, r8 ; je 0x200001172ec ; mov dword ptr [r8], edx ; ret
0x000002000013e613 : int1 ; wait ; sbb dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000037ebdc : int1 ; xor eax, eax ; ret
0x00000200004e68d8 : int1 ; xor ebx, ebx ; call 0x20000142b5d
0x000002000007360e : int1 ; xor rax, rax ; ret
0x000002000022c639 : invd ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x00000200002090a9 : invd ; add byte ptr [rsi + rax], al ; mov byte ptr [rsi], dl ; sysenter
0x000002000021ebfd : invd ; add byte ptr [rsi + rax], al ; or al, 6 ; sysenter
0x000002000024ae29 : invd ; add byte ptr [rsi + rax], al ; or al, byte ptr [rsi] ; sysenter
0x0000020000249a4d : invd ; add byte ptr [rsi + rax], al ; sbb dword ptr [rsi], eax ; sysenter
0x0000020000255d81 : invd ; add byte ptr [rsi + rdx], al ; add byte ptr [rsi], al ; sysenter
0x0000020000046fd8 : invlpg byte ptr [rcx] ; ret
0x00000200004f4420 : iretd ; add rsi, rax ; call 0x200001183bf
0x000002000003484b : iretd ; call 0x20000010a83
0x00000200003e3f80 : iretd ; call 0x20000012a64
0x00000200003e3f80 : iretd ; call 0x20000012a67
0x00000200004154e4 : iretd ; call 0x200000392b8
0x000002000041a4c0 : iretd ; call 0x20000049000
0x0000020000066645 : iretd ; call 0x2000004c4f8
0x00000200004b8441 : iretd ; call 0x2000004d1c7
0x0000020000426e57 : iretd ; call 0x20000054294
0x0000020000426c97 : iretd ; call 0x200000547ec
0x0000020000428ef7 : iretd ; call 0x20000056fc0
0x000002000059da0a : iretd ; call 0x20000058938
0x00000200006c7355 : iretd ; call 0x200000635af
0x0000020000415487 : iretd ; call 0x20000071007
0x0000020000443f92 : iretd ; call 0x20000072e44
0x0000020000449a42 : iretd ; call 0x20000076d14
0x0000020000448da9 : iretd ; call 0x20000076da4
0x00000200004cafac : iretd ; call 0x200000771c3
0x00000200004896a3 : iretd ; call 0x200000b6724
0x000002000048968f : iretd ; call 0x200000b8ae4
0x000002000048aa98 : iretd ; call 0x200000b90e4
0x000002000048aafb : iretd ; call 0x200000b9884
0x000002000048aaab : iretd ; call 0x200000b9b04
0x00000200003659ff : iretd ; call 0x200000bd7b9
0x000002000049d010 : iretd ; call 0x200000bf2c4
0x00000200005c2e2c : iretd ; call 0x200000cf0e7
0x00000200004cfc8a : iretd ; call 0x200000f22c4
0x00000200004cc0af : iretd ; call 0x200000f8d54
0x000002000002ae1f : iretd ; call 0x200000f9ed9
0x000002000070efad : iretd ; call 0x200000fb20b
0x00000200004fd827 : iretd ; call 0x2000012ac4c
0x0000020000601c7a : iretd ; call 0x2000012deaf
0x00000200005755c5 : iretd ; call 0x20000131813
0x000002000013d4a3 : iretd ; call 0x2000013d827
0x0000020000635381 : iretd ; call 0x200001415fb
0x0000020000520b0e : iretd ; call 0x2000014b864
0x00000200003718b9 : iretd ; call 0x2000014db83
0x00000200003718cd : iretd ; call 0x2000014dbd3
0x00000200005222e5 : iretd ; call 0x20000150a20
0x0000020000525a5b : iretd ; call 0x20000150f48
0x000002000053d890 : iretd ; call 0x2000015e534
0x0000020000647419 : iretd ; call 0x20000173637
0x0000020000185828 : iretd ; call 0x20000181a3b
0x00000200000ee6fa : iretd ; call 0x2000018a907
0x0000020000590393 : iretd ; call 0x2000019c5a3
0x00000200005903b8 : iretd ; call 0x2000019c5f3
0x0000020000590626 : iretd ; call 0x2000019c8c3
0x00000200001a521e : iretd ; call 0x200001a4940
0x00000200001acb40 : iretd ; call 0x200001a8d63
0x00000200001b2d34 : iretd ; call 0x2000026f013
0x00000200006407e7 : iretd ; call 0x2000026f014
0x00000200001fb15b : iretd ; call 0x2000026f019
0x000002000059f3b9 : iretd ; call 0x2000038b66f
0x00000200005d9335 : iretd ; call 0x200003d5583
0x000002000016b32d : iretd ; call 0x20000417633
0x0000020000018e83 : iretd ; call 0x2000042186b
0x0000020000416ea8 : iretd ; call 0x2000042316b
0x00000200005d5ae4 : iretd ; call 0x20000441dd3
0x000002000039a98d : iretd ; call 0x20000466c93
0x000002000047eabe : iretd ; call 0x2000047e69b
0x000002000013b683 : iretd ; call 0x20000497967
0x000002000051d3e3 : iretd ; call 0x2000049961b
0x0000020000541532 : iretd ; call 0x2000054161f
0x000002000064313e : iretd ; call 0x20000642e38
0x000002000063fdb3 : iretd ; call 0x20000648177
0x000002000066009f : iretd ; call 0x2000065c397
0x00000200006f9e5b : iretd ; call 0x200006f6153
0x000002000050b821 : iretd ; call qword ptr [rax]
0x00000200004fbdf6 : iretd ; call qword ptr [rdi + 0x100]
0x00000200001c5095 : iretd ; call qword ptr [rip + 0xb937c]
0x00000200001f4ae4 : iretd ; call r10
0x00000200001264ed : iretd ; call r12
0x000002000002590c : iretd ; call r14
0x0000020000121e1f : iretd ; call r15
0x00000200001a5c53 : iretd ; call r9
0x0000020000033fa4 : iretd ; call rax
0x00000200001d13cd : iretd ; call rbx
0x000002000040331c : iretd ; call rdx
0x0000020000067410 : iretd ; call rsi
0x0000020000381c3a : iretd ; inc dword ptr [rbp + 0x75840fc0] ; call qword ptr [rax]
0x0000020000381cc7 : iretd ; inc dword ptr [rbp - 0x207bf040] ; call qword ptr [rax]
0x0000020000381cad : iretd ; inc dword ptr [rbp - 0x607bf040] ; call qword ptr [rax]
0x000002000069bbb5 : iretd ; je 0x2000069bbca ; cmp ecx, 2 ; je 0x2000069bbca ; mov eax, edx ; jmp 0x2000069bc04
0x00000200001133cd : iretd ; jmp 0x1ffc39d33cc
0x00000200001dfbe0 : iretd ; jmp 0x200000cede4
0x00000200001dad6e : iretd ; jmp 0x200000dedcf
0x00000200001dadf8 : iretd ; jmp 0x200000dedde
0x000002000044426d : iretd ; jmp 0x20000444234
0x0000020000496905 : iretd ; jmp 0x20000496701
0x000002000001809c : iretd ; jmp rcx
0x00000200001df49e : iretd ; lock dec dword ptr [rax - 0x3f] ; call 0x1ffc2593cd1
0x000002000064ae94 : iretd ; mov dword ptr [rsi + 0xa8], ebp ; call 0x200000a7119
0x00000200003b57ef : iretd ; mov dword ptr [rsp + 0x20], 1 ; call rdi
0x000002000062fb41 : iretd ; mov dword ptr [rsp + 0x20], 2 ; call rdi
0x0000020000486058 : iretd ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200005c4e8b : iretd ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000048758f : iretd ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200005c5413 : iretd ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x00000200004ea24d : iretd ; mov dword ptr [rsp + 0x40], esi ; call rax
0x0000020000489586 : iretd ; mov ebx, 2 ; call 0x200000b6729
0x0000020000423b7d : iretd ; mov esi, eax ; call 0x2000004fa8a
0x00000200000e7c28 : iretd ; mov qword ptr [rsp + 0x20], rax ; call 0x200000f3ed8
0x0000020000037c08 : iretd ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006313eb : iretd ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000064aeff : iretd ; mov qword ptr [rsp + 0x20], rdi ; call 0x200000a7118
0x00000200004845dc : iretd ; mov r14b, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000064c1dc : iretd ; mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x0000020000484607 : iretd ; mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000016c232 : iretd ; mov rax, qword ptr [rip + 0x115536] ; call rax
0x000002000016ac36 : iretd ; mov rax, qword ptr [rip + 0x1ec87a] ; call rax
0x0000020000030734 : iretd ; mov rax, qword ptr [rip + 0x326d7c] ; call rax
0x0000020000010df3 : iretd ; mov rax, rsi ; call rax
0x0000020000487526 : iretd ; mov rdx, r12 ; call rdi
0x000002000048bcd6 : iretd ; mov rdx, rax ; call 0x200000b4337
0x0000020000645ceb : iretd ; mov rsi, rax ; call rbx
0x0000020000175f1e : iretd ; xor r8d, r8d ; call rax
0x000002000001b291 : ja 0x2000001b29c ; sub rax, rcx ; ret
0x000002000001de29 : ja 0x2000001de32 ; xor al, al ; ret
0x000002000001e2b3 : ja 0x2000001e2d7 ; mov eax, 4 ; ret
0x000002000001e2c8 : ja 0x2000001e2f5 ; mov eax, 1 ; ret
0x000002000001e2d3 : ja 0x2000001e2f5 ; mov eax, 8 ; ret
0x0000020000020be0 : ja 0x20000020be7 ; ret
0x000002000002335d : ja 0x20000023368 ; sub rax, rcx ; ret
0x000002000002dc6c : ja 0x2000002dc79 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000040036 : ja 0x2000004004e ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000008e2de : ja 0x2000008e28c ; push rcx ; ret 0xcce4
0x000002000008ecd0 : ja 0x2000008ecfd ; ret
0x00000200000917b7 : ja 0x200000917d1 ; ret
0x00000200000a38eb : ja 0x200000a38e2 ; ret 0
0x00000200000a38ea : ja 0x200000a38e3 ; ret 0
0x00000200000a737b : ja 0x200000a7369 ; mov qword ptr [rcx + 0x168], rax ; ret
0x00000200000a735e : ja 0x200000a73ab ; ret
0x00000200000ca969 : ja 0x200000ca970 ; ret
0x00000200000e797b : ja 0x200000e799d ; add byte ptr [rax + 3], cl ; ret 0x349
0x000002000010570a : ja 0x20000105711 ; ret
0x000002000012cd0e : ja 0x2000012cd15 ; ret
0x0000020000140130 : ja 0x20000140139 ; sbb eax, eax ; ret
0x0000020000141d05 : ja 0x20000141ccd ; adc al, 0 ; xor eax, eax ; ret
0x00000200001487ce : ja 0x200001487d5 ; ret
0x00000200001491d0 : ja 0x20000149182 ; std ; dec dword ptr [rax - 0x7d] ; ret 0xb904
0x0000020000149fae : ja 0x20000149fca ; add byte ptr [rax + rax], al ; add byte ptr [rax], al ; call rdi
0x0000020000156e90 : ja 0x20000156e95 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001857ee : ja 0x200001857e6 ; sbb eax, eax ; not eax ; and eax, 2 ; ret
0x000002000019a9d8 : ja 0x2000019a9e7 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x000002000019c003 : ja 0x2000019c014 ; movzx eax, cx ; sub eax, 0x16 ; ret
0x000002000019c01b : ja 0x2000019c029 ; movzx eax, cx ; sub eax, edx ; ret
0x000002000019c01b : ja 0x2000019c02a ; movzx eax, cx ; sub eax, edx ; ret
0x00000200001aef33 : ja 0x200001aef39 ; add bh, bh ; ret
0x000002000035da92 : ja 0x2000035dac7 ; mov rdx, r12 ; mov rcx, rbx ; call r8
0x000002000036cfc4 : ja 0x2000036cfcd ; mov al, 1 ; ret
0x000002000037bd38 : ja 0x2000037bd4c ; cmp r8, rdx ; setbe al ; ret
0x000002000037f332 : ja 0x2000037f33d ; mov al, r8b ; ret
0x00000200003b8e34 : ja 0x200003b8e5b ; jmp 0x200003b8e12
0x00000200003c794e : ja 0x200003c7961 ; lea eax, dword ptr [rcx*4 + 8] ; ret
0x00000200003fd18a : ja 0x200003fd196 ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x00000200003fd8bb : ja 0x200003fd8c4 ; mov al, cl ; ret
0x000002000040620d : ja 0x2000040621c ; sbb eax, eax ; add eax, 2 ; ret
0x00000200004223f2 : ja 0x200004223f9 ; ret
0x0000020000425e5e : ja 0x20000425e6f ; movzx eax, cx ; sub eax, 0x20 ; ret
0x0000020000428cbd : ja 0x200004299dd ; call 0x20000050f59
0x000002000043becd : ja 0x2000043be9e ; ret 0xb0ff
0x000002000043c6d9 : ja 0x2000043c6d2 ; ret 0xe9ff
0x000002000046a9ec : ja 0x2000046a982 ; fsubr st(0) ; jl 0x2000046a97e ; sar bh, 0x8b ; ret
0x000002000047cd20 : ja 0x2000047cd0f ; push qword ptr [rdx - 0x34a917ff] ; ret
0x00000200004896a5 : ja 0x20000489679 ; ret 0x44ff
0x0000020000489a05 : ja 0x20000489a07 ; ret 0x4cff
0x0000020000495774 : ja 0x200004957d7 ; mov qword ptr [rdi + 0x40], rbx ; call 0x200000b9b09
0x00000200004a2f55 : ja 0x200004a2fc9 ; ret
0x00000200004c51a6 : ja 0x200004c51b5 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004e4467 : ja 0x200004e446e ; ret
0x00000200004ee234 : ja 0x200004ee245 ; mov qword ptr [rcx + 0x20], rdx ; xor eax, eax ; ret
0x00000200004f22b2 : ja 0x200004f22bb ; mov eax, ecx ; ret
0x00000200004f32a6 : ja 0x200004f32b5 ; jae 0x200004f32c3 ; or eax, 0xffffffff ; ret
0x00000200004fb10f : ja 0x200004fb0d5 ; xor al, al ; ret
0x000002000050c9d7 : ja 0x2000050c962 ; mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000050c9ce
0x00000200005122de : ja 0x200005122f3 ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000052656d : ja 0x20000526529 ; ret
0x0000020000532f17 : ja 0x20000532f13 ; dec dword ptr [rax - 0x73] ; shr r8b, 1 ; ret
0x000002000053f945 : ja 0x2000053f9c8 ; mov bl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000544c35 : ja 0x20000544c99 ; mov bh, 0xff ; add rsp, 0x38 ; ret
0x0000020000579870 : ja 0x2000057981c ; jmp qword ptr [rbx]
0x0000020000589413 : ja 0x20000589426 ; movzx eax, r9w ; add eax, 0x20 ; ret
0x000002000058eaed : ja 0x2000058eafc ; movzx eax, di ; add eax, edx ; jmp 0x2000058eaff
0x000002000060364d : ja 0x2000060361e ; dec dword ptr [rbx + rcx*4 + 4] ; ret 0x8d48
0x00000200006078cf : ja 0x200006078a0 ; call qword ptr [rax - 0x2057aa17]
0x0000020000643625 : ja 0x20000643636 ; sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x000002000064c234 : ja 0x2000064c241 ; movzx eax, r10b ; jmp 0x2000064c24d
0x000002000064c2df : ja 0x2000064c2ec ; movzx eax, r10b ; jmp 0x2000064c2f8
0x000002000064c397 : ja 0x2000064c3a4 ; movzx eax, r10b ; jmp 0x2000064c3b0
0x000002000064c468 : ja 0x2000064c475 ; movzx eax, r10b ; jmp 0x2000064c481
0x0000020000661ecd : ja 0x20000661e6c ; ret 0x48ff
0x0000020000665755 : ja 0x20000665702 ; ret 0xb9ff
0x0000020000666df5 : ja 0x20000666d84 ; movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; js 0x20000666e78 ; ret 0x48ff
0x00000200006d1102 : ja 0x200006d10f8 ; lea eax, dword ptr [r8 - 0x37] ; jmp 0x200006d10d4
0x00000200006d1101 : ja 0x200006d10f9 ; lea eax, dword ptr [r8 - 0x37] ; jmp 0x200006d10d5
0x000002000000587f : jae 0x20000005876 ; mov eax, 1 ; ret
0x000002000000586d : jae 0x20000005876 ; xor eax, eax ; ret
0x000002000000660d : jae 0x20000006650 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000007570 : jae 0x20000007598 ; mov rsp, r11 ; pop rdi ; ret
0x000002000000d006 : jae 0x2000000d02e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000019272 : jae 0x20000019292 ; mov rsp, r11 ; pop rdi ; ret
0x000002000001ae0e : jae 0x2000001ae3e ; mov rsp, r11 ; pop rdi ; ret
0x000002000001de21 : jae 0x2000001de2a ; mov al, 1 ; ret
0x000002000002027e : jae 0x200000202a6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000023e20 : jae 0x20000023e1b ; mov eax, 1 ; ret
0x0000020000023e12 : jae 0x20000023e1b ; xor eax, eax ; ret
0x000002000002b0e4 : jae 0x2000002b160 ; add eax, dword ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8844
0x00000200000362a9 : jae 0x200000362d9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000038bca : jae 0x20000038b5d ; mov byte ptr [r8], bpl ; jmp 0x20000038b5d
0x000002000004001b : jae 0x20000040039 ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x00000200000588c1 : jae 0x200000588d1 ; cmp r8, rcx ; seta al ; ret
0x0000020000059450 : jae 0x2000005948b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000059cf9 : jae 0x20000059d21 ; mov rsp, r11 ; pop rdi ; ret
0x000002000005a9c7 : jae 0x2000005a9f5 ; jne 0x2000005a97f ; mov rcx, rbx ; jmp 0x2000005a99a
0x000002000005d3a9 : jae 0x2000005d3d9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000006053e : jae 0x20000060547 ; mov al, cl ; ret
0x00000200000637c1 : jae 0x20000063775 ; xor eax, eax ; jmp 0x200000637a6
0x0000020000066f3b : jae 0x20000066f29 ; xor al, al ; ret
0x000002000006fa99 : jae 0x2000006fb19 ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000008dd2a : jae 0x2000008dd75 ; or ebx, dword ptr [rdi - 0x6b] ; ret
0x000002000008e327 : jae 0x2000008e315 ; ret
0x00000200000aec0a : jae 0x200000aec17 ; add rsp, 0x28 ; ret
0x00000200000b676f : jae 0x200000b6790 ; ret
0x00000200000d30f9 : jae 0x200000d3108 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d4c27 : jae 0x200000d4c6a ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000d5b6d : jae 0x200000d5b78 ; mov qword ptr [r8], rax ; ret
0x00000200000dcd35 : jae 0x200000dcd65 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000faba9 : jae 0x200000fabd1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000100fe0 : jae 0x20000101014 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000100fdf : jae 0x20000101015 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000101e2f : jae 0x20000101e41 ; add dh, dh ; ret
0x000002000010c12b : jae 0x2000010c15b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000111af5 : jae 0x20000111ad1 ; mov rax, qword ptr [r8 + 0x80] ; ret
0x0000020000115aeb : jae 0x20000115b0b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001171ed : jae 0x2000011720d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000119049 : jae 0x20000119084 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200001190f3 : jae 0x2000011912e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000011c322 : jae 0x2000011c35d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001239c9 : jae 0x200001239d2 ; xor eax, eax ; ret
0x000002000012b95a : jae 0x2000012b982 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012f242 : jae 0x2000012f250 ; movzx eax, cx ; sub eax, edx ; ret
0x000002000012f242 : jae 0x2000012f251 ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000130afd : jae 0x20000130b30 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000131c31 : jae 0x20000131c26 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000132a51 : jae 0x20000132a60 ; mov eax, 1 ; ret
0x0000020000136c41 : jae 0x20000136c4e ; add rsp, 0x38 ; ret
0x000002000013c865 : jae 0x2000013c8a0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001400e9 : jae 0x200001400e1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000143bb7 : jae 0x20000143bdf ; mov rsp, r11 ; pop rdi ; ret
0x000002000014d928 : jae 0x2000014d976 ; mov r8d, edx ; jmp 0x2000014d976
0x00000200001530b3 : jae 0x200001530e3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000154f0e : jae 0x20000154f42 ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000154f34
0x0000020000159108 : jae 0x20000159111 ; xor al, al ; ret
0x000002000015b535 : jae 0x2000015b578 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000015eb44 : jae 0x2000015eb53 ; mov eax, 0xc000014c ; ret
0x00000200001639ba : jae 0x200001639c5 ; or eax, 0xffffffff ; ret
0x0000020000165f19 : jae 0x20000165f39 ; mov rsp, r11 ; pop rdi ; ret
0x000002000016b445 : jae 0x2000016b478 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000016be9b : jae 0x2000016bea4 ; mov al, 1 ; ret
0x000002000016ee22 : jae 0x2000016ee4a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000170f9c : jae 0x20000170fdf ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000171166 : jae 0x200001711a9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000017bcaf : jae 0x2000017bcdf ; mov rsp, r11 ; pop rdi ; ret
0x000002000017f6d1 : jae 0x2000017f701 ; mov rsp, r11 ; pop rdi ; ret
0x000002000017f8f1 : jae 0x2000017f921 ; mov rsp, r11 ; pop rdi ; ret
0x000002000018014a : jae 0x2000018017a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001857e3 : jae 0x200001857ec ; xor eax, eax ; ret
0x0000020000186731 : jae 0x20000186759 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000187ef1 : jae 0x20000187f09 ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x0000020000187ef0 : jae 0x20000187f0a ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x000002000018f36b : jae 0x2000018f39b ; mov rsp, r11 ; pop rdi ; ret
0x000002000019290a : jae 0x2000019292a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001955e3 : jae 0x20000195603 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000196f74 : jae 0x20000196fb7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000197dde : jae 0x20000197e0e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000198c42 : jae 0x20000198c6a ; mov rsp, r11 ; pop rdi ; ret
0x000002000019c0c4 : jae 0x2000019c0bb ; mov rax, rdx ; ret
0x000002000019c0c4 : jae 0x2000019c0bc ; mov rax, rdx ; ret
0x000002000019c0fd : jae 0x2000019c0f6 ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x000002000019d0ef : jae 0x2000019d117 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001a5ea7 : jae 0x200001a5e6b ; xor eax, eax ; ret
0x00000200001a6a1c : jae 0x200001a6a27 ; or eax, 0xffffffff ; ret
0x00000200001b335a : jae 0x200001b3368 ; mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200001b401a : jae 0x200001b404a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b44e0 : jae 0x200001b4510 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b5dad : jae 0x200001b5ddd ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bd475 : jae 0x200001bd4b8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001be866 : jae 0x200001be875 ; mov eax, 1 ; ret
0x00000200001c31fe : jae 0x200001c322e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c47d5 : jae 0x200001c47f4 ; add dh, dh ; ret
0x00000200001c5656 : jae 0x200001c565f ; xor eax, eax ; ret
0x00000200001db4f9 : jae 0x200001db50c ; mov rcx, rbx ; call 0x20000067807
0x00000200001db5d5 : jae 0x200001db5e8 ; mov rcx, rbx ; call 0x20000067807
0x000002000003d717 : jae 0x200001e7e80 ; xor eax, eax ; ret
0x0000020000362fe9 : jae 0x20000362ffd ; mov al, 1 ; ret
0x0000020000364816 : jae 0x20000364851 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000036b672 : jae 0x2000036b692 ; mov rsp, r11 ; pop rdi ; ret
0x000002000036de90 : jae 0x2000036deff ; call 0x200001500c9
0x0000020000377bc0 : jae 0x20000377bfb ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000378bee : jae 0x20000378c31 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000037be71 : jae 0x2000037be91 ; mov rsp, r11 ; pop rdi ; ret
0x000002000037ddd4 : jae 0x2000037dde1 ; add rsp, 0x38 ; ret
0x000002000037e0f9 : jae 0x2000037e121 ; mov rsp, r11 ; pop rdi ; ret
0x000002000037e749 : jae 0x2000037e784 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003847b2 : jae 0x200003847da ; mov rsp, r11 ; pop rdi ; ret
0x0000020000384859 : jae 0x2000038489c ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003945e2 : jae 0x20000394612 ; mov rsp, r11 ; pop rdi ; ret
0x000002000039aa85 : jae 0x2000039aab5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000039bc3c : jae 0x2000039bc6c ; mov rsp, r11 ; pop rbp ; ret
0x000002000039c029 : jae 0x2000039bff7 ; mov dword ptr [r9 + 4], edx ; ret
0x000002000039e37d : jae 0x2000039e3a5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003a327f : jae 0x200003a32ba ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003a994a : jae 0x200003a9959 ; bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x00000200003a9f24 : jae 0x200003a9f4e ; add bh, bh ; ret
0x00000200003ad4a5 : jae 0x200003ad4d5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003afda6 : jae 0x200003afde9 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200003ba7b9 : jae 0x200003ba79b ; xor r14d, r14d ; jmp 0x200003ba6bc
0x00000200003bd821 : jae 0x200003bd851 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c2863 : jae 0x200003c2893 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c5585 : jae 0x200003c55a5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c8541 : jae 0x200003c8572 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003ca2c0 : jae 0x200003ca2f0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003ca671 : jae 0x200003ca6ac ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003de6f7 : jae 0x200003de71f ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e7015 : jae 0x200003e7046 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003f7939 : jae 0x200003f7903 ; ret 0xebff
0x00000200003fbded : jae 0x200003fbe15 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fcffd : jae 0x200003fd01d ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fef59 : jae 0x200003fef81 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000408d26 : jae 0x20000408d59 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000040d02a : jae 0x2000040d04a ; mov rsp, r11 ; pop rdi ; ret
0x000002000040d4a0 : jae 0x2000040d4d1 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000410a0e : jae 0x20000410a37 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004163d9 : jae 0x20000416409 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000423adc : jae 0x20000423b04 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000425e54 : jae 0x20000425e5f ; movzx eax, cx ; ret
0x0000020000426135 : jae 0x20000426155 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042f2e3 : jae 0x2000042f31e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000042f405 : jae 0x2000042f452 ; ret
0x000002000043a211 : jae 0x2000043a239 ; mov rsp, r11 ; pop rdi ; ret
0x000002000043a660 : jae 0x2000043a869 ; xor eax, eax ; pop rbx ; ret
0x00000200004427f9 : jae 0x2000044282a ; mov rsp, r11 ; pop r15 ; ret
0x0000020000446029 : jae 0x2000044603a ; ret
0x000002000045b732 : jae 0x2000045b763 ; mov rsp, r11 ; pop r15 ; ret
0x000002000046d0d5 : jae 0x2000046d106 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004783d4 : jae 0x200004783fc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000478cf6 : jae 0x20000478d31 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000047950a : jae 0x2000047953a ; mov rsp, r11 ; pop rbp ; ret
0x000002000047a670 : jae 0x2000047a698 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047c524 : jae 0x2000047c567 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000047f47e : jae 0x2000047f4b9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004861bf : jae 0x200004861df ; mov rsp, r11 ; pop rdi ; ret
0x00000200004868ec : jae 0x20000486927 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004869da : jae 0x20000486a15 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000048748a : jae 0x200004874aa ; mov rsp, r11 ; pop rdi ; ret
0x0000020000488b73 : jae 0x20000488ba3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000489bfa : jae 0x20000489c1a ; mov rsp, r11 ; pop rdi ; ret
0x000002000048b752 : jae 0x2000048b77a ; mov rsp, r11 ; pop rdi ; ret
0x000002000048c569 : jae 0x2000048c599 ; mov rsp, r11 ; pop rdi ; ret
0x000002000048f0b4 : jae 0x2000048f0ef ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000494eea : jae 0x20000494ef3 ; mov al, 1 ; ret
0x0000020000496fc4 : jae 0x20000496fe4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000049c125 : jae 0x2000049c14d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004a6a43 : jae 0x200004a6a7e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ab014 : jae 0x200004ab044 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ab448 : jae 0x200004ab470 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ad846 : jae 0x200004ad866 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004adb10 : jae 0x200004adb40 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b0841 : jae 0x200004b087c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004b0a75 : jae 0x200004b0aa8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004b1d48 : jae 0x200004b1d70 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b353f : jae 0x200004b3567 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b46b3 : jae 0x200004b46e3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004bbe3a : jae 0x200004bbe6b ; mov rsp, r11 ; pop r15 ; ret
0x00000200004c2439 : jae 0x200004c244e ; mov rcx, rsi ; call 0x200000f22c8
0x00000200004c2ba6 : jae 0x200004c2bd6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c398a : jae 0x200004c39c5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004cec96 : jae 0x200004ceca5 ; mov eax, 0xc0000095 ; ret
0x00000200004ceccb : jae 0x200004cecd4 ; mov eax, ecx ; ret
0x00000200004dc63e : jae 0x200004dc666 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004dd1d8 : jae 0x200004dd209 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004ded61 : jae 0x200004deda4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004e0d85 : jae 0x200004e0dc8 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200004e370a : jae 0x200004e3732 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e7cba : jae 0x200004e7cea ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e8be8 : jae 0x200004e8c23 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ea266 : jae 0x200004ea28e ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ea450 : jae 0x200004ea480 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f09b9 : jae 0x200004f09e9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f2245 : jae 0x200004f2265 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f32a8 : jae 0x200004f32c1 ; or eax, 0xffffffff ; ret
0x00000200004f9043 : jae 0x200004f9073 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f9e54 : jae 0x200004f9e7c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501425 : jae 0x20000501455 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501820 : jae 0x20000501848 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005019f8 : jae 0x20000501a28 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501e4b : jae 0x20000501e73 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000505820 : jae 0x20000505863 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000506d21 : jae 0x20000506d51 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000508102 : jae 0x20000508132 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005086d7 : jae 0x200005086f7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050cdc3 : jae 0x2000050cdd2 ; mov eax, 1 ; ret
0x000002000050d244 : jae 0x2000050d277 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000518af0 : jae 0x20000518b23 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000518e70 : jae 0x20000518eb3 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000519c34 : jae 0x20000519c54 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051dbbf : jae 0x2000051dbdf ; mov rsp, r11 ; pop rdi ; ret
0x000002000051f502 : jae 0x2000051f545 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000520c99 : jae 0x20000520cdc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000521896 : jae 0x200005218c9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000522c95 : jae 0x20000522ca1 ; in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000525c17 : jae 0x20000525c4a ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000527a76 : jae 0x20000527a85 ; mov eax, 0xc0000095 ; ret
0x0000020000527aab : jae 0x20000527ab4 ; mov eax, ecx ; ret
0x000002000052b4cf : jae 0x2000052b4f7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053156d : jae 0x20000531576 ; mov al, 1 ; ret
0x000002000053294f : jae 0x20000532977 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053607a : jae 0x200005360bd ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000053c027 : jae 0x2000053c057 ; mov rsp, r11 ; pop rdi ; ret
0x000002000054176f : jae 0x20000541797 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000542fce : jae 0x20000542ff6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000546154 : jae 0x20000546174 ; mov rsp, r11 ; pop rdi ; ret
0x000002000054b2aa : jae 0x2000054b2b9 ; mov eax, 0xc000000d ; ret
0x000002000054d425 : jae 0x2000054d455 ; mov rsp, r11 ; pop rdi ; ret
0x000002000055bf65 : jae 0x2000055bfa0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000055ca2d : jae 0x2000055ca5d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000562851 : jae 0x2000056287a ; mov rsp, r11 ; pop r14 ; ret
0x0000020000564cb2 : jae 0x20000564cd2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000056716f : jae 0x200005671aa ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000568ed3 : jae 0x20000568ef4 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000569c15 : jae 0x20000569c45 ; mov rsp, r11 ; pop rdi ; ret
0x000002000056c12e : jae 0x2000056c14e ; mov rsp, r11 ; pop rdi ; ret
0x000002000056db95 : jae 0x2000056db65 ; ret 0x48ff
0x000002000056f593 : jae 0x2000056f5bb ; mov rsp, r11 ; pop rdi ; ret
0x000002000056fa97 : jae 0x2000056fa91 ; ret
0x00000200005728d7 : jae 0x200005728ff ; mov rsp, r11 ; pop rdi ; ret
0x00000200005745f4 : jae 0x2000057461c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000577250 : jae 0x20000577293 ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000057d761 : jae 0x2000057d789 ; mov rsp, r11 ; pop rdi ; ret
0x000002000057f751 : jae 0x2000057f779 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005810d4 : jae 0x2000058110f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000581274 : jae 0x200005812af ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000581f0e : jae 0x20000581f36 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005837aa : jae 0x200005837bb ; mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000583a18 : jae 0x20000583a53 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005846e6 : jae 0x20000584716 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000585417 : jae 0x20000585437 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000587574 : jae 0x20000587592 ; mov rcx, rbx ; call 0x2000042383b
0x0000020000589408 : jae 0x20000589413 ; movzx eax, cx ; ret
0x0000020000589407 : jae 0x20000589414 ; movzx eax, cx ; ret
0x00000200005909f2 : jae 0x20000590a22 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000590a89 : jae 0x20000590a53 ; ret
0x0000020000594780 : jae 0x200005947bb ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000595a93 : jae 0x20000595ace ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000595b44 : jae 0x20000595b7f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000599c97 : jae 0x20000599cca ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000059e61b : jae 0x2000059e64e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000059f201 : jae 0x2000059f221 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a0b92 : jae 0x200005a0bc5 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200005a1f7c : jae 0x200005a1fb7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005a459c : jae 0x200005a45ad ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200005a459c
0x00000200005a52e0 : jae 0x200005a5310 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a53ed : jae 0x200005a5415 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a7705 : jae 0x200005a7725 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005a7936 : jae 0x200005a7971 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005aa6d5 : jae 0x200005aa705 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005aa8c2 : jae 0x200005aa8f5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005aae94 : jae 0x200005aaea3 ; mov eax, 0xc0000023 ; ret
0x00000200005aeb82 : jae 0x200005aebb5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005b112a : jae 0x200005b113b ; sub rax, rcx ; sar rax, 1 ; ret
0x00000200005b2ab1 : jae 0x200005b2ae1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b3e91 : jae 0x200005b3ec1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b4a89 : jae 0x200005b4a4f ; int 0xff
0x00000200005bc02d : jae 0x200005bc056 ; mov rsp, r11 ; pop r15 ; ret
0x00000200005bf33c : jae 0x200005bf36f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005c22e1 : jae 0x200005c2314 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005c6bdd : jae 0x200005c6c0d ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c6cad : jae 0x200005c6cdd ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c7c6b : jae 0x200005c7c93 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005c7d08 : jae 0x200005c7d30 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005cf6c0 : jae 0x200005cf6cb ; or eax, 0xffffffff ; ret
0x00000200005cfdd8 : jae 0x200005cfe1b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005d047c : jae 0x200005d04a4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d2c54 : jae 0x200005d2c57 ; ret 0xb70f
0x00000200005d3231 : jae 0x200005d326c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000038b659 : jae 0x200005da4a8 ; mov al, 1 ; ret
0x00000200004f3376 : jae 0x200005eee15 ; or eax, 0xffffffff ; ret
0x000002000060d0ab : jae 0x2000060d107 ; jns 0x2000060d0a0 ; mov ebp, 0x8bffa65c ; ret
0x0000020000618457 : jae 0x20000618487 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000636154 : jae 0x20000636197 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000637710 : jae 0x20000637753 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000063acbf : jae 0x2000063ad25 ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063ef8e : jae 0x2000063efbe ; mov rsp, r11 ; pop rdi ; ret
0x00000200006408c9 : jae 0x200006408c4 ; ret 0x48ff
0x0000020000640d78 : jae 0x20000640da8 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000640dc3 : jae 0x20000640dd2 ; mov eax, 1 ; ret
0x0000020000641d55 : jae 0x20000641cf3 ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x000002000064b8a8 : jae 0x2000064b8d8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d4a4 : jae 0x2000064d4d4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064d744 : jae 0x2000064d774 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064fcaa : jae 0x2000064fcda ; mov rsp, r11 ; pop rdi ; ret
0x00000200006561b5 : jae 0x200006561e5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000656599 : jae 0x200006565c9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006592e7 : jae 0x2000065931a ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006645e1 : jae 0x20000664609 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006ba27a : jae 0x200006ba289 ; mov eax, 1 ; ret
0x00000200006be497 : jae 0x200006be4c7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bebc3 : jae 0x200006bebfe ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006c309e : jae 0x200006c30be ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c331e : jae 0x200006c334e ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c3628 : jae 0x200006c3658 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c4895 : jae 0x200006c48d8 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006c5632 : jae 0x200006c5675 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006c5993 : jae 0x200006c59ae ; leave ; call rbx
0x00000200006c64d5 : jae 0x200006c64fd ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c66ac : jae 0x200006c66e7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006ca532 : jae 0x200006ca56d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006cba99 : jae 0x200006cbadc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006cfd19 : jae 0x200006cfcc7 ; xchg eax, ebx ; inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200006d03da : jae 0x200006d0402 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006d10f6 : jae 0x200006d1110 ; movzx eax, r9w ; ret
0x00000200006e987a : jae 0x200006e98b5 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006e9de4 : jae 0x200006e9e27 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006eab6a : jae 0x200006eab7b ; mov r14d, r12d ; mov rax, rdx ; jmp 0x200006eab81
0x00000200006f0245 : jae 0x200006f0280 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006f6c8a : jae 0x200006f6cc5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006f740b : jae 0x200006f744e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006f7bea : jae 0x200006f7c2d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000702d7f : jae 0x20000702da8 ; xor edx, edx ; mov rcx, rsi ; call 0x2000026f019
0x0000020000704f9b : jae 0x20000704fcb ; mov rsp, r11 ; pop rbp ; ret
0x00000200007053b7 : jae 0x200007053fa ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000070609b : jae 0x200007060a6 ; or eax, 0xffffffff ; ret
0x00000200007080a4 : jae 0x200007080df ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000003b9a : jb 0x20000003bea ; inc edx ; jmp 0x20000003b7e
0x0000020000009c11 : jb 0x20000009be1 ; add rsp, 0x38 ; ret
0x000002000000e260 : jb 0x2000000e249 ; xor eax, eax ; ret
0x00000200000220c7 : jb 0x200000220d6 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000220c6 : jb 0x200000220d7 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000024719 : jb 0x200000246a8 ; ret
0x00000200000272c6 : jb 0x200000272d9 ; sub ecx, edx ; xor eax, eax ; mov dword ptr [r8], ecx ; ret
0x000002000003a1c3 : jb 0x2000003a1cf ; ret
0x000002000003a1bd : jb 0x2000003a1d0 ; bt ecx, 0x1b ; jb 0x2000003a1d5 ; ret
0x0000020000045379 : jb 0x2000004532a ; xor eax, eax ; ret
0x0000020000047834 : jb 0x20000047845 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000054ad9 : jb 0x20000054ae8 ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000054afb : jb 0x20000054b0a ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000006bc3b : jb 0x2000006bc44 ; mov al, 1 ; ret
0x000002000006c14f : jb 0x2000006c118 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006c2d9 : jb 0x2000006c2e2 ; mov eax, ecx ; ret
0x0000020000070fc7 : jb 0x20000070faf ; ret
0x000002000008ebf9 : jb 0x2000008ec00 ; ret
0x00000200000907cf : jb 0x20000090800 ; mov cl, 0x69 ; sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x00000200000a8192 : jb 0x200000a8197 ; ret
0x00000200000aecdb : jb 0x200000aecd6 ; mov rax, r8 ; ret
0x00000200000b283a : jb 0x200000b2827 ; ret
0x00000200000c6e22 : jb 0x200000c6ea3 ; inc ecx ; inc rdx ; jmp 0x200000c6e0f
0x00000200000c7809 : jb 0x200000c77c2 ; ret 0
0x00000200001ca619 : jb 0x200000f6683 ; jmp 0x200000f686e
0x00000200000fa648 : jb 0x200000fa657 ; mov eax, 0xc000000d ; ret
0x00000200000fe581 : jb 0x200000fe58c ; mov rax, r11 ; ret
0x00000200001064cb : jb 0x200001064bb ; xor eax, eax ; ret
0x0000020000111ac6 : jb 0x20000111acf ; xor eax, eax ; ret
0x000002000011d48e : jb 0x2000011d493 ; ret
0x000002000011fa1b : jb 0x2000011fa11 ; xor eax, eax ; ret
0x0000020000126106 : jb 0x200001260f8 ; mov eax, 0x10 ; ret
0x000002000012f3bb : jb 0x2000012f24d ; or eax, 0xffffffff ; ret
0x0000020000132b10 : jb 0x20000132b05 ; ret
0x00000200001362dd : jb 0x200001362c0 ; ret
0x000002000013a643 : jb 0x2000013a613 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000140737 : jb 0x20000140746 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000140af4 : jb 0x20000140ad4 ; ret
0x0000020000140af3 : jb 0x20000140ad5 ; ret
0x0000020000140f50 : jb 0x20000140f3b ; mov eax, dword ptr [rip + 0x2160b4] ; ret
0x000002000014197a : jb 0x20000141961 ; ret
0x0000020000147b87 : jb 0x20000147b7d ; xor eax, eax ; ret
0x0000020000147ca3 : jb 0x20000147c96 ; ret
0x000002000014ea60 : jb 0x2000014e9ef ; ret 0x348
0x0000020000153faf : jb 0x20000153f9d ; ret
0x0000020000154076 : jb 0x20000154062 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001540fd : jb 0x200001540ed ; mov rax, r10 ; ret
0x00000200001544ee : jb 0x200001544d7 ; mov rax, r10 ; ret
0x00000200001544ee : jb 0x200001544d8 ; mov rax, r10 ; ret
0x0000020000154691 : jb 0x20000154686 ; ret
0x0000020000157d0a : jb 0x20000157ce7 ; xor al, al ; ret
0x000002000015a244 : jb 0x2000015a22c ; xor edx, edx ; mov rax, rdx ; ret
0x000002000015eb63 : jb 0x2000015eb4c ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000162182 : jb 0x20000162191 ; mov eax, 0xc000000d ; ret
0x00000200001630f7 : jb 0x200001630e2 ; xor eax, eax ; ret
0x0000020000169c19 : jb 0x20000169ba8 ; ret
0x0000020000169c8f : jb 0x20000169c1e ; ret
0x000002000017502e : jb 0x20000175022 ; mov eax, 0xc0000225 ; ret
0x0000020000178a1b : jb 0x20000178a7e ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000017f118 : jb 0x2000017f106 ; xor eax, eax ; ret
0x0000020000181963 : jb 0x20000181935 ; xor eax, eax ; ret
0x00000200001875f3 : jb 0x200001875ed ; add rsp, 0x38 ; ret
0x000002000019d345 : jb 0x2000019d32b ; ret
0x000002000019e336 : jb 0x2000019e328 ; mov al, 1 ; ret
0x000002000019e380 : jb 0x2000019e357 ; mov al, 1 ; ret
0x000002000019e3f4 : jb 0x2000019e3ed ; mov al, 1 ; ret
0x000002000019e41c : jb 0x2000019e411 ; mov al, 1 ; ret
0x000002000019e46f : jb 0x2000019e43f ; mov al, 1 ; ret
0x000002000019e496 : jb 0x2000019e485 ; mov rax, r8 ; ret
0x000002000019ec06 : jb 0x2000019ebfb ; ret
0x000002000019ed48 : jb 0x2000019ed2c ; ret
0x000002000019fb97 : jb 0x2000019fb44 ; jmp 0x2000019fc2d
0x00000200001a3e84 : jb 0x200001a3e4f ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001a683d : jb 0x200001a6821 ; mov eax, r9d ; ret
0x00000200001a68a1 : jb 0x200001a6896 ; mov eax, edx ; ret
0x00000200001a7be3 : jb 0x200001a7bdc ; xor eax, eax ; ret
0x00000200001b8981 : jb 0x200001b8981 ; jmp 0x200001b8997
0x00000200001b8ed7 : jb 0x200001b8ec7 ; ret
0x00000200001bc9ca : jb 0x200001bc97e ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200001bfcf0 : jb 0x200001bfcd0 ; ret
0x00000200001c1b69 : jb 0x200001c1b78 ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200001c2b5f : jb 0x200001c2b68 ; xor al, al ; ret
0x00000200001c2d88 : jb 0x200001c2d42 ; mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x00000200001401e4 : jb 0x200001c8312 ; xor eax, eax ; ret
0x0000020000105b04 : jb 0x200001d0310 ; xor eax, eax ; ret
0x00000200001d860d : jb 0x200001d8603 ; ret
0x000002000014caf1 : jb 0x200001dbec1 ; ret
0x000002000011d3ea : jb 0x200001e56f9 ; ret
0x00000200001f01a3 : jb 0x200001f01b2 ; mov eax, 1 ; ret
0x00000200001f01a2 : jb 0x200001f01b3 ; mov eax, 1 ; ret
0x00000200001f01ae : jb 0x200001f01bd ; mov eax, 5 ; ret
0x0000020000362f70 : jb 0x20000362f9c ; test dl, 4 ; jne 0x20000362f83 ; xor al, al ; ret
0x000002000039365a : jb 0x200003756a3 ; ret
0x000002000037ebca : jb 0x2000037eb6f ; int1 ; dec dword ptr [rax + 0x3b] ; ret 0xa74
0x0000020000389c74 : jb 0x20000389c6a ; xor al, al ; ret
0x000002000039bd12 : jb 0x2000039bd17 ; ret
0x00000200003bd4fb : jb 0x200003bd50e ; add rsp, 0x28 ; ret
0x00000200003c95ed : jb 0x200003c9600 ; ret
0x00000200003c95e7 : jb 0x200003c9606 ; bt ecx, 0x1c ; jb 0x200003c9606 ; ret
0x00000200003d6bc6 : jb 0x200003d6bdc ; ret
0x00000200003d88d6 : jb 0x200003d88c6 ; shr rax, 1 ; ret
0x00000200003f1e3a : jb 0x200003f1e5f ; ret
0x00000200003f8ab2 : jb 0x200003f8ac3 ; and dword ptr [rcx], 0xfffffff ; ret
0x000002000040daa5 : jb 0x2000040da9b ; mov eax, 1 ; ret
0x0000020000410c8b : jb 0x20000410c9c ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004193ae : jb 0x20000419385 ; mov rax, r8 ; ret
0x000002000041c4c4 : jb 0x2000041c4b9 ; and eax, 0x1f ; ret
0x000002000041d40b : jb 0x2000041d3fe ; mov eax, r9d ; sub eax, r10d ; jmp 0x2000041d41f
0x000002000042d436 : jb 0x2000042d49b ; ret
0x0000020000448fca : jb 0x20000448f6c ; ret 0x8bff
0x0000020000461a7d : jb 0x20000461a87 ; add dh, dh ; ret
0x0000020000461a7c : jb 0x20000461a88 ; add dh, dh ; ret
0x0000020000470ed9 : jb 0x20000470e7c ; ret
0x00000200004757d9 : jb 0x200004757c9 ; mov eax, edx ; ret
0x00000200004757d9 : jb 0x200004757ca ; mov eax, edx ; ret
0x0000020000483b6e : jb 0x20000483bce ; ret 0x84ff
0x00000200004855f6 : jb 0x20000485600 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000491690 : jb 0x20000491684 ; mov rcx, r14 ; call 0x200000b5018
0x000002000049498a : jb 0x200004949df ; ret 0x65ff
0x0000020000497905 : jb 0x200004978b1 ; mov al, 2 ; ret
0x0000020000497905 : jb 0x200004978b6 ; mov al, 2 ; ret
0x000002000049da9b : jb 0x2000049daae ; jbe 0x2000049dab2 ; mov eax, 1 ; ret
0x00000200004aeefe : jb 0x200004aef03 ; ret
0x00000200004b85ad : jb 0x200004b8540 ; ror dword ptr [rcx - 0x75], -0x74 ; ret
0x00000200004baf3e : jb 0x200004baf2e ; mov byte ptr [rdx + 1], r10b ; xor eax, eax ; ret
0x00000200004dbb47 : jb 0x200004dbb45 ; cmp eax, edx ; cmovae eax, edx ; ret
0x00000200004e1efe : jb 0x200004e1f3e ; ret 0x48ff
0x00000200004ffa01 : jb 0x200004ffa19 ; add byte ptr [rbp - 0x74d38625], al ; ret
0x0000020000506040 : jb 0x20000506017 ; mov al, cl ; ret
0x000002000050a8ae : jb 0x2000050a7da ; ret
0x000002000050b7bc : jb 0x2000050b7ac ; mov eax, 0xc0000001 ; ret
0x0000020000518241 : jb 0x2000051821e ; mov byte ptr [rdx + 1], r10b ; xor eax, eax ; ret
0x00000200005204b8 : jb 0x200005204a6 ; add bh, ah ; ret 0x48ff
0x000002000052a2f8 : jb 0x2000052a2ec ; ret
0x000002000052ae32 : jb 0x2000052ae41 ; mov eax, 0xc000000d ; ret
0x000002000052aee6 : jb 0x2000052aed2 ; add rsp, 0x28 ; ret
0x000002000052af9e : jb 0x2000052af0e ; ret
0x00000200005348f9 : jb 0x200005348cb ; movzx eax, r8w ; ret
0x0000020000542ec6 : jb 0x20000542eb6 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000545562 : jb 0x2000054552f ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000549f87 : jb 0x20000549f96 ; mov eax, 0xc0000189 ; ret
0x0000020000566cfd : jb 0x20000566ceb ; xor al, al ; ret
0x0000020000569a92 : jb 0x20000569a7b ; xor eax, eax ; ret
0x000002000056ccc1 : jb 0x2000056ccb9 ; mov eax, 0xc0000225 ; ret
0x000002000057b977 : jb 0x2000057b96d ; xor al, al ; ret
0x000002000059cddd : jb 0x2000059cdc7 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200005bb53b : jb 0x200005bb532 ; or eax, 0xffffffff ; ret
0x00000200005e0a68 : jb 0x200005e0a0f ; jmp 0x2000037ccc1
0x0000020000604d5c : jb 0x20000604d4f ; push rsi ; ret
0x000002000063259a : jb 0x20000632568 ; ret
0x00000200004fc617 : jb 0x20000632ccc ; jmp 0x200004fc5e9
0x0000020000634a8f : jb 0x20000634a7d ; xor eax, eax ; ret
0x000002000063f03f : jb 0x2000063f048 ; mov al, 1 ; ret
0x000002000063f06f : jb 0x2000063f07e ; shr eax, 0xf ; and al, 1 ; ret
0x0000020000641dd3 : jb 0x20000641ddc ; xor eax, eax ; ret
0x00000200006430df : jb 0x20000643129 ; mov eax, esi ; call rax
0x0000020000643f8f : jb 0x20000643f84 ; xor eax, eax ; ret
0x000002000064525e : jb 0x20000645202 ; ret
0x0000020000648cfa : jb 0x20000648d72 ; add al, 0 ; add rsp, 0x48 ; ret
0x0000020000649162 : jb 0x200006491d4 ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000064c970 : jb 0x2000064c968 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064c9bb : jb 0x2000064c9b0 ; ret
0x000002000064cc22 : jb 0x2000064cc41 ; ret
0x000002000064e912 : jb 0x2000064e8e5 ; ret
0x000002000064ecc3 : jb 0x2000064ec96 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006551b2 : jb 0x200006551bb ; xor eax, eax ; ret
0x0000020000657c90 : jb 0x20000657ca3 ; or dword ptr [rip + 0x1337b], 0x10 ; ret
0x00000200006650a9 : jb 0x2000066505d ; ret 0xff
0x00000200006650b2 : jb 0x20000665066 ; ret 0xe8ff
0x000002000066544a : jb 0x200006653fa ; ret 0x83ff
0x00000200006656d2 : jb 0x20000665680 ; ret 0x48ff
0x0000020000665de2 : jb 0x20000665d67 ; ret 0x4cff
0x000002000066821d : jb 0x2000066829e ; ret 0xff
0x00000200006bac2d : jb 0x200006bac24 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c33d8 : jb 0x200006c335a ; ret
0x00000200006c3503 : jb 0x200006c34bf ; ret
0x00000200006c389f : jb 0x200006c3878 ; ret
0x00000200006c389e : jb 0x200006c3879 ; ret
0x00000200006c4430 : jb 0x200006c4449 ; add rsp, 0x28 ; ret
0x00000200006f0b10 : jb 0x200006f0b05 ; ret
0x000002000000ae61 : jbe 0x2000000adf3 ; or eax, 0x5058b00 ; ret 0x34
0x000002000001fc18 : jbe 0x2000001fc1b ; ret 0x8349
0x000002000004004b : jbe 0x20000040063 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x00000200000400a6 : jbe 0x200000400c8 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x00000200000400c5 : jbe 0x200000400dd ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000004d302 : jbe 0x2000004d2c7 ; jmp 0x2000004d30c
0x0000020000081e52 : jbe 0x20000081e0f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000081e51 : jbe 0x20000081e10 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000008f5ae : jbe 0x2000008f5c9 ; mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x000002000008f5ad : jbe 0x2000008f5ca ; mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x0000020000090310 : jbe 0x20000090380 ; popfq ; ret
0x0000020000091664 : jbe 0x200000916ab ; ret 0xbb54
0x000002000009fb55 : jbe 0x2000009fb2f ; adc dword ptr [rbp + 0x4fc000cb], ecx ; ret
0x00000200000a739e : jbe 0x200000a7369 ; mov qword ptr [rcx + 0x168], rax ; ret
0x00000200000e84ae : jbe 0x200000e84c8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010f96f : jbe 0x2000010f969 ; dec dword ptr [rbp - 0x75] ; ret 0x8948
0x000002000010f96e : jbe 0x2000010f96a ; dec dword ptr [rbp - 0x75] ; ret 0x8948
0x00000200001120dc : jbe 0x200001120e9 ; add rsp, 0x28 ; ret
0x000002000012fa77 : jbe 0x2000012faa0 ; add byte ptr [rcx + 0x23], al ; ret
0x0000020000136bcf : jbe 0x20000136be2 ; test dl, dl ; jne 0x20000136bf1 ; call 0x20000072e48
0x000002000013c0c0 : jbe 0x2000013c0bd ; dec dword ptr [rax + 0x3b] ; ret
0x00000200001e64bd : jbe 0x20000145331 ; jmp 0x200001e648f
0x00000200001479a4 : jbe 0x200001479be ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000147e1d : jbe 0x20000147e14 ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x000002000014f146 : jbe 0x2000014f0cb ; jmp qword ptr [rcx]
0x000002000015859b : jbe 0x2000015851d ; xor al, al ; ret
0x00000200001639c0 : jbe 0x200001639cf ; mov eax, 1 ; ret
0x000002000016df39 : jbe 0x2000016dec0 ; ret 0x4407
0x00000200001857db : jbe 0x200001857ea ; mov eax, 1 ; ret
0x000002000019c032 : jbe 0x2000019c022 ; or eax, 0xffffffff ; ret
0x000002000019c06e : jbe 0x2000019c077 ; mov al, 1 ; ret
0x00000200001c0588 : jbe 0x200001c0576 ; add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200001c2a47 : jbe 0x200001c2a56 ; mov eax, 0xc000009a ; ret
0x00000200001c9b3e : jbe 0x200001c9b3c ; dec dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x3b], cl ; ret
0x000002000001e330 : jbe 0x200001e509e ; ret
0x00000200000aec6b : jbe 0x200001e5bfe ; ret
0x0000020000147aff : jbe 0x200001f01a8 ; xor eax, eax ; ret
0x0000020000368267 : jbe 0x20000368257 ; ret
0x0000020000368b81 : jbe 0x20000368b8b ; xor ecx, ecx ; call rax
0x000002000037c958 : jbe 0x2000037c962 ; add bh, bh ; ret
0x00000200003ce386 : jbe 0x200003ce3b6 ; ret
0x00000200003d7245 : jbe 0x200003d725a ; shr edi, 1 ; add edi, r14d ; jmp 0x200003d7219
0x0000020000423c0a : jbe 0x20000423bcc ; ret 0x45ff
0x00000200004902f6 : jbe 0x200004902e9 ; ret 0x48ff
0x0000020000491696 : jbe 0x200004916d3 ; ret 0x41ff
0x0000020000491725 : jbe 0x200004916fb ; and dword ptr [rcx + 4], 0 ; ret
0x000002000049da9d : jbe 0x2000049dab0 ; mov eax, 1 ; ret
0x00000200004a9726 : jbe 0x200004a9732 ; ret
0x00000200004b6ec1 : jbe 0x200004b6edb ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200004cc0d6 : jbe 0x200004cc0a6 ; ret 0xb8ff
0x00000200004d77eb : jbe 0x200004d77fe ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f3366 : jbe 0x200004f337d ; mov eax, 1 ; ret
0x00000200005147cc : jbe 0x200005147bb ; ret
0x0000020000524eb2 : jbe 0x20000524f25 ; ret 0x48ff
0x0000020000537fbe : jbe 0x20000537f68 ; mov ebp, 0x1d8a44ff ; push rdi ; ret
0x00000200005498c1 : jbe 0x200005498ca ; xor eax, eax ; ret
0x0000020000567c16 : jbe 0x20000567bd2 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000569a06 : jbe 0x20000569a15 ; mov eax, 0xc000000d ; ret
0x0000020000569a5e : jbe 0x20000569a6d ; mov eax, 0xc0000023 ; ret
0x0000020000574c74 : jbe 0x20000574c60 ; xor eax, eax ; ret
0x000002000057511a : jbe 0x20000575128 ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200005fbfd3 : jbe 0x200005fbfb9 ; push rsi ; ret
0x00000200006363ae : jbe 0x2000063642a ; sar edi, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000063f753 : jbe 0x2000063f700 ; dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x000002000063f752 : jbe 0x2000063f701 ; dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200006404f1 : jbe 0x200006404fd ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000641b0d : jbe 0x20000641a9c ; ret 0x3949
0x0000020000645c3e : jbe 0x20000645bd8 ; ret
0x000002000064fab4 : jbe 0x2000064fac5 ; mov dword ptr [rip + 0x1b5f4], eax ; ret
0x0000020000665111 : jbe 0x20000665110 ; mov eax, 0xc0000001 ; ret
0x000002000069b15b : jbe 0x2000069b0ea ; ret
0x0000020000002fea : je 0x2000000300b ; mov edx, 0x70 ; call rax
0x0000020000003b95 : je 0x20000003bc3 ; cmp al, 0x3b ; int1 ; jb 0x20000003bef ; inc edx ; jmp 0x20000003b83
0x0000020000005055 : je 0x20000005084 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000005175 : je 0x200000051a3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000006be0 : je 0x20000006c0e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000006c5b : je 0x20000006c6a ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000006e96 : je 0x20000006ec4 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000009a48 : je 0x20000009a76 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000009b5a : je 0x20000009b88 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000a072 : je 0x2000000a048 ; sub r9d, ecx ; mov eax, r9d ; ret
0x000002000000b36e : je 0x2000000b381 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b491 : je 0x2000000b4bf ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000e016 : je 0x2000000e01f ; mov al, 1 ; ret
0x000002000000e1ab : je 0x2000000e1d9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000e37b : je 0x2000000e3a9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000e728 : je 0x2000000e756 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000e811 : je 0x2000000e83f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000f140 : je 0x2000000f0c9 ; xor al, 0 ; call rax
0x0000020000012a47 : je 0x20000012a90 ; inc dword ptr [rcx + rdx*4 + 0x50] ; ret
0x0000020000013b6f : je 0x20000013b9d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000169b3 : je 0x200000169e1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000016bc8 : je 0x20000016bf6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000018916 : je 0x2000001892e ; add rsp, 0x28 ; ret
0x000002000001b12e : je 0x2000001b15c ; js 0x2000001b182 ; add esp, 0x50 ; pop rdi ; ret
0x000002000001b885 : je 0x2000001b8b0 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000001b975 : je 0x2000001b9a3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001be65 : je 0x2000001be93 ; push 0x50c48348 ; pop rdi ; ret
0x000002000001e306 : je 0x2000001e2cb ; jmp 0x2000001e2ff
0x000002000001e3a0 : je 0x2000001e3af ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001ea18 : je 0x2000001ea46 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001ed5b : je 0x2000001ed89 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000020bf2 : je 0x20000020c0b ; mov dword ptr [rcx + 0x584], edx ; ret
0x0000020000020eaa : je 0x20000020eb7 ; mov word ptr [rcx], r11w ; ret
0x00000200000213a0 : je 0x200000213ce ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000021d23 : je 0x20000021d30 ; add rsp, 0x28 ; ret
0x0000020000022017 : je 0x20000022046 ; jo 0x2000002206c ; add esp, 0x50 ; pop r14 ; ret
0x0000020000022218 : je 0x20000022246 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000023011 : je 0x20000023026 ; mov eax, 3 ; ret
0x000002000002310a : je 0x20000023138 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000257d9 : je 0x20000025803 ; jo 0x2000002576c ; ret
0x0000020000026d47 : je 0x20000026d75 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000272a6 : je 0x200000272bb ; mov eax, ecx ; ret
0x00000200000282cd : je 0x200000282fc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000028455 : je 0x20000028483 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002939c : je 0x200000293ca ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002acbe : je 0x2000002acec ; push 0x50c48348 ; pop rdi ; ret
0x000002000002b6e3 : je 0x2000002b711 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002dc1b : je 0x2000002dc49 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002fe9a : je 0x2000002fea9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003238a : je 0x200000323b9 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000330ce : je 0x200000330fc ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000360cc : je 0x200000360d9 ; or dword ptr [r8], 0xffffffff ; ret
0x00000200000368eb : je 0x20000036915 ; js 0x2000003687e ; ret 0x8349
0x0000020000036c93 : je 0x20000036cc1 ; js 0x20000036ce7 ; add esp, 0x60 ; pop rdi ; ret
0x000002000003802f : je 0x2000003805d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000003837f : je 0x200000383ad ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000038b99 : je 0x20000038bc7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038c47 : je 0x20000038c75 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038d25 : je 0x20000038d57 ; mov eax, edx ; ret
0x0000020000038d25 : je 0x20000038d58 ; mov eax, edx ; ret
0x0000020000038dda : je 0x20000038dec ; mov word ptr [rcx], r11w ; mov eax, r10d ; ret
0x0000020000038dda : je 0x20000038ded ; mov word ptr [rcx], r11w ; mov eax, r10d ; ret
0x0000020000039e76 : je 0x20000039e3f ; call 0x1ffc304c28f
0x0000020000039e75 : je 0x20000039e40 ; call 0x1ffc304c290
0x000002000003a22c : je 0x2000003a25a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003acea : je 0x2000003ad18 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003af2c : je 0x2000003af07 ; sub r8d, ecx ; mov eax, r8d ; ret
0x000002000003aedb : je 0x2000003af09 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000003c1c1 : je 0x2000003c1ef ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003c311 : je 0x2000003c33f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003dc46 : je 0x2000003dc74 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e1e9 : je 0x2000003e217 ; jo 0x2000003e23d ; add esp, 0x50 ; pop rdi ; ret
0x000002000003e48e : je 0x2000003e4bc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003ec74 : je 0x2000003eca2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003fd01 : je 0x2000003fd2f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000045d24 : je 0x20000045d52 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000467eb : je 0x20000046816 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000046db1 : je 0x20000046ddf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000046fc5 : je 0x20000046ff3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004772e : je 0x2000004773d ; mov eax, 1 ; ret
0x0000020000047a92 : je 0x20000047ac0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000047bf7 : je 0x20000047c25 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000049383 : je 0x2000004938c ; mov eax, ecx ; ret
0x000002000004937f : je 0x20000049395 ; cmp al, 2 ; je 0x20000049390 ; mov eax, ecx ; ret
0x000002000004bb9c : je 0x2000004bbca ; jo 0x2000004bbf0 ; add esp, 0x50 ; pop rdi ; ret
0x000002000004bcb1 : je 0x2000004bce0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004d16c : je 0x2000004d19a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000004d663 : je 0x2000004d69c ; cmp qword ptr [rax + 8], rcx ; jne 0x2000004d68d ; ret
0x000002000004f527 : je 0x2000004f555 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004ffd8 : je 0x20000050003 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000050040 : je 0x2000005006e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000051957 : je 0x20000051985 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005199a : je 0x200000519c8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000054627 : je 0x20000054632 ; mov dword ptr [rcx + 0x2c], edx ; ret
0x0000020000055ef0 : je 0x20000055efb ; mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000056149 : je 0x20000056177 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000564d8 : je 0x20000056506 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000056cbb : je 0x20000056ce9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000057acd : je 0x20000057ac8 ; ret 0xf60
0x0000020000058ab6 : je 0x20000058ae4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000005a634 : je 0x2000005a643 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005aa9b : je 0x2000005aa9c ; lock dec dword ptr [rcx + 0x46c] ; ret
0x000002000005b30b : je 0x2000005b319 ; bts qword ptr [rcx], 0xd ; ret
0x000002000005c3be : je 0x2000005c3d0 ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000005c98c : je 0x2000005c9ba ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000005ca87 : je 0x2000005cab6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005d432 : je 0x2000005d460 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005e127 : je 0x2000005e155 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005e49f : je 0x2000005e4cd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005e82d : je 0x2000005e85b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005e92e : je 0x2000005e95c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005f13c : je 0x2000005f16a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005f697 : je 0x2000005f6c5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000062a33 : je 0x20000062a65 ; cmp qword ptr [rax + 0x10], rcx ; jne 0x20000062a5a ; ret
0x0000020000062b07 : je 0x20000062b35 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000635fd : je 0x200000635b8 ; add dword ptr [rax + rcx*8 - 0x75be998c], eax ; ret 0x4db9
0x000002000006368b : je 0x20000063692 ; ret
0x0000020000063c96 : je 0x20000063c9c ; xchg rax, rcx ; push rax ; ret
0x00000200000641f4 : je 0x20000064220 ; xor byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2ec1
0x000002000006626d : je 0x20000066276 ; xor eax, eax ; ret
0x0000020000066d43 : je 0x20000066d71 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000066e0e : je 0x20000066e3c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000066f4b : je 0x20000066f38 ; mov al, 1 ; ret
0x000002000006a060 : je 0x20000069cdc ; jmp 0x200001d6302
0x000002000006b1e8 : je 0x2000006b216 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006ba4f : je 0x2000006ba85 ; mov al, 1 ; ret
0x000002000006cd7c : je 0x2000006cdaa ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006cf3f : je 0x2000006cf6d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006f976 : je 0x2000006f989 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000072dab : je 0x20000072dd9 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000072e03 : je 0x20000072e31 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000072e7b : je 0x20000072ea9 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000072ed3 : je 0x20000072f01 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007355b : je 0x2000007356a ; test dh, dh ; jne 0x200000734f2 ; xor rax, rax ; ret
0x00000200000738df : je 0x200000738ed ; test dh, dh ; jne 0x20000073878 ; xor eax, eax ; ret
0x00000200000769e3 : je 0x20000076a32 ; add byte ptr [rax], al ; jmp rcx
0x0000020000076ce9 : je 0x20000076cf2 ; dec al ; ret
0x000002000007b7e8 : je 0x2000007b7fc ; call 0x20000177a78
0x000002000008f9ac : je 0x2000008f9b0 ; ret 0xa8b3
0x00000200000a8356 : je 0x200000a8384 ; push rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000a9774 : je 0x200000a979c ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200000a9d5c : je 0x200000a9d66 ; ret
0x00000200000a9e42 : je 0x200000a9f68 ; call rax
0x00000200000abde9 : je 0x200000abe05 ; lea rcx, qword ptr [rip + 0x113a] ; call rax
0x00000200000aca91 : je 0x200000acad8 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200000adf25 : je 0x200000adf32 ; add rsp, 0x28 ; ret
0x00000200000ae502 : je 0x200000ae50f ; add rsp, 0x28 ; ret
0x00000200000aed04 : je 0x200000aed09 ; ret
0x00000200000af488 : je 0x200000af4b6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000affc2 : je 0x200000afff1 ; push rax ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200000b29af : je 0x200000b29be ; mov eax, 1 ; ret
0x00000200000b4fec : je 0x200000b4ff1 ; ret
0x00000200000b513e : je 0x200000b516c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b5197 : je 0x200000b5189 ; mov eax, 2 ; ret
0x00000200000bb040 : je 0x200000bb04d ; add rsp, 0x28 ; ret
0x00000200000bc3a4 : je 0x200000bc3d2 ; and byte ptr [rcx + 0x33], cl ; fimul word ptr [rax - 9] ; ret
0x00000200000bdcdc : je 0x200000bdccc ; mov al, 1 ; add rsp, 0x18 ; ret
0x00000200000bdcc2 : je 0x200000bdce6 ; xor al, al ; add rsp, 0x18 ; ret
0x00000200000bde3c : je 0x200000bde26 ; xor al, al ; ret
0x00000200000bdf79 : je 0x200000bdf72 ; mov rax, qword ptr [rax + 8] ; ret
0x00000200000be162 : je 0x200000be190 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bf260 : je 0x200000bf269 ; xor al, al ; ret
0x00000200000c02ce : je 0x200000c02c6 ; mov al, 1 ; ret
0x00000200000c02d6 : je 0x200000c02cd ; mov al, 1 ; ret
0x00000200000c0581 : je 0x200000c05af ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c315b : je 0x200000c3176 ; or eax, 0x18 ; ret
0x00000200000c7fa3 : je 0x200000c7fd1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c8f2b : je 0x200000c8ef4 ; jmp 0x200001d9d56
0x00000200000cc3bd : je 0x200000cc3e7 ; jo 0x200000cc350 ; ret
0x00000200000cfd85 : je 0x200000cfd98 ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000d1206 : je 0x200000d1231 ; xor byte ptr [rax - 0x7f], cl ; ret
0x00000200000d8c07 : je 0x200000d8c13 ; call 0x200005b4edc
0x00000200000d8c71 : je 0x200000d8c7d ; call 0x200005b4edc
0x00000200000d8cba : je 0x200000d8cc6 ; call 0x200005b4edc
0x00000200000d98f6 : je 0x200000d9924 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000d9fbd : je 0x200000d9fae ; xor al, al ; ret
0x00000200000de125 : je 0x200000de153 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dfa55 : je 0x200000dfa62 ; add rsp, 0x28 ; ret
0x00000200000dfab3 : je 0x200000dfabe ; mov eax, dword ptr [rax + 8] ; ret
0x00000200000e0b23 : je 0x200000e0b51 ; js 0x200000e0b77 ; add esp, 0x50 ; pop rdi ; ret
0x00000200000e335a : je 0x200000e3388 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e61f2 : je 0x200000e61d5 ; mov qword ptr [r9], rax ; ret
0x00000200000e61cb : je 0x200000e61d6 ; mov qword ptr [r9], rax ; ret
0x00000200000e625d : je 0x200000e61d9 ; mov qword ptr [r9], rax ; ret
0x00000200000e6496 : je 0x200000e64f5 ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x00000200000e6550 : je 0x200000e6557 ; ret
0x00000200000e7826 : je 0x200000e782f ; mov al, 1 ; ret
0x00000200000e9294 : je 0x200000e92c0 ; add dh, dh ; ret
0x00000200000e92d0 : je 0x200000e92fe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e980e : je 0x200000e984d ; mov eax, r8d ; ret
0x00000200000e98ac : je 0x200000e98da ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e9a05 : je 0x200000e9a33 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eb67a : je 0x200000eb6a8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ecb1f : je 0x200000ecb49 ; js 0x200000ecb1d ; ret
0x00000200000ee809 : je 0x200000ee817 ; mov eax, 1 ; ret
0x00000200000f13e7 : je 0x200000f1411 ; cmp cl, ch ; ret
0x00000200000f1c76 : je 0x200000f1ca5 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000f54fe : je 0x200000f552c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f5fec : je 0x200000f5fe6 ; mov byte ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200000f8104 : je 0x200000f8132 ; push 0x50c48348 ; pop rdi ; ret
0x00000200000f83f4 : je 0x200000f8422 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f8db1 : je 0x200000f8ddf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f908e : je 0x200000f90bc ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f94c9 : je 0x200000f94f7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f9d6c : je 0x200000f9d9a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fa632 : je 0x200000fa63e ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000101439 : je 0x20000101415 ; ret
0x00000200001018d5 : je 0x200001018e2 ; mov rax, rcx ; ret
0x0000020000101c58 : je 0x20000101c86 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000102c9b : je 0x20000102cc9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010304d : je 0x20000103056 ; xor al, al ; ret
0x0000020000103048 : je 0x2000010305b ; cmp cl, 0x8d ; je 0x2000010305b ; xor al, al ; ret
0x0000020000104d19 : je 0x20000104d47 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001056a4 : je 0x200001056b1 ; mov word ptr [rcx], r11w ; ret
0x0000020000105820 : je 0x2000010584e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001061a1 : je 0x200001061cf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001064bb : je 0x200001064c8 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x0000020000106eed : je 0x20000106f1b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000107be9 : je 0x20000107c1e ; mov rcx, rax ; call 0x200003c3e97
0x0000020000107d09 : je 0x20000107d38 ; push 0x40c48348 ; pop r15 ; ret
0x0000020000107f4c : je 0x20000107f7a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001080ae : je 0x200001080dc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010825b : je 0x20000108289 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000108689 : je 0x200001086b7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010a0ba : je 0x2000010a0e8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010a89c : je 0x2000010a89e ; and qword ptr [rcx], 0 ; ret
0x000002000010a890 : je 0x2000010a8a0 ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000010a96a : je 0x2000010a98c ; dec ecx ; jne 0x2000010a989 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000010b8cc : je 0x2000010b8dd ; mov rcx, rsi ; call 0x20000177ae7
0x000002000010c93b : je 0x2000010c969 ; js 0x2000010c98f ; add esp, 0x60 ; pop rdi ; ret
0x000002000010e2a3 : je 0x2000010e2d1 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000010ea0a : je 0x2000010ea1d ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000010ec85 : je 0x2000010ecb3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001100aa : je 0x200001100d8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000110fe6 : je 0x20000110ff8 ; mov qword ptr [rcx], 0 ; ret
0x0000020000111d3b : je 0x20000111d69 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000112361 : je 0x2000011238b ; js 0x200001122f4 ; ret
0x0000020000112afa : je 0x20000112b29 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000112cb0 : je 0x20000112cdb ; and byte ptr [rcx - 0x76], al ; ret 0x90c3
0x0000020000113a42 : je 0x20000113a4c ; mov dword ptr [r8], r9d ; ret
0x0000020000114214 : je 0x20000114242 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001149d6 : je 0x20000114a04 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001159f5 : je 0x20000115a23 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000115e63 : je 0x20000115e91 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000116b40 : je 0x20000116b6e ; push 0x50c48348 ; pop rdi ; ret
0x0000020000116cb0 : je 0x20000116cde ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000117230 : je 0x2000011725e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001172de : je 0x200001172e8 ; mov dword ptr [r8], edx ; ret
0x0000020000117798 : je 0x200001177c6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000117cc9 : je 0x20000117cf8 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001183c9 : je 0x200001183db ; mov rcx, qword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; ret
0x00000200001197f3 : je 0x20000119821 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001198ab : je 0x200001198d9 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000119aed : je 0x20000119b1b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000119df1 : je 0x20000119e1f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000119e54 : je 0x20000119e61 ; mov word ptr [rcx], r11w ; ret
0x000002000011a34c : je 0x2000011a37a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000011b5c6 : je 0x2000011b5d7 ; mov eax, dword ptr [rip + 0x23bc66] ; ret
0x000002000011b67a : je 0x2000011b6a8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011b9bb : je 0x2000011b997 ; add rsp, 0x28 ; ret
0x000002000011d437 : je 0x2000011d446 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011e90f : je 0x2000011e8ec ; mov eax, 0xc000000d ; ret
0x000002000011fa9a : je 0x2000011faac ; mov qword ptr [rax + 0x3e8], rdx ; ret
0x0000020000120f2b : je 0x20000120f3c ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000121118 : je 0x20000121146 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000123a0a : je 0x20000123a1c ; cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x0000020000124825 : je 0x20000124853 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000124891 : je 0x2000012487e ; mov eax, 1 ; ret
0x00000200001249a9 : je 0x200001249d7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000124abb : je 0x20000124ae9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000125059 : je 0x20000125087 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001254ae : je 0x200001254dc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000126c06 : je 0x20000126c34 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000126d65 : je 0x20000126d93 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000127253 : je 0x2000012725a ; ret
0x0000020000127766 : je 0x20000127760 ; mov byte ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x0000020000129266 : je 0x20000129294 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001292bd : je 0x200001292eb ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000129438 : je 0x20000129466 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012b059 : je 0x2000012b063 ; add eax, dword ptr [rdx + 0x60] ; ret
0x000002000012b495 : je 0x2000012b4c3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012b653 : je 0x2000012b681 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012b843 : je 0x2000012b871 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012c2c6 : je 0x2000012c2f4 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012c2f1 : je 0x2000012c2f9 ; mov eax, edx ; ret
0x000002000012c2f1 : je 0x2000012c2fa ; mov eax, edx ; ret
0x000002000012c3e1 : je 0x2000012c40f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012ca5b : je 0x2000012ca89 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012cfbb : je 0x2000012cfc8 ; add rsp, 0x28 ; ret
0x000002000012d9e5 : je 0x2000012da13 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012db1e : je 0x2000012db4c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012f7dd : je 0x2000012f80b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012fbac : je 0x2000012fbda ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000130fa8 : je 0x20000130fd6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000131bc8 : je 0x20000131bf6 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000131ced : je 0x20000131d1b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000132ab2 : je 0x20000132a7b ; call 0x1ffc3144ecb
0x0000020000132ab1 : je 0x20000132a7c ; call 0x1ffc3144ecc
0x00000200001337ed : je 0x2000013381b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000134ca3 : je 0x20000134cd1 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001352d2 : je 0x20000135300 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013638f : je 0x20000136399 ; mov qword ptr [r8], rax ; ret
0x0000020000136b58 : je 0x20000136b86 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000136e36 : je 0x20000136e64 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001371ad : je 0x200001371db ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000137527 : je 0x2000013751b ; xor al, al ; ret
0x0000020000138b81 : je 0x20000138b93 ; xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x000002000013a6fb : je 0x2000013a729 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013a79a : je 0x2000013a7c8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013aa8c : je 0x2000013aaba ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013ab2d : je 0x2000013ab5b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013b0da : je 0x2000013b09e ; mov eax, 0xc000000d ; ret
0x000002000013b90e : je 0x2000013b8a2 ; mov eax, 0xc000000d ; ret
0x000002000013c530 : je 0x2000013c545 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000013c551 : je 0x2000013c559 ; call rdx
0x0000020000016a2c : je 0x2000013cd16 ; ret
0x000002000013f073 : je 0x2000013f09d ; js 0x2000013f006 ; ret
0x000002000013fb84 : je 0x2000013fb8f ; mov byte ptr [rcx], 0 ; ret
0x000002000013fea9 : je 0x2000013fed4 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000014025f : je 0x2000014028d ; js 0x200001402b3 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000140666 : je 0x20000140670 ; xor ecx, ecx ; call rdx
0x0000020000142dac : je 0x20000142dda ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000143bed : je 0x20000143c06 ; call rcx
0x0000020000144c14 : je 0x20000144c42 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014514d : je 0x2000014517b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000145cc1 : je 0x20000145cef ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000145d43 : je 0x20000145d71 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000146a0f : je 0x20000146a3d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000146b2d : je 0x20000146b5b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000147a0e : je 0x20000147a3d ; push 0x40c48348 ; pop r15 ; ret
0x00000200001483e5 : je 0x20000148413 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000148c49 : je 0x20000148c77 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014a9c3 : je 0x2000014a9f1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014aa4f : je 0x2000014aa57 ; jmp r8
0x000002000014ac01 : je 0x2000014ac14 ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000014ac94 : je 0x2000014aca1 ; add rsp, 0x28 ; ret
0x000002000014ad18 : je 0x2000014ad46 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014ae50 : je 0x2000014ae58 ; inc eax ; ret
0x000002000014ae70 : je 0x2000014ae78 ; inc eax ; ret
0x000002000014b101 : je 0x2000014b12f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014b250 : je 0x2000014b27e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014b739 : je 0x2000014b73f ; call rdx
0x000002000014b765 : je 0x2000014b771 ; xor edx, edx ; call r8
0x000002000014b906 : je 0x2000014b934 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014c1dd : je 0x2000014c20b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014c264 : je 0x2000014c292 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014cd39 : je 0x2000014cd67 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014df45 : je 0x2000014df73 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014eea1 : je 0x2000014eea1 ; mov eax, 1 ; ret
0x000002000014ee98 : je 0x2000014eea1 ; xor eax, eax ; ret
0x000002000014fb00 : je 0x2000014fb2b ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000014fdb8 : je 0x2000014fde3 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000014fea2 : je 0x2000014fecd ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000020000150308 : je 0x20000150336 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000151bcd : je 0x20000151bf8 ; and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000151d9f : je 0x20000151dcd ; push 0x50c48348 ; pop rdi ; ret
0x00000200001525fc : je 0x20000152605 ; mov al, 1 ; ret
0x00000200001528d4 : je 0x200001528b1 ; xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000153755 : je 0x20000153783 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001539d8 : je 0x20000153a06 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000154656 : je 0x20000154684 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000154848 : je 0x2000015483c ; test eax, eax ; jns 0x2000015485b ; or eax, 0xffffffff ; ret
0x0000020000154b95 : je 0x20000154bc3 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000154ca6 : je 0x20000154cd4 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000154e3a : je 0x20000154e68 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000158041 : je 0x2000015806f ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001596a9 : je 0x200001596d7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000015974a : je 0x20000159778 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000015a259 : je 0x2000015a268 ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000015a44c : je 0x2000015a477 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000015a9e3 : je 0x2000015aa11 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000015bdff : je 0x2000015be2d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000015bfdb : je 0x2000015c009 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000015c6be : je 0x2000015c6ec ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000015d090 : je 0x2000015d0a1 ; mov rcx, rsi ; call 0x200000392bb
0x000002000015db16 : je 0x2000015db41 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000015e095 : je 0x2000015e0c3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000015f72e : je 0x2000015f73a ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x000002000015f739 : je 0x2000015f745 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x000002000015f94c : je 0x2000015f95b ; mov edx, eax ; call 0x2000006bc5a
0x000002000015f997 : je 0x2000015f9a7 ; mov edx, eax ; call 0x2000006bc5a
0x00000200001602e2 : je 0x20000160310 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000160584 : je 0x2000016058e ; mov dl, 1 ; mov al, dl ; ret
0x00000200001606a6 : je 0x200001606b3 ; mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200001617ab : je 0x200001617d9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000161d91 : je 0x20000161dbf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000162129 : je 0x2000016212f ; call rdx
0x0000020000163092 : je 0x200001630a1 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx], eax ; ret
0x0000020000163bd2 : je 0x20000163bda ; call rax
0x0000020000164628 : je 0x20000164656 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000164b82 : je 0x20000164bb1 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000168476 : je 0x2000016847e ; jmp rcx
0x000002000016849f : je 0x200001684a5 ; call rcx
0x00000200001684be : je 0x200001684c4 ; call rax
0x00000200001684e3 : je 0x200001684eb ; jmp rcx
0x0000020000168503 : je 0x20000168509 ; call rax
0x000002000016855a : je 0x20000168562 ; jmp rdx
0x000002000016857f : je 0x20000168585 ; call rax
0x00000200001685aa : je 0x200001685b0 ; call rcx
0x00000200001685d6 : je 0x200001685dc ; call rcx
0x00000200001685ff : je 0x20000168605 ; call rax
0x0000020000168623 : je 0x2000016862b ; jmp rdx
0x0000020000168d89 : je 0x20000168db7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000169771 : je 0x2000016979f ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000169e69 : je 0x20000169e97 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000169f6f : je 0x20000169f9d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016a388 : je 0x2000016a3b7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000016a66a : je 0x2000016a699 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000016aa3f : je 0x2000016aa6d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000016ab87 : je 0x2000016abb5 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000016bc15 : je 0x2000016bc43 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000016c0c5 : je 0x2000016c0f3 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016c94f : je 0x2000016c97d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000016fc20 : je 0x2000016fc4e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017037d : je 0x200001703ab ; push 0x40c48348 ; pop rdi ; ret
0x000002000017097a : je 0x200001709a4 ; js 0x2000017090d ; ret
0x0000020000170b44 : je 0x20000170b52 ; mov eax, 0xc000000d ; ret
0x00000200001718df : je 0x2000017190d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000171b17 : je 0x20000171b6b ; mov rcx, qword ptr [rcx + 0x2988] ; call rax
0x0000020000171e80 : je 0x20000171eae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001723d7 : je 0x20000172405 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017246a : je 0x20000172479 ; mov eax, 0xc0000354 ; ret
0x00000200001724b2 : je 0x200001724c2 ; mov dword ptr [rcx], r10d ; ret
0x00000200001726af : je 0x200001726dd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001729f2 : je 0x20000172a20 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001738f0 : je 0x20000173900 ; mov ecx, 8 ; mov eax, ecx ; ret
0x0000020000173beb : je 0x20000173c19 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001740f7 : je 0x20000174106 ; mov eax, 0xc0000225 ; ret
0x0000020000174ba2 : je 0x20000174bad ; mov eax, r9d ; ret
0x0000020000175389 : je 0x200001753b7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000177250 : je 0x2000017727e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000177765 : je 0x20000177793 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000177ad1 : je 0x20000177aff ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000177e1e : je 0x20000177e2b ; inc word ptr [rcx + 0x66] ; ret
0x00000200001787fc : je 0x2000017882a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000178ff8 : je 0x20000179006 ; mov byte ptr [rcx + 0x58], 1 ; xor eax, eax ; ret
0x0000020000179988 : je 0x200001799b6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017a3d6 : je 0x2000017a404 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017a52f : je 0x2000017a543 ; mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x000002000017a5b6 : je 0x2000017a5e4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017a644 : je 0x2000017a672 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017b8f8 : je 0x2000017b926 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000017b977 : je 0x2000017b9a1 ; jo 0x2000017b90a ; ret
0x000002000017bbdf : je 0x2000017bc0d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000017e329 : je 0x2000017e357 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017eb5b : je 0x2000017eb89 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017fc96 : je 0x2000017fcc4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001806e5 : je 0x20000180713 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000180a77 : je 0x20000180aa5 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000180ceb : je 0x20000180d19 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000181b1c : je 0x20000181b4a ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000182bfb : je 0x20000182c29 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000183b08 : je 0x20000183b37 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001843bc : je 0x200001843ea ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000186263 : je 0x20000186291 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000018661e : je 0x2000018662f ; mov ecx, ebx ; call 0x20000162856
0x000002000018661d : je 0x20000186630 ; mov ecx, ebx ; call 0x20000162857
0x0000020000187b1b : je 0x20000187b0a ; ret
0x0000020000187b16 : je 0x20000187b25 ; test rax, r8 ; je 0x20000187b0f ; ret
0x000002000018807f : je 0x200001880ad ; jo 0x200001880d3 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000188c4d : je 0x20000188c5e ; inc dword ptr [rax + 0x1ee8] ; ret
0x0000020000188e82 : je 0x20000188e8d ; mov eax, r11d ; ret
0x000002000018a24e : je 0x2000018a27c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000018a381 : je 0x2000018a3af ; add rsp, 0x20 ; pop rdi ; ret
0x000002000018a441 : je 0x2000018a46f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000018b1f9 : je 0x2000018b227 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000018bc13 : je 0x2000018bc41 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000018cbdb : je 0x2000018cc09 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000018d317 : je 0x2000018d342 ; xor byte ptr [rax + 0x33], cl ; ret
0x000002000018d6b2 : je 0x2000018d6e0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000018ed30 : je 0x2000018ed40 ; call 0x20000110585
0x000002000018ed47 : je 0x2000018ed57 ; call 0x2000018ed79
0x000002000018fba5 : je 0x2000018fbd3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000018fd23 : je 0x2000018fd51 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001912c0 : je 0x200001912ee ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019272b : je 0x20000192759 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001927a4 : je 0x200001927d2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001927fd : je 0x2000019282b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000192aa1 : je 0x20000192acb ; jo 0x20000192a34 ; ret
0x000002000019379a : je 0x200001937c8 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000193f7c : je 0x20000193faa ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001976f0 : je 0x2000019771e ; jo 0x20000197744 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001978f7 : je 0x20000197901 ; xor edx, edx ; mov rax, rdx ; ret
0x00000200001978f7 : je 0x20000197902 ; xor edx, edx ; mov rax, rdx ; ret
0x0000020000198078 : je 0x200001980a7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001982ca : je 0x200001982f8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000198c56 : je 0x20000198c5f ; xor al, al ; ret
0x0000020000198c66 : je 0x20000198c69 ; cmp ecx, 1 ; setle al ; ret
0x0000020000198d43 : je 0x20000198d52 ; ret 0x1a8
0x0000020000198d42 : je 0x20000198d53 ; ret 0x1a8
0x0000020000198eb6 : je 0x20000198ec5 ; mov eax, 1 ; ret
0x000002000019a748 : je 0x2000019a773 ; and byte ptr [rcx + 0x5e], al ; ret
0x000002000019aaea : je 0x2000019ab18 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000019ad90 : je 0x2000019ada2 ; mov rdx, rdi ; mov rcx, rbx ; call rax
0x000002000019bf60 : je 0x2000019bf69 ; xor al, al ; ret
0x000002000019c463 : je 0x2000019c491 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019c4fc : je 0x2000019c52a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019c589 : je 0x2000019c595 ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000019c825 : je 0x2000019c853 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019d3e3 : je 0x2000019d411 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019e165 : je 0x2000019e16e ; xor al, al ; ret
0x000002000019e58e : je 0x2000019e5bc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019f814 : je 0x2000019f842 ; cmp byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200001a1825 : je 0x200001a1836 ; inc rdi ; inc rdx ; jmp 0x200001a1863
0x00000200001a4714 : je 0x200001a473f ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001a8264 : je 0x200001a828f ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001a8fd4 : je 0x200001a8ffe ; js 0x200001a8f67 ; ret
0x00000200001a98f6 : je 0x200001a98b9 ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001b5b28
0x00000200001aaae5 : je 0x200001aab14 ; push 0x247c8b48 ; js 0x200001aaa82 ; ret
0x00000200001ab38f : je 0x200001ab39a ; mov dword ptr [rax + 4], edx ; ret
0x00000200001abfb3 : je 0x200001abfe1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ad765 : je 0x200001ad78f ; xor al, 0xff ; ret
0x00000200001ada95 : je 0x200001adac3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b0bde : je 0x200001b0c0c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b28d8 : je 0x200001b2906 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b2a33 : je 0x200001b2a61 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b2d2e : je 0x200001b2d43 ; xor edx, edx ; mov rcx, rdi ; call 0x2000026f019
0x00000200001b2da8 : je 0x200001b2dd6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b351d : je 0x200001b354b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b357b : je 0x200001b35a6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001b3b7a : je 0x200001b3b88 ; mov eax, 0xc000000d ; ret
0x00000200001b3cad : je 0x200001b3cdb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b5f05 : je 0x200001b5f34 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b616d : je 0x200001b619b ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001b714d : je 0x200001b717b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b7afe : je 0x200001b7b2c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b93bd : je 0x200001b93eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b9af6 : je 0x200001b9b24 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ba6d0 : je 0x200001ba6fb ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001bb810 : je 0x200001bb83e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bb959 : je 0x200001bb987 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bdeb1 : je 0x200001bdedf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bdfa2 : je 0x200001bdfd0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c046c : je 0x200001c049b ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001c063e : je 0x200001c066c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c06d6 : je 0x200001c0704 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200001c1945 : je 0x200001c1973 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c2b36 : je 0x200001c2b64 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c4fdf : je 0x200001c500d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c6964 : je 0x200001c6992 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c6c71 : je 0x200001c6c9f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038ad7 : je 0x200001d032b ; ret
0x000002000013fbec : je 0x200001d2dbe ; mov ecx, esi ; call rax
0x00000200000a97bd : je 0x200001d2f68 ; xor eax, eax ; ret
0x000002000003f02c : je 0x200001d8230 ; xor al, al ; ret
0x0000020000063c80 : je 0x200001dc683 ; ret
0x0000020000012a2a : je 0x200001dc6e1 ; ret
0x0000020000027e73 : je 0x200001ded5c ; xor eax, eax ; ret
0x00000200001e6320 : je 0x200001e630c ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001e9594 : je 0x200001e9616 ; loop 0x200001e959e ; nop ; jmp 0x200000d5875
0x00000200001e9dc8 : je 0x200001e9df5 ; jmp 0x1ffc3aa6ad4
0x00000200001eb933 : je 0x200001eb962 ; jmp 0x20000025012
0x000002000011a2d7 : je 0x200001f075a ; ret
0x0000020000016e50 : je 0x200001f2caf ; ret
0x0000020000020fcf : je 0x200001fb762 ; ret
0x000002000035f8ff : je 0x2000035f92a ; xor byte ptr [rax - 0x39], cl ; ret
0x000002000035fc30 : je 0x2000035fc39 ; mov al, 1 ; ret
0x000002000035fc71 : je 0x2000035fc84 ; mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000035fed4 : je 0x2000035fed0 ; ret
0x0000020000360405 : je 0x2000036040f ; mov al, r10b ; ret
0x0000020000360405 : je 0x20000360410 ; mov al, r10b ; ret
0x000002000036164b : je 0x20000361649 ; inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000362e81 : je 0x20000362eaf ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000363221 : je 0x2000036324f ; jo 0x20000363275 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003642fb : je 0x20000364329 ; jo 0x2000036434f ; add esp, 0x50 ; pop rdi ; ret
0x0000020000365398 : je 0x2000036539f ; ret
0x000002000036654a : je 0x20000366551 ; ret
0x0000020000366608 : je 0x20000366636 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003668ea : je 0x20000366918 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000366bd3 : je 0x20000366c01 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000372607 : je 0x20000367378 ; call rax
0x00000200003681cd : je 0x200003681da ; add rsp, 0x28 ; ret
0x000002000036871e : je 0x2000036874c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000368a7d : je 0x20000368aab ; js 0x20000368ad1 ; add esp, 0x50 ; pop rbp ; ret
0x000002000036a09a : je 0x2000036a0c8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036b1ec : je 0x2000036b21a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000036b2d5 : je 0x2000036b303 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000036b52b : je 0x2000036b55a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000036d042 : je 0x2000036d070 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036da87 : je 0x2000036dab5 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000036e20e : je 0x2000036e23c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036e6fa : je 0x2000036e70d ; lea rax, qword ptr [rip - 0x41c3] ; ret
0x000002000036eab3 : je 0x2000036eae1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000036f162 : je 0x2000036f168 ; call rax
0x000002000036f16d : je 0x2000036f19b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000036f582 : je 0x2000036f590 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x000002000035faf8 : je 0x20000370c75 ; ret
0x000002000035fc10 : je 0x20000370ce0 ; ret
0x000002000037237c : je 0x20000372394 ; mov rcx, r15 ; call rax
0x0000020000372f25 : je 0x20000372f33 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x0000020000624b48 : je 0x200003794d5 ; jmp 0x20000624b1a
0x0000020000379e35 : je 0x20000379e63 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037c298 : je 0x2000037c2c2 ; js 0x2000037c22b ; ret
0x000002000037cdcd : je 0x2000037cdfb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037e62d : je 0x2000037e65c ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000037efed : je 0x2000037f01b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000037f9fd : je 0x2000037fa2c ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003820d0 : je 0x200003820df ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000383612 : je 0x20000383621 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000038654d : je 0x2000038655a ; add rsp, 0x28 ; ret
0x0000020000387e5f : je 0x20000387e89 ; jo 0x20000387df2 ; ret
0x00000200003884bd : je 0x200003884eb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000038907e : je 0x200003890ac ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000389471 : je 0x2000038949f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000389cc9 : je 0x20000389cf8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000038c68b : je 0x2000038c6b9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000038c9c8 : je 0x2000038c9f2 ; and al, 0xff ; ret 0xc2eb
0x000002000038ce88 : je 0x2000038ceb6 ; push 0x50c48348 ; pop rdi ; ret
0x000002000038e3ce : je 0x2000038e3e6 ; mov edx, 0x820f0ce0 ; ret
0x000002000038e3cd : je 0x2000038e3e7 ; mov edx, 0x820f0ce0 ; ret
0x000002000038ebf2 : je 0x2000038ec21 ; push 0x40c48348 ; pop r15 ; ret
0x000002000038ec23 : je 0x2000038ec2c ; xor al, al ; ret
0x0000020000391aa3 : je 0x20000391ad2 ; and byte ptr [rax - 0x75], cl ; insb byte ptr [rdi], dx ; and al, 0x28 ; pop rsi ; ret
0x000002000039282c : je 0x2000039285a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039304a : je 0x20000393079 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000395eac : je 0x20000395eda ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000396222 : je 0x20000396250 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000396670 : je 0x2000039669e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000396b82 : je 0x20000396bb0 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000397264 : je 0x20000397292 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003976ae : je 0x200003976b3 ; ret
0x0000020000397694 : je 0x200003976c3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000039808d : je 0x200003980bb ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000398a56 : je 0x20000398a11 ; mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200003990b2 : je 0x200003990bf ; add rsp, 0x28 ; ret
0x0000020000399416 : je 0x20000399444 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000399c36 : je 0x20000399c47 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000399e5c : je 0x20000399e8a ; push 0x40c48348 ; pop rdi ; ret
0x000002000039a1bc : je 0x2000039a1ea ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039bc92 : je 0x2000039bca1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039ccf4 : je 0x2000039cd22 ; push 0x40c48348 ; pop rdi ; ret
0x000002000039de7e : je 0x2000039deac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039f94b : je 0x2000039f979 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a4222 : je 0x200003a4250 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a7a4f : je 0x200003a7a7d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003a80ec : je 0x200003a80fe ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x00000200003a80ec : je 0x200003a80ff ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x00000200003a86e3 : je 0x200003a8711 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a8974 : je 0x200003a89a2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003a8bb9 : je 0x200003a8be8 ; js 0x200003a8c0e ; add esp, 0x50 ; pop r15 ; ret
0x00000200003a8ea8 : je 0x200003a8ed6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003aa2fe : je 0x200003aa314 ; dec ecx ; jne 0x200003aa311 ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200003abb8a : je 0x200003abbb8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ac786 : je 0x200003ac7b4 ; jo 0x200003ac7da ; add esp, 0x50 ; pop rdi ; ret
0x00000200003ae180 : je 0x200003ae1ae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b2065 : je 0x200003b208f ; jo 0x200003b1ff8 ; ret
0x0000020000630846 : je 0x200003b3086 ; xor eax, eax ; ret
0x00000200003b3191 : je 0x200003b31c0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b323d : je 0x200003b326b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b3c7e : je 0x200003b3c87 ; xor al, al ; ret
0x00000200003b400c : je 0x200003b403a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b43c8 : je 0x200003b4395 ; or edi, 0xffffffff ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200003b6817 : je 0x200003b6825 ; xor r9d, r9d ; jmp rax
0x00000200003b6dad : je 0x200003b6dd7 ; js 0x200003b6d3f ; ret
0x00000200003b82b1 : je 0x200003b82be ; add rsp, 0x28 ; ret
0x00000200003ba7f2 : je 0x200003ba801 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003bba37 : je 0x200003bba65 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003bbc32 : je 0x200003bbc60 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003bbcd7 : je 0x200003bbd05 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003bbd93 : je 0x200003bbda1 ; mov rcx, rbx ; call r11
0x00000200003bc007 : je 0x200003bc00c ; ret
0x00000200003bc460 : je 0x200003bc48e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003bc563 : je 0x200003bc591 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003bcae7 : je 0x200003bcafa ; test al, 4 ; jne 0x200003bcafa ; call 0x200000f8d58
0x00000200003bcb56 : je 0x200003bcb62 ; mov rcx, rbx ; call rdx
0x00000200003bcdcf : je 0x200003bcdfd ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003beb40 : je 0x200003beb6e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003bfbd5 : je 0x200003bfc03 ; js 0x200003bfc29 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c01a3 : je 0x200003c01d1 ; js 0x200003c01f7 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003c05dc : je 0x200003c060a ; jo 0x200003c0630 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003c068a : je 0x200003c06b8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c06b2 : je 0x200003c06bb ; xor eax, eax ; ret
0x00000200003c31a9 : je 0x200003c31d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c37af : je 0x200003c37dd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c393b : je 0x200003c3969 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c4199 : je 0x200003c41c3 ; js 0x200003c412c ; ret
0x00000200003c5749 : je 0x200003c5777 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c78cb : je 0x200003c78f9 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c7fda : je 0x200003c8008 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c829d : je 0x200003c82b7 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003caf74 : je 0x200003cafa2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cbee7 : je 0x200003cbf15 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ce44b : je 0x200003ce479 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d195c : je 0x200003d1987 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200003d345e : je 0x200003d348c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d51ad : je 0x200003d51db ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d5472 : je 0x200003d54a0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d9262 : je 0x200003d926b ; xor al, al ; ret
0x00000200003d9e98 : je 0x200003d9ec6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003db6ef : je 0x200003db71d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003db80d : je 0x200003db83c ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003db87d : je 0x200003db8ab ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003dbb79 : je 0x200003dbba7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003dbe4c : je 0x200003dbe7a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003dd802 : je 0x200003dd819 ; cmp rcx, 0x20 ; je 0x200003dd824 ; ret
0x00000200003dd808 : je 0x200003dd81e ; ret
0x00000200003dd8f1 : je 0x200003dd900 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003de052 : je 0x200003de080 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003dfd23 : je 0x200003dfd51 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e6729 : je 0x200003e6733 ; call r12
0x00000200003e6e2f : je 0x200003e6e17 ; mov eax, 0xc0000022 ; ret
0x00000200003efa2f : je 0x200003efa14 ; or al, 0 ; xor edx, edx ; jmp 0x200003ebcd1
0x00000200003f0176 : je 0x200003f01a4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f0295 : je 0x200003f02c1 ; xor byte ptr [rdi], cl ; test byte ptr [rsi], dl ; ret
0x00000200003f0886 : je 0x200003f08b5 ; push 0x40c48348 ; pop r15 ; ret
0x00000200003f611a : je 0x200003f612b ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rbx]
0x00000200003f7032 : je 0x200003f7060 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f8565 : je 0x200003f858f ; and al, ch ; ret
0x00000200003f948c : je 0x200003f9482 ; mov eax, 0xc000000d ; ret
0x00000200003f97fb : je 0x200003f980e ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fbf42 : je 0x200003fbf70 ; jo 0x200003fbf96 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003fee26 : je 0x200003fee32 ; bts dword ptr [rdx], 0x18 ; ret
0x00000200004000eb : je 0x20000400119 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040139f : je 0x2000040132e ; ret
0x0000020000401864 : je 0x200004014ec ; call rax
0x00000200004019f8 : je 0x20000401784 ; mov ecx, eax ; call r9
0x0000020000403318 : je 0x20000403324 ; mov rcx, rdi ; call rdx
0x0000020000404d1a : je 0x20000404d12 ; mov eax, 0xc000000d ; ret
0x00000200004051d2 : je 0x200004051e5 ; xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x0000020000406322 : je 0x2000040634d ; cmp byte ptr [rcx - 0x75], al ; ret
0x0000020000406445 : je 0x20000406473 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000040849a : je 0x20000408507 ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x0000020000409aa7 : je 0x20000409ad5 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040b259 : je 0x2000040b26c ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000040c966 : je 0x2000040c994 ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000040eb15 : je 0x2000040eb40 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004107e5 : je 0x200004107ee ; xor eax, eax ; ret
0x0000020000410ce1 : je 0x20000410cee ; add rsp, 0x28 ; ret
0x0000020000411307 : je 0x20000411335 ; js 0x2000041135b ; add esp, 0x60 ; pop rdi ; ret
0x00000200004155e0 : je 0x200004155f2 ; mov rcx, r15 ; call 0x200000392bc
0x000002000041629d : je 0x200004162cb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004165d9 : je 0x20000416607 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000417024 : je 0x20000417052 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000417534 : je 0x20000417562 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000419924 : je 0x20000419952 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000419ac7 : je 0x20000419af1 ; jo 0x20000419a5a ; ret
0x000002000041b784 : je 0x2000041b7b2 ; js 0x2000041b7d8 ; add esp, 0x60 ; pop rdi ; ret
0x000002000041bd7d : je 0x2000041bdab ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041c834 : je 0x2000041c85e ; js 0x2000041c7c7 ; ret
0x000002000041cc47 : je 0x2000041cc75 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000041d2fd : je 0x2000041d32b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000041d4dd : je 0x2000041d50b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000041f98b : je 0x2000041f9b9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000421032 : je 0x20000421060 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042189a : je 0x200004218d7 ; mov rcx, rdx ; call 0x2000004d658
0x000002000042196f : je 0x200004219d2 ; mov rcx, rbx ; call 0x2000004d658
0x0000020000421c3a : je 0x20000421c67 ; mov ecx, eax ; call 0x2000004ff8b
0x0000020000422c55 : je 0x20000422c83 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000422ed9 : je 0x20000422f07 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004233b8 : je 0x200004233e6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000424bc5 : je 0x20000424bd4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000424e16 : je 0x20000424e1b ; ret
0x0000020000424e54 : je 0x20000424e67 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000425051 : je 0x20000425060 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004250d4 : je 0x200004250e3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004255f9 : je 0x20000425627 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042619c : je 0x200004261ca ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042638e : je 0x2000042634e ; mov rcx, qword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200004266b3 : je 0x200004266e1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049bb4f : je 0x20000426c40 ; mov rcx, r14 ; call rax
0x00000200004274c4 : je 0x200004274f2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004277cd : je 0x200004277fc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000427a85 : je 0x20000427ab3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000427f18 : je 0x20000427ea9 ; ret
0x0000020000427e8c : je 0x20000427eb6 ; jo 0x20000427e1f ; ret
0x0000020000429e5b : je 0x20000429e89 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000042b82f : je 0x2000042b815 ; call 0x20000055ea9
0x000002000042c02e : je 0x2000042bffa ; mov eax, 0xc0000022 ; ret
0x000002000042ee64 : je 0x2000042ee69 ; ret
0x000002000042f3af : je 0x2000042f3dd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042f549 : je 0x2000042f55c ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042f5f0 : je 0x2000042f5f8 ; mov eax, edx ; ret
0x000002000042f5f0 : je 0x2000042f5f9 ; mov eax, edx ; ret
0x000002000042f5ef : je 0x2000042f5fa ; mov eax, edx ; ret
0x000002000042f5ee : je 0x2000042f5fb ; mov eax, edx ; ret
0x000002000042f5ed : je 0x2000042f5fc ; mov eax, edx ; ret
0x0000020000431ff6 : je 0x2000043200a ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x00000200004326a2 : je 0x200004326d0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000433b03 : je 0x20000433b17 ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000043a0d4 : je 0x2000043a0de ; call rax
0x000002000043c22e : je 0x2000043c228 ; ret 0xf20
0x000002000043c4dc : je 0x2000043c50a ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000443d96 : je 0x20000443539 ; call 0x20000072e49
0x0000020000443b92 : je 0x20000443ba2 ; call 0x20000072e45
0x0000020000443bfd : je 0x20000443c11 ; lea rcx, qword ptr [r15 + 0x30] ; call 0x20000072e49
0x0000020000443f14 : je 0x20000443c3b ; call 0x20000072e49
0x00000200004459d9 : je 0x200004459e6 ; add rsp, 0x78 ; ret
0x0000020000445b35 : je 0x20000445a22 ; call 0x20000072e49
0x0000020000446255 : je 0x20000446283 ; js 0x200004462a9 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000446d18 : je 0x20000446d35 ; mov rcx, r13 ; call 0x20000067ea8
0x000002000045a87e : je 0x2000045a88f ; xor al, al ; add rsp, 8 ; ret
0x0000020000463971 : je 0x2000046399f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004639e4 : je 0x20000463a12 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000463a21 : je 0x20000463a4f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000463a67 : je 0x20000463a95 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000463db5 : je 0x20000463dc4 ; mov eax, 1 ; ret
0x0000020000464ee1 : je 0x20000464f10 ; adc byte ptr [rax - 0x75], cl ; jl 0x20000464f15 ; sbb byte ptr [rbx], ch ; ret 0x90c3
0x0000020000466aa0 : je 0x20000466ace ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000466ad6 : je 0x20000466b04 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000466b57 : je 0x20000466b0f ; ret
0x0000020000466b3f : je 0x20000466b56 ; dec dword ptr [rdx + 0x18] ; ret
0x00000200004672bf : je 0x200004672be ; test cl, 0x40 ; jne 0x200004672d2 ; xor al, al ; ret
0x0000020000467bdd : je 0x20000467c0b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046a20f : je 0x2000046a23d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000046b32d : je 0x2000046b340 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000046b79a : je 0x2000046b7ae ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000046c93f : je 0x2000046c96d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046c96e : je 0x2000046c99c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046c9ba : je 0x2000046c9e8 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046c9f2 : je 0x2000046ca20 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000046e13b : je 0x2000046e169 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000471037 : je 0x20000471065 ; jo 0x2000047108b ; add esp, 0x50 ; pop rdi ; ret
0x00000200004721c5 : je 0x2000047229b ; mov rcx, rbp ; call rax
0x00000200005e5a48 : je 0x2000047243c ; mov rcx, r12 ; call rax
0x0000020000475a40 : je 0x20000475a6e ; push 0x50c48348 ; pop rdi ; ret
0x0000020000475b08 : je 0x20000475b36 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000476060 : je 0x2000047608e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000476a64 : je 0x20000476a92 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004772e7 : je 0x20000477315 ; js 0x2000047733b ; add esp, 0x60 ; pop rdi ; ret
0x0000020000477463 : je 0x20000477491 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000478215 : je 0x20000478243 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000047b01e : je 0x2000047b04c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000047b42f : je 0x2000047b45d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000047c031 : je 0x2000047c060 ; push 0x247c8b48 ; jo 0x2000047bfcd ; ret
0x000002000047d9f6 : je 0x2000047da24 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000047e819 : je 0x2000047e822 ; xor eax, eax ; ret
0x000002000047f361 : je 0x2000047f38f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000480d26 : je 0x20000480d55 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000480f6a : je 0x20000480f95 ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x00000200004831fa : je 0x20000483228 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000483598 : je 0x200004835c6 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000484183 : je 0x200004841b2 ; js 0x200004841d8 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004841a5 : je 0x200004841be ; mov eax, ebx ; jmp 0x20000484179
0x00000200004856cf : je 0x200004856fd ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000486e01 : je 0x20000486d82 ; jmp 0x20000486dd3
0x000002000048769a : je 0x200004876c4 ; jo 0x2000048762d ; ret
0x00000200004877be : je 0x200004877e8 ; jo 0x20000487751 ; ret
0x000002000048810a : je 0x20000488138 ; push 0x40c48348 ; pop rdi ; ret
0x000002000048819c : je 0x200004881c6 ; jo 0x2000048812f ; ret
0x000002000048894d : je 0x2000048899a ; mov rcx, rsi ; call 0x200000b5018
0x0000020000521bb5 : je 0x200004899c0 ; call rax
0x000002000048b9cc : je 0x2000048b9dd ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x000002000048c2e3 : je 0x2000048c311 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000048cfb2 : je 0x2000048cfe0 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000048efaa : je 0x2000048efd8 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000048f683 : je 0x2000048f6b1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000490437 : je 0x20000490465 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049055c : je 0x2000049058a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000490598 : je 0x200004905c6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000490b05 : je 0x20000490b33 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004927bc : je 0x200004927d2 ; add rdx, 0x38 ; call 0x200000bf039
0x00000200004945a1 : je 0x200004945d0 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004951b5 : je 0x200004951e3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000495a30 : je 0x20000495a5b ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000497c1b : je 0x20000497c49 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000498353 : je 0x2000049835a ; ret
0x0000020000498741 : je 0x2000049876f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000499743 : je 0x200004997b0 ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x000002000049a1d7 : je 0x2000049a1e4 ; add rsp, 0x28 ; ret
0x000002000049a5ea : je 0x2000049a619 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049c06f : je 0x2000049c09d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000049d01d : je 0x2000049d047 ; js 0x2000049cfb0 ; ret
0x000002000049d7b1 : je 0x2000049d7c4 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000049e722 : je 0x2000049e751 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a0012 : je 0x200004a0032 ; mov rcx, r12 ; call 0x200000c44d8
0x00000200004a4f71 : je 0x200004a4f9f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004a58a7 : je 0x200004a58d5 ; push 0x40c48348 ; pop rdi ; ret
0x00000200004a5afe : je 0x200004a5b2c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004a5c4b : je 0x200004a5c79 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004a647c : je 0x200004a64aa ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004063f5 : je 0x200004a93b6 ; ret
0x00000200004aa79a : je 0x200004aa7c8 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004ac6a2 : je 0x200004ac6d1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ac6eb : je 0x200004ac719 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ad0ef : je 0x200004ad11a ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004adc76 : je 0x200004adca4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004adc9b : je 0x200004adca4 ; xor al, al ; ret
0x00000200004adea3 : je 0x200004aded2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004aea7f : je 0x200004aeaad ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004aec5f : je 0x200004aec8d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b0618 : je 0x200004b05e6 ; ret
0x00000200004b0960 : je 0x200004b098e ; push 0x40c48348 ; pop rdi ; ret
0x00000200004b1a71 : je 0x200004b1a9b ; inc edx ; jmp 0x200004b1a32
0x00000200004b1f5f : je 0x200004b1f6c ; add rsp, 0x28 ; ret
0x00000200004b1f8f : je 0x200004b1f96 ; ret
0x00000200004b21c1 : je 0x200004b21d0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b2a68 : je 0x200004b2a93 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004b30aa : je 0x200004b30d9 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b3396 : je 0x200004b33c4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b351d : je 0x200004b3523 ; call rax
0x00000200004b37e2 : je 0x200004b37e8 ; call rax
0x00000200004b5409 : je 0x200004b5437 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b5a6c : je 0x200004b5a72 ; call rax
0x00000200004b5b08 : je 0x200004b5b36 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b5dea : je 0x200004b5e18 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b67f4 : je 0x200004b6807 ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200004b6ee6 : je 0x200004b6f14 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b7284 : je 0x200004b72b2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b99a6 : je 0x200004b99d4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b9fc5 : je 0x200004b9fd5 ; mov rcx, r14 ; call r15
0x00000200004bb4f0 : je 0x200004bb4fd ; mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x00000200004bbc53 : je 0x200004bbc81 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004c3b0a : je 0x200004c3b38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c4263 : je 0x200004c426b ; call rax
0x00000200004c54e7 : je 0x200004c54cf ; xor al, al ; ret
0x00000200004c6563 : je 0x200004c6591 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c6655 : je 0x200004c665f ; add dword ptr [rcx], r11d ; ret
0x00000200004c6acc : je 0x200004c6ad8 ; add dword ptr [rcx + 0x40], r11d ; ret
0x00000200004c6b8b : je 0x200004c6bb9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c6c11 : je 0x200004c6c3c ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004c8575 : je 0x200004c85a3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c8bd6 : je 0x200004c8c05 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004cc23f : je 0x200004cc26e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004cc4f9 : je 0x200004cc527 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004cf873 : je 0x200004cf8a2 ; js 0x200004cf8c8 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004cfb46 : je 0x200004cfb74 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d0415 : je 0x200004d0421 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004d13d2 : je 0x200004d13fc ; and al, ch ; ret 0xf51b
0x00000200004d13e9 : je 0x200004d1417 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d147c : je 0x200004d14aa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d1972 : je 0x200004d1953 ; push rsi ; ret
0x00000200004d3f05 : je 0x200004d3f33 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d66bb : je 0x200004d66e9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d90a3 : je 0x200004d90d1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dc0cd : je 0x200004dc0fb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dc181 : je 0x200004dc1af ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e1fc0 : je 0x200004e1fee ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e4517 : je 0x200004e458d ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200004e4516 : je 0x200004e458e ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200004e59b6 : je 0x200004e59e4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e5f3f : je 0x200004e5f6d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e5fcf : je 0x200004e5ffd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e6a2a : je 0x200004e6a58 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e8a6d : je 0x200004e8a9b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e9e61 : je 0x200004e9e8b ; jo 0x200004e9df4 ; ret
0x00000200004ea24f : je 0x200004ea278 ; call rax
0x00000200004ed696 : je 0x200004ed6c4 ; jo 0x200004ed6ea ; add esp, 0x50 ; pop rdi ; ret
0x00000200004f1f0a : je 0x200004f1f19 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004f41f5 : je 0x200004f421f ; js 0x200004f4188 ; ret
0x00000200004f4816 : je 0x200004f4844 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f48f0 : je 0x200004f48fd ; add rax, 0x10 ; ret
0x00000200004f4968 : je 0x200004f4a35 ; mov rcx, rbx ; call rax
0x00000200004f6dd0 : je 0x200004f6dfe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f925f : je 0x200004f928d ; jo 0x200004f92b3 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004f9380 : je 0x200004f9388 ; call r11
0x00000200004f9399 : je 0x200004f93c7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fa232 : je 0x200004fa260 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fb0c6 : je 0x200004fb0cf ; mov al, 1 ; ret
0x00000200004fb2bd : je 0x200004fb2eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fbed8 : je 0x200004fbeaf ; xor eax, eax ; ret
0x00000200004fd062 : je 0x200004fd090 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fe7d8 : je 0x200004fe806 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fee8d : je 0x200004feebc ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004ff537 : je 0x200004ff544 ; mov r8, qword ptr [rcx] ; mov rax, r8 ; ret
0x00000200004ff8a1 : je 0x200004ff8cf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ffe6e : je 0x200004ffe9c ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000500b91 : je 0x20000500bbf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000500c0e : je 0x20000500c3c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050171a : je 0x20000501748 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005060fd : je 0x2000050612b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000507602 : je 0x2000050762d ; jo 0x200005075f3 ; ret
0x0000020000509cc8 : je 0x20000509cf6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050bb8d : je 0x2000050bbbb ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050bbff : je 0x2000050bc2d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050cc7a : je 0x2000050cca8 ; push 0x50c48348 ; pop rdi ; ret
0x000002000051077b : je 0x200005107a5 ; jo 0x2000051070e ; ret
0x00000200005119dd : je 0x20000511a0b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000511f2d : je 0x20000511f5b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000512dd2 : je 0x20000512de7 ; xor edx, edx ; mov rcx, rbx ; call 0x2000026f019
0x0000020000512f5d : je 0x20000512f87 ; and al, ch ; ret
0x00000200005144cc : je 0x200005144f6 ; jo 0x2000051445f ; ret
0x00000200005147cb : je 0x20000514846 ; jmp 0x20000514795
0x00000200005159ac : je 0x200005159da ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000517a90 : je 0x20000517abf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000517b83 : je 0x20000517bb2 ; push 0x247c8b48 ; jo 0x20000517b20 ; ret
0x00000200005185d2 : je 0x20000518600 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005190d0 : je 0x200005190fe ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051b332 : je 0x2000051b360 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051bdcd : je 0x2000051bddc ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051c128 : je 0x2000051c156 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051d475 : je 0x2000051d488 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051dbf9 : je 0x2000051dc05 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000051f21b : je 0x2000051f249 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051f671 : je 0x2000051f69b ; js 0x2000051f604 ; ret
0x0000020000520105 : je 0x20000520115 ; call 0x20000424e1d
0x00000200005202f3 : je 0x20000520321 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000521356 : je 0x20000521363 ; call qword ptr [rip - 0x1d3d16]
0x0000020000522c55 : je 0x20000522c83 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000522c74 : je 0x20000522c9b ; call rax
0x0000020000522d4f : je 0x20000522d5e ; xor edx, edx ; call 0x2000026f016
0x0000020000524475 : je 0x200005244a3 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005251d4 : je 0x20000525202 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000525fd6 : je 0x20000526004 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000527986 : je 0x200005279b4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000529494 : je 0x200005294c2 ; js 0x200005294e8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005296cf : je 0x200005296fd ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052a40c : je 0x2000052a43a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052a4de : je 0x2000052a4fa ; mov rcx, rbp ; call 0x2000015993c
0x000002000052a713 : je 0x2000052a741 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052ab46 : je 0x2000052ab74 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052bd66 : je 0x2000052bd94 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052d7f5 : je 0x2000052d81f ; and al, ch ; ret
0x000002000052dd28 : je 0x2000052dd39 ; mov rcx, r13 ; call 0x200000d9fd7
0x000002000052e583 : je 0x2000052e58b ; mov dword ptr [rdx], eax ; ret
0x000002000052f435 : je 0x2000052f42f ; ret 0xf02
0x000002000052f987 : je 0x2000052f981 ; ret 0xf02
0x0000020000533ba2 : je 0x20000533bd0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000534384 : je 0x200005343b2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000053b5b1 : je 0x2000053b5db ; and al, ch ; call rax
0x000002000053b822 : je 0x2000053b850 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053e633 : je 0x2000053e661 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053fae7 : je 0x2000053fb15 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000053fbd3 : je 0x2000053fc01 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000053fd9f : je 0x2000053fdcd ; push 0x50c48348 ; pop rdi ; ret
0x0000020000544bde : je 0x20000544be6 ; jmp qword ptr [rax]
0x0000020000545542 : je 0x2000054554b ; inc edx ; jmp 0x20000545560
0x0000020000546aee : je 0x20000546b1c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000547133 : je 0x20000547161 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000547356 : je 0x20000547365 ; mov eax, 0xc00000bb ; ret
0x0000020000547386 : je 0x20000547395 ; mov eax, 0xc0000001 ; ret
0x0000020000549f68 : je 0x20000549f96 ; jo 0x20000549fbc ; add esp, 0x50 ; pop rdi ; ret
0x000002000054c27e : je 0x2000054c2ac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054dc2c : je 0x2000054dc40 ; mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x000002000054e4d3 : je 0x2000054e4e5 ; mov rcx, rbp ; call 0x2000016f0d0
0x0000020000550042 : je 0x20000550070 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000550807 : je 0x20000550836 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005509ad : je 0x200005509db ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000552239 : je 0x20000552267 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000552cce : je 0x20000552cf8 ; jo 0x20000552c61 ; ret
0x0000020000552dc2 : je 0x20000552ddb ; mov edx, 0x58706e50 ; call 0x2000026f019
0x000002000055db98 : je 0x2000055dbc6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055e4d8 : je 0x2000055e506 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055e5af : je 0x2000055e5de ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055e92d : je 0x2000055e95b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055e9bf : je 0x2000055e9ed ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055f753 : je 0x2000055f781 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000055fbc0 : je 0x2000055fbea ; js 0x2000055fb52 ; ret
0x000002000055fda0 : je 0x2000055fe19 ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x00000200005601ce : je 0x200005601fd ; push 0x247c8b48 ; jo 0x2000056016b ; ret
0x000002000056058b : je 0x200005605b9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056100b : je 0x20000561011 ; call rax
0x00000200005618ff : je 0x2000056192d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000561f6b : je 0x20000561f99 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000562d51 : je 0x20000562d60 ; xor edx, edx ; call 0x2000026f016
0x0000020000562d66 : je 0x20000562d75 ; xor edx, edx ; call 0x2000026f016
0x0000020000566076 : je 0x200005660a4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000056609a : je 0x200005660a5 ; or eax, 0xffffffff ; ret
0x0000020000566096 : je 0x200005660af ; dec ecx ; je 0x200005660a9 ; or eax, 0xffffffff ; ret
0x0000020000566c3c : je 0x20000566c6a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056973f : je 0x2000056976d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000569916 : je 0x20000569944 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000569a19 : je 0x20000569a28 ; mov eax, 0xc0000303 ; ret
0x000002000056a882 : je 0x2000056a8b0 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000056a979 : je 0x2000056a9a4 ; sub byte ptr [rcx - 0x75], al ; ret
0x000002000056ac3a : je 0x2000056ac68 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056ae60 : je 0x2000056ae8e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000056b7e4 : je 0x2000056b813 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000056d9cd : je 0x2000056d9fb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056dfb8 : je 0x2000056dfe6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000056f0eb : je 0x2000056f119 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056f6bd : je 0x2000056f6eb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000057351b : je 0x20000573524 ; xor eax, eax ; ret
0x0000020000573516 : je 0x20000573543 ; cmp eax, 0xa ; je 0x20000573529 ; xor eax, eax ; ret
0x0000020000578ed7 : je 0x20000578f05 ; js 0x20000578f2b ; add esp, 0x60 ; pop rdi ; ret
0x000002000057a4e9 : je 0x2000057a518 ; js 0x2000057a53e ; add esp, 0x50 ; pop r15 ; ret
0x000002000057b5a9 : je 0x2000057b5d7 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000057c7a3 : je 0x2000057c7d1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000057cf2f : je 0x2000057cf5d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000057dc2f : je 0x2000057dc5d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000057dd5f : je 0x2000057dd6a ; call 0x200000d9fd4
0x000002000057dd8e : je 0x2000057dd99 ; call 0x200000d9fd4
0x000002000057df6b : je 0x2000057df7e ; lea rax, qword ptr [rip - 0x12f294] ; ret
0x000002000057f410 : je 0x2000057f43e ; add rsp, 0x30 ; pop rdi ; ret
0x000002000058099c : je 0x200005809ca ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000581fe0 : je 0x2000058200e ; js 0x20000582034 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005820ef : je 0x200005820f5 ; call rax
0x000002000058223d : je 0x2000058226b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000582ba1 : je 0x20000582bcf ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000583b1a : je 0x20000583b2b ; mov dword ptr [rip - 0x30cb4a], edx ; ret
0x00000200005842ae : je 0x200005842c1 ; lea rax, qword ptr [rip - 0x1336d7] ; ret
0x000002000058447e : je 0x200005844ac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000058620c : je 0x2000058623a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000058740a : je 0x20000587438 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005875aa : je 0x200005875d1 ; mov rcx, rbx ; call 0x2000042383b
0x000002000058760a : je 0x20000587631 ; mov rcx, rbx ; call 0x2000042383b
0x0000020000587975 : je 0x200005879a3 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000587da4 : je 0x20000587dd2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000590c11 : je 0x20000590c3f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000590d16 : je 0x20000590d44 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000591fa3 : je 0x20000591fb0 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000593f66 : je 0x20000593f94 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000596768 : je 0x200005967a0 ; add rax, rdx ; jmp 0x20000596777
0x0000020000596793 : je 0x200005967a4 ; test cl, cl ; jne 0x200005967a4 ; mov al, 1 ; ret
0x00000200005968c5 : je 0x200005968f3 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000597ce1 : je 0x20000597d0d ; lea rdx, qword ptr [rbp - 0x11] ; call 0x20000593f80
0x00000200005984e4 : je 0x20000598512 ; push 0x50c48348 ; pop rdi ; ret
0x00000200005997a5 : je 0x200005997b0 ; mov dword ptr [rdx], eax ; mov eax, r10d ; ret
0x000002000059a7e8 : je 0x2000059a817 ; push 0x247c8b48 ; jo 0x2000059a785 ; ret
0x000002000059aff8 : je 0x2000059b017 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000059b02d : je 0x2000059b061 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059b08d : je 0x2000059b096 ; mov al, 1 ; ret
0x000002000059bf0f : je 0x2000059bf3d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000059cd95 : je 0x2000059cdc3 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000059da29 : je 0x2000059da57 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000059f070 : je 0x2000059f09a ; js 0x2000059f003 ; ret
0x000002000059f13e : je 0x2000059f16c ; jo 0x2000059f192 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005a0d80 : je 0x200005a0daf ; push 0x76063b45 ; or edi, edi ; ret
0x00000200005a3c68 : je 0x200005a3c92 ; js 0x200005a3bfb ; ret
0x00000200005a3e73 : je 0x200005a3ea2 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200005a4607 : je 0x200005a4635 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005a4ad1 : je 0x200005a4aff ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005a71c4 : je 0x200005a71f3 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200005a727a : je 0x200005a72a8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005a7b7d : je 0x200005a7b6f ; xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x00000200005a9238 : je 0x200005a924b ; cmp r9, r10 ; jne 0x200005a9232 ; xor al, al ; ret
0x00000200005aaea7 : je 0x200005aaeb7 ; mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x00000200005abbaf : je 0x200005abbdd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005abe13 : je 0x200005abe22 ; mov eax, 0xc000000d ; ret
0x00000200005ac9af : je 0x200005ac9dd ; and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x00000200005acd23 : je 0x200005acd51 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ad647 : je 0x200005ad675 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005adf90 : je 0x200005adff2 ; lea rdx, qword ptr [rsp + 0x48] ; call rax
0x00000200005ae022 : je 0x200005ae050 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ae791 : je 0x200005ae7bf ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ae81b : je 0x200005ae849 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005af9f9 : je 0x200005afa28 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200005b10fc : je 0x200005b112a ; js 0x200005b1150 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005b28b7 : je 0x200005b28c6 ; mov eax, 0xc0000002 ; ret
0x00000200005b2abf : je 0x200005b2ace ; mov eax, 0xc0000002 ; ret
0x00000200005b3c97 : je 0x200005b3ca6 ; mov eax, 0xc0000002 ; ret
0x00000200005b3e9f : je 0x200005b3eae ; mov eax, 0xc0000002 ; ret
0x00000200005b4c39 : je 0x200005b4c67 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005b4cf9 : je 0x200005b4d27 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005b4d69 : je 0x200005b4d7c ; lea rcx, qword ptr [rbx + 0x50] ; call 0x20000071008
0x00000200005b4e3f : je 0x200005b4e69 ; js 0x200005b4dd2 ; ret
0x00000200005b51b4 : je 0x200005b51c8 ; mov rdx, qword ptr [rdi + 0x38] ; lea ecx, dword ptr [rbp + 2] ; call rax
0x00000200005b552c : je 0x200005b555b ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200005b64ab : je 0x200005b64ba ; mov eax, 0xc0000034 ; ret
0x00000200005ba43b : je 0x200005ba469 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ba6c3 : je 0x200005ba6f1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ba9b0 : je 0x200005ba9df ; push 0x40c48348 ; pop r15 ; ret
0x00000200005baa61 : je 0x200005baa8f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005baaf4 : je 0x200005bab22 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005badeb : je 0x200005bae19 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005bb375 : je 0x200005bb3a3 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005be944 : je 0x200005be972 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005befe6 : je 0x200005bf014 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005c190b : je 0x200005c1939 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005c2f9d : je 0x200005c2fcb ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c3467 : je 0x200005c3491 ; jo 0x200005c33fa ; ret
0x00000200005c6361 : je 0x200005c638b ; jo 0x200005c62f4 ; ret
0x00000200005c6d4e : je 0x200005c6d77 ; call rax
0x00000200005c6e2d : je 0x200005c6e5b ; mov dword ptr [rsp + 0x54], r11d ; call rax
0x00000200005c7f2c : je 0x200005c7f5a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005cb8a1 : je 0x200005cb8cb ; js 0x200005cb834 ; ret
0x00000200005cbb64 : je 0x200005cbb92 ; push 0x50c48348 ; pop rdi ; ret
0x00000200005cce58 : je 0x200005cceca ; stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xd58b40] ; ret
0x00000200005cd851 : je 0x200005cd87f ; push 0x40c48348 ; pop rdi ; ret
0x00000200005d0596 : je 0x200005d05c4 ; jo 0x200005d05ea ; add esp, 0x50 ; pop rdi ; ret
0x00000200005d1579 : je 0x200005d15a7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d1e35 : je 0x200005d1e63 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005d3f96 : je 0x200005d3fab ; mov rax, qword ptr [rip - 0x1975ff] ; call rax
0x00000200005ed3e0 : je 0x200005ed40a ; jo 0x200005ed36b ; ret 0x4404
0x00000200005f7ce4 : je 0x200005f7cf2 ; mov rcx, qword ptr [rdi + 0x30] ; call rdx
0x000002000060285c : je 0x20000602862 ; call rax
0x000002000060ca2e : je 0x2000060c0d0 ; jmp 0x20000428d3a
0x00000200004a6a71 : je 0x200006101d7 ; xor eax, eax ; ret
0x00000200004a6aa2 : je 0x20000610200 ; xor eax, eax ; ret
0x000002000061b291 : je 0x2000061b297 ; call rax
0x000002000063144b : je 0x20000631479 ; xor byte ptr [rcx + rcx*4 + 0x74], al ; and al, 0x38 ; call rax
0x00000200006344f6 : je 0x200006344ec ; mov al, 1 ; ret
0x00000200006344e6 : je 0x200006344ef ; xor al, al ; ret
0x00000200006344e5 : je 0x200006344f0 ; xor al, al ; ret
0x000002000063470c : je 0x2000063473a ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000635adb : je 0x20000635b09 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000636fc1 : je 0x20000636fef ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000637549 : je 0x20000637577 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006390d7 : je 0x20000639105 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006395b5 : je 0x200006395e3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063ae52 : je 0x2000063ae80 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063e2b6 : je 0x2000063e2e4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063f53a : je 0x2000063f568 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063f5ac : je 0x2000063f5be ; mov edx, edi ; call 0x2000026f017
0x000002000063f5de : je 0x2000063f5ea ; jmp 0x2000026f015
0x000002000063fe19 : je 0x2000063fe47 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063fefe : je 0x2000063ff2c ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000640800 : je 0x2000064082e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000064091a : je 0x20000640948 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000640c2b : je 0x20000640c34 ; xor eax, eax ; ret
0x00000200006418db : je 0x20000641909 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000641c8d : je 0x20000641cbb ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000641cfe : je 0x20000641d0a ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006429de : je 0x20000642a09 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000642abe : je 0x20000642ae9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000642ef8 : je 0x20000642ebf ; ret
0x0000020000642ec6 : je 0x20000642ef4 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064303c : je 0x20000643047 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200006430de : je 0x20000643157 ; mov r8d, esi ; call rax
0x0000020000643385 : je 0x200006433b3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006436d4 : je 0x200006436ff ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000643f97 : je 0x20000643f98 ; mov dword ptr [r8], r9d ; ret
0x0000020000644b3a : je 0x20000644b4a ; xor edx, edx ; call 0x2000026f017
0x0000020000645293 : je 0x200006452c1 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000645350 : je 0x20000645360 ; call 0x20000131ab9
0x0000020000645518 : je 0x20000645546 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006457af : je 0x200006457dd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006465c0 : je 0x200006465ee ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000646b20 : je 0x20000646b4e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000647415 : je 0x20000647428 ; mov rcx, rdi ; call 0x2000017363b
0x00000200006475b2 : je 0x200006475be ; mov cl, r9b ; call rax
0x0000020000648a0d : je 0x20000648a3b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064b40c : je 0x2000064b43a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000064b962 : je 0x2000064b990 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064bcda : je 0x2000064bd08 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064c02c : je 0x2000064c035 ; xor eax, eax ; ret
0x000002000064c028 : je 0x2000064c03e ; dec edx ; je 0x2000064c039 ; xor eax, eax ; ret
0x000002000064c159 : je 0x2000064c187 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000064c19c : je 0x2000064c1a5 ; call rax
0x000002000064c31d : je 0x2000064c34b ; sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x000002000064c341 : je 0x2000064c36f ; sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x000002000064c544 : je 0x2000064c55b ; mov rcx, rbx ; call rax
0x000002000064c5cc : je 0x2000064c5d8 ; mov rcx, rdi ; call rax
0x000002000064c5dd : je 0x2000064c5ef ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000064c6e0 : je 0x2000064c6f7 ; mov rcx, rdi ; call rax
0x000002000064c6fc : je 0x2000064c70e ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000064c75b : je 0x2000064c76b ; mov rcx, rbx ; call rax
0x000002000064c770 : je 0x2000064c782 ; mov edx, edi ; mov rcx, rbx ; call rax
0x000002000064c7e0 : je 0x2000064c7ec ; mov rcx, rsi ; call rdx
0x000002000064c7fb : je 0x2000064c807 ; mov rcx, rsi ; call rax
0x000002000064cbf5 : je 0x2000064cc23 ; push 0x50c48348 ; pop rdi ; ret
0x000002000064cd21 : je 0x2000064cd4f ; push 0x50c48348 ; pop rdi ; ret
0x000002000064d23c : je 0x2000064d26a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000064ddeb : je 0x2000064de19 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000064e2f3 : je 0x2000064e321 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000064e408 : je 0x2000064e436 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064fa7b : je 0x2000064fa8a ; mov eax, 1 ; ret
0x000002000064fef7 : je 0x2000064ff25 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000651155 : je 0x20000651183 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065122e : je 0x2000065125c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065159e : je 0x200006515cc ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000651892 : je 0x200006518c0 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000651968 : je 0x20000651996 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000651b59 : je 0x20000651b6e ; mov edx, 0x84 ; call 0x2000064de05
0x0000020000652021 : je 0x2000065204f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006520f7 : je 0x20000652125 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000652f8f : je 0x20000652fbd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000065316c : je 0x2000065319a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000653a49 : je 0x20000653a77 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006542af : je 0x200006542dd ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000654420 : je 0x2000065444e ; push 0x40c48348 ; pop rdi ; ret
0x0000020000655d8a : je 0x20000655d9a ; cmp dl, al ; jne 0x20000655d9a ; xor eax, eax ; ret
0x0000020000656d49 : je 0x20000656d77 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000656e3c : je 0x20000656e6b ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000657308 : je 0x20000657311 ; xor eax, eax ; ret
0x0000020000657fa1 : je 0x20000657fa9 ; xor eax, eax ; ret
0x00000200006581ea : je 0x20000658218 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006593ac : je 0x200006593da ; add rsp, 0x20 ; pop rdi ; ret
0x000002000065a6eb : je 0x2000065a719 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065a8aa : je 0x2000065a8d8 ; push 0x50c48348 ; pop rdi ; ret
0x000002000065b3f8 : je 0x2000065b426 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065b4d6 : je 0x2000065b504 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065c335 : je 0x2000065c363 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000660476 : je 0x200006604a5 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000664121 : je 0x20000664150 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000664803 : je 0x20000664831 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000665ce3 : je 0x20000665d11 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000665d54 : je 0x20000665d82 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000666299 : je 0x200006662c8 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000669bd2 : je 0x20000667ab6 ; call 0x20000665edc
0x000002000066839f : je 0x200006683cd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000668e2d : je 0x20000668e3e ; mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x0000020000669958 : je 0x200006699b7 ; ret 0x45ff
0x0000020000669b8c : je 0x20000669bba ; and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x000002000066a3ac : je 0x2000066a3eb ; ret 0x44ff
0x000002000069bbbb : je 0x2000069bbc4 ; mov eax, edx ; jmp 0x2000069bbfe
0x000002000069bbb6 : je 0x2000069bbc9 ; cmp ecx, 2 ; je 0x2000069bbc9 ; mov eax, edx ; jmp 0x2000069bc03
0x000002000069deba : je 0x2000069ded0 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x000002000069ef27 : je 0x2000069ef3d ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006ba7d6 : je 0x200006ba804 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bd09d : je 0x200006bd0ca ; jo 0x200006bd0f1 ; mov esp, ebx ; pop rbp ; ret
0x00000200006be8a0 : je 0x200006be91e ; ret 0x48ff
0x00000200006bfbe5 : je 0x200006bfc13 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c1c99 : je 0x200006c1cc7 ; js 0x200006c1ced ; add esp, 0x60 ; pop rdi ; ret
0x00000200006c21bf : je 0x200006c21ed ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c571b : je 0x200006c5749 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c836f : je 0x200006c839e ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006c97c4 : je 0x200006c97f2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ca468 : je 0x200006ca429 ; ret 0x4dff
0x00000200006cbd4b : je 0x200006cbd79 ; js 0x200006cbd9f ; add esp, 0x50 ; pop rbp ; ret
0x00000200006ccfab : je 0x200006ccfd9 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006cd2d4 : je 0x200006cd302 ; push 0x50c48348 ; pop rdi ; ret
0x00000200006cd681 : je 0x200006cd6af ; jo 0x200006cd6d5 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006cffa2 : je 0x200006cffd0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d7598 : je 0x200006d75ae ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006d7efa : je 0x200006d7f10 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006d8acd : je 0x200006d8ae3 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006d93a0 : je 0x200006d93b6 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006d9847 : je 0x200006d985d ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006d9f61 : je 0x200006d9f77 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006da82e : je 0x200006da844 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006dacbd : je 0x200006dacd3 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006db4f3 : je 0x200006db509 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006dbdfe : je 0x200006dbe14 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006dca74 : je 0x200006dca8a ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006dd315 : je 0x200006dd32b ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006de05a : je 0x200006de070 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006de941 : je 0x200006de957 ; lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200006e95b5 : je 0x200006e95e3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006e9e6b : je 0x200006e9e7e ; ret
0x00000200006ebda0 : je 0x200006ebdce ; jo 0x200006ebdf4 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006f03fb : je 0x200006f0429 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f08f8 : je 0x200006f0926 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f1e1f : je 0x200006f1e4d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f1f4b : je 0x200006f1f79 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f417f : je 0x200006f41ad ; js 0x200006f41d3 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006f4cdb : je 0x200006f4d05 ; jo 0x200006f4c6e ; ret
0x00000200006f6947 : je 0x200006f6975 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f7490 : je 0x200006f74be ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006f79d9 : je 0x200006f7a07 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006f85b8 : je 0x200006f85e6 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006f9439 : je 0x200006f9467 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006fe0bd : je 0x200006fe0eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006fe767 : je 0x200006fe795 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000700552 : je 0x20000700580 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007024c7 : je 0x200007024db ; mov edx, 0x64 ; xor ecx, ecx ; call rax
0x000002000070519b : je 0x200007051c9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007072f2 : je 0x20000707320 ; js 0x20000707346 ; add esp, 0x60 ; pop rdi ; ret
0x000002000070815c : je 0x2000070816d ; or eax, 0xffffffff ; ret
0x0000020000709488 : je 0x200007094b6 ; and byte ptr [rbp - 0x74bb8eb6], cl ; ret 0xaae8
0x000002000070a047 : je 0x2000070a033 ; ret
0x00000200006fed37 : je 0x2000070ea01 ; mov rax, rcx ; ret
0x000002000048f48d : je 0x20001fbf480 ; call 0x200000b90e9
0x0000020000021ce1 : jg 0x20000021d3a ; xor eax, dword ptr [rax] ; ret
0x0000020000025a14 : jg 0x20000025a1b ; add byte ptr [rax - 0x75], cl ; ret 0x8b45
0x000002000002c71e : jg 0x2000002c725 ; add bh, bh ; ret
0x000002000007047a : jg 0x20000070492 ; mov edx, 0x8b441fea ; ret 0x8141
0x0000020000076fe7 : jg 0x20000076fa9 ; lock add byte ptr [rax], al ; add bl, al ; jmp rax
0x0000020000082cba : jg 0x20000082c5e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x0000020000082cb9 : jg 0x20000082c5f ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x000002000008ff72 : jg 0x2000008ff90 ; ret
0x000002000008ff71 : jg 0x2000008ff91 ; ret
0x00000200000c3bc2 : jg 0x200000c3bda ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000c4a8e : jg 0x200000c4aa6 ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000c6330 : jg 0x200000c6348 ; mov edx, 0x8b441fea ; ret 0x8141
0x00000200000dfdb9 : jg 0x200000dfde5 ; adc byte ptr [rdi], cl ; test byte ptr [rdx], bl ; ret 0xf
0x00000200000e39dd : jg 0x200000e3a4f ; std ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200000f3506 : jg 0x200000f3495 ; ret
0x0000020000105709 : jg 0x20000105786 ; add dh, bl ; ret
0x0000020000116aa3 : jg 0x20000116ab6 ; add bl, dh ; ret
0x0000020000116aa2 : jg 0x20000116ab7 ; add bl, dh ; ret
0x0000020000123c36 : jg 0x20000123c7c ; add al, 0x8b ; ret
0x000002000013c1e7 : jg 0x2000013c21d ; mov eax, 0xc0000005 ; ret
0x000002000013f481 : jg 0x2000013f48f ; jns 0x2000013f490 ; or eax, 0xffffffff ; ret
0x00000200001487cd : jg 0x2000014884a ; add dh, bl ; ret
0x000002000014eea0 : jg 0x2000014ef1e ; idiv dword ptr [rax + 1] ; ret
0x0000020000169322 : jg 0x2000016933d ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001822fd : jg 0x2000018230b ; inc dword ptr [rcx + 0x3b] ; ret 0x850f
0x000002000018cf80 : jg 0x2000018cf84 ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xd77
0x000002000019c06d : jg 0x2000019c0ed ; add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x00000200001a5e8b : jg 0x200001a5e94 ; mov eax, 1 ; ret
0x00000200001adcd9 : jg 0x200001adce3 ; add qword ptr [rcx + 8], -0x18 ; ret
0x00000200001aff4c : jg 0x200001aff83 ; ret 0x789
0x00000200001b18cd : jg 0x200001b1919 ; and al, 0x70 ; call 0x200001adb32
0x00000200001b86aa : jg 0x200001b8727 ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200001bc5b4 : jg 0x200001bc5a5 ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200001c4371 : jg 0x200001c438c ; mov eax, 4 ; ret
0x00000200001fa04f : jg 0x200001fa0b8 ; in al, dx ; push rdi ; shl byte ptr [rbx], 1 ; ret
0x00000200001ff1bd : jg 0x200001ff20e ; mov dword ptr [rdi + 0x68], eax ; jmp 0x200000bb4b2
0x00000200002644d9 : jg 0x20000264507 ; add byte ptr [rcx], ah ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x4e
0x0000020000376b11 : jg 0x20000376b19 ; mov eax, r10d ; ret
0x0000020000376b11 : jg 0x20000376b1a ; mov eax, r10d ; ret
0x00000200003864fa : jg 0x20000386505 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000038de0d : jg 0x2000038de53 ; int 0xff
0x00000200003a9783 : jg 0x200003a97b1 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003b822c : jg 0x200003b8220 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003f9485 : jg 0x200003f9498 ; xor eax, eax ; ret
0x0000020000404d05 : jg 0x20000404d24 ; test edx, edx ; jne 0x20000404d1b ; xor eax, eax ; ret
0x000002000041ba30 : jg 0x2000041b9ff ; dec dword ptr [rax - 0x75] ; ret
0x000002000041d41c : jg 0x2000041d42d ; setns cl ; lea eax, dword ptr [rcx - 1] ; ret
0x000002000041f24b : jg 0x2000041f244 ; push rdi ; ret 0x3fc
0x0000020000467bcd : jg 0x20000467ba3 ; ret
0x000002000046bdb4 : jg 0x2000046bdc1 ; add rsp, 0x38 ; ret
0x00000200004835ed : jg 0x200004835ad ; ret
0x000002000048aafd : jg 0x2000048aaee ; ret 0x4cff
0x00000200004a8c52 : jg 0x200004a8c89 ; ret
0x00000200004f37f3 : jg 0x200004f3823 ; add byte ptr [rax - 0x7f], cl ; ret 0xb8
0x0000020000513c65 : jg 0x20000513c0c ; or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000567c62 : jg 0x20000567cb4 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000002000058805a : jg 0x2000058806d ; sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000590a2a : jg 0x20000590a81 ; add ecx, edx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200005ad75d : jg 0x200005ad730 ; cld ; inc dword ptr [rbx - 0x74bbffde] ; ret
0x00000200005c0504 : jg 0x200005c050e ; add rsp, 0x28 ; ret
0x00000200005ff070 : jg 0x200005ff049 ; jmp qword ptr [rdx]
0x000002000060aa72 : jg 0x2000060aab0 ; shr al, cl ; mov esi, 0x8bffe2c9 ; ret
0x0000020000617b71 : jg 0x20000617bf1 ; js 0x20000617b04 ; or cl, byte ptr [rax - 1] ; ret 0x8445
0x0000020000617bdc : jg 0x20000617c5c ; or eax, 0xff480a88 ; ret 0x97e9
0x00000200006340df : jg 0x200006340e4 ; ret
0x0000020000637c49 : jg 0x20000637c13 ; ret
0x00000200006430aa : jg 0x200006430b2 ; add byte ptr [rax], al ; ret
0x000002000064f167 : jg 0x2000064f16d ; ret
0x0000020000653906 : jg 0x200006538d4 ; dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x0000020000653905 : jg 0x20000653988 ; ret
0x0000020000653e4d : jg 0x20000653e1a ; push rsi ; ret 0x7401
0x0000020000668153 : jg 0x2000066811c ; inc dword ptr [rcx - 0xa] ; ret
0x000002000066827d : jg 0x200006682dd ; ret 0x44ff
0x00000200006c9fe1 : jg 0x200006c9feb ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200006d79c2 : jg 0x200006d79e9 ; ret 0x3141
0x00000200006da3a3 : jg 0x200006da3da ; ret 0xc123
0x00000200006dce6e : jg 0x200006dcea5 ; ret 0xc123
0x00000200006de490 : jg 0x200006de4b7 ; ret 0x3141
0x000002000070722a : jg 0x200007071c9 ; xor al, al ; ret
0x0000020000707d82 : jg 0x20000707dd2 ; xor byte ptr [rbx + 0x3480843], cl ; ret
0x000002000070891d : jg 0x200007088ea ; inc dword ptr [rbx] ; fimul dword ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000004475 : jge 0x20000004479 ; idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000013d37 : jge 0x20000013d74 ; xor al, 0 ; call rax
0x000002000002011c : jge 0x2000002014f ; add byte ptr [rcx - 0xa], al ; ret
0x000002000002c633 : jge 0x2000002c63a ; add bh, bh ; ret
0x000002000003f980 : jge 0x2000003f9b9 ; add byte ptr [rax - 0x75], cl ; adc al, 0xc2 ; jmp 0x2000003f992
0x00000200000614b2 : jge 0x20000061503 ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x000002000008e056 : jge 0x2000008e0db ; scasb al, byte ptr [rdi] ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x000002000008f075 : jge 0x2000008f0a3 ; ret
0x00000200000adc7f : jge 0x200000adc88 ; xor eax, eax ; ret
0x000002000013f9e1 : jge 0x2000013fa60 ; and dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000014b68f : jge 0x2000014b6df ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000017a808 : jge 0x2000017a79a ; mov r15b, 0xff ; ret
0x000002000018cfc4 : jge 0x2000018cfc8 ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf72
0x000002000018cfd3 : jge 0x2000018cfd7 ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1e76
0x000002000018cfe2 : jge 0x2000018cfe6 ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1372
0x000002000018cff1 : jge 0x2000018cff5 ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x477
0x0000020000198d40 : jge 0x20000198cd2 ; je 0x20000198d55 ; ret 0x1a8
0x00000200001a83ca : jge 0x200001a8433 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200001a89bf : jge 0x200001a8a28 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200001eed9c : jge 0x200001eed32 ; cmc ; dec dword ptr [rbx + 0x5892043] ; ret
0x00000200001f5c06 : jge 0x200001f5c5e ; dec dword ptr [rax - 0x75] ; ret
0x00000200001fbbb8 : jge 0x200001fbbb2 ; ret
0x00000200001fbbb4 : jge 0x200001fbbc4 ; add byte ptr [rbp + rdi*2 - 0xa], dh ; ret
0x000002000025d3a1 : jge 0x2000025d3ef ; add ah, ch ; jmp qword ptr [rbx]
0x0000020000361da5 : jge 0x20000361d9e ; inc dword ptr [rcx - 0xa] ; ret
0x00000200003ddc70 : jge 0x200003ddc6b ; jmp 0x200003ddb6f
0x0000020000420b57 : jge 0x20000420b65 ; add byte ptr [rbp - 0x75d78740], al ; ret
0x0000020000426807 : jge 0x20000426817 ; push rdi ; ret 0x3fc
0x000002000043ba7f : jge 0x2000043ba13 ; ret 0xe9ff
0x0000020000467296 : jge 0x20000467280 ; xor al, al ; add rsp, 0x38 ; ret
0x0000020000476ccf : jge 0x20000476c9f ; ret 0x48ff
0x000002000047c978 : jge 0x2000047c97c ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000047fcbf : jge 0x2000047fc83 ; adc eax, 0x200f4400 ; ret
0x0000020000495d7f : jge 0x20000495dc0 ; ret 0x65ff
0x00000200004c243f : jge 0x200004c2441 ; ret 0x45ff
0x00000200004c4317 : jge 0x200004c42f6 ; ret
0x0000020000525a57 : jge 0x20000525a41 ; mov rcx, rdi ; call 0x20000150f4c
0x000002000054f448 : jge 0x2000054f401 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005705cf : jge 0x20000570621 ; mov bl, 0xff ; add rsp, 0x58 ; ret
0x0000020000583bcf : jge 0x20000583bec ; mov dl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005c26c7 : jge 0x200005c269f ; call 0x20000270046
0x0000020000632f8f : jge 0x20000632f53 ; ret
0x00000200006345bb : jge 0x2000063460c ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000644c8f : jge 0x20000644c36 ; ret 0xb8ff
0x000002000064ffb6 : jge 0x20000650035 ; ret 0x3ff
0x0000020000665a9b : jge 0x20000665a23 ; ret 0x48ff
0x000002000066820b : jge 0x200006681d8 ; dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200006c085f : jge 0x200006c0806 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200007072e3 : jge 0x200007072a2 ; push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000005434 : jl 0x20000005463 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000054d5 : jl 0x20000005504 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000005e6c : jl 0x20000005e9b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000005ee2 : jl 0x20000005f11 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000006392 : jl 0x200000063bf ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000000e657 : jl 0x2000000e686 ; push 0x40c48348 ; pop r14 ; ret
0x000002000000ebd8 : jl 0x2000000ec07 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000129fa : jl 0x20000012a29 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000013487 : jl 0x200000134b6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001bbf6 : jl 0x2000001bc25 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001c03a : jl 0x2000001c068 ; add byte ptr [rcx - 1], al ; ret
0x000002000001c068 : jl 0x2000001c097 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000001cc97 : jl 0x2000001ccc6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000201cd : jl 0x200000201fc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000020d64 : jl 0x20000020d93 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000021f39 : jl 0x20000021f48 ; mov eax, 1 ; ret
0x000002000002722c : jl 0x20000027257 ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000002d42c : jl 0x2000002d45b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000030738 : jl 0x200000307ab ; xor al, byte ptr [rax] ; call rax
0x0000020000036de4 : jl 0x20000036e13 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000037e40 : jl 0x20000037e6f ; jo 0x20000037e95 ; add esp, 0x50 ; pop r14 ; ret
0x00000200000386d0 : jl 0x200000386ff ; add rsp, 0x20 ; pop r15 ; ret
0x000002000003921a : jl 0x20000039249 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000039bcc : jl 0x20000039bfb ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003e8b4 : jl 0x2000003e8e3 ; push 0x40c48348 ; pop r14 ; ret
0x00000200000401ca : jl 0x200000401f9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000476b6 : jl 0x200000476e5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000048fc3 : jl 0x20000048ff2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000049069 : jl 0x20000049098 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000049788 : jl 0x200000497b7 ; push 0x40c48348 ; pop r15 ; ret
0x000002000004f2c9 : jl 0x2000004f2f8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000051875 : jl 0x200000518a4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005201d : jl 0x2000005204c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005601b : jl 0x2000005604a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005662a : jl 0x20000056659 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000056c45 : jl 0x20000056c74 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000056f00 : jl 0x20000056f2f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005852f : jl 0x2000005855e ; push 0x40c48348 ; pop r14 ; ret
0x000002000005885a : jl 0x20000058889 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000592b0 : jl 0x200000592df ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000059b28 : jl 0x20000059b57 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005db0a : jl 0x2000005db39 ; push 0x40c48348 ; pop r14 ; ret
0x000002000005e66f : jl 0x2000005e69e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005ff60 : jl 0x2000005ff8f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000629ca : jl 0x200000629f8 ; js 0x20000062a1e ; add esp, 0x50 ; pop rbp ; ret
0x0000020000063c59 : jl 0x20000063c88 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000069a19 : jl 0x20000069a48 ; push 0x24648b4c ; jo 0x200000699b6 ; ret
0x000002000006b0a3 : jl 0x2000006b0d2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000006b182 : jl 0x2000006b1b0 ; js 0x2000006b1d6 ; add esp, 0x60 ; pop rbp ; ret
0x000002000006c0cd : jl 0x2000006c0fc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000070177 : jl 0x200000701a6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000812b1 : jl 0x20000081335 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000083341 : jl 0x200000833aa ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000916ea : jl 0x20000091733 ; ret
0x0000020000091fde : jl 0x20000092005 ; ret 0x23e8
0x000002000009eb9d : jl 0x2000009ec11 ; ret 0x3993
0x00000200000ab6c0 : jl 0x200000ab6ef ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ac09a : jl 0x200000ac0c9 ; push 0x40c48348 ; pop r14 ; ret
0x00000200000b5180 : jl 0x200000b5187 ; ret
0x00000200000b969f : jl 0x200000b96cd ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000b978f : jl 0x200000b97bd ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000c02c3 : jl 0x200000c030e ; add dword ptr [rax], eax ; jne 0x200000c02db ; xor al, al ; ret
0x00000200000c1a7a : jl 0x200000c1aa9 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000c1ad5 : jl 0x200000c1b03 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000c9289 : jl 0x200000c92b8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000ca4aa : jl 0x200000ca4d9 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000d07bd : jl 0x200000d07eb ; push rax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000d07cd : jl 0x200000d07fb ; push rax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000d862d : jl 0x200000d865c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000da2ea : jl 0x200000da319 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000da971 : jl 0x200000da9a0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000df844 : jl 0x200000df850 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000dfb6b : jl 0x200000dfb9a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e2ff9 : jl 0x200000e3028 ; push 0x40c48348 ; pop r14 ; ret
0x00000200000ee6d3 : jl 0x200000ee702 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f2223 : jl 0x200000f2252 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f5e1b : jl 0x200000f5e4a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f802c : jl 0x200000f8059 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000f8d12 : jl 0x200000f8d41 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f98d6 : jl 0x200000f9902 ; push rax ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000100e3d : jl 0x20000100e6b ; push 0x50c48348 ; pop rbp ; ret
0x0000020000101dd5 : jl 0x20000101e04 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000102dfb : jl 0x20000102e2a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000103d6c : jl 0x20000103d97 ; adc byte ptr [rcx - 0x75], al ; ret
0x0000020000104121 : jl 0x2000010414c ; and al, ch ; xlatb ; ret 0x2d
0x0000020000104bb4 : jl 0x20000104be2 ; xor byte ptr [rbp - 0x737af040], al ; ret
0x0000020000104c05 : jl 0x20000104c33 ; xor byte ptr [rbp + 0x5c880fc0], al ; ret
0x00000200001090b5 : jl 0x200001090e4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010b1ff : jl 0x2000010b22e ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200001101a6 : jl 0x200001101d5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011053a : jl 0x20000110569 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011120f : jl 0x2000011123e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001125b4 : jl 0x200001125e3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000011365f : jl 0x2000011368e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000113918 : jl 0x20000113947 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001150b5 : jl 0x200001150e4 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000116f94 : jl 0x20000116fb7 ; add byte ptr [rax], al ; mov rax, rcx ; jne 0x20000116fa7 ; ret
0x000002000011a2ad : jl 0x2000011a2dc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011b71c : jl 0x2000011b74b ; push 0x40c48348 ; pop r14 ; ret
0x000002000011c1ed : jl 0x2000011c21c ; push 0x40c48348 ; pop r14 ; ret
0x000002000011cf96 : jl 0x2000011cfc5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012989c : jl 0x200001298c6 ; js 0x2000012982f ; ret
0x000002000012993c : jl 0x20000129967 ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000012b3d3 : jl 0x2000012b3b0 ; add rsp, 0x28 ; ret
0x000002000012b5a1 : jl 0x2000012b5cc ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000012b8c1 : jl 0x2000012b8eb ; js 0x2000012b853 ; ret
0x000002000012c70b : jl 0x2000012c73a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012dbdb : jl 0x2000012dc0a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012e375 : jl 0x2000012e3a4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012e865 : jl 0x2000012e894 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012ec83 : jl 0x2000012ecb2 ; push 0x40c48348 ; pop r14 ; ret
0x000002000013053f : jl 0x2000013056e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000131a82 : jl 0x20000131ab1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013218d : jl 0x200001321b8 ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200001324b8 : jl 0x200001324e7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000134224 : jl 0x20000134253 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013a4b6 : jl 0x2000013a4e1 ; sbb byte ptr [rcx - 0x75], al ; ret 0x90c3
0x000002000013b07a : jl 0x2000013b0a9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013b2a8 : jl 0x2000013b2d7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013bd18 : jl 0x2000013bd47 ; push 0x40c48348 ; pop r14 ; ret
0x000002000013e6fb : jl 0x2000013e72a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013ebbc : jl 0x2000013ebc6 ; add dword ptr [rax], eax ; mov ecx, eax ; call 0x2000014ae4c
0x000002000013fe05 : jl 0x2000013fe34 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000143473 : jl 0x200001434a2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014857c : jl 0x200001485a7 ; xor byte ptr [rcx - 0x75], al ; ret
0x0000020000148ffb : jl 0x2000014902a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014abaa : jl 0x2000014ab80 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x000002000014af27 : jl 0x2000014af56 ; push 0x40c48348 ; pop r14 ; ret
0x000002000014c660 : jl 0x2000014c68f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014c7e0 : jl 0x2000014c80e ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x000002000014db6d : jl 0x2000014db9c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000014dd76 : jl 0x2000014dda3 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000155529 : jl 0x20000155558 ; and al, ch ; outsd dx, dword ptr [rsi] ; enter -0x10, -0x75 ; ret
0x0000020000157cc8 : jl 0x20000157cf3 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000015a2e8 : jl 0x2000015a2d8 ; xor eax, eax ; ret
0x000002000015b790 : jl 0x2000015b7bf ; add rsp, 0x20 ; pop r15 ; ret
0x000002000015b84d : jl 0x2000015b87c ; add rsp, 0x20 ; pop r15 ; ret
0x000002000015c0b1 : jl 0x2000015c0e0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000015df9f : jl 0x2000015dfce ; push 0x40c48348 ; pop r14 ; ret
0x000002000015f346 : jl 0x2000015f375 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001601bc : jl 0x200001601eb ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000164297 : jl 0x200001642c6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000164d72 : jl 0x20000164d9d ; xor byte ptr [rcx - 0x75], al ; ret
0x0000020000168959 : jl 0x200001688df ; ret
0x0000020000168958 : jl 0x200001688e0 ; ret
0x00000200001695fe : jl 0x20000169616 ; add byte ptr [rbp + 0x3a], al ; ret
0x00000200001696a8 : jl 0x200001696c4 ; add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x00000200001697eb : jl 0x2000016981a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000016a194 : jl 0x2000016a1c3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000016cbcf : jl 0x2000016cbd2 ; ret 0x8348
0x000002000016cbce : jl 0x2000016cbd3 ; ret 0x8348
0x000002000016e744 : jl 0x2000016e773 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000016f970 : jl 0x2000016f99f ; js 0x2000016f9c5 ; add esp, 0x50 ; pop r13 ; ret
0x000002000017171c : jl 0x2000017174b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000172927 : jl 0x20000172956 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000017381b : jl 0x2000017384a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000176749 : jl 0x20000176776 ; adc byte ptr [rsi + 0x41], ah ; mov dword ptr [rbx], ecx ; ret
0x0000020000176e7a : jl 0x20000176ea9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000177bea : jl 0x20000177c15 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000017bf02 : jl 0x2000017bf31 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000017d2d7 : jl 0x2000017d306 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000017e457 : jl 0x2000017e486 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000017fc35 : jl 0x2000017fc63 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x0000020000181595 : jl 0x200001815c4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000182af0 : jl 0x20000182b1f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000184b8f : jl 0x20000184bbe ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000185450 : jl 0x2000018547f ; js 0x200001854a5 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000185c50 : jl 0x20000185c7f ; push 0x40c48348 ; pop r14 ; ret
0x0000020000187cce : jl 0x20000187cfb ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000189df2 : jl 0x20000189e21 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000189f76 : jl 0x20000189fa5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000018b3fc : jl 0x2000018b42b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000018bd71 : jl 0x2000018bda0 ; push 0x40c48348 ; pop r14 ; ret
0x000002000018d24b : jl 0x2000018d276 ; sub byte ptr [rax + 0x23], cl ; ret 0x2348
0x000002000018dc04 : jl 0x2000018dc33 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000190a41 : jl 0x20000190a70 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001923ec : jl 0x2000019241b ; push 0x40c48348 ; pop r14 ; ret
0x00000200001929ef : jl 0x20000192a1e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000192c1a : jl 0x20000192c45 ; sbb byte ptr [rcx - 0x76], al ; ret 0x90c3
0x0000020000193e9f : jl 0x20000193ec9 ; js 0x20000193e31 ; ret
0x00000200001978ba : jl 0x200001978e9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001986b0 : jl 0x200001986df ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000199aa3 : jl 0x20000199ad2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000199f00 : jl 0x20000199f2f ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000019a7fa : jl 0x2000019a829 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000019bed2 : jl 0x2000019bf01 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000019c2cd : jl 0x2000019c2fc ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000019d033 : jl 0x2000019d05e ; adc byte ptr [rcx - 0x75], al ; ret 0x90c3
0x000002000019d1a9 : jl 0x2000019d1d8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000019dadc : jl 0x2000019db07 ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000019e807 : jl 0x2000019e836 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a0605 : jl 0x200001a062f ; and al, ch ; ret
0x00000200001a1fd0 : jl 0x200001a1ffd ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200001a2f14 : jl 0x200001a2f43 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a3b7e : jl 0x200001a3bad ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a3c53 : jl 0x200001a3c82 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a4117 : jl 0x200001a4146 ; js 0x200001a416c ; add esp, 0x50 ; pop r14 ; ret
0x00000200001a7dba : jl 0x200001a7de9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a9435 : jl 0x200001a9464 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001aaaea : jl 0x200001aab14 ; js 0x200001aaa7d ; ret
0x00000200001ad0a7 : jl 0x200001ad0d5 ; push 0x40c48348 ; pop rbp ; ret
0x00000200001b0e6a : jl 0x200001b0eaf ; call rcx
0x00000200001b2273 : jl 0x200001b22a2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b395d : jl 0x200001b398b ; push rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001b7f92 : jl 0x200001b7fc1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b95ca : jl 0x200001b95f9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001bb49c : jl 0x200001bb4cb ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001bfcae : jl 0x200001bfcd8 ; jo 0x200001bfc40 ; ret
0x00000200001c034b : jl 0x200001c035e ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001c0523 : jl 0x200001c0552 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c25b5 : jl 0x200001c25e3 ; jo 0x200001c2609 ; add esp, 0x50 ; pop rbp ; ret
0x00000200001c2cea : jl 0x200001c2d15 ; and byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200001c323a : jl 0x200001c321f ; ret
0x00000200001c52bf : jl 0x200001c52ee ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e2358 : jl 0x200001e2387 ; push rax ; jmp 0x200001e2659
0x00000200001e6004 : jl 0x200001e5ff1 ; push rsi ; ret 0xf01
0x00000200001ff6a9 : jl 0x200001ff6d3 ; xor cl, ch ; ret
0x000002000025d39d : jl 0x2000025d3ef ; add byte ptr [rax - 0x13ffb783], ah ; jmp qword ptr [rbx]
0x0000020000261428 : jl 0x200002613f1 ; add byte ptr [r8], dl ; ret
0x0000020000270f45 : jl 0x20000270f74 ; push rax ; add rsp, 0x78 ; pop rsi ; pop rbp ; ret
0x000002000035d0c8 : jl 0x2000035d0f7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000035ecc1 : jl 0x2000035ecef ; add rsp, 0x30 ; pop rbp ; ret
0x000002000036015e : jl 0x2000036018d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003608d6 : jl 0x20000360905 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000361d98 : jl 0x20000361d59 ; adc al, 0 ; call 0x2000035e0a6
0x0000020000364d19 : jl 0x20000364d48 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000366044 : jl 0x20000366073 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003664a3 : jl 0x200003664d2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003677c2 : jl 0x200003677f1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000036cf1b : jl 0x2000036cf4a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037590c : jl 0x2000037593b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000379b87 : jl 0x20000379bb6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037b512 : jl 0x2000037b541 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037b801 : jl 0x2000037b830 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037c979 : jl 0x2000037c9a8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000037cf06 : jl 0x2000037cf35 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000037eba5 : jl 0x2000037ebd3 ; js 0x2000037ebf9 ; add esp, 0x50 ; pop rbp ; ret
0x000002000037ecec : jl 0x2000037ed1b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003805b1 : jl 0x200003805e0 ; js 0x20000380606 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003806af : jl 0x200003806dd ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003816f4 : jl 0x20000381723 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000383c31 : jl 0x20000383c60 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000385bcd : jl 0x20000385bfb ; sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call rsi
0x00000200003862b3 : jl 0x200003862e2 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000038705d : jl 0x2000038708c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000387fe6 : jl 0x20000388015 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003882fa : jl 0x20000388329 ; js 0x2000038834f ; add esp, 0x50 ; pop r14 ; ret
0x000002000038a832 : jl 0x2000038a861 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000038ca24 : jl 0x2000038ca4e ; sub bh, bh ; ret
0x000002000038ca85 : jl 0x2000038cab4 ; jo 0x2000038cada ; add esp, 0x50 ; pop r14 ; ret
0x000002000038fa4c : jl 0x2000038fa7b ; push 0x40c48348 ; pop r14 ; ret
0x0000020000390799 : jl 0x200003907c8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003926ea : jl 0x20000392719 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000395415 : jl 0x20000395444 ; push 0x40c48348 ; pop r14 ; ret
0x000002000039a226 : jl 0x2000039a254 ; adc byte ptr [rbp - 0x3f6bf02e], al ; ret
0x000002000039e172 : jl 0x2000039e1a1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a5fee : jl 0x200003a601d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a67fb : jl 0x200003a6827 ; and byte ptr [rcx + rcx*4 + 0x6d], al ; ret
0x00000200003a68c3 : jl 0x200003a68ef ; and byte ptr [rcx + rcx*4 + 0x6d], al ; ret
0x00000200003a8348 : jl 0x200003a8376 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003a8f87 : jl 0x200003a8fb6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a968e : jl 0x200003a96bd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003aa0d6 : jl 0x200003aa105 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003abf7f : jl 0x200003abfae ; jo 0x200003abfd4 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003af018 : jl 0x200003af047 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b1bd4 : jl 0x200003b1bff ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003b2648 : jl 0x200003b2677 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b5d43 : jl 0x200003b5d6d ; js 0x200003b5cd6 ; ret
0x00000200003b80b5 : jl 0x200003b80e4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b815d : jl 0x200003b818c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ba8a6 : jl 0x200003ba8d5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003bbf55 : jl 0x200003bbf84 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003bf1c3 : jl 0x200003bf1f2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c3f72 : jl 0x200003c3fa1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003c67ab : jl 0x200003c67da ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003c68bc : jl 0x200003c68eb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c7c10 : jl 0x200003c7c3f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c8069 : jl 0x200003c8098 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003ca385 : jl 0x200003ca3b4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ca3d7 : jl 0x200003ca3e8 ; movsx eax, cl ; xor eax, 0x20 ; ret
0x00000200003cb304 : jl 0x200003cb332 ; adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x00000200003cb693 : jl 0x200003cb6c2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003cbd00 : jl 0x200003cbd2a ; xor cl, ch ; ret 0
0x00000200003cc74b : jl 0x200003cc77a ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003ceaf4 : jl 0x200003ceb23 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d272e : jl 0x200003d275a ; xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x00000200003d4747 : jl 0x200003d4776 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d6f38 : jl 0x200003d6f67 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003d7121 : jl 0x200003d7150 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003d7cfd : jl 0x200003d7d2c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003da964 : jl 0x200003da993 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003daa69 : jl 0x200003daa98 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003dd35d : jl 0x200003dd38c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ddd7f : jl 0x200003dddae ; push 0x40c48348 ; pop r14 ; ret
0x00000200003df810 : jl 0x200003df83f ; push 0x40c48348 ; pop r14 ; ret
0x00000200003dfb28 : jl 0x200003dfb57 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003e1b37 : jl 0x200003e1b40 ; add al, al ; jmp 0x200003e1adc
0x00000200003e27b9 : jl 0x200003e27e8 ; js 0x200003e27af ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003fbe9a : jl 0x200003fbec9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fcb5b : jl 0x200003fcb8a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003fe99c : jl 0x200003fe9c7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003feaac : jl 0x200003fead7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x000002000040049c : jl 0x200004004cb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004036a6 : jl 0x200004036d5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000403d45 : jl 0x20000403d74 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000404d9b : jl 0x20000404dca ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000406dc1 : jl 0x20000406df0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000407d10 : jl 0x20000407d3f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000408641 : jl 0x20000408670 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000416e9a : jl 0x20000416ec8 ; js 0x20000416eee ; add esp, 0x60 ; pop rbp ; ret
0x0000020000417bfd : jl 0x20000417c2c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004185dc : jl 0x200004185be ; ret
0x000002000041b404 : jl 0x2000041b433 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041b5e4 : jl 0x2000041b60f ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x000002000041b96d : jl 0x2000041b99c ; add rsp, 0x20 ; pop r12 ; ret
0x000002000041d9de : jl 0x2000041da0d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041dc5c : jl 0x2000041dc87 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x000002000041ddac : jl 0x2000041ddd7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x000002000041f16a : jl 0x2000041f199 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041f561 : jl 0x2000041f590 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004216a0 : jl 0x200004216cf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000422bd7 : jl 0x20000422c06 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004235b9 : jl 0x200004235e8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000423c9c : jl 0x20000423cc7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x0000020000423d3c : jl 0x20000423d67 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x0000020000424c75 : jl 0x20000424ca4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000424ddc : jl 0x20000424e0b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004252e3 : jl 0x200004252f1 ; setle al ; inc eax ; ret
0x0000020000426785 : jl 0x200004267b4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000427bd6 : jl 0x20000427c05 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000042e638 : jl 0x2000042e667 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042f47c : jl 0x2000042f4ab ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043bd7d : jl 0x2000043bdaa ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000043c166 : jl 0x2000043c194 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004495c0 : jl 0x2000044955c ; ret 0xe9ff
0x0000020000461680 : jl 0x200004616af ; pop rax ; jmp 0x200004613a3
0x0000020000462eff : jl 0x20000462f2e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000464ee6 : jl 0x20000464f10 ; sbb byte ptr [rbx], ch ; ret 0x90c3
0x0000020000467acb : jl 0x20000467afa ; js 0x20000467b20 ; add esp, 0x50 ; pop r14 ; ret
0x000002000046a9f0 : jl 0x2000046a97a ; sar bh, 0x8b ; ret
0x000002000046ae0c : jl 0x2000046ae3b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046ca58 : jl 0x2000046ca87 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046cbf1 : jl 0x2000046cc1d ; and al, ch ; push rdi ; insd dword ptr [rdi], dx ; ret
0x000002000046e300 : jl 0x2000046e32f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000471d1e : jl 0x20000471d4b ; add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret
0x00000200004720ed : jl 0x2000047211c ; xor byte ptr [rbp + 0x32], al ; in al, -0x18 ; or cl, bh ; ret
0x0000020000474543 : jl 0x20000474572 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000475e51 : jl 0x20000475e80 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004772a0 : jl 0x20000477225 ; ret 0xf3ff
0x00000200004797d6 : jl 0x20000479805 ; js 0x2000047982b ; add esp, 0x50 ; pop r15 ; ret
0x0000020000479c78 : jl 0x20000479ca7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047a59c : jl 0x2000047a5cb ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047a99c : jl 0x2000047a9cb ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047aa0f : jl 0x2000047aa3e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047af59 : jl 0x2000047af88 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047c036 : jl 0x2000047c060 ; jo 0x2000047bfc8 ; ret
0x000002000047d50b : jl 0x2000047d53a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047d68f : jl 0x2000047d6b9 ; js 0x2000047d622 ; ret
0x000002000047e488 : jl 0x2000047e4b7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000482780 : jl 0x200004827f7 ; ret
0x00000200004828da : jl 0x20000482904 ; js 0x2000048286d ; ret
0x0000020000485bd8 : jl 0x20000485c07 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000485e15 : jl 0x20000485e44 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000487d8a : jl 0x20000487db8 ; adc byte ptr [rbp - 0x3f6bf02e], al ; ret
0x0000020000489ac0 : jl 0x20000489aef ; add rsp, 0x20 ; pop r14 ; ret
0x000002000048b549 : jl 0x2000048b577 ; push 0x40c48348 ; pop rbp ; ret
0x0000020000490d94 : jl 0x20000490dc3 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000049447f : jl 0x200004944a9 ; js 0x20000494412 ; ret
0x00000200004949da : jl 0x20000494a09 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000498036 : jl 0x20000498065 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000498b6c : jl 0x20000498b9b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049ad91 : jl 0x2000049adbb ; js 0x2000049ad24 ; ret
0x000002000049ce8f : jl 0x2000049cebe ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004a5852 : jl 0x200004a5881 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a896e : jl 0x200004a893d ; sbb byte ptr [rbp + 3], al ; ret 0x34d
0x00000200004aa6d4 : jl 0x200004aa703 ; js 0x200004aa729 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004adbd0 : jl 0x200004adbdc ; inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x00000200004b0485 : jl 0x200004b04b4 ; js 0x200004b04da ; add esp, 0x50 ; pop r14 ; ret
0x00000200004b0556 : jl 0x200004b0585 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b2397 : jl 0x200004b23c6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b2f8f : jl 0x200004b2fbe ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b4ae3 : jl 0x200004b4b12 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b79f0 : jl 0x200004b7a1f ; js 0x200004b7a45 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004b8721 : jl 0x200004b8750 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200004b91fc : jl 0x200004b922b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ba98a : jl 0x200004ba9b9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004bae03 : jl 0x200004bae32 ; jo 0x200004bae58 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004baeca : jl 0x200004baef9 ; jo 0x200004baf1f ; add esp, 0x50 ; pop r14 ; ret
0x00000200004bb1b8 : jl 0x200004bb1e4 ; jmp 0x200004bb21c
0x00000200004c5055 : jl 0x200004c5084 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c5c1c : jl 0x200004c5c4b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c5fe9 : jl 0x200004c6018 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004cb391 : jl 0x200004cb3bb ; js 0x200004cb324 ; ret
0x00000200004cf6e3 : jl 0x200004cf70e ; adc byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x00000200004cfbea : jl 0x200004cfc19 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004cff3e : jl 0x200004cff6d ; push 0x40c48348 ; pop r14 ; ret
0x00000200004d2b73 : jl 0x200004d2ba2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d2fe7 : jl 0x200004d3016 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d5ba5 : jl 0x200004d5bd4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004da05d : jl 0x200004da08c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004dd41d : jl 0x200004dd44c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004dd62c : jl 0x200004dd65b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004de1b6 : jl 0x200004de1e0 ; and al, ch ; ret 0xe86b
0x00000200004de595 : jl 0x200004de5c4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004de98b : jl 0x200004de9ba ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e0507 : jl 0x200004e0536 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e08ad : jl 0x200004e08dc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e1ca1 : jl 0x200004e1cd0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e2bda : jl 0x200004e2c09 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e2c5c : jl 0x200004e2c4a ; ret
0x00000200004e3ee3 : jl 0x200004e3f12 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e4ab2 : jl 0x200004e4ae1 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004e4b3f : jl 0x200004e4b6e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e5235 : jl 0x200004e5264 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e755b : jl 0x200004e758a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e903e : jl 0x200004e906d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ef0f9 : jl 0x200004ef123 ; js 0x200004ef08c ; ret
0x00000200004f0248 : jl 0x200004f0277 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004f145a : jl 0x200004f1489 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f1567 : jl 0x200004f1596 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f203a : jl 0x200004f2068 ; jo 0x200004f208e ; add esp, 0x50 ; pop rbp ; ret
0x00000200004f7c0f : jl 0x200004f7c3e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f7d31 : jl 0x200004f7d60 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f8637 : jl 0x200004f8666 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004fb56e : jl 0x200004fb59d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fb911 : jl 0x200004fb940 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004fc556 : jl 0x200004fc585 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004fc846 : jl 0x200004fc875 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004fc9e5 : jl 0x200004fca14 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fdcc8 : jl 0x200004fdcb7 ; ret 0x90cc
0x00000200004fe52b : jl 0x200004fe55a ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004fea64 : jl 0x200004fea5d ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x00000200004fec16 : jl 0x200004fec40 ; js 0x200004feba9 ; ret
0x00000200004fed5a : jl 0x200004fed89 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ff4e9 : jl 0x200004ff518 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000501f05 : jl 0x20000501f34 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000502f2e : jl 0x20000502f5c ; jo 0x20000502f82 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000505a2a : jl 0x20000505a59 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000506e29 : jl 0x20000506e58 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000507a20 : jl 0x20000507a4c ; and al, ch ; sub ch, dh ; ret
0x0000020000507be2 : jl 0x20000507c11 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000507fe5 : jl 0x20000508014 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000509850 : jl 0x2000050987b ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000050c76c : jl 0x2000050c79b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000511097 : jl 0x200005110c6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000511637 : jl 0x20000511666 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000051215b : jl 0x20000512185 ; js 0x200005120ee ; ret
0x0000020000517b88 : jl 0x20000517bb2 ; jo 0x20000517b1b ; ret
0x0000020000519926 : jl 0x20000519955 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000519d17 : jl 0x20000519d46 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000521a31 : jl 0x20000521a60 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000524edb : jl 0x20000524f0a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000525e9c : jl 0x20000525ec6 ; js 0x20000525e2f ; ret
0x0000020000526b08 : jl 0x20000526b37 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005282cc : jl 0x200005282fb ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052a102 : jl 0x2000052a131 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052a83b : jl 0x2000052a86a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052df7e : jl 0x2000052dfad ; push 0x40c48348 ; pop r14 ; ret
0x000002000052e175 : jl 0x2000052e1a3 ; push rax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000052efe2 : jl 0x2000052f011 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000530e91 : jl 0x20000530e46 ; sbb al, 0x8b ; ret
0x0000020000531765 : jl 0x20000531794 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005341a1 : jl 0x200005341cf ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000534ff3 : jl 0x20000535022 ; js 0x20000535048 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000537e94 : jl 0x20000537ec3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000539bf4 : jl 0x20000539c23 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053a331 : jl 0x2000053a360 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053b204 : jl 0x2000053b233 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000053f277 : jl 0x2000053f2a6 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000541eba : jl 0x20000541ee9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005428f8 : jl 0x20000542927 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000542e4a : jl 0x20000542e70 ; add byte ptr [rax], al ; ret
0x0000020000542e64 : jl 0x20000542e8d ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200005437a6 : jl 0x200005437d5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054564d : jl 0x20000545678 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000546e6d : jl 0x20000546e9c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000547d1a : jl 0x20000547d49 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000548061 : jl 0x2000054808f ; js 0x200005480b5 ; add esp, 0x50 ; pop rbp ; ret
0x000002000054868e : jl 0x200005486bd ; mov dl, dil ; call 0x2000016e165
0x00000200005496b6 : jl 0x200005496e5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000549cd0 : jl 0x20000549cff ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054a835 : jl 0x2000054a864 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054aa82 : jl 0x2000054aaac ; js 0x2000054aa15 ; ret
0x000002000054bd01 : jl 0x2000054bd30 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054c172 : jl 0x2000054c1a1 ; mov dl, dil ; call 0x2000016e165
0x000002000054d9a1 : jl 0x2000054d9d0 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000054e704 : jl 0x2000054e733 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054e904 : jl 0x2000054e933 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000054f371 : jl 0x2000054f3a0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000054f5da : jl 0x2000054f609 ; js 0x2000054f62f ; add esp, 0x50 ; pop r14 ; ret
0x000002000055035c : jl 0x2000055038b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055182c : jl 0x2000055185b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000551aeb : jl 0x20000551b1a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055332c : jl 0x2000055335b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055e714 : jl 0x2000055e743 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055e809 : jl 0x2000055e838 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005601d3 : jl 0x200005601fd ; jo 0x20000560166 ; ret
0x0000020000561787 : jl 0x200005617b5 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000562102 : jl 0x20000562131 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000565686 : jl 0x200005656b5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005699f3 : jl 0x20000569a22 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000056b526 : jl 0x2000056b555 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000056e2d3 : jl 0x2000056e302 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005703b8 : jl 0x200005703e7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005755c0 : jl 0x200005755ee ; mov rcx, rdi ; call 0x20000131818
0x000002000057c995 : jl 0x2000057c9c4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000057de5a : jl 0x2000057de89 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000582376 : jl 0x200005823a0 ; and al, ch ; ret 0xb1fc
0x00000200005832f1 : jl 0x20000583320 ; push 0x40c48348 ; pop r14 ; ret
0x000002000058583e : jl 0x20000585868 ; cmp dh, dh ; ret
0x0000020000589288 : jl 0x200005892b7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000058a7a8 : jl 0x2000058a7d7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000058b53d : jl 0x2000058b55c ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000058b9ee : jl 0x2000058ba1d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000059122b : jl 0x2000059125a ; add rsp, 0x20 ; pop r12 ; ret
0x0000020000591b1b : jl 0x20000591b4a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005926d1 : jl 0x200005926fc ; adc byte ptr [rcx - 0x75], al ; ret 0x90c3
0x0000020000592ae0 : jl 0x20000592b32 ; sar bh, 1 ; mov ebx, eax ; call 0x2000001edd0
0x0000020000593305 : jl 0x20000593332 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000596bdb : jl 0x20000596c05 ; sub bh, bh ; ret
0x0000020000596e33 : jl 0x20000596e5d ; sub bh, bh ; ret
0x00000200005973d3 : jl 0x20000597402 ; and al, ch ; insd dword ptr [rdi], dx ; add al, 0 ; add bh, bh ; ret
0x00000200005974e1 : jl 0x20000597510 ; and al, ch ; pop rdi ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200005979a6 : jl 0x200005979d5 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000598efd : jl 0x20000598f2c ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000059a7ed : jl 0x2000059a817 ; jo 0x2000059a780 ; ret
0x00000200005a1b7a : jl 0x200005a1ba9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005a5112 : jl 0x200005a5141 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005a546c : jl 0x200005a549b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005a5f00 : jl 0x200005a5f2f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005a7c9f : jl 0x200005a7cce ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005abdf9 : jl 0x200005abe28 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005adc6d : jl 0x200005adc9c ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005bb5cc : jl 0x200005bb5fb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005bbf0e : jl 0x200005bbf3d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005c1611 : jl 0x200005c1640 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005c60c6 : jl 0x200005c60f5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005c7e34 : jl 0x200005c7e63 ; js 0x200005c7e89 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005c7ea5 : jl 0x200005c7ed4 ; xor byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200005cb45b : jl 0x200005cb485 ; js 0x200005cb3ee ; ret
0x00000200005cbdbb : jl 0x200005cbdea ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005cc076 : jl 0x200005cc0a5 ; push 0x40c48348 ; pop r14 ; ret
0x00000200005cd656 : jl 0x200005cd680 ; js 0x200005cd5e9 ; ret
0x00000200005d24aa : jl 0x200005d24d9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060dc77 : jl 0x2000060dc53 ; push rsi ; ret
0x000002000062a288 : jl 0x2000062a2b2 ; cmp cl, ch ; ret 0xe4e5
0x000002000063417f : jl 0x2000063414e ; adc byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000636993 : jl 0x200006369c2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000063e5b6 : jl 0x2000063e5bf ; mov al, 1 ; ret
0x000002000063f33d : jl 0x2000063f36c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063fc59 : jl 0x2000063fc88 ; sbb byte ptr [rcx + rcx*4 + 0x1a], cl ; mov rax, r9 ; ret
0x0000020000641738 : jl 0x20000641767 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000641bae : jl 0x20000641bdd ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006424e8 : jl 0x20000642517 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000642baf : jl 0x20000642bde ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000643168 : jl 0x20000643197 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064329d : jl 0x200006432cc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006434f1 : jl 0x20000643520 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000643deb : jl 0x20000643e1a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000643f58 : jl 0x20000643f87 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000644fc4 : jl 0x20000644ff3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006450cf : jl 0x200006450fe ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000646f19 : jl 0x20000646f48 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006474ef : jl 0x2000064751e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064b213 : jl 0x2000064b242 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064baef : jl 0x2000064bb1e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064beaf : jl 0x2000064bede ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064c2a2 : jl 0x2000064c2d1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064c4e4 : jl 0x2000064c513 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064c92e : jl 0x2000064c95d ; push 0x40c48348 ; pop r14 ; ret
0x000002000064d180 : jl 0x2000064d1af ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064da88 : jl 0x2000064dab7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064dd51 : jl 0x2000064dd80 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064f679 : jl 0x2000064f6a8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006516f6 : jl 0x20000651724 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000654061 : jl 0x20000654090 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065713a : jl 0x20000657169 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000657809 : jl 0x20000657838 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065788b : jl 0x200006578ba ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065a94b : jl 0x2000065a97a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065b703 : jl 0x2000065b732 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065c6f4 : jl 0x2000065c723 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065c9a0 : jl 0x2000065c9cf ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065cc50 : jl 0x2000065cc7f ; push 0x40c48348 ; pop r14 ; ret
0x000002000065d7e7 : jl 0x2000065d816 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065dbf6 : jl 0x2000065dc25 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065dcd8 : jl 0x2000065dd07 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065e200 : jl 0x2000065e22f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065e7f0 : jl 0x2000065e81f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065ebe4 : jl 0x2000065ec13 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065eff8 : jl 0x2000065f027 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065f99f : jl 0x2000065f9ce ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065fc31 : jl 0x2000065fc60 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000660626 : jl 0x20000660655 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000664ac0 : jl 0x20000664aef ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000665150 : jl 0x20000665103 ; ret 0xb9ff
0x00000200006658db : jl 0x2000066590a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000666bca : jl 0x20000666c08 ; ret 0xff
0x00000200006683f3 : jl 0x200006683b3 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000668490 : jl 0x20000668459 ; inc dword ptr [rcx - 0xa] ; ret
0x00000200006bc3cd : jl 0x200006bc3fc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bd41f : jl 0x200006bd44d ; js 0x200006bd473 ; add esp, 0x50 ; pop rbp ; ret
0x00000200006be559 : jl 0x200006be588 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c0bea : jl 0x200006c0c19 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c1f6a : jl 0x200006c1f99 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006ca3b4 : jl 0x200006ca3de ; js 0x200006ca346 ; ret
0x00000200006cbb2d : jl 0x200006cbb59 ; and byte ptr [rsi + rcx - 1], dh ; ret
0x00000200006eb84b : jl 0x200006eb87a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006f405f : jl 0x200006f408e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006f6137 : jl 0x200006f6165 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006f67ef : jl 0x200006f681e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000700130 : jl 0x2000070015e ; push 0x40c48348 ; pop rbp ; ret
0x000002000070412f : jl 0x2000070415e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000704438 : jl 0x20000704467 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007055bc : jl 0x200007055e9 ; and byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x0000020000706732 : jl 0x20000706761 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000706825 : jl 0x20000706854 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000708223 : jl 0x20000708252 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070bcc5 : jl 0x2000070bcef ; and al, ch ; ret
0x000002000070c37f : jl 0x2000070c3ae ; xor byte ptr [rsi + 0x3b], ah ; fsub dword ptr [rsi + 0xf] ; ret
0x0000020000084da0 : jle 0x20000084d25 ; ret 0x94
0x000002000011b5da : jle 0x2000011b59f ; and eax, dword ptr [rax] ; ret
0x000002000013454d : jle 0x20000134556 ; mov al, 1 ; ret
0x0000020000188d72 : jle 0x20000188d85 ; lock dec dword ptr [rip + 0x11630d] ; ret
0x0000020000188d90 : jle 0x20000188da3 ; lock dec dword ptr [rip + 0x1162f3] ; ret
0x000002000012672b : jle 0x200001d79d2 ; ret
0x0000020000263785 : jle 0x200002637c6 ; add byte ptr [rax], cl ; jmp qword ptr [rdx]
0x000002000026f5f4 : jle 0x2000026f609 ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000361d10 : jle 0x20000361d06 ; jmp qword ptr [rbx]
0x000002000036f3ce : jle 0x2000036f433 ; sar edi, cl ; add rsp, 0x50 ; pop rbx ; ret
0x000002000038f270 : jle 0x2000038f273 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000038f26f : jle 0x2000038f274 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000043913e : jle 0x20000439122 ; ret
0x0000020000446d1e : jle 0x20000446d33 ; ret 0x4cff
0x000002000047e924 : jle 0x2000047e8f3 ; dec dword ptr [rax - 0x7f] ; ret
0x000002000048f9ee : jle 0x2000048f9ea ; ret 0xbfff
0x000002000050512e : jle 0x20000505130 ; ret
0x0000020000580480 : jle 0x2000058045a ; push qword ptr [rbx] ; leave ; call 0x2000038c6a3
0x00000200005aa65f : jle 0x200005aa633 ; push rsi ; ret
0x0000020000615411 : jle 0x200006153fa ; inc dword ptr [rcx + 0xf] ; mov bh, 0x40 ; add bh, bh ; ret
0x00000200006355ae : jle 0x20000635589 ; inc dword ptr [rax + rdi + 0x25] ; adc al, 0xed ; ret
0x000002000065524c : jle 0x20000655221 ; cmp eax, 3 ; jne 0x20000655221 ; xor eax, eax ; ret
0x0000020000655216 : jle 0x2000065525a ; mov eax, 1 ; ret
0x00000200006572e9 : jle 0x200006572fb ; mov dword ptr [rax + 0x8160], r8d ; ret
0x0000020000661cc6 : jle 0x20000661c67 ; ret 0x4cff
0x000002000066506e : jle 0x20000665015 ; ret 0x45ff
0x0000020000665df6 : jle 0x20000665d7b ; ret 0x48ff
0x00000200006681de : jle 0x2000066825f ; ret 0x83ff
0x00000200007071c3 : jle 0x200007071cc ; mov al, 1 ; ret
0x00000200004f705f : jmp 0x1ff814f32ee
0x00000200005be97f : jmp 0x1ff83a4e937
0x00000200005170a7 : jmp 0x1ff8b9d70c1
0x00000200006438f9 : jmp 0x1ff8bad4aef
0x00000200001d7160 : jmp 0x1ff8c1d56b0
0x00000200001e21a3 : jmp 0x1ff8c1e0835
0x000002000010a95c : jmp 0x1ff8d151e88
0x0000020000544678 : jmp 0x1ffb7ed0967
0x00000200003cfba3 : jmp 0x1ffb9ffe7aa
0x00000200004ba3e2 : jmp 0x1ffc1946674
0x00000200001c8a72 : jmp 0x1ffc1a7ce8b
0x00000200000077eb : jmp 0x1ffc1b68700
0x000002000037133a : jmp 0x1ffc1f99e4a
0x000002000037f8ae : jmp 0x1ffc1f9fbc2
0x00000200003dbc1b : jmp 0x1ffc2004738
0x000002000052835c : jmp 0x1ffc2148e6c
0x0000020000469d20 : jmp 0x1ffc269e632
0x00000200004475eb : jmp 0x1ffc28385dc
0x000002000019a2d6 : jmp 0x1ffc2a4efe4
0x00000200003d32e6 : jmp 0x1ffc2c07af8
0x0000020000134821 : jmp 0x1ffc2cf576e
0x00000200005c0038 : jmp 0x1ffc2df4940
0x0000020000574e11 : jmp 0x1ffc2e29626
0x00000200005761ed : jmp 0x1ffc2e2aef9
0x0000020000479b2d : jmp 0x1ffc2e5b91e
0x00000200005b67b6 : jmp 0x1ffc2e6a8cb
0x00000200006f2d5c : jmp 0x1ffc2f07571
0x00000200006ead92 : jmp 0x1ffc2f9eea0
0x00000200006eadd1 : jmp 0x1ffc2f9eedf
0x00000200000bdcce : jmp 0x1ffc30b1df6
0x0000020000113dcc : jmp 0x1ffc31085dd
0x000002000001e268 : jmp 0x1ffc3126bbe
0x00000200001d9095 : jmp 0x1ffc314908d
0x00000200001d9094 : jmp 0x1ffc314908e
0x00000200001dcdda : jmp 0x1ffc3149ae2
0x00000200000587a4 : jmp 0x1ffc31610fa
0x00000200000d2f1c : jmp 0x1ffc3387845
0x00000200004d4d83 : jmp 0x1ffc3442c17
0x00000200004340ec : jmp 0x1ffc35fcc3d
0x000002000047acbb : jmp 0x1ffc367bc08
0x0000020000668e49 : jmp 0x1ffc36f1793
0x00000200004cf679 : jmp 0x1ffc370428b
0x000002000004311b : jmp 0x1ffc3857930
0x000002000001b625 : jmp 0x1ffc38cb639
0x000002000003e57c : jmp 0x1ffc38ef070
0x000002000004a471 : jmp 0x1ffc38fe89a
0x000002000010d3f9 : jmp 0x1ffc394e304
0x00000200000e0e22 : jmp 0x1ffc399532e
0x00000200000ee902 : jmp 0x1ffc39a3117
0x000002000010439d : jmp 0x1ffc39c439c
0x00000200001133ce : jmp 0x1ffc39d33cb
0x00000200001da715 : jmp 0x1ffc3a8f32a
0x00000200001e9dca : jmp 0x1ffc3aa6ad2
0x00000200003806a3 : jmp 0x1ffc3c4069a
0x00000200003dedd3 : jmp 0x1ffc3c8ee00
0x00000200003fcdd1 : jmp 0x1ffc3cb16d9
0x00000200003f4531 : jmp 0x1ffc3cb4501
0x00000200001cd845 : jmp 0x1ffc3d2e84d
0x000002000013c424 : jmp 0x1ffc3d54f65
0x00000200001540fe : jmp 0x1ffc3d7cc50
0x0000020000504af5 : jmp 0x1ffc3db4b15
0x000002000043154f : jmp 0x1ffc3e2c140
0x000002000059c6f5 : jmp 0x1ffc3e50f0a
0x00000200005a55fd : jmp 0x1ffc3e655ad
0x00000200005f4e00 : jmp 0x1ffc3ea9308
0x00000200005f4e1f : jmp 0x1ffc3ea9327
0x000002000062677c : jmp 0x1ffc3edb084
0x000002000062677b : jmp 0x1ffc3edb085
0x000002000061be4d : jmp 0x1ffc3edbe4d
0x0000020000401ece : jmp 0x1ffc3f62ed6
0x00000200007032da : jmp 0x1ffc3fb73e8
0x00000200007032fa : jmp 0x1ffc3fb7408
0x0000020000703319 : jmp 0x1ffc3fb7427
0x00000200000461d5 : jmp 0x1ffc403a2e7
0x000002000019c033 : jmp 0x1ffc41988bf
0x00000200003d88d7 : jmp 0x1ffc4265a28
0x00000200003707da : jmp 0x1ffc42aac58
0x00000200004684cb : jmp 0x1ffc43508e3
0x0000020000417bc7 : jmp 0x1ffc4417b93
0x00000200005d8199 : jmp 0x1ffc4468172
0x0000020000505eff : jmp 0x1ffc44e32f0
0x0000020000578020 : jmp 0x1ffca5ac86a
0x00000200001d3214 : jmp 0x1ffcba87b1e
0x00000200001d3213 : jmp 0x1ffcba87b1f
0x00000200000eac7d : jmp 0x1ffcf31f497
0x000002000009115b : jmp 0x1ffd992d391
0x000002000007ec75 : jmp 0x1ffe907ec80
0x00000200003f5fc3 : jmp 0x1ffea3f22a9
0x00000200001e9a2d : jmp 0x1fff65f673a
0x0000020000544a93 : jmp 0x1fff7540cfe
0x000002000013ef73 : jmp 0x1fffad5c082
0x0000020000196219 : jmp 0x1fffd77e435
0x000002000061b567 : jmp 0x1ffff6b397f
0x0000020000022f8e : jmp 0x1ffffd0badf
0x0000020000003726 : jmp 0x200000036eb
0x0000020000122bbf : jmp 0x200000042d0
0x00000200001de22f : jmp 0x2000000462b
0x0000020000006a2a : jmp 0x200000069f0
0x00000200001eabd0 : jmp 0x20000008645
0x000002000000ec00 : jmp 0x2000000ebc6
0x000002000000f384 : jmp 0x2000000f349
0x0000020000011c55 : jmp 0x2000001169c
0x0000020000011b2a : jmp 0x20000011949
0x000002000001280f : jmp 0x2000001285a
0x0000020000013b10 : jmp 0x20000013859
0x00000200000176a5 : jmp 0x200000173cd
0x0000020000017b53 : jmp 0x200000178d7
0x000002000001c88a : jmp 0x2000001c679
0x000002000001cd39 : jmp 0x2000001ccff
0x00000200001edad0 : jmp 0x2000001e378
0x00000200001c8bce : jmp 0x20000020149
0x00000200000207e5 : jmp 0x200000205ae
0x0000020000024955 : jmp 0x20000024929
0x00000200001eb936 : jmp 0x2000002500f
0x00000200001eb935 : jmp 0x20000025010
0x0000020000026685 : jmp 0x200000262cf
0x0000020000026684 : jmp 0x200000262d0
0x000002000002e02e : jmp 0x2000002de3f
0x000002000002e37e : jmp 0x2000002e343
0x000002000002fc90 : jmp 0x2000002fb33
0x00000200001f7e0b : jmp 0x20000034062
0x00000200001f7e24 : jmp 0x2000003409b
0x00000200001f7ec9 : jmp 0x20000034130
0x00000200001f7f56 : jmp 0x20000034209
0x00000200001f7fba : jmp 0x2000003423a
0x00000200001f7fd0 : jmp 0x2000003424d
0x00000200001f7f9c : jmp 0x2000003425e
0x000002000003717f : jmp 0x200000371be
0x0000020000038bcf : jmp 0x20000038b58
0x0000020000039e05 : jmp 0x20000039dcb
0x000002000003c6cc : jmp 0x2000003c648
0x000002000014255a : jmp 0x2000003e829
0x000002000014256d : jmp 0x2000003e859
0x00000200001425c4 : jmp 0x2000003e8a5
0x000002000003ff4b : jmp 0x2000003ff10
0x0000020000041750 : jmp 0x20000040dc7
0x000002000004174f : jmp 0x20000040dc8
0x00000200000416bc : jmp 0x20000040dd9
0x0000020000041f41 : jmp 0x20000040dfd
0x0000020000041e26 : jmp 0x20000040f4a
0x000002000004184e : jmp 0x20000041117
0x0000020000041fb6 : jmp 0x2000004148d
0x000002000002c033 : jmp 0x200000421de
0x00000200001daca6 : jmp 0x2000004721b
0x00000200001dace6 : jmp 0x20000047268
0x000002000003a372 : jmp 0x20000049834
0x000002000004b08a : jmp 0x2000004ac54
0x0000020000009ed3 : jmp 0x2000004ad5b
0x00000200004218e9 : jmp 0x2000004d1c3
0x0000020000051981 : jmp 0x2000005190f
0x0000020000051980 : jmp 0x20000051910
0x0000020000051b53 : jmp 0x20000051b35
0x00000200000540ba : jmp 0x2000005406c
0x000002000005490c : jmp 0x200000548d2
0x0000020000055bd3 : jmp 0x20000055a37
0x00000200000558f5 : jmp 0x20000055aee
0x00000200001dca09 : jmp 0x20000058feb
0x00000200001098e4 : jmp 0x20000059255
0x000002000010bdda : jmp 0x2000005a80c
0x000002000005a9ce : jmp 0x2000005a993
0x0000020000109dfa : jmp 0x2000005abf2
0x000002000005c293 : jmp 0x2000005c22d
0x00000200001e8ff1 : jmp 0x2000005c5d8
0x0000020000061880 : jmp 0x200000618d6
0x00000200000637c5 : jmp 0x200000637a2
0x00000200000648c1 : jmp 0x20000064673
0x0000020000069639 : jmp 0x200000695ff
0x000002000006c1da : jmp 0x2000006c1a0
0x000002000006ccb3 : jmp 0x2000006cca6
0x0000020000151132 : jmp 0x2000006e74c
0x000002000006fe86 : jmp 0x2000006fdf1
0x00000200001d8822 : jmp 0x20000070377
0x00000200000722b5 : jmp 0x20000071d3c
0x000002000007ed59 : jmp 0x2000007b042
0x0000020000091854 : jmp 0x20000091869
0x00000200001d37a3 : jmp 0x200000a1f11
0x00000200000a5fba : jmp 0x200000a5809
0x00000200000a5aad : jmp 0x200000a5cdb
0x00000200000a64a1 : jmp 0x200000a6218
0x00000200000a6eb4 : jmp 0x200000a6e79
0x00000200001ee964 : jmp 0x200000aabd6
0x00000200001ee9b4 : jmp 0x200000aac57
0x00000200001ee9c3 : jmp 0x200000aac99
0x00000200001ee9cf : jmp 0x200000aaca4
0x00000200001eea05 : jmp 0x200000aacae
0x0000020000151953 : jmp 0x200000ae0e1
0x00000200000aeb53 : jmp 0x200000aeb3e
0x00000200001d446b : jmp 0x200000af02d
0x00000200000afe31 : jmp 0x200000afc33
0x00000200000b1150 : jmp 0x200000b0dd0
0x00000200000b0f02 : jmp 0x200000b0dd1
0x00000200001492a2 : jmp 0x200000b3b47
0x00000200001ea5f3 : jmp 0x200000b68d4
0x00000200001ff19c : jmp 0x200000bb3ed
0x00000200001ff1c2 : jmp 0x200000bb4ad
0x00000200000bdd1d : jmp 0x200000bdd54
0x00000200001e275f : jmp 0x200000c1ceb
0x00000200000c3dc4 : jmp 0x200000c3778
0x00000200001e8195 : jmp 0x200000c4441
0x00000200000c6b67 : jmp 0x200000c6361
0x00000200001e121a : jmp 0x200000c6b61
0x00000200001e1219 : jmp 0x200000c6b62
0x00000200000c7ec6 : jmp 0x200000c7cdd
0x00000200000c8a35 : jmp 0x200000c89ad
0x00000200000c90c0 : jmp 0x200000c9086
0x00000200001ccfcb : jmp 0x200000c920a
0x00000200000ca571 : jmp 0x200000ca407
0x00000200000ca55e : jmp 0x200000ca4a0
0x00000200000cb118 : jmp 0x200000caf23
0x00000200001dfbe1 : jmp 0x200000cede3
0x00000200000d064b : jmp 0x200000d0095
0x00000200000d02b0 : jmp 0x200000d00da
0x00000200000d4f88 : jmp 0x200000d4f4d
0x00000200000d55c6 : jmp 0x200000d535a
0x00000200001e9616 : jmp 0x200000d5845
0x00000200001e9599 : jmp 0x200000d5870
0x00000200001e96ae : jmp 0x200000d5924
0x00000200000d864f : jmp 0x200000d8615
0x00000200000d9ea4 : jmp 0x200000d9e08
0x00000200000d9fbe : jmp 0x200000d9ff5
0x00000200000dd0cf : jmp 0x200000dd1b6
0x00000200001f6eab : jmp 0x200000de5bb
0x00000200001f6ee9 : jmp 0x200000de8d0
0x00000200001dad6f : jmp 0x200000dedce
0x00000200001dadf9 : jmp 0x200000deddd
0x00000200000df4b1 : jmp 0x200000df3af
0x00000200000e06af : jmp 0x200000e04ad
0x00000200000e1f7c : jmp 0x200000e1cab
0x00000200000e208d : jmp 0x200000e1d3f
0x00000200000e475f : jmp 0x200000e4725
0x00000200000e5064 : jmp 0x200000e4ae9
0x00000200000e5648 : jmp 0x200000e4c26
0x0000020000128483 : jmp 0x200000e5642
0x0000020000128482 : jmp 0x200000e5643
0x00000200000e92e5 : jmp 0x200000e9274
0x00000200000e92ff : jmp 0x200000e92c5
0x00000200000e9440 : jmp 0x200000e9406
0x00000200000ea030 : jmp 0x200000ea188
0x00000200001fdaa3 : jmp 0x200000eb050
0x00000200000ecbe5 : jmp 0x200000ecaef
0x00000200000ecc13 : jmp 0x200000ece64
0x00000200000ed0fb : jmp 0x200000ecff0
0x00000200000ee233 : jmp 0x200000ee1f8
0x000002000010e126 : jmp 0x200000f0b99
0x00000200000f1ca0 : jmp 0x200000f1c66
0x00000200000f5f78 : jmp 0x200000f5e9d
0x00000200001ca61f : jmp 0x200000f6868
0x00000200001ca7b4 : jmp 0x200000f6a62
0x00000200001ead38 : jmp 0x200000f92fd
0x0000020000101b79 : jmp 0x20000101b3e
0x0000020000101e72 : jmp 0x20000101e38
0x000002000010227c : jmp 0x20000102242
0x00000200001043bd : jmp 0x20000104383
0x00000200001043db : jmp 0x200001043f2
0x0000020000107592 : jmp 0x2000010729f
0x00000200001083df : jmp 0x20000108401
0x0000020000108458 : jmp 0x2000010846a
0x00000200001084bc : jmp 0x200001084ce
0x0000020000108e62 : jmp 0x20000108e83
0x00000200001f10fc : jmp 0x2000010d333
0x00000200001e568e : jmp 0x2000010e872
0x00000200001e564a : jmp 0x20000110219
0x0000020000113631 : jmp 0x200001135f7
0x0000020000117138 : jmp 0x200001170fe
0x0000020000117370 : jmp 0x20000117369
0x0000020000117a04 : jmp 0x200001179ca
0x00000200001ed24f : jmp 0x20000119483
0x00000200001ed228 : jmp 0x20000119527
0x0000020000363764 : jmp 0x2000011f9a2
0x0000020000120351 : jmp 0x2000012029e
0x0000020000121241 : jmp 0x20000121207
0x000002000012209c : jmp 0x20000121fe3
0x000002000012517e : jmp 0x200001250df
0x000002000010ce0f : jmp 0x2000012639b
0x00000200001da276 : jmp 0x200001269b7
0x0000020000126d94 : jmp 0x20000126d5a
0x000002000012a812 : jmp 0x2000012a673
0x000002000012a90b : jmp 0x2000012a700
0x000002000012b33b : jmp 0x2000012b300
0x00000200001ef8f4 : jmp 0x2000012bb7d
0x000002000012e7c0 : jmp 0x2000012e61f
0x000002000012ebb6 : jmp 0x2000012e91b
0x00000200001fae9d : jmp 0x2000012f64d
0x00000200001f78aa : jmp 0x20000131106
0x00000200001320fe : jmp 0x2000013202b
0x00000200001326ab : jmp 0x20000132671
0x000002000013455e : jmp 0x20000134536
0x0000020000149c32 : jmp 0x2000013613e
0x00000200001fa945 : jmp 0x20000139b57
0x000002000013a1af : jmp 0x2000013a174
0x000002000013ceff : jmp 0x2000013cf25
0x000002000013d226 : jmp 0x2000013d280
0x000002000013d1f8 : jmp 0x2000013d2ae
0x00000200001cbdbc : jmp 0x20000142a8c
0x00000200001f0bd5 : jmp 0x200001430b3
0x00000200001ef341 : jmp 0x20000143167
0x00000200001cfd28 : jmp 0x20000143b74
0x00000200001d89d1 : jmp 0x20000143d0f
0x00000200001e813a : jmp 0x20000144422
0x0000020000145ecb : jmp 0x20000145ec0
0x0000020000148414 : jmp 0x200001483da
0x0000020000526007 : jmp 0x2000014c5a7
0x00000200001dd610 : jmp 0x2000014cd98
0x00000200001dd60f : jmp 0x2000014cd99
0x000002000014ff1c : jmp 0x2000014fad9
0x000002000014ffca : jmp 0x2000014fc07
0x000002000014fbf6 : jmp 0x2000014fc4a
0x000002000014ffc0 : jmp 0x2000014ff9c
0x00000200001565fe : jmp 0x2000015653f
0x00000200001569fd : jmp 0x200001568c6
0x000002000015ba55 : jmp 0x2000015ba66
0x000002000015bb04 : jmp 0x2000015bb26
0x000002000016719d : jmp 0x20000167162
0x000002000016a735 : jmp 0x2000016a8f3
0x000002000016f702 : jmp 0x2000016f713
0x000002000017187d : jmp 0x200001718d6
0x0000020000172d6c : jmp 0x20000172d41
0x000002000017f659 : jmp 0x2000017f698
0x00000200001823b2 : jmp 0x200001823ff
0x00000200001823b1 : jmp 0x20000182400
0x00000200001be760 : jmp 0x200001869cf
0x0000020000189b45 : jmp 0x20000189b75
0x000002000018a7a4 : jmp 0x2000018a7b9
0x000002000018ca23 : jmp 0x2000018ca38
0x000002000018f220 : jmp 0x2000018f1f3
0x000002000018fdb8 : jmp 0x2000018fe1e
0x0000020000197212 : jmp 0x200001973e0
0x000002000019bfc4 : jmp 0x2000019bf6f
0x000002000019f0f2 : jmp 0x2000019f107
0x000002000019f39a : jmp 0x2000019f3af
0x000002000019fba6 : jmp 0x2000019fbe6
0x000002000019fb99 : jmp 0x2000019fc2b
0x000002000019fc0b : jmp 0x2000019fc2d
0x00000200001a03f0 : jmp 0x200001a02b9
0x00000200001a037f : jmp 0x200001a03bf
0x00000200001a0372 : jmp 0x200001a0416
0x00000200001a590d : jmp 0x200001a5a29
0x00000200001a636b : jmp 0x200001a6375
0x00000200001a834e : jmp 0x200001a8358
0x00000200001a8493 : jmp 0x200001a849d
0x00000200001a8943 : jmp 0x200001a894d
0x00000200001a8d13 : jmp 0x200001a8d1d
0x00000200001a8e76 : jmp 0x200001a8e80
0x00000200001a986e : jmp 0x200001a9883
0x00000200001abb2b : jmp 0x200001abb35
0x00000200001abc8a : jmp 0x200001abc94
0x00000200001ac5ba : jmp 0x200001ac6d2
0x00000200001ace56 : jmp 0x200001acf72
0x00000200001ae3c3 : jmp 0x200001ae3d8
0x00000200001b8979 : jmp 0x200001b8983
0x00000200001b8983 : jmp 0x200001b8995
0x00000200001b8c75 : jmp 0x200001b8c7f
0x00000200001b8ced : jmp 0x200001b8d1e
0x00000200001b94c5 : jmp 0x200001b948b
0x00000200001b9fd9 : jmp 0x200001b9fe9
0x00000200001ba4d2 : jmp 0x200001ba4f3
0x00000200001ba721 : jmp 0x200001ba7e5
0x00000200000a3c66 : jmp 0x200001d3e7c
0x0000020000073325 : jmp 0x200001d5158
0x000002000006a066 : jmp 0x200001d62fc
0x00000200000a622b : jmp 0x200001d6529
0x00000200001d7a33 : jmp 0x200001d79f8
0x00000200001d98df : jmp 0x200001d98a4
0x00000200000c8f2d : jmp 0x200001d9d54
0x0000020000026199 : jmp 0x200001defee
0x00000200001e235b : jmp 0x200001e2656
0x00000200001e64c3 : jmp 0x200001e6489
0x00000200001ee5d5 : jmp 0x200001ee59b
0x00000200001f10d3 : jmp 0x200001f10d7
0x00000200000deb67 : jmp 0x200001f6d86
0x000002000023537c : jmp 0x200002353a8
0x000002000063f5e0 : jmp 0x2000026f013
0x0000020000370567 : jmp 0x2000035d06c
0x000002000035eb21 : jmp 0x2000035eae6
0x000002000035ecd6 : jmp 0x2000035ec9b
0x000002000035ee66 : jmp 0x2000035f16b
0x00000200003747d8 : jmp 0x2000035f964
0x0000020000371bc9 : jmp 0x2000036001f
0x0000020000371ca1 : jmp 0x20000360100
0x000002000035eec3 : jmp 0x20000360530
0x000002000035eec2 : jmp 0x20000360531
0x0000020000371cfe : jmp 0x20000360874
0x00000200003625ac : jmp 0x20000362460
0x0000020000370d7f : jmp 0x20000364f45
0x0000020000371c12 : jmp 0x20000366438
0x0000020000368047 : jmp 0x2000036800d
0x00000200003684f8 : jmp 0x200003684b7
0x000002000060dc75 : jmp 0x20000375896
0x000002000037617b : jmp 0x20000376135
0x00000200004f66c2 : jmp 0x2000037706d
0x0000020000625143 : jmp 0x2000037896f
0x00000200005e0a6a : jmp 0x2000037ccbf
0x0000020000600257 : jmp 0x2000037dc35
0x000002000037e3d1 : jmp 0x2000037e2ea
0x0000020000381315 : jmp 0x20000381345
0x000002000062a650 : jmp 0x2000038648f
0x0000020000386537 : jmp 0x200003864fd
0x0000020000386763 : jmp 0x20000386728
0x000002000038740f : jmp 0x200003872c6
0x0000020000387422 : jmp 0x20000387370
0x00000200005dd7e5 : jmp 0x200003899f2
0x00000200005dd7b4 : jmp 0x20000389a46
0x000002000038eb4d : jmp 0x2000038eb13
0x000002000062ad49 : jmp 0x20000390265
0x00000200005fc3e5 : jmp 0x20000391ffa
0x00000200003923b0 : jmp 0x20000392376
0x000002000062709a : jmp 0x20000394000
0x000002000039543f : jmp 0x20000395405
0x0000020000396ca4 : jmp 0x20000396c6a
0x00000200003999c8 : jmp 0x200003995af
0x000002000039afa4 : jmp 0x2000039af6a
0x000002000039d628 : jmp 0x2000039d5ed
0x000002000039e561 : jmp 0x2000039e534
0x00000200003a33ae : jmp 0x200003a33c1
0x00000200003a3b51 : jmp 0x200003a3abf
0x000002000062be7d : jmp 0x200003a408a
0x00000200003a56ef : jmp 0x200003a5702
0x00000200003a5afd : jmp 0x200003a5b10
0x00000200003a8b49 : jmp 0x200003a8a7d
0x00000200003a8b61 : jmp 0x200003a8baa
0x00000200003a9399 : jmp 0x200003a935e
0x00000200005f9b25 : jmp 0x200003af9bf
0x0000020000627939 : jmp 0x200003b167e
0x00000200003b5881 : jmp 0x200003b5846
0x0000020000428243 : jmp 0x200003b7ffb
0x00000200003b8206 : jmp 0x200003b812e
0x00000200003b8205 : jmp 0x200003b812f
0x00000200003b8e36 : jmp 0x200003b8e10
0x000002000047895e : jmp 0x200003b8fd8
0x00000200003ba5b5 : jmp 0x200003ba57a
0x00000200003ba5bf : jmp 0x200003ba585
0x00000200003ba7be : jmp 0x200003ba6b7
0x00000200003be4ca : jmp 0x200003be4c1
0x0000020000610b14 : jmp 0x200003c16cb
0x00000200006110a2 : jmp 0x200003c1aa4
0x0000020000610af2 : jmp 0x200003c1b7a
0x00000200003c2340 : jmp 0x200003c1b7b
0x00000200003c3d57 : jmp 0x200003c39dd
0x00000200003c3ef8 : jmp 0x200003c3ebe
0x00000200003c40c3 : jmp 0x200003c4023
0x00000200003c5923 : jmp 0x200003c592b
0x00000200003cc63d : jmp 0x200003cc64f
0x00000200003cdd2f : jmp 0x200003cdcf4
0x00000200003cf7be : jmp 0x200003cf784
0x00000200003cfba5 : jmp 0x200003cfb6a
0x00000200004a03d0 : jmp 0x200003d0d5d
0x00000200003a5786 : jmp 0x200003d3c54
0x00000200003d5f26 : jmp 0x200003d5e22
0x00000200003d5f80 : jmp 0x200003d5f0e
0x00000200003d724c : jmp 0x200003d7212
0x00000200003d8e3a : jmp 0x200003d8dac
0x00000200003d9357 : jmp 0x200003d931d
0x00000200003d9d0b : jmp 0x200003d9887
0x000002000054b0ad : jmp 0x200003db08e
0x00000200003db719 : jmp 0x200003db6df
0x00000200003ddc72 : jmp 0x200003ddb6d
0x000002000062d781 : jmp 0x200003dedd5
0x0000020000482031 : jmp 0x200003df49c
0x00000200003e0214 : jmp 0x200003e00f3
0x00000200005fc46d : jmp 0x200003e03ba
0x00000200003e1b3b : jmp 0x200003e1ad8
0x00000200003e1df1 : jmp 0x200003e1dc7
0x00000200003e27bc : jmp 0x200003e28ba
0x00000200003e286e : jmp 0x200003e2de8
0x00000200003e3fa6 : jmp 0x200003e3ec8
0x00000200003e6dbb : jmp 0x200003e6d5a
0x00000200003e8c23 : jmp 0x200003e872f
0x00000200003e8bea : jmp 0x200003e875b
0x00000200003efa35 : jmp 0x200003ebccb
0x00000200003efa3f : jmp 0x200003ebd09
0x00000200004c124e : jmp 0x200003ed47b
0x00000200004c1243 : jmp 0x200003ed4bd
0x00000200005fc842 : jmp 0x200003f042a
0x00000200003f0ecb : jmp 0x200003f0e23
0x00000200006193a9 : jmp 0x200003f2979
0x00000200003f427b : jmp 0x200003f4248
0x00000200003f548a : jmp 0x200003f544f
0x00000200004b84f8 : jmp 0x200003f69df
0x00000200003f879a : jmp 0x200003f8519
0x00000200003fb10e : jmp 0x200003fb0b2
0x00000200003fc3f1 : jmp 0x200003fc116
0x00000200003fc3f0 : jmp 0x200003fc117
0x00000200003bc377 : jmp 0x200003fcef4
0x00000200003fee44 : jmp 0x200003fee0a
0x000002000062738e : jmp 0x20000400083
0x0000020000386a6c : jmp 0x200004005d8
0x0000020000386a39 : jmp 0x2000040068e
0x00000200004024cb : jmp 0x200004023eb
0x00000200005fbfd1 : jmp 0x20000403692
0x00000200004039ee : jmp 0x2000040386e
0x000002000040423a : jmp 0x20000404206
0x0000020000404ca3 : jmp 0x20000404c69
0x000002000040581d : jmp 0x2000040579c
0x0000020000405739 : jmp 0x200004057aa
0x00000200004a9321 : jmp 0x20000405d7c
0x0000020000406844 : jmp 0x200004067d9
0x00000200005fbff9 : jmp 0x2000040689a
0x0000020000407318 : jmp 0x20000407127
0x00000200004087c2 : jmp 0x200004086af
0x00000200004087ba : jmp 0x20000408717
0x000002000040ac8a : jmp 0x2000040a9f5
0x000002000040c10f : jmp 0x2000040c11a
0x000002000040c119 : jmp 0x2000040c25e
0x000002000040c735 : jmp 0x2000040c3d5
0x000002000040c734 : jmp 0x2000040c3d6
0x0000020000622906 : jmp 0x2000040c884
0x00000200005fb34b : jmp 0x2000040cc3b
0x00000200005fb3fd : jmp 0x2000040cdab
0x000002000040f70b : jmp 0x2000040f6d1
0x000002000040ff1a : jmp 0x2000040fe8d
0x00000200003877e1 : jmp 0x200004106c1
0x0000020000614e15 : jmp 0x2000041103b
0x000002000060b1dc : jmp 0x20000412d6d
0x000002000041320b : jmp 0x20000413308
0x000002000041320a : jmp 0x20000413309
0x0000020000413bde : jmp 0x2000041394e
0x0000020000413cd5 : jmp 0x20000413bca
0x0000020000414b5b : jmp 0x2000041498e
0x000002000062b5da : jmp 0x20000414b37
0x0000020000417130 : jmp 0x20000417141
0x0000020000504653 : jmp 0x20000417260
0x0000020000418382 : jmp 0x20000418347
0x000002000060b4bb : jmp 0x20000418693
0x0000020000626e39 : jmp 0x2000041a39e
0x000002000041a4c3 : jmp 0x2000041a488
0x000002000041a4c2 : jmp 0x2000041a489
0x000002000061ef10 : jmp 0x2000041b13f
0x000002000041b4fe : jmp 0x2000041b4c4
0x000002000041e8b7 : jmp 0x2000041e781
0x000002000049b7b5 : jmp 0x2000041f12a
0x000002000042004f : jmp 0x20000420018
0x00000200005fc56e : jmp 0x20000420824
0x000002000042098a : jmp 0x20000420918
0x0000020000421318 : jmp 0x20000421286
0x00000200004a0c98 : jmp 0x20000421477
0x0000020000610709 : jmp 0x200004225e8
0x0000020000422a15 : jmp 0x200004229da
0x0000020000423134 : jmp 0x200004230fa
0x000002000060fbf5 : jmp 0x20000423545
0x000002000060f195 : jmp 0x20000423890
0x000002000061232d : jmp 0x200004239a6
0x0000020000608409 : jmp 0x2000042461d
0x00000200006083d2 : jmp 0x20000424658
0x00000200004273e7 : jmp 0x200004272da
0x000002000061b46a : jmp 0x200004276f6
0x000002000042824d : jmp 0x2000042821a
0x000002000060c1d8 : jmp 0x20000428497
0x000002000060cd84 : jmp 0x2000042849b
0x000002000060c797 : jmp 0x200004287b0
0x000002000060ca34 : jmp 0x20000428d34
0x000002000060cbee : jmp 0x20000428e2a
0x000002000060e4e0 : jmp 0x2000042a736
0x000002000060e4fd : jmp 0x2000042a7e7
0x000002000060e76b : jmp 0x2000042aa68
0x00000200004307f3 : jmp 0x200004307b8
0x0000020000430e42 : jmp 0x20000430e4c
0x0000020000432a42 : jmp 0x2000043278f
0x0000020000432a4c : jmp 0x20000432965
0x0000020000432a9f : jmp 0x200004329eb
0x0000020000432ed5 : jmp 0x20000432e9b
0x00000200005fa948 : jmp 0x20000433369
0x00000200004341bd : jmp 0x20000434183
0x000002000043475b : jmp 0x20000434ea9
0x00000200004365e5 : jmp 0x20000435e54
0x00000200004365ef : jmp 0x2000043639e
0x0000020000436721 : jmp 0x20000436727
0x0000020000436792 : jmp 0x20000436798
0x0000020000438623 : jmp 0x200004385e9
0x0000020000438f12 : jmp 0x20000438ea6
0x00000200005d6bf2 : jmp 0x2000043a0a6
0x000002000043a981 : jmp 0x2000043a947
0x000002000043be41 : jmp 0x2000043be06
0x000002000043c1e0 : jmp 0x2000043c1a5
0x000002000043c1df : jmp 0x2000043c1a6
0x0000020000441df1 : jmp 0x20000441df4
0x000002000044246f : jmp 0x200004423d2
0x0000020000444731 : jmp 0x20000443e74
0x000002000044426e : jmp 0x20000444233
0x00000200004442a1 : jmp 0x20000444266
0x00000200004442f2 : jmp 0x200004442b7
0x00000200004442f1 : jmp 0x200004442b8
0x00000200005eb554 : jmp 0x2000044776e
0x00000200005eb53b : jmp 0x20000447792
0x00000200005ebb81 : jmp 0x20000447d88
0x00000200005ebb9a : jmp 0x20000447e27
0x00000200005ebf0e : jmp 0x2000044816d
0x0000020000448d36 : jmp 0x20000448c41
0x000002000045b966 : jmp 0x2000045b92c
0x000002000045c4f2 : jmp 0x2000045c378
0x000002000045c5ff : jmp 0x2000045c57f
0x00000200005fa2a5 : jmp 0x2000045ce1e
0x00000200005fa2bc : jmp 0x2000045ce6b
0x0000020000461683 : jmp 0x200004613a0
0x0000020000465e19 : jmp 0x20000465ddf
0x0000020000466b5e : jmp 0x20000466b24
0x00000200004680c1 : jmp 0x20000468087
0x0000020000468543 : jmp 0x200004684d5
0x00000200005fcc6c : jmp 0x20000468f4f
0x00000200004698e5 : jmp 0x20000469882
0x000002000046b5a3 : jmp 0x2000046b569
0x00000200005fffa4 : jmp 0x2000046c1b0
0x0000020000600114 : jmp 0x2000046c3d9
0x00000200006001bc : jmp 0x2000046c496
0x000002000046cb69 : jmp 0x2000046cab9
0x00000200004a95c0 : jmp 0x2000046cb1b
0x00000200006017e6 : jmp 0x2000046dab4
0x00000200006017e5 : jmp 0x2000046dab5
0x000002000060193b : jmp 0x2000046db7e
0x000002000060193a : jmp 0x2000046db7f
0x00000200006019d6 : jmp 0x2000046dc78
0x00000200006019d5 : jmp 0x2000046dc79
0x00000200006019cc : jmp 0x2000046dcb4
0x0000020000627d9c : jmp 0x2000046e4b1
0x000002000046f9bb : jmp 0x2000046f9ac
0x000002000062cd53 : jmp 0x200004727df
0x00000200004757da : jmp 0x2000047576a
0x00000200005f8a04 : jmp 0x2000047f540
0x00000200005f8a37 : jmp 0x2000047f57a
0x00000200005f8aa3 : jmp 0x2000047f708
0x00000200004812f3 : jmp 0x200004812b8
0x00000200005f6b6d : jmp 0x20000482e0e
0x00000200004841a9 : jmp 0x20000484175
0x0000020000486e07 : jmp 0x20000486dcd
0x00000200004888ef : jmp 0x200004886fa
0x00000200005f7f80 : jmp 0x20000488e1b
0x000002000048f556 : jmp 0x2000048f51c
0x00000200004932d8 : jmp 0x2000049329e
0x0000020000496906 : jmp 0x20000496700
0x00000200004968d2 : jmp 0x200004967d1
0x000002000049a4a1 : jmp 0x2000049a44b
0x00000200004a9706 : jmp 0x2000049a46f
0x000002000049cf6d : jmp 0x2000049cf33
0x000002000060075a : jmp 0x2000049deba
0x00000200004ae25d : jmp 0x200004ae21e
0x0000020000605a0c : jmp 0x200004b79e4
0x00000200004bb28e : jmp 0x200004bb14e
0x00000200004bb1bb : jmp 0x200004bb219
0x00000200004bb1ba : jmp 0x200004bb21a
0x0000020000626846 : jmp 0x200004bbaaa
0x000002000049f9e2 : jmp 0x200004bbc18
0x000002000049f9c4 : jmp 0x200004bbc4e
0x00000200004c53ca : jmp 0x200004c538f
0x00000200004c6b67 : jmp 0x200004c6b71
0x00000200004c74f6 : jmp 0x200004c7500
0x00000200004c9baf : jmp 0x200004c9b75
0x00000200004c9d57 : jmp 0x200004c9d1c
0x0000020000605b59 : jmp 0x200004cf47e
0x00000200004cfaa0 : jmp 0x200004cf99e
0x0000020000497502 : jmp 0x200004cf9dc
0x00000200004cfc90 : jmp 0x200004cfba4
0x0000020000497554 : jmp 0x200004cfbdd
0x00000200005176d4 : jmp 0x200004d1966
0x0000020000605d02 : jmp 0x200004d1fb0
0x0000020000605cea : jmp 0x200004d2051
0x00000200004d4959 : jmp 0x200004d491f
0x00000200004d4e84 : jmp 0x200004d4e92
0x00000200004d5520 : jmp 0x200004d51cb
0x00000200004d74a9 : jmp 0x200004d74c3
0x00000200004d8e15 : jmp 0x200004d8bc6
0x000002000051e1a9 : jmp 0x200004da73b
0x0000020000604def : jmp 0x200004dbf27
0x0000020000604d5a : jmp 0x200004dbfff
0x00000200005178f1 : jmp 0x200004dd1c6
0x000002000062a599 : jmp 0x200004e1107
0x00000200005e7aaf : jmp 0x200004e3d02
0x00000200005e7a72 : jmp 0x200004e3d04
0x00000200005e7a72 : jmp 0x200004e3d0a
0x000002000062a49f : jmp 0x200004ebd2f
0x00000200004f1581 : jmp 0x200004f1547
0x00000200004f27b2 : jmp 0x200004f28d8
0x00000200004f31bf : jmp 0x200004f3073
0x00000200004f4529 : jmp 0x200004f44ee
0x00000200004f452f : jmp 0x200004f44f4
0x00000200004fa55a : jmp 0x200004fa520
0x00000200005eef24 : jmp 0x200004fb1c7
0x00000200004fc61d : jmp 0x200004fc5e3
0x00000200005f8ae9 : jmp 0x200004fd0a8
0x00000200004fd929 : jmp 0x200004fd8ef
0x00000200004ffe09 : jmp 0x200004ffdce
0x00000200005d4948 : jmp 0x20000505413
0x0000020000508f29 : jmp 0x20000508eef
0x000002000050900c : jmp 0x20000508fd2
0x000002000062a699 : jmp 0x2000050a048
0x00000200005f9f87 : jmp 0x2000050c5eb
0x000002000050f2a5 : jmp 0x2000050f26b
0x00000200005113ad : jmp 0x20000511373
0x00000200005147cd : jmp 0x20000514793
0x0000020000605bed : jmp 0x200005174db
0x0000020000517951 : jmp 0x200005179e9
0x0000020000605c80 : jmp 0x20000517fe4
0x0000020000601264 : jmp 0x2000051cbdf
0x0000020000622cf9 : jmp 0x2000051d31c
0x0000020000523e73 : jmp 0x20000523e39
0x0000020000620240 : jmp 0x2000052441c
0x00000200005250cd : jmp 0x2000052512b
0x0000020000529fdf : jmp 0x20000529fa5
0x000002000052ac7c : jmp 0x2000052acad
0x000002000052e90a : jmp 0x2000052eda7
0x000002000053e6f2 : jmp 0x2000053ecbe
0x00000200005426eb : jmp 0x2000054274a
0x000002000054bf15 : jmp 0x2000054bf35
0x0000020000551460 : jmp 0x20000551550
0x0000020000552181 : jmp 0x20000552187
0x0000020000554221 : jmp 0x200005541e7
0x000002000055422b : jmp 0x20000554239
0x0000020000558b1c : jmp 0x20000558b4f
0x000002000056ed8f : jmp 0x2000056ed55
0x000002000056eed9 : jmp 0x2000056ee9f
0x000002000056ef3b : jmp 0x2000056ef73
0x0000020000573211 : jmp 0x20000573294
0x0000020000573211 : jmp 0x20000573296
0x00000200005757c4 : jmp 0x200005757d9
0x00000200005788f2 : jmp 0x20000578bdc
0x000002000057b875 : jmp 0x2000057b88d
0x0000020000583503 : jmp 0x20000583623
0x00000200005857df : jmp 0x200005858d0
0x000002000058624f : jmp 0x2000058625b
0x00000200005906a8 : jmp 0x2000059019a
0x000002000059098f : jmp 0x200005909c5
0x0000020000594356 : jmp 0x2000059438c
0x00000200005a7a26 : jmp 0x200005a79eb
0x00000200005b74c5 : jmp 0x200005b74cf
0x00000200005b9fd7 : jmp 0x200005b9f9d
0x00000200005bdfe5 : jmp 0x200005be05d
0x00000200005c4da4 : jmp 0x200005c4d6a
0x00000200005c78b0 : jmp 0x200005c79a5
0x0000020000438f08 : jmp 0x200005da50c
0x00000200005dc9ee : jmp 0x200005dc9ff
0x00000200005dd4f1 : jmp 0x200005dd4f3
0x00000200004365d0 : jmp 0x200005deecd
0x00000200005dfe6d : jmp 0x200005dfe33
0x00000200005e0a67 : jmp 0x200005e0ae0
0x00000200005e4f2c : jmp 0x200005e4ef1
0x00000200005f6b95 : jmp 0x200005f6b5b
0x00000200005f6b74 : jmp 0x200005f6b82
0x00000200005fa021 : jmp 0x200005f9fe7
0x0000020000605a0f : jmp 0x20000605a14
0x0000020000608e41 : jmp 0x20000608e5b
0x0000020000609c51 : jmp 0x20000609c17
0x00000200003e8f0c : jmp 0x2000060ebe3
0x000002000040eed0 : jmp 0x2000060f052
0x000002000062377f : jmp 0x20000623772
0x0000020000624b4e : jmp 0x20000624b14
0x000002000062a59c : jmp 0x2000062a5a0
0x00000200006343d4 : jmp 0x2000063438f
0x00000200006343e7 : jmp 0x200006343ad
0x0000020000638731 : jmp 0x20000634a05
0x0000020000637eb7 : jmp 0x20000635348
0x0000020000637ec6 : jmp 0x200006353ab
0x0000020000637ee0 : jmp 0x2000063542e
0x0000020000637ee0 : jmp 0x2000063542f
0x0000020000635418 : jmp 0x20000635464
0x00000200006355a2 : jmp 0x20000635628
0x0000020000637fa6 : jmp 0x20000635672
0x0000020000637fa6 : jmp 0x20000635673
0x0000020000635659 : jmp 0x200006356a9
0x00000200006379e4 : jmp 0x200006379f1
0x0000020000637ed2 : jmp 0x20000637efc
0x0000020000637ed2 : jmp 0x20000637efd
0x000002000063ec7f : jmp 0x2000063eca6
0x0000020000641c66 : jmp 0x20000641c2c
0x00000200006429c2 : jmp 0x20000642988
0x0000020000642aa2 : jmp 0x20000642a68
0x000002000064eb24 : jmp 0x2000064eb40
0x000002000064eb24 : jmp 0x2000064eb41
0x0000020000656c96 : jmp 0x20000656cb9
0x0000020000658739 : jmp 0x2000065874c
0x000002000065878a : jmp 0x200006587ad
0x0000020000669992 : jmp 0x20000665472
0x0000020000669711 : jmp 0x20000665ff0
0x00000200006c263d : jmp 0x200006c2603
0x000002000070d54e : jmp 0x200006c2c30
0x00000200006c947b : jmp 0x200006c9621
0x00000200006d1108 : jmp 0x200006d10ce
0x00000200006d16c4 : jmp 0x200006d1689
0x00000200006e7818 : jmp 0x200006d3aba
0x00000200006e9ed1 : jmp 0x200006e9eab
0x00000200006f06ba : jmp 0x200006f068a
0x000002000070c801 : jmp 0x200006f3609
0x00000200006fed13 : jmp 0x200006fed02
0x000002000070f6d2 : jmp 0x200006fff31
0x00000200007054e6 : jmp 0x200007054ac
0x000002000070ad23 : jmp 0x2000070acc4
0x00000200006c0520 : jmp 0x2000070dfe2
0x00000200000f7aba : jmp 0x20000c93cc4
0x000002000006b3ee : jmp 0x200016e413e
0x0000020000049ee7 : jmp 0x20001e621fe
0x0000020000066926 : jmp 0x20002c8ec94
0x000002000050f6ce : jmp 0x200033b7ad9
0x00000200003f5523 : jmp 0x2001101d873
0x000002000037617f : jmp 0x200113751a5
0x0000020000144772 : jmp 0x20012479081
0x00000200003b5783 : jmp 0x200247fe0d7
0x00000200006d093a : jmp 0x200342f948e
0x00000200001c28e3 : jmp 0x200411c35c5
0x000002000019bf91 : jmp 0x20041dc4add
0x00000200003c42fa : jmp 0x20041fece4a
0x0000020000506303 : jmp 0x2004212ee4f
0x000002000051e8ed : jmp 0x20042a2a13b
0x000002000003f996 : jmp 0x20048c684be
0x0000020000124af8 : jmp 0x20048d4d648
0x0000020000124d21 : jmp 0x20048d4d871
0x000002000016be79 : jmp 0x20048d949c2
0x000002000014b6f2 : jmp 0x20048df4246
0x00000200003d00e4 : jmp 0x20048ff8c2d
0x000002000040016c : jmp 0x20049028c76
0x000002000055210e : jmp 0x2004917ac5e
0x000002000055bdac : jmp 0x200491848f5
0x000002000055be06 : jmp 0x2004918494f
0x00000200003a79e3 : jmp 0x200492d0430
0x000002000066627b : jmp 0x20049662520
0x0000020000046c96 : jmp 0x20049c6f7ea
0x000002000004130e : jmp 0x20049c7121f
0x000002000012d046 : jmp 0x20049d55b9a
0x00000200005137c3 : jmp 0x2004d50fac6
0x000002000066a61b : jmp 0x2004d66686f
0x00000200000cbe13 : jmp 0x2004f0cb170
0x00000200005b6b0a : jmp 0x2005660f65f
0x00000200005b6b09 : jmp 0x2005660f660
0x000002000019cecb : jmp 0x20066dbf239
0x00000200000c3831 : jmp 0x20067cebc48
0x000002000058a118 : jmp 0x2007522252c
0x0000020000643354 : jmp 0x2007524b8ad
0x000002000003b4a5 : jmp qword ptr [r10 + rax*8]
0x00000200005cb8e1 : jmp qword ptr [r10]
0x00000200000cc365 : jmp qword ptr [r11]
0x00000200004f5485 : jmp qword ptr [rax - 0x7cb70013]
0x0000020000015f2a : jmp qword ptr [rax]
0x00000200005115b9 : jmp qword ptr [rbp - 0x2a]
0x00000200000176a9 : jmp qword ptr [rbx]
0x00000200000e7059 : jmp qword ptr [rcx + 0x74c00000]
0x000002000008b949 : jmp qword ptr [rcx]
0x00000200000d02b9 : jmp qword ptr [rdi]
0x000002000003b4a6 : jmp qword ptr [rdx + rax*8]
0x0000020000071d29 : jmp qword ptr [rdx]
0x0000020000637b30 : jmp qword ptr [rsi + 0x41]
0x00000200000af1c5 : jmp qword ptr [rsi + 0xf]
0x00000200006352f9 : jmp qword ptr [rsi + 9]
0x000002000037e05c : jmp qword ptr [rsi - 0x77]
0x000002000008caaf : jmp qword ptr [rsi]
0x00000200003a5770 : jmp qword ptr fs:[rdi]
0x000002000007b0a1 : jmp r11
0x000002000014aa51 : jmp r8
0x00000200000619c9 : jmp r9
0x0000020000019c48 : jmp rax
0x000002000007b0a2 : jmp rbx
0x00000200000165f9 : jmp rcx
0x000002000008e874 : jmp rdi
0x0000020000117695 : jmp rdx
0x00000200001b3ff3 : jmp rsi
0x0000020000058b7d : jmp rsp
0x00000200000041d8 : jne 0x200000041e0 ; mov al, dl ; ret
0x00000200000041d8 : jne 0x200000041e1 ; mov al, dl ; ret
0x000002000000577d : jne 0x20000005784 ; ret
0x000002000000667f : jne 0x200000066a9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000006eef : jne 0x20000006ef4 ; ret
0x00000200000070c7 : jne 0x200000070d6 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000000b506 : jne 0x2000000b50e ; xor eax, eax ; ret
0x000002000000b501 : jne 0x2000000b511 ; cmp qword ptr [rax], rax ; jne 0x2000000b513 ; xor eax, eax ; ret
0x0000020000010f16 : jne 0x20000010f23 ; add rsp, 0x38 ; ret
0x0000020000012a63 : jne 0x20000012a6a ; ret
0x0000020000012a83 : jne 0x20000012a73 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001315d : jne 0x20000013157 ; ret 0xf01
0x00000200000165f3 : jne 0x200000165fc ; xor al, al ; ret
0x0000020000016ec4 : jne 0x20000016f26 ; mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x0000020000017043 : jne 0x20000017061 ; xor eax, eax ; ret
0x000002000001804a : jne 0x20000018055 ; mov rax, rcx ; ret
0x000002000001ad82 : jne 0x2000001ad93 ; mov byte ptr [rcx + 0x185], dl ; ret
0x000002000001dbba : jne 0x2000001dbc5 ; mov qword ptr [r8], rcx ; ret
0x000002000001e295 : jne 0x2000001e30b ; mov eax, 2 ; ret
0x000002000001e2e6 : jne 0x2000001e311 ; mov eax, 0x10 ; ret
0x000002000001eddf : jne 0x2000001ede4 ; ret
0x00000200000202d2 : jne 0x200000202cc ; ret
0x0000020000020c48 : jne 0x20000020c43 ; mov rax, r11 ; add rsp, 0x28 ; ret
0x0000020000020edf : jne 0x20000020ed8 ; xor eax, eax ; ret
0x0000020000021cda : jne 0x20000021ce1 ; ret
0x0000020000021d87 : jne 0x20000021db0 ; lea rax, qword ptr [rip + 0xdc0d0] ; ret
0x0000020000021d9d : jne 0x20000021dcc ; lea rax, qword ptr [rip + 0xdc05a] ; ret
0x0000020000021da9 : jne 0x20000021e01 ; lea rax, qword ptr [rip + 0xdc0be] ; ret
0x0000020000021dee : jne 0x20000021e3e ; lea rax, qword ptr [rip + 0xdc159] ; ret
0x0000020000021e23 : jne 0x20000021e4b ; lea rax, qword ptr [rip + 0xdc224] ; ret
0x0000020000021dfe : jne 0x20000021e60 ; lea rax, qword ptr [rip + 0xdc089] ; ret
0x0000020000021e38 : jne 0x20000021e6c ; lea rax, qword ptr [rip + 0xdc12f] ; ret
0x0000020000021e45 : jne 0x20000021e81 ; lea rax, qword ptr [rip + 0xdc142] ; ret
0x0000020000021e59 : jne 0x20000021e92 ; lea rax, qword ptr [rip + 0xdc05e] ; ret
0x0000020000021e66 : jne 0x20000021e92 ; lea rax, qword ptr [rip + 0xdc151] ; ret
0x0000020000021f0c : jne 0x20000021f15 ; xor eax, eax ; ret
0x0000020000023178 : jne 0x20000023172 ; ret
0x00000200000232c0 : jne 0x200000232b5 ; add rsp, 0x28 ; ret
0x0000020000023549 : jne 0x20000023567 ; mov rcx, rsi ; call r14
0x0000020000023edb : jne 0x20000023eba ; mov eax, r9d ; ret
0x000002000002587e : jne 0x20000025879 ; mov rax, rcx ; ret
0x0000020000026804 : jne 0x20000026817 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000026e19 : jne 0x20000026e24 ; mov rax, rcx ; ret
0x0000020000026e69 : jne 0x20000026e31 ; xor eax, eax ; ret
0x0000020000027279 : jne 0x2000002725a ; mov rax, rcx ; ret
0x0000020000028360 : jne 0x20000028388 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000028677 : jne 0x20000028666 ; ret
0x0000020000029d41 : jne 0x20000029d56 ; ret
0x000002000002a58c : jne 0x2000002a599 ; add rsp, 0x28 ; ret
0x000002000002ac5a : jne 0x2000002ac55 ; mov rax, rcx ; ret
0x000002000002e379 : jne 0x2000002e348 ; inc r12d ; jmp 0x2000002e348
0x0000020000030bdb : jne 0x20000030be4 ; xor eax, eax ; ret
0x00000200000387e1 : jne 0x200000387d5 ; mov rax, rdx ; ret
0x0000020000039dfd : jne 0x20000039dd3 ; mov dword ptr [rbx + 0xd0], edi ; jmp 0x20000039dd3
0x000002000003af89 : jne 0x2000003af8e ; ret
0x000002000003bb92 : jne 0x2000003bb73 ; lea rax, qword ptr [r9 - 0x10] ; ret
0x000002000003c6ca : jne 0x2000003c690 ; jmp 0x2000003c64a
0x000002000003c63f : jne 0x2000003c6c3 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003efdd : jne 0x2000003eff0 ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003ff8d : jne 0x2000003ff80 ; mov rdx, r15 ; mov rcx, r12 ; call r14
0x000002000003ffc8 : jne 0x2000003ffbb ; mov rdx, r15 ; mov rcx, rsi ; call r14
0x0000020000045355 : jne 0x2000004536e ; mov eax, 1 ; ret
0x0000020000047850 : jne 0x2000004783e ; xor al, al ; add rsp, 0x28 ; ret
0x000002000004d691 : jne 0x2000004d669 ; xor eax, eax ; ret
0x000002000004d680 : jne 0x2000004d679 ; ret
0x000002000004d669 : jne 0x2000004d687 ; ret
0x000002000004f1e4 : jne 0x2000004f1fe ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004f234 : jne 0x2000004f246 ; ret
0x000002000004f233 : jne 0x2000004f247 ; ret
0x000002000005105a : jne 0x20000051039 ; add rsp, 0x28 ; ret
0x0000020000054a18 : jne 0x20000054a2c ; lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000054f09 : jne 0x20000054f12 ; mov al, 1 ; ret
0x0000020000056a03 : jne 0x20000056a14 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000588dd : jne 0x200000588ee ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000058f0a : jne 0x20000058f0f ; ret
0x0000020000059a2a : jne 0x20000059a23 ; ret
0x000002000005a9c9 : jne 0x2000005a97d ; mov rcx, rbx ; jmp 0x2000005a998
0x000002000005aa8a : jne 0x2000005aa9d ; lock inc dword ptr [rcx + 0x46c] ; ret
0x000002000005af9b : jne 0x2000005afae ; sub qword ptr [rip + 0x244104], rdx ; ret
0x000002000005d1c2 : jne 0x2000005d1d1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000062a39 : jne 0x20000062a54 ; ret
0x0000020000062a8e : jne 0x20000062a87 ; ret
0x00000200000633b9 : jne 0x20000063464 ; ret
0x0000020000063481 : jne 0x2000006347a ; ret
0x0000020000063643 : jne 0x20000063669 ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x0000020000063643 : jne 0x2000006366a ; mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x00000200000636ad : jne 0x200000636bc ; or byte ptr [r8 + 0x1a], 0x10 ; ret
0x0000020000063ce4 : jne 0x20000063cc0 ; ret
0x0000020000063d50 : jne 0x20000063d71 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006440f : jne 0x200000643f1 ; mov dl, 1 ; mov al, dl ; ret
0x0000020000064b2d : jne 0x20000064b32 ; ret
0x000002000006609e : jne 0x200000660ad ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000660ff : jne 0x2000006610a ; mov al, r8b ; ret
0x000002000006740c : jne 0x2000006746f ; mov rcx, rdi ; call rsi
0x0000020000067920 : jne 0x20000067943 ; add rsp, 0x28 ; ret
0x0000020000067eb3 : jne 0x20000067eae ; mov rax, rcx ; ret
0x000002000006ad4c : jne 0x2000006ad46 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006ba7f : jne 0x2000006ba9e ; xor al, al ; ret
0x000002000006bd06 : jne 0x2000006bd17 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000006bd74 : jne 0x2000006bd92 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000006bdae : jne 0x2000006bdc1 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006c4bf : jne 0x2000006c4d2 ; mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x000002000006cc38 : jne 0x2000006cc3d ; ret
0x000002000006cca1 : jne 0x2000006ccb4 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006cdc6 : jne 0x2000006cdcf ; mov al, 1 ; ret
0x000002000006fb43 : jne 0x2000006fb35 ; xor al, al ; ret
0x000002000006fb3c : jne 0x2000006fb45 ; mov al, 1 ; ret
0x000002000007355f : jne 0x200000734ee ; xor rax, rax ; ret
0x000002000007360d : jne 0x20000073605 ; xor rax, rax ; ret
0x00000200000738e3 : jne 0x20000073874 ; xor eax, eax ; ret
0x0000020000073976 : jne 0x20000073938 ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000073c86 : jne 0x20000073bd1 ; mov rax, r11 ; ret
0x0000020000076d45 : jne 0x20000076d2c ; mov rax, r8 ; pop rbx ; ret
0x0000020000076d8d : jne 0x20000076d5e ; mov rax, r8 ; pop rbx ; ret
0x0000020000076dd1 : jne 0x20000076dc1 ; mov rax, r8 ; pop rbx ; ret
0x0000020000076e53 : jne 0x20000076e4a ; lea rax, qword ptr [rdx - 1] ; pop rbx ; ret
0x0000020000076ec3 : jne 0x20000076eac ; mov rax, r10 ; pop rbx ; ret
0x0000020000076ec3 : jne 0x20000076eae ; mov rax, r10 ; pop rbx ; ret
0x000002000007720c : jne 0x20000077205 ; mov rax, r11 ; ret
0x00000200000773ac : jne 0x200000773a5 ; mov rax, r11 ; ret
0x000002000007b34a : jne 0x2000007b5ad ; call r10
0x0000020000082d19 : jne 0x20000082caf ; ret
0x000002000008e477 : jne 0x2000008e484 ; adc eax, 0xd9818709 ; ret
0x000002000008ef9a : jne 0x2000008ef2a ; ret 0x5e78
0x0000020000091fdc : jne 0x20000091f7b ; jl 0x20000092007 ; ret 0x23e8
0x0000020000091fdb : jne 0x20000092057 ; cdq ; jl 0x20000092008 ; ret 0x23e8
0x000002000009f6ee : jne 0x2000009f766 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x00000200000a38bb : jne 0x200000a38b2 ; ret 0
0x00000200000a37c7 : jne 0x200000a38b6 ; ret 0
0x00000200000a39b9 : jne 0x200000a39b3 ; ret 0
0x00000200000a4e62 : jne 0x200000a4e69 ; ret 0
0x00000200000a8da8 : jne 0x200000a8dad ; ret
0x00000200000a917c : jne 0x200000a9187 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000a91ba : jne 0x200000a91c9 ; lock and qword ptr [rcx], 0 ; ret
0x00000200000ad55c : jne 0x200000ad56f ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000aeca1 : jne 0x200000aec91 ; ret
0x00000200000b2483 : jne 0x200000b2490 ; add rsp, 0x28 ; ret
0x00000200000b7fe3 : jne 0x200000b7fec ; mov al, 1 ; ret
0x00000200000b8026 : jne 0x200000b8014 ; ret
0x00000200000b8b6e : jne 0x200000b8b7d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b966d : jne 0x200000b9680 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000ba334 : jne 0x200000ba339 ; ret
0x00000200000badb8 : jne 0x200000badac ; mov al, 1 ; ret
0x00000200000badd3 : jne 0x200000badde ; mov rax, rcx ; ret
0x00000200000bdd23 : jne 0x200000bdd06 ; xor al, al ; ret
0x00000200000bdd22 : jne 0x200000bdd07 ; xor al, al ; ret
0x00000200000bdd11 : jne 0x200000bdd0a ; test al, 2 ; jne 0x200000bdd29 ; xor al, al ; ret
0x00000200000bdd1c : jne 0x200000bdd0d ; xor al, al ; ret
0x00000200000bdd1b : jne 0x200000bdd0e ; xor al, al ; ret
0x00000200000bdd07 : jne 0x200000bdd1e ; mov al, 1 ; ret
0x00000200000bdd15 : jne 0x200000bdd25 ; xor al, al ; ret
0x00000200000bde2b : jne 0x200000bde3e ; mov al, 1 ; ret
0x00000200000bde98 : jne 0x200000bde7b ; ret
0x00000200000bdf08 : jne 0x200000bdf19 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000bdf6a : jne 0x200000bdf73 ; xor eax, eax ; ret
0x00000200000bdfd7 : jne 0x200000bdfdc ; ret
0x00000200000be5fa : jne 0x200000be609 ; mov eax, 0xc0000225 ; ret
0x00000200000be65b : jne 0x200000be664 ; xor al, al ; ret
0x00000200000bee9b : jne 0x200000beeb7 ; mov rax, qword ptr [rdx + 0x220] ; ret
0x00000200000beeb0 : jne 0x200000beec3 ; mov rax, qword ptr [rdx + 0xb8] ; ret
0x00000200000beeee : jne 0x200000beefb ; ret
0x00000200000c02c7 : jne 0x200000c02d7 ; xor al, al ; ret
0x00000200000c1e36 : jne 0x200000c1e47 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1f1d : jne 0x200000c1f24 ; ret
0x00000200000c3112 : jne 0x200000c3134 ; ret
0x00000200000c4505 : jne 0x200000c44eb ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000c7855 : jne 0x200000c7832 ; ret 0
0x00000200000c78c9 : jne 0x200000c7877 ; lock or byte ptr [rsp], 0 ; ret
0x00000200000c795e : jne 0x200000c7935 ; sfence ; ret
0x00000200000c795d : jne 0x200000c7936 ; sfence ; ret
0x00000200000c7b13 : jne 0x200000c7b2d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c9334 : jne 0x200000c933d ; xor eax, eax ; ret
0x00000200000c9344 : jne 0x200000c9354 ; mov rax, r9 ; ret
0x00000200000ca5e6 : jne 0x200000ca5e0 ; ret 0xf01
0x00000200000cc430 : jne 0x200000cc435 ; ret
0x00000200001d98d9 : jne 0x200000d04ed ; jmp 0x200001d98aa
0x00000200000d8557 : jne 0x200000d855e ; ret
0x00000200000d8562 : jne 0x200000d856b ; xor eax, eax ; ret
0x00000200000d9fb3 : jne 0x200000d9fbf ; mov al, 1 ; ret
0x00000200000d9feb : jne 0x200000da011 ; ret
0x00000200000dbb08 : jne 0x200000dbb2e ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x00000200000dc813 : jne 0x200000dc822 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000de1d2 : jne 0x200000de1ba ; mov eax, 1 ; ret
0x00000200000def9c : jne 0x200000defaf ; mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000df88e : jne 0x200000df8b1 ; ret
0x00000200000e47cd : jne 0x200000e47dc ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000e6568 : jne 0x200000e6575 ; mov rax, qword ptr [rcx + 8] ; ret
0x00000200000e7541 : jne 0x200000e754c ; mov rax, r9 ; ret
0x00000200000e9839 : jne 0x200000e9818 ; or r8d, edx ; mov eax, r8d ; ret
0x00000200000e993c : jne 0x200000e994d ; mov eax, dword ptr [rip + 0x26d6c8] ; ret
0x00000200000ea9e1 : jne 0x200000ea9e6 ; ret
0x00000200000ebdba : jne 0x200000ebdd9 ; add rsp, 0x28 ; ret
0x00000200000eec9a : jne 0x200000eec4f ; xor eax, eax ; ret
0x00000200000f82d5 : jne 0x200000f82da ; ret
0x00000200000f839f : jne 0x200000f83a7 ; xor eax, eax ; ret
0x00000200000f9105 : jne 0x200000f910e ; xor eax, eax ; ret
0x00000200000fea95 : jne 0x200000fea7f ; not ecx ; mov eax, ecx ; ret
0x00000200001009e2 : jne 0x200001009d3 ; mov byte ptr [rip + 0x1e737c], dl ; ret
0x00000200001009c3 : jne 0x200001009db ; mov byte ptr [rip + 0x1e7398], dl ; ret
0x00000200001009d6 : jne 0x200001009e7 ; mov byte ptr [rip + 0x1e7384], dl ; ret
0x000002000010142d : jne 0x2000010143e ; mov al, byte ptr [rip + 0x1e692d] ; ret
0x000002000010140e : jne 0x20000101440 ; ret
0x0000020000104f17 : jne 0x20000104f1c ; ret
0x0000020000105089 : jne 0x200001050a5 ; add rsp, 0x28 ; ret
0x000002000010703f : jne 0x2000010704b ; or byte ptr [rcx + 9], 4 ; ret
0x0000020000108a09 : jne 0x200001089f0 ; ret
0x000002000010a93a : jne 0x2000010a945 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000010a95e : jne 0x2000010a969 ; lea eax, dword ptr [rcx + 6] ; ret
0x000002000010a96e : jne 0x2000010a985 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x00000200002008df : jne 0x2000010a989 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000010a9a2 : jne 0x2000010a9b1 ; mov eax, 0xc0000001 ; ret
0x000002000010bb54 : jne 0x2000010bb63 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000139455 : jne 0x2000010c149 ; mov edx, ecx ; mov eax, edx ; ret
0x000002000010ec12 : jne 0x2000010ebce ; ret
0x000002000011033d : jne 0x200001102dc ; mov al, 1 ; ret
0x0000020000112b2b : jne 0x20000112b3e ; lea rax, qword ptr [rip - 0x17034] ; ret
0x0000020000112b4f : jne 0x20000112b82 ; lea rax, qword ptr [rip - 0x14f68] ; ret
0x0000020000112b7b : jne 0x20000112b8e ; lea rax, qword ptr [rip - 0x14bf4] ; ret
0x00000200001140b1 : jne 0x2000011409b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000115368 : jne 0x2000011537b ; mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000116f9b : jne 0x20000116fa0 ; ret
0x00000200001172f9 : jne 0x200001172f7 ; cmp al, dl ; jne 0x2000011730c ; mov rax, rcx ; ret
0x00000200001172fd : jne 0x20000117308 ; mov rax, rcx ; ret
0x0000020000117464 : jne 0x20000117463 ; mov rcx, r8 ; jmp rdx
0x00000200001191af : jne 0x200001191c2 ; mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000011b5d6 : jne 0x2000011b5d0 ; mov eax, dword ptr [rip + 0x23bf7e] ; ret
0x000002000011cd84 : jne 0x2000011cd93 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011d4e3 : jne 0x2000011d4f2 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011e138 : jne 0x2000011e131 ; sub rax, rdx ; ret
0x000002000011e211 : jne 0x2000011e223 ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x0000020000009e2a : jne 0x20000120b46 ; ret
0x0000020000122b06 : jne 0x20000122b07 ; push rsi ; ret 0xba01
0x00000200001248f0 : jne 0x200001248fb ; mov al, r9b ; ret
0x0000020000124eff : jne 0x20000124f08 ; xor eax, eax ; ret
0x0000020000127276 : jne 0x2000012725b ; mov qword ptr [r9 + 0x40], rcx ; ret
0x000002000012a024 : jne 0x2000012a014 ; ret
0x000002000012cd2d : jne 0x2000012cd24 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012cde2 : jne 0x2000012cdc7 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000012cde1 : jne 0x2000012cdc8 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000012cde0 : jne 0x2000012cdc9 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000012dc38 : jne 0x2000012dc47 ; ret
0x000002000012f8f3 : jne 0x2000012f8fc ; xor eax, eax ; ret
0x0000020000130431 : jne 0x20000130442 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000132a93 : jne 0x20000132aaa ; ret
0x0000020000132afe : jne 0x20000132b05 ; ret
0x0000020000134365 : jne 0x200001342f2 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000134c0c : jne 0x20000134c2c ; add al, ch ; in al, dx ; ret
0x00000200001351b2 : jne 0x200001351cd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001364ad : jne 0x200001364b6 ; xor eax, eax ; ret
0x0000020000136bd3 : jne 0x20000136bed ; call 0x20000072e44
0x00000200001374ec : jne 0x200001374ff ; mov al, r8b ; add rsp, 0x28 ; ret
0x0000020000137520 : jne 0x20000137529 ; mov al, 1 ; ret
0x0000020000137568 : jne 0x2000013756d ; ret
0x0000020000139a4f : jne 0x20000139a54 ; ret
0x000002000013a1ad : jne 0x2000013a17e ; jmp 0x2000013a176
0x000002000013c211 : jne 0x2000013c1ed ; xor eax, eax ; ret
0x000002000013c20c : jne 0x2000013c1f2 ; test cl, 1 ; jne 0x2000013c1f2 ; xor eax, eax ; ret
0x000002000013cd71 : jne 0x2000013cd2d ; mov rax, r8 ; add rsp, 0x28 ; ret
0x000002000013e772 : jne 0x2000013e75b ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000013feff : jne 0x2000013ff09 ; mov rax, rdx ; ret
0x000002000013feff : jne 0x2000013ff0a ; mov rax, rdx ; ret
0x0000020000140e01 : jne 0x20000140dc0 ; sub eax, r9d ; ret
0x00000200001414c3 : jne 0x200001414cc ; xor al, al ; ret
0x0000020000141636 : jne 0x20000141628 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x00000200001419b4 : jne 0x200001419a0 ; mov al, dl ; ret
0x0000020000142b64 : jne 0x20000142b6f ; mov rax, rcx ; ret
0x0000020000142ba8 : jne 0x20000142b7a ; xor eax, eax ; ret
0x0000020000144a96 : jne 0x20000144aa7 ; mov dword ptr [rcx], 0 ; ret
0x0000020000145031 : jne 0x20000145044 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000146a64 : jne 0x20000146a73 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001474d0 : jne 0x200001474ab ; xor eax, eax ; ret
0x0000020000115107 : jne 0x20000149ff2 ; ret
0x000002000014a3ac : jne 0x2000014a388 ; sub rax, rcx ; sar rax, 1 ; ret
0x000002000014a400 : jne 0x2000014a3dc ; sub rax, rcx ; sar rax, 1 ; ret
0x000002000014bd5c : jne 0x2000014bd41 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x000002000014cc05 : jne 0x2000014cc14 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014ddf6 : jne 0x2000014de13 ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000014de63 : jne 0x2000014de80 ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000014eb98 : jne 0x2000014eb72 ; ret
0x0000020000150dc7 : jne 0x20000150d9f ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x0000020000152a4f : jne 0x20000152a58 ; mov al, 1 ; ret
0x000002000015311f : jne 0x2000015312a ; or eax, 0xffffffff ; ret
0x00000200001535fa : jne 0x2000015360d ; mov dword ptr [r10], 0xffffffff ; ret
0x0000020000153f13 : jne 0x20000153f1c ; xor eax, eax ; ret
0x000002000015409f : jne 0x2000015408d ; mov rax, rcx ; ret
0x00000200001540c5 : jne 0x200001540b8 ; ret
0x0000020000154111 : jne 0x2000015410c ; ret
0x0000020000154427 : jne 0x20000154417 ; ret
0x00000200001547f1 : jne 0x200001547e7 ; mov rax, rcx ; ret
0x000002000015481e : jne 0x20000154814 ; mov rax, rcx ; ret
0x00000200001548ad : jne 0x2000015489d ; mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x0000020000155030 : jne 0x20000154ff5 ; jmp 0x20000155012
0x000002000015502a : jne 0x20000154ff7 ; cmp rdi, 0xff ; jne 0x20000154ffb ; jmp 0x20000155018
0x0000020000157d4f : jne 0x20000157d28 ; ret
0x000002000015850f : jne 0x200001585a9 ; mov al, r10b ; ret
0x000002000015850f : jne 0x200001585aa ; mov al, r10b ; ret
0x0000020000158616 : jne 0x20000158620 ; xor dl, dl ; mov al, dl ; ret
0x000002000015b5e4 : jne 0x2000015b5f0 ; or byte ptr [rax + 4], 4 ; ret
0x000002000015c028 : jne 0x2000015c03c ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x000002000015db5a : jne 0x2000015db4c ; ret
0x00000200001605c8 : jne 0x200001605a6 ; xor eax, eax ; ret
0x00000200001620e3 : jne 0x200001620f2 ; mov eax, 0xc00000bb ; ret
0x0000020000162174 : jne 0x20000162183 ; mov eax, 0xc0000022 ; ret
0x00000200001621d8 : jne 0x200001621e7 ; mov eax, 0xc0000022 ; ret
0x0000020000162208 : jne 0x20000162217 ; mov eax, 0xc0000022 ; ret
0x000002000016223f : jne 0x2000016224e ; mov eax, 0xc0000022 ; ret
0x000002000016224a : jne 0x20000162259 ; mov eax, 0xc000000d ; ret
0x00000200001622e4 : jne 0x200001622f3 ; mov eax, 0xc0000001 ; ret
0x0000020000165c50 : jne 0x20000165c5f ; mov eax, 0xc0000022 ; ret
0x000002000016982b : jne 0x20000169824 ; add rsp, 0x28 ; ret
0x000002000016fc72 : jne 0x2000016fc44 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000016fccb : jne 0x2000016fc94 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000172451 : jne 0x2000017242c ; ret
0x0000020000172d6a : jne 0x20000172d4c ; jmp 0x20000172d43
0x0000020000174116 : jne 0x20000174121 ; mov dword ptr [r8], eax ; ret
0x0000020000174e79 : jne 0x20000174e84 ; or eax, 0xffffffff ; ret
0x000002000017535d : jne 0x20000175381 ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200001766cb : jne 0x200001766c4 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000177b3d : jne 0x20000177b19 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001785ce : jne 0x200001785bb ; ret
0x000002000017a407 : jne 0x2000017a415 ; mov eax, 1 ; ret
0x000002000017e350 : jne 0x2000017e349 ; mov qword ptr [r8], rax ; ret
0x0000020000182ea1 : jne 0x20000182e78 ; mov rax, qword ptr [r8 + 0x50] ; add rax, r9 ; ret
0x0000020000188e7e : jne 0x20000188e62 ; cmp edx, ecx ; je 0x20000188e91 ; mov eax, r11d ; ret
0x000002000018a2db : jne 0x2000018a2b9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000191df4 : jne 0x20000191dc2 ; shr edx, 0x18 ; mov al, dl ; ret
0x0000020000191e50 : jne 0x20000191e29 ; xor r9d, r9d ; mov eax, r9d ; ret
0x00000200001920ee : jne 0x20000192100 ; mov al, byte ptr [r8 + 0xf0] ; ret
0x0000020000192118 : jne 0x2000019212a ; mov byte ptr [rax + 0xf0], 1 ; ret
0x0000020000197519 : jne 0x2000019752c ; mov rax, qword ptr [r8 + 0x418] ; ret
0x000002000019853b : jne 0x2000019854a ; mov eax, 0xc00000f1 ; ret
0x0000020000198733 : jne 0x20000198742 ; mov eax, 0xc000000d ; ret
0x0000020000198ed2 : jne 0x20000198ef6 ; inc dword ptr [rcx + 0x24c] ; ret
0x000002000019abd5 : jne 0x2000019abce ; ret
0x000002000019c6fd : jne 0x2000019c6ef ; ret
0x000002000019e078 : jne 0x2000019e05a ; mov rax, r8 ; ret
0x000002000019e226 : jne 0x2000019e200 ; mov al, 1 ; ret
0x000002000019e3c7 : jne 0x2000019e39e ; mov al, 1 ; ret
0x00000200001a31cd : jne 0x200001a32b8 ; cmp rax, rdx ; jmp 0x200001a3208
0x00000200001a38fe : jne 0x200001a38e1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a3ace : jne 0x200001a3aba ; ret
0x00000200001a85f6 : jne 0x200001a85da ; mov eax, r8d ; ret
0x00000200001a8a33 : jne 0x200001a8a17 ; mov eax, r8d ; ret
0x00000200001a8d4b : jne 0x200001a8dac ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001ab3a4 : jne 0x200001ab3b3 ; and qword ptr [rdx + 8], 0 ; ret
0x00000200001ab41b : jne 0x200001ab3ff ; mov eax, r8d ; ret
0x00000200001abb63 : jne 0x200001abbc4 ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001ae058 : jne 0x200001ae066 ; lea rcx, qword ptr [rbx + 0x50] ; call 0x200001aa32c
0x00000200001afa1f : jne 0x200001afa2a ; mov r8, r10 ; jmp 0x200001afa3e
0x00000200001b41dc : jne 0x200001b41e7 ; mov r8, r10 ; jmp 0x200001b41fb
0x00000200001b6af9 : jne 0x200001b6b02 ; mov al, dl ; jmp 0x200001b6b0a
0x00000200001b9613 : jne 0x200001b95ff ; ret
0x00000200001bc045 : jne 0x200001bc009 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bc507 : jne 0x200001bc4bb ; idiv edi ; add rsp, 0x48 ; ret
0x00000200001becf4 : jne 0x200001becff ; mov byte ptr [rdx + 2], cl ; ret
0x00000200001c2481 : jne 0x200001c2465 ; not r9d ; mov eax, r9d ; ret
0x00000200001c8bb8 : jne 0x200001c8ba4 ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001c8bd0 : jne 0x200001c8bbc ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001c936b : jne 0x200001c93ee ; dec dword ptr [rax + 0x3b] ; ret 0x876
0x00000200000d72dd : jne 0x200001cb6be ; ret
0x0000020000143e03 : jne 0x200001ced27 ; ret
0x0000020000056574 : jne 0x200001d2bf3 ; ret
0x00000200001169cd : jne 0x200001d2f13 ; mov eax, edx ; ret
0x00000200001169cd : jne 0x200001d2f14 ; mov eax, edx ; ret
0x00000200001183a7 : jne 0x200001d4030 ; xor al, al ; ret
0x000002000000b3c4 : jne 0x200001d455d ; ret
0x00000200000fa512 : jne 0x200001dbf5a ; ret
0x00000200001dd60e : jne 0x200001dd67f ; jmp 0x2000014cd9a
0x00000200001e3b00 : jne 0x200001e3adb ; ret
0x000002000003a2ab : jne 0x200001e3adf ; ret
0x00000200001e4f3d : jne 0x200001e4f48 ; mov r8d, edx ; jmp 0x200001e4f51
0x000002000002b98a : jne 0x200001e58c0 ; xor eax, eax ; ret
0x00000200000b8b1f : jne 0x200001e88f6 ; ret
0x00000200001ed24a : jne 0x200001ed25b ; or esi, 8 ; jmp 0x20000119488
0x0000020000116aa0 : jne 0x200001eea13 ; ret
0x000002000012ad62 : jne 0x200001f0d96 ; mov eax, r8d ; ret
0x000002000014306b : jne 0x200001f0dbf ; ret
0x00000200001f0dd2 : jne 0x200001f0dc6 ; ret
0x00000200001413e8 : jne 0x200001f11d4 ; xor eax, eax ; ret
0x0000020000118516 : jne 0x200001f11e7 ; ret
0x000002000014917c : jne 0x200001f2ae8 ; xor al, al ; ret
0x00000200001f583a : jne 0x200001f5835 ; mov rax, rcx ; ret
0x00000200000e4757 : jne 0x200001f7701 ; xor edi, edi ; jmp 0x200000e472d
0x000002000005a692 : jne 0x200001f7a25 ; mov eax, r9d ; ret
0x000002000004d38b : jne 0x200001f80d7 ; ret
0x0000020000140872 : jne 0x200001fb377 ; ret
0x0000020000055ed6 : jne 0x200001fb54a ; ret
0x0000020000106f39 : jne 0x200001fb558 ; xor eax, eax ; ret
0x00000200001071fa : jne 0x200001fd1f6 ; ret
0x000002000014840c : jne 0x200001fd659 ; mov al, 1 ; jmp 0x200001483e2
0x000002000010a94b : jne 0x200002008e5 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000025f8d9 : jne 0x2000025f906 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, ah ; ret 0x40
0x0000020000362f75 : jne 0x20000362f7e ; xor al, al ; ret
0x0000020000363eaa : jne 0x20000363e98 ; ret
0x00000200003663d8 : jne 0x200003663df ; ret
0x000002000036d2f9 : jne 0x2000036d2f9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000036195a : jne 0x200003706b0 ; xor eax, eax ; ret
0x0000020000370777 : jne 0x2000037074b ; ret
0x0000020000364488 : jne 0x20000370783 ; ret
0x00000200003707db : jne 0x20000370784 ; ret
0x0000020000364519 : jne 0x200003707e7 ; ret
0x000002000037287c : jne 0x20000372890 ; mov rcx, rbx ; call 0x2000036eacb
0x00000200003781d0 : jne 0x200003781e3 ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000378717 : jne 0x20000378720 ; xor eax, eax ; ret
0x0000020000378739 : jne 0x2000037872d ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000037ac1c : jne 0x2000037ac19 ; mov eax, 1 ; ret
0x000002000037ac10 : jne 0x2000037ac19 ; xor eax, eax ; ret
0x000002000037e93c : jne 0x2000037e949 ; add rsp, 0x28 ; ret
0x000002000037e9a4 : jne 0x2000037e99b ; ret
0x0000020000383112 : jne 0x2000038311b ; xor eax, eax ; ret
0x0000020000388731 : jne 0x20000388738 ; ret
0x000002000038d40a : jne 0x2000038d425 ; lea rax, qword ptr [rip + 0xc383d] ; ret
0x000002000038dfb7 : jne 0x2000038dfc6 ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000038eea0 : jne 0x2000038f02f ; inc edx ; jmp 0x2000038ee88
0x000002000038fc5a : jne 0x2000038fc69 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039362e : jne 0x20000393639 ; ret
0x0000020000393f60 : jne 0x20000393f6d ; add rsp, 0x28 ; ret
0x0000020000395ac4 : jne 0x20000395abc ; ret
0x0000020000398bae : jne 0x20000398b64 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039a4ac : jne 0x2000039a4b1 ; ret
0x000002000039bfec : jne 0x2000039c035 ; mov qword ptr [r9], r10 ; ret
0x00000200003a0f38 : jne 0x200003a0f46 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003a0f38 : jne 0x200003a0f47 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003a81b5 : jne 0x200003a81de ; mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003aa2ea : jne 0x200003aa2f5 ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003aa2f2 : jne 0x200003aa2fd ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003aa302 : jne 0x200003aa30d ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200003ab546 : jne 0x200003ab54f ; mov al, 1 ; ret
0x00000200003b0116 : jne 0x200003b013a ; xor eax, eax ; ret
0x00000200003b438a : jne 0x200003b43c9 ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200003ba844 : jne 0x200003ba836 ; ret
0x00000200003bbab1 : jne 0x200003bbac4 ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200003bbb9f : jne 0x200003bbb97 ; mov al, 1 ; ret
0x00000200003bcaeb : jne 0x200003bcaf6 ; call 0x200000f8d54
0x00000200003bd6cc : jne 0x200003bd6d3 ; ret
0x00000200003c06a6 : jne 0x200003c06b9 ; lea rax, qword ptr [rcx + 0x678] ; ret
0x00000200003c2756 : jne 0x200003c2761 ; mov al, r9b ; ret
0x00000200003c4dae : jne 0x200003c4dbd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c9b2d : jne 0x200003c9b36 ; xor eax, eax ; ret
0x00000200003cb279 : jne 0x200003cb26f ; ret
0x00000200003cb54c : jne 0x200003cb563 ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200003cb6e2 : jne 0x200003cb6ec ; xor cl, cl ; mov al, cl ; ret
0x00000200003cd9d4 : jne 0x200003cd9dd ; xor eax, eax ; ret
0x00000200003d6bc0 : jne 0x200003d6bd3 ; bt edx, 0x10 ; jb 0x200003d6be2 ; ret
0x00000200005d7d5d : jne 0x200003d86fa ; call 0x20000023fb8
0x00000200003d9276 : jne 0x200003d9268 ; mov al, 1 ; ret
0x00000200003d9376 : jne 0x200003d937f ; xor eax, eax ; ret
0x00000200003dbbb9 : jne 0x200003dbbe2 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dd3aa : jne 0x200003dd3d1 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200003dd3a9 : jne 0x200003dd3d2 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200003dfe44 : jne 0x200003dfe4c ; mov al, dl ; ret
0x00000200003dfe44 : jne 0x200003dfe4d ; mov al, dl ; ret
0x00000200003e4a9a : jne 0x200003e4aab ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003f5590 : jne 0x200003f296e ; call 0x20000023fb9
0x00000200003f5577 : jne 0x200003f2aad ; call 0x20000023fb9
0x00000200003f55b4 : jne 0x200003f30a8 ; call 0x20000023fb9
0x00000200003f55cd : jne 0x200003f38c9 ; call 0x20000023fb9
0x00000200003f4029 : jne 0x200003f4035 ; call 0x20000023fb5
0x00000200003f4185 : jne 0x200003f4191 ; call 0x20000023fb5
0x00000200003f435f : jne 0x200003f436b ; call 0x20000023fb5
0x00000200003f43d8 : jne 0x200003f43e4 ; call 0x20000023fb5
0x00000200003f4523 : jne 0x200003f452f ; call 0x20000023fb5
0x00000200003f45cf : jne 0x200003f45db ; call 0x20000023fb5
0x00000200003f46b3 : jne 0x200003f46bf ; call 0x20000023fb5
0x00000200003f49fd : jne 0x200003f4a09 ; call 0x20000023fb5
0x00000200003f4ac8 : jne 0x200003f4ad4 ; call 0x20000023fb5
0x00000200003f4c00 : jne 0x200003f4c0c ; call 0x20000023fb5
0x00000200003f4cdf : jne 0x200003f4ceb ; call 0x20000023fb5
0x00000200003f4ef9 : jne 0x200003f4f05 ; call 0x20000023fb5
0x00000200003f505f : jne 0x200003f506b ; call 0x20000023fb5
0x00000200003f52fa : jne 0x200003f5306 ; call 0x20000023fb5
0x00000200003f5486 : jne 0x200003f5492 ; call 0x20000023fb5
0x00000200003f5fa4 : jne 0x200003f5de2 ; call 0x20000023fb9
0x00000200003f5fbc : jne 0x200003f5e54 ; call 0x20000023fb9
0x00000200003f6f32 : jne 0x200003f6f39 ; ret
0x00000200003f6f31 : jne 0x200003f6f3a ; ret
0x00000200003f6f30 : jne 0x200003f6f3b ; ret
0x00000200003f6f2c : jne 0x200003f6f3f ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x200003f6f3f ; ret
0x00000200003f7936 : jne 0x200003f78e1 ; call 0x20000023fb5
0x00000200003f828f : jne 0x200003f8274 ; call 0x20000023fb5
0x00000200003f82f1 : jne 0x200003f8306 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f95a6 : jne 0x200003f95ff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f9819 : jne 0x200003f9802 ; call 0x20000023fb5
0x00000200003f9aba : jne 0x200003f9a77 ; call 0x20000023fb5
0x00000200003fa20f : jne 0x200003fa1dc ; call 0x20000023fb5
0x00000200003fa29c : jne 0x200003fa292 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fb034 : jne 0x200003fafb7 ; call 0x20000023fb9
0x00000200003fc646 : jne 0x200003fc615 ; call 0x20000023fb5
0x00000200003fd2e3 : jne 0x200003fd2dd ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003fd55b : jne 0x200003fd498 ; call 0x20000023fb9
0x00000200003fd765 : jne 0x200003fd73d ; call 0x20000023fb5
0x00000200003fd9b3 : jne 0x200003fd97c ; call 0x20000023fb5
0x00000200003fda46 : jne 0x200003fda5b ; xor eax, eax ; ret
0x00000200003ffa86 : jne 0x200003ff9dd ; call 0x20000023fb9
0x00000200003ffd53 : jne 0x200003ffd21 ; call 0x20000023fb5
0x00000200003ffdc6 : jne 0x200003ffd9e ; call 0x20000023fb5
0x0000020000404d09 : jne 0x20000404d17 ; xor eax, eax ; ret
0x0000020000405733 : jne 0x2000040582b ; jmp 0x200004057b0
0x0000020000417c3c : jne 0x20000417c4c ; test cl, cl ; js 0x20000417c6c ; and eax, edx ; ret
0x0000020000417c3c : jne 0x20000417c4d ; test cl, cl ; js 0x20000417c6d ; and eax, edx ; ret
0x0000020000417c3b : jne 0x20000417c4e ; test cl, cl ; js 0x20000417c6e ; and eax, edx ; ret
0x00000200004193e7 : jne 0x200004193f6 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004198e9 : jne 0x200004198f2 ; xor al, al ; ret
0x00000200004198e4 : jne 0x200004198f4 ; test r8b, al ; jne 0x200004198f7 ; xor al, al ; ret
0x000002000041c319 : jne 0x2000041c305 ; xor eax, eax ; ret
0x000002000041c30f : jne 0x2000041c31e ; mov eax, 1 ; ret
0x000002000041caf8 : jne 0x2000041cae3 ; cmp r9d, 6 ; jne 0x2000041cb64 ; ret
0x000002000041cb59 : jne 0x2000041cb4f ; mov eax, 0xc000000d ; ret
0x000002000041cafe : jne 0x2000041cb5e ; ret
0x0000020000421b3c : jne 0x20000421b4d ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000042244a : jne 0x20000422469 ; mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000423fd7 : jne 0x20000423fdc ; ret
0x000002000042401b : jne 0x20000424020 ; ret
0x0000020000424f32 : jne 0x20000424f1c ; mov dword ptr [rbp - 0x18], esi ; call 0x2000004fd28
0x0000020000424f35 : jne 0x20000424f24 ; call 0x2000004fd25
0x0000020000424f9d : jne 0x20000424f65 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000425180 : jne 0x20000425185 ; ret
0x000002000060ca5f : jne 0x20000428e0b ; call 0x200000f8d58
0x000002000042ace7 : jne 0x2000042ad62 ; ret 0x84ff
0x000002000042b7f6 : jne 0x2000042b831 ; call 0x20000055ea9
0x000002000042ee84 : jne 0x2000042ee89 ; ret
0x0000020000434759 : jne 0x20000434773 ; jmp 0x20000434eab
0x0000020000441d75 : jne 0x20000441d82 ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x00000200004446af : jne 0x20000444719 ; ret 0xb9ff
0x000002000045a9ec : jne 0x2000045a9fb ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045aa5c : jne 0x2000045aa89 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045b609 : jne 0x2000045b5f9 ; add rsp, 0x28 ; ret
0x000002000045efe3 : jne 0x2000045f005 ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000466b4f : jne 0x20000466b15 ; ret
0x0000020000466b49 : jne 0x20000466b1b ; cmp byte ptr [rcx + 0x4c], 0 ; jne 0x20000466b1b ; ret
0x00000200004672b3 : jne 0x200004672ba ; ret
0x00000200004672c4 : jne 0x200004672cd ; xor al, al ; ret
0x00000200004672c3 : jne 0x200004672ce ; xor al, al ; ret
0x0000020000468859 : jne 0x2000046886a ; xor al, al ; add rsp, 0x28 ; ret
0x000002000046aa2a : jne 0x2000046aa2f ; ret
0x000002000046aa5e : jne 0x2000046aa6f ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000047482a : jne 0x2000047474a ; xor eax, eax ; pop rbx ; ret
0x0000020000475829 : jne 0x20000475838 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000475db7 : jne 0x20000475d58 ; ret 0x49ff
0x0000020000477d45 : jne 0x20000477d50 ; call 0x20000023fb4
0x000002000047cc42 : jne 0x2000047cc50 ; mov eax, 8 ; ret
0x000002000048544c : jne 0x20000485451 ; ret
0x0000020000485478 : jne 0x2000048547d ; ret
0x00000200004855bb : jne 0x200004855c3 ; mov al, dl ; ret
0x00000200004855bb : jne 0x200004855c4 ; mov al, dl ; ret
0x0000020000485a41 : jne 0x20000485a04 ; mov rcx, rsi ; call 0x200000b5018
0x000002000048675e : jne 0x2000048676b ; add rsp, 0x48 ; ret
0x0000020000487406 : jne 0x200004873d6 ; ret
0x000002000048b627 : jne 0x2000048b5f2 ; in al, -1 ; call 0x200000b9b07
0x000002000048ca22 : jne 0x2000048ca31 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048da4a : jne 0x2000048da10 ; call 0x200000b5015
0x000002000048f56f : jne 0x2000048f576 ; ret
0x000002000048f6e0 : jne 0x2000048f6c0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004908f3 : jne 0x20000490902 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000493d8d : jne 0x20000493da1 ; mov rcx, qword ptr [rsi + 0x48] ; call 0x200000bf2c9
0x0000020000494f0f : jne 0x20000494ef0 ; xor al, al ; ret
0x00000200004a3eb2 : jne 0x200004a3ea6 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200004a4fab : jne 0x200004a4fa0 ; ret
0x00000200004a9327 : jne 0x200004a9337 ; ret
0x00000200004ac728 : jne 0x200004ac731 ; xor eax, eax ; ret
0x00000200004b0613 : jne 0x200004b060c ; cmp rax, r8 ; je 0x200004b05eb ; ret
0x00000200004b1f9b : jne 0x200004b1f9a ; mov byte ptr [rip - 0x21efa3], r8b ; ret
0x00000200004b8fcb : jne 0x200004b8fd8 ; add rsp, 0x28 ; ret
0x00000200004b9070 : jne 0x200004b9078 ; mov al, cl ; ret
0x00000200004b9080 : jne 0x200004b9085 ; ret
0x00000200004b9140 : jne 0x200004b9145 ; ret
0x00000200004b93bf : jne 0x200004b93c6 ; ret
0x00000200004ba3d3 : jne 0x200004ba3b4 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004c2bea : jne 0x200004c2bcd ; ret
0x00000200004c54dd : jne 0x200004c54ef ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200004c7221 : jne 0x200004c7232 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004c775f : jne 0x200004c774a ; xor eax, eax ; ret
0x00000200004c9c83 : jne 0x200004c9c49 ; inc dword ptr [rcx - 0x50] ; add eax, ebp ; ret 0xf9b9
0x00000200004cc0ab : jne 0x200004cc0bd ; mov rcx, rdi ; call 0x200000f8d58
0x00000200004cc0d0 : jne 0x200004cc0e2 ; mov rcx, rdi ; call 0x200000f8d58
0x00000200004cd443 : jne 0x200004cd431 ; ret
0x00000200004ce2a7 : jne 0x200004ce23b ; mov rcx, rsi ; call 0x200000f8d58
0x00000200004d208a : jne 0x200004d2023 ; mov rcx, rdi ; call 0x200000f8d58
0x00000200004d2d7d : jne 0x200004d2de6 ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200004d5cfb : jne 0x200004d5d0a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d9ddb : jne 0x200004d9dea ; test eax, eax ; setg al ; ret
0x00000200004dc473 : jne 0x200004dc486 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004de489 : jne 0x200004de49c ; mov ebx, edi ; call 0x2000014a78e
0x00000200004de9be : jne 0x200004de9b5 ; ret
0x00000200004dee8e : jne 0x200004dee88 ; ret
0x00000200004defde : jne 0x200004defda ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004df64d : jne 0x200004df654 ; ret
0x00000200004e013d : jne 0x200004e0150 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004e7e37 : jne 0x200004e7e4a ; test cl, 8 ; jne 0x200004e7e56 ; xor al, al ; ret
0x00000200004e7e3c : jne 0x200004e7e51 ; xor al, al ; ret
0x00000200004ebe2e : jne 0x200004ebe2b ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200004f974e : jne 0x200004f9761 ; mov al, r8b ; add rsp, 0x28 ; ret
0x00000200004fa491 : jne 0x200004fa49c ; mov rax, r8 ; ret
0x00000200004fbed4 : jne 0x200004fbec0 ; test cl, cl ; je 0x200004fbeb3 ; xor eax, eax ; ret
0x00000200005197c8 : jne 0x2000051976e ; ret
0x0000020000520580 : jne 0x2000052056e ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052644f : jne 0x20000526448 ; ret
0x0000020000526f3a : jne 0x20000526f46 ; and qword ptr [r8], 0 ; ret
0x000002000052a2d4 : jne 0x2000052a2c0 ; mov eax, r8d ; ret
0x000002000052aca8 : jne 0x2000052acb6 ; xor eax, eax ; ret
0x000002000052b6eb : jne 0x2000052b6fc ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x2000052b70a
0x0000020000543167 : jne 0x20000543176 ; mov eax, 0xc000000d ; ret
0x00000200005437f9 : jne 0x20000543804 ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000054390f : jne 0x2000054391e ; mov eax, 0xc000000d ; ret
0x000002000054e1a1 : jne 0x2000054e199 ; xor eax, eax ; ret
0x000002000054ebe0 : jne 0x2000054ebef ; mov eax, 0xc00000f0 ; ret
0x000002000054ebf6 : jne 0x2000054ec05 ; mov eax, 0xc00000f1 ; ret
0x000002000054f4e0 : jne 0x2000054f4d0 ; ret
0x0000020000551de2 : jne 0x20000551ddb ; add rsp, 0x20 ; pop rbx ; ret
0x000002000055421f : jne 0x2000055421a ; jmp 0x200005541e9
0x000002000055421e : jne 0x2000055421b ; jmp 0x200005541ea
0x0000020000556781 : jne 0x20000556746 ; jmp 0x200005567a2
0x0000020000564899 : jne 0x200005648aa ; mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x200005648b8
0x000002000056784e : jne 0x20000567813 ; jmp 0x200005678bc
0x000002000056ef3a : jne 0x2000056ef2b ; xor eax, eax ; ret
0x000002000056fb82 : jne 0x2000056fb56 ; xor eax, eax ; ret
0x0000020000572cff : jne 0x20000572d12 ; mov word ptr [rip - 0x2a74c8], ax ; ret
0x00000200005799b4 : jne 0x20000579987 ; add rsp, 0x38 ; ret
0x000002000057b947 : jne 0x2000057b950 ; mov al, 1 ; ret
0x0000020000582a2e : jne 0x200005829ca ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000058adaa : jne 0x2000058ada5 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000058be92 : jne 0x2000058be9b ; xor al, al ; ret
0x000002000058d1f0 : jne 0x2000058d1ff ; mov eax, 1 ; ret
0x000002000058dace : jne 0x2000058dabe ; mov eax, ecx ; shr eax, 0x10 ; add eax, ecx ; ret
0x000002000058dec7 : jne 0x2000058ded0 ; xor al, al ; ret
0x000002000059038f : jne 0x200005903bd ; mov rcx, rdi ; call 0x2000019c5a7
0x0000020000590622 : jne 0x2000059063b ; mov rcx, rdi ; call 0x2000019c8c7
0x0000020000596797 : jne 0x200005967a0 ; mov al, 1 ; ret
0x00000200005967e0 : jne 0x200005967ee ; mov eax, 1 ; ret
0x0000020000596a2b : jne 0x20000596a36 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059e842 : jne 0x2000059e81c ; xor eax, eax ; ret
0x00000200005a7b65 : jne 0x200005a7b4f ; mov rax, rcx ; ret
0x00000200005a923d : jne 0x200005a922d ; xor al, al ; ret
0x00000200005abad4 : jne 0x200005abaca ; add rsp, 0x28 ; ret
0x00000200005b7d9f : jne 0x200005b7daa ; call 0x20000023fb4
0x00000200005ba6fb : jne 0x200005ba70c ; sub ecx, 0x10 ; jns 0x200005ba6e7 ; ret
0x00000200005ba73b : jne 0x200005ba74c ; sub ecx, 0x10 ; jns 0x200005ba727 ; ret
0x00000200005be521 : jne 0x200005be57b ; xor al, al ; add rsp, 0x28 ; ret
0x00000200005be600 : jne 0x200005be60d ; mov r8b, 1 ; mov al, r8b ; ret
0x00000200005c1950 : jne 0x200005c193c ; mov eax, 0xc0000225 ; ret
0x00000200005cb8cc : jne 0x200005cb8d9 ; add rsp, 0x28 ; ret
0x00000200005d01b3 : jne 0x200005d01bc ; xor al, al ; ret
0x00000200005d7cc4 : jne 0x200005d7ccf ; call 0x20000023fb4
0x00000200003d8ae5 : jne 0x200005d8433 ; ret
0x00000200005db051 : jne 0x200005db06b ; call 0x200003f82a8
0x00000200004a576c : jne 0x200005de926 ; ret
0x000002000041da0e : jne 0x200005e2ea1 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200003abfbb : jne 0x200005f44e9 ; mov eax, r9d ; ret
0x000002000047e683 : jne 0x200005f762f ; ret
0x00000200005fe1c6 : jne 0x200005fe1ab ; push rsi ; ret
0x00000200006001ba : jne 0x2000060019a ; jmp 0x2000046c498
0x00000200004d4e7e : jne 0x200006014a2 ; jmp 0x200004d4e98
0x00000200004f59d9 : jne 0x20000606c04 ; mov al, 1 ; ret
0x00000200004f491a : jne 0x200006080cd ; ret
0x00000200004ade31 : jne 0x20000608102 ; ret
0x000002000038c634 : jne 0x2000060a3d6 ; ret
0x00000200003975bc : jne 0x200006223bb ; ret
0x00000200006223d4 : jne 0x200006223bd ; ret
0x00000200003964f1 : jne 0x20000625f5b ; ret
0x00000200003b306e : jne 0x20000630845 ; lea eax, dword ptr [rcx + 3] ; ret
0x00000200006321c7 : jne 0x200006321a9 ; ret
0x000002000063505f : jne 0x20000635057 ; ret
0x0000020000636e1a : jne 0x20000636e01 ; ret
0x000002000063ad56 : jne 0x2000063ad5b ; ret
0x0000020000640439 : jne 0x20000640440 ; ret
0x00000200006404b5 : jne 0x200006404c7 ; sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000064191c : jne 0x200006418f7 ; ret
0x0000020000641d2e : jne 0x20000641d1e ; xor al, al ; ret
0x0000020000641d84 : jne 0x20000641d74 ; xor al, al ; ret
0x0000020000642737 : jne 0x20000642748 ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000643924 : jne 0x2000064391c ; xor eax, eax ; ret
0x000002000064552e : jne 0x20000645537 ; xor eax, eax ; ret
0x000002000064858f : jne 0x20000648613 ; add al, 0 ; add rsp, 0x58 ; ret
0x000002000064afb3 : jne 0x2000064afbc ; xor eax, eax ; ret
0x000002000064b4f5 : jne 0x2000064b507 ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x000002000064bd6d : jne 0x2000064bda0 ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x000002000064bee8 : jne 0x2000064bed6 ; ret
0x000002000064cf11 : jne 0x2000064cf20 ; mov eax, 0xc000042a ; ret
0x000002000064cf85 : jne 0x2000064cf94 ; mov eax, 0xc000042a ; ret
0x000002000064d27d : jne 0x2000064d261 ; ret
0x000002000064d885 : jne 0x2000064d87b ; ret
0x000002000064d8c7 : jne 0x2000064d8bd ; ret
0x000002000064db44 : jne 0x2000064db40 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000064e82e : jne 0x2000064e81f ; add rsp, 0x30 ; pop rbx ; ret
0x000002000064f160 : jne 0x2000064f173 ; movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x00000200006531cd : jne 0x200006531c9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000065430a : jne 0x200006542d8 ; dec dword ptr [rax - 0x7d] ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xe77c
0x00000200006551c6 : jne 0x200006551d8 ; mov dword ptr [r8], 0x104 ; ret
0x0000020000655251 : jne 0x2000065521c ; xor eax, eax ; ret
0x0000020000655d8e : jne 0x20000655d96 ; xor eax, eax ; ret
0x000002000065662f : jne 0x20000656627 ; xor eax, eax ; ret
0x000002000065777f : jne 0x2000065778e ; mov eax, 1 ; ret
0x0000020000657f78 : jne 0x20000657f72 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006601f8 : jne 0x20000660207 ; mov eax, 0xc00000bb ; ret
0x0000020000661035 : jne 0x20000661024 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006686ab : jne 0x20000668674 ; mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000066415c : jne 0x2000066a65f ; ret
0x00000200006ba2a3 : jne 0x200006ba28f ; xor eax, eax ; ret
0x00000200006c0ed0 : jne 0x200006c0ecb ; add rsp, 0x28 ; ret
0x00000200006c0fa3 : jne 0x200006c0f73 ; and qword ptr [rip - 0x3d8fa4], rcx ; ret
0x00000200006c0fa3 : jne 0x200006c0f75 ; and qword ptr [rip - 0x3d8fa4], rcx ; ret
0x00000200006c3e2f : jne 0x200006c3dff ; ret
0x00000200006d0298 : jne 0x200006d0261 ; xor eax, eax ; ret
0x00000200006d0513 : jne 0x200006d051a ; ret
0x00000200006d11db : jne 0x200006d11d0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006d915f : jne 0x200006d9175 ; mov rdx, rsi ; mov rcx, rdi ; call r12
0x00000200006f2cb7 : jne 0x200006f2cae ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f2cb7 : jne 0x200006f2caf ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200006f3bab : jne 0x200006f3b9b ; ret
0x00000200006f43d3 : jne 0x200006f43b3 ; ret
0x0000020000703d4c : jne 0x20000703d28 ; sub r9, rax ; mov rax, r9 ; ret
0x000002000070fc02 : jne 0x2000070fbca ; call qword ptr [rax]
0x0000020000011903 : jno 0x2000001196a ; add byte ptr es:[rbx + rdi + 0x34], cl ; ret 0x840f
0x0000020000018097 : jno 0x200000180a0 ; add byte ptr [rax + 3], cl ; iretd ; jmp rcx
0x0000020000033f97 : jno 0x20000033fbc ; add byte ptr [rbp - 0x78], al ; and cl, ch ; ret 0xfffe
0x0000020000039e4b : jno 0x20000039e60 ; or byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000062c75 : jno 0x20000062cae ; shr al, cl ; ret
0x000002000007c9d5 : jno 0x2000007c9db ; add byte ptr [rax], al ; jmp rdx
0x000002000008e021 : jno 0x2000008e08d ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x000002000016c803 : jno 0x2000016c858 ; adc dword ptr [rax], eax ; call rax
0x000002000025d4a1 : jno 0x2000025d4ef ; add byte ptr [rax], ah ; jmp qword ptr [rbx]
0x00000200003fb03b : jno 0x200003fafce ; ret 0xe9ff
0x000002000041563f : jno 0x2000041567f ; ret 0xe9ff
0x0000020000427450 : jno 0x200004274cc ; adc al, ch ; adc al, 0x85 ; ret
0x0000020000461a0a : jno 0x20000461a14 ; add dh, dh ; ret
0x000002000048276b : jno 0x20000482739 ; inc dword ptr [rbx + rcx*4 + 0x5f] ; cmp byte ptr [rcx - 0xa], al ; ret
0x00000200004e8291 : jno 0x200004e829d ; ret
0x00000200004f5247 : jno 0x200004f527d ; ret 0x45ff
0x000002000051dceb : jno 0x2000051dcca ; ret 0x85ff
0x00000200005c0008 : jno 0x200005bffba ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005e2d66 : jno 0x200005e2d4c ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ff5b7 : jno 0x200005ff56a ; inc dword ptr [rbx + rcx*4 + 5] ; ret
0x00000200005ff5b6 : jno 0x200005ff56b ; inc dword ptr [rbx + rcx*4 + 5] ; ret
0x0000020000604df1 : jno 0x20000604de4 ; push rsi ; ret
0x000002000061fda3 : jno 0x2000061fd70 ; push rsi ; ret
0x000002000063309b : jno 0x2000063305e ; ret
0x0000020000651cd6 : jno 0x20000651cde ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200006653bb : jno 0x2000066534a ; ret 0x48ff
0x0000020000665abb : jno 0x20000665a43 ; ret 0x48ff
0x000002000066a5a7 : jno 0x2000066a5e4 ; ret 0x48ff
0x00000200006c0095 : jno 0x200006c0037 ; dec dword ptr [rax - 0x75] ; ret
0x00000200006f6203 : jno 0x200006f61e9 ; mov ecx, 0xc48348ff ; pop rbx ; ret
0x0000020000016884 : jnp 0x200000168b4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000001b6fa : jnp 0x2000001b72b ; mov rsp, r11 ; pop r14 ; ret
0x000002000003427b : jnp 0x200000342a3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000035575 : jnp 0x2000003559e ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000037c99 : jnp 0x20000037cc1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000003c640 : jnp 0x2000003c690 ; add esp, 0x30 ; pop rbx ; ret
0x000002000004a6e3 : jnp 0x2000004a707 ; add byte ptr [rax - 0x75], cl ; push rbp ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000005c859 : jnp 0x2000005c88a ; mov rsp, r11 ; pop r14 ; ret
0x0000020000062c9c : jnp 0x20000062ccc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000064ad3 : jnp 0x20000064b04 ; mov rsp, r11 ; pop r14 ; ret
0x000002000006865f : jnp 0x20000068688 ; mov rsp, r11 ; pop r14 ; ret
0x000002000008df00 : jnp 0x2000008df7b ; add cl, bh ; jp 0x2000008df0b ; ret 0x4adb
0x00000200000e0827 : jnp 0x200000e0836 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000e084e : jnp 0x200000e0865 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000101a26 : jnp 0x20000101a4e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000106b37 : jnp 0x20000106b68 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000107b1b : jnp 0x20000107b4c ; mov rsp, r11 ; pop r14 ; ret
0x00000200001098c0 : jnp 0x200001098e8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010a1ae : jnp 0x2000010a1ce ; mov rsp, r11 ; pop rbp ; ret
0x000002000010a2b1 : jnp 0x2000010a2d9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010aa29 : jnp 0x2000010aa51 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010abd9 : jnp 0x2000010ac01 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000116f0f : jnp 0x20000116f40 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001183a9 : jnp 0x2000011836d ; or eax, dword ptr [rax] ; xor al, al ; ret
0x0000020000118d61 : jnp 0x20000118d81 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011b888 : jnp 0x2000011b8b8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011be33 : jnp 0x2000011be5b ; mov rsp, r11 ; pop rbp ; ret
0x000002000011bf67 : jnp 0x2000011bf8f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000126b5f : jnp 0x20000126b90 ; mov rsp, r11 ; pop r14 ; ret
0x000002000012aca8 : jnp 0x2000012acd9 ; mov rsp, r11 ; pop r15 ; ret
0x000002000012bd7b : jnp 0x2000012bdab ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ccf1 : jnp 0x2000013cd58 ; idiv bh ; cli ; add rsp, 8 ; ret
0x000002000013e5c0 : jnp 0x2000013e5f0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000140429 : jnp 0x20000140449 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000143d67 : jnp 0x20000143d8f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000147594 : jnp 0x200001475c5 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000150d76 : jnp 0x20000150da6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001700ce : jnp 0x200001700fe ; mov rsp, r11 ; pop rbp ; ret
0x0000020000171f74 : jnp 0x20000171fa4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000176344 : jnp 0x20000176374 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000186937 : jnp 0x2000018695f ; mov rsp, r11 ; pop rbp ; ret
0x00000200001890af : jnp 0x200001890df ; mov rsp, r11 ; pop rbp ; ret
0x0000020000190b60 : jnp 0x20000190b91 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000194fb7 : jnp 0x20000194fe7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001956b1 : jnp 0x200001956e1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001957fa : jnp 0x2000019582a ; mov rsp, r11 ; pop rbp ; ret
0x00000200001971b7 : jnp 0x200001971e7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001a37ee : jnp 0x200001a381f ; mov rsp, r11 ; pop r14 ; ret
0x00000200001b9206 : jnp 0x200001b9236 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c156a : jnp 0x200001c1592 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c936c : jnp 0x200001c9366 ; dec dword ptr [rax + 0x3b] ; ret 0x876
0x00000200001c9379 : jnp 0x200001c9373 ; dec dword ptr [rbp - 0x75] ; ret 0x60e9
0x00000200001d6a66 : jnp 0x200001d6a7e ; add byte ptr [rdi], cl ; test byte ptr [rbx], dh ; ret
0x00000200001d8824 : jnp 0x200001d8815 ; inc dword ptr [rax + rdi - 0x6d] ; ret
0x00000200001d8823 : jnp 0x200001d8816 ; inc dword ptr [rax + rdi - 0x6d] ; ret
0x000002000035f1f8 : jnp 0x2000035f1f0 ; inc dword ptr [rcx - 1] ; ret
0x0000020000362594 : jnp 0x2000036258d ; inc dword ptr [rcx - 0xa] ; ret
0x00000200003625e8 : jnp 0x200003625e1 ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000362d70 : jnp 0x20000362da1 ; mov rsp, r11 ; pop r14 ; ret
0x000002000036632d : jnp 0x2000036635d ; mov rsp, r11 ; pop rbp ; ret
0x000002000036f536 : jnp 0x2000036f566 ; mov rsp, r11 ; pop rbp ; ret
0x000002000037810b : jnp 0x2000037813c ; mov rsp, r11 ; pop r14 ; ret
0x000002000037ddbd : jnp 0x2000037dde6 ; mov rsp, r11 ; pop r14 ; ret
0x000002000037f6eb : jnp 0x2000037f71c ; mov rsp, r11 ; pop r14 ; ret
0x0000020000383e42 : jnp 0x20000383e73 ; mov rsp, r11 ; pop r14 ; ret
0x000002000038674f : jnp 0x2000038677f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000386957 : jnp 0x20000386987 ; mov rsp, r11 ; pop rbp ; ret
0x000002000038cdeb : jnp 0x2000038cdf7 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x000002000038d079 : jnp 0x2000038d0a1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003922e8 : jnp 0x20000392311 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000398641 : jnp 0x20000398669 ; mov rsp, r11 ; pop rbp ; ret
0x000002000039a00e : jnp 0x2000039a03f ; mov rsp, r11 ; pop r14 ; ret
0x00000200003a8cae : jnp 0x200003a8cde ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b0072 : jnp 0x200003b009a ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b5e34 : jnp 0x200003b5e65 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003d6c79 : jnp 0x200003d6caa ; mov rsp, r11 ; pop r14 ; ret
0x00000200003d9fcb : jnp 0x200003d9ffb ; mov rsp, r11 ; pop rbp ; ret
0x00000200004085bb : jnp 0x200004085ec ; mov rsp, r11 ; pop r14 ; ret
0x0000020000409781 : jnp 0x20000409761 ; hlt ; dec dword ptr [rax + 0x3b] ; ret
0x000002000040f4ea : jnp 0x2000040f513 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000416704 : jnp 0x2000041672c ; mov rsp, r11 ; pop rbp ; ret
0x000002000041874d : jnp 0x2000041877e ; mov rsp, r11 ; pop r14 ; ret
0x0000020000419ec9 : jnp 0x20000419e92 ; ret
0x000002000041a51f : jnp 0x2000041a548 ; mov rsp, r11 ; pop r14 ; ret
0x000002000042c3c0 : jnp 0x2000042c3e9 ; mov rsp, r11 ; pop r14 ; ret
0x000002000043bbc1 : jnp 0x2000043bc37 ; ret
0x000002000043e449 : jnp 0x2000043e44a ; ret 0x823c
0x000002000043e448 : jnp 0x2000043e44b ; ret 0x823c
0x000002000043e447 : jnp 0x2000043e44c ; ret 0x823c
0x0000020000461805 : jnp 0x20000461865 ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000467b39 : jnp 0x20000467b21 ; dec dword ptr [rax + 3] ; ret 0x8948
0x000002000046e24d : jnp 0x2000046e276 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004729a1 : jnp 0x200004729d2 ; mov rsp, r11 ; pop r14 ; ret
0x000002000047700a : jnp 0x2000047703b ; mov rsp, r11 ; pop r14 ; ret
0x000002000047d1b1 : jnp 0x2000047d1da ; mov rsp, r11 ; pop r14 ; ret
0x000002000047e669 : jnp 0x2000047e689 ; mov rsp, r11 ; pop rbp ; ret
0x000002000047e981 : jnp 0x2000047e936 ; ret
0x00000200004838e1 : jnp 0x20000483942 ; ret
0x0000020000485558 : jnp 0x20000485589 ; mov rsp, r11 ; pop r14 ; ret
0x000002000048cff1 : jnp 0x2000048d017 ; ret
0x0000020000498811 : jnp 0x20000498841 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004995d2 : jnp 0x200004995fa ; mov rsp, r11 ; pop rbp ; ret
0x000002000049a2cb : jnp 0x2000049a2f3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049a726 : jnp 0x2000049a756 ; mov rsp, r11 ; pop rbp ; ret
0x000002000049c53b : jnp 0x2000049c56b ; mov rsp, r11 ; pop rbp ; ret
0x000002000049e3e2 : jnp 0x2000049e412 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab1d7 : jnp 0x200004ab1ff ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab272 : jnp 0x200004ab29a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab338 : jnp 0x200004ab368 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ada36 : jnp 0x200004ada5e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004aebf2 : jnp 0x200004aec23 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004b1cfa : jnp 0x200004b1cea ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200004b24c9 : jnp 0x200004b24f1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b342e : jnp 0x200004b345e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b3a06 : jnp 0x200004b3a37 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004b55cb : jnp 0x200004b55fb ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c74f4 : jnp 0x200004c754c ; jmp 0x200004c7502
0x00000200004dbe7f : jnp 0x200004dbe9f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e3c07 : jnp 0x200004e3c27 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e4e2a : jnp 0x200004e4e4a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e87e0 : jnp 0x200004e8810 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ea1b8 : jnp 0x200004ea1e9 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004eec61 : jnp 0x200004eec91 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f53fe : jnp 0x200004f542e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f57d1 : jnp 0x200004f5801 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f8c92 : jnp 0x200004f8cb2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fac1f : jnp 0x200004fac28 ; test byte ptr [rcx + 0xf], al ; ret
0x00000200004fe8b1 : jnp 0x200004fe8e2 ; mov rsp, r11 ; pop r14 ; ret
0x000002000050072c : jnp 0x2000050075c ; mov rsp, r11 ; pop rbp ; ret
0x000002000050096e : jnp 0x2000050099e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000504b18 : jnp 0x20000504b40 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050aaba : jnp 0x2000050aada ; mov rsp, r11 ; pop rbp ; ret
0x0000020000517e43 : jnp 0x20000517e73 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000519194 : jnp 0x200005191b4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005194e7 : jnp 0x20000519517 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a624 : jnp 0x2000051a64c ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b091 : jnp 0x2000051b0b9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b215 : jnp 0x2000051b23d ; mov rsp, r11 ; pop rbp ; ret
0x000002000051cfb7 : jnp 0x2000051cfe7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051d580 : jnp 0x2000051d5a8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005219c4 : jnp 0x200005219e4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052a618 : jnp 0x2000052a640 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000534f52 : jnp 0x20000534f82 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000541286 : jnp 0x200005412af ; mov rsp, r11 ; pop r14 ; ret
0x0000020000542d73 : jnp 0x20000542d93 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054585c : jnp 0x2000054588c ; mov rsp, r11 ; pop rbp ; ret
0x000002000054962d : jnp 0x20000549655 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054adc0 : jnp 0x2000054adf0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054d699 : jnp 0x2000054d6ca ; mov rsp, r11 ; pop r15 ; ret
0x000002000054d770 : jnp 0x2000054d798 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054f977 : jnp 0x2000054f9a7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000552ef5 : jnp 0x20000552f25 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055edcd : jnp 0x2000055eded ; mov rsp, r11 ; pop rbp ; ret
0x00000200005624ea : jnp 0x20000562513 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000563e0b : jnp 0x20000563e3b ; mov rsp, r11 ; pop rbp ; ret
0x000002000056452c : jnp 0x20000564555 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000564925 : jnp 0x2000056494d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564a1c : jnp 0x20000564a4c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000566f7a : jnp 0x20000566fa2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000567a46 : jnp 0x20000567a6e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000573212 : jnp 0x200005731ee ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200005767cf : jnp 0x200005767f8 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000577b45 : jnp 0x20000577b66 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000580116 : jnp 0x20000580146 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000580319 : jnp 0x20000580349 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000581880 : jnp 0x200005818b0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005865d8 : jnp 0x20000586601 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000586bb2 : jnp 0x20000586be3 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005883d6 : jnp 0x20000588406 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000592bf5 : jnp 0x20000592c26 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005935ed : jnp 0x2000059360d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000593ec1 : jnp 0x20000593ee9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059860b : jnp 0x20000598633 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059b332 : jnp 0x2000059b352 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059e94d : jnp 0x2000059e97d ; mov rsp, r11 ; pop rbp ; ret
0x000002000059f953 : jnp 0x2000059f97b ; mov rsp, r11 ; pop rbp ; ret
0x00000200005a6417 : jnp 0x200005a6447 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005a8c12 : jnp 0x200005a8c42 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ad506 : jnp 0x200005ad52e ; mov rsp, r11 ; pop rbp ; ret
0x00000200005aecdf : jnp 0x200005aed0f ; mov rsp, r11 ; pop rbp ; ret
0x00000200005af26a : jnp 0x200005af21e ; dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x00000200005b9c64 : jnp 0x200005b9c94 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bb264 : jnp 0x200005bb294 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bbdd6 : jnp 0x200005bbe06 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bf8cc : jnp 0x200005bf8f4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c1545 : jnp 0x200005c1575 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c2aa5 : jnp 0x200005c2ac5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005c6d84 : jnp 0x200005c6db5 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005c6e8d : jnp 0x200005c6ebe ; mov rsp, r11 ; pop r14 ; ret
0x00000200005c7109 : jnp 0x200005c713a ; mov rsp, r11 ; pop r14 ; ret
0x00000200005c7cba : jnp 0x200005c7caa ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200005d034b : jnp 0x200005d037c ; mov rsp, r11 ; pop r15 ; ret
0x000002000060b1de : jnp 0x2000060b1c4 ; push rsi ; ret
0x00000200006342f8 : jnp 0x20000634328 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000634c7e : jnp 0x20000634caf ; mov rsp, r11 ; pop r14 ; ret
0x000002000065160d : jnp 0x200006515bc ; jmp qword ptr [rsi - 0x77]
0x0000020000654309 : jnp 0x20000654382 ; ret
0x00000200006684f7 : jnp 0x200006684c0 ; inc dword ptr [rcx - 0xa] ; ret
0x00000200006bab58 : jnp 0x200006bab78 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bb8ae : jnp 0x200006bb8d6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bbd56 : jnp 0x200006bbd86 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bdb6c : jnp 0x200006bdb94 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c2629 : jnp 0x200006c265a ; mov rsp, r11 ; pop r14 ; ret
0x00000200006c4ebc : jnp 0x200006c4ee4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c5827 : jnp 0x200006c5847 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ca8f2 : jnp 0x200006ca91a ; mov rsp, r11 ; pop rbp ; ret
0x00000200006cab40 : jnp 0x200006cab62 ; xor eax, eax ; mov rsp, r11 ; pop rbp ; ret
0x00000200006eb5cb : jnp 0x200006eb5fb ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ebc8a : jnp 0x200006ebcaa ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f3deb : jnp 0x200006f3e0b ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f5d1b : jnp 0x200006f5d4b ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f7fa8 : jnp 0x200006f7fd0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ff183 : jnp 0x200006ff1a3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000703cfe : jnp 0x20000703d26 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000011b56 : jns 0x20000011b5b ; ret
0x0000020000012a21 : jns 0x20000012a4c ; adc byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000019a82 : jns 0x20000019a87 ; ret
0x000002000003d4df : jns 0x2000003d4e4 ; ret
0x000002000004d3a1 : jns 0x2000004d3b3 ; add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x000002000005658b : jns 0x2000005659d ; xor byte ptr [rax], al ; dec eax ; ret
0x0000020000078901 : jns 0x2000007893c ; add rsp, 0x138 ; ret
0x0000020000079058 : jns 0x20000079093 ; add rsp, 0x138 ; ret
0x000002000007a6d1 : jns 0x2000007a70c ; add rsp, 0x138 ; ret
0x000002000007b2c3 : jns 0x2000007b2cd ; add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x00000200000841b2 : jns 0x20000084160 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x0000020000084af3 : jns 0x20000084afc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x0000020000084af2 : jns 0x20000084afd ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x00000200000907f1 : jns 0x200000907bb ; ret 0xb0be
0x00000200000a295c : jns 0x200000a2997 ; add rsp, 0x138 ; ret
0x00000200000a2b6e : jns 0x200000a2ba9 ; add rsp, 0x138 ; ret
0x00000200000c6e23 : jns 0x200000c6e29 ; ror dword ptr [rax - 1], -0x3e ; jmp 0x200000c6e0e
0x00000200000d8a4f : jns 0x200000d8a54 ; ret
0x00000200000d8a4f : jns 0x200000d8a57 ; ret
0x00000200000dddc6 : jns 0x200000dde01 ; add rsp, 0x138 ; ret
0x00000200000de8ac : jns 0x200000de8b1 ; ret
0x00000200001018d2 : jns 0x200001018fc ; add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x000002000013f483 : jns 0x2000013f48e ; or eax, 0xffffffff ; ret
0x0000020000144c75 : jns 0x20000144c80 ; mov r8d, r10d ; jmp 0x20000144c3d
0x000002000014ee95 : jns 0x2000014eeae ; insd dword ptr [rdi], dx ; je 0x2000014eea4 ; xor eax, eax ; ret
0x000002000015484c : jns 0x20000154857 ; or eax, 0xffffffff ; ret
0x000002000016a575 : jns 0x2000016a583 ; and qword ptr [rcx + 0x70], 0 ; ret
0x0000020000172496 : jns 0x200001724a5 ; mov eax, 0xc0000022 ; ret
0x000002000017506a : jns 0x2000017505f ; or eax, 0xffffffff ; ret
0x000002000019c09a : jns 0x2000019c08f ; mov eax, edx ; ret
0x000002000019c09a : jns 0x2000019c090 ; mov eax, edx ; ret
0x00000200001b78b5 : jns 0x200001b78ae ; inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x00000200001e8119 : jns 0x200001e8125 ; add dword ptr [rdi], ecx ; test ebp, eax ; ret
0x00000200001e9595 : jns 0x200001e957f ; call qword ptr [rax - 0x113d2f17]
0x0000020000223791 : jns 0x200002237a9 ; add byte ptr [rax], dl ; or byte ptr [rsi], 0 ; pop rax ; jmp qword ptr [rax]
0x000002000035d0a3 : jns 0x2000035d03b ; clc ; push rsi ; ret
0x0000020000365395 : jns 0x200003653c1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000002000036f5fe : jns 0x2000036f5f5 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000037f713 : jns 0x2000037f722 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000383129 : jns 0x2000038312f ; add al, al ; ret
0x0000020000385749 : jns 0x20000385752 ; inc dword ptr [rcx - 0x76] ; fld qword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x0000020000386b63 : jns 0x20000386bc2 ; hlt ; push rsi ; ret 0xf02
0x0000020000391bb3 : jns 0x20000391bb9 ; add al, al ; ret
0x00000200003b0131 : jns 0x200003b0137 ; add al, al ; ret
0x00000200003e5933 : jns 0x200003e591d ; ret
0x00000200003fda52 : jns 0x200003fda58 ; add al, al ; ret
0x0000020000432ecf : jns 0x20000432e32 ; jmp 0x20000432ea1
0x0000020000448fc7 : jns 0x20000448fd2 ; call 0x20000072e45
0x00000200004653d3 : jns 0x200004653bc ; ret
0x0000020000466b4c : jns 0x20000466ba0 ; add byte ptr [rbp - 0x3f], dh ; ret
0x0000020000484344 : jns 0x20000484351 ; add rsp, 0x28 ; ret
0x000002000048d5f3 : jns 0x2000048d613 ; ret
0x0000020000491563 : jns 0x20000491554 ; mov eax, 0xc000000e ; ret
0x00000200004a4330 : jns 0x200004a433a ; dec byte ptr [rax - 0x7d] ; ret
0x00000200004b37db : jns 0x200004b3835 ; fdivp st(7) ; test rax, rax ; je 0x200004b37ef ; call rax
0x000002000052f199 : jns 0x2000052f17e ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200005ba700 : jns 0x200005ba6e2 ; ret
0x00000200005ba740 : jns 0x200005ba722 ; ret
0x00000200005ba788 : jns 0x200005ba76f ; mov eax, 1 ; ret
0x00000200005cfad6 : jns 0x200005cfae0 ; add dh, byte ptr [rcx + rcx - 0xa] ; ret 0xf02
0x000002000060d0ad : jns 0x2000060d09e ; mov ebp, 0x8bffa65c ; ret
0x000002000062f093 : jns 0x2000062f096 ; ret
0x00000200006c7351 : jns 0x200006c738a ; mov rcx, rdi ; call 0x200000635b3
0x0000020000002fed : jo 0x20000002ff3 ; add byte ptr [rax], al ; call rax
0x000002000000bebe : jo 0x2000000bed5 ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x000002000000bebd : jo 0x2000000bed6 ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000013edd : jo 0x20000013f2a ; mov ecx, esp ; call 0x2000010010a
0x000002000001d4bc : jo 0x2000001d521 ; pop rsi ; pop rbp ; ret
0x0000020000022019 : jo 0x2000002206a ; add esp, 0x50 ; pop r14 ; ret
0x00000200000257db : jo 0x2000002576a ; ret
0x0000020000037e42 : jo 0x20000037e93 ; add esp, 0x50 ; pop r14 ; ret
0x000002000003e1eb : jo 0x2000003e23b ; add esp, 0x50 ; pop rdi ; ret
0x000002000004bb9e : jo 0x2000004bbee ; add esp, 0x50 ; pop rdi ; ret
0x000002000004c8d3 : jo 0x2000004c8e7 ; xchg eax, esp ; ret 0x8948
0x000002000004c8d2 : jo 0x2000004c8e8 ; xchg eax, esp ; ret 0x8948
0x000002000004d631 : jo 0x2000004d5c1 ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x000002000004fdbb : jo 0x2000004fe0b ; add esp, 0x60 ; pop rdi ; ret
0x00000200000505ee : jo 0x20000050639 ; pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000054ac4 : jo 0x20000054b16 ; mov eax, ecx ; add rsp, 0x68 ; ret
0x00000200000644a7 : jo 0x200000644f1 ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000069a20 : jo 0x200000699af ; ret
0x0000020000071067 : jo 0x200000710cc ; pop rsi ; pop rbp ; ret
0x0000020000074d64 : jo 0x20000074cf3 ; sub eax, 0xfb11ff00 ; ret
0x000002000007c5a1 : jo 0x2000007c5bb ; add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x000002000008e2cf : jo 0x2000008e33b ; mov ch, 0x6e ; ret
0x000002000008e2ce : jo 0x2000008e33c ; mov ch, 0x6e ; ret
0x000002000009078b : jo 0x20000090806 ; ret 0x20cc
0x000002000009102d : jo 0x20000091099 ; pop rsp ; ret 0x2db0
0x00000200000a748f : jo 0x200000a7492 ; ret 0xf40
0x00000200000aa06e : jo 0x200000aa0cf ; ret
0x00000200000af43d : jo 0x200000af444 ; lldt ax ; ret
0x00000200000b28a6 : jo 0x200000b2908 ; ret
0x00000200000b2959 : jo 0x200000b29bb ; ret
0x00000200000b2967 : jo 0x200000b29c9 ; ret
0x00000200000cc3bf : jo 0x200000cc34e ; ret
0x00000200000d5b6c : jo 0x200000d5be7 ; add al, 0x49 ; mov dword ptr [rax], eax ; ret
0x00000200000d5b6b : jo 0x200000d5be8 ; add al, 0x49 ; mov dword ptr [rax], eax ; ret
0x00000200000d635a : jo 0x200000d63ac ; add esp, 0x58 ; pop r13 ; pop rsi ; ret
0x00000200000d6664 : jo 0x200000d6651 ; ret
0x00000200000d8649 : jo 0x200000d865a ; add dword ptr [rcx + rcx*4 + 0x33], ecx ; jmp 0x200000d861b
0x00000200000e7822 : jo 0x200000e7830 ; add al, al ; je 0x200000e7833 ; mov al, 1 ; ret
0x00000200000e9070 : jo 0x200000e8fff ; ret
0x00000200000ee232 : jo 0x200000ee221 ; ret 0x8b44
0x00000200000ef28d : jo 0x200000ef2d8 ; pop rdi ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000f23bd : jo 0x200000f2422 ; pop rsi ; pop rbp ; ret
0x00000200000fa441 : jo 0x200000fa48d ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000fb0ae : jo 0x200000fb0fe ; add esp, 0x60 ; pop rdi ; ret
0x00000200001020c8 : jo 0x2000010211a ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001060e7 : jo 0x200001060ef ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000010cfbf : jo 0x2000010d020 ; ret
0x000002000010dbcb : jo 0x2000010db5b ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x000002000010ff5b : jo 0x2000010ffad ; mov eax, ecx ; add rsp, 0x68 ; ret
0x0000020000114fed : jo 0x2000011503d ; add esp, 0x60 ; pop rdi ; ret
0x000002000011532a : jo 0x20000115389 ; ret
0x0000020000117813 : jo 0x20000117876 ; ret
0x0000020000124126 : jo 0x200001240b4 ; ret
0x0000020000136ea3 : jo 0x20000136ef3 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000138d47 : jo 0x20000138d8d ; pop rsi ; ret
0x0000020000141cd1 : jo 0x20000141d32 ; ret
0x0000020000149dd1 : jo 0x20000149e21 ; add esp, 0x60 ; pop rdi ; ret
0x000002000014afda : jo 0x2000014b03b ; ret
0x000002000014b84c : jo 0x2000014b8ad ; ret
0x000002000014d74d : jo 0x2000014d79d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000154405 : jo 0x20000154455 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000158c48 : jo 0x20000158bd7 ; ret 0x8b49
0x000002000015ab8c : jo 0x2000015abed ; ret
0x0000020000165535 : jo 0x20000165596 ; ret
0x0000020000166ace : jo 0x20000166b1f ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000169921 : jo 0x20000169971 ; add esp, 0x50 ; pop rsi ; ret
0x000002000016a57a : jo 0x2000016a57e ; ret
0x000002000016b97e : jo 0x2000016b9df ; ret
0x000002000016ed23 : jo 0x2000016ed84 ; ret
0x0000020000172098 : jo 0x200001720f9 ; ret
0x0000020000175311 : jo 0x2000017530b ; ret
0x0000020000178b9b : jo 0x20000178bfc ; ret
0x000002000017ab24 : jo 0x2000017ab85 ; ret
0x000002000017b4d4 : jo 0x2000017b535 ; ret
0x000002000017b979 : jo 0x2000017b908 ; ret
0x0000020000182664 : jo 0x200001826c5 ; ret
0x00000200001843f7 : jo 0x20000184449 ; mov eax, ecx ; add rsp, 0x58 ; ret
0x0000020000188081 : jo 0x200001880d1 ; add esp, 0x50 ; pop rdi ; ret
0x000002000018fbf9 : jo 0x2000018fc4c ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000192aa3 : jo 0x20000192a32 ; ret
0x000002000019344f : jo 0x200001934a1 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001946ae : jo 0x2000019470f ; ret
0x00000200001948a7 : jo 0x2000019490c ; pop rsi ; pop rbp ; ret
0x0000020000194d5b : jo 0x20000194dbc ; ret
0x0000020000194e27 : jo 0x20000194e88 ; ret
0x0000020000194ee7 : jo 0x20000194f48 ; ret
0x000002000019543d : jo 0x2000019549e ; ret
0x00000200001967dc : jo 0x20000196827 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001976f2 : jo 0x20000197742 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001a2a9c : jo 0x200001a2afb ; ret
0x00000200001a2b29 : jo 0x200001a2b8a ; ret
0x00000200001a2db9 : jo 0x200001a2e1a ; ret
0x00000200001a336e : jo 0x200001a33be ; add esp, 0x50 ; pop rdi ; ret
0x00000200001a3b9c : jo 0x200001a3b5a ; or al, 0 ; add rsp, 0x28 ; ret
0x00000200001a41be : jo 0x200001a4221 ; ret
0x00000200001a5c50 : jo 0x200001a5c9f ; mov ecx, edi ; call r9
0x00000200001a5c92 : jo 0x200001a5ccb ; leave ; call r9
0x00000200001b18d0 : jo 0x200001b18bd ; push rsi ; ret 0xffff
0x00000200001b5f31 : jo 0x200001b5f81 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001b5f30 : jo 0x200001b5f82 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001b966f : jo 0x200001b96be ; add esp, 0x38 ; ret
0x00000200001bacd6 : jo 0x200001bad26 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001bc334 : jo 0x200001bc384 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001bf23a : jo 0x200001bf1c9 ; ret
0x00000200001bfcb0 : jo 0x200001bfc3e ; ret
0x00000200001c18a6 : jo 0x200001c1909 ; ret
0x00000200001c25b7 : jo 0x200001c2607 ; add esp, 0x50 ; pop rbp ; ret
0x00000200001c26b0 : jo 0x200001c2713 ; ret
0x00000200001c407a : jo 0x200001c4001 ; ret
0x00000200001ca207 : jo 0x200001ca1f5 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200002128c7 : jo 0x200002128d3 ; clts ; add byte ptr [rdi], cl ; or al, 0 ; sysenter
0x000002000021ebfb : jo 0x2000021ec08 ; invd ; add byte ptr [rsi + rax], al ; or al, 6 ; sysenter
0x00000200002282d8 : jo 0x200002282ef ; adc dword ptr [rax], eax ; ret
0x000002000022c637 : jo 0x2000022c644 ; invd ; add byte ptr [rsi + rax], al ; adc dword ptr [rsi], eax ; sysenter
0x0000020000240b13 : jo 0x20000240b1f ; clts ; add byte ptr [rdi], cl ; or dword ptr fs:[rax], eax ; sysenter
0x000002000024615f : jo 0x2000024616b ; clts ; add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x0000020000248a63 : jo 0x20000248a6f ; clts ; add byte ptr [rdi], cl ; push rsp ; or byte ptr [rax], al ; sysenter
0x0000020000249a4b : jo 0x20000249a58 ; invd ; add byte ptr [rsi + rax], al ; sbb dword ptr [rsi], eax ; sysenter
0x000002000025d49d : jo 0x2000025d4ef ; add byte ptr [rcx + rsi*2], ah ; add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x000002000035fafa : jo 0x2000035fb12 ; add dword ptr [rax], eax ; ret
0x0000020000361336 : jo 0x20000361397 ; ret
0x00000200003614eb : jo 0x2000036154c ; ret
0x0000020000362a8f : jo 0x20000362a88 ; dec dword ptr [rdi] ; ret 0x4589
0x0000020000363223 : jo 0x20000363273 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003642fd : jo 0x2000036434d ; add esp, 0x50 ; pop rdi ; ret
0x000002000036b879 : jo 0x2000036b8dc ; ret
0x0000020000372378 : jo 0x200003723cb ; test eax, eax ; je 0x20000372398 ; mov rcx, r15 ; call rax
0x000002000037bdcf : jo 0x2000037bd5e ; ret 0x8b48
0x000002000037f958 : jo 0x2000037f9bb ; ret
0x0000020000382056 : jo 0x20000381fe5 ; ret
0x00000200003857fd : jo 0x20000385788 ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000002000038694e : jo 0x200003868dd ; ret
0x0000020000387e61 : jo 0x20000387df0 ; ret
0x0000020000388742 : jo 0x20000388747 ; insb byte ptr [rdi], dx ; ret
0x000002000038bc66 : jo 0x2000038bbf5 ; ret
0x000002000038c771 : jo 0x2000038c7d2 ; ret
0x000002000038c831 : jo 0x2000038c892 ; ret
0x000002000038c9c5 : jo 0x2000038c9d2 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x2000038c998
0x000002000038ca87 : jo 0x2000038cad8 ; add esp, 0x50 ; pop r14 ; ret
0x000002000038df8d : jo 0x2000038df59 ; add byte ptr [r9 - 0x7b], al ; ret 0x18e9
0x000002000038df3f : jo 0x2000038df91 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000399d29 : jo 0x20000399d7c ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000039ae74 : jo 0x2000039aec5 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003a63c0 : jo 0x200003a63cb ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003aa256 : jo 0x200003aa2b5 ; ret
0x00000200003aa6a6 : jo 0x200003aa635 ; ret
0x00000200003abf81 : jo 0x200003abfd2 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003ac788 : jo 0x200003ac7d8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003ad494 : jo 0x200003ad423 ; ret
0x00000200003ae027 : jo 0x200003ae04a ; adc byte ptr [rax - 0x7d], cl ; call 0x1ffc376285a
0x00000200003b2067 : jo 0x200003b1ff6 ; ret
0x00000200003b4494 : jo 0x200003b4423 ; ret
0x00000200003b5969 : jo 0x200003b58f8 ; ret
0x00000200003bde8b : jo 0x200003bdea3 ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x00000200003c0235 : jo 0x200003c0285 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c05de : jo 0x200003c062e ; add esp, 0x50 ; pop rdi ; ret
0x00000200003c081a : jo 0x200003c0868 ; mov ecx, ebp ; call rsi
0x00000200003c08ce : jo 0x200003c0921 ; lea ecx, dword ptr [rsi - 0x458] ; call r15
0x00000200003c285a : jo 0x200003c27e9 ; ret
0x00000200003c30c4 : jo 0x200003c310e ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003c30c4 : jo 0x200003c3110 ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003c557c : jo 0x200003c550b ; ret
0x00000200003cb5e1 : jo 0x200003cb631 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003d8b90 : jo 0x200003d8be0 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003d8b8f : jo 0x200003d8be1 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003db36c : jo 0x200003db335 ; or byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200003f0d93 : jo 0x200003f0ddb ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003f8275 : jo 0x200003f82c5 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003f8f1a : jo 0x200003f8f26 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003fbf44 : jo 0x200003fbf94 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003fffbd : jo 0x2000040000f ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004062bf : jo 0x20000406322 ; ret
0x000002000040661a : jo 0x2000040666d ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000040d021 : jo 0x2000040cfb0 ; ret
0x000002000041113c : jo 0x20000411129 ; sahf ; ret 0xfffc
0x0000020000413437 : jo 0x2000041349a ; ret
0x0000020000417622 : jo 0x200004175e6 ; add r11b, al ; mov al, 6 ; ret
0x0000020000419ac9 : jo 0x20000419a58 ; ret
0x000002000041b575 : jo 0x2000041b5d6 ; ret
0x0000020000420312 : jo 0x20000420339 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000422f74 : jo 0x20000422fc4 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000424ee9 : jo 0x20000424f34 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000427e8e : jo 0x20000427e1d ; ret
0x000002000042d434 : jo 0x2000042d422 ; jb 0x2000042d49d ; ret
0x000002000042eefc : jo 0x2000042ef3b ; ret
0x0000020000437f1f : jo 0x20000437edb ; add dword ptr [rax - 0x7cafdbac], ecx ; jmp qword ptr [rax]
0x000002000043bfef : jo 0x2000043c01e ; ret
0x000002000045a55a : jo 0x2000045a5aa ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000045a559 : jo 0x2000045a5ab ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000045b427 : jo 0x2000045b3b0 ; ret 0x2e75
0x0000020000464c97 : jo 0x20000464ce2 ; pop rdi ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000464d60 : jo 0x20000464dab ; pop rdi ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000046982f : jo 0x20000469829 ; ret 0x7520
0x0000020000471039 : jo 0x20000471089 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000476cc9 : jo 0x20000476d17 ; lea eax, dword ptr [rdx + 0x20] ; call 0x200000a3958
0x00000200004773e8 : jo 0x2000047743a ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000478f5e : jo 0x20000478fb0 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000479b2a : jo 0x20000479b7c ; mov ebp, ecx ; call 0x200000a3957
0x0000020000479b29 : jo 0x20000479b7d ; mov ebp, ecx ; call 0x200000a3958
0x0000020000479ccf : jo 0x20000479d2e ; ret
0x000002000047c038 : jo 0x2000047bfc6 ; ret
0x000002000047dad9 : jo 0x2000047db29 ; add esp, 0x60 ; pop rdi ; ret
0x000002000047e2dc : jo 0x2000047e34b ; ret 0x4cff
0x00000200004804e6 : jo 0x20000480475 ; ret
0x0000020000482855 : jo 0x20000482823 ; inc dword ptr [rbx + rcx*4 + 0x5f] ; cmp byte ptr [rcx - 0xa], al ; ret
0x0000020000484405 : jo 0x20000484455 ; mov dword ptr [rsp + 0x20], eax ; call rsi
0x0000020000485449 : jo 0x20000485480 ; add byte ptr [rbp + 1], dh ; ret
0x0000020000485475 : jo 0x200004854ac ; add byte ptr [rbp + 1], dh ; ret
0x000002000048769c : jo 0x2000048762b ; ret
0x00000200004877c0 : jo 0x2000048774f ; ret
0x0000020000487ee5 : jo 0x20000487e74 ; ret
0x000002000048819e : jo 0x2000048812d ; ret
0x0000020000488c6e : jo 0x20000488cd1 ; ret
0x000002000048bcf8 : jo 0x2000048bc87 ; ret
0x000002000048d556 : jo 0x2000048d57d ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x000002000048f8f5 : jo 0x2000048f95a ; pop rsi ; pop rbp ; ret
0x00000200004908c8 : jo 0x2000049092b ; ret
0x0000020000492f54 : jo 0x20000492f42 ; mov dh, 0x20 ; ret 0x48ff
0x00000200004942b9 : jo 0x2000049430b ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004985dc : jo 0x200004985af ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004994d4 : jo 0x20000499537 ; ret
0x00000200004996a4 : jo 0x200004996f4 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000499e3b : jo 0x20000499dcc ; and al, 0x20 ; call r10
0x000002000049a529 : jo 0x2000049a58c ; ret
0x000002000049a7c5 : jo 0x2000049a82a ; pop rsi ; pop rbp ; ret
0x00000200004ab674 : jo 0x200004ab6d9 ; pop rsi ; pop rbx ; ret
0x00000200004ae7a2 : jo 0x200004ae807 ; pop rbx ; pop rbp ; ret
0x00000200004ae9ed : jo 0x200004aea4c ; ret
0x00000200004af16a : jo 0x200004af1cf ; pop rsi ; pop rbp ; ret
0x00000200004b0c46 : jo 0x200004b0ca9 ; ret
0x00000200004b6cbc : jo 0x200004b6d07 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004b71d9 : jo 0x200004b7238 ; ret
0x00000200004b78a8 : jo 0x200004b790b ; ret
0x00000200004bae05 : jo 0x200004bae56 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004baecc : jo 0x200004baf1d ; add esp, 0x50 ; pop r14 ; ret
0x00000200004c2f9f : jo 0x200004c2f2e ; ret
0x00000200004c7c5c : jo 0x200004c7cc1 ; pop rsi ; pop rbp ; ret
0x00000200004c86c2 : jo 0x200004c8723 ; ret
0x00000200004cc923 : jo 0x200004cc941 ; add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x00000200004d215f : jo 0x200004d21be ; ret
0x00000200004d2af8 : jo 0x200004d2b5b ; ret
0x00000200004d2eb3 : jo 0x200004d2f16 ; ret
0x00000200004d680d : jo 0x200004d6859 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004e2995 : jo 0x200004e29e5 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004e2f1a : jo 0x200004e2f7d ; ret
0x00000200004e42af : jo 0x200004e42ff ; add esp, 0x60 ; pop rdi ; ret
0x00000200004e57b0 : jo 0x200004e5800 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004e8899 : jo 0x200004e88e3 ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e9e63 : jo 0x200004e9df2 ; ret
0x00000200004ed698 : jo 0x200004ed6e8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ee0f4 : jo 0x200004ee144 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004efd38 : jo 0x200004efd9b ; ret
0x00000200004f01c2 : jo 0x200004f0225 ; ret
0x00000200004f203c : jo 0x200004f208c ; add esp, 0x50 ; pop rbp ; ret
0x00000200004f831e : jo 0x200004f8383 ; pop rbx ; pop rbp ; ret
0x00000200004f9261 : jo 0x200004f92b1 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004fbe3a : jo 0x200004fbe54 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000502f30 : jo 0x20000502f80 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000505fb6 : jo 0x20000506006 ; add esp, 0x60 ; pop rdi ; ret
0x000002000050647b : jo 0x200005064de ; ret
0x0000020000507604 : jo 0x200005075f1 ; ret
0x0000020000509a0a : jo 0x20000509a56 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000050b900 : jo 0x2000050b8ce ; ret
0x000002000050d182 : jo 0x2000050d1e3 ; ret
0x000002000051077d : jo 0x2000051070c ; ret
0x0000020000511331 : jo 0x2000051133b ; ror byte ptr [rax - 0x7d], 0xc2 ; or byte ptr [rcx + 0x3b], al ; ret
0x0000020000513b01 : jo 0x20000513b66 ; pop rsi ; pop rbx ; ret
0x00000200005144ce : jo 0x2000051445d ; ret
0x000002000051548e : jo 0x200005154e0 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005156cd : jo 0x20000515715 ; pop rsp ; pop rdi ; pop rbp ; ret
0x0000020000517b8a : jo 0x20000517b19 ; ret
0x0000020000519654 : jo 0x200005196b9 ; pop rsi ; pop rbp ; ret
0x000002000051b7f1 : jo 0x2000051b842 ; mov ecx, ebp ; call 0x2000014a79f
0x0000020000521022 : jo 0x2000052102c ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000052188d : jo 0x2000052181c ; ret
0x0000020000525ea5 : jo 0x20000525ef5 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000534b59 : jo 0x20000534bac ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000053865d : jo 0x200005386be ; ret
0x0000020000541ca7 : jo 0x20000541cf7 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000542167 : jo 0x200005421cc ; pop rsi ; pop rbp ; ret
0x0000020000542ad5 : jo 0x20000542b2d ; mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x000002000054392a : jo 0x2000054397c ; xor eax, eax ; ret
0x00000200005460af : jo 0x2000054603e ; ret 0x8b48
0x0000020000549f6a : jo 0x20000549fba ; add esp, 0x50 ; pop rdi ; ret
0x000002000054a77e : jo 0x2000054a7e3 ; pop rsi ; pop rbp ; ret
0x0000020000552cd0 : jo 0x20000552c5f ; ret
0x0000020000552dc7 : jo 0x20000552e25 ; call 0x2000026f014
0x000002000055d496 : jo 0x2000055d4d3 ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200005601d5 : jo 0x20000560164 ; ret
0x0000020000562844 : jo 0x200005627d3 ; ret
0x0000020000562d19 : jo 0x20000562d56 ; mov rcx, rdi ; call 0x2000026f017
0x0000020000562d2b : jo 0x20000562d68 ; mov rcx, r14 ; call 0x2000026f017
0x000002000056c8dd : jo 0x2000056c92f ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000056df16 : jo 0x2000056df61 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000571f80 : jo 0x20000571fe3 ; ret
0x000002000057260f : jo 0x20000572670 ; ret
0x000002000057f2f5 : jo 0x2000057f354 ; ret
0x0000020000580855 : jo 0x200005808a0 ; pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000580b86 : jo 0x20000580be7 ; ret
0x0000020000580c27 : jo 0x20000580c88 ; ret
0x000002000058383f : jo 0x200005838a2 ; ret
0x0000020000585ce9 : jo 0x20000585d4a ; ret
0x0000020000588257 : jo 0x200005882a7 ; add esp, 0x60 ; pop rdi ; ret
0x000002000058a80a : jo 0x2000058a85a ; add esp, 0x60 ; pop rdi ; ret
0x000002000058ee62 : jo 0x2000058ee91 ; ret 0xd148
0x0000020000592be4 : jo 0x20000592b73 ; ret
0x0000020000598717 : jo 0x2000059877c ; pop rsi ; pop rbp ; ret
0x000002000059a7ef : jo 0x2000059a77e ; ret
0x000002000059c8ee : jo 0x2000059c93e ; add esp, 0x60 ; pop rbp ; ret
0x000002000059f140 : jo 0x2000059f190 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005a7424 : jo 0x200005a7485 ; ret
0x00000200005a8de9 : jo 0x200005a8e39 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005aa30a : jo 0x200005aa35a ; add esp, 0x50 ; pop rdi ; ret
0x00000200005ade58 : jo 0x200005adea0 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200005b42be : jo 0x200005b4309 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005b4843 : jo 0x200005b488b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005b6595 : jo 0x200005b65e0 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005b81bc : jo 0x200005b820c ; add esp, 0x50 ; pop rdi ; ret
0x00000200005bd842 : jo 0x200005bd7d1 ; ret
0x00000200005bdfe1 : jo 0x200005bdff2 ; add byte ptr [rax], al ; jmp 0x200005be061
0x00000200005c3469 : jo 0x200005c33f8 ; ret
0x00000200005c3f13 : jo 0x200005c3f27 ; xchg eax, esp ; ret 0x1188
0x00000200005c423f : jo 0x200005c4253 ; xchg eax, esp ; ret 0x1188
0x00000200005c6363 : jo 0x200005c62f2 ; ret
0x00000200005cb4ea : jo 0x200005cb527 ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x00000200005cbed1 : jo 0x200005cbf23 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005cc553 : jo 0x200005cc507 ; inc dword ptr [rbp - 0xcf8b40] ; ret
0x00000200005cf9f2 : jo 0x200005cf981 ; ret
0x00000200005d0598 : jo 0x200005d05e8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005ed3e2 : jo 0x200005ed369 ; ret 0x4404
0x00000200005fd064 : jo 0x200005fd052 ; out dx, al ; ret
0x0000020000601265 : jo 0x20000601225 ; int1 ; push rsi ; ret
0x00000200006129d4 : jo 0x20000612a26 ; enter 0xfff, -0x4a ; ret
0x000002000062c9dc : jo 0x2000062c9e6 ; add byte ptr [rsi + 0x3b], ah ; retf -0x7af1 ; jmp qword ptr [rsi]
0x000002000063582f : jo 0x200006357be ; add dword ptr [rbx], ebp ; ret
0x0000020000635893 : jo 0x20000635822 ; add dword ptr [rbx], ebp ; ret
0x00000200006365b4 : jo 0x2000063662e ; sar edi, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006406dc : jo 0x2000064073b ; ret
0x0000020000642f83 : jo 0x20000642f16 ; sub byte ptr [r8 + 3], cl ; ret 0x348
0x000002000064b126 : jo 0x2000064b16e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064e92e : jo 0x2000064e991 ; ret
0x00000200006571dd : jo 0x20000657240 ; ret
0x0000020000661dd4 : jo 0x20000661d74 ; ret 0x84ff
0x000002000066405c : jo 0x20000664020 ; ret 0x41ff
0x000002000066405c : jo 0x20000664024 ; ret 0x41ff
0x00000200006681ec : jo 0x2000066826d ; ret 0x48ff
0x00000200006bc4b2 : jo 0x200006bc515 ; ret
0x00000200006bd09f : jo 0x200006bd0ef ; mov esp, ebx ; pop rbp ; ret
0x00000200006c0a9c : jo 0x200006c0afd ; ret
0x00000200006c3fba : jo 0x200006c400a ; add esp, 0x60 ; pop rdi ; ret
0x00000200006c4a2d : jo 0x200006c49bc ; ret
0x00000200006c52f4 : jo 0x200006c532a ; mov ebx, 0x3b0cebff ; ret 0x876
0x00000200006c59b3 : jo 0x200006c5a0c ; add byte ptr [rax], al ; ret
0x00000200006c611c : jo 0x200006c617b ; ret
0x00000200006cd683 : jo 0x200006cd6d3 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e595e : jo 0x200006e58e9 ; ror byte ptr [rdi], 0x84 ; ret
0x00000200006ebda2 : jo 0x200006ebdf2 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006ebe87 : jo 0x200006ebee8 ; ret
0x00000200006ed05b : jo 0x200006ed0bc ; ret
0x00000200006f0141 : jo 0x200006f01a4 ; ret
0x00000200006f3e44 : jo 0x200006f3dd6 ; ror dword ptr [rax - 0x7d], cl ; ret 0xe828
0x00000200006f4cdd : jo 0x200006f4c6c ; ret
0x00000200006f6d30 : jo 0x200006f6d80 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000703e97 : jo 0x20000703ef9 ; ret
0x0000020000705d4d : jo 0x20000705d9d ; add esp, 0x60 ; pop rdi ; ret
0x000002000036406f : jp 0x1ffff678d83 ; inc dword ptr [rcx + 3] ; ret 0x588
0x00000200000812b2 : jp 0x200000812d5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr ss:[rcx]
0x000002000008298a : jp 0x200000829ac ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000085d9d : jp 0x20000085da6 ; ret
0x000002000008df04 : jp 0x2000008df07 ; ret 0x4adb
0x000002000008e057 : jp 0x2000008e00f ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x0000020000090315 : jp 0x200000902f8 ; ret
0x00000200000914b1 : jp 0x2000009150a ; ret 0x7ec2
0x000002000009ef3d : jp 0x2000009ef46 ; ret
0x000002000016390c : jp 0x20000163913 ; add byte ptr [rcx + rcx - 0x75], dh ; add ah, byte ptr [rbx] ; ret
0x00000200003bb020 : jp 0x200003bafaf ; ret
0x000002000040fbf4 : jp 0x2000040fc73 ; or al, byte ptr [rdi + rcx - 0x49] ; ret 0x8341
0x000002000044408a : jp 0x200004440a4 ; xchg ebx, edx ; cmp eax, 0x8341fff7 ; ret
0x000002000045eaac : jp 0x2000045eace ; add byte ptr [rbp - 0x75], al ; ret
0x00000200004967c2 : jp 0x200004967fd ; ret 0x45ff
0x00000200004b71d2 : jp 0x200004b71b9 ; mov esi, 0xc48348ff ; jo 0x200004b723f ; ret
0x00000200005bbe82 : jp 0x200005bbe37 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005cc552 : jp 0x200005cc5cd ; stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xcf8b40] ; ret
0x00000200005f5ad0 : jp 0x200005f5abc ; dec dword ptr [rax - 0x7d] ; ret 0xe838
0x000002000060e766 : jp 0x2000060e702 ; loope 0x2000060e770 ; nop ; jmp 0x2000042aa6d
0x0000020000632e92 : jp 0x20000632e57 ; ret
0x0000020000648752 : jp 0x200006487d3 ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000649f1a : jp 0x20000649f66 ; ret
0x000002000064c8de : jp 0x2000064c8ec ; add byte ptr [rcx], bh ; cmp byte ptr [rbp + rcx - 1], dh ; ret
0x0000020000655f1a : jp 0x20000655ea6 ; ret 0x48ff
0x000002000065611a : jp 0x200006560a4 ; ret 0x48ff
0x00000200006649ca : jp 0x20000664985 ; ret 0x48ff
0x000002000066543e : jp 0x200006653ee ; ret 0x8bff
0x0000020000666282 : jp 0x20000666302 ; ret 0x33ff
0x0000020000668152 : jp 0x200006681d5 ; ret 0x41ff
0x0000020000668152 : jp 0x200006681d9 ; ret 0x41ff
0x000002000066a3ea : jp 0x2000066a429 ; ret 0x4cff
0x000002000000389f : jrcxz 0x200000038e8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000041b3 : jrcxz 0x200000041fb ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000006611 : jrcxz 0x20000006659 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000007574 : jrcxz 0x200000075d7 ; ret
0x000002000000a206 : jrcxz 0x2000000a24f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000000cba0 : jrcxz 0x2000000cbea ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000000d00a : jrcxz 0x2000000d06d ; ret
0x000002000000e261 : jrcxz 0x2000000e29d ; rol bl, 0x49 ; mov eax, ecx ; ret
0x000002000001061f : jrcxz 0x20000010669 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000012c79 : jrcxz 0x20000012cc2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000016888 : jrcxz 0x200000168e9 ; ret
0x0000020000019276 : jrcxz 0x200000192d9 ; ret
0x000002000001ae12 : jrcxz 0x2000001ae75 ; ret
0x000002000001b464 : jrcxz 0x2000001b4ae ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000001b6fe : jrcxz 0x2000001b744 ; pop rsi ; ret
0x000002000001fe00 : jrcxz 0x2000001fe4c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000020282 : jrcxz 0x200000202e5 ; ret
0x0000020000023450 : jrcxz 0x20000023499 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000025ebc : jrcxz 0x20000025f08 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002860c : jrcxz 0x20000028656 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000002ba77 : jrcxz 0x2000002babf ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000002d843 : jrcxz 0x2000002d88d ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000034105 : jrcxz 0x2000003414e ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000003427f : jrcxz 0x200000342e0 ; ret
0x00000200000362ad : jrcxz 0x2000003630e ; ret
0x0000020000037c9d : jrcxz 0x20000037cfe ; ret
0x0000020000038f04 : jrcxz 0x20000038f50 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000003fba7 : jrcxz 0x2000003fbf3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000454a8 : jrcxz 0x200000454f4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000047139 : jrcxz 0x20000047182 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000004fc21 : jrcxz 0x2000004fc6d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000052ead : jrcxz 0x20000052ef9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000059454 : jrcxz 0x2000005949c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000059cfd : jrcxz 0x20000059d60 ; ret
0x000002000005c85d : jrcxz 0x2000005c8a3 ; pop rsi ; ret
0x000002000005d3ad : jrcxz 0x2000005d410 ; ret
0x0000020000062ca0 : jrcxz 0x20000062d01 ; ret
0x00000200000643c3 : jrcxz 0x2000006440c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000064ad7 : jrcxz 0x20000064b1d ; pop rsi ; ret
0x0000020000066055 : jrcxz 0x2000006609e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000006745a : jrcxz 0x200000674a2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000067667 : jrcxz 0x200000676b0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000006782b : jrcxz 0x200000677ba ; ret
0x0000020000068663 : jrcxz 0x200000686a9 ; pop rsi ; ret
0x000002000006ae57 : jrcxz 0x2000006aea1 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000070fc8 : jrcxz 0x20000070fbf ; ret
0x000002000007300f : jrcxz 0x20000073058 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000076ec4 : jrcxz 0x20000076f12 ; mov eax, edx ; pop rbx ; ret
0x0000020000076ec4 : jrcxz 0x20000076f14 ; mov eax, edx ; pop rbx ; ret
0x00000200000a37c9 : jrcxz 0x200000a37cf ; add byte ptr [rax], al ; ret 0
0x00000200000a737c : jrcxz 0x200000a73ce ; mov dword ptr [rcx + 0x168], eax ; ret
0x00000200000b72fd : jrcxz 0x200000b7349 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000cc554 : jrcxz 0x200000cc5a0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000ce411 : jrcxz 0x200000ce45d ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000d4c2b : jrcxz 0x200000d4c73 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000d73a9 : jrcxz 0x200000d73b2 ; add byte ptr [rax], al ; dec byte ptr [rcx + 0x23] ; ret 0x8b48
0x00000200000dcd39 : jrcxz 0x200000dcd9c ; ret
0x00000200000edffc : jrcxz 0x200000ee046 ; pop rdi ; pop r13 ; pop r12 ; ret
0x00000200000f1656 : jrcxz 0x200000f16a2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f1c5b : jrcxz 0x200000f1c8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fabad : jrcxz 0x200000fac10 ; ret
0x00000200000faf81 : jrcxz 0x200000fafcb ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000101a2a : jrcxz 0x20000101a8b ; ret
0x000002000010422c : jrcxz 0x20000104275 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001043b1 : jrcxz 0x200001043fa ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000106b3b : jrcxz 0x20000106b81 ; pop rdi ; ret
0x0000020000107b1f : jrcxz 0x20000107b65 ; pop rsi ; ret
0x00000200001098c4 : jrcxz 0x20000109925 ; ret
0x000002000010a1b2 : jrcxz 0x2000010a213 ; ret
0x000002000010a2b5 : jrcxz 0x2000010a316 ; ret
0x000002000010aa2d : jrcxz 0x2000010aa8e ; ret
0x000002000010aaa4 : jrcxz 0x2000010aaec ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000010abdd : jrcxz 0x2000010ac3e ; ret
0x000002000010ad44 : jrcxz 0x2000010ad8d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010b396 : jrcxz 0x2000010b3e2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000010c12f : jrcxz 0x2000010c192 ; ret
0x00000200001102a3 : jrcxz 0x200001102ef ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000111121 : jrcxz 0x2000011116d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000114617 : jrcxz 0x2000011465f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000115aef : jrcxz 0x20000115b52 ; ret
0x0000020000116f13 : jrcxz 0x20000116f59 ; pop rsi ; ret
0x00000200001171f1 : jrcxz 0x20000117254 ; ret
0x0000020000117992 : jrcxz 0x200001179dc ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200001180e1 : jrcxz 0x20000118129 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001188f6 : jrcxz 0x2000011893f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000118d65 : jrcxz 0x20000118dc6 ; ret
0x000002000011904d : jrcxz 0x20000119095 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200001190f7 : jrcxz 0x2000011913f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011a6b6 : jrcxz 0x2000011a702 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000011b88c : jrcxz 0x2000011b8ed ; ret
0x000002000011be37 : jrcxz 0x2000011be98 ; ret
0x000002000011bf6b : jrcxz 0x2000011bfcc ; ret
0x000002000011c326 : jrcxz 0x2000011c36e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011dc61 : jrcxz 0x2000011dcab ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000012103f : jrcxz 0x2000012108b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000123f28 : jrcxz 0x20000123f71 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000126b63 : jrcxz 0x20000126ba9 ; pop rsi ; ret
0x000002000012acac : jrcxz 0x2000012acf2 ; pop rdi ; ret
0x000002000012b95e : jrcxz 0x2000012b9c1 ; ret
0x000002000012bb8a : jrcxz 0x2000012bbd6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000012bd7f : jrcxz 0x2000012bde0 ; ret
0x000002000012c4d2 : jrcxz 0x2000012c51c ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000012f59e : jrcxz 0x2000012f5ea ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000130b01 : jrcxz 0x20000130b49 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000131eab : jrcxz 0x20000131ef7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000137066 : jrcxz 0x200001370af ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000013c5e8 : jrcxz 0x2000013c634 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000013c869 : jrcxz 0x2000013c8b1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013e5c4 : jrcxz 0x2000013e625 ; ret
0x00000200001400ed : jrcxz 0x2000014014e ; ret
0x000002000014042d : jrcxz 0x2000014048e ; ret
0x00000200001423d4 : jrcxz 0x2000014241f ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000143bbb : jrcxz 0x20000143c1e ; ret
0x0000020000143d6b : jrcxz 0x20000143dcc ; ret
0x0000020000145b0f : jrcxz 0x20000145b5b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000146818 : jrcxz 0x20000146861 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000146e9f : jrcxz 0x20000146eeb ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000147598 : jrcxz 0x200001475de ; pop rsi ; ret
0x0000020000147f86 : jrcxz 0x20000147fcf ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000147f86 : jrcxz 0x20000147fd2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000014ab3b : jrcxz 0x2000014ab11 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x000002000014d391 : jrcxz 0x2000014d3dd ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000014d9a8 : jrcxz 0x2000014d9f3 ; pop rdi ; pop r14 ; pop r13 ; pop rbp ; ret
0x000002000014eb3e : jrcxz 0x2000014eb8a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000150d7a : jrcxz 0x20000150ddb ; ret
0x00000200001530b7 : jrcxz 0x2000015311a ; ret
0x0000020000154077 : jrcxz 0x200001540c7 ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001544ef : jrcxz 0x2000015453d ; mov eax, edx ; ret
0x00000200001544ef : jrcxz 0x2000015453e ; mov eax, edx ; ret
0x00000200001567e0 : jrcxz 0x2000015682c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000015b539 : jrcxz 0x2000015b581 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000015e401 : jrcxz 0x2000015e44a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001624c4 : jrcxz 0x20000162510 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000165b12 : jrcxz 0x20000165b5e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000165f1d : jrcxz 0x20000165f80 ; ret
0x0000020000166fd4 : jrcxz 0x20000167020 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000167d10 : jrcxz 0x20000167d5c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000169593 : jrcxz 0x200001695dd ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000016b449 : jrcxz 0x2000016b491 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000016ee26 : jrcxz 0x2000016ee89 ; ret
0x00000200001700d2 : jrcxz 0x20000170133 ; ret
0x0000020000170fa0 : jrcxz 0x20000170fe8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000017116a : jrcxz 0x200001711b2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000171f78 : jrcxz 0x20000171fd9 ; ret
0x00000200001740eb : jrcxz 0x20000174134 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000174fac : jrcxz 0x20000174ff5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000176223 : jrcxz 0x2000017626c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000176348 : jrcxz 0x200001763a9 ; ret
0x000002000017bcb3 : jrcxz 0x2000017bd16 ; ret
0x000002000017c49e : jrcxz 0x2000017c4e7 ; pop rsi ; pop r13 ; pop rdi ; ret
0x000002000017f6d5 : jrcxz 0x2000017f738 ; ret
0x000002000017f8f5 : jrcxz 0x2000017f958 ; ret
0x000002000017fef6 : jrcxz 0x2000017ff3e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000018014e : jrcxz 0x200001801b1 ; ret
0x0000020000180bcc : jrcxz 0x20000180c14 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001814a1 : jrcxz 0x200001814ed ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001864cd : jrcxz 0x20000186516 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000186735 : jrcxz 0x20000186798 ; ret
0x000002000018693b : jrcxz 0x2000018699c ; ret
0x00000200001875aa : jrcxz 0x200001875f4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001890b3 : jrcxz 0x20000189114 ; ret
0x000002000018a5f3 : jrcxz 0x2000018a63c ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000018f36f : jrcxz 0x2000018f3d2 ; ret
0x0000020000190b64 : jrcxz 0x20000190baa ; pop rsi ; ret
0x0000020000191528 : jrcxz 0x20000191574 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000019290e : jrcxz 0x20000192971 ; ret
0x0000020000192fc9 : jrcxz 0x20000193012 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000194fbb : jrcxz 0x2000019501c ; ret
0x00000200001955e7 : jrcxz 0x2000019564a ; ret
0x00000200001956b5 : jrcxz 0x20000195716 ; ret
0x00000200001957fe : jrcxz 0x2000019585f ; ret
0x0000020000196f78 : jrcxz 0x20000196fc0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001971bb : jrcxz 0x2000019721c ; ret
0x0000020000197de2 : jrcxz 0x20000197e45 ; ret
0x0000020000198c46 : jrcxz 0x20000198ca9 ; ret
0x000002000019d0f3 : jrcxz 0x2000019d156 ; ret
0x00000200001a37f2 : jrcxz 0x200001a3838 ; pop rsi ; ret
0x00000200001a406a : jrcxz 0x200001a40b4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001a9aff : jrcxz 0x200001a9b4b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001b057e : jrcxz 0x200001b05ca ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001b401e : jrcxz 0x200001b4081 ; ret
0x00000200001b43d6 : jrcxz 0x200001b4422 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001b44e4 : jrcxz 0x200001b4547 ; ret
0x00000200001b5db1 : jrcxz 0x200001b5e14 ; ret
0x00000200001b7cf3 : jrcxz 0x200001b7d3f ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200001b8188 : jrcxz 0x200001b81d4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001b920a : jrcxz 0x200001b926b ; ret
0x00000200001b9de6 : jrcxz 0x200001b9e2f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ba440 : jrcxz 0x200001ba48c ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001bd479 : jrcxz 0x200001bd4c1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001bf247 : jrcxz 0x200001bf28f ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001c156e : jrcxz 0x200001c15cf ; ret
0x00000200001c17a6 : jrcxz 0x200001c17ef ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200001c3202 : jrcxz 0x200001c3265 ; ret
0x00000200001c5641 : jrcxz 0x200001c568b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001dfe8c : jrcxz 0x200001dfed5 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200001e81bf : jrcxz 0x200001e818a ; in eax, dx ; push qword ptr [rbx] ; leave ; call 0x200001444b4
0x00000200001f7f95 : jrcxz 0x200001f7f9f ; mov ebx, 0xc000000d ; jmp 0x20000034265
0x000002000035f793 : jrcxz 0x2000035f7df ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000035fe7a : jrcxz 0x2000035fec6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200003603e2 : jrcxz 0x2000036042b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036173f : jrcxz 0x2000036178b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000362d74 : jrcxz 0x20000362dba ; pop rsi ; ret
0x00000200003633f2 : jrcxz 0x2000036343b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000363950 : jrcxz 0x2000036399c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000364842 : jrcxz 0x2000036482a ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; pop rbp ; ret 0
0x000002000036481a : jrcxz 0x20000364862 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000366331 : jrcxz 0x20000366392 ; ret
0x0000020000367a01 : jrcxz 0x20000367a4a ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200003684e5 : jrcxz 0x2000036852e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036a244 : jrcxz 0x2000036a28d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000036b676 : jrcxz 0x2000036b6d9 ; ret
0x000002000036ce07 : jrcxz 0x2000036ce50 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000036e57d : jrcxz 0x2000036e5c6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000036f53a : jrcxz 0x2000036f59b ; ret
0x000002000036fbca : jrcxz 0x2000036fc16 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000037154f : jrcxz 0x2000037159e ; add esp, 0x28 ; ret
0x0000020000377bc4 : jrcxz 0x20000377c0c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000037810f : jrcxz 0x20000378155 ; pop rsi ; ret
0x0000020000378bf2 : jrcxz 0x20000378c3a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000379f19 : jrcxz 0x20000379f65 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000037a073 : jrcxz 0x2000037a0bc ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000037b371 : jrcxz 0x2000037b3bd ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000037be75 : jrcxz 0x2000037bed8 ; ret
0x000002000037d4b4 : jrcxz 0x2000037d4fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000037db37 : jrcxz 0x2000037db13 ; push rsi ; ret
0x000002000037ddc1 : jrcxz 0x2000037de07 ; pop rsi ; ret
0x000002000037e0fd : jrcxz 0x2000037e160 ; ret
0x000002000037e74d : jrcxz 0x2000037e795 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000037f1a0 : jrcxz 0x2000037f1ec ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000037f6ef : jrcxz 0x2000037f735 ; pop rsi ; ret
0x00000200003803d3 : jrcxz 0x2000038041c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003815f2 : jrcxz 0x2000038163e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000381f67 : jrcxz 0x20000381faf ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000383e46 : jrcxz 0x20000383e8c ; pop rsi ; ret
0x00000200003847b6 : jrcxz 0x20000384819 ; ret
0x000002000038485d : jrcxz 0x200003848a5 ; pop rsp ; pop rdi ; pop rbp ; ret
0x0000020000386753 : jrcxz 0x200003867b4 ; ret
0x000002000038695b : jrcxz 0x200003869bc ; ret
0x00000200003898d2 : jrcxz 0x2000038991c ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000038c114 : jrcxz 0x2000038c15e ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000038cb69 : jrcxz 0x2000038cbb5 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000038d07d : jrcxz 0x2000038d0de ; ret
0x000002000038f4bf : jrcxz 0x2000038f508 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000391992 : jrcxz 0x200003919dc ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003922ec : jrcxz 0x20000392332 ; pop rsi ; ret
0x00000200003929cd : jrcxz 0x20000392a16 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003945e6 : jrcxz 0x20000394649 ; ret
0x0000020000394885 : jrcxz 0x200003948d1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000396c25 : jrcxz 0x20000396c71 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000398645 : jrcxz 0x200003986a6 ; ret
0x00000200003988f4 : jrcxz 0x2000039893e ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000039908c : jrcxz 0x200003990d5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039a012 : jrcxz 0x2000039a058 ; pop rsi ; ret
0x000002000039aa89 : jrcxz 0x2000039aaec ; ret
0x000002000039bc40 : jrcxz 0x2000039bca1 ; ret
0x000002000039ce3f : jrcxz 0x2000039ce88 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039db57 : jrcxz 0x2000039dba0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039e292 : jrcxz 0x2000039e2db ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039e381 : jrcxz 0x2000039e3e4 ; ret
0x00000200003a1a41 : jrcxz 0x200003a1a8a ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003a3283 : jrcxz 0x200003a32cb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003a4a7b : jrcxz 0x200003a4ac5 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003a7fe1 : jrcxz 0x200003a802d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003a8cb2 : jrcxz 0x200003a8d13 ; ret
0x00000200003a9ba7 : jrcxz 0x200003a9bf0 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200003a9e7f : jrcxz 0x200003a9ecb ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003aaf7b : jrcxz 0x200003aafc4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003abc55 : jrcxz 0x200003abc9e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003abde7 : jrcxz 0x200003abe30 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ad4a9 : jrcxz 0x200003ad50a ; ret
0x00000200003ad741 : jrcxz 0x200003ad78a ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003adc23 : jrcxz 0x200003adc6c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003adf49 : jrcxz 0x200003adf95 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003ae257 : jrcxz 0x200003ae2a0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003afdaa : jrcxz 0x200003afdf2 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003b0076 : jrcxz 0x200003b00d7 ; ret
0x00000200003b03d3 : jrcxz 0x200003b041d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003b19b1 : jrcxz 0x200003b19fb ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003b1d2c : jrcxz 0x200003b1d75 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b2dd6 : jrcxz 0x200003b2e1f ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003b38c4 : jrcxz 0x200003b390d ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003b3bed : jrcxz 0x200003b3c36 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b3d16 : jrcxz 0x200003b3d62 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003b44a1 : jrcxz 0x200003b4504 ; ret
0x00000200003b4cad : jrcxz 0x200003b4cf6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b507d : jrcxz 0x200003b50c9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003b51de : jrcxz 0x200003b522a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003b5562 : jrcxz 0x200003b55ab ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b5707 : jrcxz 0x200003b5750 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200003b5afb : jrcxz 0x200003b5b44 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b5e38 : jrcxz 0x200003b5e7e ; pop rsi ; ret
0x00000200003b6997 : jrcxz 0x200003b69e0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b7377 : jrcxz 0x200003b73c0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003bcef4 : jrcxz 0x200003bcf3d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003bd2f2 : jrcxz 0x200003bd33c ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003bd63f : jrcxz 0x200003bd688 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003bd825 : jrcxz 0x200003bd888 ; ret
0x00000200003bff8d : jrcxz 0x200003bffd9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003c12a4 : jrcxz 0x200003c12ee ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c254d : jrcxz 0x200003c2599 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003c2867 : jrcxz 0x200003c28ca ; ret
0x00000200003c5589 : jrcxz 0x200003c55ec ; ret
0x00000200003c5be5 : jrcxz 0x200003c5c2f ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c8545 : jrcxz 0x200003c858b ; pop rdi ; ret
0x00000200003ca2c4 : jrcxz 0x200003ca327 ; ret
0x00000200003ca675 : jrcxz 0x200003ca6bd ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003cc539 : jrcxz 0x200003cc585 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003cde27 : jrcxz 0x200003cde71 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003ce701 : jrcxz 0x200003ce74b ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003d6c7d : jrcxz 0x200003d6cc3 ; pop rsi ; ret
0x00000200003d7efb : jrcxz 0x200003d7f47 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003d9fcf : jrcxz 0x200003da030 ; ret
0x00000200003dbd82 : jrcxz 0x200003dbdce ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003dc372 : jrcxz 0x200003dc3bb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003de341 : jrcxz 0x200003de38b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003de6fb : jrcxz 0x200003de75e ; ret
0x00000200003e0f54 : jrcxz 0x200003e0f9e ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003e24e2 : jrcxz 0x200003e252c ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003e3f57 : jrcxz 0x200003e3fa0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e3f57 : jrcxz 0x200003e3fa2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e7019 : jrcxz 0x200003e705f ; pop rdi ; ret
0x00000200003f0500 : jrcxz 0x200003f054a ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003f298b : jrcxz 0x200003f29d5 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003f776c : jrcxz 0x200003f77b6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003f7918 : jrcxz 0x200003f7964 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003fbd99 : jrcxz 0x200003fbde2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003fbdf1 : jrcxz 0x200003fbe54 ; ret
0x00000200003fccd9 : jrcxz 0x200003fcd22 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003fd001 : jrcxz 0x200003fd064 ; ret
0x00000200003fdbd6 : jrcxz 0x200003fdc1f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003fef5d : jrcxz 0x200003fefc0 ; ret
0x00000200003ffdc9 : jrcxz 0x200003ffe0e ; ret 0xebff
0x00000200004001e0 : jrcxz 0x20000400229 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004045c6 : jrcxz 0x2000040460f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000407769 : jrcxz 0x200004077b3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004085bf : jrcxz 0x20000408605 ; pop rsi ; ret
0x0000020000408d2a : jrcxz 0x20000408d72 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000040c269 : jrcxz 0x2000040c2b3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000040c833 : jrcxz 0x2000040c87c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040d02e : jrcxz 0x2000040d091 ; ret
0x000002000040d4a4 : jrcxz 0x2000040d4ea ; pop rdi ; ret
0x000002000040e9bc : jrcxz 0x2000040ea08 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000040f4ee : jrcxz 0x2000040f534 ; pop rsi ; ret
0x000002000040f7db : jrcxz 0x2000040f823 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000410a12 : jrcxz 0x20000410a58 ; pop rdi ; ret
0x00000200004114b9 : jrcxz 0x200004114f5 ; ret
0x000002000041334b : jrcxz 0x20000413391 ; pop rdi ; ret
0x0000020000413ef9 : jrcxz 0x20000413f43 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004163dd : jrcxz 0x2000041643e ; ret
0x0000020000416559 : jrcxz 0x200004165a2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000416708 : jrcxz 0x20000416769 ; ret
0x000002000041789f : jrcxz 0x200004178e9 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000041795e : jrcxz 0x200004179a7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000418751 : jrcxz 0x20000418797 ; pop rsi ; ret
0x0000020000419755 : jrcxz 0x2000041979f ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000041a523 : jrcxz 0x2000041a569 ; pop rsi ; ret
0x000002000041c96c : jrcxz 0x2000041c9b8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000041d230 : jrcxz 0x2000041d279 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041ebba : jrcxz 0x2000041ec03 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041efd3 : jrcxz 0x2000041f01b ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000041f821 : jrcxz 0x2000041f86a ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000041fbe6 : jrcxz 0x2000041fc2e ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004208f3 : jrcxz 0x2000042093d ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000422716 : jrcxz 0x2000042275e ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000423913 : jrcxz 0x2000042395f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000423ae0 : jrcxz 0x20000423b43 ; ret
0x0000020000423f1f : jrcxz 0x20000423f6b ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000426139 : jrcxz 0x2000042619c ; ret
0x0000020000427ded : jrcxz 0x20000427e37 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000042c3c4 : jrcxz 0x2000042c40a ; pop rsi ; ret
0x000002000042f2e7 : jrcxz 0x2000042f32f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000042f519 : jrcxz 0x2000042f55f ; ret
0x0000020000432b7b : jrcxz 0x20000432b83 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043a215 : jrcxz 0x2000043a278 ; ret
0x00000200004427fd : jrcxz 0x20000442843 ; pop rdi ; ret
0x000002000045b736 : jrcxz 0x2000045b77c ; pop rdi ; ret
0x0000020000462fbb : jrcxz 0x20000463004 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004632a3 : jrcxz 0x200004632ed ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000463d38 : jrcxz 0x20000463d42 ; add rsp, 0x28 ; pop r14 ; pop rbx ; ret
0x0000020000468469 : jrcxz 0x20000468421 ; ret
0x000002000046b468 : jrcxz 0x2000046b4b2 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000046d0d9 : jrcxz 0x2000046d11f ; pop rdi ; ret
0x000002000046e251 : jrcxz 0x2000046e297 ; pop rsi ; ret
0x00000200004729a5 : jrcxz 0x200004729eb ; pop rsi ; ret
0x0000020000473fa5 : jrcxz 0x20000473fef ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004755f1 : jrcxz 0x2000047563a ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000476520 : jrcxz 0x20000476569 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000476ec5 : jrcxz 0x20000476f11 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000047700e : jrcxz 0x20000477054 ; pop rsi ; ret
0x00000200004783d8 : jrcxz 0x2000047843b ; ret
0x0000020000478cfa : jrcxz 0x20000478d42 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000047950e : jrcxz 0x2000047956f ; ret
0x0000020000479892 : jrcxz 0x200004798db ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047a674 : jrcxz 0x2000047a6d7 ; ret
0x000002000047a8e1 : jrcxz 0x2000047a92a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047baa8 : jrcxz 0x2000047baf1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047c528 : jrcxz 0x2000047c570 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000047d1b5 : jrcxz 0x2000047d1fb ; pop rsi ; ret
0x000002000047d614 : jrcxz 0x2000047d660 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000047e66d : jrcxz 0x2000047e6ce ; ret
0x000002000047f482 : jrcxz 0x2000047f4ca ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004806c7 : jrcxz 0x20000480713 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000481e8a : jrcxz 0x20000481ed6 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000482199 : jrcxz 0x20000482213 ; ret
0x0000020000482c68 : jrcxz 0x20000482cb1 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000482ffd : jrcxz 0x20000483049 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004847ab : jrcxz 0x200004847f7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000048555c : jrcxz 0x200004855a2 ; pop rsi ; ret
0x00000200004861c3 : jrcxz 0x20000486226 ; ret
0x00000200004868f0 : jrcxz 0x20000486938 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004869de : jrcxz 0x20000486a26 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000486f0f : jrcxz 0x20000486f5b ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000048748e : jrcxz 0x200004874f1 ; ret
0x0000020000487a33 : jrcxz 0x20000487a7c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000488b77 : jrcxz 0x20000488bd8 ; ret
0x00000200004895e7 : jrcxz 0x200004895b4 ; push rsi ; ret
0x00000200004895e6 : jrcxz 0x200004895b5 ; push rsi ; ret
0x0000020000489bfe : jrcxz 0x20000489c61 ; ret
0x000002000048a379 : jrcxz 0x2000048a3c5 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000048b380 : jrcxz 0x2000048b3cc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000048b756 : jrcxz 0x2000048b7b9 ; ret
0x000002000048bd09 : jrcxz 0x2000048bd52 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000048c56d : jrcxz 0x2000048c5d0 ; ret
0x000002000048e3d9 : jrcxz 0x2000048e390 ; in al, -1 ; call 0x200000b9887
0x000002000048ef57 : jrcxz 0x2000048efa1 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000048f0b8 : jrcxz 0x2000048f100 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004947e9 : jrcxz 0x20000494835 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000495dee : jrcxz 0x20000495e36 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000496fc8 : jrcxz 0x2000049702b ; ret
0x00000200004986df : jrcxz 0x20000498728 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000498815 : jrcxz 0x20000498876 ; ret
0x00000200004995d6 : jrcxz 0x20000499637 ; ret
0x0000020000499771 : jrcxz 0x20000499777 ; call 0x200000b9b05
0x0000020000499dea : jrcxz 0x20000499e33 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049a2cf : jrcxz 0x2000049a330 ; ret
0x000002000049a72a : jrcxz 0x2000049a78b ; ret
0x000002000049b4c0 : jrcxz 0x2000049b509 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049b71c : jrcxz 0x2000049b764 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000049c129 : jrcxz 0x2000049c18a ; ret
0x000002000049c53f : jrcxz 0x2000049c5a0 ; ret
0x000002000049e3e6 : jrcxz 0x2000049e447 ; ret
0x000002000049e5cb : jrcxz 0x2000049e613 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000049f61d : jrcxz 0x2000049f666 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200004a6a47 : jrcxz 0x200004a6a8f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004a955c : jrcxz 0x200004a95a5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004aa4e2 : jrcxz 0x200004aa52b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004aa8b1 : jrcxz 0x200004aa8fd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004ab018 : jrcxz 0x200004ab07b ; ret
0x00000200004ab1db : jrcxz 0x200004ab23c ; ret
0x00000200004ab276 : jrcxz 0x200004ab2d7 ; ret
0x00000200004ab33c : jrcxz 0x200004ab39d ; ret
0x00000200004ab44c : jrcxz 0x200004ab4af ; ret
0x00000200004ac5f3 : jrcxz 0x200004ac63c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ad84a : jrcxz 0x200004ad8ab ; ret
0x00000200004ada3a : jrcxz 0x200004ada9b ; ret
0x00000200004adb14 : jrcxz 0x200004adb77 ; ret
0x00000200004aebf6 : jrcxz 0x200004aec3c ; pop rdi ; ret
0x00000200004aff7f : jrcxz 0x200004affc8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b0845 : jrcxz 0x200004b088d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b0a79 : jrcxz 0x200004b0ac1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b0e18 : jrcxz 0x200004b0e61 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b1bdc : jrcxz 0x200004b1c26 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004b1d4c : jrcxz 0x200004b1daf ; ret
0x00000200004b24cd : jrcxz 0x200004b252e ; ret
0x00000200004b3432 : jrcxz 0x200004b3493 ; ret
0x00000200004b3543 : jrcxz 0x200004b35a6 ; ret
0x00000200004b3838 : jrcxz 0x200004b383f ; add rsp, 0x38 ; ret
0x00000200004b3837 : jrcxz 0x200004b3840 ; add rsp, 0x38 ; ret
0x00000200004b3a0a : jrcxz 0x200004b3a50 ; pop rsi ; ret
0x00000200004b46b7 : jrcxz 0x200004b4718 ; ret
0x00000200004b55cf : jrcxz 0x200004b5630 ; ret
0x00000200004b6306 : jrcxz 0x200004b6352 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004b64a6 : jrcxz 0x200004b64ef ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004b7cd9 : jrcxz 0x200004b7d22 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b8b3c : jrcxz 0x200004b8b85 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200004ba930 : jrcxz 0x200004ba979 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004baca6 : jrcxz 0x200004bacf0 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004bb4ac : jrcxz 0x200004bb4f5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004bbe3e : jrcxz 0x200004bbe84 ; pop rdi ; ret
0x00000200004c2baa : jrcxz 0x200004c2c0d ; ret
0x00000200004c2fb0 : jrcxz 0x200004c2ff9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c3101 : jrcxz 0x200004c314a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c398e : jrcxz 0x200004c39d6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c4d64 : jrcxz 0x200004c4dad ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c75a6 : jrcxz 0x200004c75ef ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c9078 : jrcxz 0x200004c90c1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c9451 : jrcxz 0x200004c949a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c9d4d : jrcxz 0x200004c9d96 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004ccf38 : jrcxz 0x200004ccf82 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004d1590 : jrcxz 0x200004d15d9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d6e97 : jrcxz 0x200004d6ee3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004dbd02 : jrcxz 0x200004dbd4b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004dbe83 : jrcxz 0x200004dbee4 ; ret
0x00000200004dc642 : jrcxz 0x200004dc6a5 ; ret
0x00000200004dd1dc : jrcxz 0x200004dd222 ; pop rdi ; ret
0x00000200004de430 : jrcxz 0x200004de479 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004dea18 : jrcxz 0x200004dea64 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004ded65 : jrcxz 0x200004dedad ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004df5e8 : jrcxz 0x200004df631 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e0318 : jrcxz 0x200004e0364 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e0d89 : jrcxz 0x200004e0dd1 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004e3337 : jrcxz 0x200004e3383 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004e370e : jrcxz 0x200004e3771 ; ret
0x00000200004e391c : jrcxz 0x200004e3966 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004e3c0b : jrcxz 0x200004e3c6c ; ret
0x00000200004e4e2e : jrcxz 0x200004e4e8f ; ret
0x00000200004e74bd : jrcxz 0x200004e7506 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e7cbe : jrcxz 0x200004e7d1f ; ret
0x00000200004e8124 : jrcxz 0x200004e8170 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e87e4 : jrcxz 0x200004e8845 ; ret
0x00000200004e8bec : jrcxz 0x200004e8c34 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004e9231 : jrcxz 0x200004e927d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004ea1bc : jrcxz 0x200004ea202 ; pop rsi ; ret
0x00000200004ea26a : jrcxz 0x200004ea2cd ; ret
0x00000200004ea375 : jrcxz 0x200004ea3be ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004ea454 : jrcxz 0x200004ea4b5 ; ret
0x00000200004ec663 : jrcxz 0x200004ec6af ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004ee76b : jrcxz 0x200004ee7b3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004eec65 : jrcxz 0x200004eecc6 ; ret
0x00000200004f0699 : jrcxz 0x200004f06e3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004f09bd : jrcxz 0x200004f0a1e ; ret
0x00000200004f2249 : jrcxz 0x200004f22ac ; ret
0x00000200004f2729 : jrcxz 0x200004f2775 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004f4a25 : jrcxz 0x200004f4a6e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f5402 : jrcxz 0x200004f5463 ; ret
0x00000200004f57d5 : jrcxz 0x200004f5836 ; ret
0x00000200004f7008 : jrcxz 0x200004f7050 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004f8c96 : jrcxz 0x200004f8cf7 ; ret
0x00000200004f9047 : jrcxz 0x200004f90a8 ; ret
0x00000200004f9e58 : jrcxz 0x200004f9ebb ; ret
0x00000200004fc6c8 : jrcxz 0x200004fc711 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004fe726 : jrcxz 0x200004fe772 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004fe8b5 : jrcxz 0x200004fe8fb ; pop rsi ; ret
0x00000200004feb13 : jrcxz 0x200004feb5f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004fedfa : jrcxz 0x200004fee43 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000500730 : jrcxz 0x20000500791 ; ret
0x0000020000500972 : jrcxz 0x200005009d3 ; ret
0x0000020000501098 : jrcxz 0x200005010e1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000501429 : jrcxz 0x2000050148c ; ret
0x0000020000501824 : jrcxz 0x20000501887 ; ret
0x00000200005019fc : jrcxz 0x20000501a5f ; ret
0x0000020000501e4f : jrcxz 0x20000501eb2 ; ret
0x0000020000503bbc : jrcxz 0x20000503c05 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000504b1c : jrcxz 0x20000504b7d ; ret
0x0000020000505824 : jrcxz 0x2000050586c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005061f0 : jrcxz 0x20000506239 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000506d25 : jrcxz 0x20000506d88 ; ret
0x0000020000507531 : jrcxz 0x2000050757a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000508106 : jrcxz 0x20000508169 ; ret
0x00000200005081fb : jrcxz 0x20000508247 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000050832d : jrcxz 0x20000508379 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005086db : jrcxz 0x2000050873e ; ret
0x000002000050a0e2 : jrcxz 0x2000050a128 ; pop rdi ; ret
0x000002000050aabe : jrcxz 0x2000050ab1f ; ret
0x000002000050d0dc : jrcxz 0x2000050d125 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050d248 : jrcxz 0x2000050d290 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000510913 : jrcxz 0x2000051095c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000510f32 : jrcxz 0x20000510f7a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000511b32 : jrcxz 0x20000511b7a ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000051726a : jrcxz 0x200005172b6 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000517e47 : jrcxz 0x20000517ea8 ; ret
0x0000020000518898 : jrcxz 0x200005188e1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000518af4 : jrcxz 0x20000518b3c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000518d28 : jrcxz 0x20000518d74 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000518e74 : jrcxz 0x20000518ebc ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000519198 : jrcxz 0x200005191f9 ; ret
0x00000200005194eb : jrcxz 0x2000051954c ; ret
0x0000020000519c38 : jrcxz 0x20000519c9b ; ret
0x000002000051a4e3 : jrcxz 0x2000051a52f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000051a628 : jrcxz 0x2000051a689 ; ret
0x000002000051b095 : jrcxz 0x2000051b0f6 ; ret
0x000002000051b219 : jrcxz 0x2000051b27a ; ret
0x000002000051bb6a : jrcxz 0x2000051bbb6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000051cfbb : jrcxz 0x2000051d01c ; ret
0x000002000051d584 : jrcxz 0x2000051d5e5 ; ret
0x000002000051dbc3 : jrcxz 0x2000051dc26 ; ret
0x000002000051f506 : jrcxz 0x2000051f54e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051f91d : jrcxz 0x2000051f967 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000520ba9 : jrcxz 0x20000520c0c ; ret
0x0000020000520c9d : jrcxz 0x20000520ce5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052189a : jrcxz 0x200005218e2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005219c8 : jrcxz 0x20000521a29 ; ret
0x0000020000523bb2 : jrcxz 0x20000523bfe ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000052405c : jrcxz 0x200005240a5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000525a5d : jrcxz 0x20000525a15 ; ret 0x8bff
0x0000020000525c1b : jrcxz 0x20000525c63 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000526c76 : jrcxz 0x20000526cbf ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000526e36 : jrcxz 0x20000526e82 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000052a61c : jrcxz 0x2000052a67d ; ret
0x000002000052b4d3 : jrcxz 0x2000052b536 ; ret
0x000002000052ccf8 : jrcxz 0x2000052cd44 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000052d06f : jrcxz 0x2000052d0bb ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000052d503 : jrcxz 0x2000052d54f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000532953 : jrcxz 0x200005329b6 ; ret
0x0000020000533256 : jrcxz 0x200005332a2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000533c6d : jrcxz 0x20000533cb9 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000534f56 : jrcxz 0x20000534fb7 ; ret
0x000002000053607e : jrcxz 0x200005360c6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000536905 : jrcxz 0x2000053694e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005372af : jrcxz 0x200005372f8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000539322 : jrcxz 0x2000053936e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000539d2d : jrcxz 0x20000539d77 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000053c02b : jrcxz 0x2000053c08e ; ret
0x000002000053ccb5 : jrcxz 0x2000053cd01 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000053e493 : jrcxz 0x2000053e4df ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053f0ee : jrcxz 0x2000053f13a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000053f482 : jrcxz 0x2000053f4cc ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000054128a : jrcxz 0x200005412d0 ; pop rsi ; ret
0x0000020000541773 : jrcxz 0x200005417d6 ; ret
0x0000020000541dce : jrcxz 0x20000541e16 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000542755 : jrcxz 0x2000054279e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000542d77 : jrcxz 0x20000542dd8 ; ret
0x0000020000542fd2 : jrcxz 0x20000543035 ; ret
0x0000020000544983 : jrcxz 0x200005449cd ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000545860 : jrcxz 0x200005458c1 ; ret
0x0000020000546158 : jrcxz 0x200005461bb ; ret
0x0000020000546995 : jrcxz 0x200005469e1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000546cac : jrcxz 0x20000546cf5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000547339 : jrcxz 0x20000547382 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000548215 : jrcxz 0x2000054825d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000548733 : jrcxz 0x2000054877d ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000549631 : jrcxz 0x20000549692 ; ret
0x0000020000549e4a : jrcxz 0x20000549e96 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000054adc4 : jrcxz 0x2000054ae25 ; ret
0x000002000054b123 : jrcxz 0x2000054b123 ; dec dword ptr [rbx - 0x24c81738] ; ret
0x000002000054b49a : jrcxz 0x2000054b4e3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000054c217 : jrcxz 0x2000054c261 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000054d10c : jrcxz 0x2000054d155 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000054d429 : jrcxz 0x2000054d48c ; ret
0x000002000054d69d : jrcxz 0x2000054d6e3 ; pop rdi ; ret
0x000002000054d774 : jrcxz 0x2000054d7d5 ; ret
0x000002000054ebb7 : jrcxz 0x2000054ebff ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000054f158 : jrcxz 0x2000054f1a1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000054f97b : jrcxz 0x2000054f9dc ; ret
0x0000020000550276 : jrcxz 0x20000550280 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005526c5 : jrcxz 0x2000055270d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000552bda : jrcxz 0x20000552c23 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000552ef9 : jrcxz 0x20000552f5a ; ret
0x0000020000553891 : jrcxz 0x200005538da ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000055bf69 : jrcxz 0x2000055bfb1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000055ca31 : jrcxz 0x2000055ca92 ; ret
0x000002000055edd1 : jrcxz 0x2000055ee32 ; ret
0x000002000055fe45 : jrcxz 0x2000055fe8e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005624ee : jrcxz 0x20000562534 ; pop rsi ; ret
0x0000020000562855 : jrcxz 0x2000056289b ; pop rsi ; ret
0x0000020000562bed : jrcxz 0x20000562c36 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000056342e : jrcxz 0x20000563477 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000563c8b : jrcxz 0x20000563cd4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000563e0f : jrcxz 0x20000563e70 ; ret
0x0000020000563f9e : jrcxz 0x20000563fe7 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200005643c6 : jrcxz 0x20000564410 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000564530 : jrcxz 0x20000564576 ; pop rsi ; ret
0x00000200005645e2 : jrcxz 0x2000056462b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000564929 : jrcxz 0x2000056498a ; ret
0x0000020000564a20 : jrcxz 0x20000564a81 ; ret
0x0000020000564cb6 : jrcxz 0x20000564d17 ; ret
0x00000200005654e7 : jrcxz 0x2000056552f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000565882 : jrcxz 0x200005658cb ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000565ce0 : jrcxz 0x20000565d2c ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000566f7e : jrcxz 0x20000566fdf ; ret
0x0000020000567173 : jrcxz 0x200005671bb ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000056793b : jrcxz 0x20000567984 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000567a4a : jrcxz 0x20000567aab ; ret
0x000002000056814e : jrcxz 0x2000056819a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000568ed7 : jrcxz 0x20000568f1d ; pop rsi ; ret
0x000002000056954d : jrcxz 0x20000569595 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000569c19 : jrcxz 0x20000569c7c ; ret
0x000002000056bf0a : jrcxz 0x2000056bf53 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000056c132 : jrcxz 0x2000056c195 ; ret
0x000002000056d762 : jrcxz 0x2000056d7ab ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000056e54a : jrcxz 0x2000056e596 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000056f597 : jrcxz 0x2000056f5fa ; ret
0x0000020000572229 : jrcxz 0x20000572273 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005728db : jrcxz 0x2000057293e ; ret
0x000002000057375b : jrcxz 0x200005737a7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000573c58 : jrcxz 0x20000573ca0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005745f8 : jrcxz 0x2000057465b ; ret
0x00000200005767d3 : jrcxz 0x20000576819 ; pop rdi ; ret
0x0000020000577254 : jrcxz 0x2000057729c ; pop rsp ; pop rdi ; pop rbp ; ret
0x0000020000577a4e : jrcxz 0x20000577a9a ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000577b49 : jrcxz 0x20000577b8f ; pop rsi ; ret
0x0000020000577c27 : jrcxz 0x20000577c6f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000057a3e5 : jrcxz 0x2000057a42e ; pop rdi ; pop r14 ; pop rsi ; ret
0x000002000057b1af : jrcxz 0x2000057b1f7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000057d765 : jrcxz 0x2000057d7c8 ; ret
0x000002000057dad5 : jrcxz 0x2000057db21 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000057e1b4 : jrcxz 0x2000057e1fd ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000057f755 : jrcxz 0x2000057f7b8 ; ret
0x000002000058011a : jrcxz 0x2000058017b ; ret
0x000002000058031d : jrcxz 0x2000058037e ; ret
0x00000200005810d8 : jrcxz 0x20000581120 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000581278 : jrcxz 0x200005812c0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000581884 : jrcxz 0x200005818e5 ; ret
0x0000020000581f12 : jrcxz 0x20000581f75 ; ret
0x0000020000583a1c : jrcxz 0x20000583a64 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005846ea : jrcxz 0x2000058474d ; ret
0x000002000058541b : jrcxz 0x2000058547e ; ret
0x0000020000586466 : jrcxz 0x200005864af ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200005865dc : jrcxz 0x20000586622 ; pop rsi ; ret
0x0000020000586bb6 : jrcxz 0x20000586bfc ; pop rsi ; ret
0x0000020000586fbf : jrcxz 0x20000587008 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005883da : jrcxz 0x2000058843b ; ret
0x000002000058d2fd : jrcxz 0x2000058d346 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005909f6 : jrcxz 0x20000590a57 ; ret
0x0000020000592bf9 : jrcxz 0x20000592c3f ; pop rsi ; ret
0x0000020000592e45 : jrcxz 0x20000592e8e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005935f1 : jrcxz 0x20000593652 ; ret
0x0000020000593833 : jrcxz 0x2000059387c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005939f2 : jrcxz 0x20000593a3b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000593ec5 : jrcxz 0x20000593f26 ; ret
0x0000020000594784 : jrcxz 0x200005947cc ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005950a3 : jrcxz 0x200005950ef ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000595a97 : jrcxz 0x20000595adf ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000595b48 : jrcxz 0x20000595b90 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000596138 : jrcxz 0x20000596181 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000059860f : jrcxz 0x20000598670 ; ret
0x0000020000599c9b : jrcxz 0x20000599ce3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000059a39f : jrcxz 0x2000059a3e8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000059b336 : jrcxz 0x2000059b397 ; ret
0x000002000059b44d : jrcxz 0x2000059b496 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000059b744 : jrcxz 0x2000059b78d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000059e61f : jrcxz 0x2000059e667 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000059e951 : jrcxz 0x2000059e9b2 ; ret
0x000002000059f205 : jrcxz 0x2000059f268 ; ret
0x000002000059f957 : jrcxz 0x2000059f9b8 ; ret
0x000002000059fc9e : jrcxz 0x2000059fcea ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005a0b96 : jrcxz 0x200005a0bde ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200005a1611 : jrcxz 0x200005a165d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005a1f80 : jrcxz 0x200005a1fc8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005a2377 : jrcxz 0x200005a23c3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005a24ba : jrcxz 0x200005a2504 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005a25c6 : jrcxz 0x200005a260f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a4c9c : jrcxz 0x200005a4ce5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a52e4 : jrcxz 0x200005a5347 ; ret
0x00000200005a53f1 : jrcxz 0x200005a5454 ; ret
0x00000200005a641b : jrcxz 0x200005a647c ; ret
0x00000200005a66fc : jrcxz 0x200005a6745 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a7709 : jrcxz 0x200005a776a ; ret
0x00000200005a793a : jrcxz 0x200005a7982 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005a7b66 : jrcxz 0x200005a7bb4 ; mov eax, ecx ; ret
0x00000200005a81d1 : jrcxz 0x200005a821a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005a8616 : jrcxz 0x200005a8662 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005a8c16 : jrcxz 0x200005a8c77 ; ret
0x00000200005a8f67 : jrcxz 0x200005a8fb3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005a920b : jrcxz 0x200005a9253 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200005aa6d9 : jrcxz 0x200005aa73a ; ret
0x00000200005aa8c6 : jrcxz 0x200005aa90e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005aac5b : jrcxz 0x200005aaca4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005aae56 : jrcxz 0x200005aae9f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ac36d : jrcxz 0x200005ac3b6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ac7de : jrcxz 0x200005ac82a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005ad50a : jrcxz 0x200005ad56b ; ret
0x00000200005ae2ed : jrcxz 0x200005ae336 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005aeb86 : jrcxz 0x200005aebce ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005aece3 : jrcxz 0x200005aed44 ; ret
0x00000200005b07c5 : jrcxz 0x200005b0811 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005b2ab5 : jrcxz 0x200005b2b18 ; ret
0x00000200005b3e95 : jrcxz 0x200005b3ef8 ; ret
0x00000200005b4094 : jrcxz 0x200005b40de ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005b4b78 : jrcxz 0x200005b4bc2 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005b6492 : jrcxz 0x200005b64db ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005b759e : jrcxz 0x200005b75e7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005b82ff : jrcxz 0x200005b8348 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005b92e8 : jrcxz 0x200005b934b ; ret
0x00000200005b949a : jrcxz 0x200005b94e2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005b9c68 : jrcxz 0x200005b9cc9 ; ret
0x00000200005b9e8a : jrcxz 0x200005b9ed3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005ba5ac : jrcxz 0x200005ba5f8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005bb268 : jrcxz 0x200005bb2c9 ; ret
0x00000200005bbdda : jrcxz 0x200005bbe3b ; ret
0x00000200005bc031 : jrcxz 0x200005bc077 ; pop rdi ; ret
0x00000200005bd84f : jrcxz 0x200005bd897 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005bf200 : jrcxz 0x200005bf24c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005bf340 : jrcxz 0x200005bf388 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005bf8d0 : jrcxz 0x200005bf931 ; ret
0x00000200005c0825 : jrcxz 0x200005c086d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005c0e7a : jrcxz 0x200005c0ec6 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005c1549 : jrcxz 0x200005c15aa ; ret
0x00000200005c1810 : jrcxz 0x200005c1859 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200005c22e5 : jrcxz 0x200005c232d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c2aa9 : jrcxz 0x200005c2b0a ; ret
0x00000200005c322c : jrcxz 0x200005c3278 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005c3794 : jrcxz 0x200005c37dd ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200005c5d19 : jrcxz 0x200005c5d62 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c6be1 : jrcxz 0x200005c6c42 ; ret
0x00000200005c6cb1 : jrcxz 0x200005c6d12 ; ret
0x00000200005c6d88 : jrcxz 0x200005c6dce ; pop rsi ; ret
0x00000200005c6e91 : jrcxz 0x200005c6ed7 ; pop rsi ; ret
0x00000200005c7004 : jrcxz 0x200005c704d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c710d : jrcxz 0x200005c7153 ; pop rsi ; ret
0x00000200005c727c : jrcxz 0x200005c72c5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c73f3 : jrcxz 0x200005c743c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005c7c6f : jrcxz 0x200005c7cd2 ; ret
0x00000200005c7d0c : jrcxz 0x200005c7d6f ; ret
0x00000200005c921e : jrcxz 0x200005c926a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005cbacf : jrcxz 0x200005cbb1b ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005cc8d3 : jrcxz 0x200005cc91d ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005ccc3f : jrcxz 0x200005ccc89 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005cd15c : jrcxz 0x200005cd1a6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005cf916 : jrcxz 0x200005cf95f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005cfa03 : jrcxz 0x200005cfa4c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005cfddc : jrcxz 0x200005cfe24 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005d034f : jrcxz 0x200005d0395 ; pop rdi ; ret
0x00000200005d0480 : jrcxz 0x200005d04e3 ; ret
0x00000200005d3235 : jrcxz 0x200005d327d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005e2eaf : jrcxz 0x200005e2eb8 ; mov eax, dword ptr [rcx + 0x110] ; ret
0x00000200005fc3e2 : jrcxz 0x200005fc3ec ; nop ; jmp 0x20000391ffd
0x00000200005fc46a : jrcxz 0x200005fc474 ; nop ; jmp 0x200003e03bd
0x000002000060589e : jrcxz 0x200006058e7 ; pop rdi ; pop r12 ; pop rbp ; ret
0x0000020000605bee : jrcxz 0x20000605c0d ; int1 ; push rsi ; ret
0x00000200006095a9 : jrcxz 0x200006095bd ; ret 0xc133
0x00000200006095a8 : jrcxz 0x200006095be ; ret 0xc133
0x000002000061845b : jrcxz 0x200006184bc ; ret
0x000002000062023e : jrcxz 0x20000620247 ; jmp 0x2000052441e
0x00000200006342fc : jrcxz 0x2000063435d ; ret
0x0000020000634c82 : jrcxz 0x20000634cc8 ; pop rsi ; ret
0x0000020000635646 : jrcxz 0x20000635692 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006357bd : jrcxz 0x20000635806 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000636158 : jrcxz 0x200006361a0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000637714 : jrcxz 0x2000063775c ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000637886 : jrcxz 0x200006378cf ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000063ef92 : jrcxz 0x2000063eff5 ; ret
0x000002000063f095 : jrcxz 0x2000063f0fa ; ret
0x0000020000640424 : jrcxz 0x2000064046a ; pop rdi ; ret
0x0000020000640d7c : jrcxz 0x20000640ddf ; ret
0x0000020000642d09 : jrcxz 0x20000642d1c ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200006442b9 : jrcxz 0x2000064426c ; ret
0x0000020000647040 : jrcxz 0x20000647089 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064782e : jrcxz 0x20000647878 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000647b14 : jrcxz 0x20000647b5c ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000648163 : jrcxz 0x200006481ab ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064b7d7 : jrcxz 0x2000064b820 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064b8ac : jrcxz 0x2000064b90f ; ret
0x000002000064d4a8 : jrcxz 0x2000064d50b ; ret
0x000002000064d748 : jrcxz 0x2000064d7ab ; ret
0x000002000064dab3 : jrcxz 0x2000064da85 ; inc ebx ; mov eax, 0xc000000d ; ret
0x000002000064fcae : jrcxz 0x2000064fd11 ; ret
0x0000020000653f27 : jrcxz 0x20000653f70 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065519f : jrcxz 0x200006551eb ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000655c99 : jrcxz 0x20000655ce5 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200006561b9 : jrcxz 0x2000065621c ; ret
0x00000200006564dd : jrcxz 0x20000656525 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000065659d : jrcxz 0x20000656600 ; ret
0x00000200006592eb : jrcxz 0x20000659333 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000065ca94 : jrcxz 0x2000065cade ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065d551 : jrcxz 0x2000065d59b ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065d68e : jrcxz 0x2000065d6d8 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065e12c : jrcxz 0x2000065e176 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065fba7 : jrcxz 0x2000065fbf1 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000661282 : jrcxz 0x200006612ce ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006617a8 : jrcxz 0x200006617f4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006643e8 : jrcxz 0x200006643a8 ; ret 0xff
0x00000200006645e5 : jrcxz 0x20000664648 ; ret
0x0000020000665361 : jrcxz 0x200006652f0 ; ret 0x48ff
0x0000020000665519 : jrcxz 0x200006654c8 ; ret 0x48ff
0x00000200006bab5c : jrcxz 0x200006babbd ; ret
0x00000200006bb8b2 : jrcxz 0x200006bb913 ; ret
0x00000200006bbd5a : jrcxz 0x200006bbdbb ; ret
0x00000200006bd0a2 : jrcxz 0x200006bd103 ; ret
0x00000200006bdb70 : jrcxz 0x200006bdbd1 ; ret
0x00000200006be2f9 : jrcxz 0x200006be342 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006be49b : jrcxz 0x200006be4fc ; ret
0x00000200006bebc7 : jrcxz 0x200006bec0f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006beee1 : jrcxz 0x200006bef2a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006bf991 : jrcxz 0x200006bf9d9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006c0505 : jrcxz 0x200006c054f ; pop rsi ; pop r13 ; pop r12 ; ret
0x00000200006c0b12 : jrcxz 0x200006c0b5a ; pop rsp ; pop rdi ; pop rsi ; ret
0x00000200006c1226 : jrcxz 0x200006c126f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c1483 : jrcxz 0x200006c14cc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c2494 : jrcxz 0x200006c24e0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006c262d : jrcxz 0x200006c2673 ; pop rsi ; ret
0x00000200006c2add : jrcxz 0x200006c2b29 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006c30a2 : jrcxz 0x200006c3103 ; ret
0x00000200006c3322 : jrcxz 0x200006c3383 ; ret
0x00000200006c362c : jrcxz 0x200006c368d ; ret
0x00000200006c4899 : jrcxz 0x200006c48e1 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006c4a3a : jrcxz 0x200006c4a86 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006c4ec0 : jrcxz 0x200006c4f21 ; ret
0x00000200006c5636 : jrcxz 0x200006c567e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006c582b : jrcxz 0x200006c588c ; ret
0x00000200006c64d9 : jrcxz 0x200006c653a ; ret
0x00000200006c66b0 : jrcxz 0x200006c66f8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ca536 : jrcxz 0x200006ca57e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ca8f6 : jrcxz 0x200006ca957 ; ret
0x00000200006cab46 : jrcxz 0x200006caba7 ; ret
0x00000200006cba9d : jrcxz 0x200006cbae5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ccedd : jrcxz 0x200006ccf26 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ce5be : jrcxz 0x200006ce60a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006cea5a : jrcxz 0x200006ceaa6 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200006cf60d : jrcxz 0x200006cf659 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006d03de : jrcxz 0x200006d0441 ; ret
0x00000200006d0b6c : jrcxz 0x200006d0bb5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006e85c1 : jrcxz 0x200006e860a ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200006e987e : jrcxz 0x200006e98c6 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006e9de8 : jrcxz 0x200006e9e30 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ea078 : jrcxz 0x200006ea0c1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ea8f5 : jrcxz 0x200006ea941 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006eb5cf : jrcxz 0x200006eb630 ; ret
0x00000200006ebc8e : jrcxz 0x200006ebcef ; ret
0x00000200006f0249 : jrcxz 0x200006f0291 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f06b9 : jrcxz 0x200006f06a8 ; int 0x80
0x00000200006f1d94 : jrcxz 0x200006f1ddd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f1ef6 : jrcxz 0x200006f1f45 ; add esp, 0x28 ; ret
0x00000200006f24ac : jrcxz 0x200006f24f5 ; pop rdi ; pop r12 ; pop rdi ; ret
0x00000200006f374e : jrcxz 0x200006f3797 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f3def : jrcxz 0x200006f3e50 ; ret
0x00000200006f5d1f : jrcxz 0x200006f5d80 ; ret
0x00000200006f6aa6 : jrcxz 0x200006f6aef ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200006f6c8e : jrcxz 0x200006f6cd6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f6f96 : jrcxz 0x200006f6fdf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f740f : jrcxz 0x200006f7457 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f7bee : jrcxz 0x200006f7c36 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f7e9a : jrcxz 0x200006f7ee6 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006f7fac : jrcxz 0x200006f800d ; ret
0x00000200006f939e : jrcxz 0x200006f93ea ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006fe419 : jrcxz 0x200006fe461 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006ff187 : jrcxz 0x200006ff1e8 ; ret
0x00000200006ff802 : jrcxz 0x200006ff84b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007028d6 : jrcxz 0x2000070291f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000703d02 : jrcxz 0x20000703d63 ; ret
0x000002000070428b : jrcxz 0x200007042d7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000704564 : jrcxz 0x2000070455a ; add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x0000020000704f9f : jrcxz 0x20000705000 ; ret
0x00000200007050d6 : jrcxz 0x2000070511f ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007053bb : jrcxz 0x20000705403 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007080a8 : jrcxz 0x200007080f0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000070ef4c : jrcxz 0x2000070ef9d ; mov dword ptr [rbp - 0x10], ebx ; call 0x200000fb20f
0x00000200000034bd : js 0x200000034c9 ; add byte ptr [rax], al ; mov byte ptr [rcx + 0x31], al ; mov r8d, edx ; jmp 0x200000034a1
0x000002000000aa7c : js 0x2000000aa8b ; add bh, bh ; ret
0x000002000000ca71 : js 0x2000000caa0 ; ret
0x000002000000e6a5 : js 0x2000000e6b4 ; mov eax, 1 ; ret
0x0000020000014bff : js 0x20000014c0c ; add rsp, 0x28 ; ret
0x000002000001b130 : js 0x2000001b180 ; add esp, 0x50 ; pop rdi ; ret
0x000002000001be97 : js 0x2000001be91 ; mov rax, rdx ; ret
0x000002000001be97 : js 0x2000001be92 ; mov rax, rdx ; ret
0x000002000001d739 : js 0x2000001d74d ; add rsp, 0x28 ; ret
0x000002000001d97f : js 0x2000001d991 ; mov rax, rdx ; ret
0x000002000001d97f : js 0x2000001d992 ; mov rax, rdx ; ret
0x000002000001e259 : js 0x2000001e271 ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x0000020000020ee9 : js 0x20000020ede ; mov rax, rdx ; ret
0x0000020000021ebe : js 0x20000021ecf ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x0000020000023938 : js 0x200000238c8 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000368ed : js 0x2000003687c ; ret 0x8349
0x0000020000036c95 : js 0x20000036ce5 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000038ada : js 0x20000038af9 ; add bl, dh ; ret
0x0000020000038ad9 : js 0x20000038afa ; add bl, dh ; ret
0x000002000003c1ef : js 0x2000003c1f8 ; xor al, al ; ret
0x000002000003e066 : js 0x2000003e0b9 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000004d219 : js 0x2000004d220 ; add bl, ch ; ret 0x90cc
0x0000020000051df8 : js 0x20000051e4b ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000539e9 : js 0x20000053a35 ; pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000539f8 : js 0x20000053a44 ; pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000053aec : js 0x20000053b38 ; pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000054a1e : js 0x20000054a28 ; mov al, dl ; ret
0x0000020000054a1e : js 0x20000054a29 ; mov al, dl ; ret
0x0000020000058795 : js 0x200000587ad ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x00000200000629cc : js 0x20000062a1c ; add esp, 0x50 ; pop rbp ; ret
0x0000020000067f93 : js 0x20000067fb4 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000069a26 : js 0x20000069a72 ; pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000006b184 : js 0x2000006b1d4 ; add esp, 0x60 ; pop rbp ; ret
0x00000200000829a1 : js 0x20000082a23 ; ret
0x000002000009030b : js 0x200000902af ; loopne 0x20000090379 ; clc ; jbe 0x20000090385 ; popfq ; ret
0x000002000009030a : js 0x200000902b0 ; loopne 0x2000009037a ; clc ; jbe 0x20000090386 ; popfq ; ret
0x00000200000914ac : js 0x200000914df ; xor edi, edi ; out dx, al ; jp 0x2000009150f ; ret 0x7ec2
0x000002000009165f : js 0x20000091623 ; rcl bh, 1 ; mov dl, 0x76 ; ret 0xbb54
0x000002000009193b : js 0x200000919ad ; ret
0x00000200000b1e19 : js 0x200000b1e7f ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b2123 : js 0x200000b2189 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000bada6 : js 0x200000badaf ; xor al, al ; ret
0x00000200000be33d : js 0x200000be390 ; add esp, 0x50 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000bf6b2 : js 0x200000bf641 ; ret 0xba0f
0x00000200000c03a5 : js 0x200000c03ae ; xor eax, eax ; ret
0x00000200000d536e : js 0x200000d53b9 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000d547d : js 0x200000d54c8 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000d5adf : js 0x200000d5b2a ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000e0b25 : js 0x200000e0b75 ; add esp, 0x50 ; pop rdi ; ret
0x00000200000ec04f : js 0x200000ec060 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000ecb21 : js 0x200000ecb1b ; ret
0x00000200000f8b4f : js 0x200000f8b5b ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x200000a4e59
0x000002000010c639 : js 0x2000010c651 ; add byte ptr [rsi + rbp*8 - 1], dh ; ret
0x000002000010c93d : js 0x2000010c98d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000112363 : js 0x200001122f2 ; ret
0x0000020000112d0c : js 0x20000112d4b ; ret
0x00000200001233b9 : js 0x200001233cc ; add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200001233b8 : js 0x200001233cd ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000012989e : js 0x2000012982d ; ret
0x0000020000129eb0 : js 0x20000129ec4 ; add rsp, 0x28 ; ret
0x000002000012b8c3 : js 0x2000012b851 ; ret
0x000002000012d0bc : js 0x2000012d108 ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001373a3 : js 0x20000137375 ; add al, 3 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x4f89
0x000002000013b3de : js 0x2000013b3ee ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000013f075 : js 0x2000013f004 ; ret
0x0000020000140261 : js 0x200001402b1 ; add esp, 0x50 ; pop rdi ; ret
0x000002000014ae4b : js 0x2000014ae5e ; test cl, 0x3f ; je 0x2000014ae5d ; inc eax ; ret
0x000002000014ae6b : js 0x2000014ae7e ; test cl, 0x20 ; je 0x2000014ae7d ; inc eax ; ret
0x00000200001517aa : js 0x200001517ad ; push rsi ; ret
0x00000200001592ea : js 0x200001592fb ; sub r8, r9 ; mov qword ptr [rdx], r8 ; ret
0x000002000016b6f6 : js 0x2000016b749 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000016f972 : js 0x2000016f9c3 ; add esp, 0x50 ; pop r13 ; ret
0x000002000017097c : js 0x2000017090b ; ret
0x0000020000171d9a : js 0x20000171dea ; add esp, 0x60 ; pop rdi ; ret
0x0000020000185452 : js 0x200001854a3 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001879eb : js 0x20000187a3b ; add esp, 0x60 ; pop rdi ; ret
0x0000020000193ea1 : js 0x20000193e2f ; ret
0x000002000019511f : js 0x2000019516f ; add esp, 0x60 ; pop rbp ; ret
0x0000020000197586 : js 0x20000197595 ; mov eax, 0xc00000bb ; ret
0x00000200001a4119 : js 0x200001a416a ; add esp, 0x50 ; pop r14 ; ret
0x00000200001a8fd6 : js 0x200001a8f65 ; ret
0x00000200001aaaec : js 0x200001aaa7b ; ret
0x00000200001b3a4e : js 0x200001b3a5f ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x00000200001b3c20 : js 0x200001b3c31 ; sub r8, r9 ; mov qword ptr [rdx], r8 ; ret
0x00000200001b5fbd : js 0x200001b600d ; add esp, 0x20 ; pop rdi ; ret
0x00000200001b5fbc : js 0x200001b600e ; add esp, 0x20 ; pop rdi ; ret
0x00000200001b6e9e : js 0x200001b6ef1 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001bf2d4 : js 0x200001bf2e5 ; sub r8, r9 ; mov qword ptr [rdx], r8 ; ret
0x00000200001e60ea : js 0x200001e60d8 ; inc dword ptr [rbp - 0x7c] ; ret
0x00000200001e719d : js 0x200001e71b0 ; add r8, 8 ; inc r10 ; jmp 0x200001e7195
0x00000200002088a9 : js 0x200002088d3 ; add byte ptr [rdx], al ; or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x0000020000270f4b : js 0x20000270fae ; pop rbp ; ret
0x000002000027105f : js 0x200002710c2 ; pop rbp ; ret
0x000002000035d820 : js 0x2000035d870 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000361581 : js 0x200003615d4 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003626fe : js 0x2000036274e ; add esp, 0x60 ; pop rdi ; ret
0x00000200003681ca : js 0x200003681f9 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x0000020000368a7f : js 0x20000368acf ; add esp, 0x50 ; pop rbp ; ret
0x0000020000378cac : js 0x20000378cb5 ; xor eax, eax ; ret
0x0000020000378d61 : js 0x20000378d6a ; xor eax, eax ; ret
0x000002000037c29a : js 0x2000037c229 ; ret
0x000002000037eba7 : js 0x2000037ebf7 ; add esp, 0x50 ; pop rbp ; ret
0x00000200003805b3 : js 0x20000380604 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003882fc : js 0x2000038834d ; add esp, 0x50 ; pop r14 ; ret
0x000002000038dd2b : js 0x2000038dd34 ; add byte ptr [rax], al ; ret
0x000002000039f473 : js 0x2000039f4c5 ; lea edx, dword ptr [rbp - 0x50] ; mov rcx, r10 ; call rax
0x000002000039f543 : js 0x2000039f595 ; lea edx, dword ptr [rbp - 0x50] ; mov rcx, r10 ; call rax
0x00000200003a83ed : js 0x200003a843f ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003a8bbb : js 0x200003a8c0c ; add esp, 0x50 ; pop r15 ; ret
0x00000200003ab397 : js 0x200003ab32d ; ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop r14 ; ret
0x00000200003b5d45 : js 0x200003b5cd4 ; ret
0x00000200003b6daf : js 0x200003b6d3d ; ret
0x00000200003bfbd7 : js 0x200003bfc27 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c01a5 : js 0x200003c01f5 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003c06ab : js 0x200003c06b7 ; add byte ptr [rax], al ; ret
0x00000200003c419b : js 0x200003c412a ; ret
0x00000200003cf7b5 : js 0x200003cf81b ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003cf82c : js 0x200003cf892 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003d2887 : js 0x200003d2816 ; ret
0x00000200003de20b : js 0x200003de19a ; ret
0x00000200003e27bb : js 0x200003e27ad ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003f5491 : js 0x200003f5482 ; test eax, 0x8bffc7d9 ; ret
0x00000200003f9480 : js 0x200003f949d ; cmp eax, 3 ; jg 0x200003f949d ; xor eax, eax ; ret
0x00000200003fd100 : js 0x200003fd10c ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000040c33f : js 0x2000040c38f ; add esp, 0x50 ; pop rbx ; ret
0x000002000040d118 : js 0x2000040d16a ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000411309 : js 0x20000411359 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000412f33 : js 0x20000412f2d ; ret
0x0000020000416e9c : js 0x20000416eec ; add esp, 0x60 ; pop rbp ; ret
0x0000020000417c40 : js 0x20000417c68 ; and eax, edx ; ret
0x0000020000417c40 : js 0x20000417c69 ; and eax, edx ; ret
0x000002000041b786 : js 0x2000041b7d6 ; add esp, 0x60 ; pop rdi ; ret
0x000002000041c836 : js 0x2000041c7c5 ; ret
0x0000020000420b5c : js 0x20000420b8f ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000042c659 : js 0x2000042c6a9 ; add esp, 0x20 ; pop rbx ; ret
0x000002000042c658 : js 0x2000042c6aa ; add esp, 0x20 ; pop rbx ; ret
0x0000020000433fb7 : js 0x2000043400a ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000433fca : js 0x2000043401d ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000043aa0d : js 0x2000043aa54 ; pop rsi ; pop rsi ; ret
0x0000020000446257 : js 0x200004462a7 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000448e98 : js 0x20000448ea3 ; setb al ; movzx eax, al ; ret
0x0000020000448ea5 : js 0x20000448eb0 ; setb al ; movzx eax, al ; ret
0x0000020000467acd : js 0x20000467b1e ; add esp, 0x50 ; pop r14 ; ret
0x000002000046a726 : js 0x2000046a776 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000471c74 : js 0x20000471c3e ; add eax, 0xfc08500 ; test dh, al ; ret 0x18
0x0000020000472575 : js 0x200004725d9 ; pop rbx ; ret
0x0000020000475782 : js 0x200004757d2 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004772e9 : js 0x20000477339 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000477d04 : js 0x20000477cd9 ; ret 0x48ff
0x00000200004797d8 : js 0x20000479829 ; add esp, 0x50 ; pop r15 ; ret
0x000002000047b31a : js 0x2000047b380 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000047d691 : js 0x2000047d620 ; ret
0x000002000047daec : js 0x2000047dac3 ; call qword ptr [rax + 0x1817c2e9]
0x000002000047f905 : js 0x2000047f958 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004828dc : js 0x2000048286b ; ret
0x0000020000484185 : js 0x200004841d6 ; add esp, 0x50 ; pop r15 ; ret
0x0000020000488542 : js 0x200004885a8 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000494481 : js 0x20000494410 ; ret
0x000002000049528d : js 0x200004952dd ; add esp, 0x60 ; pop rdi ; ret
0x000002000049ad93 : js 0x2000049ad22 ; ret
0x000002000049d01f : js 0x2000049cfae ; ret
0x00000200004a9c4c : js 0x200004a9c9c ; add esp, 0x50 ; pop rbx ; ret
0x00000200004aa351 : js 0x200004aa2e0 ; ret
0x00000200004aa6d6 : js 0x200004aa727 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004b0487 : js 0x200004b04d8 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004b79f2 : js 0x200004b7a43 ; add esp, 0x50 ; pop r14 ; ret
0x000002000049f9dc : js 0x200004bbc54 ; jmp 0x200004bbc1e
0x00000200004cb393 : js 0x200004cb322 ; ret
0x00000200004cf875 : js 0x200004cf8c6 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004cfe4c : js 0x200004cfe9f ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004ef0fb : js 0x200004ef08a ; ret
0x00000200004f41f7 : js 0x200004f4186 ; ret
0x00000200004f48ed : js 0x200004f4920 ; add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x00000200004f7108 : js 0x200004f709e ; lea esp, dword ptr [rbx + rbp*4 - 1] ; dec dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200004fec18 : js 0x200004feba7 ; ret
0x000002000051215d : js 0x200005120ec ; ret
0x000002000051f673 : js 0x2000051f602 ; ret
0x0000020000524034 : js 0x20000523fc3 ; ret
0x0000020000525e9e : js 0x20000525e2d ; ret
0x0000020000529496 : js 0x200005294e6 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000534ff5 : js 0x20000535046 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000548063 : js 0x200005480b3 ; add esp, 0x50 ; pop rbp ; ret
0x000002000054a642 : js 0x2000054a692 ; add esp, 0x60 ; pop rbp ; ret
0x000002000054a958 : js 0x2000054a9ab ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000054aa84 : js 0x2000054aa13 ; ret
0x000002000054f5dc : js 0x2000054f62d ; add esp, 0x50 ; pop r14 ; ret
0x000002000055fbc2 : js 0x2000055fb50 ; ret
0x0000020000569ce2 : js 0x20000569d35 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000056ae91 : js 0x2000056ae20 ; ret
0x0000020000578ed9 : js 0x20000578f29 ; add esp, 0x60 ; pop rdi ; ret
0x000002000057a4eb : js 0x2000057a53c ; add esp, 0x50 ; pop r15 ; ret
0x000002000057b10b : js 0x2000057b148 ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x0000020000581fe2 : js 0x20000582032 ; add esp, 0x60 ; pop rdi ; ret
0x000002000059f072 : js 0x2000059f001 ; ret
0x00000200005a3c6a : js 0x200005a3bf9 ; ret
0x00000200005b10fe : js 0x200005b114e ; add esp, 0x50 ; pop rdi ; ret
0x00000200005b4e41 : js 0x200005b4dd0 ; ret
0x00000200005b985a : js 0x200005b97f0 ; add byte ptr [rbp - 0x73], al ; pop rdi ; add dword ptr [rbp + 0x63], ecx ; ret
0x00000200005b9acc : js 0x200005b9b4c ; test byte ptr [rax - 0x75], 0x41 ; cmp byte ptr [rax - 1], cl ; ret
0x00000200005c2e26 : js 0x200005c2e6c ; xor edx, edx ; mov rcx, rdi ; call 0x200000cf0ed
0x00000200005c7e36 : js 0x200005c7e87 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005cb45d : js 0x200005cb3ec ; ret
0x00000200005cb8a3 : js 0x200005cb832 ; ret
0x00000200005cd658 : js 0x200005cd5e7 ; ret
0x00000200005e04e2 : js 0x200005e049d ; lock inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x00000200005e31d3 : js 0x200005e31d6 ; ret 0xc148
0x00000200005e31d2 : js 0x200005e31d7 ; ret 0xc148
0x00000200005e31d1 : js 0x200005e31d8 ; ret 0xc148
0x00000200005e31d0 : js 0x200005e31d9 ; ret 0xc148
0x0000020000600cbb : js 0x20000600ceb ; add byte ptr [rsp + rdx*2 - 0xa], dh ; ret
0x0000020000617b73 : js 0x20000617b02 ; or cl, byte ptr [rax - 1] ; ret 0x8445
0x00000200006449b0 : js 0x20000644945 ; ror byte ptr [rbx - 0x49791718], 1 ; ret 0x48ff
0x0000020000665253 : js 0x20000665205 ; ret 0x1ff
0x0000020000666abc : js 0x20000666b36 ; ret 0xe8ff
0x0000020000666dfc : js 0x20000666e71 ; ret 0x48ff
0x00000200006bb594 : js 0x200006bb52b ; sar edi, -0x18 ; ret
0x00000200006bd421 : js 0x200006bd471 ; add esp, 0x50 ; pop rbp ; ret
0x00000200006c1c9b : js 0x200006c1ceb ; add esp, 0x60 ; pop rdi ; ret
0x00000200006c7334 : js 0x200006c72f6 ; inc dword ptr [rax] ; ret
0x00000200006c8c34 : js 0x200006c8be4 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200006ca3b6 : js 0x200006ca344 ; ret
0x00000200006cb0de : js 0x200006cb131 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006cb8d4 : js 0x200006cb863 ; ret
0x00000200006cbd4d : js 0x200006cbd9d ; add esp, 0x50 ; pop rbp ; ret
0x00000200006d913f : js 0x200006d914f ; mov rcx, r15 ; call r9
0x00000200006da5e6 : js 0x200006da5f6 ; mov rcx, r15 ; call r9
0x00000200006f4181 : js 0x200006f41d1 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007072f4 : js 0x20000707344 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000128ac8 : lahf ; add al, 0 ; add dh, dh ; ret
0x000002000002aa38 : lahf ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004d4e77 : lahf ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000c5160 : lahf ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x45], cl ; sbb dh, dh ; ret
0x0000020000482fa1 : lahf ; call 0x1ffe8482faf
0x000002000062591f : lahf ; call qword ptr [rax - 0x28ef3d17]
0x00000200006300f6 : lahf ; call qword ptr [rax - 0x2afd3d17]
0x0000020000381cb3 : lahf ; call qword ptr [rax]
0x00000200006312a0 : lahf ; call r15
0x000002000014f33d : lahf ; clc ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017f827 : lahf ; cld ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000002000008f1a0 : lahf ; cmp dl, byte ptr [rbx + rax*4 - 0x20] ; mov cl, 0x18 ; pop rax ; ret 0x4609
0x00000200007065e7 : lahf ; dec dword ptr [rax - 0x75] ; ret
0x000002000017810f : lahf ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x000002000060c642 : lahf ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x66a8
0x00000200000c701d : lahf ; inc dword ptr [rbp + 0x3b] ; ret 0x850f
0x000002000039afa3 : lahf ; jmp 0x2000039af6b
0x00000200004c9bae : lahf ; jmp 0x200004c9b76
0x00000200005170ad : lahf ; jmp rbx
0x00000200003be343 : lahf ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000538040 : lahf ; mov ebp, 0x1d8a44ff ; salc ; ret 0xffd9
0x00000200004fa00a : lahf ; mov r8, r15 ; mov rdx, rsi ; call rax
0x00000200004cfa95 : lahf ; mov rcx, qword ptr [rsp + 0x48] ; call 0x200000f22c9
0x000002000008e2cc : lahf ; mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x00000200004f66c3 : lahf ; or eax, ebp ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000405076 : lahf ; out 0xff, al ; add rsp, 0x28 ; ret
0x000002000008dde7 : lahf ; push rcx ; sub esi, eax ; ret
0x000002000008db7f : lahf ; ret
0x000002000004744d : lahf ; ret 0x19
0x00000200006661ae : lahf ; ret 0x3bff
0x0000020000661a68 : lahf ; ret 0x41ff
0x00000200006661d4 : lahf ; ret 0x45ff
0x000002000048fb2c : lahf ; ret 0x48ff
0x00000200006661a2 : lahf ; ret 0x8bff
0x00000200004e1f4d : lahf ; ret 0x90ff
0x000002000050dc56 : lahf ; ret 0xa3e9
0x0000020000661abe : lahf ; ret 0xbaff
0x00000200003f6206 : lahf ; ret 0xe9ff
0x0000020000661af9 : lahf ; ret 0xebff
0x000002000070ef65 : lahf ; ret 0xff9e
0x00000200005c3d9d : lahf ; ret 0xffca
0x00000200004c3d9d : lahf ; ret 0xffda
0x000002000053c8b5 : lahf ; ret 0xffe9
0x00000200005eef1a : lahf ; ret 0xfff0
0x000002000069b25f : lahf ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069b272
0x000002000069e48e : lahf ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e4a1
0x00000200006d6d6e : lahf ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6d81
0x000002000008f7d6 : lahf ; sbb ah, al ; ret
0x00000200004c525d : lahf ; sbb eax, 0x3b48ffe9 ; ret 0x1177
0x000002000002b98d : lahf ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000200004275bd : lahf ; scasb al, byte ptr [rdi] ; ret 0x33ff
0x00000200005854ad : lahf ; stc ; mov cl, 0xff ; add rsp, 0x78 ; ret
0x00000200004ce2ad : lahf ; stosb byte ptr [rdi], al ; ret 0xebff
0x000002000062afb3 : lahf ; xlatb ; push rsi ; ret 0xf04
0x0000020000127147 : lahf ; xor edx, edx ; call 0x200001533dd
0x0000020000127146 : lahf ; xor edx, edx ; call 0x200001533de
0x00000200002002a0 : lahf ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000008b999 : lcall ptr [rbx + rbx*2 + 0x12] ; add esi, edx ; call qword ptr [rcx]
0x000002000003fe49 : lcall ptr [rbx] ; add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200003b43d4 : lcall ptr [rdi + 0x5b] ; ret
0x000002000058f747 : lcall ptr [rdi] ; add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000015305d : lds r12d, ptr [r14 - 1] ; ret 0x4166
0x00000200001e50fe : lds r8d, ptr [r11] ; ret
0x0000020000137ad4 : lds r8d, ptr [r9 + 3] ; ret
0x00000200000d5399 : lds r9d, ptr [r8 - 0x75] ; call 0x200000c1691
0x000002000037873b : lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000019c09f : lea eax, dword ptr [r8 + 1] ; ret
0x00000200004a96e2 : lea eax, dword ptr [r8 + r8] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200003b1c0c : lea eax, dword ptr [r8 + r9] ; ret
0x00000200006d1104 : lea eax, dword ptr [r8 - 0x37] ; jmp 0x200006d10d2
0x0000020000162101 : lea eax, dword ptr [r9 + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000411e39 : lea eax, dword ptr [r9 + r10] ; ret
0x000002000012c0d2 : lea eax, dword ptr [rax + 0x41000000] ; mov edx, edi ; call rax
0x000002000012bc96 : lea eax, dword ptr [rax + 0x41000000] ; mov edx, esi ; call r11
0x000002000037873c : lea eax, dword ptr [rax + 0x48] ; ret
0x00000200005848e0 : lea eax, dword ptr [rax + 1] ; call 0x20000580b95
0x000002000019c0a0 : lea eax, dword ptr [rax + 1] ; ret
0x0000020000190307 : lea eax, dword ptr [rax + rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004a96e3 : lea eax, dword ptr [rax + rax] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200005c6a92 : lea eax, dword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa6
0x00000200000ee85c : lea eax, dword ptr [rax + rcx*8] ; ret
0x00000200003b1c0d : lea eax, dword ptr [rax + rcx] ; ret
0x0000020000441d78 : lea eax, dword ptr [rax + rdx*4] ; ret
0x00000200003b956b : lea eax, dword ptr [rax - 0x30] ; mov rax, r8 ; ret
0x00000200006d1105 : lea eax, dword ptr [rax - 0x37] ; jmp 0x200006d10d1
0x0000020000178bf2 : lea eax, dword ptr [rax - 0x90] ; mov rax, r8 ; ret
0x00000200003ec6e9 : lea eax, dword ptr [rax - 0xfffffe] ; ret
0x00000200000521a0 : lea eax, dword ptr [rax*4 + 8] ; ret
0x000002000063f43f : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000004cfdb : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add al, 0xe9 ; ret
0x000002000046b2cb : lea eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200005b8800 : lea eax, dword ptr [rbp + 0x40] ; mov ecx, edx ; call 0x20000054adb
0x000002000069b9c2 : lea eax, dword ptr [rbp + 0xd8] ; xor ecx, ecx ; call r9
0x0000020000632101 : lea eax, dword ptr [rbp - 0x38] ; mov edx, r14d ; call rax
0x000002000039bc1b : lea eax, dword ptr [rbp - 0x40] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003b5ad8 : lea eax, dword ptr [rbp - 0x40] ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x0000020000017d22 : lea eax, dword ptr [rbx + 0x20] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000479b28 : lea eax, dword ptr [rbx + 0x70] ; mov rbp, r9 ; call 0x200000a3959
0x000002000011b011 : lea eax, dword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019b02f : lea eax, dword ptr [rbx + rcx*2] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000014463d : lea eax, dword ptr [rbx + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000640adc : lea eax, dword ptr [rbx + rdx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e4394 : lea eax, dword ptr [rcx + 0x10] ; ret
0x000002000002d936 : lea eax, dword ptr [rcx + 0x18] ; mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000162102 : lea eax, dword ptr [rcx + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000129475 : lea eax, dword ptr [rcx + 0x38] ; ret
0x00000200000dfb0d : lea eax, dword ptr [rcx + 0x438] ; ret
0x0000020000159eb9 : lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x00000200003c06a9 : lea eax, dword ptr [rcx + 0x678] ; ret
0x00000200003c06b8 : lea eax, dword ptr [rcx + 0x680] ; ret
0x00000200000d5b6a : lea eax, dword ptr [rcx + 0x70] ; jae 0x200000d5b7b ; mov qword ptr [r8], rax ; ret
0x000002000010a970 : lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000065c40a : lea eax, dword ptr [rcx + 1] ; cmovne ecx, eax ; mov eax, ecx ; ret
0x00000200005c5531 : lea eax, dword ptr [rcx + 1] ; mov rcx, r15 ; call rsi
0x000002000004e941 : lea eax, dword ptr [rcx + 1] ; ret
0x00000200005c53b9 : lea eax, dword ptr [rcx + 2] ; mov rcx, r15 ; call rsi
0x00000200003aa2f4 : lea eax, dword ptr [rcx + 2] ; ret
0x00000200003b3074 : lea eax, dword ptr [rcx + 3] ; ret
0x0000020000664289 : lea eax, dword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x000002000010a951 : lea eax, dword ptr [rcx + 4] ; ret
0x00000200003aa304 : lea eax, dword ptr [rcx + 5] ; ret
0x000002000051dce7 : lea eax, dword ptr [rcx + 6] ; call 0x2000014b866
0x000002000010a960 : lea eax, dword ptr [rcx + 6] ; ret
0x0000020000073979 : lea eax, dword ptr [rcx + rax - 1] ; ret
0x000002000007397f : lea eax, dword ptr [rcx + rax - 2] ; ret
0x0000020000073985 : lea eax, dword ptr [rcx + rax - 3] ; ret
0x000002000007398b : lea eax, dword ptr [rcx + rax - 4] ; ret
0x0000020000073991 : lea eax, dword ptr [rcx + rax - 5] ; ret
0x0000020000073997 : lea eax, dword ptr [rcx + rax - 6] ; ret
0x000002000007399d : lea eax, dword ptr [rcx + rax - 7] ; ret
0x00000200000739a3 : lea eax, dword ptr [rcx + rax - 8] ; ret
0x00000200000cf0eb : lea eax, dword ptr [rcx + rax*4] ; ret
0x00000200005ad1c4 : lea eax, dword ptr [rcx + rcx*4] ; add rsp, 0x28 ; ret
0x00000200004f22ad : lea eax, dword ptr [rcx + rdx] ; cmp eax, edx ; ja 0x200004f22c0 ; mov eax, ecx ; ret
0x0000020000411e3a : lea eax, dword ptr [rcx + rdx] ; ret
0x000002000003bb95 : lea eax, dword ptr [rcx - 0x10] ; ret
0x000002000041d421 : lea eax, dword ptr [rcx - 1] ; ret
0x00000200003c7950 : lea eax, dword ptr [rcx*4 + 8] ; ret
0x000002000002a41f : lea eax, dword ptr [rcx*8 + 0x30] ; ret
0x000002000049e2f7 : lea eax, dword ptr [rcx*8 + 0x98] ; ret
0x00000200000deb64 : lea eax, dword ptr [rdi + 7] ; jmp 0x200001f6d89
0x00000200004a983f : lea eax, dword ptr [rdi] ; ret
0x0000020000475ce0 : lea eax, dword ptr [rdx + 0x10] ; call 0x200000a3956
0x0000020000606bb0 : lea eax, dword ptr [rdx + 0x10] ; call 0x200000a3957
0x000002000047680d : lea eax, dword ptr [rdx + 0x20] ; call 0x200000a3956
0x000002000047beff : lea eax, dword ptr [rdx + 0x28] ; call 0x200000a3956
0x00000200005367bd : lea eax, dword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x00000200001f767e : lea eax, dword ptr [rdx + 0x40] ; mov rcx, rbx ; call 0x200000a3958
0x00000200004876cf : lea eax, dword ptr [rdx + 0x48] ; call 0x200000a3955
0x000002000047707c : lea eax, dword ptr [rdx + 0x58] ; call 0x200000a3956
0x000002000019ca72 : lea eax, dword ptr [rdx + 0xdc00] ; ret
0x00000200005e2272 : lea eax, dword ptr [rdx + 0xe] ; call 0x2000015e535
0x00000200005437fb : lea eax, dword ptr [rdx + 1] ; ret
0x000002000053d88b : lea eax, dword ptr [rdx + 3] ; mov rcx, rdi ; call 0x2000015e539
0x000002000001dc4b : lea eax, dword ptr [rdx + rax*4] ; ret
0x00000200003c333b : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200003c330d
0x00000200001f10f5 : lea eax, dword ptr [rdx + rsi] ; mov word ptr [rbp - 0x80], ax ; jmp 0x2000010d33a
0x0000020000076e56 : lea eax, dword ptr [rdx - 1] ; pop rbx ; ret
0x00000200000a379b : lea eax, dword ptr [rdx*4] ; pop rdi ; ret
0x000002000013b101 : lea eax, dword ptr [rip + 0x1640f1] ; ret
0x00000200004ff6d1 : lea eax, dword ptr [rip + 0x184bf1] ; ret
0x000002000038d41d : lea eax, dword ptr [rip + 0xc37bd] ; ret
0x000002000038d415 : lea eax, dword ptr [rip + 0xc37d5] ; ret
0x000002000038d425 : lea eax, dword ptr [rip + 0xc37f5] ; ret
0x000002000038d40d : lea eax, dword ptr [rip + 0xc383d] ; ret
0x0000020000021dd1 : lea eax, dword ptr [rip + 0xd9c59] ; ret
0x0000020000021e71 : lea eax, dword ptr [rip + 0xdbd79] ; ret
0x0000020000021e50 : lea eax, dword ptr [rip + 0xdbfca] ; ret
0x0000020000021db4 : lea eax, dword ptr [rip + 0xdc026] ; ret
0x0000020000021e11 : lea eax, dword ptr [rip + 0xdc029] ; ret
0x0000020000021da0 : lea eax, dword ptr [rip + 0xdc05a] ; ret
0x0000020000021e5c : lea eax, dword ptr [rip + 0xdc05e] ; ret
0x0000020000021e01 : lea eax, dword ptr [rip + 0xdc089] ; ret
0x0000020000021e09 : lea eax, dword ptr [rip + 0xdc0a1] ; ret
0x0000020000021dac : lea eax, dword ptr [rip + 0xdc0be] ; ret
0x0000020000021d8a : lea eax, dword ptr [rip + 0xdc0d0] ; ret
0x0000020000021e19 : lea eax, dword ptr [rip + 0xdc0f1] ; ret
0x0000020000021e2e : lea eax, dword ptr [rip + 0xdc0fc] ; ret
0x0000020000021dbc : lea eax, dword ptr [rip + 0xdc12e] ; ret
0x0000020000021e3b : lea eax, dword ptr [rip + 0xdc12f] ; ret
0x0000020000021e48 : lea eax, dword ptr [rip + 0xdc142] ; ret
0x0000020000021e69 : lea eax, dword ptr [rip + 0xdc151] ; ret
0x0000020000021df1 : lea eax, dword ptr [rip + 0xdc159] ; ret
0x0000020000021e82 : lea eax, dword ptr [rip + 0xdc188] ; ret
0x0000020000021e26 : lea eax, dword ptr [rip + 0xdc224] ; ret
0x0000020000200907 : lea eax, dword ptr [rip - 0x10292d] ; ret
0x00000200002008f6 : lea eax, dword ptr [rip - 0x104dfc] ; ret
0x000002000057df6e : lea eax, dword ptr [rip - 0x12f294] ; ret
0x000002000057df76 : lea eax, dword ptr [rip - 0x12f2ac] ; ret
0x000002000057df7e : lea eax, dword ptr [rip - 0x12f2c4] ; ret
0x000002000057df86 : lea eax, dword ptr [rip - 0x12f2dc] ; ret
0x000002000057df8e : lea eax, dword ptr [rip - 0x12f2f4] ; ret
0x000002000057df96 : lea eax, dword ptr [rip - 0x12f30c] ; ret
0x000002000057df9e : lea eax, dword ptr [rip - 0x12f324] ; ret
0x000002000057dfa6 : lea eax, dword ptr [rip - 0x12f33c] ; ret
0x00000200005842b1 : lea eax, dword ptr [rip - 0x1336d7] ; ret
0x00000200005842b9 : lea eax, dword ptr [rip - 0x1336ff] ; ret
0x00000200005842c1 : lea eax, dword ptr [rip - 0x133727] ; ret
0x00000200005842c9 : lea eax, dword ptr [rip - 0x13374f] ; ret
0x0000020000112b89 : lea eax, dword ptr [rip - 0x14b5f] ; ret
0x0000020000112b72 : lea eax, dword ptr [rip - 0x14bb8] ; ret
0x0000020000112b7e : lea eax, dword ptr [rip - 0x14bf4] ; ret
0x0000020000112b6a : lea eax, dword ptr [rip - 0x14c00] ; ret
0x0000020000112b5a : lea eax, dword ptr [rip - 0x14c10] ; ret
0x0000020000112b62 : lea eax, dword ptr [rip - 0x14c58] ; ret
0x0000020000112b52 : lea eax, dword ptr [rip - 0x14f68] ; ret
0x0000020000112b2e : lea eax, dword ptr [rip - 0x17034] ; ret
0x000002000045b4a1 : lea eax, dword ptr [rip - 0x1e8e7] ; ret
0x000002000036e6fd : lea eax, dword ptr [rip - 0x41c3] ; ret
0x000002000036e705 : lea eax, dword ptr [rip - 0x41db] ; ret
0x000002000036e70d : lea eax, dword ptr [rip - 0x41f3] ; ret
0x000002000036e715 : lea eax, dword ptr [rip - 0x420b] ; ret
0x000002000036e71d : lea eax, dword ptr [rip - 0x4223] ; ret
0x000002000036e725 : lea eax, dword ptr [rip - 0x423b] ; ret
0x000002000036e72d : lea eax, dword ptr [rip - 0x4253] ; ret
0x000002000036e735 : lea eax, dword ptr [rip - 0x426b] ; ret
0x000002000039bdaf : lea eax, dword ptr [rip - 0xc75f5] ; mov rax, r8 ; ret
0x00000200004921f2 : lea eax, dword ptr [rsi + 0x28] ; mov rcx, rsi ; call 0x2000055e458
0x0000020000644d52 : lea eax, dword ptr [rsp + 0x28] ; mov edx, r15d ; call rdi
0x0000020000567847 : lea eax, dword ptr [rsp + 0x30] ; cmp rbx, rax ; jne 0x2000056781a ; jmp 0x200005678c3
0x000002000014243b : lea eax, dword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x000002000040d916 : lea eax, dword ptr [rsp + 0x48] ; call 0x20000439b36
0x00000200003b41f6 : lea eax, dword ptr [rsp + 0x58] ; call rax
0x000002000001bccf : lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x0000020000407995 : lea eax, dword ptr [rsp + 0x68] ; xor edx, edx ; call r11
0x0000020000163b3b : lea eax, dword ptr [rsp + 0x88] ; call r9
0x00000200000aad64 : lea eax, dword ptr [rsp + 0x98] ; xor edx, edx ; call qword ptr [rsi]
0x000002000007c971 : lea eax, dword ptr [rsp + 8] ; ret
0x000002000063f43e : lea eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000069db1e : lea ebp, dword ptr [rax + 8] ; mov rcx, r13 ; call r9
0x000002000037e217 : lea ebp, dword ptr [rax - 0x49f0000f] ; ret
0x0000020000596614 : lea ebp, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8944
0x000002000005952d : lea ebp, dword ptr [rdi + 5] ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x75] ; ret
0x000002000008f534 : lea ebp, dword ptr [rsi + 0x295fb294] ; faddp st(5) ; ret 0xd4f
0x0000020000640762 : lea ebx, dword ptr [rax + 0x14] ; mov edx, ebx ; call 0x20000270048
0x00000200003eb6d4 : lea ebx, dword ptr [rax - 0x1000000] ; ret
0x000002000001cd36 : lea ebx, dword ptr [rax - 0x10] ; jmp 0x2000001cd02
0x00000200003ba5b2 : lea ebx, dword ptr [rax - 0x10] ; jmp 0x200003ba57d
0x00000200003d9354 : lea ebx, dword ptr [rax - 0x10] ; jmp 0x200003d9320
0x000002000043be3e : lea ebx, dword ptr [rbx - 1] ; jmp 0x2000043be09
0x00000200001a6368 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a6378
0x00000200001a834b : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a835b
0x00000200001a8490 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a84a0
0x00000200001a8940 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a8950
0x00000200001a8d10 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a8d20
0x00000200001a8e73 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001a8e83
0x00000200001abb28 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001abb38
0x00000200001abc87 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001abc97
0x00000200003941a5 : lea ebx, dword ptr [rdi + 0x29] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000064759f : lea ebx, dword ptr [rdi + rsi*4] ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000007b09b : lea ebx, dword ptr [rip + 0x13d] ; jmp r11
0x0000020000542f1a : lea ebx, dword ptr [rsi + 0x2000] ; call 0x2000016d86d
0x000002000052a6f0 : lea ecx, dword ptr [r11 + 1] ; call rax
0x0000020000373168 : lea ecx, dword ptr [r8 + 0xa] ; call r11
0x000002000037271a : lea ecx, dword ptr [r8 + 2] ; call r10
0x00000200001d1889 : lea ecx, dword ptr [r8 + 3] ; call r11
0x00000200001755f5 : lea ecx, dword ptr [r8 + 3] ; call rax
0x00000200001d18db : lea ecx, dword ptr [r8 + 4] ; call r11
0x0000020000372f4a : lea ecx, dword ptr [r8 + 8] ; call rax
0x0000020000628530 : lea ecx, dword ptr [r9 + 1] ; call r10
0x0000020000628515 : lea ecx, dword ptr [r9 + 6] ; call r10
0x00000200006284fa : lea ecx, dword ptr [r9 + 7] ; call r10
0x00000200003e6192 : lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200001a2652 : lea ecx, dword ptr [rax + 0x55f] ; mov eax, ecx ; ret
0x0000020000373169 : lea ecx, dword ptr [rax + 0xa] ; call r11
0x000002000037271b : lea ecx, dword ptr [rax + 2] ; call r10
0x00000200001d188a : lea ecx, dword ptr [rax + 3] ; call r11
0x00000200001755f6 : lea ecx, dword ptr [rax + 3] ; call rax
0x00000200001d18dc : lea ecx, dword ptr [rax + 4] ; call r11
0x00000200006e3914 : lea ecx, dword ptr [rax + 8] ; call r10
0x000002000069dc94 : lea ecx, dword ptr [rax + 8] ; call r9
0x0000020000372f4b : lea ecx, dword ptr [rax + 8] ; call rax
0x000002000057882c : lea ecx, dword ptr [rax + rbp] ; call 0x20000181a41
0x0000020000476aaa : lea ecx, dword ptr [rax + rcx*8] ; call 0x200000a3956
0x000002000047a624 : lea ecx, dword ptr [rax - 0x58] ; call 0x200000a3956
0x000002000069debd : lea ecx, dword ptr [rax - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x00000200003c7952 : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x0000020000593965 : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000042ace3 : lea ecx, dword ptr [rbp + 0x10] ; call 0x20000052466
0x0000020000522fb6 : lea ecx, dword ptr [rbp + 0x10] ; call 0x200000bf275
0x00000200001e8490 : lea ecx, dword ptr [rbp + 0x10] ; call 0x20000174739
0x00000200000c850a : lea ecx, dword ptr [rbp + 0x10] ; call 0x200001747b5
0x000002000014ed99 : lea ecx, dword ptr [rbp + 0x18] ; call rbx
0x00000200006d602b : lea ecx, dword ptr [rbp + 0x500] ; call r12
0x0000020000523040 : lea ecx, dword ptr [rbp + 0x78] ; call 0x200000bf275
0x00000200005b51ba : lea ecx, dword ptr [rbp + 2] ; call rax
0x000002000047ee2d : lea ecx, dword ptr [rbp + 8] ; xor edx, edx ; call 0x200000a3958
0x000002000048f9ea : lea ecx, dword ptr [rbp - 0x18] ; call 0x200000bf276
0x000002000049e33b : lea ecx, dword ptr [rbp - 0x19] ; call 0x200000bf276
0x000002000051e47c : lea ecx, dword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x0000020000701a0a : lea ecx, dword ptr [rbp - 0x28] ; mov qword ptr [rbp - 0x1c], rbx ; call qword ptr [r14]
0x0000020000532cdb : lea ecx, dword ptr [rbp - 0x28] ; movzx edx, byte ptr [rdi] ; call 0x2000040ef68
0x000002000007228c : lea ecx, dword ptr [rbp - 0x39] ; call 0x200000ebd29
0x000002000048fdd7 : lea ecx, dword ptr [rbp - 0x39] ; mov rdx, rdi ; call 0x200000bf279
0x000002000049260d : lea ecx, dword ptr [rbp - 0x50] ; call 0x200000bf276
0x0000020000476e52 : lea ecx, dword ptr [rbp - 0x59] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x0000020000127145 : lea ecx, dword ptr [rbp - 0x61] ; xor edx, edx ; call 0x200001533df
0x000002000020029e : lea ecx, dword ptr [rbp - 0x61] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x0000020000496b8d : lea ecx, dword ptr [rbp - 0x68] ; call 0x200000bf276
0x00000200004902ef : lea ecx, dword ptr [rbp - 0x68] ; mov rdx, rbx ; call 0x200000bf279
0x00000200004db2e3 : lea ecx, dword ptr [rbp - 0x69] ; call qword ptr [rax]
0x000002000047ddf9 : lea ecx, dword ptr [rbp - 0x71] ; call 0x20000468879
0x0000020000495fe2 : lea ecx, dword ptr [rbp - 0x78] ; call 0x200000bf276
0x0000020000539681 : lea ecx, dword ptr [rbp] ; call 0x20000105965
0x0000020000415114 : lea ecx, dword ptr [rbx + 0x10] ; call 0x200000392ba
0x00000200006ec65c : lea ecx, dword ptr [rbx + 0x28] ; call 0x20000468875
0x00000200006ec653 : lea ecx, dword ptr [rbx + 0x38] ; call 0x20000468875
0x00000200005b4d6c : lea ecx, dword ptr [rbx + 0x50] ; call 0x20000071005
0x00000200001ae05b : lea ecx, dword ptr [rbx + 0x50] ; call 0x200001aa329
0x000002000038eb47 : lea ecx, dword ptr [rbx + 0xe] ; add rcx, rax ; jmp 0x2000038eb19
0x000002000052a6f1 : lea ecx, dword ptr [rbx + 1] ; call rax
0x00000200006ec64a : lea ecx, dword ptr [rbx + 8] ; call 0x20000468875
0x000002000004fe22 : lea ecx, dword ptr [rbx + rax] ; mov al, 1 ; mov qword ptr [r10], rcx ; ret
0x00000200004d712b : lea ecx, dword ptr [rbx + rdx*2] ; mov rax, r9 ; ret
0x0000020000628531 : lea ecx, dword ptr [rcx + 1] ; call r10
0x0000020000628516 : lea ecx, dword ptr [rcx + 6] ; call r10
0x00000200006284fb : lea ecx, dword ptr [rcx + 7] ; call r10
0x000002000051bd07 : lea ecx, dword ptr [rcx + 8] ; mov rdx, r10 ; call 0x2000014a6e9
0x00000200001b0008 : lea ecx, dword ptr [rcx + rax*2] ; mov r8, rdx ; jmp 0x200001b002e
0x00000200003d8806 : lea ecx, dword ptr [rcx + rcx*2] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200000619c6 : lea ecx, dword ptr [rcx + rdx*4] ; jmp r9
0x000002000069e3ad : lea ecx, dword ptr [rcx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200004f884f : lea ecx, dword ptr [rcx*4 + 0x10] ; call 0x20000054add
0x00000200004150f8 : lea ecx, dword ptr [rdi + 0x10] ; call 0x200000392ba
0x0000020000443c00 : lea ecx, dword ptr [rdi + 0x30] ; call 0x20000072e46
0x00000200004ee92f : lea ecx, dword ptr [rdi + 0x59] ; call rax
0x00000200004aefab : lea ecx, dword ptr [rdi + 0x68] ; call 0x200000ddfe6
0x0000020000175f19 : lea ecx, dword ptr [rdi + 3] ; mov r9b, dil ; xor r8d, r8d ; call rax
0x00000200001e743f : lea ecx, dword ptr [rdi + rax] ; call 0x20000181a41
0x000002000041563b : lea ecx, dword ptr [rdx + 0x10] ; call 0x200000392ba
0x00000200001d00a5 : lea ecx, dword ptr [rdx + 0x10] ; call 0x2000007c345
0x00000200001d00a1 : lea ecx, dword ptr [rdx + 0x18] ; lea r9d, dword ptr [rdx + 0x10] ; call 0x2000007c349
0x0000020000168b34 : lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000059173b : lea ecx, dword ptr [rdx + 0x55] ; call 0x200000fb211
0x0000020000640722 : lea ecx, dword ptr [rdx - 0x27] ; mov r8d, ebp ; call 0x20000270049
0x000002000070246a : lea ecx, dword ptr [rdx - 0x32] ; call rax
0x000002000069f855 : lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x000002000069fd34 : lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x00000200000abdec : lea ecx, dword ptr [rip + 0x113a] ; call rax
0x000002000012dd4e : lea ecx, dword ptr [rip + 0x15b434] ; call 0x200000d9fd8
0x00000200001dca7c : lea ecx, dword ptr [rip + 0x173c7e] ; call 0x200000f8d58
0x00000200000c8861 : lea ecx, dword ptr [rip + 0x1ce8a1] ; call 0x20000064b08
0x0000020000174e8d : lea ecx, dword ptr [rip + 0x1e58fd] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000769e1 : lea ecx, dword ptr [rip + 0x4974] ; jmp rcx
0x00000200003de575 : lea ecx, dword ptr [rip + 0x77545] ; call 0x200000086e5
0x00000200003de53f : lea ecx, dword ptr [rip + 0x7757b] ; call 0x200000086e5
0x00000200003de522 : lea ecx, dword ptr [rip + 0x77598] ; call 0x200000086e5
0x00000200003de505 : lea ecx, dword ptr [rip + 0x775b5] ; call 0x200000086e5
0x00000200003de4e5 : lea ecx, dword ptr [rip + 0x775d5] ; call 0x200000086e5
0x00000200003df2dc : lea ecx, dword ptr [rip + 0x785ae] ; call 0x200000086e5
0x00000200003df2b7 : lea ecx, dword ptr [rip + 0x785d3] ; call 0x200000086e5
0x00000200003df286 : lea ecx, dword ptr [rip + 0x78604] ; call 0x200000086e5
0x00000200003df266 : lea ecx, dword ptr [rip + 0x78624] ; call 0x200000086e5
0x00000200003df212 : lea ecx, dword ptr [rip + 0x78678] ; call 0x200000086e5
0x00000200001f027c : lea ecx, dword ptr [rip - 0x143356] ; call rax
0x000002000043b28f : lea ecx, dword ptr [rip - 0x1549f5] ; call 0x2000006ad31
0x000002000043c1d8 : lea ecx, dword ptr [rip - 0x15599e] ; call 0x2000006ad31
0x000002000043c677 : lea ecx, dword ptr [rip - 0x155ddd] ; call 0x2000006ad31
0x00000200005bc4ae : lea ecx, dword ptr [rip - 0x167504] ; call 0x200000086e4
0x000002000040d525 : lea ecx, dword ptr [rip - 0x171c1b] ; call 0x200000392bd
0x0000020000405140 : lea ecx, dword ptr [rip - 0x17cbc6] ; call 0x2000002dc49
0x0000020000483b67 : lea ecx, dword ptr [rip - 0x19d5ad] ; call 0x200000a97ed
0x00000200004446a8 : lea ecx, dword ptr [rip - 0x1ab4ae] ; call 0x2000006ad31
0x0000020000444718 : lea ecx, dword ptr [rip - 0x1ab51e] ; call 0x2000006ad31
0x000002000048a465 : lea ecx, dword ptr [rip - 0x1b2bcb] ; call 0x200000b9b09
0x000002000048ad32 : lea ecx, dword ptr [rip - 0x1b3498] ; call 0x200000b9b09
0x000002000048b1fa : lea ecx, dword ptr [rip - 0x1b3960] ; call 0x200000b9b09
0x000002000048b450 : lea ecx, dword ptr [rip - 0x1b3bb6] ; call 0x200000b9b09
0x000002000048b625 : lea ecx, dword ptr [rip - 0x1b3d8b] ; call 0x200000b9b09
0x000002000048e3d7 : lea ecx, dword ptr [rip - 0x1b511d] ; call 0x200000b9889
0x000002000048eb0d : lea ecx, dword ptr [rip - 0x1b5853] ; call 0x200000b9b09
0x000002000048fae8 : lea ecx, dword ptr [rip - 0x1b682e] ; call 0x200000b9b09
0x000002000048fb24 : lea ecx, dword ptr [rip - 0x1b686a] ; call 0x200000b9b09
0x000002000048f4cf : lea ecx, dword ptr [rip - 0x1b7c35] ; call 0x200000b9b09
0x0000020000609e3f : lea ecx, dword ptr [rip - 0x1b96e5] ; and r8d, edx ; jmp 0x20000609ebc
0x00000200004913b1 : lea ecx, dword ptr [rip - 0x1bcf77] ; call 0x200000b9b09
0x0000020000494983 : lea ecx, dword ptr [rip - 0x1bd2a9] ; call 0x200000b9b09
0x0000020000495d78 : lea ecx, dword ptr [rip - 0x1be4de] ; call 0x200000b9b09
0x000002000049976d : lea ecx, dword ptr [rip - 0x1cddd3] ; call 0x200000b9b09
0x000002000052d3b4 : lea ecx, dword ptr [rip - 0x1dcbba] ; call 0x200000b9668
0x000002000049820d : lea ecx, dword ptr [rip - 0x207273] ; call 0x200000b9b09
0x00000200004ad07a : lea ecx, dword ptr [rip - 0x2171c8] ; call 0x200000392bc
0x00000200004f5ca0 : lea ecx, dword ptr [rip - 0x25de86] ; call 0x2000011f955
0x00000200004f7058 : lea ecx, dword ptr [rip - 0x25f23e] ; call 0x2000011f955
0x00000200004f7089 : lea ecx, dword ptr [rip - 0x25f26f] ; call 0x2000011f9a9
0x00000200004f0854 : lea ecx, dword ptr [rip - 0x26690a] ; call 0x2000011f955
0x00000200004f4c01 : lea ecx, dword ptr [rip - 0x26acb7] ; call 0x2000011f955
0x000002000064f313 : lea ecx, dword ptr [rip - 0x3b89d9] ; call 0x2000006b5a8
0x00000200003cd3fb : lea ecx, dword ptr [rip - 0x7cc01] ; call 0x200000b9668
0x0000020000363734 : lea ecx, dword ptr [rip - 0xcb8fa] ; call 0x2000011f954
0x0000020000363745 : lea ecx, dword ptr [rip - 0xcb90b] ; call 0x2000011f9a8
0x0000020000363715 : lea ecx, dword ptr [rip - 0xd97cb] ; call 0x2000011f954
0x000002000037d87c : lea ecx, dword ptr [rip - 0xec8e2] ; call 0x200000b9b08
0x00000200004d552f : lea ecx, dword ptr [rsi + 0x30] ; call 0x200000f8d56
0x00000200004821b1 : lea ecx, dword ptr [rsi + 0xf0] ; call 0x200000a97ed
0x00000200003c08d0 : lea ecx, dword ptr [rsi - 0x458] ; call r15
0x0000020000411623 : lea ecx, dword ptr [rsp + 0x138] ; call 0x2000048d909
0x00000200001ecfa0 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000a91e6
0x0000020000491b66 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000bf277
0x000002000051dba6 : lea ecx, dword ptr [rsp + 0x20] ; call 0x2000014a303
0x000002000001bcca : lea ecx, dword ptr [rsp + 0x20] ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x000002000047714c : lea ecx, dword ptr [rsp + 0x20] ; xor edx, edx ; call 0x200000a3959
0x0000020000491b58 : lea ecx, dword ptr [rsp + 0x30] ; call 0x200000bf277
0x00000200000aca94 : lea ecx, dword ptr [rsp + 0x30] ; call rax
0x000002000015af52 : lea ecx, dword ptr [rsp + 0x30] ; mov r8, rbp ; call 0x200000771c9
0x000002000047728d : lea ecx, dword ptr [rsp + 0x30] ; xor edx, edx ; call 0x200000a3959
0x00000200005098ee : lea ecx, dword ptr [rsp + 0x40] ; call 0x20000405b8e
0x00000200006f3403 : lea ecx, dword ptr [rsp + 0x50] ; call 0x2000047f612
0x000002000062e321 : lea ecx, dword ptr [rsp + 0x50] ; mov r9, r15 ; call r12
0x00000200001ee9b0 : lea ecx, dword ptr [rsp + 0x58] ; jmp 0x200000aac5b
0x0000020000142436 : lea ecx, dword ptr [rsp + 0x58] ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x0000020000607c91 : lea ecx, dword ptr [rsp + 0x5c] ; call 0x200004e3efa
0x000002000051a990 : lea ecx, dword ptr [rsp + 0x60] ; call 0x20000056bc6
0x00000200003aac70 : lea ecx, dword ptr [rsp + 0x68] ; mov qword ptr [rsp + 0x20], r13 ; call rax
0x00000200003a2f8f : lea ecx, dword ptr [rsp + 0x70] ; call 0x200000bf276
0x00000200006d913e : lea edi, dword ptr [rax + 8] ; mov rcx, r15 ; call r9
0x00000200000c668f : lea edi, dword ptr [rax - 0x18000000] ; ret
0x000002000025c225 : lea edi, dword ptr [rax] ; add al, ch ; ret 0x22
0x00000200000c1212 : lea edi, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200004c74f3 : lea edi, dword ptr [rbx + 0x50] ; jmp 0x200004c7503
0x0000020000087850 : lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x00000200003b8c4f : lea edi, dword ptr [rsi + 0x989680] ; call 0x200000a4e88
0x00000200006a03c6 : lea edx, dword ptr [r12 + r14] ; xor ecx, ecx ; call rdi
0x000002000069db61 : lea edx, dword ptr [r14 + r10] ; xor ecx, ecx ; call rdi
0x000002000069ed1d : lea edx, dword ptr [r14 + r13] ; xor ecx, ecx ; call rdi
0x00000200006e6886 : lea edx, dword ptr [r14 + rsi] ; xor ecx, ecx ; call rdi
0x000002000069dfe2 : lea edx, dword ptr [r15 + r10] ; xor ecx, ecx ; call rdi
0x00000200006d917e : lea edx, dword ptr [r15 + rbx] ; xor ecx, ecx ; call rdi
0x00000200001c51a7 : lea edx, dword ptr [r9 + 7] ; call 0x200000213c6
0x00000200006157b6 : lea edx, dword ptr [r9 + 8] ; mov rcx, rdi ; call r10
0x00000200001a3652 : lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x0000020000150613 : lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200004af1b0 : lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000064de91 : lea edx, dword ptr [rax + 1] ; test ecx, ecx ; cmovne eax, edx ; ret
0x0000020000028671 : lea edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x2000002866c ; ret
0x00000200003eb51c : lea edx, dword ptr [rax - 0x1000000] ; ret
0x000002000046efe9 : lea edx, dword ptr [rax - 0x7affca69] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200003ec7ae : lea edx, dword ptr [rax - 0xfffffe] ; ret
0x00000200001c75fe : lea edx, dword ptr [rbp + 0x58] ; mov rcx, qword ptr [rbp + 0x68] ; call 0x200000d38f9
0x000002000050a6d0 : lea edx, dword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x0000020000597ce4 : lea edx, dword ptr [rbp - 0x11] ; call 0x20000593f7d
0x00000200004f1afe : lea edx, dword ptr [rbp - 0x49] ; mov rcx, r11 ; call 0x200001183c1
0x000002000049261a : lea edx, dword ptr [rbp - 0x50] ; call 0x200000bf036
0x000002000039f475 : lea edx, dword ptr [rbp - 0x50] ; mov rcx, r10 ; call rax
0x000002000048b8d4 : lea edx, dword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r10 ; call rax
0x00000200004263a9 : lea edx, dword ptr [rbx + 0x18] ; call rax
0x00000200006d5185 : lea edx, dword ptr [rbx + 0x18] ; call rdi
0x0000020000703778 : lea edx, dword ptr [rbx + 0x20] ; mov ecx, 0x200 ; call r9
0x00000200006d55a7 : lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59fb : lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d5794 : lea edx, dword ptr [rbx + 0x58] ; call rdi
0x00000200006d536e : lea edx, dword ptr [rbx + 0x88] ; call rdi
0x0000020000034846 : lea edx, dword ptr [rbx + 1] ; mov rcx, rdi ; call 0x20000010a88
0x00000200006d184c : lea edx, dword ptr [rbx + r10] ; xor ecx, ecx ; call rdi
0x00000200006d6aa4 : lea edx, dword ptr [rbx + r12] ; xor ecx, ecx ; call rdi
0x00000200006df1a5 : lea edx, dword ptr [rbx + r14] ; xor ecx, ecx ; call rdi
0x00000200006d184d : lea edx, dword ptr [rbx + rdx] ; xor ecx, ecx ; call rdi
0x00000200006df1a6 : lea edx, dword ptr [rbx + rsi] ; xor ecx, ecx ; call rdi
0x00000200005e66df : lea edx, dword ptr [rbx - 0x27] ; dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x00000200006d6aa5 : lea edx, dword ptr [rbx] ; xor ecx, ecx ; call rdi
0x00000200003a0f3a : lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200001c51a8 : lea edx, dword ptr [rcx + 7] ; call 0x200000213c5
0x00000200006157b7 : lea edx, dword ptr [rcx + 8] ; mov rcx, rdi ; call r10
0x000002000064e360 : lea edx, dword ptr [rdi + 0x20] ; call 0x20000270046
0x00000200006d917f : lea edx, dword ptr [rdi + rbx] ; xor ecx, ecx ; call rdi
0x000002000069dfe3 : lea edx, dword ptr [rdi + rdx] ; xor ecx, ecx ; call rdi
0x00000200001bd993 : lea edx, dword ptr [rip + 0x19a2e7] ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x200001bd9ab
0x000002000003f97d : lea edx, dword ptr [rip + 0x317d25] ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000003f995
0x000002000007c9d3 : lea edx, dword ptr [rip + 0x71] ; jmp rdx
0x0000020000117381 : lea edx, dword ptr [rip - 0xa1627] ; cmovne rax, rdx ; jmp 0x2000011736d
0x00000200004f157b : lea edx, dword ptr [rip - 0xa5981] ; jmp 0x200004f154d
0x00000200003a00b7 : lea edx, dword ptr [rip - 0xcb8fd] ; mov rax, rdx ; ret
0x00000200003b32e3 : lea edx, dword ptr [rip - 0xde5a9] ; mov rax, rdx ; ret
0x00000200000e6499 : lea edx, dword ptr [rsi + 0x10] ; call r8
0x00000200006e6b52 : lea edx, dword ptr [rsi + 0x110] ; xor ecx, ecx ; call rdi
0x00000200006d268b : lea edx, dword ptr [rsi + r10] ; xor ecx, ecx ; call rdi
0x00000200006e395d : lea edx, dword ptr [rsi + r11] ; xor ecx, ecx ; call r9
0x00000200006d8196 : lea edx, dword ptr [rsi + r12] ; xor ecx, ecx ; call rdi
0x000002000069ed1e : lea edx, dword ptr [rsi + rbp] ; xor ecx, ecx ; call rdi
0x00000200006e395e : lea edx, dword ptr [rsi + rbx] ; xor ecx, ecx ; call r9
0x00000200003c3788 : lea edx, dword ptr [rsi + rdi] ; mov r8, rdi ; mov rcx, rbp ; call rax
0x000002000069db62 : lea edx, dword ptr [rsi + rdx] ; xor ecx, ecx ; call rdi
0x00000200006e6887 : lea edx, dword ptr [rsi + rsi] ; xor ecx, ecx ; call rdi
0x00000200006d8197 : lea edx, dword ptr [rsi] ; xor ecx, ecx ; call rdi
0x00000200005d57d4 : lea edx, dword ptr [rsp + 0x100] ; mov cl, 0x13 ; call rax
0x000002000040a13d : lea edx, dword ptr [rsp + 0x108] ; mov cl, 0x12 ; call rax
0x00000200003f5f41 : lea edx, dword ptr [rsp + 0x108] ; mov cl, 0xd ; call rax
0x00000200005d7d82 : lea edx, dword ptr [rsp + 0x120] ; mov cl, 0xe ; call rax
0x00000200003d4619 : lea edx, dword ptr [rsp + 0x128] ; mov cl, 0x11 ; call rax
0x00000200005d6be6 : lea edx, dword ptr [rsp + 0x150] ; mov cl, 0xb ; call rax
0x00000200003f1dd6 : lea edx, dword ptr [rsp + 0x180] ; mov cl, 0x10 ; call rax
0x0000020000522d0f : lea edx, dword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x0000020000168dd9 : lea edx, dword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x0000020000150baa : lea edx, dword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x0000020000520b09 : lea edx, dword ptr [rsp + 0x30] ; mov ecx, edi ; call 0x2000014b869
0x0000020000526c2f : lea edx, dword ptr [rsp + 0x38] ; call 0x200001536f7
0x0000020000383803 : lea edx, dword ptr [rsp + 0x38] ; mov rcx, rsi ; call 0x2000004fa8d
0x00000200004f4407 : lea edx, dword ptr [rsp + 0x40] ; call 0x200001183bf
0x00000200005adf93 : lea edx, dword ptr [rsp + 0x48] ; call rax
0x00000200004a5241 : lea edx, dword ptr [rsp + 0x48] ; mov rcx, rdi ; call rax
0x00000200001af164 : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rbx ; call 0x200001ab3a9
0x00000200001af1b8 : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rbx ; call 0x200001ab439
0x0000020000462437 : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rbx ; call r15
0x000002000016361e : lea edx, dword ptr [rsp + 0x50] ; movzx ecx, ax ; call r9
0x00000200003e7976 : lea edx, dword ptr [rsp + 0x58] ; mov rcx, rbx ; call r12
0x00000200001ee61b : lea edx, dword ptr [rsp + 0x60] ; call qword ptr [rsi]
0x00000200003c1240 : lea edx, dword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x0000020000411139 : lea edx, dword ptr [rsp + 0x70] ; call 0x200003dd3e6
0x000002000016364e : lea edx, dword ptr [rsp + 0xc0] ; call r8
0x0000020000408b39 : lea edx, dword ptr [rsp + 0xf0] ; mov cl, 0x14 ; call rax
0x00000200004963cc : lea edx, dword ptr [rsp + 0xf0] ; mov cl, 0xf ; call rax
0x00000200006a03c7 : lea edx, dword ptr [rsp + rsi] ; xor ecx, ecx ; call rdi
0x00000200004c0374 : lea esi, dword ptr [rax - 0xfffffe] ; ret
0x000002000057986f : lea esi, dword ptr [rdi - 0x58] ; jmp qword ptr [rbx]
0x0000020000134e43 : lea esi, dword ptr [rip - 0x74357500] ; ret 0xe183
0x00000200006a037b : lea esp, dword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x00000200003ec87b : lea esp, dword ptr [rax - 0xfffffe] ; ret
0x00000200004beaf1 : lea esp, dword ptr [rax] ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200001744ad : lea esp, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000059cbf5 : lea esp, dword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000614b5 : lea esp, dword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200001a63ad : lea esp, dword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001a8d4e : lea esp, dword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001a83cd : lea esp, dword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200001ee95e : lea esp, dword ptr [rbp + 0xe8] ; jmp 0x200000aabdc
0x00000200004f710a : lea esp, dword ptr [rbx + rbp*4 - 1] ; dec dword ptr [rbp - 0x75] ; ret 0x8b41
0x000002000007b09a : lea r11, qword ptr [rip + 0x13d] ; jmp r11
0x000002000043be3d : lea r11d, dword ptr [rbx - 1] ; jmp 0x2000043be0a
0x00000200006a037a : lea r12, qword ptr [rax + 8] ; mov rcx, r12 ; call r9
0x00000200001ee95d : lea r12, qword ptr [rbp + 0xe8] ; jmp 0x200000aabdd
0x000002000069db1d : lea r13, qword ptr [rax + 8] ; mov rcx, r13 ; call r9
0x00000200006d913d : lea r15, qword ptr [rax + 8] ; mov rcx, r15 ; call r9
0x000002000008784f : lea r15d, dword ptr [rcx + r11*4 + 0xb] ; ret
0x00000200004921f1 : lea r8, qword ptr [r14 + 0x28] ; mov rcx, rsi ; call 0x2000055e459
0x00000200005c6a91 : lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa7
0x00000200003b956a : lea r8, qword ptr [rax - 0x30] ; mov rax, r8 ; ret
0x00000200005b87ff : lea r8, qword ptr [rbp + 0x40] ; mov ecx, edx ; call 0x20000054adc
0x0000020000632100 : lea r8, qword ptr [rbp - 0x38] ; mov edx, r14d ; call rax
0x00000200003c333a : lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003c330e
0x0000020000644d51 : lea r8, qword ptr [rsp + 0x28] ; mov edx, r15d ; call rdi
0x000002000014243a : lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x000002000040d915 : lea r8, qword ptr [rsp + 0x48] ; call 0x20000439b37
0x00000200003b41f5 : lea r8, qword ptr [rsp + 0x58] ; call rax
0x000002000001bcce : lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rdi]
0x0000020000407994 : lea r8, qword ptr [rsp + 0x68] ; xor edx, edx ; call r11
0x0000020000163b3a : lea r8, qword ptr [rsp + 0x88] ; call r9
0x00000200005c5530 : lea r8d, dword ptr [r9 + 1] ; mov rcx, r15 ; call rsi
0x00000200005c53b8 : lea r8d, dword ptr [r9 + 2] ; mov rcx, r15 ; call rsi
0x000002000051dce6 : lea r8d, dword ptr [r9 + 6] ; call 0x2000014b867
0x00000200005848df : lea r8d, dword ptr [rax + 1] ; call 0x20000580b96
0x0000020000475cdf : lea r8d, dword ptr [rdx + 0x10] ; call 0x200000a3957
0x0000020000606baf : lea r8d, dword ptr [rdx + 0x10] ; call 0x200000a3958
0x000002000047680c : lea r8d, dword ptr [rdx + 0x20] ; call 0x200000a3957
0x000002000047befe : lea r8d, dword ptr [rdx + 0x28] ; call 0x200000a3957
0x00000200001f767d : lea r8d, dword ptr [rdx + 0x40] ; mov rcx, rbx ; call 0x200000a3959
0x00000200004876ce : lea r8d, dword ptr [rdx + 0x48] ; call 0x200000a3956
0x000002000047707b : lea r8d, dword ptr [rdx + 0x58] ; call 0x200000a3957
0x00000200005e2271 : lea r8d, dword ptr [rdx + 0xe] ; call 0x2000015e536
0x00000200004d712a : lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x00000200000619c5 : lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200001b0007 : lea r9, qword ptr [rcx + rax*2] ; mov r8, rdx ; jmp 0x200001b002f
0x00000200001d00a4 : lea r9d, dword ptr [rdx + 0x10] ; call 0x2000007c346
0x00000200000ee85b : lea rax, qword ptr [r8 + rcx*8] ; ret
0x0000020000441d77 : lea rax, qword ptr [r8 + rdx*4] ; ret
0x00000200000e4393 : lea rax, qword ptr [r9 + 0x10] ; ret
0x00000200000d5b69 : lea rax, qword ptr [r9 + 0x70] ; jae 0x200000d5b7c ; mov qword ptr [r8], rax ; ret
0x000002000003bb94 : lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200003d8809 : lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000441d92 : lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200003b5ad7 : lea rax, qword ptr [rbp - 0x40] ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x0000020000017d21 : lea rax, qword ptr [rbx + 0x20] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011b010 : lea rax, qword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000019b02e : lea rax, qword ptr [rbx + rcx*2] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000014463c : lea rax, qword ptr [rbx + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000129474 : lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200000dfb0c : lea rax, qword ptr [rcx + 0x438] ; ret
0x0000020000159eb8 : lea rax, qword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x00000200003c06a8 : lea rax, qword ptr [rcx + 0x678] ; ret
0x00000200003c06b7 : lea rax, qword ptr [rcx + 0x680] ; ret
0x000002000004e940 : lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c793c : lea rax, qword ptr [rcx + 2] ; ret
0x0000020000664288 : lea rax, qword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x00000200005ad1c3 : lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x0000020000073978 : lea rax, qword ptr [rcx + rax - 1] ; ret
0x000002000007397e : lea rax, qword ptr [rcx + rax - 2] ; ret
0x0000020000073984 : lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000007398a : lea rax, qword ptr [rcx + rax - 4] ; ret
0x0000020000073990 : lea rax, qword ptr [rcx + rax - 5] ; ret
0x0000020000073996 : lea rax, qword ptr [rcx + rax - 6] ; ret
0x000002000007399c : lea rax, qword ptr [rcx + rax - 7] ; ret
0x00000200000739a2 : lea rax, qword ptr [rcx + rax - 8] ; ret
0x00000200000cf0ea : lea rax, qword ptr [rcx + rax*4] ; ret
0x000002000056ef3f : lea rax, qword ptr [rcx - 0x10] ; ret
0x000002000002a41e : lea rax, qword ptr [rcx*8 + 0x30] ; ret
0x000002000049e2f6 : lea rax, qword ptr [rcx*8 + 0x98] ; ret
0x00000200005367bc : lea rax, qword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x0000020000076e55 : lea rax, qword ptr [rdx - 1] ; pop rbx ; ret
0x00000200000a379a : lea rax, qword ptr [rdx*4] ; pop rdi ; ret
0x000002000013b100 : lea rax, qword ptr [rip + 0x1640f1] ; ret
0x00000200004ff6d0 : lea rax, qword ptr [rip + 0x184bf1] ; ret
0x000002000038d41c : lea rax, qword ptr [rip + 0xc37bd] ; ret
0x000002000038d414 : lea rax, qword ptr [rip + 0xc37d5] ; ret
0x000002000038d424 : lea rax, qword ptr [rip + 0xc37f5] ; ret
0x000002000038d40c : lea rax, qword ptr [rip + 0xc383d] ; ret
0x0000020000021dd0 : lea rax, qword ptr [rip + 0xd9c59] ; ret
0x0000020000021e70 : lea rax, qword ptr [rip + 0xdbd79] ; ret
0x0000020000021e4f : lea rax, qword ptr [rip + 0xdbfca] ; ret
0x0000020000021db3 : lea rax, qword ptr [rip + 0xdc026] ; ret
0x0000020000021e10 : lea rax, qword ptr [rip + 0xdc029] ; ret
0x0000020000021d9f : lea rax, qword ptr [rip + 0xdc05a] ; ret
0x0000020000021e5b : lea rax, qword ptr [rip + 0xdc05e] ; ret
0x0000020000021e00 : lea rax, qword ptr [rip + 0xdc089] ; ret
0x0000020000021e08 : lea rax, qword ptr [rip + 0xdc0a1] ; ret
0x0000020000021dab : lea rax, qword ptr [rip + 0xdc0be] ; ret
0x0000020000021d89 : lea rax, qword ptr [rip + 0xdc0d0] ; ret
0x0000020000021e18 : lea rax, qword ptr [rip + 0xdc0f1] ; ret
0x0000020000021e2d : lea rax, qword ptr [rip + 0xdc0fc] ; ret
0x0000020000021dbb : lea rax, qword ptr [rip + 0xdc12e] ; ret
0x0000020000021e3a : lea rax, qword ptr [rip + 0xdc12f] ; ret
0x0000020000021e47 : lea rax, qword ptr [rip + 0xdc142] ; ret
0x0000020000021e68 : lea rax, qword ptr [rip + 0xdc151] ; ret
0x0000020000021df0 : lea rax, qword ptr [rip + 0xdc159] ; ret
0x0000020000021e81 : lea rax, qword ptr [rip + 0xdc188] ; ret
0x0000020000021e25 : lea rax, qword ptr [rip + 0xdc224] ; ret
0x0000020000200906 : lea rax, qword ptr [rip - 0x10292d] ; ret
0x00000200002008f5 : lea rax, qword ptr [rip - 0x104dfc] ; ret
0x000002000057df6d : lea rax, qword ptr [rip - 0x12f294] ; ret
0x000002000057df75 : lea rax, qword ptr [rip - 0x12f2ac] ; ret
0x000002000057df7d : lea rax, qword ptr [rip - 0x12f2c4] ; ret
0x000002000057df85 : lea rax, qword ptr [rip - 0x12f2dc] ; ret
0x000002000057df8d : lea rax, qword ptr [rip - 0x12f2f4] ; ret
0x000002000057df95 : lea rax, qword ptr [rip - 0x12f30c] ; ret
0x000002000057df9d : lea rax, qword ptr [rip - 0x12f324] ; ret
0x000002000057dfa5 : lea rax, qword ptr [rip - 0x12f33c] ; ret
0x00000200005842b0 : lea rax, qword ptr [rip - 0x1336d7] ; ret
0x00000200005842b8 : lea rax, qword ptr [rip - 0x1336ff] ; ret
0x00000200005842c0 : lea rax, qword ptr [rip - 0x133727] ; ret
0x00000200005842c8 : lea rax, qword ptr [rip - 0x13374f] ; ret
0x0000020000112b88 : lea rax, qword ptr [rip - 0x14b5f] ; ret
0x0000020000112b71 : lea rax, qword ptr [rip - 0x14bb8] ; ret
0x0000020000112b7d : lea rax, qword ptr [rip - 0x14bf4] ; ret
0x0000020000112b69 : lea rax, qword ptr [rip - 0x14c00] ; ret
0x0000020000112b59 : lea rax, qword ptr [rip - 0x14c10] ; ret
0x0000020000112b61 : lea rax, qword ptr [rip - 0x14c58] ; ret
0x0000020000112b51 : lea rax, qword ptr [rip - 0x14f68] ; ret
0x0000020000112b2d : lea rax, qword ptr [rip - 0x17034] ; ret
0x000002000045b4a0 : lea rax, qword ptr [rip - 0x1e8e7] ; ret
0x000002000036e6fc : lea rax, qword ptr [rip - 0x41c3] ; ret
0x000002000036e704 : lea rax, qword ptr [rip - 0x41db] ; ret
0x000002000036e70c : lea rax, qword ptr [rip - 0x41f3] ; ret
0x000002000036e714 : lea rax, qword ptr [rip - 0x420b] ; ret
0x000002000036e71c : lea rax, qword ptr [rip - 0x4223] ; ret
0x000002000036e724 : lea rax, qword ptr [rip - 0x423b] ; ret
0x000002000036e72c : lea rax, qword ptr [rip - 0x4253] ; ret
0x000002000036e734 : lea rax, qword ptr [rip - 0x426b] ; ret
0x0000020000567846 : lea rax, qword ptr [rsp + 0x30] ; cmp rbx, rax ; jne 0x2000056781b ; jmp 0x200005678c4
0x000002000007c970 : lea rax, qword ptr [rsp + 8] ; ret
0x0000020000021e5a : lea rax, qword ptr cs:[rip + 0xdc05e] ; ret
0x000002000001cd35 : lea rbx, qword ptr [rax - 0x10] ; jmp 0x2000001cd03
0x00000200003ba5b1 : lea rbx, qword ptr [rax - 0x10] ; jmp 0x200003ba57e
0x00000200003d9353 : lea rbx, qword ptr [rax - 0x10] ; jmp 0x200003d9321
0x00000200001a6367 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a6379
0x00000200001a834a : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a835c
0x00000200001a848f : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a84a1
0x00000200001a893f : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a8951
0x00000200001a8d0f : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a8d21
0x00000200001a8e72 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001a8e84
0x00000200001abb27 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001abb39
0x00000200001abc86 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001abc98
0x000002000004fe21 : lea rcx, qword ptr [r11 + r8] ; mov al, 1 ; mov qword ptr [r10], rcx ; ret
0x00000200004d552e : lea rcx, qword ptr [r14 + 0x30] ; call 0x200000f8d57
0x0000020000443bff : lea rcx, qword ptr [r15 + 0x30] ; call 0x20000072e47
0x00000200004aefaa : lea rcx, qword ptr [r15 + 0x68] ; call 0x200000ddfe7
0x000002000069debc : lea rcx, qword ptr [r8 - 8] ; mov rdx, qword ptr [rcx] ; call rdi
0x000002000069e3ac : lea rcx, qword ptr [r9 - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200006e3913 : lea rcx, qword ptr [rax + 8] ; call r10
0x000002000069dc93 : lea rcx, qword ptr [rax + 8] ; call r9
0x0000020000476aa9 : lea rcx, qword ptr [rax + rcx*8] ; call 0x200000a3957
0x000002000047a623 : lea rcx, qword ptr [rax - 0x58] ; call 0x200000a3957
0x000002000047a622 : lea rcx, qword ptr [rax - 0x58] ; call 0x200000a3958
0x000002000047a621 : lea rcx, qword ptr [rax - 0x58] ; call 0x200000a3959
0x000002000042ace2 : lea rcx, qword ptr [rbp + 0x10] ; call 0x20000052467
0x0000020000522fb5 : lea rcx, qword ptr [rbp + 0x10] ; call 0x200000bf276
0x00000200001e848f : lea rcx, qword ptr [rbp + 0x10] ; call 0x2000017473a
0x00000200000c8509 : lea rcx, qword ptr [rbp + 0x10] ; call 0x200001747b6
0x000002000014ed98 : lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x00000200006d602a : lea rcx, qword ptr [rbp + 0x500] ; call r12
0x000002000052303f : lea rcx, qword ptr [rbp + 0x78] ; call 0x200000bf276
0x000002000047ee2c : lea rcx, qword ptr [rbp + 8] ; xor edx, edx ; call 0x200000a3959
0x000002000048f9e9 : lea rcx, qword ptr [rbp - 0x18] ; call 0x200000bf277
0x000002000049e33a : lea rcx, qword ptr [rbp - 0x19] ; call 0x200000bf277
0x000002000051e47b : lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x0000020000701a09 : lea rcx, qword ptr [rbp - 0x28] ; mov qword ptr [rbp - 0x1c], rbx ; call qword ptr [r14]
0x0000020000532cda : lea rcx, qword ptr [rbp - 0x28] ; movzx edx, byte ptr [rdi] ; call 0x2000040ef69
0x000002000049260c : lea rcx, qword ptr [rbp - 0x50] ; call 0x200000bf277
0x0000020000476e51 : lea rcx, qword ptr [rbp - 0x59] ; xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x0000020000127144 : lea rcx, qword ptr [rbp - 0x61] ; xor edx, edx ; call 0x200001533e0
0x0000020000496b8c : lea rcx, qword ptr [rbp - 0x68] ; call 0x200000bf277
0x00000200004db2e2 : lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000495fe1 : lea rcx, qword ptr [rbp - 0x78] ; call 0x200000bf277
0x0000020000539680 : lea rcx, qword ptr [rbp] ; call 0x20000105966
0x0000020000415113 : lea rcx, qword ptr [rbx + 0x10] ; call 0x200000392bb
0x00000200006ec65b : lea rcx, qword ptr [rbx + 0x28] ; call 0x20000468876
0x00000200006ec652 : lea rcx, qword ptr [rbx + 0x38] ; call 0x20000468876
0x00000200005b4d6b : lea rcx, qword ptr [rbx + 0x50] ; call 0x20000071006
0x00000200001ae05a : lea rcx, qword ptr [rbx + 0x50] ; call 0x200001aa32a
0x000002000038eb46 : lea rcx, qword ptr [rbx + 0xe] ; add rcx, rax ; jmp 0x2000038eb1a
0x00000200006ec649 : lea rcx, qword ptr [rbx + 8] ; call 0x20000468876
0x00000200003d8805 : lea rcx, qword ptr [rcx + rcx*2] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004150f7 : lea rcx, qword ptr [rdi + 0x10] ; call 0x200000392bb
0x00000200004ee92e : lea rcx, qword ptr [rdi + 0x59] ; call rax
0x000002000041563a : lea rcx, qword ptr [rdx + 0x10] ; call 0x200000392bb
0x000002000069f854 : lea rcx, qword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x000002000069fd33 : lea rcx, qword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x00000200000abdeb : lea rcx, qword ptr [rip + 0x113a] ; call rax
0x000002000012dd4d : lea rcx, qword ptr [rip + 0x15b434] ; call 0x200000d9fd9
0x00000200001dca7b : lea rcx, qword ptr [rip + 0x173c7e] ; call 0x200000f8d59
0x00000200000c8860 : lea rcx, qword ptr [rip + 0x1ce8a1] ; call 0x20000064b09
0x00000200000769e0 : lea rcx, qword ptr [rip + 0x4974] ; jmp rcx
0x00000200001f027b : lea rcx, qword ptr [rip - 0x143356] ; call rax
0x00000200005bc4ad : lea rcx, qword ptr [rip - 0x167504] ; call 0x200000086e5
0x0000020000609e3e : lea rcx, qword ptr [rip - 0x1b96e5] ; and r8d, edx ; jmp 0x20000609ebd
0x000002000052d3b3 : lea rcx, qword ptr [rip - 0x1dcbba] ; call 0x200000b9669
0x00000200004ad079 : lea rcx, qword ptr [rip - 0x2171c8] ; call 0x200000392bd
0x000002000064f312 : lea rcx, qword ptr [rip - 0x3b89d9] ; call 0x2000006b5a9
0x00000200003cd3fa : lea rcx, qword ptr [rip - 0x7cc01] ; call 0x200000b9669
0x0000020000363733 : lea rcx, qword ptr [rip - 0xcb8fa] ; call 0x2000011f955
0x0000020000363744 : lea rcx, qword ptr [rip - 0xcb90b] ; call 0x2000011f9a9
0x0000020000363714 : lea rcx, qword ptr [rip - 0xd97cb] ; call 0x2000011f955
0x000002000037d87b : lea rcx, qword ptr [rip - 0xec8e2] ; call 0x200000b9b09
0x00000200003c08cf : lea rcx, qword ptr [rsi - 0x458] ; call r15
0x00000200001ecf9f : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000a91e7
0x0000020000491b65 : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000bf278
0x000002000051dba5 : lea rcx, qword ptr [rsp + 0x20] ; call 0x2000014a304
0x0000020000491b57 : lea rcx, qword ptr [rsp + 0x30] ; call 0x200000bf278
0x00000200000aca93 : lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200005098ed : lea rcx, qword ptr [rsp + 0x40] ; call 0x20000405b8f
0x00000200006f3402 : lea rcx, qword ptr [rsp + 0x50] ; call 0x2000047f613
0x000002000062e320 : lea rcx, qword ptr [rsp + 0x50] ; mov r9, r15 ; call r12
0x00000200001ee9af : lea rcx, qword ptr [rsp + 0x58] ; jmp 0x200000aac5c
0x0000020000607c90 : lea rcx, qword ptr [rsp + 0x5c] ; call 0x200004e3efb
0x000002000051a98f : lea rcx, qword ptr [rsp + 0x60] ; call 0x20000056bc7
0x00000200003a2f8e : lea rcx, qword ptr [rsp + 0x70] ; call 0x200000bf277
0x00000200000aca92 : lea rcx, qword ptr ds:[rsp + 0x30] ; call rax
0x00000200004c74f2 : lea rdi, qword ptr [rbx + 0x50] ; jmp 0x200004c7504
0x00000200003b8c4e : lea rdi, qword ptr [rsi + 0x989680] ; call 0x200000a4e89
0x00000200001a3651 : lea rdx, qword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x000002000050a6cf : lea rdx, qword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x0000020000597ce3 : lea rdx, qword ptr [rbp - 0x11] ; call 0x20000593f7e
0x0000020000492619 : lea rdx, qword ptr [rbp - 0x50] ; call 0x200000bf037
0x000002000039f474 : lea rdx, qword ptr [rbp - 0x50] ; mov rcx, r10 ; call rax
0x000002000048b8d3 : lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r10 ; call rax
0x00000200004263a8 : lea rdx, qword ptr [rbx + 0x18] ; call rax
0x000002000007c9d2 : lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x00000200004f157a : lea rdx, qword ptr [rip - 0xa5981] ; jmp 0x200004f154e
0x00000200003a00b6 : lea rdx, qword ptr [rip - 0xcb8fd] ; mov rax, rdx ; ret
0x00000200003b32e2 : lea rdx, qword ptr [rip - 0xde5a9] ; mov rax, rdx ; ret
0x00000200000e6498 : lea rdx, qword ptr [rsi + 0x10] ; call r8
0x0000020000522d0e : lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x0000020000168dd8 : lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x0000020000150ba9 : lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x0000020000526c2e : lea rdx, qword ptr [rsp + 0x38] ; call 0x200001536f8
0x00000200004f4406 : lea rdx, qword ptr [rsp + 0x40] ; call 0x200001183c0
0x00000200005adf92 : lea rdx, qword ptr [rsp + 0x48] ; call rax
0x00000200004a5240 : lea rdx, qword ptr [rsp + 0x48] ; mov rcx, rdi ; call rax
0x0000020000462436 : lea rdx, qword ptr [rsp + 0x50] ; mov rcx, rbx ; call r15
0x000002000016361d : lea rdx, qword ptr [rsp + 0x50] ; movzx ecx, ax ; call r9
0x00000200003e7975 : lea rdx, qword ptr [rsp + 0x58] ; mov rcx, rbx ; call r12
0x00000200001ee61a : lea rdx, qword ptr [rsp + 0x60] ; call qword ptr [rsi]
0x00000200003c123f : lea rdx, qword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x0000020000411138 : lea rdx, qword ptr [rsp + 0x70] ; call 0x200003dd3e7
0x000002000016364d : lea rdx, qword ptr [rsp + 0xc0] ; call r8
0x000002000059cbf4 : lea rsp, qword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000614b4 : lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200001a63ac : lea rsp, qword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001a8d4d : lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001a83cc : lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000012d0d7 : leave ; adc al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x0000020000061a50 : leave ; adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200001deaf4 : leave ; adc eax, 0x8b4cfff5 ; ret
0x00000200001ee50d : leave ; add al, 0xe9 ; in eax, dx ; ret
0x0000020000611ca4 : leave ; add al, 0xf6 ; ret 0xf02
0x00000200003bcc47 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004cb5f7 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x000002000015695b : leave ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000007e875 : leave ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc7
0x00000200003641ae : leave ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000ecb27 : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000391ba2 : leave ; add dword ptr [rsi + 0x41], esp ; mov dword ptr [rcx + 2], ecx ; xor eax, eax ; ret
0x00000200001edfd7 : leave ; add eax, ecx ; ret
0x00000200006d17dd : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1822 ; ret 0x8948
0x00000200006d19d2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d1a17 ; ret 0x8948
0x00000200006d261f : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2664 ; ret 0x8948
0x00000200006d2cc7 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d2d0c ; ret 0x8948
0x00000200006d3a5d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d3aa2 ; ret 0x8948
0x00000200006d6463 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d64a8 ; ret 0x8948
0x00000200006d66d3 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d6718 ; ret 0x8948
0x00000200006d7338 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d737d ; ret 0x8948
0x00000200006d7bd8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d7c1d ; ret 0x8948
0x00000200006d812b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d8170 ; ret 0x8948
0x00000200006d8866 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d88ab ; ret 0x8948
0x00000200006d9116 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d915b ; ret 0x8948
0x00000200006d95c6 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d960b ; ret 0x8948
0x00000200006d9cfa : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006d9d3f ; ret 0x8948
0x00000200006da5bd : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006da602 ; ret 0x8948
0x00000200006daa51 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006daa96 ; ret 0x8948
0x00000200006db26d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006db2b2 ; ret 0x8948
0x00000200006dbb44 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dbb89 ; ret 0x8948
0x00000200006dc04d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc092 ; ret 0x8948
0x00000200006dc7ee : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dc833 ; ret 0x8948
0x00000200006dd09e : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd0e3 ; ret 0x8948
0x00000200006dd560 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dd5a5 ; ret 0x8948
0x00000200006dddbf : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dde04 ; ret 0x8948
0x00000200006de6a6 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006de6eb ; ret 0x8948
0x00000200006deb8c : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006debd1 ; ret 0x8948
0x00000200006df12f : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df174 ; ret 0x8948
0x00000200006df5d8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006df61d ; ret 0x8948
0x00000200006dfabd : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dfb02 ; ret 0x8948
0x00000200006dffaa : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006dffef ; ret 0x8948
0x00000200006e0380 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e03c5 ; ret 0x8948
0x00000200006e0764 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e07a9 ; ret 0x8948
0x00000200006e0b56 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0b9b ; ret 0x8948
0x00000200006e0f5d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e0fa2 ; ret 0x8948
0x00000200006e135e : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e13a3 ; ret 0x8948
0x00000200006e1776 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e17bb ; ret 0x8948
0x00000200006e1b80 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1bc5 ; ret 0x8948
0x00000200006e1f9f : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e1fe4 ; ret 0x8948
0x00000200006e23ce : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2413 ; ret 0x8948
0x00000200006e289b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e28e0 ; ret 0x8948
0x00000200006e2e5a : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e2e9f ; ret 0x8948
0x00000200006e342e : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3473 ; ret 0x8948
0x00000200006e38eb : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3930 ; ret 0x8948
0x00000200006e3d63 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3da8 ; ret 0x8948
0x00000200006e3f3b : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e3f80 ; ret 0x8948
0x00000200006e442a : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e446f ; ret 0x8948
0x00000200006e48d4 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e4919 ; ret 0x8948
0x00000200006e50b3 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e50f8 ; ret 0x8948
0x00000200006e54e2 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5527 ; ret 0x8948
0x00000200006e5911 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5956 ; ret 0x8948
0x00000200006e5d51 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e5d96 ; ret 0x8948
0x00000200006e6180 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e61c5 ; ret 0x8948
0x00000200006e680d : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6852 ; ret 0x8948
0x00000200006e6ad8 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6b1d ; ret 0x8948
0x00000200006e6e58 : leave ; add ecx, dword ptr [rax + 0x33] ; ror dword ptr [rax - 9], 1 ; loop 0x200006e6e9d ; ret 0xbd83
0x00000200006a111e : leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000071043 : leave ; add esi, esi ; ret
0x000002000016fc73 : leave ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000128490 : leave ; and byte ptr [rcx - 0xa], al ; ret
0x00000200001dcde4 : leave ; and dh, dh ; ret 0x7402
0x000002000012304a : leave ; and dh, dh ; ret 0xf02
0x00000200004b9037 : leave ; and dl, cl ; mov al, dl ; ret
0x0000020000030e63 : leave ; and dword ptr [rax + rax], esp ; ret
0x000002000048fd23 : leave ; and eax, 0x8348c803 ; ret 0x4902
0x000002000064c9ce : leave ; and eax, ecx ; ret
0x000002000012dc31 : leave ; and r8, rcx ; test r8, r8 ; jne 0x2000012dc4e ; ret
0x000002000005071c : leave ; call 0x20000012a27
0x0000020000605868 : leave ; call 0x200000a3a47
0x00000200000b14bb : leave ; call 0x200000dd793
0x00000200000c1185 : leave ; call 0x200000e13b7
0x00000200001ca887 : leave ; call 0x200000f6b13
0x00000200001e81c4 : leave ; call 0x200001444af
0x0000020000175d5e : leave ; call 0x20000165cc8
0x000002000056dacf : leave ; call 0x2000019a810
0x00000200001c3668 : leave ; call 0x200001c2c2c
0x00000200006408c7 : leave ; call 0x20000270044
0x00000200006be4d1 : leave ; call 0x2000037b058
0x0000020000580484 : leave ; call 0x2000038c69f
0x0000020000504df8 : leave ; call 0x2000047eaf9
0x00000200001405da : leave ; call qword ptr [rax]
0x00000200005cbf94 : leave ; call r10
0x00000200001a5c94 : leave ; call r9
0x0000020000144643 : leave ; call rax
0x00000200006c5995 : leave ; call rbx
0x000002000069db66 : leave ; call rdi
0x0000020000140669 : leave ; call rdx
0x000002000038f023 : leave ; call rsp
0x0000020000146fe5 : leave ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000a46a4 : leave ; cmc ; dec dword ptr [rax - 0x77] ; add r14b, r14b ; ret
0x00000200000da7f2 : leave ; cmove rax, rdx ; jmp 0x200000da7e9
0x000002000001fce6 : leave ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x000002000064de95 : leave ; cmovne eax, edx ; ret
0x000002000070e151 : leave ; cmp byte ptr [rdx + rcx*8 + 0xe], 1 ; setne al ; ret
0x00000200004fb10a : leave ; cmp r8b, 0xf ; ja 0x200004fb0da ; xor al, al ; ret
0x000002000007368d : leave ; cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200006f3400 : leave ; dec dword ptr [rax - 0x73] ; and al, 0x50 ; call 0x2000047f615
0x000002000060364e : leave ; dec dword ptr [rbx + rcx*4 + 4] ; ret 0x8d48
0x00000200005efae6 : leave ; dec dword ptr [rcx + 0x2b] ; ret
0x000002000041fa9a : leave ; dec dword ptr [rcx - 0x39] ; ret
0x000002000057b483 : leave ; fcomp st(0), st(1) ; push rsi ; ret
0x00000200005ab7ec : leave ; fdivp st(7) ; add rsp, 0x38 ; ret
0x000002000041db8e : leave ; imul eax, r9d ; sub eax, r8d ; ret
0x00000200003d5f7b : leave ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200003d5f13
0x0000020000625b9b : leave ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006047cf : leave ; inc dword ptr [rcx - 0x7c] ; fbstp dword ptr [rcx + rdx - 0xa] ; ret
0x00000200005f7b56 : leave ; inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x000002000041fcc7 : leave ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000064abb9 : leave ; inc dword ptr [rip - 0x3b4040] ; mov r8d, r10d ; jmp 0x2000064abd4
0x00000200001362dc : leave ; jb 0x200001362c1 ; ret
0x000002000041c4c3 : leave ; jb 0x2000041c4ba ; and eax, 0x1f ; ret
0x000002000059cddc : leave ; jb 0x2000059cdc8 ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000020000147e1c : leave ; jbe 0x20000147e15 ; mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x000002000000a071 : leave ; je 0x2000000a049 ; sub r9d, ecx ; mov eax, r9d ; ret
0x000002000001e305 : leave ; je 0x2000001e2cc ; jmp 0x2000001e300
0x00000200000b4feb : leave ; je 0x200000b4ff2 ; ret
0x00000200000dfa54 : leave ; je 0x200000dfa63 ; add rsp, 0x28 ; ret
0x000002000010a89b : leave ; je 0x2000010a89f ; and qword ptr [rcx], 0 ; ret
0x000002000010a88f : leave ; je 0x2000010a8a1 ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000015f72d : leave ; je 0x2000015f73b ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x000002000015f738 : leave ; je 0x2000015f746 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x0000020000168475 : leave ; je 0x2000016847f ; jmp rcx
0x000002000016849e : leave ; je 0x200001684a6 ; call rcx
0x00000200001684e2 : leave ; je 0x200001684ec ; jmp rcx
0x00000200001685a9 : leave ; je 0x200001685b1 ; call rcx
0x00000200001685d5 : leave ; je 0x200001685dd ; call rcx
0x0000020000170b43 : leave ; je 0x20000170b53 ; mov eax, 0xc000000d ; ret
0x00000200001724b1 : leave ; je 0x200001724c3 ; mov dword ptr [rcx], r10d ; ret
0x00000200001740f6 : leave ; je 0x20000174107 ; mov eax, 0xc0000225 ; ret
0x0000020000188c4c : leave ; je 0x20000188c5f ; inc dword ptr [rax + 0x1ee8] ; ret
0x0000020000012a29 : leave ; je 0x200001dc6e2 ; ret
0x0000020000360404 : leave ; je 0x20000360410 ; mov al, r10b ; ret
0x0000020000360404 : leave ; je 0x20000360411 ; mov al, r10b ; ret
0x0000020000630845 : leave ; je 0x200003b3087 ; xor eax, eax ; ret
0x0000020000443b91 : leave ; je 0x20000443ba3 ; call 0x20000072e46
0x00000200004063f4 : leave ; je 0x200004a93b7 ; ret
0x00000200004c6654 : leave ; je 0x200004c6660 ; add dword ptr [rcx], r11d ; ret
0x00000200004d0414 : leave ; je 0x200004d0422 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004fbed7 : leave ; je 0x200004fbeb0 ; xor eax, eax ; ret
0x00000200004ff536 : leave ; je 0x200004ff545 ; mov r8, qword ptr [rcx] ; mov rax, r8 ; ret
0x0000020000521355 : leave ; je 0x20000521364 ; call qword ptr [rip - 0x1d3d16]
0x0000020000522d4e : leave ; je 0x20000522d5f ; xor edx, edx ; call 0x2000026f017
0x0000020000566099 : leave ; je 0x200005660a6 ; or eax, 0xffffffff ; ret
0x0000020000583b19 : leave ; je 0x20000583b2c ; mov dword ptr [rip - 0x30cb4a], edx ; ret
0x0000020000597ce0 : leave ; je 0x20000597d0e ; lea rdx, qword ptr [rbp - 0x11] ; call 0x20000593f81
0x00000200005abe12 : leave ; je 0x200005abe23 ; mov eax, 0xc000000d ; ret
0x0000020000644b39 : leave ; je 0x20000644b4b ; xor edx, edx ; call 0x2000026f018
0x0000020000669bd1 : leave ; je 0x20000667ab7 ; call 0x20000665edd
0x000002000013f480 : leave ; jg 0x2000013f490 ; jns 0x2000013f491 ; or eax, 0xffffffff ; ret
0x000002000047e923 : leave ; jle 0x2000047e8f4 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001e1218 : leave ; jmp 0x200000c6b63
0x0000020000128481 : leave ; jmp 0x200000e5644
0x000002000013455d : leave ; jmp 0x20000134537
0x00000200003be4c9 : leave ; jmp 0x200003be4c2
0x00000200003cdd2e : leave ; jmp 0x200003cdcf5
0x00000200003d5f7f : leave ; jmp 0x200003d5f0f
0x00000200005fa020 : leave ; jmp 0x200005f9fe8
0x00000200006d1107 : leave ; jmp 0x200006d10cf
0x00000200006d1106 : leave ; jmp 0x200006d10d0
0x000002000003b4a4 : leave ; jmp qword ptr [r10 + rax*8]
0x00000200005502d5 : leave ; jmp r9
0x00000200003b681b : leave ; jmp rax
0x00000200000dd082 : leave ; jmp rcx
0x0000020000012a62 : leave ; jne 0x20000012a6b ; ret
0x00000200000165f2 : leave ; jne 0x200000165fd ; xor al, al ; ret
0x000002000001e294 : leave ; jne 0x2000001e30c ; mov eax, 2 ; ret
0x000002000001e2e5 : leave ; jne 0x2000001e312 ; mov eax, 0x10 ; ret
0x0000020000023177 : leave ; jne 0x20000023173 ; ret
0x0000020000030bda : leave ; jne 0x20000030be5 ; xor eax, eax ; ret
0x00000200000387e0 : leave ; jne 0x200000387d6 ; mov rax, rdx ; ret
0x000002000004d67f : leave ; jne 0x2000004d67a ; ret
0x0000020000058f09 : leave ; jne 0x20000058f10 ; ret
0x0000020000059a29 : leave ; jne 0x20000059a24 ; ret
0x0000020000062a8d : leave ; jne 0x20000062a88 ; ret
0x0000020000063480 : leave ; jne 0x2000006347b ; ret
0x000002000006bd73 : leave ; jne 0x2000006bd93 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000a917b : leave ; jne 0x200000a9188 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000aeca0 : leave ; jne 0x200000aec92 ; ret
0x00000200000e7540 : leave ; jne 0x200000e754d ; mov rax, r9 ; ret
0x000002000010a96d : leave ; jne 0x2000010a986 ; lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000012f8f2 : leave ; jne 0x2000012f8fd ; xor eax, eax ; ret
0x0000020000134c0b : leave ; jne 0x20000134c2d ; add al, ch ; in al, dx ; ret
0x000002000013fefe : leave ; jne 0x2000013ff0a ; mov rax, rdx ; ret
0x000002000013fefe : leave ; jne 0x2000013ff0b ; mov rax, rdx ; ret
0x00000200001414c2 : leave ; jne 0x200001414cd ; xor al, al ; ret
0x00000200001419b3 : leave ; jne 0x200001419a1 ; mov al, dl ; ret
0x0000020000153f12 : leave ; jne 0x20000153f1d ; xor eax, eax ; ret
0x0000020000157d4e : leave ; jne 0x20000157d29 ; ret
0x00000200001605c7 : leave ; jne 0x200001605a7 ; xor eax, eax ; ret
0x0000020000162249 : leave ; jne 0x2000016225a ; mov eax, 0xc000000d ; ret
0x0000020000172450 : leave ; jne 0x2000017242d ; ret
0x0000020000174e78 : leave ; jne 0x20000174e85 ; or eax, 0xffffffff ; ret
0x00000200001766ca : leave ; jne 0x200001766c5 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x000002000019853a : leave ; jne 0x2000019854b ; mov eax, 0xc00000f1 ; ret
0x0000020000198732 : leave ; jne 0x20000198743 ; mov eax, 0xc000000d ; ret
0x000002000019abd4 : leave ; jne 0x2000019abcf ; ret
0x000002000019e077 : leave ; jne 0x2000019e05b ; mov rax, r8 ; ret
0x00000200001a3acd : leave ; jne 0x200001a3abb ; ret
0x00000200000d72dc : leave ; jne 0x200001cb6bf ; ret
0x00000200000fa511 : leave ; jne 0x200001dbf5b ; ret
0x00000200001ed249 : leave ; jne 0x200001ed25c ; or esi, 8 ; jmp 0x20000119489
0x000002000014917b : leave ; jne 0x200001f2ae9 ; xor al, al ; ret
0x000002000004d38a : leave ; jne 0x200001f80d8 ; ret
0x0000020000364487 : leave ; jne 0x20000370784 ; ret
0x0000020000388730 : leave ; jne 0x20000388739 ; ret
0x0000020000395ac3 : leave ; jne 0x20000395abd ; ret
0x00000200003a0f37 : leave ; jne 0x200003a0f47 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003a0f37 : leave ; jne 0x200003a0f48 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003aa2e9 : leave ; jne 0x200003aa2f6 ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003aa2f1 : leave ; jne 0x200003aa2fe ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003aa301 : leave ; jne 0x200003aa30e ; lea eax, dword ptr [rcx + 5] ; ret
0x00000200003b0115 : leave ; jne 0x200003b013b ; xor eax, eax ; ret
0x00000200003b4389 : leave ; jne 0x200003b43ca ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200003ba843 : leave ; jne 0x200003ba837 ; ret
0x00000200003fd2e2 : leave ; jne 0x200003fd2de ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003fda45 : leave ; jne 0x200003fda5c ; xor eax, eax ; ret
0x00000200004193e6 : leave ; jne 0x200004193f7 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000045aa5b : leave ; jne 0x2000045aa8a ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048f56e : leave ; jne 0x2000048f577 ; ret
0x00000200004908f2 : leave ; jne 0x20000490903 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c2be9 : leave ; jne 0x200004c2bce ; ret
0x00000200004dee8d : leave ; jne 0x200004dee89 ; ret
0x0000020000543166 : leave ; jne 0x20000543177 ; mov eax, 0xc000000d ; ret
0x000002000054390e : leave ; jne 0x2000054391f ; mov eax, 0xc000000d ; ret
0x000002000054ebf5 : leave ; jne 0x2000054ec06 ; mov eax, 0xc00000f1 ; ret
0x000002000054f4df : leave ; jne 0x2000054f4d1 ; ret
0x000002000058be91 : leave ; jne 0x2000058be9c ; xor al, al ; ret
0x0000020000596796 : leave ; jne 0x200005967a1 ; mov al, 1 ; ret
0x00000200005967df : leave ; jne 0x200005967ef ; mov eax, 1 ; ret
0x00000200005a7b64 : leave ; jne 0x200005a7b50 ; mov rax, rcx ; ret
0x00000200005d01b2 : leave ; jne 0x200005d01bd ; xor al, al ; ret
0x000002000047e682 : leave ; jne 0x200005f7630 ; ret
0x0000020000636e19 : leave ; jne 0x20000636e02 ; ret
0x00000200006c0fa2 : leave ; jne 0x200006c0f74 ; and qword ptr [rip - 0x3d8fa4], rcx ; ret
0x00000200006c3e2e : leave ; jne 0x200006c3e00 ; ret
0x00000200006d11da : leave ; jne 0x200006d11d1 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000491562 : leave ; jns 0x20000491555 ; mov eax, 0xc000000e ; ret
0x000002000001d97e : leave ; js 0x2000001d992 ; mov rax, rdx ; ret
0x000002000001d97e : leave ; js 0x2000001d993 ; mov rax, rdx ; ret
0x0000020000417c3f : leave ; js 0x20000417c69 ; and eax, edx ; ret
0x0000020000417c3f : leave ; js 0x20000417c6a ; and eax, edx ; ret
0x0000020000411e38 : leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200001620ce : leave ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x0000020000613816 : leave ; mov al, byte ptr [rax + rcx] ; ret
0x00000200000dcb6f : leave ; mov al, cl ; ret
0x000002000057e010 : leave ; mov al, r9b ; ret
0x00000200003c9b28 : leave ; mov byte ptr [rdx], al ; test al, al ; jne 0x200003c9b3b ; xor eax, eax ; ret
0x00000200000ba2f6 : leave ; mov cr8, rcx ; ret
0x0000020000042846 : leave ; mov dl, 0x19 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001b332c : leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200003cd9ff : leave ; mov dword ptr [r8], r9d ; mov eax, 0x80000014 ; ret
0x000002000048cbd5 : leave ; mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x000002000016beae : leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001c1bbe : leave ; mov eax, 0x8007007a ; mov byte ptr [rcx], 0 ; ret
0x0000020000052209 : leave ; mov eax, 0xc000000d ; ret
0x0000020000641de1 : leave ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000000a076 : leave ; mov eax, r9d ; ret
0x00000200006d3815 : leave ; mov ebx, 0xe2c148ff ; and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200001405d3 : leave ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x0000020000123919 : leave ; mov qword ptr [rsi], rcx ; mov rcx, r8 ; call 0x2000003fc01
0x00000200006171cf : leave ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x000002000047a12a : leave ; mov qword ptr [rsp + 0x20], rsi ; call 0x200000a2049
0x000002000047768e : leave ; mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000047754e : leave ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200003e618e : leave ; mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200006f5e2a : leave ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x000002000052a6eb : leave ; mov rax, qword ptr [rax + rcx*8] ; lea ecx, dword ptr [r11 + 1] ; call rax
0x00000200004ee929 : leave ; mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x0000020000076d8e : leave ; mov rax, r8 ; pop rbx ; ret
0x000002000059cde0 : leave ; mov rax, rcx ; ret
0x000002000015bd49 : leave ; mov rbx, qword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000090945 : leave ; movsxd rax, eax ; ret
0x0000020000054a72 : leave ; movzx eax, ax ; sub eax, ecx ; ret
0x0000020000589451 : leave ; movzx eax, cx ; ret
0x000002000058f66a : leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001070a4 : leave ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x000002000038fff9 : leave ; or al, byte ptr [rax] ; call rax
0x000002000070228b : leave ; or byte ptr [rdi + rdi*8 - 0x74b7fc15], ah ; ret
0x00000200000126eb : leave ; or cl, ch ; int 0xeb
0x00000200005d8490 : leave ; pop rdi ; mov qword ptr [rip + 0xab127], rcx ; ret
0x0000020000602599 : leave ; push qword ptr [rbx] ; shr al, cl ; ret 0xa1db
0x0000020000447753 : leave ; push qword ptr [rdx] ; ret
0x00000200005f7df5 : leave ; push rsi ; ret
0x000002000035e7c6 : leave ; ret
0x0000020000082d00 : leave ; ret 0x21d1
0x000002000056de52 : leave ; ret 0x48ff
0x000002000056dea2 : leave ; ret 0x83ff
0x0000020000444629 : leave ; ret 0xe9ff
0x00000200001dca83 : leave ; ret 0xfff1
0x00000200001bed12 : leave ; ror byte ptr [rax + 0x4a880242], 1 ; ret
0x00000200001070a2 : leave ; sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200000fe3c8 : leave ; setbe dl ; mov eax, edx ; ret
0x000002000005b20a : leave ; sete al ; ret
0x00000200004475e7 : leave ; shr r9d, 1 ; call 0x2000006b508
0x000002000015e5f9 : leave ; sub byte ptr [rax + 0x3b], cl ; ret
0x0000020000411ed0 : leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x000002000006c01f : leave ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000064552a : leave ; test r8d, r8d ; jne 0x2000064553b ; xor eax, eax ; ret
0x000002000013fefb : leave ; test r9, r9 ; jne 0x2000013ff0d ; mov rax, rdx ; ret
0x000002000013fefb : leave ; test r9, r9 ; jne 0x2000013ff0e ; mov rax, rdx ; ret
0x0000020000640435 : leave ; test rax, rax ; jne 0x20000640444 ; ret
0x00000200006d050f : leave ; test rdx, rdx ; jne 0x200006d051e ; ret
0x00000200004e53ed : leave ; xchg qword ptr [rax + rcx*8 + 0x50], rdx ; mov eax, r8d ; ret
0x000002000056a9ba : leave ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200004f8943 : leave ; xlatb ; dec dword ptr [rax - 0x75] ; ret
0x0000020000620c73 : leave ; xor bh, al ; push qword ptr [rbx] ; shr al, cl ; ret 0xa992
0x000002000064ecc4 : leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000396c9e : leave ; xor edx, edx ; xor r8b, r8b ; jmp 0x20000396c70
0x0000020000411cd0 : leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x000002000000b9f3 : leave ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x0000020000143a25 : leave ; xor r8d, r8d ; mov rcx, rbx ; call 0x2000004fd29
0x00000200005e5dbb : leave ; xor r8d, r8d ; xor edx, edx ; call 0x200000a2048
0x0000020000477f0c : leave ; xor r8d, r8d ; xor edx, edx ; call 0x200000a2049
0x00000200004a74c5 : les r10, ptr [r11] ; add dh, dh ; ret
0x000002000014ea68 : les r12, ptr [rax - 0x75] ; ret 0xc2ff
0x00000200001bc185 : les r8d, ptr [r13 - 0x75] ; ret 0x4589
0x00000200005c93a6 : les r8d, ptr [r15 + rcx - 0x41] ; ret 0x8944
0x000002000040a7b3 : les r9d, ptr [rcx - 0x74b71fbb] ; ret
0x00000200005c4ad4 : ljmp ptr [rax + 0xfc085ff] ; xchg eax, esp ; ret
0x0000020000364736 : ljmp ptr [rax - 0x327af0ff] ; ret 0
0x00000200004b4cdd : ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x000002000060ca5c : ljmp ptr [rax - 0x617af0fc] ; ret
0x0000020000069437 : ljmp ptr [rbx] ; ret
0x00000200001649a1 : ljmp ptr [rbx] ; ret 0x42c6
0x00000200004fc23c : ljmp ptr [rbx] ; ret 0x4fe9
0x00000200003d7cd1 : ljmp ptr [rbx] ; shr eax, 1 ; ret
0x0000020000560bd0 : ljmp ptr [rdi + rdi*8 - 0x49f274b8] ; call rdx
0x00000200003c0b9d : ljmp ptr [rdx] ; sub al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000af43f : lldt ax ; ret
0x00000200006e659c : lock adc dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003a45be : lock add byte ptr [rax - 0x75], cl ; ret
0x000002000042325f : lock add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200003926c2 : lock add byte ptr [rax - 0x7d], cl ; ret
0x000002000056f209 : lock add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x000002000058ed2c : lock add byte ptr [rax], al ; add bh, bh ; ret 0x49e8
0x0000020000076fe9 : lock add byte ptr [rax], al ; add bl, al ; jmp rax
0x000002000003a26c : lock add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200003def7e : lock add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000049e48f : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or edi, dword ptr [rbx] ; ret 0x470f
0x00000200000d665d : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rax ; jo 0x200000d6658 ; ret
0x00000200001abf79 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001cbcf3 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001cbcb3 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200000cc0d6 : lock add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x00000200003df483 : lock add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x470f
0x000002000011b35b : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x00000200000ac7ee : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000019211c : lock add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000002000055851a : lock add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000200005b711c : lock add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x00000200003a45bd : lock add byte ptr gs:[rax - 0x75], cl ; ret
0x00000200003b7af5 : lock add dword ptr [rax], eax ; add al, ch ; ret 0xcbf6
0x00000200006108ba : lock add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000160a2d : lock add dword ptr [rbx], edi ; ret
0x000002000019a559 : lock and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000015038b : lock and dword ptr [r10], eax ; ret
0x000002000056fdcd : lock and dword ptr [r9], eax ; ret
0x000002000014432d : lock and dword ptr [rcx + 0x42c], 0xffffffef ; ret
0x0000020000105a47 : lock and qword ptr [r8], 0 ; ret
0x00000200000a91bc : lock and qword ptr [rcx], 0 ; ret
0x0000020000054a1a : lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x00000200000a818c : lock bts qword ptr [rcx], 0 ; jb 0x200000a819d ; ret
0x000002000011d488 : lock bts qword ptr [rcx], 0 ; jb 0x2000011d499 ; ret
0x000002000039bd0c : lock bts qword ptr [rcx], 0 ; jb 0x2000039bd1d ; ret
0x000002000039bd0b : lock bts qword ptr [rcx], 0 ; jb 0x2000039bd1e ; ret
0x00000200004aeef8 : lock bts qword ptr [rcx], 0 ; jb 0x200004aef09 ; ret
0x00000200003bbb9a : lock cmpxchg dword ptr [rcx + 0x10], edx ; jne 0x200003bbb9c ; mov al, 1 ; ret
0x00000200000cc42c : lock cmpxchg dword ptr [rcx], edx ; jne 0x200000cc439 ; ret
0x00000200001e592a : lock cmpxchg dword ptr [rip + 0xb9b86], ecx ; ret
0x000002000004f22e : lock cmpxchg qword ptr [r10 + 0x40], rdx ; jne 0x2000004f24c ; ret
0x00000200000b7fde : lock cmpxchg qword ptr [r8], rcx ; jne 0x200000b7ff1 ; mov al, 1 ; ret
0x00000200000b8021 : lock cmpxchg qword ptr [r8], rcx ; jne 0x200000b8019 ; ret
0x000002000013751b : lock cmpxchg qword ptr [r8], rcx ; jne 0x2000013752e ; mov al, 1 ; ret
0x00000200000bde93 : lock cmpxchg qword ptr [r8], rdx ; jne 0x200000bde80 ; ret
0x00000200001e3afa : lock cmpxchg qword ptr [r9 + 0x10], rcx ; jne 0x200001e3ae1 ; ret
0x00000200001620cf : lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200004051df : lock cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x0000020000063cdf : lock cmpxchg qword ptr [rcx], r8 ; jne 0x20000063cc5 ; ret
0x00000200000beee9 : lock cmpxchg qword ptr [rcx], r8 ; jne 0x200000bef00 ; ret
0x00000200000df889 : lock cmpxchg qword ptr [rcx], r8 ; jne 0x200000df8b6 ; ret
0x000002000057dd5a : lock cmpxchg qword ptr [rcx], rdx ; je 0x2000057dd6f ; call 0x200000d9fd9
0x000002000057dd89 : lock cmpxchg qword ptr [rcx], rdx ; je 0x2000057dd9e ; call 0x200000d9fd9
0x000002000001edda : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000001ede9 ; ret
0x00000200000202cd : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000202d1 ; ret
0x000002000006cc33 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000006cc42 ; ret
0x00000200000bde26 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000bde43 ; mov al, 1 ; ret
0x00000200000d9fae : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000d9fc4 ; mov al, 1 ; ret
0x0000020000152a4a : lock cmpxchg qword ptr [rcx], rdx ; jne 0x20000152a5d ; mov al, 1 ; ret
0x000002000039a4a7 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000039a4b6 ; ret
0x000002000046aa25 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000046aa34 ; ret
0x00000200001b6af4 : lock cmpxchg qword ptr [rdi], rcx ; jne 0x200001b6b07 ; mov al, dl ; jmp 0x200001b6b0f
0x0000020000076ebe : lock cmpxchg16b xmmword ptr [r11] ; jne 0x20000076eb1 ; mov rax, r10 ; pop rbx ; ret
0x000002000001bd80 : lock dec dword ptr [r8] ; ret
0x00000200001e25f5 : lock dec dword ptr [rax + 0x3b] ; ret 0x830f
0x00000200001df49f : lock dec dword ptr [rax - 0x3f] ; call 0x1ffc2593cd0
0x00000200001a06aa : lock dec dword ptr [rax - 0x75] ; ret
0x00000200001e022d : lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000052010a : lock dec dword ptr [rax - 0x7d] ; ret
0x00000200005eec11 : lock dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200004476f6 : lock dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200001b5f2e : lock dec dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000574b07 : lock dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005aa9d : lock dec dword ptr [rcx + 0x46c] ; ret
0x000002000012c193 : lock dec dword ptr [rcx + 0x8c] ; ret
0x000002000019218c : lock dec dword ptr [rcx + 8] ; ret
0x0000020000431172 : lock dec dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001537e5 : lock dec dword ptr [rcx] ; ret
0x00000200001a369a : lock dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000016e34c : lock dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x0000020000193c58 : lock dec dword ptr [rip + 0x104551] ; ret
0x00000200001ee9c8 : lock dec dword ptr [rip + 0x10765d] ; jmp 0x200000aacab
0x0000020000188d92 : lock dec dword ptr [rip + 0x1162f3] ; ret
0x0000020000188d74 : lock dec dword ptr [rip + 0x11630d] ; ret
0x00000200001158ae : lock inc dword ptr [ebp + 0x3b0e74f6] ; ret 0xe76
0x000002000035fee9 : lock inc dword ptr [r8] ; ret
0x00000200004ebe30 : lock inc dword ptr [rax + 0x10] ; ret
0x000002000065407d : lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x0000020000149ec1 : lock inc dword ptr [rax + 0x200] ; ret
0x000002000038105e : lock inc dword ptr [rax] ; ret
0x00000200001b78b6 : lock inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x00000200001158af : lock inc dword ptr [rbp + 0x3b0e74f6] ; ret 0xe76
0x000002000041118c : lock inc dword ptr [rbx + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d7b47 : lock inc dword ptr [rbx] ; ret
0x0000020000150f90 : lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd1a0 : lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03c0 : lock inc dword ptr [rcx + 0x38] ; ret
0x0000020000120f70 : lock inc dword ptr [rcx + 0x3b] ; ret
0x000002000005aa8c : lock inc dword ptr [rcx + 0x46c] ; ret
0x00000200003981f0 : lock inc dword ptr [rcx + 0x4c0] ; ret
0x0000020000192194 : lock inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001921a0 : lock inc dword ptr [rcx + 4] ; ret
0x0000020000192198 : lock inc dword ptr [rcx + 8] ; ret
0x00000200005e04e4 : lock inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x0000020000369d4c : lock inc dword ptr [rcx - 0xa] ; ret
0x00000200000c78cb : lock or byte ptr [rsp], 0 ; ret
0x000002000015367d : lock or dword ptr [r10], eax ; ret
0x00000200003c792f : lock or dword ptr [rax], eax ; xor al, al ; ret
0x00000200006ca054 : lock or dword ptr [rax], r11d ; add rsp, 0x38 ; ret
0x0000020000144324 : lock or dword ptr [rcx + 0x42c], 0x10 ; ret
0x0000020000119614 : lock or dword ptr [rip + 0x15a56d], ecx ; ret
0x00000200001bec94 : lock or dword ptr [rip + 0x198405], ecx ; ret
0x00000200001c50ee : lock or dword ptr [rsp], 0 ; ret
0x00000200000f9eef : lock sub qword ptr [rip + 0x1d20c9], rax ; ret
0x00000200003976a7 : lock xadd dword ptr [rcx + 8], eax ; dec eax ; je 0x200003976ba ; ret
0x0000020000132aa7 : lock xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200001425bd : lock xadd qword ptr [r8 + rcx*8 + 0x10], r14 ; jmp 0x2000003e8ac
0x00000200001425cf : lock xadd qword ptr [r8 + rcx*8 + 0x20], r14 ; jmp 0x2000003e8ac
0x00000200001388bf : lock xadd qword ptr [rax + 0x5938], rdx ; ret
0x00000200003cda0e : lock xadd qword ptr [rcx - 0x10], rax ; ret
0x000002000005eaae : lock xadd qword ptr [rdx + 0x4c8], rax ; ret
0x00000200000b8b4d : lock xadd qword ptr [rip + 0x29762a], r8 ; ret
0x0000020000234fd8 : lock xor byte ptr [rbp], bl ; ret 0x3efb
0x0000020000508265 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; cmc ; ret
0x00000200001a7503 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bl, dl ; loopne 0x200001a751c ; ret 0x789
0x00000200000c356c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200001a6d73 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x00000200003a39b2 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000019c97c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200003d0f22 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004693d8 : lodsb al, byte ptr [rsi] ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8d4d
0x00000200000c2798 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xff0
0x0000020000051543 : lodsb al, byte ptr [rsi] ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x3b49
0x000002000018d2ef : lodsb al, byte ptr [rsi] ; and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000062a6b1 : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x12063d17]
0x00000200006019c9 : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x193d1e17]
0x000002000062aebd : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x20c6c817]
0x00000200004cc400 : lodsb al, byte ptr [rsi] ; call qword ptr [rax]
0x00000200001348e6 : lodsb al, byte ptr [rsi] ; call rax
0x00000200003f4a00 : lodsb al, byte ptr [rsi] ; cmc ; ret 0x48ff
0x00000200001621f4 : lodsb al, byte ptr [rsi] ; cmp eax, 0x2890018 ; xor eax, eax ; ret
0x00000200005a3c64 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; je 0x200005a3c96 ; js 0x200005a3bff ; ret
0x000002000062ae1d : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000059e073 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ae38b : lodsb al, byte ptr [rsi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200005f6b6a : lodsb al, byte ptr [rsi] ; enter -0x1601, -0x66 ; ret 0xffe8
0x000002000012a1ef : lodsb al, byte ptr [rsi] ; idiv edi ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006348af : lodsb al, byte ptr [rsi] ; inc dword ptr [rbp - 0x74f38740] ; ret
0x00000200005b9fc3 : lodsb al, byte ptr [rsi] ; inc dword ptr [rbp - 0x9ef8640] ; ret
0x000002000060114a : lodsb al, byte ptr [rsi] ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000008e325 : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; jae 0x2000008e317 ; ret
0x00000200004885c0 : lodsb al, byte ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x000002000064303b : lodsb al, byte ptr [rsi] ; je 0x20000643048 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200005ca8e0 : lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x000002000008deff : lodsb al, byte ptr [rsi] ; jnp 0x2000008df7c ; add cl, bh ; jp 0x2000008df0c ; ret 0x4adb
0x000002000008defe : lodsb al, byte ptr [rsi] ; jnp 0x2000008df7d ; add cl, bh ; jp 0x2000008df0d ; ret 0x4adb
0x0000020000665320 : lodsb al, byte ptr [rsi] ; lodsd eax, dword ptr [rsi] ; ret 0xfff
0x000002000005a9ca : lodsb al, byte ptr [rsi] ; mov rcx, rbx ; jmp 0x2000005a997
0x00000200003be344 : lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000610b15 : lodsb al, byte ptr [rsi] ; or ebx, ebx ; push rsi ; ret
0x000002000013328f : lodsb al, byte ptr [rsi] ; out dx, al ; call qword ptr [rax - 0x5043d17]
0x0000020000082d12 : lodsb al, byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200000aba70 : lodsb al, byte ptr [rsi] ; push 0x14 ; add byte ptr [rsi - 1], ah ; ret 0xf44
0x000002000000768d : lodsb al, byte ptr [rsi] ; ret
0x000002000025f30c : lodsb al, byte ptr [rsi] ; ret 0x23
0x0000020000645419 : lodsb al, byte ptr [rsi] ; ret 0x48ff
0x0000020000665462 : lodsb al, byte ptr [rsi] ; ret 0x4ff
0x00000200001ee352 : lodsb al, byte ptr [rsi] ; ret 0x6c80
0x000002000066544b : lodsb al, byte ptr [rsi] ; ret 0x83ff
0x000002000066542d : lodsb al, byte ptr [rsi] ; ret 0x89ff
0x0000020000665427 : lodsb al, byte ptr [rsi] ; ret 0x8bff
0x0000020000665415 : lodsb al, byte ptr [rsi] ; ret 0xe8ff
0x0000020000396b90 : lodsb al, byte ptr [rsi] ; ret 0xffcd
0x00000200005e0a36 : lodsb al, byte ptr [rsi] ; ret 0xffd9
0x00000200001f7f57 : lodsb al, byte ptr [rsi] ; ret 0xffe3
0x000002000049dec0 : lodsb al, byte ptr [rsi] ; sbb al, 0xe0 ; push rsi ; ret
0x00000200003d877a : lodsb al, byte ptr [rsi] ; sub al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004c6dd0 : lodsb al, byte ptr [rsi] ; sub bh, byte ptr [rdi - 0x9e97401] ; ret 0x7401
0x0000020000662798 : lodsb al, byte ptr [rsi] ; xchg eax, edx ; ret 0x3ff
0x00000200001443c6 : lodsd eax, dword ptr [rsi] ; adc eax, 0x48d4900 ; sub ecx, dword ptr [rcx + 0x3b] ; ret
0x000002000041b35d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0
0x000002000006198e : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7506
0x0000020000398baf : lodsd eax, dword ptr [rsi] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e5d2c : lodsd eax, dword ptr [rsi] ; call r12
0x000002000048eb0f : lodsd eax, dword ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; in al, -1 ; call 0x200000b9b07
0x000002000048e54e : lodsd eax, dword ptr [rsi] ; in al, -1 ; mov edi, eax ; call 0x200000b9b08
0x000002000008784d : lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x000002000063541c : lodsd eax, dword ptr [rsi] ; out dx, al ; ret
0x0000020000443e8f : lodsd eax, dword ptr [rsi] ; out dx, eax ; ret 0x4dff
0x0000020000648c4f : lodsd eax, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; add al, 0 ; add rsp, 0x48 ; ret
0x0000020000434d80 : lodsd eax, dword ptr [rsi] ; ret
0x00000200006652a3 : lodsd eax, dword ptr [rsi] ; ret 0x44ff
0x0000020000478d0f : lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x00000200004f4c09 : lodsd eax, dword ptr [rsi] ; ret 0x49ff
0x00000200006652d3 : lodsd eax, dword ptr [rsi] ; ret 0x4cff
0x0000020000247b68 : lodsd eax, dword ptr [rsi] ; ret 0x4d
0x0000020000520b11 : lodsd eax, dword ptr [rsi] ; ret 0x85ff
0x0000020000091ef6 : lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200004942ad : lodsd eax, dword ptr [rsi] ; ret 0xb8ff
0x0000020000424f39 : lodsd eax, dword ptr [rsi] ; ret 0xebff
0x00000200005b8823 : lodsd eax, dword ptr [rsi] ; ret 0xffa9
0x000002000065a71f : lodsd eax, dword ptr [rsi] ; ret 0xffc3
0x0000020000599de7 : lodsd eax, dword ptr [rsi] ; ret 0xffd5
0x000002000059f3bb : lodsd eax, dword ptr [rsi] ; ret 0xffde
0x0000020000665321 : lodsd eax, dword ptr [rsi] ; ret 0xfff
0x000002000004d38e : lodsd eax, dword ptr [rsi] ; sbb al, byte ptr [rax] ; ret
0x00000200005f6c17 : lodsd eax, dword ptr [rsi] ; stosd dword ptr [rdi], eax ; enter -0x1601, -0x49 ; ret
0x00000200003975bf : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; ret
0x0000020000407f66 : lodsd eax, dword ptr [rsi] ; xchg byte ptr [rax], ah ; add dh, dh ; ret
0x000002000017223f : lodsd eax, dword ptr [rsi] ; xchg eax, edi ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000200001bd1e5 : lodsd eax, dword ptr [rsi] ; xor byte ptr [rcx], bl ; add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x0000020000520b10 : lodsq rax, qword ptr [rsi] ; ret 0x85ff
0x0000020000018ef2 : loop 0x20000018eec ; ret 0xf15
0x0000020000051b90 : loop 0x20000051b1f ; ret 0x8d48
0x0000020000066f49 : loop 0x20000066f59 ; je 0x20000066f3a ; mov al, 1 ; ret
0x000002000007c991 : loop 0x2000007c932 ; fnstcw word ptr [rcx] ; ret
0x000002000008db7b : loop 0x2000008dbad ; adc dword ptr [rdx], ebp ; lahf ; ret
0x00000200000edb2c : loop 0x200000edb3c ; add cl, ch ; mov ebx, 0x3bfffffa ; ret 0x1976
0x0000020000108a0a : loop 0x20000108a01 ; ret
0x000002000010f07e : loop 0x2000010f078 ; ret 0xf55
0x000002000012a3f0 : loop 0x2000012a3ea ; ret 0xf15
0x0000020000133cb4 : loop 0x20000133cdb ; or rax, rdx ; ret
0x0000020000134b24 : loop 0x20000134b2c ; add al, 0 ; add byte ptr [rbx], dh ; ret 0x8348
0x0000020000139a4c : loop 0x20000139a6d ; add byte ptr [rbp + 1], dh ; ret
0x0000020000140306 : loop 0x20000140348 ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000014197b : loop 0x20000141972 ; ret
0x0000020000151e1f : loop 0x20000151e45 ; or rax, rdx ; pop rdi ; ret
0x0000020000151e1f : loop 0x20000151e47 ; or rax, rdx ; pop rdi ; ret
0x00000200001682cd : loop 0x200001682f7 ; or rdx, rax ; mov rax, rdx ; ret
0x0000020000171b97 : loop 0x20000171b83 ; ret
0x000002000017a441 : loop 0x2000017a467 ; or rax, rdx ; ret
0x000002000017a441 : loop 0x2000017a468 ; or rax, rdx ; ret
0x000002000017f860 : loop 0x2000017f85a ; ret 0x7455
0x0000020000187b30 : loop 0x20000187b4a ; add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x0000020000199c4a : loop 0x20000199c59 ; ret 0x8941
0x000002000019a44e : loop 0x2000019a45d ; ret 0x8b41
0x000002000019c556 : loop 0x2000019c56b ; add edx, ecx ; mov qword ptr [r9], r8 ; mov eax, edx ; ret
0x00000200001ad745 : loop 0x200001ad6d4 ; ret 0xd0f7
0x00000200001ae4c1 : loop 0x200001ae449 ; inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x00000200001af4df : loop 0x200001af46e ; ret 0xd0f7
0x00000200001afa77 : loop 0x200001afa06 ; ret 0xd0f7
0x00000200001b0005 : loop 0x200001b000d ; lea r9, qword ptr [rcx + rax*2] ; mov r8, rdx ; jmp 0x200001b0031
0x00000200001baf40 : loop 0x200001baf6b ; or rax, rdx ; add rsp, 0x28 ; ret
0x00000200001c2f01 : loop 0x200001c2e90 ; ret 0x4e0f
0x00000200001d4fc9 : loop 0x200001d5000 ; in eax, dx ; dec dword ptr [rbp - 0x75] ; ret
0x00000200001e9596 : loop 0x200001e959c ; nop ; jmp 0x200000d5873
0x00000200001f0262 : loop 0x200001f0202 ; or dword ptr [rax], eax ; call rax
0x00000200001f7e21 : loop 0x200001f7e27 ; nop ; jmp 0x2000003409e
0x00000200002008f3 : loop 0x200002008fd ; lea rax, qword ptr [rip - 0x104dfc] ; ret
0x0000020000200904 : loop 0x2000020090e ; lea rax, qword ptr [rip - 0x10292d] ; ret
0x000002000036be32 : loop 0x2000036be42 ; call rax
0x000002000037dc4d : loop 0x2000037dc29 ; push rsi ; ret
0x000002000037ddd2 : loop 0x2000037dde4 ; jae 0x2000037dde3 ; add rsp, 0x38 ; ret
0x000002000039b63c : loop 0x2000039b615 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000039b63b : loop 0x2000039b616 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200003b2541 : loop 0x200003b2546 ; call rdi
0x00000200003bd65d : loop 0x200003bd661 ; dec dword ptr [rax - 0x75] ; retf ; call rsi
0x00000200003d6bc4 : loop 0x200003d6bdb ; jb 0x200003d6bde ; ret
0x00000200003f981a : loop 0x200003f9808 ; nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xebff
0x000002000042f72c : loop 0x2000042f6b3 ; jmp qword ptr [rax]
0x000002000043e464 : loop 0x2000043e47f ; ret 0xac83
0x000002000044246d : loop 0x20000442476 ; jmp 0x200004423d4
0x000002000044471a : loop 0x2000044476d ; in eax, -1 ; call 0x2000006ad2f
0x000002000046dc3c : loop 0x2000046dc0d ; dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x0000020000480ce7 : loop 0x20000480ce2 ; ret 0x3a0
0x00000200004a106d : loop 0x200004a0ff9 ; cli ; add al, 0xf ; test cl, dl ; ret
0x00000200004b05fe : loop 0x200004b0601 ; ret
0x00000200004b0b1e : loop 0x200004b0b5d ; ret 0xde75
0x00000200004ba6c4 : loop 0x200004ba6c7 ; ret
0x00000200004d516a : loop 0x200004d517e ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004d56d7 : loop 0x200004d56d2 ; ret 0xffe0
0x00000200004fbed5 : loop 0x200004fbe62 ; leave ; je 0x200004fbeb2 ; xor eax, eax ; ret
0x0000020000513caa : loop 0x20000513c3e ; or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000522015 : loop 0x2000052201f ; call 0x2000014b9d9
0x000002000052d3b8 : loop 0x2000052d3bd ; call 0x200000b9664
0x00000200005987a7 : loop 0x200005987b1 ; add rsp, 0x98 ; ret
0x00000200005bc740 : loop 0x200005bc748 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d8f64 : loop 0x200005d8f6c ; mov rcx, rbx ; call 0x200003d5177
0x00000200005d9331 : loop 0x200005d9339 ; mov rcx, rdi ; call 0x200003d5587
0x00000200005e003d : loop 0x200005e0046 ; add byte ptr [rax], al ; call 0x2000007c346
0x00000200005fa01a : loop 0x200005f9fce ; cmpsb byte ptr [rsi], byte ptr [rdi] ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200005f9fee
0x0000020000632d2a : loop 0x20000632cef ; ret
0x0000020000632d2a : loop 0x20000632cf0 ; ret
0x0000020000632d2a : loop 0x20000632cf3 ; ret
0x0000020000636342 : loop 0x200006363be ; sar edi, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000636e1b : loop 0x20000636e12 ; ret
0x0000020000644a07 : loop 0x20000644a1a ; call 0x20000270045
0x000002000064da03 : loop 0x2000064da0e ; call 0x20000270045
0x0000020000658791 : loop 0x20000658773 ; ret
0x0000020000667632 : loop 0x200006675c0 ; ret 0x48ff
0x00000200006d17e4 : loop 0x200006d181b ; ret 0x8948
0x00000200006d19d9 : loop 0x200006d1a10 ; ret 0x8948
0x00000200006d2626 : loop 0x200006d265d ; ret 0x8948
0x00000200006d2cce : loop 0x200006d2d05 ; ret 0x8948
0x00000200006d3a64 : loop 0x200006d3a9b ; ret 0x8948
0x00000200006d646a : loop 0x200006d64a1 ; ret 0x8948
0x00000200006d66da : loop 0x200006d6711 ; ret 0x8948
0x00000200006d733f : loop 0x200006d7376 ; ret 0x8948
0x00000200006d7bdf : loop 0x200006d7c16 ; ret 0x8948
0x00000200006d8132 : loop 0x200006d8169 ; ret 0x8948
0x00000200006d886d : loop 0x200006d88a4 ; ret 0x8948
0x00000200006d911d : loop 0x200006d9154 ; ret 0x8948
0x00000200006d95cd : loop 0x200006d9604 ; ret 0x8948
0x00000200006d9d01 : loop 0x200006d9d38 ; ret 0x8948
0x00000200006da5c4 : loop 0x200006da5fb ; ret 0x8948
0x00000200006daa58 : loop 0x200006daa8f ; ret 0x8948
0x00000200006db274 : loop 0x200006db2ab ; ret 0x8948
0x00000200006dbb4b : loop 0x200006dbb82 ; ret 0x8948
0x00000200006dc054 : loop 0x200006dc08b ; ret 0x8948
0x00000200006dc7f5 : loop 0x200006dc82c ; ret 0x8948
0x00000200006dd0a5 : loop 0x200006dd0dc ; ret 0x8948
0x00000200006dd567 : loop 0x200006dd59e ; ret 0x8948
0x00000200006dddc6 : loop 0x200006dddfd ; ret 0x8948
0x00000200006de6ad : loop 0x200006de6e4 ; ret 0x8948
0x00000200006deb93 : loop 0x200006debca ; ret 0x8948
0x00000200006df136 : loop 0x200006df16d ; ret 0x8948
0x00000200006df5df : loop 0x200006df616 ; ret 0x8948
0x00000200006dfac4 : loop 0x200006dfafb ; ret 0x8948
0x00000200006dffb1 : loop 0x200006dffe8 ; ret 0x8948
0x00000200006e0387 : loop 0x200006e03be ; ret 0x8948
0x00000200006e076b : loop 0x200006e07a2 ; ret 0x8948
0x00000200006e0b5d : loop 0x200006e0b94 ; ret 0x8948
0x00000200006e0f64 : loop 0x200006e0f9b ; ret 0x8948
0x00000200006e1365 : loop 0x200006e139c ; ret 0x8948
0x00000200006e177d : loop 0x200006e17b4 ; ret 0x8948
0x00000200006e1b87 : loop 0x200006e1bbe ; ret 0x8948
0x00000200006e1fa6 : loop 0x200006e1fdd ; ret 0x8948
0x00000200006e23d5 : loop 0x200006e240c ; ret 0x8948
0x00000200006e28a2 : loop 0x200006e28d9 ; ret 0x8948
0x00000200006e2e61 : loop 0x200006e2e98 ; ret 0x8948
0x00000200006e3435 : loop 0x200006e346c ; ret 0x8948
0x00000200006e38f2 : loop 0x200006e3929 ; ret 0x8948
0x00000200006e3d6a : loop 0x200006e3da1 ; ret 0x8948
0x00000200006e3f42 : loop 0x200006e3f79 ; ret 0x8948
0x00000200006e4431 : loop 0x200006e4468 ; ret 0x8948
0x00000200006e48db : loop 0x200006e4912 ; ret 0x8948
0x00000200006e50ba : loop 0x200006e50f1 ; ret 0x8948
0x00000200006e54e9 : loop 0x200006e5520 ; ret 0x8948
0x00000200006e5918 : loop 0x200006e594f ; ret 0x8948
0x00000200006e5d58 : loop 0x200006e5d8f ; ret 0x8948
0x00000200006e6187 : loop 0x200006e61be ; ret 0x8948
0x00000200006e6814 : loop 0x200006e684b ; ret 0x8948
0x00000200006e6adf : loop 0x200006e6b16 ; ret 0x8948
0x00000200006e6e5f : loop 0x200006e6e96 ; ret 0xbd83
0x00000200006f2cba : loop 0x200006f2cd7 ; or eax, edx ; ret
0x00000200006f2cba : loop 0x200006f2cd8 ; or eax, edx ; ret
0x000002000070e647 : loop 0x2000070e64a ; ret
0x000002000000cc23 : loope 0x2000000cbb5 ; add al, 0xb ; ret
0x0000020000016de1 : loope 0x20000016dae ; mov rax, cr3 ; mov cr3, rax ; ret
0x000002000003a1c1 : loope 0x2000003a1e3 ; jb 0x2000003a1d1 ; ret
0x0000020000084a59 : loope 0x200000849e5 ; ret
0x00000200000aa2a0 : loope 0x200000aa22f ; ret 0xe8d1
0x00000200000c6b65 : loope 0x200000c6b4f ; jmp 0x200000c6363
0x00000200000dd084 : loope 0x200000dd07e ; ret 0xf08
0x00000200000e5646 : loope 0x200000e5630 ; jmp 0x200000e4c28
0x00000200000e9460 : loope 0x200000e942d ; mov rax, cr3 ; mov cr3, rax ; ret
0x00000200000fa646 : loope 0x200000fa666 ; jb 0x200000fa659 ; mov eax, 0xc000000d ; ret
0x00000200000fe8ec : loope 0x200000fe931 ; mov eax, ecx ; ret
0x0000020000101bbd : loope 0x20000101b4c ; ret
0x000002000010a8d0 : loope 0x2000010a890 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000111ac4 : loope 0x20000111add ; jb 0x20000111ad1 ; xor eax, eax ; ret
0x00000200001140b2 : loope 0x20000114102 ; add esp, 0x20 ; pop rbx ; ret
0x000002000013b3fb : loope 0x2000013b427 ; add byte ptr [rax + 3], cl ; shl byte ptr [rsi - 0x77], 0xc ; ret 0x366
0x0000020000140f51 : loope 0x20000140ee5 ; add eax, 0x2160b4 ; ret
0x00000200001521f3 : loope 0x20000152248 ; and byte ptr [rax], al ; ret
0x00000200001650f6 : loope 0x20000165085 ; ret 0xd8f7
0x000002000016847a : loope 0x2000016843a ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000174b51 : loope 0x20000174b9a ; shl rax, cl ; or qword ptr [r8], rax ; ret
0x00000200001818f8 : loope 0x200001818c5 ; mov rax, cr3 ; mov cr3, rax ; ret
0x000002000019d346 : loope 0x2000019d33d ; ret
0x00000200001bb89b : loope 0x200001bb85b ; idiv edi ; add rsp, 0x38 ; ret
0x0000020000387139 : loope 0x200003870c8 ; ret 0x8948
0x00000200003a576f : loope 0x200003a57d8 ; jmp qword ptr [rdi]
0x00000200003c95eb : loope 0x200003c960e ; jb 0x200003c9602 ; ret
0x00000200003f4acb : loope 0x200003f4ac3 ; ret 0x48ff
0x0000020000401eed : loope 0x20000401f05 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000041dd23 : loope 0x2000041dd2e ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x000002000042f3be : loope 0x2000042f3ac ; sub al, 0x6a ; ret
0x0000020000434686 : loope 0x200004346a0 ; test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000046d66b : loope 0x2000046d6e6 ; ret
0x0000020000472d55 : loope 0x20000472d59 ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000048424b : loope 0x200004841fc ; ret
0x000002000048969f : loope 0x200004896a8 ; mov rcx, r15 ; call 0x200000b6728
0x0000020000490b51 : loope 0x20000490b8f ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004b9f09 : loope 0x200004b9e97 ; ret 0x8b4c
0x00000200004fb0c1 : loope 0x200004fb132 ; test r9d, r10d ; je 0x200004fb0d4 ; mov al, 1 ; ret
0x0000020000508c2b : loope 0x20000508c1d ; ret
0x000002000050c3fc : loope 0x2000050c3f7 ; ret 0xffe0
0x000002000051fb0a : loope 0x2000051fa91 ; ret 0x4803
0x0000020000577bd7 : loope 0x20000577b9b ; ret
0x0000020000579f2b : loope 0x20000579f2e ; mov rax, rcx ; ret
0x000002000059cdde : loope 0x2000059ce19 ; leave ; mov rax, rcx ; ret
0x00000200005a2b8d : loope 0x200005a2b95 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060ca63 : loope 0x2000060ca68 ; call 0x200000f8d54
0x000002000060e768 : loope 0x2000060e76e ; nop ; jmp 0x2000042aa6b
0x0000020000637ee7 : loope 0x20000637eae ; ret
0x0000020000640dc1 : loope 0x20000640de9 ; jae 0x20000640dd4 ; mov eax, 1 ; ret
0x000002000064c04e : loope 0x2000064c055 ; mov eax, ecx ; ret
0x0000020000659916 : loope 0x20000659966 ; add esp, 0x38 ; jmp rax
0x000002000065996e : loope 0x200006599be ; add esp, 0x38 ; jmp rax
0x00000200006599c6 : loope 0x20000659a16 ; add esp, 0x38 ; jmp rax
0x0000020000659a1e : loope 0x20000659a6e ; add esp, 0x38 ; jmp rax
0x0000020000659a76 : loope 0x20000659ac6 ; add esp, 0x38 ; jmp rax
0x0000020000659ace : loope 0x20000659b1e ; add esp, 0x38 ; jmp rax
0x0000020000659b26 : loope 0x20000659b76 ; add esp, 0x38 ; jmp rax
0x0000020000659b7e : loope 0x20000659bce ; add esp, 0x38 ; jmp rax
0x0000020000659bd6 : loope 0x20000659c26 ; add esp, 0x38 ; jmp rax
0x0000020000659c2e : loope 0x20000659c7e ; add esp, 0x38 ; jmp rax
0x0000020000659c86 : loope 0x20000659cd6 ; add esp, 0x38 ; jmp rax
0x0000020000659cde : loope 0x20000659d2e ; add esp, 0x38 ; jmp rax
0x0000020000659d36 : loope 0x20000659d86 ; add esp, 0x38 ; jmp rax
0x0000020000659d8e : loope 0x20000659dde ; add esp, 0x38 ; jmp rax
0x0000020000659de6 : loope 0x20000659e36 ; add esp, 0x38 ; jmp rax
0x0000020000659e3e : loope 0x20000659e8e ; add esp, 0x38 ; jmp rax
0x0000020000659e93 : loope 0x20000659ee3 ; add esp, 0x38 ; jmp rax
0x0000020000659ee7 : loope 0x20000659f37 ; add esp, 0x38 ; jmp rax
0x0000020000659f3b : loope 0x20000659f8b ; add esp, 0x38 ; jmp rax
0x0000020000659f8f : loope 0x20000659fdf ; add esp, 0x38 ; jmp rax
0x0000020000659fe3 : loope 0x2000065a033 ; add esp, 0x38 ; jmp rax
0x000002000065a037 : loope 0x2000065a087 ; add esp, 0x38 ; jmp rax
0x000002000065a08b : loope 0x2000065a0db ; add esp, 0x38 ; jmp rax
0x000002000065a0df : loope 0x2000065a12f ; add esp, 0x38 ; jmp rax
0x000002000065a133 : loope 0x2000065a183 ; add esp, 0x38 ; jmp rax
0x000002000065a187 : loope 0x2000065a1d7 ; add esp, 0x38 ; jmp rax
0x000002000065a1db : loope 0x2000065a22b ; add esp, 0x38 ; jmp rax
0x000002000065a22f : loope 0x2000065a27f ; add esp, 0x38 ; jmp rax
0x000002000065a27e : loope 0x2000065a2ce ; add esp, 0x38 ; jmp rax
0x000002000065a2d3 : loope 0x2000065a323 ; add esp, 0x38 ; jmp rax
0x000002000065a373 : loope 0x2000065a3c3 ; add esp, 0x38 ; jmp rax
0x0000020000662540 : loope 0x200006624d2 ; cmp r8b, bpl ; ret
0x00000200006660cb : loope 0x20000666059 ; ret 0x4dff
0x000002000066806b : loope 0x200006680e2 ; ret 0x48ff
0x000002000069dafb : loope 0x2000069db32 ; ret 0x8948
0x000002000069dc71 : loope 0x2000069dca8 ; ret 0x8948
0x000002000069e161 : loope 0x2000069e198 ; ret 0x8948
0x000002000069ecb7 : loope 0x2000069ecee ; ret 0x8948
0x000002000069f54c : loope 0x2000069f583 ; ret 0x8948
0x000002000069fa9b : loope 0x2000069fad2 ; ret 0x8948
0x00000200006a0302 : loope 0x200006a0298 ; mov dr0, word ptr [rsp + rax] ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200006a0358 : loope 0x200006a038f ; ret 0x8948
0x00000200006c58e0 : loope 0x200006c58f6 ; mov dword ptr [rip - 0x444b98], ecx ; ret
0x00000200006c761f : loope 0x200006c762d ; ret 0xbeff
0x00000200006d027e : loope 0x200006d02a2 ; sar rcx, 0x10 ; mov rax, rcx ; ret
0x00000200006e78dc : loope 0x200006e78b1 ; nop ; prefetchw byte ptr [rcx] ; ret
0x00000200006e91d5 : loope 0x200006e91dc ; add rsp, 0x48 ; ret
0x0000020000708477 : loope 0x20000708406 ; ret
0x000002000070d589 : loope 0x2000070d58a ; call rcx
0x0000020000016dde : loopne 0x20000016df3 ; and ah, cl ; ret
0x0000020000017c7a : loopne 0x20000017cc9 ; mov dword ptr [rax], eax ; ret
0x000002000001ab3b : loopne 0x2000001ab41 ; ret
0x000002000001b368 : loopne 0x2000001b354 ; ret 0xdf
0x000002000001b367 : loopne 0x2000001b355 ; ret 0xdf
0x000002000001e30d : loopne 0x2000001e302 ; vunpcklps xmm0, xmm8, xmmword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000002437b : loopne 0x2000002430a ; ret 0x5489
0x000002000002c860 : loopne 0x2000002c86c ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000038cf3 : loopne 0x20000038d06 ; or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000038f77 : loopne 0x20000038f63 ; ret
0x0000020000038f76 : loopne 0x20000038f64 ; ret
0x0000020000041f3f : loopne 0x20000041f06 ; jmp 0x20000040dff
0x000002000004d68c : loopne 0x2000004d693 ; cmp rax, rcx ; jne 0x2000004d66e ; xor eax, eax ; ret
0x00000200000549e8 : loopne 0x200000549ed ; ret
0x0000020000059160 : loopne 0x2000005919a ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x000002000006b5cf : loopne 0x2000006b55e ; ret
0x000002000006c0e3 : loopne 0x2000006c0eb ; add byte ptr [rax], al ; ret
0x000002000006c20c : loopne 0x2000006c217 ; add rax, rcx ; ret
0x000002000007c65d : loopne 0x2000007c662 ; or eax, r8d ; wrmsr ; ret 0
0x000002000007c79e : loopne 0x2000007c7a0 ; wrmsr ; ret 0
0x000002000007c80e : loopne 0x2000007c813 ; or eax, r8d ; wrmsr ; ret 0
0x000002000007c954 : loopne 0x2000007c959 ; or eax, r8d ; wrmsr ; ret 0
0x000002000008e58d : loopne 0x2000008e582 ; ret
0x000002000008e7b6 : loopne 0x2000008e7b4 ; pop rdx ; ret
0x000002000009030d : loopne 0x20000090377 ; clc ; jbe 0x20000090383 ; popfq ; ret
0x00000200000a86c2 : loopne 0x200000a86c8 ; pop rcx ; ret
0x00000200000af051 : loopne 0x200000af05c ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000bdf4c : loopne 0x200000bdf55 ; add byte ptr [rax], al ; ret
0x00000200000beeab : loopne 0x200000beea8 ; ret
0x00000200000bf2dc : loopne 0x200000bf2e5 ; add byte ptr [rax], al ; ret
0x00000200000c0b9e : loopne 0x200000c0bb7 ; xchg dword ptr [rip - 0x9ffed43], edi ; ret
0x00000200000c20d0 : loopne 0x200000c20dd ; or rax, r8 ; mov qword ptr [rdx], rax ; ret
0x00000200000c20e0 : loopne 0x200000c20ed ; or rax, r8 ; mov qword ptr [rdx], rax ; ret
0x00000200000c701c : loopne 0x200000c6fc3 ; inc dword ptr [rbp + 0x3b] ; ret 0x850f
0x00000200000cb5ba : loopne 0x200000cb549 ; ret
0x00000200000dd77d : loopne 0x200000dd78c ; add rax, qword ptr [rcx + 0x98] ; ret
0x00000200000e945d : loopne 0x200000e9472 ; and ah, cl ; ret
0x00000200000e984a : loopne 0x200000e9848 ; mov eax, r8d ; ret
0x00000200000e986a : loopne 0x200000e9858 ; mov eax, r8d ; ret
0x00000200000e985e : loopne 0x200000e9858 ; or r8d, 8 ; mov eax, r8d ; ret
0x00000200000f9eee : loopne 0x200000f9ee9 ; sub qword ptr [rip + 0x1d20c9], rax ; ret
0x00000200001090d9 : loopne 0x200001090e4 ; add eax, dword ptr [rdx + 0x260] ; ret
0x000002000010dad6 : loopne 0x2000010dade ; ret
0x0000020000115d24 : loopne 0x20000115d10 ; ret 0xf4f8
0x0000020000115d23 : loopne 0x20000115d11 ; ret 0xf4f8
0x000002000011ae15 : loopne 0x2000011ae23 ; mov eax, r8d ; ret
0x000002000012488b : loopne 0x20000124893 ; ret
0x000002000012946f : loopne 0x20000129474 ; ret
0x0000020000129f2c : loopne 0x20000129f4d ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000013b410 : loopne 0x2000013b3b1 ; adc al, 0 ; ret
0x000002000013c56b : loopne 0x2000013c577 ; mov dword ptr [rip + 0x144d5d], eax ; ret
0x000002000013c8fa : loopne 0x2000013c906 ; ret
0x0000020000140823 : loopne 0x20000140875 ; mov edx, esi ; mov rcx, r15 ; call r14
0x0000020000140822 : loopne 0x20000140876 ; mov edx, esi ; mov rcx, r15 ; call r14
0x00000200001418ac : loopne 0x200001418fd ; or dword ptr [rax + rdx*8 + 8], eax ; ret
0x0000020000144343 : loopne 0x20000144348 ; ret
0x00000200001491b0 : loopne 0x200001491b5 ; ret
0x000002000014aa53 : loopne 0x2000014aa13 ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000014ac06 : loopne 0x2000014ac0e ; dec eax ; ret
0x000002000014ec61 : loopne 0x2000014ec6d ; cqo ; idiv r8 ; ret
0x0000020000150388 : loopne 0x20000150388 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x0000020000152909 : loopne 0x2000015295a ; not eax ; and qword ptr [r8], rax ; ret
0x00000200001530ea : loopne 0x2000015313d ; not eax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000154566 : loopne 0x2000015456b ; ret
0x000002000015458a : loopne 0x20000154590 ; ret
0x000002000015b579 : loopne 0x2000015b56d ; ret
0x0000020000164db2 : loopne 0x20000164dc6 ; mov dword ptr [r8 + 0x28], eax ; ret
0x0000020000165b8b : loopne 0x20000165b9e ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000165bc7 : loopne 0x20000165bda ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000165c03 : loopne 0x20000165c16 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000165c3c : loopne 0x20000165c4f ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000170673 : loopne 0x2000017067c ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000174b55 : loopne 0x20000174ba4 ; or dword ptr [rax], eax ; ret
0x000002000017f785 : loopne 0x2000017f78e ; or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x000002000018096b : loopne 0x2000018098f ; sar rax, 0x10 ; add rax, rcx ; ret
0x0000020000181478 : loopne 0x20000181464 ; ret 0xf5b2
0x0000020000181477 : loopne 0x20000181465 ; ret 0xf5b2
0x00000200001818f5 : loopne 0x2000018190a ; and ah, cl ; ret
0x00000200001857f5 : loopne 0x200001857fb ; ret
0x00000200001869b7 : loopne 0x200001869e1 ; inc eax ; add rsp, 0x28 ; ret
0x0000020000187b35 : loopne 0x20000187b3c ; or eax, edx ; ret
0x0000020000191a90 : loopne 0x20000191a97 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001949d6 : loopne 0x200001949dd ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000197542 : loopne 0x20000197549 ; add byte ptr [rax], al ; ret
0x0000020000197932 : loopne 0x2000019793d ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000019bfed : loopne 0x2000019bff9 ; cdq ; idiv ecx ; add eax, r9d ; ret
0x00000200001a6fa7 : loopne 0x200001a6fab ; inc eax ; ret
0x00000200001a7508 : loopne 0x200001a7517 ; ret 0x789
0x00000200001ab02f : loopne 0x200001ab083 ; mov edx, ebp ; mov rcx, rbx ; call 0x200001a7299
0x00000200001b021a : loopne 0x200001b0259 ; ret 0xf272
0x00000200001b1298 : loopne 0x200001b12aa ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200001b5066 : loopne 0x200001b506f ; add rsp, 0x38 ; ret
0x00000200001b7827 : loopne 0x200001b782c ; ret
0x00000200001b7e1c : loopne 0x200001b7e25 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001ba685 : loopne 0x200001ba68a ; ret
0x00000200001c0f69 : loopne 0x200001c0f70 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001c2a8f : loopne 0x200001c2a94 ; ret
0x00000200001c323b : loopne 0x200001c3232 ; ret
0x00000200001e3b6c : loopne 0x200001e3b58 ; ret 0xf90b
0x00000200001e3b6b : loopne 0x200001e3b59 ; ret 0xf90b
0x00000200001e9234 : loopne 0x200001e9227 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001f01bc : loopne 0x200001f01cd ; add eax, 0xa ; ret
0x00000200001faf7a : loopne 0x200001faf84 ; call 0x200000771c4
0x00000200002490b3 : loopne 0x200002490bf ; clts ; add byte ptr [rdi], cl ; or eax, dword ptr fs:[rax] ; sysenter
0x000002000025cc74 : loopne 0x2000025cc3e ; and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x50
0x0000020000363e4b : loopne 0x20000363e9a ; add esp, 0x28 ; ret
0x000002000036a2e1 : loopne 0x2000036a2e8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000036be2e : loopne 0x2000036be42 ; shl rdx, 0xc ; call rax
0x000002000036d925 : loopne 0x2000036d974 ; add esp, 0x28 ; ret
0x0000020000370920 : loopne 0x20000370996 ; ret
0x000002000037154b : loopne 0x20000371597 ; mov cr4, rbx ; add rsp, 0x28 ; ret
0x0000020000392abd : loopne 0x20000392ae0 ; ret
0x0000020000392de6 : loopne 0x20000392e70 ; mov dword ptr [rcx + rax*4 + 0xbbc], edx ; ret
0x00000200003b681e : loopne 0x200003b67de ; add al, byte ptr [rax] ; add al, al ; ret
0x00000200003b7d3f : loopne 0x200003b7d4a ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003bd6d1 : loopne 0x200003bd6f4 ; ret
0x00000200003caaa4 : loopne 0x200003caaad ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003d124d : loopne 0x200003d1257 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003d937e : loopne 0x200003d93d0 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200003d937d : loopne 0x200003d93d1 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200003dd81a : loopne 0x200003dd82b ; ret
0x000002000041c4c7 : loopne 0x2000041c4ea ; ret
0x000002000041caf9 : loopne 0x2000041cb44 ; cmp ecx, 6 ; jne 0x2000041cb63 ; ret
0x000002000041dd47 : loopne 0x2000041dd52 ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000041de09 : loopne 0x2000041de14 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x0000020000424f33 : loopne 0x20000424ec5 ; jne 0x20000424f26 ; call 0x2000004fd27
0x0000020000424f79 : loopne 0x20000424f87 ; add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x0000020000426c6a : loopne 0x20000426c72 ; add byte ptr [rax], al ; call rax
0x000002000042b667 : loopne 0x2000042b66f ; add byte ptr [rax], al ; call rax
0x000002000042b83c : loopne 0x2000042b847 ; add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x0000020000436770 : loopne 0x200004367c8 ; ret
0x0000020000441d73 : loopne 0x20000441d80 ; jne 0x20000441d84 ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x0000020000466d45 : loopne 0x20000466d46 ; add eax, edx ; ret
0x0000020000466d45 : loopne 0x20000466d47 ; add eax, edx ; ret
0x00000200004680c0 : loopne 0x200004680af ; ret
0x0000020000468541 : loopne 0x20000468547 ; jmp 0x200004684d7
0x000002000047e825 : loopne 0x2000047e82a ; ret
0x0000020000494ee8 : loopne 0x20000494ef9 ; jae 0x20000494ef5 ; mov al, 1 ; ret
0x000002000049bb8e : loopne 0x2000049bba4 ; cmovb edx, ecx ; mov al, dl ; ret
0x000002000049df57 : loopne 0x2000049df5f ; xor edx, edx ; call 0x200000cac97
0x00000200004c57a7 : loopne 0x200004c5736 ; ret 0xc148
0x00000200004c7124 : loopne 0x200004c712f ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200004c7a3d : loopne 0x200004c7a37 ; ret
0x00000200004e2f6b : loopne 0x200004e2f85 ; xor dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e43b1 : loopne 0x200004e43b8 ; add rsp, 0x28 ; ret
0x00000200004e4465 : loopne 0x200004e446b ; ja 0x200004e4470 ; ret
0x00000200004e7222 : loopne 0x200004e722a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ea6ed : loopne 0x200004ea6df ; sbb byte ptr [rcx - 0x75], al ; ret
0x00000200004f32b7 : loopne 0x200004f32bf ; dec eax ; ret
0x00000200004f32c2 : loopne 0x200004f32c6 ; inc eax ; ret
0x00000200004f3371 : loopne 0x200004f3379 ; dec eax ; ret
0x00000200004f5260 : loopne 0x200004f52e1 ; ret 0x8bff
0x0000020000506674 : loopne 0x2000050667b ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000050b74f : loopne 0x2000050b6de ; ret
0x0000020000518ffd : loopne 0x20000519006 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051e47e : loopne 0x2000051e40f ; clc ; call r15
0x000002000051e47d : loopne 0x2000051e410 ; clc ; call r15
0x000002000051f020 : loopne 0x2000051f029 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000525a58 : loopne 0x20000525aa9 ; mov ecx, edi ; call 0x20000150f4b
0x00000200005301f1 : loopne 0x2000053017f ; ret
0x00000200005484af : loopne 0x200005484b3 ; call r9
0x000002000054b2dc : loopne 0x2000054b2e6 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x000002000054bf97 : loopne 0x2000054bf9b ; call r9
0x000002000054cac4 : loopne 0x2000054cac8 ; call r9
0x000002000054d2a3 : loopne 0x2000054d2aa ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000550c68 : loopne 0x20000550c71 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000056fdc8 : loopne 0x2000056fdd2 ; enter -0x2f09, -0x10 ; and dword ptr [r9], eax ; ret
0x0000020000577743 : loopne 0x200005776d2 ; ret
0x0000020000577742 : loopne 0x200005776d3 ; ret
0x000002000058dd05 : loopne 0x2000058dd0c ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000059b22a : loopne 0x2000059b1e6 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000002000059b229 : loopne 0x2000059b1e7 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200005cabb3 : loopne 0x200005cab63 ; jmp qword ptr [rcx]
0x00000200005cfc32 : loopne 0x200005cfc07 ; mov qword ptr [rcx], rdx ; xor al, al ; ret
0x00000200005d7d61 : loopne 0x200005d7d66 ; call 0x20000023fb4
0x00000200005da9bc : loopne 0x200005da9a1 ; push rsi ; ret 0x7401
0x00000200005daf09 : loopne 0x200005daf14 ; call 0x200000771c4
0x00000200005eee12 : loopne 0x200005eee16 ; inc eax ; ret
0x000002000060010f : loopne 0x2000060011c ; rep stosq qword ptr [rdi], rax ; jmp 0x2000046c3de
0x000002000060d1d0 : loopne 0x2000060d1d6 ; cmp dl, r8b ; setb al ; ret
0x000002000062f62c : loopne 0x2000062f629 ; ret
0x000002000062f72c : loopne 0x2000062f728 ; ret
0x0000020000635fbe : loopne 0x20000635fc7 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000637236 : loopne 0x20000637240 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063f03d : loopne 0x2000063f056 ; jb 0x2000063f04a ; mov al, 1 ; ret
0x000002000063f06d : loopne 0x2000063f089 ; jb 0x2000063f080 ; shr eax, 0xf ; and al, 1 ; ret
0x0000020000642f0c : loopne 0x20000642f1d ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000064dfd5 : loopne 0x2000064dfe0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000002000064e065 : loopne 0x2000064e06b ; add byte ptr [rax], al ; ret
0x000002000064e676 : loopne 0x2000064e6c9 ; mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x000002000065a323 : loopne 0x2000065a373 ; add esp, 0x38 ; jmp rax
0x0000020000661f64 : loopne 0x20000661f02 ; ret 0x48ff
0x0000020000665901 : loopne 0x200006658f9 ; add rax, 0x20 ; ret
0x0000020000667953 : loopne 0x200006679be ; ret 0xff
0x000002000066a09e : loopne 0x2000066a0a4 ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200006c15d6 : loopne 0x200006c15de ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200006c17bc : loopne 0x200006c1813 ; ret 0x8bff
0x00000200006c17c4 : loopne 0x200006c181b ; ret 0x48ff
0x00000200006c58f6 : loopne 0x200006c5914 ; mov dword ptr [rip - 0x444bae], eax ; ret
0x00000200006c5fe3 : loopne 0x200006c5fea ; add rsp, 0x68 ; ret
0x00000200006d0232 : loopne 0x200006d0253 ; sar rax, 0x10 ; ret
0x00000200006f1ef2 : loopne 0x200006f1f3e ; mov cr4, rbx ; add rsp, 0x28 ; ret
0x0000020000705c4b : loopne 0x20000705c4f ; inc eax ; ret
0x000002000001dc48 : lsl eax, ecx ; lea eax, dword ptr [rdx + rax*4] ; ret
0x0000020000187b31 : lsl edx, edx ; and eax, 1 ; or eax, edx ; ret
0x0000020000105db2 : maskmovq mm7, mm7 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000432a48 : mov ah, 0x20 ; ret
0x00000200005ebf08 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add cl, ch ; pop rax ; ret 0xffe5
0x00000200003e4bcd : mov ah, 0x24 ; ret
0x0000020000085dda : mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000200004150fc : mov ah, 0x41 ; ret 0xe9ff
0x00000200004a0018 : mov ah, 0x44 ; ret 0x84ff
0x00000200000852b0 : mov ah, 0x5a ; ret
0x0000020000140f54 : mov ah, 0x60 ; and dword ptr [rax], eax ; ret
0x00000200000915dd : mov ah, 0x78 ; mov esp, 0xe70b3d35 ; ret
0x00000200006be8df : mov ah, 0x7d ; ret 0xff
0x00000200002237e4 : mov ah, 0x7f ; and dword ptr [rax], eax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; nop ; ret 0x14
0x0000020000084398 : mov ah, 0x7f ; movsxd rcx, edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006c4bcf : mov ah, 0x83 ; enter -0x76fc, 5 ; push rdi ; ret 0xebff
0x0000020000439a88 : mov ah, 0x93 ; ret
0x00000200001ea1fa : mov ah, 0x99 ; in eax, dx ; push rsi ; ret 0x7401
0x0000020000665a67 : mov ah, 0x9b ; ret 0xff
0x0000020000665a18 : mov ah, 0xa6 ; ret 0x84ff
0x00000200006648a8 : mov ah, 0xb8 ; ret 0x45ff
0x00000200006c533c : mov ah, 0xbc ; jmp qword ptr [rax]
0x0000020000549db8 : mov ah, 0xc5 ; out dx, eax ; inc dword ptr [rbp - 0x74fb8625] ; ret
0x00000200005a764a : mov ah, 0xce ; dec dword ptr [rcx + 0x58b8845] ; ret 0xceb4
0x00000200005a7643 : mov ah, 0xce ; inc dword ptr [rbx + rcx*4 + 0x1d] ; ret
0x0000020000417d44 : mov ah, 0xdf ; ret
0x000002000009f710 : mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x000002000037708b : mov ah, 0xf1 ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000401ea6 : mov ah, 0xf8 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000040d3d : mov ah, 0xfe ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x0000020000112b81 : mov ah, 0xfe ; inc ebx ; xor eax, eax ; ret
0x000002000053489a : mov ah, 0xff ; add rsp, 0x28 ; ret
0x000002000055de04 : mov ah, 0xff ; add rsp, 0x38 ; ret
0x0000020000564b95 : mov ah, 0xff ; add rsp, 0x60 ; pop rbp ; ret
0x00000200004d4957 : mov ah, 0xff ; jmp 0x200004d4921
0x0000020000562007 : mov ah, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000656eca : mov ah, 0xff ; mov rax, r10 ; add rsp, 0x28 ; ret
0x00000200003f1302 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000041dfb5 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; div bh ; ret 0xfffe
0x00000200005fa94a : mov ah, bl ; push rsi ; ret
0x000002000006a584 : mov ah, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006bc843 : mov ah, byte ptr [rbp + 0x78c085ff] ; or edi, edi ; ret
0x000002000016844d : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b9714 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000014ffbc : mov al, 0 ; add byte ptr [rax], al ; jmp 0x2000014ffa0
0x00000200005a771e : mov al, 0 ; add byte ptr [rax], al ; mov rbx, rcx ; call 0x200000a3959
0x00000200001e2f44 : mov al, 0 ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000004f219
0x000002000010cb75 : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000041b6e7 : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000059d668 : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000497cf1 : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000034346 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200004c6f1d : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001bcb09 : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000049bf5c : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000036d645 : mov al, 0x10 ; ret
0x00000200000b1563 : mov al, 0x12 ; add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x000002000063dd5c : mov al, 0x12 ; ret
0x0000020000262fd5 : mov al, 0x22 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200003c8c21 : mov al, 0x24 ; add byte ptr [rbx], bh ; ret 0x8b44
0x00000200004263a7 : mov al, 0x48 ; lea edx, dword ptr [rbx + 0x18] ; call rax
0x0000020000398a57 : mov al, 0x48 ; mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x000002000039f477 : mov al, 0x49 ; mov ecx, edx ; call rax
0x000002000044474c : mov al, 0x4a ; in eax, -1 ; mov edx, eax ; call 0x2000006bc5d
0x000002000043e445 : mov al, 0x54 ; jnp 0x2000043e44e ; ret 0x823c
0x00000200006684b4 : mov al, 0x7c ; ret 0x48ff
0x00000200006be90c : mov al, 0x7d ; ret 0x48ff
0x00000200004e4d8c : mov al, 0x80 ; ret
0x0000020000266a80 : mov al, 0x85 ; or eax, 0x100 ; add byte ptr [rax], cl ; ret
0x000002000022c044 : mov al, 0x85 ; or eax, 0x100 ; add byte ptr [rbx], ah ; ret
0x000002000023cb0c : mov al, 0x85 ; or eax, 0x100 ; add dl, ch ; ret
0x00000200002375f0 : mov al, 0x85 ; or eax, 0x200 ; add byte ptr [rcx], ah ; ret
0x000002000022ff14 : mov al, 0x85 ; or eax, 0x200 ; add byte ptr [rdi], ah ; ret 0x3a
0x0000020000549143 : mov al, 0x8b ; cli ; call 0x2000016af16
0x00000200006653c8 : mov al, 0x8b ; ret 0x89ff
0x000002000018012c : mov al, 0x90 ; inc dword ptr [rbx - 0x6bf0fe03] ; ret
0x000002000041fac8 : mov al, 0x93 ; ret
0x000002000036c1e2 : mov al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x0000020000664cac : mov al, 0xb2 ; ret 0x83ff
0x000002000047969c : mov al, 0xb7 ; ret 0x48ff
0x00000200003df825 : mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x0000020000260548 : mov al, 0xc2 ; cmp byte ptr [rax], al ; ret
0x0000020000090fff : mov al, 0xc8 ; ret
0x000002000056d394 : mov al, 0xd1 ; push rsi ; ret
0x00000200006365e8 : mov al, 0xdf ; ret
0x000002000047f3e0 : mov al, 0xe8 ; mov bh, dh ; ret
0x00000200006cf087 : mov al, 0xe8 ; ret
0x000002000070923d : mov al, 0xe8 ; sub eax, 0x8bffd3d1 ; ret
0x00000200001e053f : mov al, 0xe9 ; out dx, al ; sbb al, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200004341bc : mov al, 0xeb ; ret
0x0000020000570be4 : mov al, 0xed ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x000002000055ec5d : mov al, 0xf ; mov bh, 0x41 ; sub byte ptr [rcx - 0x7d], cl ; ret 0x8910
0x00000200003f4efc : mov al, 0xf0 ; ret 0x48ff
0x00000200006352dc : mov al, 0xf7 ; ret
0x0000020000536f57 : mov al, 0xff ; add rsp, 0x28 ; ret
0x00000200005a179f : mov al, 0xff ; add rsp, 0x58 ; ret
0x00000200005a18a0 : mov al, 0xff ; add rsp, 0x60 ; pop rbp ; ret
0x00000200005d3670 : mov al, 0xff ; nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000608406 : mov al, 0xff ; nop ; jmp 0x20000424620
0x00000200006083cf : mov al, 0xff ; nop ; jmp 0x2000042465b
0x00000200000c188c : mov al, 1 ; add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; ret
0x00000200000bdcde : mov al, 1 ; add rsp, 0x18 ; ret
0x000002000016a531 : mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005c3d2 : mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d7bb4 : mov al, 1 ; add rsp, 0x28 ; pop r15 ; pop rdi ; ret
0x000002000003b468 : mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000abdce : mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000de161 : mov al, 1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000349d0 : mov al, 1 ; add rsp, 0x38 ; ret
0x00000200000632db : mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006fee29 : mov al, 1 ; add rsp, 0x88 ; ret
0x00000200000cc875 : mov al, 1 ; add rsp, 8 ; ret
0x0000020000148412 : mov al, 1 ; jmp 0x200001483dc
0x00000200003e6db9 : mov al, 1 ; jmp 0x200003e6d5c
0x000002000035f268 : mov al, 1 ; mov al, r8b ; ret
0x000002000012c1b2 : mov al, 1 ; mov byte ptr [r8 + 0x10], 0 ; ret
0x00000200001efa49 : mov al, 1 ; mov edx, esi ; call 0x2000012bd12
0x000002000004fe25 : mov al, 1 ; mov qword ptr [r10], rcx ; ret
0x000002000003f067 : mov al, 1 ; mov qword ptr [r8 + 0xf8], rcx ; ret
0x0000020000431988 : mov al, 1 ; mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000035fc73 : mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000000e018 : mov al, 1 ; ret
0x000002000036d64e : mov al, 2 ; ret
0x00000200000517ab : mov al, 3 ; add byte ptr [rax], al ; ret
0x000002000006ab6c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000002000036d64b : mov al, 4 ; ret
0x000002000008e172 : mov al, 6 ; ret
0x000002000036d648 : mov al, 8 ; ret
0x000002000019ca27 : mov al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001374ef : mov al, al ; add rsp, 0x28 ; ret
0x0000020000383cf5 : mov al, al ; add rsp, 0x38 ; ret
0x0000020000066102 : mov al, al ; ret
0x0000020000023f6c : mov al, bh ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002d8b6 : mov al, bh ; add rsp, 0x30 ; pop rdi ; ret
0x000002000055fc82 : mov al, bh ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000125ba0 : mov al, bl ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000049c0d : mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000166c2 : mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005322d7 : mov al, bl ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000162083 : mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000147dc0 : mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001920f0 : mov al, byte ptr [r8 + 0xf0] ; ret
0x0000020000590a83 : mov al, byte ptr [r8] ; cmp al, r9b ; jae 0x20000590a59 ; ret
0x0000020000142ba3 : mov al, byte ptr [r8] ; test al, al ; jne 0x20000142b7f ; xor eax, eax ; ret
0x0000020000590a2e : mov al, byte ptr [r9 + rax - 0x80] ; ret
0x0000020000123cd9 : mov al, byte ptr [rax + 0x232] ; ret
0x0000020000365ec7 : mov al, byte ptr [rax + 0x41000000] ; pop rsi ; ret
0x00000200001920f1 : mov al, byte ptr [rax + 0xf0] ; ret
0x0000020000590a0b : mov al, byte ptr [rax + r8] ; ret
0x0000020000590a0c : mov al, byte ptr [rax + rax] ; ret
0x00000200003ab558 : mov al, byte ptr [rax + rcx + 8] ; shr al, 3 ; and al, 1 ; ret
0x0000020000055ef6 : mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x0000020000055ef2 : mov al, byte ptr [rax + rcx*2] ; ret
0x000002000014a4e1 : mov al, byte ptr [rax + rcx] ; ret
0x00000200004175ff : mov al, byte ptr [rax + rdx + 0x296af8] ; ret
0x000002000041761f : mov al, byte ptr [rax + rdx + 0x43bb70] ; ret
0x0000020000590a84 : mov al, byte ptr [rax] ; cmp al, r9b ; jae 0x20000590a58 ; ret
0x0000020000142ba4 : mov al, byte ptr [rax] ; test al, al ; jne 0x20000142b7e ; xor eax, eax ; ret
0x00000200006c2f1b : mov al, byte ptr [rcx + 0x1e] ; mov byte ptr [rip - 0x3fd29], al ; ret
0x0000020000197538 : mov al, byte ptr [rcx + 0x447] ; ret
0x0000020000055eb5 : mov al, byte ptr [rcx + 0x648] ; ret
0x0000020000590a2f : mov al, byte ptr [rcx + rax - 0x80] ; ret
0x00000200005438b0 : mov al, byte ptr [rcx - 0x18] ; shr al, 3 ; and al, 1 ; ret
0x00000200004266d0 : mov al, byte ptr [rcx - 0x18] ; shr al, 4 ; and al, 1 ; ret
0x0000020000388a55 : mov al, byte ptr [rcx] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000011c53 : mov al, byte ptr [rcx] ; jmp 0x2000001169e
0x0000020000141db4 : mov al, byte ptr [rcx] ; mov byte ptr [rip + 0x156484], al ; ret
0x00000200001c50fc : mov al, byte ptr [rcx] ; ret
0x00000200004284d1 : mov al, byte ptr [rdx] ; add rax, rcx ; jmp rax
0x0000020000168fd0 : mov al, byte ptr [rip + 0x1182fe] ; ret
0x000002000010142f : mov al, byte ptr [rip + 0x1e692d] ; ret
0x000002000014a788 : mov al, byte ptr [rip + 0x20ca3a] ; ret
0x00000200004c541c : mov al, byte ptr [rip + 0x4a8d4800] ; sbb byte ptr [rbp - 0x75], al ; ret
0x00000200004ba6c0 : mov al, byte ptr [rip - 0x1d44c6] ; ret
0x000002000035fe94 : mov al, byte ptr [rip - 0xdaea8] ; ret
0x00000200001086ba : mov al, byte ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001a9da : mov al, byte ptr [rsp + 0x32] ; add rsp, 0x28 ; ret
0x00000200003accad : mov al, byte ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007ffa : mov al, ch ; add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x0000020000527c3d : mov al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000392882 : mov al, cl ; add rsp, 0x28 ; ret
0x000002000017681d : mov al, cl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000060540 : mov al, cl ; ret
0x00000200001e948b : mov al, dh ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test byte ptr [rsi], bh ; ret 0xffee
0x0000020000074dd6 : mov al, dh ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000023f6b : mov al, dil ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002d8b5 : mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005b27d : mov al, dl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ab4c6 : mov al, dl ; add rsp, 0x28 ; ret
0x000002000012b517 : mov al, dl ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000708134 : mov al, dl ; add rsp, 0x38 ; ret
0x00000200003b33f5 : mov al, dl ; add rsp, 0x58 ; ret
0x00000200001b6afb : mov al, dl ; jmp 0x200001b6b08
0x00000200006e7816 : mov al, dl ; jmp 0x200006d3abc
0x00000200001c50f4 : mov al, dl ; movzx edx, cx ; out dx, al ; ret
0x00000200000041da : mov al, dl ; ret
0x000002000012b516 : mov al, r10b ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003b33f4 : mov al, r10b ; add rsp, 0x58 ; ret
0x00000200000da08a : mov al, r10b ; ret
0x0000020000125b9f : mov al, r11b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000019ca26 : mov al, r8b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001374ee : mov al, r8b ; add rsp, 0x28 ; ret
0x0000020000383cf4 : mov al, r8b ; add rsp, 0x38 ; ret
0x0000020000066101 : mov al, r8b ; ret
0x0000020000392881 : mov al, r9b ; add rsp, 0x28 ; ret
0x000002000017681c : mov al, r9b ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000ab7d4 : mov al, r9b ; ret
0x0000020000074dd5 : mov al, sil ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000af43b : mov ax, 0x70 ; lldt ax ; ret
0x000002000049d8ea : mov ax, 0x8bff ; ret
0x0000020000646c28 : mov bh, 0 ; add byte ptr [rax], al ; mov cl, al ; call 0x20000642f24
0x0000020000026e64 : mov bh, 0 ; test ax, ax ; jne 0x20000026e36 ; xor eax, eax ; ret
0x000002000013db5c : mov bh, 0x14 ; and al, 0xff ; ret 0xfbe9
0x0000020000464ec5 : mov bh, 0x14 ; or bh, byte ptr [rbx] ; ret 0xe75
0x0000020000425e97 : mov bh, 0x14 ; push rax ; add dx, cx ; movzx eax, dx ; ret
0x000002000070be3f : mov bh, 0x15 ; ret
0x000002000019a9c5 : mov bh, 0x1a ; xor eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004017a2 : mov bh, 0x1e ; call 0x20000029cf5
0x000002000020c83d : mov bh, 0x20 ; add byte ptr [rdx], al ; or byte ptr [rbx], al ; add byte ptr [rax], cl ; ret 0xc004
0x000002000003bc9a : mov bh, 0x31 ; add byte ptr [rdi], cl ; test bl, bh ; ret 0xfffe
0x000002000036f8e5 : mov bh, 0x3f ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000229bf : mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x0000020000365ff9 : mov bh, 0x40 ; add al, byte ptr [rcx + 0x3b] ; ret
0x0000020000615416 : mov bh, 0x40 ; add bh, bh ; ret
0x00000200000b1262 : mov bh, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000055c15b : mov bh, 0x40 ; sub byte ptr [rbx], al ; ret 0x518d
0x00000200000c9351 : mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x34c
0x000002000058b861 : mov bh, 0x41 ; add bh, bh ; ret 0x141
0x00000200001fa9bc : mov bh, 0x41 ; add bh, bh ; ret 0x348
0x0000020000556aa0 : mov bh, 0x41 ; and al, 0x66 ; mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556ac3
0x00000200001622cd : mov bh, 0x41 ; or al, 0x66 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200005d2371 : mov bh, 0x41 ; or bh, bh ; ret 0x341
0x000002000070047c : mov bh, 0x41 ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000006cb61 : mov bh, 0x41 ; ret
0x000002000043861b : mov bh, 0x41 ; sbb byte ptr [rax - 0x75], cl ; enter -0x6518, -0x15 ; ret
0x000002000019e149 : mov bh, 0x41 ; sbb byte ptr [rbp - 0x75], al ; rol dword ptr [rbp - 0x75], cl ; ret
0x000002000055ec5f : mov bh, 0x41 ; sub byte ptr [rcx - 0x7d], cl ; ret 0x8910
0x00000200003b0157 : mov bh, 0x42 ; add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x0000020000036e25 : mov bh, 0x42 ; add al, byte ptr [rcx - 0x7c] ; ret
0x0000020000466e32 : mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200000521f8 : mov bh, 0x42 ; add bh, bh ; ret 0x349
0x00000200003f0849 : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200005e347c : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xe814
0x00000200005dc6cf : mov bh, 0x42 ; sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x000002000054ba37 : mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200001a2115 : mov bh, 0x43 ; add al, byte ptr [rdi + rcx - 0x49] ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006168a0 : mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200004184a5 : mov bh, 0x43 ; add cl, byte ptr [rcx + 3] ; ret
0x00000200000bf074 : mov bh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200006c72c4 : mov bh, 0x43 ; or byte ptr [rax - 0x7d], cl ; ret 0x3b02
0x0000020000159b83 : mov bh, 0x43 ; or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x000002000013a6d7 : mov bh, 0x43 ; sbb byte ptr [rcx - 1], al ; ret
0x00000200000c95f9 : mov bh, 0x43 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200005d2f0b : mov bh, 0x44 ; add al, byte ptr [rbx + rdi] ; ret
0x000002000047cdbf : mov bh, 0x44 ; and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f5b1a : mov bh, 0x44 ; ret
0x00000200001e5915 : mov bh, 0x44 ; ret 0xc30c
0x0000020000198fff : mov bh, 0x44 ; ret 0xeb0c
0x00000200001a31ef : mov bh, 0x44 ; ret 0xf0c
0x00000200000c564a : mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200000bffe8 : mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x0000020000381ef0 : mov bh, 0x46 ; add cl, byte ptr [rbp + 0x3b662455] ; ret 0x820f
0x00000200004185d8 : mov bh, 0x46 ; or al, ch ; jl 0x200004185c2 ; ret
0x00000200001231fb : mov bh, 0x46 ; or byte ptr [rax - 0x75], cl ; ret
0x00000200005b7fcd : mov bh, 0x47 ; adc byte ptr [rax + 0x3b], cl ; ret
0x0000020000467ea2 : mov bh, 0x47 ; add cl, byte ptr [rax + 0x2b] ; ret
0x00000200005b7f5c : mov bh, 0x47 ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000615ddf : mov bh, 0x48 ; add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x00000200005b7c2d : mov bh, 0x48 ; add al, byte ptr [rcx - 0xa] ; ret
0x00000200003fa602 : mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000050a6ce : mov bh, 0x48 ; lea edx, dword ptr [rbp + 7] ; mov rcx, r13 ; call r12
0x0000020000470ed3 : mov bh, 0x49 ; add al, 0x44 ; cmp eax, ecx ; jb 0x20000470e82 ; ret
0x00000200004f1b00 : mov bh, 0x49 ; mov ecx, ebx ; call 0x200001183bf
0x00000200004b5178 : mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x0000020000550322 : mov bh, 0x4b ; add cl, byte ptr [rax - 0x7d] ; ret 0x2b38
0x00000200001c3ed1 : mov bh, 0x4b ; and dh, byte ptr [rbx] ; rol byte ptr [rdi + rcx - 0x49], cl ; ret 0x4166
0x0000020000523130 : mov bh, 0x4d ; sub al, ch ; cmp al, 0x9b ; ret 0x89ff
0x000002000041858e : mov bh, 0x4e ; or al, ch ; pop rsi ; leave ; ret
0x0000020000616079 : mov bh, 0x50 ; add dh, dh ; ret 0xf04
0x000002000061c324 : mov bh, 0x50 ; add dh, dh ; ret 0xf10
0x00000200003c7f14 : mov bh, 0x51 ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4907
0x000002000013b0aa : mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x0000020000016e32 : mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200001f82f4 : mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x0000020000608511 : mov bh, 0x51 ; sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x0000020000402637 : mov bh, 0x52 ; add cl, byte ptr [rcx - 0x74be17bb] ; ret 0xbb41
0x000002000054ba33 : mov bh, 0x53 ; add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200004b5174 : mov bh, 0x53 ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x000002000055bdf7 : mov bh, 0x55 ; adc byte ptr [rcx - 1], al ; ret 0xb70f
0x000002000054feb7 : mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000055bd9d : mov bh, 0x55 ; add byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200005ed3db : mov bh, 0x55 ; or byte ptr [rbx + rcx*4 + 0x74], 0x24 ; jo 0x200005ed370 ; ret 0x4404
0x00000200003f0982 : mov bh, 0x56 ; or byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000527dcc : mov bh, 0x56 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000527d5a : mov bh, 0x56 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000061dd5c : mov bh, 0x5b ; add al, byte ptr [rcx - 0xa] ; ret
0x000002000059a0be : mov bh, 0x5d ; add byte ptr [rbp - 0x7cbefeb5], cl ; ret
0x000002000011885e : mov bh, 0x5d ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x0000020000597c02 : mov bh, 0x5e ; add al, byte ptr [rcx - 0xa] ; ret
0x000002000065b757 : mov bh, 0x5f ; or dh, dh ; ret
0x000002000012f0e6 : mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000653b45 : mov bh, 0x7d ; ret
0x00000200006e2cb1 : mov bh, 0x7e ; or byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x834a
0x0000020000665e7d : mov bh, 0x80 ; ret 0xebff
0x00000200005f96e9 : mov bh, 0x83 ; clc ; add byte ptr [rax], al ; add byte ptr [rsi + 0x2b], ah ; ret 0x8966
0x0000020000464fa2 : mov bh, 0x83 ; clc ; add dword ptr [rdx + rbp*8 - 0x75], esi ; ret 0xc8a3
0x0000020000667d71 : mov bh, 0x83 ; ret 0x44ff
0x0000020000499912 : mov bh, 0x84 ; cwde ; ret 0x291c
0x0000020000558c09 : mov bh, 0x85 ; cwde ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8b48
0x000002000042d109 : mov bh, 0x86 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pushfq ; ret
0x00000200001c9dd9 : mov bh, 0x96 ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000017066 : mov bh, 0xa ; sub eax, ecx ; ret
0x0000020000665595 : mov bh, 0xab ; ret 0x85ff
0x00000200004d5167 : mov bh, 0xb ; call 0x20000425e59
0x0000020000529fd9 : mov bh, 0xb ; mov word ptr [r15], cx ; jmp 0x20000529fab
0x000002000060c23f : mov bh, 0xb8 ; call qword ptr [rax - 0x1e3db217]
0x00000200006be6b2 : mov bh, 0xc ; adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000157b60 : mov bh, 0xc ; ret
0x00000200000b7bc4 : mov bh, 0xc ; ret 0x8b44
0x0000020000047f2e : mov bh, 0xc ; ret 0xc1ff
0x000002000003b49f : mov bh, 0xc0 ; and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x00000200005a7a21 : mov bh, 0xc0 ; cmp eax, 0x50 ; jmp 0x200005a79f0
0x0000020000156832 : mov bh, 0xc0 ; ret
0x0000020000054a74 : mov bh, 0xc0 ; sub eax, ecx ; ret
0x0000020000589417 : mov bh, 0xc1 ; add eax, 0x20 ; ret
0x000002000006b25f : mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x00000200001f4ae0 : mov bh, 0xc1 ; mov rcx, rdi ; call r10
0x0000020000425e57 : mov bh, 0xc1 ; ret
0x000002000019c006 : mov bh, 0xc1 ; sub eax, 0x16 ; ret
0x0000020000425e61 : mov bh, 0xc1 ; sub eax, 0x20 ; ret
0x000002000012f245 : mov bh, 0xc1 ; sub eax, edx ; ret
0x0000020000545315 : mov bh, 0xc2 ; jmp 0x20000545322
0x0000020000174e62 : mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000141d72 : mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000425e9e : mov bh, 0xc2 ; ret
0x0000020000378d5d : mov bh, 0xc2 ; test eax, eax ; js 0x20000378d6e ; xor eax, eax ; ret
0x000002000013259c : mov bh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001ef86 : mov bh, 0xc3 ; add rsp, 0x38 ; ret
0x00000200006bcc05 : mov bh, 0xc4 ; ret 0x45ff
0x00000200001f4baf : mov bh, 0xc6 ; mov rcx, r14 ; call r10
0x000002000058eaf0 : mov bh, 0xc7 ; add eax, edx ; jmp 0x2000058eafc
0x0000020000005f2f : mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000145ec9 : mov bh, 0xc7 ; jmp 0x20000145ec2
0x0000020000163623 : mov bh, 0xc8 ; call r9
0x0000020000613815 : mov bh, 0xc9 ; mov al, byte ptr [rax + rcx] ; ret
0x0000020000054a71 : mov bh, 0xc9 ; movzx eax, ax ; sub eax, ecx ; ret
0x000002000058f669 : mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000056de51 : mov bh, 0xc9 ; ret 0x48ff
0x000002000006c01e : mov bh, 0xc9 ; sub r9d, eax ; mov eax, r9d ; ret
0x0000020000027071 : mov bh, 0xca ; and eax, ecx ; ret
0x00000200006f39cd : mov bh, 0xcb ; add rdx, 0x40 ; call rax
0x000002000038fff3 : mov bh, 0xcb ; mov rax, qword ptr [rip + 0xac994] ; call rax
0x00000200005a7aa2 : mov bh, 0xd ; add byte ptr [rcx - 1], al ; ret
0x000002000010d8f9 : mov bh, 0xd ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000623ff7 : mov bh, 0xd ; ret
0x00000200001c5101 : mov bh, 0xd1 ; in al, dx ; ret
0x000002000056cc0e : mov bh, 0xd1 ; inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x00000200001c50f7 : mov bh, 0xd1 ; out dx, al ; ret
0x000002000060cd86 : mov bh, 0xe1 ; push rdi ; ret
0x00000200003d7b45 : mov bh, 0xe7 ; lock inc dword ptr [rbx] ; ret
0x000002000048f555 : mov bh, 0xeb ; ret
0x000002000036e905 : mov bh, 0xf1 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000010ec13 : mov bh, 0xf3 ; ret
0x000002000038f955 : mov bh, 0xf6 ; in eax, dx ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000544c37 : mov bh, 0xff ; add rsp, 0x38 ; ret
0x00000200005072ac : mov bh, 0xff ; add rsp, 0x58 ; ret
0x00000200005314dc : mov bh, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000052a793 : mov bh, 0xff ; add rsp, 0x68 ; ret
0x000002000050cdb4 : mov bh, 0xff ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004a95bd : mov bh, 0xff ; nop ; jmp 0x2000046cb1e
0x000002000017a80b : mov bh, 0xff ; ret
0x00000200004e0bbf : mov bh, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000500633 : mov bh, 0xff ; xor edx, edx ; mov rcx, rdi ; call r14
0x00000200001b94bf : mov bh, 1 ; mov qword ptr [rdx + 8], rcx ; jmp 0x200001b9491
0x000002000015606b : mov bh, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x20000156099
0x0000020000017063 : mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200001474cb : mov bh, 1 ; test ax, ax ; jne 0x200001474b0 ; xor eax, eax ; ret
0x000002000047c0bb : mov bh, 2 ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x0000020000466405 : mov bh, 4 ; and al, 0x2b ; ret 0x2b41
0x000002000014437e : mov bh, 4 ; and rax, 0x157 ; ret
0x000002000013c8ce : mov bh, 4 ; and rax, 0x80 ; ret
0x0000020000154562 : mov bh, 4 ; and rax, 1 ; ret
0x0000020000154586 : mov bh, 4 ; and rax, 2 ; ret
0x000002000010dad2 : mov bh, 4 ; and rax, 4 ; ret
0x000002000013c8f6 : mov bh, 4 ; and rax, 8 ; ret
0x00000200003fea47 : mov bh, 4 ; imul eax, r10d ; ret
0x00000200003ffe5e : mov bh, 4 ; imul eax, r9d ; ret
0x000002000002706d : mov bh, 4 ; movzx rcx, dx ; and eax, ecx ; ret
0x0000020000153133 : mov bh, 4 ; ret
0x0000020000613f63 : mov bh, 4 ; sub byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x00000200000ae13b : mov bh, 5 ; call rsi
0x0000020000021cdf : mov bh, 5 ; jg 0x20000021d3c ; xor eax, dword ptr [rax] ; ret
0x0000020000056589 : mov bh, 5 ; jns 0x2000005659f ; xor byte ptr [rax], al ; dec eax ; ret
0x00000200003ebc17 : mov bh, 5 ; ret
0x000002000012fb40 : mov bh, 5 ; ret 0x2274
0x0000020000021cd4 : mov bh, 5 ; xchg byte ptr [rbx + 0x33], dl ; add byte ptr [rbp + 2], dh ; ret
0x0000020000484795 : mov bh, 6 ; ret 0x4cff
0x000002000001a697 : mov bh, 9 ; add cl, ch ; ret
0x00000200005e7bc2 : mov bh, 9 ; add cl, ch ; ret 0xd9c4
0x00000200003e7144 : mov bh, bh ; idiv bh ; call rax
0x00000200001b8cf1 : mov bh, bh ; ret
0x00000200000e0ecb : mov bh, bh ; ret 0x3b41
0x000002000025bb45 : mov bh, byte ptr [rax] ; add byte ptr [rax - 0x5fffc775], ah ; ret 0x22
0x00000200004aa34a : mov bh, byte ptr [rdi + rdi*8 + 0x246c8b48] ; js 0x200004aa2e7 ; ret
0x00000200001c7eb8 : mov bh, byte ptr [rdx] ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200004c127f : mov bh, cl ; ret
0x0000020000070053 : mov bh, cl ; xchg dword ptr [rsi], edx ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x00000200005fe01a : mov bh, dh ; call qword ptr [rax - 0x18c33d17]
0x000002000047f3e2 : mov bh, dh ; ret
0x0000020000635372 : mov bh, dl ; ret
0x0000020000060c7d : mov bl, 0x10 ; ret
0x000002000014d715 : mov bl, 0x14 ; add al, ch ; ret
0x0000020000054909 : mov bl, 0x16 ; add bl, ch ; ret
0x00000200005eb749 : mov bl, 0x1f ; scasd eax, dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x00000200003cada9 : mov bl, 0x31 ; sar edi, 1 ; add rsp, 0x38 ; ret
0x0000020000091fd8 : mov bl, 0x3b ; sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x2000009200b ; ret 0x23e8
0x000002000008f5b0 : mov bl, 0x40 ; add ebx, dword ptr [rax + rcx*2 + 0x61] ; ret 0xede5
0x0000020000422a11 : mov bl, 0x44 ; ret
0x0000020000494a49 : mov bl, 0x50 ; ret 0x65ff
0x00000200006c17e9 : mov bl, 0x53 ; ret 0x48ff
0x0000020000085dde : mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000200000254f9 : mov bl, 0x83 ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000068e86 : mov bl, 0x90 ; test byte ptr [rsi], al ; add byte ptr [rcx + 3], cl ; retf ; jmp rcx
0x000002000070be3b : mov bl, 0x96 ; dec dword ptr [rdi] ; mov bh, 0x15 ; ret
0x0000020000665819 : mov bl, 0xa8 ; ret 0x89ff
0x0000020000522ca1 : mov bl, 0xa9 ; ret 0x90ff
0x0000020000178579 : mov bl, 0xb0 ; add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000b5cfd : mov bl, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000069160 : mov bl, 0xc0 ; test byte ptr [rsi], al ; add byte ptr [rcx + 3], cl ; ret
0x000002000009f6f1 : mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x0000020000428249 : mov bl, 0xc8 ; ret
0x00000200000dd66c : mov bl, 0xd ; add byte ptr [rip + 0xd000dc2], cl ; ret 0xd
0x0000020000587529 : mov bl, 0xd1 ; mov dl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000128484 : mov bl, 0xd1 ; sti ; inc dword ptr [rcx - 0xa] ; ret
0x00000200004eb170 : mov bl, 0xda ; inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200001f2f3b : mov bl, 0xe1 ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x00000200005e04e3 : mov bl, 0xf0 ; inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x0000020000466b58 : mov bl, 0xf3 ; ret
0x00000200001f51a7 : mov bl, 0xf5 ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200001f4fad : mov bl, 0xf5 ; inc dword ptr [rcx - 0xa] ; ret 0x743f
0x00000200001d89d3 : mov bl, 0xf6 ; push rsi ; ret
0x000002000053f947 : mov bl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059dabc : mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200005705d1 : mov bl, 0xff ; add rsp, 0x58 ; ret
0x000002000048abd9 : mov bl, 0xff ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000b9b09
0x0000020000118d90 : mov bl, 1 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000147dbe : mov bl, 1 ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x000002000006cb3a : mov bl, 5 ; add cl, ch ; ret
0x0000020000656252 : mov bl, byte ptr [rbx - 0x39] ; inc dword ptr [rcx - 0xa] ; ret
0x000002000049a80d : mov bl, byte ptr [rsi] ; add al, ch ; call qword ptr [rsi]
0x0000020000118214 : mov bl, ch ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200000166c0 : mov bl, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006c01db : mov bpl, 4 ; add bh, bh ; ret
0x0000020000151950 : mov bpl, 5 ; jmp 0x200000ae0e4
0x00000200006c1afa : mov bx, 1 ; call qword ptr [rip - 0x3daf5c]
0x00000200004df679 : mov byte ptr [r10 + 0x30], dl ; mov dword ptr [r10 + 0x40], ecx ; ret
0x00000200001f123c : mov byte ptr [r10 + 0x39], dl ; ret
0x00000200004978e2 : mov byte ptr [r10 + rcx*2 + 0x2915f0], r11b ; mov al, dl ; ret
0x0000020000154f10 : mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000154f32
0x0000020000485828 : mov byte ptr [r11 - 0x45], 0xe0 ; call 0x200000b4338
0x000002000012c1b4 : mov byte ptr [r8 + 0x10], 0 ; ret
0x0000020000178f32 : mov byte ptr [r8 + 0x58], 1 ; xor eax, eax ; ret
0x000002000003f827 : mov byte ptr [r8 + 4], r9b ; ret
0x000002000043b425 : mov byte ptr [r8], al ; movzx eax, r10b ; ret
0x000002000046b1f2 : mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000038bcc : mov byte ptr [r8], bpl ; jmp 0x20000038b5b
0x000002000058f986 : mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x0000020000407c4c : mov byte ptr [r9 + 0x10], 1 ; ret
0x000002000058f989 : mov byte ptr [r9], al ; ret
0x0000020000036e51 : mov byte ptr [r9], al ; xor eax, eax ; ret
0x000002000012c1b5 : mov byte ptr [rax + 0x10], 0 ; ret
0x00000200004f4525 : mov byte ptr [rax + 0x21], 1 ; jmp 0x200004f44f2
0x00000200000da80c : mov byte ptr [rax + 0x289], cl ; mov rax, rdx ; jmp 0x200000da79f
0x000002000025d49c : mov byte ptr [rax + 0x48], dh ; add byte ptr [rcx + rsi*2], ah ; add byte ptr [rax], spl ; jmp qword ptr [rbx]
0x0000020000178f33 : mov byte ptr [rax + 0x58], 1 ; xor eax, eax ; ret
0x0000020000171b91 : mov byte ptr [rax + 0x7c000000], dh ; loop 0x20000171b89 ; ret
0x000002000055f93b : mov byte ptr [rax + 0xd0], 0 ; xor eax, eax ; ret
0x000002000019211a : mov byte ptr [rax + 0xf0], 1 ; ret
0x000002000003f828 : mov byte ptr [rax + 4], cl ; ret
0x000002000014ab76 : mov byte ptr [rax + rax - 0x74b80000], cl ; ret
0x00000200004f00fc : mov byte ptr [rax - 0x36], dl ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000038df8c : mov byte ptr [rax - 0x3c], dh ; add byte ptr [r9 - 0x7b], al ; ret 0x18e9
0x00000200006c7333 : mov byte ptr [rax - 0x44], bh ; inc dword ptr [rax] ; ret
0x000002000051a98e : mov byte ptr [rax - 0x73], cl ; and al, 0x60 ; call 0x20000056bc8
0x00000200000a46eb : mov byte ptr [rax - 0x74b6ffcb], al ; ret 0x850f
0x00000200003e9094 : mov byte ptr [rax - 0x74ffff9a], cl ; ret
0x00000200003d4c83 : mov byte ptr [rax - 0x75], cl ; ret
0x0000020000398334 : mov byte ptr [rax - 0x7cb70011], bh ; ret
0x00000200000d3c26 : mov byte ptr [rax - 0x7d], cl ; ret 0x4504
0x0000020000599da5 : mov byte ptr [rax - 0x80], 0xff ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000270dda : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2ae9
0x0000020000061975 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000596939 : mov byte ptr [rax], 0 ; ret
0x000002000059691b : mov byte ptr [rax], 1 ; ret
0x000002000015f18d : mov byte ptr [rax], al ; adc al, 0 ; add byte ptr [rbp + 0x2b], al ; ret 0x8b49
0x000002000064fedf : mov byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000117a3a : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001b9748 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200001922ad : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x0000020000155a7c : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x000002000010cfb8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000011780c : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x00000200000af3b6 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r11
0x0000020000163b3e : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r9
0x00000200000af349 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000200006d5370 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000200003c0e39 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, rbx ; call r15
0x00000200000aca08 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop rbx ; ret
0x0000020000706d4c : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000200000eb814 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x00000200005d09c7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000661cb : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001b5fcf : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000043b426 : mov byte ptr [rax], al ; movzx eax, r10b ; ret
0x000002000046b1f3 : mov byte ptr [rax], al ; xor eax, eax ; ret
0x00000200003fb10c : mov byte ptr [rax], bh ; jmp 0x200003fb0b4
0x000002000006cb5b : mov byte ptr [rax], bh ; push rbx ; add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x44] ; ret
0x0000020000038bcd : mov byte ptr [rax], ch ; jmp 0x20000038b5a
0x0000020000020f8a : mov byte ptr [rax], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000058f987 : mov byte ptr [rax], cl ; mov byte ptr [r9], al ; ret
0x00000200003fb10b : mov byte ptr [rax], r15b ; jmp 0x200003fb0b5
0x00000200005497e5 : mov byte ptr [rbp + 0x843e8ff], dh ; ret 0x33ff
0x00000200000439f0 : mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200000ee925 : mov byte ptr [rbp + 0xf], 0x22 ; ret 0x3345
0x000002000014cef4 : mov byte ptr [rbp + 0xf], 0x22 ; ret 0xff0
0x000002000011e69c : mov byte ptr [rbp + 0xf], 0x45 ; ret
0x000002000013eed8 : mov byte ptr [rbp + 0xf], 0xaf ; ret 0xf741
0x00000200001eea01 : mov byte ptr [rbp + 2], 0 ; jmp 0x200000aacb2
0x00000200000eb12a : mov byte ptr [rbp + rax*4 + 0x35], 0x1a ; ret
0x00000200000bb2d7 : mov byte ptr [rbp + rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000009d68a : mov byte ptr [rbp - 0x3a], ah ; xchg eax, edi ; ret
0x00000200004753a4 : mov byte ptr [rbp - 0x74ffe8f9], al ; ret
0x000002000011e5fc : mov byte ptr [rbp - 0x7eb7ffe4], dl ; ret
0x000002000012b4c7 : mov byte ptr [rbx + 0x18], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000121791 : mov byte ptr [rbx + 0x1a], dl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005ea0c : mov byte ptr [rbx + 0x1b], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017535f : mov byte ptr [rbx + 0x38], 2 ; call r8
0x0000020000029380 : mov byte ptr [rbx + 0x45], al ; mov rcx, qword ptr [rcx + 0x28] ; call rdi
0x0000020000148611 : mov byte ptr [rbx + 0x60], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000159923 : mov byte ptr [rbx + 6], cl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000107071 : mov byte ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000104c9c : mov byte ptr [rbx + 8], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005a92fa : mov byte ptr [rbx + rcx*4 - 0x32], 0x8b ; ret
0x000002000046a0cc : mov byte ptr [rbx + rdi - 3], 0x72 ; out 0xf6, al ; ret
0x0000020000539bd6 : mov byte ptr [rbx + rdi], 0x6e ; and al, 0x72 ; ret
0x0000020000485829 : mov byte ptr [rbx - 0x45], 0xe0 ; call 0x200000b4337
0x000002000038672a : mov byte ptr [rbx - 0x74ffee6b], dl ; ret
0x0000020000518ade : mov byte ptr [rbx - 0x74ffee93], ch ; ret
0x0000020000461a08 : mov byte ptr [rbx - 0x9fffb8f], ah ; ret
0x00000200003e26d8 : mov byte ptr [rbx - 0xa000000], cl ; ret
0x0000020000066c45 : mov byte ptr [rbx], 0xff ; ret
0x00000200000057c3 : mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000499774 : mov byte ptr [rbx], al ; ret 0x49ff
0x00000200003b50f1 : mov byte ptr [rbx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000091b23 : mov byte ptr [rbx], bh ; jmp rax
0x000002000011838b : mov byte ptr [rbx], bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003b67f6 : mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000060c285 : mov byte ptr [rbx], cl ; ret 0xffe1
0x000002000049d00b : mov byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; iretd ; call 0x200000bf2c9
0x000002000011838a : mov byte ptr [rbx], r11b ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000407c4d : mov byte ptr [rcx + 0x10], 1 ; ret
0x00000200000362c5 : mov byte ptr [rcx + 0x10], al ; mov dword ptr [rcx + 0x58], eax ; ret
0x000002000001ad84 : mov byte ptr [rcx + 0x185], dl ; ret
0x00000200000034c1 : mov byte ptr [rcx + 0x31], al ; mov r8d, edx ; jmp 0x2000000349d
0x0000020000197530 : mov byte ptr [rcx + 0x447], dl ; ret
0x00000200000da80d : mov byte ptr [rcx + 0x48000002], cl ; mov eax, edx ; jmp 0x200000da79e
0x00000200003bc487 : mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200003a365f : mov byte ptr [rcx + 0x49], 0x8b ; cmp byte ptr [r9 + 0x33], r9b ; ret
0x0000020000061c77 : mov byte ptr [rcx + 0x52], dl ; ret
0x00000200001157a8 : mov byte ptr [rcx + 0x54d0], 0 ; xor eax, eax ; ret
0x000002000011973f : mov byte ptr [rcx + 0x54d8], 0 ; xor eax, eax ; ret
0x0000020000178f5c : mov byte ptr [rcx + 0x58], 1 ; xor eax, eax ; ret
0x0000020000129fa0 : mov byte ptr [rcx + 0x88], 1 ; ret
0x00000200000322d9 : mov byte ptr [rcx + 0x8e], al ; ret
0x000002000006ceb7 : mov byte ptr [rcx + 0x8e], r8b ; ret
0x00000200007012bb : mov byte ptr [rcx + 0xf], 0xb7 ; ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000200003fd9ea : mov byte ptr [rcx + 1], al ; mov dword ptr [rcx + 4], eax ; ret
0x0000020000147c7c : mov byte ptr [rcx + 1], dl ; ret
0x00000200000a9197 : mov byte ptr [rcx + 2], dl ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000054b2de : mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x0000020000545bd0 : mov byte ptr [rcx + 6], al ; ret
0x00000200003b023f : mov byte ptr [rcx + rax - 0x74bc0000], bh ; ret
0x00000200001bd639 : mov byte ptr [rcx + rdx + 0x1c], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000073a78 : mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x0000020000606611 : mov byte ptr [rcx - 0x75], 0x44 ; or byte ptr [rdi + rdi*8], cl ; ret 0x8348
0x00000200001909f4 : mov byte ptr [rcx - 0x76b3fff0], cl ; sbb ecx, dword ptr [rcx - 0x75] ; ret
0x0000020000038bcb : mov byte ptr [rcx - 0x78], al ; sub bl, ch ; sub eax, 2 ; ret
0x00000200001138ac : mov byte ptr [rcx - 0x7d], 0xc2 ; add al, 0xff ; ret 0x5489
0x0000020000077209 : mov byte ptr [rcx - 1], al ; jne 0x20000077208 ; mov rax, r11 ; ret
0x00000200000f5fee : mov byte ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200001766cd : mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x000002000013fb86 : mov byte ptr [rcx], 0 ; ret
0x00000200005bcd24 : mov byte ptr [rcx], 0 ; xor eax, eax ; ret
0x00000200005bde90 : mov byte ptr [rcx], 1 ; xor eax, eax ; ret
0x000002000013b0b6 : mov byte ptr [rcx], 3 ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x000002000054a3e5 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000019754d : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000019755d : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200001e8cfc : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rdx, rax ; call 0x200000d4fc9
0x0000020000152925 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200000773aa : mov byte ptr [rcx], al ; jne 0x200000773a7 ; mov rax, r11 ; ret
0x000002000058f98a : mov byte ptr [rcx], al ; ret
0x0000020000036e52 : mov byte ptr [rcx], al ; xor eax, eax ; ret
0x00000200001be7d3 : mov byte ptr [rcx], bl ; mov rax, rdx ; add rsp, 0x38 ; ret
0x0000020000171b1c : mov byte ptr [rcx], ch ; add byte ptr [rax], al ; call rax
0x0000020000171219 : mov byte ptr [rcx], ch ; add byte ptr [rax], al ; mov r8, rbx ; call rdi
0x00000200005dd7ce : mov byte ptr [rcx], dh ; ret 0xffda
0x00000200005cc7d3 : mov byte ptr [rcx], dl ; add rsp, 0x58 ; ret
0x00000200001c50ec : mov byte ptr [rcx], dl ; lock or dword ptr [rsp], 0 ; ret
0x00000200001ced6c : mov byte ptr [rdi + 0x45], bpl ; mov qword ptr [rdi + 0x68], r12 ; call rbx
0x00000200001ced6d : mov byte ptr [rdi + 0x45], ch ; mov qword ptr [rdi + 0x68], r12 ; call rbx
0x000002000011741c : mov byte ptr [rdi + 0x5f], 0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c1ad3 : mov byte ptr [rdi + 1], 0x48 ; mov byte ptr [rdi], 0x2e ; call rdi
0x00000200001a2653 : mov byte ptr [rdi + 5], bl ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x0000020000167198 : mov byte ptr [rdi + rcx + 0x22], 0xc0 ; jmp 0x20000167167
0x00000200003d18c7 : mov byte ptr [rdi + rcx], 0x85 ; ret
0x0000020000407f5c : mov byte ptr [rdi - 0x9ffdf7b], cl ; ret
0x00000200000c0bdf : mov byte ptr [rdi], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c1ad7 : mov byte ptr [rdi], 0x2e ; call rdi
0x00000200005bc882 : mov byte ptr [rdi], bl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c0784 : mov byte ptr [rdi], cl ; test dword ptr [rsi - 0x74fffff4], eax ; ret 0x4489
0x00000200004c0ac0 : mov byte ptr [rdi], dh ; ret
0x00000200005bc881 : mov byte ptr [rdi], r11b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004df67a : mov byte ptr [rdx + 0x30], dl ; mov dword ptr [r10 + 0x40], ecx ; ret
0x00000200001f123d : mov byte ptr [rdx + 0x39], dl ; ret
0x00000200001bed39 : mov byte ptr [rdx + 1], al ; ret
0x00000200001bed17 : mov byte ptr [rdx + 1], cl ; ret
0x00000200004baf41 : mov byte ptr [rdx + 1], dl ; xor eax, eax ; ret
0x00000200004baf40 : mov byte ptr [rdx + 1], r10b ; xor eax, eax ; ret
0x00000200001bed14 : mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x000002000001a987 : mov byte ptr [rdx + 2], cl ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200001becf6 : mov byte ptr [rdx + 2], cl ; ret
0x00000200004fea66 : mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000413a79 : mov byte ptr [rdx + rax], bl ; add dh, dh ; ret
0x00000200004978e3 : mov byte ptr [rdx + rcx*2 + 0x2915f0], bl ; mov al, dl ; ret
0x000002000012f8a6 : mov byte ptr [rdx + rsi*4 + 0xc], ch ; add bh, bh ; ret
0x000002000049f9dd : mov byte ptr [rdx - 0x3e], ch ; add dword ptr [rax], eax ; jmp 0x200004bbc1d
0x00000200003d9e05 : mov byte ptr [rdx - 0x74ffdf60], al ; ret
0x000002000049e3c1 : mov byte ptr [rdx - 0x74ffe70b], cl ; ret
0x0000020000432e9d : mov byte ptr [rdx - 0x74ffffff], cl ; ret
0x0000020000154f11 : mov byte ptr [rdx], 0x2e ; inc r10 ; jmp 0x20000154f31
0x000002000013e4d8 : mov byte ptr [rdx], al ; ret
0x00000200003c9b29 : mov byte ptr [rdx], al ; test al, al ; jne 0x200003c9b3a ; xor eax, eax ; ret
0x00000200003dd405 : mov byte ptr [rdx], al ; xor eax, eax ; ret
0x00000200004365d2 : mov byte ptr [rdx], bl ; add al, ch ; stosb byte ptr [rdi], al ; ret
0x00000200006baf56 : mov byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x2d], al ; ret 0xc2d1
0x000002000049084b : mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x00000200001bed37 : mov byte ptr [rdx], cl ; mov byte ptr [rdx + 1], al ; ret
0x000002000040605e : mov byte ptr [rdx], cl ; ret
0x000002000050c9da : mov byte ptr [rdx], dl ; inc rdx ; jmp 0x2000050c9cb
0x000002000050c9d9 : mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000050c9cc
0x000002000013e4d7 : mov byte ptr [rdx], r8b ; ret
0x0000020000153ba6 : mov byte ptr [rip + 0x12d215], cl ; ret
0x00000200001a1b26 : mov byte ptr [rip + 0x15452b], 1 ; ret
0x0000020000141db6 : mov byte ptr [rip + 0x156484], al ; ret
0x00000200000ee251 : mov byte ptr [rip + 0x192863], 1 ; mov r8, r10 ; jmp 0x200000ee228
0x00000200001009eb : mov byte ptr [rip + 0x1e7373], dl ; ret
0x00000200001009e4 : mov byte ptr [rip + 0x1e737c], dl ; ret
0x00000200001009d8 : mov byte ptr [rip + 0x1e7384], dl ; ret
0x00000200001009cc : mov byte ptr [rip + 0x1e7393], dl ; ret
0x00000200001009c5 : mov byte ptr [rip + 0x1e7398], dl ; ret
0x000002000013c890 : mov byte ptr [rip + 0x21a893], 1 ; ret
0x00000200004b1f9e : mov byte ptr [rip - 0x21efa3], al ; ret
0x00000200004b1f9d : mov byte ptr [rip - 0x21efa3], r8b ; ret
0x00000200004b1fa5 : mov byte ptr [rip - 0x21efab], 1 ; ret
0x00000200004e0dfa : mov byte ptr [rip - 0x26063e], 1 ; ret
0x0000020000504500 : mov byte ptr [rip - 0x282ded], 1 ; xor eax, eax ; ret
0x00000200006c66d8 : mov byte ptr [rip - 0x36f5e8], cl ; ret
0x00000200006bfe14 : mov byte ptr [rip - 0x3f3ada], 0x10 ; mov rax, r10 ; ret
0x00000200006bfea5 : mov byte ptr [rip - 0x3f3b6b], 0x10 ; mov rax, r10 ; ret
0x00000200006c2f1e : mov byte ptr [rip - 0x3fd29], al ; ret
0x00000200006c5353 : mov byte ptr [rsi + 0xd8d48ff], dl ; ret
0x000002000050d3b5 : mov byte ptr [rsi - 0x2e], ah ; stc ; call rcx
0x00000200001573d1 : mov byte ptr [rsi - 0x72fffffc], ah ; add edi, dword ptr [rbx] ; ret 0x472
0x0000020000429f27 : mov byte ptr [rsi - 0x74ffffff], dl ; ret
0x00000200004a6560 : mov byte ptr [rsi], dh ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200003edb02 : mov byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0x2955
0x00000200002090ae : mov byte ptr [rsi], dl ; sysenter
0x0000020000644c7a : mov byte ptr [rsp + 0x20], dh ; call r15
0x0000020000646b0e : mov byte ptr [rsp + 0x20], dl ; call rax
0x0000020000646bb4 : mov byte ptr [rsp + 0x20], dl ; call rbx
0x0000020000646b0d : mov byte ptr [rsp + 0x20], r10b ; call rax
0x0000020000646bb3 : mov byte ptr [rsp + 0x20], r10b ; call rbx
0x0000020000644c79 : mov byte ptr [rsp + 0x20], r14b ; call r15
0x000002000058b539 : mov byte ptr [rsp + rax*2], 3 ; jl 0x2000058b560 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001b3164 : mov ch, 0 ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000143a95 : mov ch, 0x12 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005060c7 : mov ch, 0x13 ; xlatb ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000010c61b : mov ch, 0x16 ; add byte ptr [rax + 0x3b], cl ; ret 0x1f74
0x000002000041b9ea : mov ch, 0x20 ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200004063f7 : mov ch, 0x2f ; or al, byte ptr [rax] ; ret
0x000002000062f47c : mov ch, 0x30 ; out dx, eax ; inc dword ptr [rbx - 0x7cf0fa02] ; ret
0x0000020000633ae3 : mov ch, 0x41 ; in eax, dx ; inc dword ptr [rcx - 0x7d] ; ret
0x00000200004ebf9f : mov ch, 0x48 ; mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x000002000042638f : mov ch, 0x48 ; mov ecx, dword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x000002000008e2d1 : mov ch, 0x6e ; ret
0x00000200005c0007 : mov ch, 0x71 ; stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000122b05 : mov ch, 0x75 ; sti ; push rsi ; ret 0xba01
0x0000020000489b77 : mov ch, 0x7e ; ret
0x000002000042530b : mov ch, 0x7f ; ret
0x0000020000596589 : mov ch, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000066765f : mov ch, 0x8a ; ret 0x48ff
0x000002000049dfc7 : mov ch, 0x8f ; ret 0x45ff
0x0000020000666e37 : mov ch, 0x92 ; ret 0x48ff
0x0000020000131af8 : mov ch, 0xa ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000606cf0 : mov ch, 0xae ; call qword ptr [rax - 0x11003d17]
0x000002000008f833 : mov ch, 0xb1 ; ret 0xbe8d
0x000002000008e027 : mov ch, 0xb5 ; ret
0x0000020000664bad : mov ch, 0xc2 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000057d85a : mov ch, 0xd0 ; push rsi ; ret
0x00000200001ecffb : mov ch, 0xef ; dec dword ptr [rcx - 0x73] ; adc r9b, byte ptr [r8 + 3] ; ret
0x00000200001f5033 : mov ch, 0xf5 ; dec dword ptr [rcx - 0x75] ; ret
0x000002000057a103 : mov ch, 0xff ; add rsp, 0x28 ; ret
0x0000020000520cf5 : mov ch, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000054f77b : mov ch, 0xff ; add rsp, 0x38 ; ret
0x000002000054fafe : mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000054fc4a : mov ch, 0xff ; add rsp, 0x58 ; ret
0x0000020000668435 : mov ch, 0xff ; add rsp, 0x68 ; ret
0x00000200004e0ec5 : mov ch, 0xff ; add rsp, 0xc8 ; ret
0x00000200005497e6 : mov ch, 0xff ; call 0x2000016a035
0x000002000055dfc0 : mov ch, 0xff ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c01dc : mov ch, 4 ; add bh, bh ; ret
0x0000020000151951 : mov ch, 5 ; jmp 0x200000ae0e3
0x000002000054129a : mov ch, 6 ; add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x0000020000609b86 : mov ch, ah ; enter -0x7601, 0x43 ; sbb al, 0xe9 ; ret 0xe17c
0x00000200003d26ad : mov ch, al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200006103b3 : mov ch, al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003923af : mov ch, bl ; ret
0x000002000012a65a : mov ch, ch ; dec dword ptr [rax - 0x75] ; ret
0x00000200004e3e46 : mov cl, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003f1ddd : mov cl, 0x10 ; call rax
0x00000200000bde96 : mov cl, 0x10 ; jne 0x200000bde7d ; ret
0x00000200003d4620 : mov cl, 0x11 ; call rax
0x000002000015f995 : mov cl, 0x11 ; je 0x2000015f9a9 ; mov edx, eax ; call 0x2000006bc5c
0x000002000057dd5d : mov cl, 0x11 ; je 0x2000057dd6c ; call 0x200000d9fd6
0x000002000057dd8c : mov cl, 0x11 ; je 0x2000057dd9b ; call 0x200000d9fd6
0x000002000001eddd : mov cl, 0x11 ; jne 0x2000001ede6 ; ret
0x00000200000202d0 : mov cl, 0x11 ; jne 0x200000202ce ; ret
0x000002000006cc36 : mov cl, 0x11 ; jne 0x2000006cc3f ; ret
0x00000200000bde29 : mov cl, 0x11 ; jne 0x200000bde40 ; mov al, 1 ; ret
0x00000200000cc42e : mov cl, 0x11 ; jne 0x200000cc437 ; ret
0x00000200000d9fb1 : mov cl, 0x11 ; jne 0x200000d9fc1 ; mov al, 1 ; ret
0x0000020000009e28 : mov cl, 0x11 ; jne 0x20000120b48 ; ret
0x0000020000152a4d : mov cl, 0x11 ; jne 0x20000152a5a ; mov al, 1 ; ret
0x000002000039a4aa : mov cl, 0x11 ; jne 0x2000039a4b3 ; ret
0x000002000046aa28 : mov cl, 0x11 ; jne 0x2000046aa31 ; ret
0x0000020000064b28 : mov cl, 0x11 ; mov r8, rax ; jne 0x20000064b37 ; ret
0x00000200000d9fe6 : mov cl, 0x11 ; mov r8, rax ; jne 0x200000da016 ; ret
0x000002000040a144 : mov cl, 0x12 ; call rax
0x0000020000223c19 : mov cl, 0x13 ; add ah, bh ; ret
0x0000020000223c15 : mov cl, 0x13 ; add byte ptr [rax - 0x3ffec4f], bh ; ret
0x00000200005d5858 : mov cl, 0x13 ; call r10
0x00000200005d57db : mov cl, 0x13 ; call rax
0x00000200001351b0 : mov cl, 0x13 ; jne 0x200001351cf ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046b78b : mov cl, 0x13 ; ret 0x48ff
0x0000020000408b40 : mov cl, 0x14 ; call rax
0x0000020000535070 : mov cl, 0x15 ; ret 0xdb1a
0x000002000008f1a5 : mov cl, 0x18 ; pop rax ; ret 0x4609
0x0000020000076d8b : mov cl, 0x1a ; jne 0x20000076d60 ; mov rax, r8 ; pop rbx ; ret
0x0000020000532021 : mov cl, 0x1a ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x000002000015f94a : mov cl, 0x21 ; je 0x2000015f95d ; mov edx, eax ; call 0x2000006bc5c
0x000002000048b42b : mov cl, 0x25 ; scasd eax, dword ptr [rdi] ; ret
0x00000200003678b7 : mov cl, 0x2d ; ret
0x0000020000361cd8 : mov cl, 0x2d ; ret 0xf36d
0x00000200005b47a0 : mov cl, 0x35 ; pop rdx ; ret 0xffcd
0x0000020000388097 : mov cl, 0x3d ; ret
0x000002000049e7d8 : mov cl, 0x3d ; ret 0xdfa2
0x00000200001b7810 : mov cl, 0x48 ; or byte ptr [rbx - 0x7afb8b38], cl ; ret 0xec74
0x00000200001041c9 : mov cl, 0x48 ; sbb byte ptr [rbx], bh ; ret 0xe875
0x00000200001e3afd : mov cl, 0x49 ; adc byte ptr [rbp - 0x2a], dh ; ret
0x000002000013cd72 : mov cl, 0x49 ; mov eax, eax ; add rsp, 0x28 ; ret
0x00000200004c8743 : mov cl, 0x4b ; sbb byte ptr [rbx], bh ; ret 0xe975
0x00000200005986ec : mov cl, 0x4b ; sbb byte ptr [rbx], bh ; ret 0xed75
0x0000020000656e9f : mov cl, 0x4c ; ret 0x7404
0x000002000040388d : mov cl, 0x4d ; adc al, 0x3b ; ret 0x850f
0x0000020000393cef : mov cl, 0x4e ; adc al, 0x3b ; ret 0xed75
0x0000020000410776 : mov cl, 0x4e ; adc al, 0x3b ; ret 0xee75
0x00000200001f80a3 : mov cl, 0x4e ; sbb byte ptr [rbx], bh ; ret 0xed75
0x0000020000404892 : mov cl, 0x4f ; adc al, 0x3b ; ret 0x850f
0x00000200003bbb9c : mov cl, 0x51 ; adc byte ptr [rbp - 0xe], dh ; mov al, 1 ; ret
0x000002000004f231 : mov cl, 0x52 ; jne 0x2000004f249 ; ret
0x000002000043ba4b : mov cl, 0x55 ; ret
0x000002000005e519 : mov cl, 0x59 ; and byte ptr [rcx + 0x2b], cl ; ret 0xf748
0x000002000066991a : mov cl, 0x67 ; ret 0xcff
0x00000200000907d1 : mov cl, 0x69 ; sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x00000200004051e2 : mov cl, 0x89 ; enter 1, 0 ; ret
0x00000200006c1b90 : mov cl, 0x8a ; ret
0x00000200004d145c : mov cl, 0x8e ; clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x0000020000421f16 : mov cl, 0x8e ; clc ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000060e131 : mov cl, 0x8e ; cld ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x00000200004c7026 : mov cl, 0x8f ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x0000020000409602 : mov cl, 0xa ; call r10
0x0000020000137563 : mov cl, 0xa ; mov r9, rax ; jne 0x20000137572 ; ret
0x0000020000661993 : mov cl, 0xa0 ; ret 0x48ff
0x000002000066505b : mov cl, 0xa3 ; ret 0x40ff
0x00000200006498ca : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000066581f : mov cl, 0xa8 ; ret 0xe8ff
0x000002000043a038 : mov cl, 0xb ; call r10
0x00000200005d6bed : mov cl, 0xb ; call rax
0x000002000006ad4a : mov cl, 0xb ; jne 0x2000006ad48 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000549142 : mov cl, 0xb0 ; mov edi, edx ; call 0x2000016af17
0x000002000008f2b1 : mov cl, 0xbc ; ret
0x000002000042517a : mov cl, 0xd ; and byte ptr [rdi], ch ; push qword ptr [rbp + 1] ; ret
0x00000200003f5f48 : mov cl, 0xd ; call rax
0x0000020000133547 : mov cl, 0xd ; pop rbx ; ret 0x16
0x000002000038a8d6 : mov cl, 0xd ; pop rsp ; ret 0xfff5
0x000002000061f451 : mov cl, 0xd ; push rcx ; ret 0xffc7
0x0000020000393628 : mov cl, 0xd ; push rdx ; cmc ; push qword ptr [rbp + 7] ; ret
0x00000200003d6897 : mov cl, 0xd ; ret
0x00000200000e0a10 : mov cl, 0xd ; ret 0x1eb7
0x00000200004a3970 : mov cl, 0xd ; ret 0xe431
0x00000200003baf11 : mov cl, 0xd ; test eax, 0xfffed5c ; test dword ptr [rsi], ebp ; ret 0xd
0x00000200004a3d57 : mov cl, 0xd ; xor ebp, dword ptr [rip - 0x7af0001c] ; ret
0x000002000063e72f : mov cl, 0xd0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005d7d89 : mov cl, 0xe ; call rax
0x000002000015d08e : mov cl, 0xe ; je 0x2000015d0a3 ; mov rcx, rsi ; call 0x200000392bd
0x000002000060ea73 : mov cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x00000200001e8921 : mov cl, 0xe1 ; add eax, 0x3b440000 ; ret
0x00000200005ebe6e : mov cl, 0xe5 ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x0000020000364ec1 : mov cl, 0xe8 ; or al, 0x23 ; ret 0xf80b
0x00000200004bd68f : mov cl, 0xe9 ; ret
0x00000200006356e7 : mov cl, 0xee ; ret
0x00000200004963d3 : mov cl, 0xf ; call rax
0x00000200001b6af7 : mov cl, 0xf ; jne 0x200001b6b04 ; mov al, dl ; jmp 0x200001b6b0c
0x000002000006e903 : mov cl, 0xf1 ; std ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000101b37 : mov cl, 0xfd ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 0x75], 1 ; ret 0x8348
0x00000200003747da : mov cl, 0xfe ; push rsi ; ret
0x00000200005854af : mov cl, 0xff ; add rsp, 0x78 ; ret
0x0000020000585595 : mov cl, 0xff ; add rsp, 0xc8 ; ret
0x00000200004259ea : mov cl, 1 ; call 0x2000004f765
0x0000020000063ce2 : mov cl, 1 ; jne 0x20000063cc2 ; ret
0x00000200000beeec : mov cl, 1 ; jne 0x200000beefd ; ret
0x00000200000df88c : mov cl, 1 ; jne 0x200000df8b3 ; ret
0x0000020000373166 : mov cl, 1 ; lea ecx, dword ptr [r8 + 0xa] ; call r11
0x00000200001d1887 : mov cl, 1 ; lea ecx, dword ptr [r8 + 3] ; call r11
0x00000200001755f3 : mov cl, 1 ; lea ecx, dword ptr [r8 + 3] ; call rax
0x00000200001d18d9 : mov cl, 1 ; lea ecx, dword ptr [r8 + 4] ; call r11
0x0000020000372f48 : mov cl, 1 ; lea ecx, dword ptr [r8 + 8] ; call rax
0x0000020000373f8b : mov cl, 1 ; xor r8d, r8d ; mov ecx, ebx ; call rax
0x0000020000504b9b : mov cl, 2 ; mov edx, 0xc48348ff ; ret
0x000002000006440d : mov cl, 8 ; jne 0x200000643f3 ; mov dl, 1 ; mov al, dl ; ret
0x00000200000b7fe1 : mov cl, 8 ; jne 0x200000b7fee ; mov al, 1 ; ret
0x00000200000b8024 : mov cl, 8 ; jne 0x200000b8016 ; ret
0x000002000013751e : mov cl, 8 ; jne 0x2000013752b ; mov al, 1 ; ret
0x000002000002a58a : mov cl, 9 ; jne 0x2000002a59b ; add rsp, 0x28 ; ret
0x000002000059ef36 : mov cl, ah ; call 0x2000005b1f4
0x0000020000372718 : mov cl, ah ; lea ecx, dword ptr [r8 + 2] ; call r10
0x00000200005de47e : mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000646c2c : mov cl, al ; call 0x20000642f20
0x0000020000021e84 : mov cl, al ; or eax, 0xc033c300 ; ret
0x000002000008e148 : mov cl, bh ; or r12b, byte ptr [r15 - 0x7f] ; ret
0x0000020000175f1d : mov cl, bh ; xor r8d, r8d ; call rax
0x0000020000590345 : mov cl, bl ; call 0x2000019c574
0x0000020000168ddd : mov cl, bl ; call rax
0x00000200004965aa : mov cl, bpl ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x0000020000401823 : mov cl, byte ptr [r14] ; call rax
0x0000020000171218 : mov cl, byte ptr [rax + 0x4c000029] ; mov eax, ebx ; call rdi
0x00000200004baa2c : mov cl, byte ptr [rax + 0x4c] ; call 0x200000dbad6
0x000002000013198d : mov cl, byte ptr [rax - 0x75] ; ret
0x00000200000b6752 : mov cl, byte ptr [rcx + 0x3b48001e] ; ret 0x830f
0x0000020000401824 : mov cl, byte ptr [rsi] ; call rax
0x000002000060e4f6 : mov cl, byte ptr [rsp + 0xf8] ; jmp 0x2000042a7ee
0x00000200004965ab : mov cl, ch ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x00000200006475b5 : mov cl, cl ; call rax
0x0000020000408166 : mov cl, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000059ef35 : mov cl, r12b ; call 0x2000005b1f5
0x00000200005de47d : mov cl, r12b ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006475b4 : mov cl, r9b ; call rax
0x000002000006cc21 : mov cr0, rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015f9a5 : mov cr0, rax ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000eb50d : mov cr0, rax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000ebdda : mov cr0, rax ; add rsp, 0x28 ; ret
0x00000200000ad090 : mov cr0, rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000160044 : mov cr0, rax ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000126d91 : mov cr0, rax ; jmp 0x20000126d5d
0x000002000016719a : mov cr0, rax ; jmp 0x20000167165
0x00000200000dce01 : mov cr0, rax ; pause ; xor al, al ; ret
0x0000020000050f93 : mov cr0, rax ; ret
0x00000200000f1c9b : mov cr0, rax ; xor eax, eax ; jmp 0x200000f1c6b
0x0000020000023e9a : mov cr0, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a9802 : mov cr0, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ba2f8 : mov cr0, rcx ; ret
0x0000020000371558 : mov cr3, rax ; add rsp, 0x28 ; ret
0x0000020000016de6 : mov cr3, rax ; ret
0x000002000037154c : mov cr4, r11 ; add rsp, 0x28 ; ret
0x000002000036d923 : mov cr4, rax ; add rsp, 0x28 ; ret
0x0000020000016ddc : mov cr4, rax ; mov cr4, rcx ; ret
0x000002000037154d : mov cr4, rbx ; add rsp, 0x28 ; ret
0x0000020000016ddf : mov cr4, rcx ; ret
0x0000020000023e99 : mov cr8, r11 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006cc20 : mov cr8, rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ebdd9 : mov cr8, rax ; add rsp, 0x28 ; ret
0x00000200000ad08f : mov cr8, rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000126d90 : mov cr8, rax ; jmp 0x20000126d5e
0x0000020000167199 : mov cr8, rax ; jmp 0x20000167166
0x00000200000dce00 : mov cr8, rax ; pause ; xor al, al ; ret
0x0000020000050f92 : mov cr8, rax ; ret
0x00000200000f1c9a : mov cr8, rax ; xor eax, eax ; jmp 0x200000f1c6c
0x0000020000023fd3 : mov cr8, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a9801 : mov cr8, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ba2f7 : mov cr8, rcx ; ret
0x000002000064207e : mov cs, edi ; ret 0x85ff
0x000002000063257e : mov cs, edx ; ret
0x000002000044416e : mov cs, esi ; ret 0xe9ff
0x000002000043a10e : mov cs, esp ; ret
0x0000020000406e10 : mov cs, word ptr [rax - 0x75] ; ret
0x00000200003877e3 : mov cs, word ptr [rax] ; add dh, dh ; ret
0x0000020000665e79 : mov cs, word ptr [rcx + rax + 0x1d] ; mov bh, 0x80 ; ret 0xebff
0x000002000016e126 : mov cs, word ptr [rdi - 0x9beffe2] ; ret
0x000002000000b4ba : mov cs, word ptr [rdx + 0x1c] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000367d6e : mov dh, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005e6e01 : mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x000002000011c93d : mov dh, 0x17 ; add byte ptr [rbx], al ; ret
0x0000020000532cdf : mov dh, 0x17 ; call 0x2000040ef64
0x0000020000403d87 : mov dh, 0x20 ; add al, ch ; and dword ptr [rdx], eax ; ret 0xebff
0x0000020000492f56 : mov dh, 0x20 ; ret 0x48ff
0x0000020000141d98 : mov dh, 0x40 ; ret
0x000002000047e81f : mov dh, 0x41 ; adc cl, dl ; call 0x1ffc349c8b3
0x00000200000a90b1 : mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret
0x000002000000edf8 : mov dh, 0x41 ; add eax, dword ptr [rcx + 0xb] ; ret 0x4188
0x000002000060be57 : mov dh, 0x41 ; add eax, ecx ; call 0x1ff8422f16c
0x00000200003f6f61 : mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200004cf8d7 : mov dh, 0x41 ; call 0x1ffc261842c
0x00000200001f4c55 : mov dh, 0x41 ; or dh, byte ptr [rbx] ; sal dh, 1 ; ret 0xf08
0x00000200000bada1 : mov dh, 0x41 ; sbb al, byte ptr [rax + rax*8 - 0x3fcdfc88] ; ret
0x00000200000d7aec : mov dh, 0x41 ; sbb al, cl ; call 0x1ffc348bc03
0x00000200001a4501 : mov dh, 0x43 ; add cl, byte ptr [rdi] ; mov dh, 0x53 ; add ebp, eax ; ret
0x0000020000020a77 : mov dh, 0x43 ; add dh, dh ; ret 0xf04
0x000002000003c58c : mov dh, 0x43 ; sbb al, cl ; call 0x20075c600a2
0x00000200006c4b76 : mov dh, 0x44 ; ret 0x41ff
0x0000020000155f4e : mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x00000200000198fe : mov dh, 0x46 ; add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x00000200003bdfa2 : mov dh, 0x46 ; add eax, dword ptr [rcx + 0xb] ; ret 0x8841
0x00000200000198da : mov dh, 0x47 ; add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x000002000046baa4 : mov dh, 0x47 ; call 0x1ffc3cb45fa
0x000002000046baeb : mov dh, 0x47 ; call 0x1ffc3cb4641
0x000002000046bb01 : mov dh, 0x47 ; call 0x1ffc3cb4657
0x000002000046bb1b : mov dh, 0x47 ; call 0x1ffc3cb4671
0x00000200000c4858 : mov dh, 0x47 ; sbb al, cl ; call 0x1ffc347896f
0x0000020000410af9 : mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x00000200001a4a7a : mov dh, 0x48 ; add cl, byte ptr [rbx - 0x7cb7e7a6] ; ret 0x391c
0x00000200000d8948 : mov dh, 0x4c ; pop rdi ; add al, 0x8b ; ret
0x00000200001875be : mov dh, 0x50 ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x000002000013b324 : mov dh, 0x52 ; add dh, dh ; ret 0x7501
0x00000200000d92ac : mov dh, 0x53 ; add dh, dh ; ret 0x7401
0x000002000047399f : mov dh, 0x53 ; add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x00000200001a4505 : mov dh, 0x53 ; add ebp, eax ; ret
0x0000020000036ec4 : mov dh, 0x53 ; sbb dh, dh ; ret 0xf20
0x000002000002fbd2 : mov dh, 0x54 ; and al, 0x30 ; mov rcx, r14 ; call 0x200000dbe29
0x0000020000084908 : mov dh, 0x59 ; ret
0x0000020000426b5d : mov dh, 0x5e ; add eax, dword ptr [rcx - 0xa] ; ret
0x0000020000058f6e : mov dh, 0x5e ; and al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001c745 : mov dh, 0x7d ; adc bh, bh ; ret
0x00000200000bdeba : mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000020000067a94 : mov dh, 0x82 ; ret
0x00000200000254ff : mov dh, 0x83 ; ret
0x000002000000418b : mov dh, 0x83 ; ret 1
0x000002000040b07f : mov dh, 0x84 ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8488
0x00000200004d543a : mov dh, 0x84 ; and al, 0x99 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x000002000014fe7c : mov dh, 0x84 ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x894d
0x00000200000a1bfd : mov dh, 0x84 ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000109610 : mov dh, 0x85 ; ret
0x0000020000109605 : mov dh, 0x86 ; ret
0x000002000045cf8e : mov dh, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000134562 : mov dh, 0x88 ; ret
0x00000200000ba481 : mov dh, 0x8a ; ret
0x00000200000a5970 : mov dh, 0x8b ; ret
0x000002000002b19c : mov dh, 0x8b ; ret 0
0x00000200006653a6 : mov dh, 0x8b ; ret 0x48ff
0x00000200001688de : mov dh, 0x8c ; adc byte ptr [rax], dl ; fldenv dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000b0f08 : mov dh, 0x8f ; ret 0
0x0000020000586252 : mov dh, 0x92 ; ret
0x00000200000a3fa2 : mov dh, 0x97 ; ret
0x000002000001e213 : mov dh, 0x9c ; or dl, al ; ret 8
0x00000200006c74c7 : mov dh, 0xa7 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x9de9
0x000002000064b9ab : mov dh, 0xab ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d446c : mov dh, 0xab ; in eax, dx ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000067a0e : mov dh, 0xab ; ret
0x000002000058777a : mov dh, 0xae ; dec dword ptr [rax - 0x7d] ; ret
0x000002000001c392 : mov dh, 0xaf ; xor eax, dword ptr [rax] ; ret
0x00000200000254f8 : mov dh, 0xb3 ; add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000072102 : mov dh, 0xbb ; ret
0x000002000003ff7c : mov dh, 0xc ; adc dword ptr [rax - 1], ecx ; ret 0x8841
0x0000020000463938 : mov dh, 0xc ; or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x0000020000438d95 : mov dh, 0xc0 ; add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x0000020000480d86 : mov dh, 0xc0 ; and eax, r8d ; or eax, 5 ; ret
0x0000020000448e9e : mov dh, 0xc0 ; ret
0x0000020000124885 : mov dh, 0xc0 ; shr eax, 3 ; and eax, 4 ; ret
0x00000200001c2a89 : mov dh, 0xc0 ; shr eax, 4 ; and eax, 1 ; ret
0x00000200000bf23d : mov dh, 0xc1 ; add rsp, 0x58 ; ret
0x0000020000050f90 : mov dh, 0xc1 ; mov cr8, rax ; ret
0x0000020000152df3 : mov dh, 0xc2 ; add rsp, 8 ; ret
0x000002000064c238 : mov dh, 0xc2 ; jmp 0x2000064c249
0x000002000064c2e3 : mov dh, 0xc2 ; jmp 0x2000064c2f4
0x000002000064c39b : mov dh, 0xc2 ; jmp 0x2000064c3ac
0x000002000064c46c : mov dh, 0xc2 ; jmp 0x2000064c47d
0x000002000014dbd6 : mov dh, 0xc2 ; mov cr8, rax ; ret
0x000002000043b42a : mov dh, 0xc2 ; ret
0x00000200000a81d8 : mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000126d8e : mov dh, 0xc5 ; mov cr8, rax ; jmp 0x20000126d60
0x0000020000167197 : mov dh, 0xc6 ; mov cr8, rax ; jmp 0x20000167168
0x00000200001405d5 : mov dh, 0xc6 ; push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x00000200000d83c2 : mov dh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f1c98 : mov dh, 0xc7 ; mov cr8, rax ; xor eax, eax ; jmp 0x200000f1c6e
0x00000200000dcdf6 : mov dh, 0xc8 ; mov dword ptr [rdx + 0x30], ecx ; ret
0x00000200000ba2f5 : mov dh, 0xc9 ; mov cr8, rcx ; ret
0x00000200000f6ae7 : mov dh, 0xca ; call 0x2000001b7f0
0x00000200000e450a : mov dh, 0xca ; cmovne eax, ecx ; ret
0x00000200001bf9c2 : mov dh, 0xca ; mov dword ptr [rax + 0x30], ecx ; mov al, r8b ; ret
0x000002000048fb6e : mov dh, 0xd ; insb byte ptr [rdi], dx ; ret 0xffe3
0x00000200003673eb : mov dh, 0xd ; ret
0x000002000048fb8c : mov dh, 0xd ; ret 0xffe3
0x000002000057dcbe : mov dh, 0xd0 ; push rsi ; ret
0x0000020000631e56 : mov dh, 0xd1 ; ret
0x0000020000362dee : mov dh, 0xd2 ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200004297c1 : mov dh, 0xd7 ; mov rcx, rsi ; call 0x20000055f68
0x00000200005e6478 : mov dh, 0xda ; inc dword ptr [rbx + 0x3b44fec3] ; ret
0x00000200003f9abb : mov dh, 0xe8 ; out dx, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xebff
0x000002000043b27f : mov dh, 0xea ; dec dword ptr [rbx + 0x9cbe8d0] ; ret
0x000002000036ea12 : mov dh, 0xf1 ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000541fc8 : mov dh, 0xff ; add rsp, 0x148 ; ret
0x00000200005497bc : mov dh, 0xff ; add rsp, 0x38 ; ret
0x0000020000538658 : mov dh, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x00000200007054df : mov dh, 0xff ; mov rbx, qword ptr [rsp + 0x30] ; jmp 0x200007054b3
0x000002000054cfdd : mov dh, 0xff ; mov rcx, r14 ; call 0x200000a9257
0x00000200001405d6 : mov dh, 0xff ; xor ecx, ecx ; call qword ptr [rax]
0x00000200000c9340 : mov dh, 1 ; cmp eax, edx ; jne 0x200000c9358 ; mov rax, r9 ; ret
0x00000200004845de : mov dh, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000041b469 : mov dh, 4 ; adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x00000200000419f4 : mov dh, 4 ; ret 0x1a8
0x00000200000b62c6 : mov dh, 4 ; ret 0xe8c1
0x000002000002be52 : mov dh, 4 ; ret 0xf024
0x00000200001f5790 : mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000046077 : mov dh, 4 ; shr dword ptr [rax + 0x48457401], -0x75 ; ret
0x00000200001e46cb : mov dh, 4 ; shr dword ptr [rax + 0x48577401], -0x75 ; ret 0xb948
0x00000200001e4448 : mov dh, 4 ; shr dword ptr [rax + 0x485b7401], -0x75 ; ret 0xb948
0x0000020000494c71 : mov dh, al ; call 0x200000b9b05
0x0000020000627098 : mov dh, al ; jmp 0x20000394002
0x00000200001035b6 : mov dh, byte ptr [rax + rcx - 0x75] ; ret 0x8041
0x0000020000486472 : mov dh, byte ptr [rsi] ; ret
0x00000200004fd197 : mov dh, dh ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000e92e6 : mov dh, dh ; ret
0x000002000015c905 : mov dl, 0x18 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000042847 : mov dl, 0x19 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003cdc3a : mov dl, 0x1f ; or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x0000020000115104 : mov dl, 0x23 ; add byte ptr [rdi], cl ; test ebx, edi ; add r8, qword ptr [rax] ; ret
0x000002000036d60a : mov dl, 0x2a ; fdivp st(7) ; add rsp, 0x38 ; ret
0x000002000066a5d2 : mov dl, 0x39 ; ret 0x48ff
0x000002000008784e : mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x0000020000438c6d : mov dl, 0x48 ; mov ecx, ebp ; call 0x20000064b07
0x00000200000921a9 : mov dl, 0x6c ; imul dword ptr [rbx] ; cdq ; ret
0x0000020000091663 : mov dl, 0x76 ; ret 0xbb54
0x00000200000b8864 : mov dl, 0x77 ; or eax, dword ptr [rax] ; and dword ptr [rcx + 4], 0 ; ret
0x0000020000667d7e : mov dl, 0x83 ; ret 0x44ff
0x0000020000483340 : mov dl, 0x8b ; ret
0x000002000066538a : mov dl, 0x8b ; ret 0x48ff
0x000002000042a2fa : mov dl, 0xab ; ret
0x000002000037708a : mov dl, 0xb4 ; int1 ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000664392 : mov dl, 0xbd ; ret 0x48ff
0x000002000012f8a8 : mov dl, 0xc ; add bh, bh ; ret
0x0000020000664cd1 : mov dl, 0xc2 ; dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000009f70d : mov dl, 0xc8 ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x0000020000477dca : mov dl, 0xd0 ; ret 0x48ff
0x00000200001f348e : mov dl, 0xe5 ; dec dword ptr [rax - 0x75] ; ret 0x854d
0x00000200005f917e : mov dl, 0xe6 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; test esp, edx ; ret
0x0000020000404dae : mov dl, 0xf6 ; ret 0x7504
0x000002000058752b : mov dl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000057f992 : mov dl, 0xff ; add rsp, 0x38 ; ret
0x0000020000550702 : mov dl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000584763 : mov dl, 0xff ; add rsp, 0x48 ; ret
0x00000200005803a0 : mov dl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000580a4c : mov dl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000580b81 : mov dl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000544e02 : mov dl, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000058c6e3 : mov dl, 0xff ; nop ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x0000020000544c88 : mov dl, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000588d11 : mov dl, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048b5e0 : mov dl, 1 ; call 0x200000b90e5
0x0000020000489a02 : mov dl, 1 ; call 0x200000b9885
0x00000200000f6129 : mov dl, 1 ; call qword ptr [r11]
0x0000020000064411 : mov dl, 1 ; mov al, dl ; ret
0x00000200000da085 : mov dl, 1 ; mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x000002000001057b : mov dl, 1 ; mov rax, qword ptr [rip + 0x346f34] ; call rax
0x0000020000447b58 : mov dl, 1 ; mov rcx, r15 ; call r12
0x000002000045ffc3 : mov dl, 1 ; mov rcx, r15 ; call rbx
0x0000020000447500 : mov dl, 1 ; mov rcx, r15 ; call rsi
0x00000200000efb6b : mov dl, 1 ; mov rcx, rbp ; call 0x200000dbe27
0x00000200004789be : mov dl, 1 ; mov rcx, rbx ; call 0x20000054c17
0x00000200003cc4b1 : mov dl, 1 ; mov rcx, rbx ; call 0x20000378757
0x000002000063e85a : mov dl, 7 ; ret
0x00000200004d674a : mov dl, 8 ; call 0x1ffc288b056
0x000002000048ad1e : mov dl, ah ; call 0x200000b90e5
0x000002000000c591 : mov dl, ah ; mov rax, qword ptr [rip + 0x34af1e] ; call rax
0x000002000000c401 : mov dl, ah ; mov rax, qword ptr [rip + 0x34b0ae] ; call rax
0x000002000047fdbd : mov dl, ah ; mov rcx, rbx ; call 0x2000043c047
0x00000200001419af : mov dl, al ; dec r9 ; jne 0x200001419a5 ; mov al, dl ; ret
0x00000200003b33f2 : mov dl, al ; mov al, r10b ; add rsp, 0x58 ; ret
0x000002000000f300 : mov dl, al ; mov rax, qword ptr [rip + 0x3481af] ; call rax
0x000002000048b1c3 : mov dl, bh ; call 0x200000b90e5
0x00000200004918bc : mov dl, bh ; call 0x200000b9885
0x0000020000548692 : mov dl, bh ; call 0x2000016e161
0x00000200000155eb : mov dl, bh ; mov rax, qword ptr [rip + 0x341ec4] ; call rax
0x000002000000c4ad : mov dl, bh ; mov rax, qword ptr [rip + 0x34b002] ; call rax
0x000002000000c2d6 : mov dl, bh ; mov rax, qword ptr [rip + 0x34b1d9] ; call rax
0x000002000000c227 : mov dl, bh ; mov rax, qword ptr [rip + 0x34b288] ; call rax
0x000002000048a872 : mov dl, bl ; call 0x200000b90e5
0x00000200001964cb : mov dl, bl ; mov al, dl ; ret
0x000002000048aa94 : mov dl, bl ; mov rcx, r15 ; call 0x200000b90e8
0x000002000048aaf7 : mov dl, bl ; mov rcx, r15 ; call 0x200000b9888
0x00000200003718c9 : mov dl, bl ; mov rcx, r15 ; call 0x2000014dbd7
0x000002000040181f : mov dl, byte ptr [r14 + 1] ; mov cl, byte ptr [r14] ; call rax
0x00000200000ba3f2 : mov dl, byte ptr [rax] ; add eax, 0x81480000 ; ret
0x0000020000401820 : mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [r14] ; call rax
0x00000200006c7b2a : mov dl, ch ; add al, 0 ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0xbc2a
0x000002000042155e : mov dl, cl ; mov rcx, rax ; call 0x20000050000
0x00000200003a3434 : mov dl, dh ; jmp qword ptr [rcx]
0x00000200003a33b3 : mov dl, dh ; jmp qword ptr [rdx]
0x000002000011c386 : mov dl, dh ; mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000012edc9 : mov dl, dh ; mov rax, qword ptr [rip + 0x2286e6] ; call rax
0x00000200004918bb : mov dl, dil ; call 0x200000b9886
0x00000200004918ba : mov dl, dil ; call 0x200000b9887
0x00000200004918b9 : mov dl, dil ; call 0x200000b9888
0x0000020000548691 : mov dl, dil ; call 0x2000016e162
0x0000020000548690 : mov dl, dil ; call 0x2000016e163
0x00000200001964ca : mov dl, r11b ; mov al, dl ; ret
0x000002000048ad1d : mov dl, r12b ; call 0x200000b90e6
0x000002000047fdbc : mov dl, r12b ; mov rcx, rbx ; call 0x2000043c048
0x000002000011c385 : mov dl, r14b ; mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000048b1c2 : mov dl, r15b ; call 0x200000b90e6
0x000002000042155d : mov dl, r9b ; mov rcx, rax ; call 0x20000050001
0x000002000048fdde : mov dr0, esp ; ret 0x48ff
0x000002000069cd78 : mov dr0, word ptr [rbx + rax - 0x74b70000] ; ret
0x000002000069bd5b : mov dr0, word ptr [rbx + rax - 0x74b70000] ; ret 0xc148
0x00000200006c74c6 : mov dr0, word ptr [rsi - 0x7ab70059] ; ror byte ptr [rdi], 0x94 ; ret 0x9de9
0x000002000069dc1d : mov dr0, word ptr [rsp + rax] ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000182feb : mov dr0, word ptr [rsp + rax] ; add byte ptr [rax], al ; or byte ptr [rbp - 0x75], al ; ret
0x00000200004d145d : mov dr1, eax ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x0000020000421f17 : mov dr1, eax ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000043b296 : mov dr1, edx ; ret 0xe9ff
0x000002000060e132 : mov dr1, esp ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x000002000050da22 : mov dr1, word ptr [rax - 0x166f004e] ; ret 0xe8f8
0x0000020000101ecb : mov dr1, word ptr [rdx] ; mov edx, 0x8b48000e ; ret
0x000002000002619b : mov ds, word ptr [rbx] ; add byte ptr [rdx - 0x77], al ; push rsp ; ret
0x0000020000147e1f : mov dword ptr [r10 + 0x14], ecx ; xor eax, eax ; ret
0x00000200004df647 : mov dword ptr [r10 + 0x20], ecx ; test dl, dl ; jne 0x200004df65a ; ret
0x00000200004df67d : mov dword ptr [r10 + 0x40], ecx ; ret
0x0000020000178a19 : mov dword ptr [r10 + 0x5a], esi ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000365ec5 : mov dword ptr [r10 + 0x80], r9d ; pop r14 ; ret
0x00000200000d25e4 : mov dword ptr [r10 + 0xc], r9d ; ret
0x000002000012efdf : mov dword ptr [r10 + 2], r8d ; ret
0x00000200006405b0 : mov dword ptr [r10 + r9*4], r8d ; mov eax, r8d ; ret
0x000002000015e56a : mov dword ptr [r10 + rcx*4], eax ; inc dword ptr [r10 + 0xc] ; ret
0x000002000015e5a1 : mov dword ptr [r10 + rcx*4], eax ; inc dword ptr [r10 + 8] ; ret
0x00000200001c65cd : mov dword ptr [r10 - 0x38], r9d ; mov qword ptr [r10 - 0x58], r11 ; ret
0x00000200001503f1 : mov dword ptr [r10], 0 ; ret
0x00000200001535fc : mov dword ptr [r10], 0xffffffff ; ret
0x00000200000a9784 : mov dword ptr [r10], eax ; ret
0x00000200000a9776 : mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200001056ee : mov dword ptr [r10], ecx ; add rsp, 0x28 ; ret
0x00000200006e78d5 : mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x00000200001c2c19 : mov dword ptr [r10], ecx ; ret
0x00000200003ac676 : mov dword ptr [r10], r8d ; add rsp, 0x28 ; ret
0x000002000058decd : mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x0000020000100f12 : mov dword ptr [r11 + 0x18], ecx ; ret
0x00000200001c6228 : mov dword ptr [r11 - 0x38], r9d ; mov qword ptr [r11 - 0x58], r10 ; ret
0x000002000017674d : mov dword ptr [r11], ecx ; ret
0x0000020000444266 : mov dword ptr [r14 + 0x1e], 0xcfe80001 ; jmp 0x2000044423b
0x00000200003f9da1 : mov dword ptr [r14 + rcx*2 + 0x18], eax ; inc edx ; jmp 0x200003f9d96
0x00000200005a712f : mov dword ptr [r14 + rdx*4], eax ; inc edx ; jmp 0x200005a7129
0x0000020000576dc0 : mov dword ptr [r14], eax ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004dcd2e : mov dword ptr [r14], r9d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000529fdc : mov dword ptr [r15], ecx ; jmp 0x20000529fa8
0x0000020000129fbd : mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x0000020000164db4 : mov dword ptr [r8 + 0x28], eax ; ret
0x000002000001fd25 : mov dword ptr [r8 + 0x30], ebx ; call r9
0x000002000001fcea : mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200004e2dbd : mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x00000200001bcbb4 : mov dword ptr [r8 + 0xc], ecx ; mov eax, r9d ; ret
0x00000200001c2a6c : mov dword ptr [r8 + 0xc], ecx ; ret
0x0000020000076833 : mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x00000200004e81c1 : mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x000002000015fe43 : mov dword ptr [r8 + 4], r10d ; ret
0x00000200004dedfd : mov dword ptr [r8 + 6], eax ; ret
0x000002000012b337 : mov dword ptr [r8 + 8], eax ; jmp 0x2000012b304
0x00000200004e43f7 : mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x000002000007682f : mov dword ptr [r8 + 8], ecx ; mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x000002000064cf51 : mov dword ptr [r8 + rcx*4], 0 ; ret
0x000002000064cfe0 : mov dword ptr [r8 + rcx*4], 1 ; ret
0x000002000035ddb7 : mov dword ptr [r8], 0x1000 ; xor eax, eax ; ret
0x00000200006551c8 : mov dword ptr [r8], 0x104 ; ret
0x000002000014df75 : mov dword ptr [r8], 0x1429 ; xor eax, eax ; ret
0x00000200001ffdbe : mov dword ptr [r8], eax ; mov eax, 0x80070216 ; ret
0x00000200001d0eb6 : mov dword ptr [r8], eax ; mov eax, 0xc0000095 ; ret
0x00000200004bb4f2 : mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x000002000006fec3 : mov dword ptr [r8], eax ; ret
0x000002000003fe4d : mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000036416e : mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x0000020000613992 : mov dword ptr [r8], ecx ; pop rbx ; ret
0x00000200000272cc : mov dword ptr [r8], ecx ; ret
0x00000200001b332d : mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200001172e0 : mov dword ptr [r8], edx ; ret
0x00000200000fa634 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000163bcc : mov dword ptr [r8], esi ; test rax, rax ; je 0x20000163be0 ; call rax
0x00000200003d278b : mov dword ptr [r8], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x0000020000159c71 : mov dword ptr [r8], r10d ; ret
0x00000200003cda00 : mov dword ptr [r8], r9d ; mov eax, 0x80000014 ; ret
0x000002000048cbd6 : mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x0000020000113a44 : mov dword ptr [r8], r9d ; ret
0x00000200001a1b3e : mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200000ca652 : mov dword ptr [r9 + 0x18], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000ca677 : mov dword ptr [r9 + 0x18], eax ; ret
0x00000200000dc906 : mov dword ptr [r9 + 0x48], r10d ; mov eax, 3 ; ret
0x000002000017fa9f : mov dword ptr [r9 + 0xa], ecx ; ret
0x0000020000025a5b : mov dword ptr [r9 + 2], eax ; mov eax, r10d ; ret
0x0000020000391ba5 : mov dword ptr [r9 + 2], ecx ; xor eax, eax ; ret
0x000002000039c037 : mov dword ptr [r9 + 4], 0x10 ; ret
0x000002000039c02b : mov dword ptr [r9 + 4], edx ; ret
0x00000200004b5be3 : mov dword ptr [r9 + 8], edx ; add rsp, 0x28 ; ret
0x00000200004b5bda : mov dword ptr [r9 + 8], r8d ; add rsp, 0x28 ; ret
0x000002000043b468 : mov dword ptr [r9], eax ; mov al, 1 ; ret
0x00000200001126ff : mov dword ptr [r9], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001621c3 : mov dword ptr [r9], eax ; xor eax, eax ; ret
0x000002000038dfb9 : mov dword ptr [r9], edx ; mov al, 1 ; ret
0x0000020000157d0f : mov dword ptr [r9], r10d ; mov al, 1 ; ret
0x00000200005ba1d0 : mov dword ptr [r9], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000060c40 : mov dword ptr [r9], r10d ; xor eax, eax ; pop rdi ; ret
0x00000200004e4486 : mov dword ptr [rax + 0x1000000], ebx ; ret
0x0000020000129fbe : mov dword ptr [rax + 0x10], eax ; mov al, 1 ; ret
0x00000200004c5cc9 : mov dword ptr [rax + 0x10], ecx ; ret
0x0000020000029873 : mov dword ptr [rax + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d841b : mov dword ptr [rax + 0x18], eax ; call 0x200000b46e5
0x0000020000490548 : mov dword ptr [rax + 0x18], eax ; call 0x200000b46e6
0x00000200001c6c8c : mov dword ptr [rax + 0x18], eax ; mov qword ptr [rax + 0x20], r9 ; ret
0x0000020000707449 : mov dword ptr [rax + 0x1c], ebx ; call 0x200000771c9
0x0000020000127825 : mov dword ptr [rax + 0x20], eax ; ret
0x00000200004d382a : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x10], rax ; ret
0x00000200004d3839 : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x18], rax ; ret
0x00000200004d381b : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x20], rax ; ret
0x00000200004d380c : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x30], rax ; ret
0x00000200004d3848 : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x40], rax ; ret
0x00000200004d37fd : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 0x50], rax ; ret
0x00000200004d37b9 : mov dword ptr [rax + 0x20], eax ; xor eax, eax ; mov qword ptr [rdx + 8], rax ; ret
0x00000200001c6c90 : mov dword ptr [rax + 0x20], ecx ; ret
0x0000020000164db5 : mov dword ptr [rax + 0x28], eax ; ret
0x000002000001fd26 : mov dword ptr [rax + 0x30], ebx ; call r9
0x00000200001bf9c4 : mov dword ptr [rax + 0x30], ecx ; mov al, r8b ; ret
0x00000200000bf2da : mov dword ptr [rax + 0x3e0], ecx ; ret
0x000002000011fa9d : mov dword ptr [rax + 0x3e8], edx ; ret
0x000002000006ab6a : mov dword ptr [rax + 0x4b0], ecx ; ret
0x00000200006f3ba5 : mov dword ptr [rax + 0x58], ecx ; sub rdx, r8 ; jne 0x200006f3ba1 ; ret
0x000002000001fceb : mov dword ptr [rax + 0x5c], eax ; ret
0x00000200006572ec : mov dword ptr [rax + 0x8160], eax ; ret
0x00000200006572eb : mov dword ptr [rax + 0x8160], r8d ; ret
0x00000200004e2dbe : mov dword ptr [rax + 0xc], eax ; xor eax, eax ; ret
0x00000200001bcbb5 : mov dword ptr [rax + 0xc], ecx ; mov eax, r9d ; ret
0x00000200001c2a6d : mov dword ptr [rax + 0xc], ecx ; ret
0x0000020000076834 : mov dword ptr [rax + 0xc], edx ; pop rbx ; ret
0x000002000003f06a : mov dword ptr [rax + 0xf8], ecx ; ret
0x000002000064268a : mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x00000200000dcdbe : mov dword ptr [rax + 4], edx ; ret
0x00000200004e81c2 : mov dword ptr [rax + 4], edx ; xor eax, eax ; ret
0x00000200004dedfe : mov dword ptr [rax + 6], eax ; ret
0x0000020000066ef1 : mov dword ptr [rax + 8], 1 ; ret
0x0000020000526567 : mov dword ptr [rax + 8], eax ; cmp dword ptr [r9], r11d ; ja 0x2000052652f ; ret
0x000002000012b338 : mov dword ptr [rax + 8], eax ; jmp 0x2000012b303
0x0000020000129fd5 : mov dword ptr [rax + 8], eax ; mov al, 1 ; ret
0x00000200000234ee : mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x00000200001d6ccb : mov dword ptr [rax + 8], eax ; mov qword ptr [rcx], rax ; ret
0x00000200004e43f8 : mov dword ptr [rax + 8], eax ; xor eax, eax ; ret
0x000002000048ce0f : mov dword ptr [rax + 8], ebp ; call 0x200000b5016
0x0000020000026cd7 : mov dword ptr [rax + 8], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000076830 : mov dword ptr [rax + 8], ecx ; mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x000002000014415f : mov dword ptr [rax + 8], ecx ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000006c4c2 : mov dword ptr [rax + 8], ecx ; mov qword ptr [rdx], rcx ; ret
0x000002000064afee : mov dword ptr [rax + 8], ecx ; ret
0x000002000037f3c9 : mov dword ptr [rax + 8], edx ; inc dword ptr [rcx + 0x5a8] ; ret
0x00000200004c65db : mov dword ptr [rax + 8], edx ; or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x0000020000103702 : mov dword ptr [rax + rcx - 0x75], esi ; ret 0x8041
0x000002000064cf52 : mov dword ptr [rax + rcx*4], 0 ; ret
0x000002000064cfe1 : mov dword ptr [rax + rcx*4], 1 ; ret
0x000002000015e7ab : mov dword ptr [rax + rcx*8 + 0x28], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000015de55 : mov dword ptr [rax + rcx*8], eax ; add rsp, 0x28 ; ret
0x000002000000d835 : mov dword ptr [rax + rdx + 0x400], eax ; ret
0x000002000000d834 : mov dword ptr [rax + rdx + 0x400], r8d ; ret
0x00000200004a497d : mov dword ptr [rax + rdx*8 + 8], ecx ; add rsp, 0x28 ; ret
0x000002000014b060 : mov dword ptr [rax - 0x10], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c82fb : mov dword ptr [rax - 0x43], ebp ; dec dword ptr [rax + 0x2b] ; ret
0x00000200001f4bbb : mov dword ptr [rax - 0x74b3001b], edx ; ret
0x00000200003ab54d : mov dword ptr [rax - 0x75000000], ebx ; ret 0xc148
0x00000200004c2be4 : mov dword ptr [rax - 4], eax ; dec r9 ; jne 0x200004c2bd3 ; ret
0x000002000035ddb8 : mov dword ptr [rax], 0x1000 ; xor eax, eax ; ret
0x00000200006551c9 : mov dword ptr [rax], 0x104 ; ret
0x000002000014df76 : mov dword ptr [rax], 0x1429 ; xor eax, eax ; ret
0x0000020000549bff : mov dword ptr [rax], 0x28 ; mov eax, r9d ; ret
0x00000200004721c7 : mov dword ptr [rax], 0x8b480000 ; int 0xff
0x0000020000082f93 : mov dword ptr [rax], 0xb5000000 ; ret
0x00000200001790d0 : mov dword ptr [rax], 0xc000001d ; xor eax, eax ; ret
0x00000200001790e4 : mov dword ptr [rax], 0xc0000096 ; xor eax, eax ; ret
0x00000200004e43d0 : mov dword ptr [rax], 1 ; xor eax, eax ; ret
0x0000020000129edd : mov dword ptr [rax], 4 ; ret
0x00000200003b5b2f : mov dword ptr [rax], 6 ; mov qword ptr [rdx], rax ; ret
0x000002000019e395 : mov dword ptr [rax], eax ; adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000dddf1 : mov dword ptr [rax], eax ; add al, 0 ; add byte ptr [rbp + 0x33], al ; shr cl, 0xc2 ; int 0xfd
0x000002000000f627 : mov dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000423b3b : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov ecx, dword ptr [rbx] ; call 0x2000004ff8d
0x00000200000dcb4d : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006bd23 : mov dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005f0e55 : mov dword ptr [rax], eax ; mov al, 1 ; ret
0x0000020000064ec3 : mov dword ptr [rax], eax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x00000200001ffdbf : mov dword ptr [rax], eax ; mov eax, 0x80070216 ; ret
0x00000200001d0eb7 : mov dword ptr [rax], eax ; mov eax, 0xc0000095 ; ret
0x0000020000480f6d : mov dword ptr [rax], eax ; mov eax, r9d ; ret
0x0000020000550725 : mov dword ptr [rax], eax ; mov rax, qword ptr [rcx + 0x28] ; mov dword ptr [rax], r8d ; ret
0x0000020000003500 : mov dword ptr [rax], eax ; mov rax, qword ptr [rip + 0x271f77] ; ret
0x000002000003ef27 : mov dword ptr [rax], eax ; mov word ptr [rcx + 0x30], 0x100 ; ret
0x0000020000017c7c : mov dword ptr [rax], eax ; ret
0x000002000003fe4e : mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000e62c4 : mov dword ptr [rax], ebx ; mov qword ptr [r9], r11 ; ret
0x000002000013e1c5 : mov dword ptr [rax], ebx ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000586541 : mov dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x000002000036416f : mov dword ptr [rax], ecx ; add eax, ecx ; ret
0x00000200001606a9 : mov dword ptr [rax], ecx ; mov al, r9b ; ret
0x00000200003cda01 : mov dword ptr [rax], ecx ; mov eax, 0x80000014 ; ret
0x000002000048cbd7 : mov dword ptr [rax], ecx ; mov eax, 1 ; ret
0x000002000039e3a3 : mov dword ptr [rax], ecx ; mov eax, r9d ; ret
0x00000200003604b9 : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200003b20aa : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x11921b], rcx ; ret
0x00000200004b05f7 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x1d86d8], rcx ; ret
0x0000020000606e5d : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x36df9e], rcx ; ret
0x00000200006525f6 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x3bb757], rcx ; ret
0x0000020000613993 : mov dword ptr [rax], ecx ; pop rbx ; ret
0x000002000001dbbd : mov dword ptr [rax], ecx ; ret
0x0000020000054c9e : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003db698 : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013b34d : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000037de73 : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000165ca8 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000200000632d9 : mov dword ptr [rax], edi ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000015ad53 : mov dword ptr [rax], edi ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000190a15 : mov dword ptr [rax], edx ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200000da088 : mov dword ptr [rax], edx ; mov al, r10b ; ret
0x00000200001bac1c : mov dword ptr [rax], edx ; mov eax, r8d ; ret
0x00000200001b372e : mov dword ptr [rax], edx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x000002000001e26a : mov dword ptr [rax], edx ; ret
0x00000200000fa635 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000200004913b3 : mov dword ptr [rax], esi ; in al, -1 ; call 0x200000b9b07
0x000002000048ce0c : mov dword ptr [rax], esi ; mov qword ptr [rax + 8], r13 ; call 0x200000b5019
0x0000020000163bcd : mov dword ptr [rax], esi ; test rax, rax ; je 0x20000163bdf ; call rax
0x00000200003d278c : mov dword ptr [rax], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x00000200003cf7bc : mov dword ptr [rax], esp ; jmp 0x200003cf786
0x00000200003cf7bb : mov dword ptr [rax], r12d ; jmp 0x200003cf787
0x000002000055072b : mov dword ptr [rax], r8d ; ret
0x00000200005ba8d5 : mov dword ptr [rbp + 0x10], ecx ; mov eax, 1 ; pop rbp ; ret
0x0000020000442550 : mov dword ptr [rbp + 0x18], ecx ; call 0x2000006ccca
0x0000020000523e0f : mov dword ptr [rbp + 0x38], eax ; call 0x20000270045
0x00000200005596ae : mov dword ptr [rbp + 0x40], eax ; call 0x20000485901
0x0000020000478de5 : mov dword ptr [rbp + 0xf], 0xc0000001 ; call 0x200000b5069
0x00000200005babad : mov dword ptr [rbp + 8], ecx ; mov eax, 1 ; pop rbp ; ret
0x000002000053966f : mov dword ptr [rbp + rax*2], esp ; call 0x20000105966
0x000002000053966e : mov dword ptr [rbp + rax*2], r12d ; call 0x20000105967
0x000002000070ef4e : mov dword ptr [rbp - 0x10], ebx ; call 0x200000fb20d
0x00000200006d16c1 : mov dword ptr [rbp - 0x10], edx ; jmp 0x200006d168c
0x00000200004ea42f : mov dword ptr [rbp - 0x18], ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000424f34 : mov dword ptr [rbp - 0x18], esi ; call 0x2000004fd26
0x0000020000701a0e : mov dword ptr [rbp - 0x1c], ebx ; call qword ptr [r14]
0x0000020000424f31 : mov dword ptr [rbp - 0x20], esi ; mov dword ptr [rbp - 0x18], esi ; call 0x2000004fd29
0x0000020000071f2f : mov dword ptr [rbp - 0x21], eax ; call 0x200000ebd29
0x00000200001b1b87 : mov dword ptr [rbp - 0x2d], eax ; call r9
0x00000200005c26c6 : mov dword ptr [rbp - 0x30], edi ; call 0x20000270047
0x0000020000556aa4 : mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556abf
0x0000020000071114 : mov dword ptr [rbp - 0x40], 0x45c60001 ; ret 0x4806
0x000002000048da49 : mov dword ptr [rbp - 0x41], esi ; call 0x200000b5016
0x0000020000503055 : mov dword ptr [rbp - 0x48], ebx ; call 0x200000bf275
0x0000020000475ca4 : mov dword ptr [rbp - 0x48], ebx ; call r14
0x000002000055677e : mov dword ptr [rbp - 0x48], ecx ; jne 0x20000556749 ; jmp 0x200005567a5
0x0000020000483787 : mov dword ptr [rbp - 0x50], esp ; call 0x200000a3956
0x0000020000483786 : mov dword ptr [rbp - 0x50], r12d ; call 0x200000a3957
0x000002000048b8d8 : mov dword ptr [rbp - 0x51], edx ; call rax
0x00000200006d1a04 : mov dword ptr [rbp - 0x58], eax ; call r9
0x00000200006d180f : mov dword ptr [rbp - 0x60], eax ; call r9
0x000002000063129e : mov dword ptr [rbp - 0x61], ebx ; call r15
0x00000200004ab57d : mov dword ptr [rbp - 0x7c], eax ; ret
0x00000200001f10f9 : mov dword ptr [rbp - 0x80], eax ; jmp 0x2000010d336
0x00000200004837a8 : mov dword ptr [rbp - 0x80], esp ; call 0x200000a3956
0x0000020000039299 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000064d65 : mov dword ptr [rbx + 0x10], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e3b75 : mov dword ptr [rbx + 0x14], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000100f13 : mov dword ptr [rbx + 0x18], ecx ; ret
0x00000200004e3f65 : mov dword ptr [rbx + 0x1c], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fdff4 : mov dword ptr [rbx + 0x1c], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004e3f64 : mov dword ptr [rbx + 0x1c], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000143045 : mov dword ptr [rbx + 0x20], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000004eb33 : mov dword ptr [rbx + 0x230], edx ; ret
0x00000200003c7df5 : mov dword ptr [rbx + 0x28], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000507171 : mov dword ptr [rbx + 0x28], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000368041 : mov dword ptr [rbx + 0x30], ecx ; add rax, qword ptr [rbx] ; jmp 0x20000368013
0x00000200001b39ad : mov dword ptr [rbx + 0x34], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cfbdc : mov dword ptr [rbx + 0x38], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d8b8e : mov dword ptr [rbx + 0x70], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000039dff : mov dword ptr [rbx + 0xd0], edi ; jmp 0x20000039dd1
0x0000020000178977 : mov dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003f911 : mov dword ptr [rbx + 8], eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000046888f : mov dword ptr [rbx + 8], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e89d6 : mov dword ptr [rbx + rcx*4 - 6], 0xe9f80b44 ; ret
0x000002000012f81d : mov dword ptr [rbx + rdx*8], eax ; inc edx ; jmp 0x2000012f814
0x00000200004b1cf9 : mov dword ptr [rbx - 0x18], edi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200000917c7 : mov dword ptr [rbx - 0x1b1a7fb8], ebp ; ret 0x394e
0x000002000011c389 : mov dword ptr [rbx - 0x28], eax ; call r10
0x000002000041b307 : mov dword ptr [rbx - 0x38], eax ; call r10
0x00000200005c7ddb : mov dword ptr [rbx - 0x38], eax ; call rdi
0x00000200001c6229 : mov dword ptr [rbx - 0x38], ecx ; mov qword ptr [r11 - 0x58], r10 ; ret
0x00000200004b1cfd : mov dword ptr [rbx - 0x48], eax ; call rbx
0x00000200001c622d : mov dword ptr [rbx - 0x58], edx ; ret
0x00000200004791c1 : mov dword ptr [rbx - 0x75000000], ecx ; ret
0x000002000039d622 : mov dword ptr [rbx], 0x400000 ; jmp 0x2000039d5f3
0x00000200003c2eab : mov dword ptr [rbx], 0x834800f0 ; ret
0x00000200003c2f92 : mov dword ptr [rbx], 0x8348ffef ; ret
0x00000200000d8c05 : mov dword ptr [rbx], 0xcae80674 ; ret 0x4d
0x0000020000010e2e : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006f212f : mov dword ptr [rbx], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000198584 : mov dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001de7b : mov dword ptr [rbx], eax ; mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000126454 : mov dword ptr [rbx], eax ; mov rax, r11 ; add rsp, 0x28 ; ret
0x000002000013d843 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000105155 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005be26d : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003cb307 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000002000011f986 : mov dword ptr [rbx], ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b7542 : mov dword ptr [rbx], ebx ; call rdi
0x0000020000170a8b : mov dword ptr [rbx], ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000170af4 : mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b23e9 : mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004de5fa : mov dword ptr [rbx], ecx ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000142d13 : mov dword ptr [rbx], ecx ; mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x000002000017674e : mov dword ptr [rbx], ecx ; ret
0x000002000013fcc1 : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000038c8b : mov dword ptr [rbx], edx ; mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x00000200001c2d04 : mov dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x00000200004cee12 : mov dword ptr [rbx], edx ; ret
0x000002000008e956 : mov dword ptr [rbx], edx ; ret 0x267
0x00000200000d864d : mov dword ptr [rbx], esi ; jmp 0x200000d8617
0x00000200001b7541 : mov dword ptr [rbx], r11d ; call rdi
0x00000200006370f5 : mov dword ptr [rbx], r11d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000152c79 : mov dword ptr [rcx + 0x10], 0xffffffff ; ret
0x00000200004e525a : mov dword ptr [rcx + 0x10], eax ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200006bfe95 : mov dword ptr [rcx + 0x10], eax ; mov rax, r8 ; ret
0x00000200001c6e2b : mov dword ptr [rcx + 0x10], eax ; ret
0x0000020000013b0d : mov dword ptr [rcx + 0x10], edx ; jmp 0x2000001385c
0x00000200000e1a8a : mov dword ptr [rcx + 0x10], edx ; ret
0x00000200006c6456 : mov dword ptr [rcx + 0x128], eax ; xor eax, eax ; ret
0x0000020000542e68 : mov dword ptr [rcx + 0x14], eax ; ret
0x00000200000a737e : mov dword ptr [rcx + 0x168], eax ; ret
0x000002000005a4a9 : mov dword ptr [rcx + 0x17], edx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000053f876 : mov dword ptr [rcx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000362c2 : mov dword ptr [rcx + 0x18], eax ; mov byte ptr [rcx + 0x10], al ; mov dword ptr [rcx + 0x58], eax ; ret
0x00000200000dc887 : mov dword ptr [rcx + 0x18], eax ; mov eax, 2 ; ret 0
0x00000200005a328b : mov dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x74] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000006acfb : mov dword ptr [rcx + 0x18], eax ; mov qword ptr [rcx + 0x38], r8 ; ret
0x00000200006bfe04 : mov dword ptr [rcx + 0x18], eax ; mov rax, rdx ; ret
0x00000200000ca653 : mov dword ptr [rcx + 0x18], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000064ec6 : mov dword ptr [rcx + 0x18], eax ; ret
0x000002000019beff : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx + 0x1c], r8d ; ret
0x0000020000064ec5 : mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000019befe : mov dword ptr [rcx + 0x18], r9d ; mov dword ptr [rcx + 0x1c], r8d ; ret
0x000002000019bf03 : mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000019bf02 : mov dword ptr [rcx + 0x1c], r8d ; ret
0x000002000006ad1d : mov dword ptr [rcx + 0x20], eax ; ret
0x00000200000e4390 : mov dword ptr [rcx + 0x20], ebx ; lea rax, qword ptr [r9 + 0x10] ; ret
0x0000020000640c75 : mov dword ptr [rcx + 0x20], ecx ; ret
0x00000200005837b2 : mov dword ptr [rcx + 0x20], edx ; ret
0x00000200004ee237 : mov dword ptr [rcx + 0x20], edx ; xor eax, eax ; ret
0x00000200000e438f : mov dword ptr [rcx + 0x20], r11d ; lea rax, qword ptr [r9 + 0x10] ; ret
0x000002000013c3ae : mov dword ptr [rcx + 0x28], eax ; mov dword ptr [rcx + 0x34], eax ; mov dword ptr [rcx + 0x30], edx ; ret
0x0000020000054633 : mov dword ptr [rcx + 0x2c], eax ; ret
0x0000020000054629 : mov dword ptr [rcx + 0x2c], edx ; ret
0x000002000013c3b4 : mov dword ptr [rcx + 0x30], edx ; ret
0x000002000013c3b1 : mov dword ptr [rcx + 0x34], eax ; mov dword ptr [rcx + 0x30], edx ; ret
0x000002000057d657 : mov dword ptr [rcx + 0x38], 4 ; ret
0x00000200003e3fa3 : mov dword ptr [rcx + 0x38], eax ; jmp 0x200003e3ecb
0x0000020000061c74 : mov dword ptr [rcx + 0x38], eax ; mov byte ptr [rcx + 0x52], dl ; ret
0x000002000006ad19 : mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x20], r8 ; ret
0x00000200005438f4 : mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x000002000019c90e : mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x000002000006acff : mov dword ptr [rcx + 0x38], eax ; ret
0x00000200000dfafb : mov dword ptr [rcx + 0x38], ecx ; mov qword ptr [rcx + 0x40], rax ; ret
0x000002000001f5b0 : mov dword ptr [rcx + 0x3b], 0x440f41ca ; ret 0x6348
0x000002000041b435 : mov dword ptr [rcx + 0x3c8], edx ; ret
0x000002000016ab91 : mov dword ptr [rcx + 0x3e8], edx ; ret
0x00000200004e44b3 : mov dword ptr [rcx + 0x400], eax ; ret
0x00000200003bc484 : mov dword ptr [rcx + 0x40], eax ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200000dfaff : mov dword ptr [rcx + 0x40], eax ; ret
0x0000020000127279 : mov dword ptr [rcx + 0x40], ecx ; ret
0x000002000016a9a9 : mov dword ptr [rcx + 0x40], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005438f8 : mov dword ptr [rcx + 0x40], edx ; ret
0x0000020000585901 : mov dword ptr [rcx + 0x448], edx ; xor eax, eax ; ret
0x000002000019c912 : mov dword ptr [rcx + 0x48], eax ; ret
0x0000020000588065 : mov dword ptr [rcx + 0x48], ecx ; ret
0x00000200000dc907 : mov dword ptr [rcx + 0x48], edx ; mov eax, 3 ; ret
0x00000200001b3731 : mov dword ptr [rcx + 0x48], edx ; ret
0x000002000001801b : mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000117365 : mov dword ptr [rcx + 0x50], eax ; ret
0x00000200003bc002 : mov dword ptr [rcx + 0x50], edx ; test edx, edx ; je 0x200003bc011 ; ret
0x00000200001486e4 : mov dword ptr [rcx + 0x5348], eax ; ret
0x00000200006c59b1 : mov dword ptr [rcx + 0x5370], eax ; ret
0x0000020000118cea : mov dword ptr [rcx + 0x5450], eax ; ret
0x0000020000020bf4 : mov dword ptr [rcx + 0x584], edx ; ret
0x0000020000056e32 : mov dword ptr [rcx + 0x58], eax ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200000362c8 : mov dword ptr [rcx + 0x58], eax ; ret
0x0000020000056e36 : mov dword ptr [rcx + 0x60], eax ; ret
0x00000200001273dc : mov dword ptr [rcx + 0x68], eax ; ret
0x00000200000ee230 : mov dword ptr [rcx + 0x70], edx ; jmp 0x200000ee1fb
0x0000020000107d25 : mov dword ptr [rcx + 0x70], edx ; ret
0x00000200003cb54f : mov dword ptr [rcx + 0x70], edx ; xor eax, eax ; ret
0x00000200005fb3fa : mov dword ptr [rcx + 0x78], eax ; jmp 0x2000040cdae
0x00000200003daf3e : mov dword ptr [rcx + 0x7c], eax ; ret
0x00000200001b5fcd : mov dword ptr [rcx + 0x88], edx ; xor eax, eax ; ret
0x000002000017faa0 : mov dword ptr [rcx + 0xa], ecx ; ret
0x00000200006c6ab1 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000002000014a70f : mov dword ptr [rcx + 0xc], eax ; ret
0x00000200000679b8 : mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000013b8d6 : mov dword ptr [rcx + 0xc], ecx ; mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x000002000013b0b9 : mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x0000020000634b13 : mov dword ptr [rcx + 0xd6], eax ; ret
0x000002000064e063 : mov dword ptr [rcx + 0xe0], eax ; ret
0x0000020000025a5c : mov dword ptr [rcx + 2], eax ; mov eax, r10d ; ret
0x00000200000057a4 : mov dword ptr [rcx + 2], eax ; ret
0x000002000005a934 : mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x0000020000391ba6 : mov dword ptr [rcx + 2], ecx ; xor eax, eax ; ret
0x00000200003fd9e7 : mov dword ptr [rcx + 2], edx ; mov byte ptr [rcx + 1], al ; mov dword ptr [rcx + 4], eax ; ret
0x00000200004b7b97 : mov dword ptr [rcx + 2], edx ; ret
0x000002000039c038 : mov dword ptr [rcx + 4], 0x10 ; ret
0x000002000014a70c : mov dword ptr [rcx + 4], eax ; mov dword ptr [rcx + 0xc], eax ; ret
0x00000200003fd9ed : mov dword ptr [rcx + 4], eax ; ret
0x0000020000448fc6 : mov dword ptr [rcx + 4], edi ; call 0x20000072e46
0x0000020000475d2f : mov dword ptr [rcx + 4], edx ; mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x000002000039c02c : mov dword ptr [rcx + 4], edx ; ret
0x00000200003b015b : mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000001bb5d : mov dword ptr [rcx + 8], 0x48 ; ret
0x000002000002db7f : mov dword ptr [rcx + 8], eax ; add rsp, 0x28 ; ret
0x0000020000410809 : mov dword ptr [rcx + 8], eax ; mov eax, 0xc0000001 ; ret
0x00000200001c6e27 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000014a927 : mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x000002000043b464 : mov dword ptr [rcx + 8], eax ; mov word ptr [r9], ax ; mov al, 1 ; ret
0x0000020000028a89 : mov dword ptr [rcx + 8], eax ; ret
0x000002000013b8da : mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200000be5d7 : mov dword ptr [rcx + 8], ecx ; add rsp, 8 ; ret
0x00000200004f3389 : mov dword ptr [rcx + 8], ecx ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000056edf0 : mov dword ptr [rcx + 8], ecx ; ret
0x00000200004b5bd2 : mov dword ptr [rcx + 8], edx ; add rsp, 0x28 ; ret
0x0000020000196da8 : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 1 ; ret
0x0000020000196dcc : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 2 ; ret
0x0000020000025834 : mov dword ptr [rcx + 8], edx ; ret
0x000002000015db55 : mov dword ptr [rcx + 8], edx ; test edx, edx ; jne 0x2000015db51 ; ret
0x000002000003bb77 : mov dword ptr [rcx + 8], edx ; xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000013b8d9 : mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x0000020000392de8 : mov dword ptr [rcx + rax*4 + 0xbbc], edx ; ret
0x0000020000643c44 : mov dword ptr [rcx + rcx], eax ; ret
0x0000020000028257 : mov dword ptr [rcx + rdx*8 + 0x10], edx ; ret
0x0000020000063c93 : mov dword ptr [rcx + rdx*8 + 0x74], eax ; dec dword ptr [rcx + rdx*4 + 0x50] ; ret
0x0000020000012a44 : mov dword ptr [rcx + rdx*8 + 0x74], edx ; inc dword ptr [r9 + rdx*4 + 0x50] ; ret
0x0000020000063c92 : mov dword ptr [rcx + rdx*8 + 0x74], r8d ; dec dword ptr [rcx + rdx*4 + 0x50] ; ret
0x00000200000c784e : mov dword ptr [rcx - 0x10], eax ; mov qword ptr [rcx - 8], rax ; jne 0x200000c7839 ; ret 0
0x000002000000beba : mov dword ptr [rcx - 0x46], eax ; jo 0x2000000bed9 ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x00000200004118f9 : mov dword ptr [rcx - 0x75], 0xce8b49d4 ; call 0x200004edb15
0x0000020000398e11 : mov dword ptr [rcx - 0x77], 0x8b440c47 ; ret 0x8b49
0x000002000019ba69 : mov dword ptr [rcx - 0x7d], 0x8348e8c7 ; ret
0x0000020000061d0b : mov dword ptr [rcx - 0x7d], 0xf4537f8 ; ret 0xff83
0x00000200000c7852 : mov dword ptr [rcx - 8], eax ; jne 0x200000c7835 ; ret 0
0x0000020000110fe9 : mov dword ptr [rcx], 0 ; ret
0x0000020000139b7c : mov dword ptr [rcx], 0x44c70874 ; ret 0xc
0x0000020000543926 : mov dword ptr [rcx], 0x4c706345 ; xor eax, eax ; ret
0x0000020000196dab : mov dword ptr [rcx], 1 ; ret
0x0000020000136342 : mov dword ptr [rcx], 2 ; ret
0x000002000000749e : mov dword ptr [rcx], 3 ; ret
0x00000200004942a5 : mov dword ptr [rcx], 5 ; call 0x200000bf039
0x000002000055e82f : mov dword ptr [rcx], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e034f : mov dword ptr [rcx], eax ; add al, al ; ret
0x00000200006528a5 : mov dword ptr [rcx], eax ; add bh, bh ; ret 0x1589
0x000002000001fd31 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000597159 : mov dword ptr [rcx], eax ; add rsp, 0x28 ; ret
0x000002000000579e : mov dword ptr [rcx], eax ; inc ax ; mov word ptr [rcx + 2], ax ; ret
0x000002000040c10d : mov dword ptr [rcx], eax ; jmp 0x2000040c11c
0x000002000043b469 : mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x000002000039287f : mov dword ptr [rcx], eax ; mov al, r9b ; add rsp, 0x28 ; ret
0x00000200000ca675 : mov dword ptr [rcx], eax ; mov dword ptr [r9 + 0x18], eax ; ret
0x0000020000161d9f : mov dword ptr [rcx], eax ; mov eax, 0xc00000bb ; ret
0x000002000040f83e : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x000002000041880b : mov dword ptr [rcx], eax ; mov eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000019c55b : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x00000200004e4503 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000025831 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000016997b : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x16fd54], rcx ; ret
0x000002000002a165 : mov dword ptr [rcx], eax ; ret
0x000002000052e57e : mov dword ptr [rcx], eax ; test rdx, rdx ; je 0x2000052e590 ; mov dword ptr [rdx], eax ; ret
0x0000020000005778 : mov dword ptr [rcx], eax ; test rdx, rdx ; jne 0x20000005789 ; ret
0x00000200004b88b9 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dde2b : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000003f09c : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000010a9ab : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200000be682 : mov dword ptr [rcx], ebp ; add byte ptr [rdx + rcx - 0x75], dh ; or byte ptr [rbx], dil ; ret 0xf41
0x0000020000038dde : mov dword ptr [rcx], ebx ; mov eax, r10d ; ret
0x0000020000020eae : mov dword ptr [rcx], ebx ; ret
0x0000020000020e63 : mov dword ptr [rcx], ecx ; add rsp, 0x28 ; ret
0x000002000064d8a0 : mov dword ptr [rcx], ecx ; mov eax, 1 ; ret
0x0000020000063646 : mov dword ptr [rcx], ecx ; mov eax, r10d ; ret
0x00000200004ded83 : mov dword ptr [rcx], ecx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200004e5257 : mov dword ptr [rcx], ecx ; mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000144163 : mov dword ptr [rcx], ecx ; mov rax, r10 ; ret
0x0000020000175050 : mov dword ptr [rcx], ecx ; ret
0x0000020000384b91 : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000020000119a41 : mov dword ptr [rcx], edx ; add rsp, 0x28 ; ret
0x0000020000157d10 : mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200000bd697 : mov dword ptr [rcx], edx ; mov eax, r8d ; ret
0x00000200000a97d7 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rax ; ret
0x00000200006429bc : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; jmp 0x2000064298e
0x0000020000642a9c : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; jmp 0x20000642a6e
0x000002000042244d : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200001548b1 : mov dword ptr [rcx], edx ; mov rax, r9 ; ret
0x00000200005ba1d1 : mov dword ptr [rcx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000475d33 : mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x00000200001c433b : mov dword ptr [rcx], edx ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x00000200000dbb0f : mov dword ptr [rcx], edx ; ret
0x0000020000162294 : mov dword ptr [rcx], edx ; sbb eax, eax ; and eax, 0xc0000023 ; ret
0x000002000015f731 : mov dword ptr [rcx], edx ; xor al, al ; ret
0x0000020000060c41 : mov dword ptr [rcx], edx ; xor eax, eax ; pop rdi ; ret
0x0000020000119a40 : mov dword ptr [rcx], r10d ; add rsp, 0x28 ; ret
0x00000200001548b0 : mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x00000200001724b4 : mov dword ptr [rcx], r10d ; ret
0x0000020000038ddd : mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x0000020000020ead : mov dword ptr [rcx], r11d ; ret
0x00000200000dbac0 : mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x0000020000005777 : mov dword ptr [rcx], r8d ; test rdx, rdx ; jne 0x2000000578a ; ret
0x00000200004cc926 : mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x0000020000020e62 : mov dword ptr [rcx], r9d ; add rsp, 0x28 ; ret
0x00000200005906a5 : mov dword ptr [rdi + 0x10], eax ; jmp 0x2000059019d
0x0000020000481e24 : mov dword ptr [rdi + 0x14], ebp ; call 0x200000a3956
0x0000020000481e23 : mov dword ptr [rdi + 0x14], r13d ; call 0x200000a3957
0x00000200000c7a82 : mov dword ptr [rdi + 0x18], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b8e33 : mov dword ptr [rdi + 0x20], esi ; jmp 0x200003b8e13
0x00000200005ebf17 : mov dword ptr [rdi + 0x30], eax ; jmp 0x20000448170
0x00000200005ebf14 : mov dword ptr [rdi + 0x38], esp ; mov dword ptr [rdi + 0x30], eax ; jmp 0x20000448173
0x0000020000527fdd : mov dword ptr [rdi + 0x40], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000495777 : mov dword ptr [rdi + 0x40], ebx ; call 0x200000b9b06
0x00000200001ff1bf : mov dword ptr [rdi + 0x68], eax ; jmp 0x200000bb4b0
0x00000200001ced71 : mov dword ptr [rdi + 0x68], esp ; call rbx
0x0000020000123ab5 : mov dword ptr [rdi + 0xa0], ebx ; call 0x200000cfd34
0x0000020000482fa0 : mov dword ptr [rdi + 0xe8], ebx ; call 0x200000a4e89
0x000002000006c274 : mov dword ptr [rdi + 8], edx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000447350 : mov dword ptr [rdi + 8], esp ; mov rcx, r15 ; call 0x20000072e49
0x00000200000f1c99 : mov dword ptr [rdi + rcx + 0x22], 0xebc033c0 ; ret
0x00000200006cbebe : mov dword ptr [rdi + rcx + 4], edi ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000038cd4a : mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014ec1d : mov dword ptr [rdi], eax ; call 0x2000014ae68
0x000002000006c45e : mov dword ptr [rdi], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019a989 : mov dword ptr [rdi], ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000529fdd : mov dword ptr [rdi], ecx ; jmp 0x20000529fa7
0x000002000042047d : mov dword ptr [rdi], edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000016a733 : mov dword ptr [rdi], edi ; jmp 0x2000016a8f5
0x0000020000063c83 : mov dword ptr [rdi], edx ; add bl, dh ; ret
0x00000200006ec647 : mov dword ptr [rdi], edx ; lea rcx, qword ptr [rbx + 8] ; call 0x20000468878
0x0000020000386761 : mov dword ptr [rdi], esi ; jmp 0x2000038672a
0x00000200003e1ded : mov dword ptr [rdi], esp ; xor al, al ; jmp 0x200003e1dcb
0x00000200001b98c8 : mov dword ptr [rdx + 0x10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001294ce : mov dword ptr [rdx + 0x10], eax ; ret
0x000002000003bb7d : mov dword ptr [rdx + 0x10], ecx ; ret
0x000002000065a75c : mov dword ptr [rdx + 0x120], eax ; xor eax, eax ; ret
0x000002000014686f : mov dword ptr [rdx + 0x124], eax ; ret
0x0000020000147e20 : mov dword ptr [rdx + 0x14], ecx ; xor eax, eax ; ret
0x0000020000153b50 : mov dword ptr [rdx + 0x168], eax ; sti ; mov eax, ecx ; ret
0x0000020000062ecb : mov dword ptr [rdx + 0x18], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004d383f : mov dword ptr [rdx + 0x18], eax ; ret
0x00000200000a6d69 : mov dword ptr [rdx + 0x18], ecx ; add rsp, 0x28 ; ret
0x0000020000028f5e : mov dword ptr [rdx + 0x18], edx ; add rsp, 0x38 ; ret
0x0000020000542e48 : mov dword ptr [rdx + 0x207c], eax ; ret
0x00000200004d3821 : mov dword ptr [rdx + 0x20], eax ; ret
0x00000200004df648 : mov dword ptr [rdx + 0x20], ecx ; test dl, dl ; jne 0x200004df659 ; ret
0x00000200004d37f3 : mov dword ptr [rdx + 0x28], eax ; ret
0x00000200005367b4 : mov dword ptr [rdx + 0x28], ecx ; mov qword ptr [rdx + 0x38], rax ; ret
0x00000200004e72bc : mov dword ptr [rdx + 0x28], ecx ; ret
0x0000020000171877 : mov dword ptr [rdx + 0x29f4], ecx ; jmp 0x200001718dc
0x00000200004d3812 : mov dword ptr [rdx + 0x30], eax ; ret
0x00000200000dcdf8 : mov dword ptr [rdx + 0x30], ecx ; ret
0x000002000015b27e : mov dword ptr [rdx + 0x30], ecx ; xor eax, eax ; mov dword ptr [r8], r9d ; ret
0x000002000015b27d : mov dword ptr [rdx + 0x30], r9d ; xor eax, eax ; mov dword ptr [r8], r9d ; ret
0x00000200005367b8 : mov dword ptr [rdx + 0x38], eax ; ret
0x00000200001b335d : mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x00000200004d384e : mov dword ptr [rdx + 0x40], eax ; ret
0x00000200004df67e : mov dword ptr [rdx + 0x40], ecx ; ret
0x00000200005367e5 : mov dword ptr [rdx + 0x48], eax ; ret
0x000002000006bfc1 : mov dword ptr [rdx + 0x4b0], ecx ; ret
0x00000200004d3803 : mov dword ptr [rdx + 0x50], eax ; ret
0x0000020000178a1a : mov dword ptr [rdx + 0x5a], esi ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000365ec6 : mov dword ptr [rdx + 0x80], ecx ; pop r14 ; ret
0x0000020000507d92 : mov dword ptr [rdx + 0xa], eax ; and word ptr [rdx + 8], cx ; ret
0x00000200006c6c35 : mov dword ptr [rdx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000be61e : mov dword ptr [rdx + 0xc], ecx ; ret
0x0000020000539d8f : mov dword ptr [rdx + 2], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012efe0 : mov dword ptr [rdx + 2], eax ; ret
0x0000020000389d70 : mov dword ptr [rdx + 2], ecx ; mov qword ptr [rdx + 8], rax ; ret
0x000002000064f1a2 : mov dword ptr [rdx + 2], r8d ; ret
0x00000200005d53a8 : mov dword ptr [rdx + 4], eax ; call 0x200004815d1
0x00000200001eea1d : mov dword ptr [rdx + 4], ecx ; ret
0x00000200004968cf : mov dword ptr [rdx + 6], eax ; jmp 0x200004967d4
0x00000200004b93d7 : mov dword ptr [rdx + 8], eax ; and qword ptr [rcx + 0x30], 0 ; ret
0x0000020000494a45 : mov dword ptr [rdx + 8], eax ; call 0x200000b9b06
0x0000020000028253 : mov dword ptr [rdx + 8], eax ; mov qword ptr [rcx + rdx*8 + 0x10], r10 ; ret
0x000002000043b454 : mov dword ptr [rdx + 8], eax ; mov word ptr [rdx], ax ; mov al, 1 ; ret
0x000002000004f42d : mov dword ptr [rdx + 8], eax ; ret
0x00000200001c6d56 : mov dword ptr [rdx + 8], ecx ; add rsp, 0x28 ; ret
0x00000200003604bc : mov dword ptr [rdx + 8], ecx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200001b94c2 : mov dword ptr [rdx + 8], ecx ; jmp 0x200001b948e
0x00000200006429bf : mov dword ptr [rdx + 8], ecx ; jmp 0x2000064298b
0x0000020000642a9f : mov dword ptr [rdx + 8], ecx ; jmp 0x20000642a6b
0x00000200000dbb0b : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rcx], rdx ; ret
0x0000020000422450 : mov dword ptr [rdx + 8], ecx ; ret
0x00000200000ee219 : mov dword ptr [rdx + 8], edx ; mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x0000020000389d5c : mov dword ptr [rdx + 8], edx ; mov word ptr [rdx + 2], ax ; ret
0x00000200005695bb : mov dword ptr [rdx + rcx + 0x356918], eax ; mov al, 1 ; ret
0x000002000013aecb : mov dword ptr [rdx + rcx*4 + 0x359790], eax ; ret
0x000002000015e56b : mov dword ptr [rdx + rcx*4], eax ; inc dword ptr [r10 + 0xc] ; ret
0x000002000015e5a2 : mov dword ptr [rdx + rcx*4], eax ; inc dword ptr [r10 + 8] ; ret
0x00000200006405b1 : mov dword ptr [rdx + rcx*4], eax ; mov eax, r8d ; ret
0x00000200006481ef : mov dword ptr [rdx + rcx*8 + 0x18], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000038873f : mov dword ptr [rdx + rcx*8 + 0x70], ecx ; inc dword ptr [rdx + 0x6c] ; ret
0x00000200001c65ce : mov dword ptr [rdx - 0x38], ecx ; mov qword ptr [r10 - 0x58], r11 ; ret
0x00000200001c5a88 : mov dword ptr [rdx - 0x58], eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200001c5e1e : mov dword ptr [rdx - 0x58], eax ; ret
0x00000200001c65d2 : mov dword ptr [rdx - 0x58], ebx ; ret
0x0000020000058234 : mov dword ptr [rdx - 0x75000000], ecx ; ret 0xe8c1
0x00000200005eb5ab : mov dword ptr [rdx - 0x7cb6002a], edi ; ret
0x00000200001503f2 : mov dword ptr [rdx], 0 ; ret
0x00000200003fee3e : mov dword ptr [rdx], 0x1020000 ; jmp 0x200003fee10
0x000002000064ffb0 : mov dword ptr [rdx], 0x3d830975 ; jge 0x2000065003b ; ret 0x3ff
0x00000200000e89ee : mov dword ptr [rdx], 0x8b480000 ; ret
0x00000200003ad7dd : mov dword ptr [rdx], 0xa ; mov eax, r8d ; ret
0x0000020000139b8a : mov dword ptr [rdx], 0xba0f0674 ; insb byte ptr [rdi], dx ; ret 0x90c
0x00000200001535fd : mov dword ptr [rdx], 0xffffffff ; ret
0x0000020000065dca : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000da80e : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200000da79d
0x000002000036e0b6 : mov dword ptr [rdx], eax ; add rsp, 0x28 ; ret
0x00000200005b74c3 : mov dword ptr [rdx], eax ; jmp 0x200005b74d1
0x00000200004d7128 : mov dword ptr [rdx], eax ; lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x00000200003fd18d : mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x000002000002dc73 : mov dword ptr [rdx], eax ; mov eax, 0xc0000095 ; ret
0x000002000015c0e2 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000002000006febd : mov dword ptr [rdx], eax ; mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000004f427 : mov dword ptr [rdx], eax ; mov eax, dword ptr [r8 + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x000002000014bd6e : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 0x28c] ; ret
0x00000200005997a7 : mov dword ptr [rdx], eax ; mov eax, r10d ; ret
0x00000200005529a4 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x00000200001191b2 : mov dword ptr [rdx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000064f19f : mov dword ptr [rdx], eax ; mov word ptr [rdx + 2], r8w ; ret
0x000002000001dc63 : mov dword ptr [rdx], eax ; ret
0x00000200004f8251 : mov dword ptr [rdx], eax ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000001a98b : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000063fc5d : mov dword ptr [rdx], ebx ; mov rax, r9 ; ret
0x000002000006c1bb : mov dword ptr [rdx], ebx ; mov rbx, qword ptr [rsp + 8] ; mov rax, rdx ; ret
0x000002000019c100 : mov dword ptr [rdx], ecx ; add qword ptr [r8], 2 ; ret
0x0000020000038c8e : mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x000002000001eef4 : mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x0000020000152a28 : mov dword ptr [rdx], ecx ; add rsp, 0x48 ; ret
0x000002000041b319 : mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x000002000043198b : mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x000002000058dece : mov dword ptr [rdx], ecx ; mov al, 1 ; ret
0x0000020000599722 : mov dword ptr [rdx], ecx ; mov eax, r8d ; ret
0x00000200005acd71 : mov dword ptr [rdx], ecx ; mov rax, rdx ; add rsp, 0x28 ; ret
0x00000200006e78d6 : mov dword ptr [rdx], ecx ; mov rcx, r10 ; jmp rcx
0x000002000002c81e : mov dword ptr [rdx], ecx ; ret
0x000002000016beb0 : mov dword ptr [rdx], ecx ; xor al, al ; ret
0x000002000002dc6e : mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200000ee21d : mov dword ptr [rdx], edx ; mov rax, r8 ; ret
0x00000200001b3c2a : mov dword ptr [rdx], edx ; ret
0x000002000064f19e : mov dword ptr [rdx], r8d ; mov word ptr [rdx + 2], r8w ; ret
0x00000200003dd3ac : mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000016beaf : mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001ca7ae : mov dword ptr [rip + 0x11d3d4], eax ; jmp 0x200000f6a68
0x0000020000153bb1 : mov dword ptr [rip + 0x12d6d1], ecx ; ret
0x0000020000145420 : mov dword ptr [rip + 0x12dbea], ecx ; ret
0x00000200001c2c38 : mov dword ptr [rip + 0x14408a], eax ; ret
0x000002000013c56d : mov dword ptr [rip + 0x144d5d], eax ; ret
0x000002000013b40e : mov dword ptr [rip + 0x149be0], ecx ; ret
0x0000020000141d03 : mov dword ptr [rip + 0x14c077], eax ; xor eax, eax ; ret
0x0000020000179309 : mov dword ptr [rip + 0x153691], eax ; ret
0x000002000013c342 : mov dword ptr [rip + 0x154610], eax ; ret
0x00000200001788fd : mov dword ptr [rip + 0x15a3b9], eax ; mov al, 1 ; ret
0x00000200001788fc : mov dword ptr [rip + 0x15a3b9], r8d ; mov al, 1 ; ret
0x000002000016997e : mov dword ptr [rip + 0x16fd54], ecx ; ret
0x00000200001691a0 : mov dword ptr [rip + 0x170a5e], eax ; ret
0x00000200001688ba : mov dword ptr [rip + 0x17144c], eax ; ret
0x00000200006533fc : mov dword ptr [rip + 0x17d26], eax ; ret
0x00000200004f9058 : mov dword ptr [rip + 0x18a56a], eax ; ret
0x000002000064fab6 : mov dword ptr [rip + 0x1b5f4], eax ; ret
0x00000200000aecfe : mov dword ptr [rip + 0x1c8418], eax ; je 0x200000aed0f ; ret
0x0000020000173e1c : mov dword ptr [rip + 0x1e39a6], ecx ; ret
0x000002000016209a : mov dword ptr [rip + 0x1f4fd0], eax ; ret
0x00000200000b1b01 : mov dword ptr [rip + 0x219e39], eax ; ret
0x000002000064305b : mov dword ptr [rip + 0x2804b], ecx ; ret
0x00000200000169ee : mov dword ptr [rip + 0x2b6024], ecx ; ret
0x00000200000be657 : mov dword ptr [rip + 0x3750000], ebx ; xor al, al ; ret
0x000002000000ae62 : mov dword ptr [rip + 0x5058b00], ecx ; ret 0x34
0x00000200005d8493 : mov dword ptr [rip + 0xab127], ecx ; ret
0x00000200003b20ad : mov dword ptr [rip - 0x11921b], ecx ; ret
0x00000200004b05fa : mov dword ptr [rip - 0x1d86d8], ecx ; ret
0x000002000046853d : mov dword ptr [rip - 0x1f4e7b], eax ; jmp 0x200004684db
0x00000200004e4461 : mov dword ptr [rip - 0x1fdd07], eax ; ja 0x200004e4474 ; ret
0x00000200004ae25b : mov dword ptr [rip - 0x224715], ecx ; or byte ptr [r10], dl ; ret
0x00000200004ee7ef : mov dword ptr [rip - 0x266121], eax ; ret
0x00000200004f5d2b : mov dword ptr [rip - 0x26be29], edx ; call 0x2000011f9a9
0x0000020000569a45 : mov dword ptr [rip - 0x273a33], edx ; xor eax, eax ; ret
0x000002000056ed89 : mov dword ptr [rip - 0x2a2937], ecx ; jmp 0x2000056ed5b
0x000002000056eed3 : mov dword ptr [rip - 0x2a2a81], ecx ; jmp 0x2000056eea5
0x0000020000572d02 : mov dword ptr [rip - 0x2a74c8], eax ; ret
0x0000020000572d45 : mov dword ptr [rip - 0x2a750b], ecx ; ret
0x0000020000572d44 : mov dword ptr [rip - 0x2a750b], r9d ; ret
0x0000020000583b1c : mov dword ptr [rip - 0x30cb4a], edx ; ret
0x0000020000583b23 : mov dword ptr [rip - 0x30cb55], edx ; ret
0x00000200006c05b9 : mov dword ptr [rip - 0x368d7f], eax ; ret
0x00000200006c349b : mov dword ptr [rip - 0x36bea9], eax ; ret
0x0000020000606e60 : mov dword ptr [rip - 0x36df9e], ecx ; ret
0x000002000064dab0 : mov dword ptr [rip - 0x381c5a], ecx ; ret
0x00000200006525f9 : mov dword ptr [rip - 0x3bb757], ecx ; ret
0x00000200006c58e2 : mov dword ptr [rip - 0x444b98], ecx ; ret
0x00000200006c58f8 : mov dword ptr [rip - 0x444bae], eax ; ret
0x000002000000ade3 : mov dword ptr [rip - 0x7bfa7500], ecx ; ret 0x34
0x00000200000c2298 : mov dword ptr [rsi + 0x18], ecx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000444267 : mov dword ptr [rsi + 0x1e], 0xcfe80001 ; jmp 0x2000044423a
0x00000200004fdc27 : mov dword ptr [rsi + 0x84], eax ; call 0x2000012ad51
0x000002000064ae95 : mov dword ptr [rsi + 0xa8], ebp ; call 0x200000a7118
0x000002000048bc5f : mov dword ptr [rsi + 2], esp ; call 0x200000b5066
0x000002000048bc5e : mov dword ptr [rsi + 2], r12d ; call 0x200000b5067
0x000002000015afb6 : mov dword ptr [rsi + 4], ebp ; call 0x200000771c5
0x00000200003f9da2 : mov dword ptr [rsi + rcx*2 + 0x18], eax ; inc edx ; jmp 0x200003f9d95
0x00000200005a7130 : mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200005a7128
0x00000200001537e2 : mov dword ptr [rsi], 0x9fff000 ; ret
0x0000020000576dc1 : mov dword ptr [rsi], eax ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000423132 : mov dword ptr [rsi], eax ; jmp 0x200004230fc
0x00000200000b6753 : mov dword ptr [rsi], ebx ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x0000020000101aa5 : mov dword ptr [rsi], ecx ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012391b : mov dword ptr [rsi], ecx ; mov rcx, r8 ; call 0x2000003fbff
0x00000200001b783b : mov dword ptr [rsp + 0x10], eax ; mov eax, 1 ; ret
0x00000200004aa77b : mov dword ptr [rsp + 0x20], 0xc8 ; call r10
0x00000200003b6b9b : mov dword ptr [rsp + 0x20], 1 ; call r10
0x00000200004a9151 : mov dword ptr [rsp + 0x20], 1 ; call r12
0x000002000039af19 : mov dword ptr [rsp + 0x20], 1 ; call r14
0x00000200004ecc91 : mov dword ptr [rsp + 0x20], 1 ; call r15
0x000002000039db20 : mov dword ptr [rsp + 0x20], 1 ; call rdi
0x000002000048823a : mov dword ptr [rsp + 0x20], 1 ; call rsi
0x00000200003aaa8d : mov dword ptr [rsp + 0x20], 2 ; call r12
0x00000200004860ed : mov dword ptr [rsp + 0x20], 2 ; call r14
0x0000020000630b81 : mov dword ptr [rsp + 0x20], 2 ; call r15
0x000002000039dbca : mov dword ptr [rsp + 0x20], 2 ; call rdi
0x000002000048829e : mov dword ptr [rsp + 0x20], 2 ; call rsi
0x00000200004d6940 : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x38 ; ret
0x0000020000425220 : mov dword ptr [rsp + 0x20], eax ; call 0x2000004fd27
0x000002000018003b : mov dword ptr [rsp + 0x20], eax ; call 0x2000007c346
0x0000020000490f51 : mov dword ptr [rsp + 0x20], eax ; call 0x2000007d1c6
0x0000020000545dbb : mov dword ptr [rsp + 0x20], eax ; call 0x200000a2046
0x0000020000480b5f : mov dword ptr [rsp + 0x20], eax ; call 0x200000a66a7
0x00000200000e7c2a : mov dword ptr [rsp + 0x20], eax ; call 0x200000f3ed6
0x00000200005259dd : mov dword ptr [rsp + 0x20], eax ; call 0x20000150f0b
0x0000020000542f8b : mov dword ptr [rsp + 0x20], eax ; call 0x2000016d2af
0x00000200005c99ea : mov dword ptr [rsp + 0x20], eax ; call 0x200003b5cbe
0x0000020000592cf5 : mov dword ptr [rsp + 0x20], eax ; call qword ptr [r11]
0x0000020000653ebe : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rip + 0x3c2a0]
0x0000020000037c0a : mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200000dd8e8 : mov dword ptr [rsp + 0x20], eax ; call r11
0x000002000047d71f : mov dword ptr [rsp + 0x20], eax ; call r12
0x00000200003c9968 : mov dword ptr [rsp + 0x20], eax ; call r15
0x00000200003b5adc : mov dword ptr [rsp + 0x20], eax ; call rbx
0x0000020000443be7 : mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000385bd1 : mov dword ptr [rsp + 0x20], eax ; call rsi
0x00000200003f5bbb : mov dword ptr [rsp + 0x20], eax ; mov rcx, r13 ; call 0x20000441dd9
0x00000200003b253c : mov dword ptr [rsp + 0x20], ebp ; and edx, 1 ; call rdi
0x000002000046d2e8 : mov dword ptr [rsp + 0x20], ebp ; call r10
0x00000200003aac75 : mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200005c4e8d : mov dword ptr [rsp + 0x20], ebp ; call rdi
0x000002000059a695 : mov dword ptr [rsp + 0x20], ebx ; call 0x200003c68f2
0x0000020000472050 : mov dword ptr [rsp + 0x20], ebx ; call 0x2000046e316
0x00000200003a8b5d : mov dword ptr [rsp + 0x20], ebx ; jmp 0x200003a8bae
0x000002000070efa7 : mov dword ptr [rsp + 0x20], ebx ; mov ecx, r15d ; call 0x200000fb211
0x0000020000487591 : mov dword ptr [rsp + 0x20], ecx ; call rdi
0x00000200005c5415 : mov dword ptr [rsp + 0x20], ecx ; call rsi
0x00000200004a6b64 : mov dword ptr [rsp + 0x20], ecx ; mov ecx, 0x800c ; call rax
0x000002000064700a : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbp ; call rax
0x000002000064736a : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000064af01 : mov dword ptr [rsp + 0x20], edi ; call 0x200000a7116
0x0000020000104120 : mov dword ptr [rsp + 0x20], edi ; call 0x200003e0406
0x00000200006171d1 : mov dword ptr [rsp + 0x20], edi ; call qword ptr [rsi]
0x00000200005acb99 : mov dword ptr [rsp + 0x20], edi ; call r14
0x00000200005562c8 : mov dword ptr [rsp + 0x20], edi ; call r15
0x000002000039f74d : mov dword ptr [rsp + 0x20], edi ; call rax
0x00000200004965ae : mov dword ptr [rsp + 0x20], edi ; call rsi
0x00000200005e2297 : mov dword ptr [rsp + 0x20], edx ; call 0x2000015e536
0x00000200006465ae : mov dword ptr [rsp + 0x20], edx ; call rax
0x0000020000396c84 : mov dword ptr [rsp + 0x20], edx ; mov edx, r10d ; call r11
0x000002000047a12c : mov dword ptr [rsp + 0x20], esi ; call 0x200000a2047
0x00000200003a77ab : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rsi]
0x0000020000532024 : mov dword ptr [rsp + 0x20], esi ; call r10
0x00000200003aaa17 : mov dword ptr [rsp + 0x20], esi ; call r12
0x00000200003aa8db : mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ecf9e : mov dword ptr [rsp + 0x20], esi ; call r15
0x000002000043aa49 : mov dword ptr [rsp + 0x20], esi ; call rax
0x0000020000669b8b : mov dword ptr [rsp + 0x20], esi ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200005d74e9 : mov dword ptr [rsp + 0x20], esp ; call r10
0x000002000049724b : mov dword ptr [rsp + 0x20], esp ; call rax
0x000002000047204f : mov dword ptr [rsp + 0x20], r11d ; call 0x2000046e317
0x00000200005c4e8c : mov dword ptr [rsp + 0x20], r13d ; call rdi
0x00000200003aaa16 : mov dword ptr [rsp + 0x20], r14d ; call r12
0x000002000010411f : mov dword ptr [rsp + 0x20], r15d ; call 0x200003e0407
0x000002000039f74c : mov dword ptr [rsp + 0x20], r15d ; call rax
0x0000020000487590 : mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200005c5414 : mov dword ptr [rsp + 0x20], r9d ; call rsi
0x0000020000641c62 : mov dword ptr [rsp + 0x24], edx ; jmp 0x20000641c30
0x000002000038c9c7 : mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x2000038c996
0x0000020000641c61 : mov dword ptr [rsp + 0x24], r10d ; jmp 0x20000641c31
0x0000020000443be3 : mov dword ptr [rsp + 0x28], ebp ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200005acb95 : mov dword ptr [rsp + 0x28], ebp ; mov dword ptr [rsp + 0x20], edi ; call r14
0x0000020000497246 : mov dword ptr [rsp + 0x28], ebp ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x0000020000385bcc : mov dword ptr [rsp + 0x28], edi ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000064c4c9 : mov dword ptr [rsp + 0x28], esi ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x000002000064c31c : mov dword ptr [rsp + 0x28], esi ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x000002000043aa44 : mov dword ptr [rsp + 0x28], esi ; mov qword ptr [rsp + 0x20], rsi ; call rax
0x00000200005d75ac : mov dword ptr [rsp + 0x28], esp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x0000020000669b90 : mov dword ptr [rsp + 0x2c], edi ; call rax
0x0000020000669b8f : mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200004ad6f7 : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063144a : mov dword ptr [rsp + 0x30], esi ; mov dword ptr [rsp + 0x38], r14d ; call rax
0x000002000006187c : mov dword ptr [rsp + 0x34], eax ; jmp 0x200000618da
0x000002000051db99 : mov dword ptr [rsp + 0x38], ebx ; call rdi
0x000002000016b775 : mov dword ptr [rsp + 0x38], edx ; mov dword ptr [rsp + 0x40], eax ; call r9
0x000002000063144f : mov dword ptr [rsp + 0x38], esi ; call rax
0x000002000063144e : mov dword ptr [rsp + 0x38], r14d ; call rax
0x0000020000003b94 : mov dword ptr [rsp + 0x3c], esi ; cmp esi, ecx ; jb 0x20000003bf0 ; inc edx ; jmp 0x20000003b84
0x000002000016b779 : mov dword ptr [rsp + 0x40], eax ; call r9
0x0000020000159e03 : mov dword ptr [rsp + 0x40], eax ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200004ea24e : mov dword ptr [rsp + 0x40], esi ; call rax
0x00000200004b1a70 : mov dword ptr [rsp + 0x40], esi ; inc edx ; jmp 0x200004b1a33
0x00000200005c6e2c : mov dword ptr [rsp + 0x40], esi ; mov dword ptr [rsp + 0x54], r11d ; call rax
0x00000200005c6d4c : mov dword ptr [rsp + 0x40], r14d ; call rax
0x00000200006017e2 : mov dword ptr [rsp + 0x44], ecx ; jmp 0x2000046dab8
0x00000200006017e1 : mov dword ptr [rsp + 0x44], r9d ; jmp 0x2000046dab9
0x00000200005b8470 : mov dword ptr [rsp + 0x48], eax ; call 0x200000b46e6
0x00000200003b1c88 : mov dword ptr [rsp + 0x48], ebx ; call 0x200000ddf66
0x000002000011751b : mov dword ptr [rsp + 0x50], 0 ; call r14
0x00000200005c6e31 : mov dword ptr [rsp + 0x54], ebx ; call rax
0x00000200005c6e30 : mov dword ptr [rsp + 0x54], r11d ; call rax
0x00000200001b175d : mov dword ptr [rsp + 0x58], eax ; call 0x200001ada46
0x00000200005eb537 : mov dword ptr [rsp + 0x60], edi ; jmp 0x20000447796
0x0000020000532ff0 : mov dword ptr [rsp + 0x68], eax ; call 0x200000bf276
0x0000020000013eda : mov dword ptr [rsp + 0x70], eax ; mov r9d, r12d ; call 0x2000010010d
0x0000020000484402 : mov dword ptr [rsp + 0x70], ebx ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x00000200001b0e67 : mov dword ptr [rsp + 0x7c], eax ; call r9
0x000002000060e4d9 : mov dword ptr [rsp + 0x80], eax ; jmp 0x2000042a73d
0x0000020000369390 : mov dword ptr [rsp + 0xf0], esi ; call qword ptr [r14]
0x000002000016919f : mov dword ptr fs:[rip + 0x170a5e], eax ; ret
0x000002000001bb5c : mov dword ptr ss:[rcx + 8], 0x48 ; ret
0x0000020000081ab3 : mov eax, 0 ; ret 0x2237
0x00000200001239f1 : mov eax, 0 ; setb al ; ret
0x000002000004f2f7 : mov eax, 0 ; sete al ; ret
0x0000020000174bf2 : mov eax, 0 ; setne al ; ret
0x000002000001e2e8 : mov eax, 0x10 ; ret
0x000002000057b06c : mov eax, 0x100 ; ret
0x0000020000708168 : mov eax, 0x1000 ; ret
0x00000200001b0c0e : mov eax, 0x103 ; add rsp, 0x28 ; ret
0x000002000001e310 : mov eax, 0x14 ; ret
0x00000200001544a7 : mov eax, 0x16 ; add rsp, 0x38 ; ret
0x00000200000e9842 : mov eax, 0x18 ; ret
0x0000020000669989 : mov eax, 0x1d89ffff ; ret 0xe9ff
0x000002000056af63 : mov eax, 0x200 ; call 0x200000771c7
0x0000020000708162 : mov eax, 0x2000 ; ret
0x0000020000219040 : mov eax, 0x200011fe ; call qword ptr [rcx]
0x0000020000449be4 : mov eax, 0x242 ; add dword ptr [rsi + rsi - 0x75], esi ; ret
0x000002000047e337 : mov eax, 0x280 ; call 0x200000a3958
0x000002000037aa1f : mov eax, 0x2b000000 ; ret
0x000002000047c116 : mov eax, 0x2c8 ; call 0x200000a3958
0x0000020000587547 : mov eax, 0x2d0 ; ret
0x000002000026233c : mov eax, 0x30004ac1 ; ret
0x000002000051fc93 : mov eax, 0x3b41fff8 ; ret
0x000002000059398e : mov eax, 0x3d84d89 ; ret
0x0000020000132b14 : mov eax, 0x3e8 ; ret
0x00000200006019d1 : mov eax, 0x40000017 ; jmp 0x2000046dc7d
0x00000200006bb1da : mov eax, 0x41000000 ; pop rbp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000cf5f7 : mov eax, 0x41000000 ; pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cbd27 : mov eax, 0x41000000 ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005940d3 : mov eax, 0x418 ; call 0x200000a3959
0x00000200004ddfe5 : mov eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x000002000016f677 : mov eax, 0x48000000 ; mov eax, edx ; ret
0x000002000069e75c : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x2000069e76d
0x00000200006dfda9 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006dfdba
0x00000200006e0290 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e02a1
0x00000200006e0673 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0684
0x00000200006e0a48 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0a59
0x00000200006e0e3d : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0e4e
0x00000200006e1243 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1254
0x00000200006e1644 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1655
0x00000200006e1a5f : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1a70
0x00000200006e1e60 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1e71
0x00000200006e2285 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e2296
0x00000200006e4f67 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e4f78
0x00000200006e5396 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e53a7
0x00000200006e57c5 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e57d6
0x00000200006e5bf4 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e5c05
0x00000200006e6034 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e6045
0x00000200006e6464 : mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e6475
0x000002000013ac28 : mov eax, 0x48000015 ; add esp, 0x28 ; ret
0x000002000043143d : mov eax, 0x48004307 ; add ecx, edx ; jmp rcx
0x000002000052e7f6 : mov eax, 0x4801b0ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200001c0f7a : mov eax, 0x4890003e ; add esp, 0x30 ; pop rbp ; ret
0x00000200005d37a0 : mov eax, 0x4890ffc9 ; add esp, 0x20 ; pop rbp ; ret
0x00000200004eb485 : mov eax, 0x48c03345 ; mov ecx, edi ; call r15
0x00000200006e913a : mov eax, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200004f1f82 : mov eax, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200004fc7cc : mov eax, 0x48c38bff ; add esp, 0x50 ; pop rbx ; ret
0x000002000063f004 : mov eax, 0x48ffa739 ; add esp, 0x30 ; pop rbx ; ret
0x000002000013c93c : mov eax, 0x48ffef42 ; add esp, 0x38 ; ret
0x0000020000523db5 : mov eax, 0x4b505953 ; call 0x20000270047
0x000002000060c240 : mov eax, 0x4de990ff ; ret 0xffe1
0x0000020000029320 : mov eax, 0x50 ; ret
0x00000200005c3d97 : mov eax, 0x52504e50 ; call 0x20000270047
0x000002000064edaf : mov eax, 0x54466656 ; call 0x20000270048
0x0000020000643589 : mov eax, 0x566c6148 ; call 0x20000270048
0x000002000017adc3 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000200001b8cf7 : mov eax, 0x5d7bea7 ; ret 0x109e
0x00000200005a2761 : mov eax, 0x5f000000 ; pop rbx ; ret
0x000002000064dc7a : mov eax, 0x61436656 ; call 0x20000270048
0x00000200006417d0 : mov eax, 0x61446656 ; call 0x20000270048
0x00000200004c3d97 : mov eax, 0x624e4d43 ; call 0x20000270047
0x000002000064ce19 : mov eax, 0x62535442 ; call 0x20000270048
0x00000200005e7722 : mov eax, 0x634cffd9 ; ret
0x00000200004d3dc8 : mov eax, 0x69634d43 ; call 0x20000270047
0x000002000064cdfb : mov eax, 0x6d535442 ; call 0x20000270048
0x0000020000133db7 : mov eax, 0x73556f49 ; call 0x20000270047
0x0000020000132b1a : mov eax, 0x7d0 ; ret
0x0000020000497551 : mov eax, 0x7ee990ff ; xchg byte ptr [rbx], al ; add dh, dh ; ret
0x000002000006770a : mov eax, 0x80 ; call 0x200000a3957
0x0000020000479b3e : mov eax, 0x80 ; call 0x200000a3958
0x00000200001bf294 : mov eax, 0x80000005 ; mov word ptr [rcx], r11w ; ret
0x00000200003cda03 : mov eax, 0x80000014 ; ret
0x00000200004fcceb : mov eax, 0x8000001a ; ret
0x000002000010570e : mov eax, 0x80070057 ; ret
0x00000200001c1bbf : mov eax, 0x8007007a ; mov byte ptr [rcx], 0 ; ret
0x00000200001b3a04 : mov eax, 0x8007007a ; mov word ptr [rcx], r11w ; ret
0x0000020000140743 : mov eax, 0x80070216 ; ret
0x00000200001aa87c : mov eax, 0x83000000 ; ret 0x457f
0x00000200005a1aa5 : mov eax, 0x8348ffa8 ; ret
0x0000020000582827 : mov eax, 0x8348ffdd ; ret
0x0000020000398335 : mov eax, 0x8348ffef ; ret
0x00000200005a5042 : mov eax, 0x8348fff6 ; ret
0x0000020000584c50 : mov eax, 0x8acb8aff ; ret
0x00000200006fe404 : mov eax, 0x8afffc79 ; ret
0x000002000012adf8 : mov eax, 0x8b000000 ; ret
0x0000020000590525 : mov eax, 0x8b44ffc0 ; ret
0x0000020000514ec9 : mov eax, 0x8b48c933 ; ret 0x8948
0x000002000047d4d9 : mov eax, 0x8b4c0017 ; ret
0x00000200005a11f4 : mov eax, 0x8bffa82d ; ret
0x00000200005df714 : mov eax, 0x8bffe5cb ; ret
0x0000020000154de4 : mov eax, 0x8bfff0cf ; ret
0x000002000056dfa4 : mov eax, 0x8bfff73f ; ret
0x0000020000150b55 : mov eax, 0x8bfffefa ; ret
0x000002000010a989 : mov eax, 0xa ; ret
0x000002000070ec57 : mov eax, 0xa90d8bff ; ret
0x0000020000573e3d : mov eax, 0xb60fffd2 ; ret
0x0000020000510cad : mov eax, 0xbae5bde8 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000008dde2 : mov eax, 0xbc8babd4 ; lahf ; push rcx ; sub esi, eax ; ret
0x0000020000139c2d : mov eax, 0xc0000001 ; add rsp, 0x38 ; ret
0x0000020000636ebb : mov eax, 0xc0000001 ; add rsp, 0x48 ; ret
0x00000200000679be : mov eax, 0xc0000001 ; ret
0x000002000014aa54 : mov eax, 0xc0000002 ; ret
0x000002000038ec62 : mov eax, 0xc0000003 ; ret
0x000002000013c1e9 : mov eax, 0xc0000005 ; ret
0x000002000013b22e : mov eax, 0xc000000d ; add rsp, 0x28 ; ret
0x0000020000165992 : mov eax, 0xc000000d ; add rsp, 0x38 ; ret
0x0000020000513b70 : mov eax, 0xc000000d ; add rsp, 0x58 ; ret
0x000002000039543a : mov eax, 0xc000000d ; jmp 0x2000039540a
0x0000020000614e10 : mov eax, 0xc000000d ; jmp 0x20000411040
0x00000200003cb35b : mov eax, 0xc000000d ; pop rbx ; ret
0x0000020000016e58 : mov eax, 0xc000000d ; ret
0x0000020000172b93 : mov eax, 0xc000000e ; mov eax, r8d ; ret
0x00000200001c0d3c : mov eax, 0xc000000e ; ret
0x0000020000049302 : mov eax, 0xc0000010 ; add rsp, 0x28 ; ret
0x00000200006e7cc9 : mov eax, 0xc0000011 ; ret
0x000002000002b9a5 : mov eax, 0xc0000016 ; add rsp, 0x28 ; ret
0x0000020000501b00 : mov eax, 0xc0000022 ; add rsp, 0x28 ; ret
0x0000020000162176 : mov eax, 0xc0000022 ; ret
0x000002000015b1fb : mov eax, 0xc0000023 ; and dword ptr [r8], 0 ; ret
0x00000200003fd9f1 : mov eax, 0xc0000023 ; ret
0x00000200000272b1 : mov eax, 0xc0000033 ; ret
0x00000200000272b7 : mov eax, 0xc0000034 ; ret
0x00000200005fff9f : mov eax, 0xc0000040 ; jmp 0x2000046c1b5
0x00000200005650ac : mov eax, 0xc0000056 ; add rsp, 0x28 ; ret
0x00000200005653e1 : mov eax, 0xc0000056 ; ret
0x0000020000036e5d : mov eax, 0xc0000058 ; ret
0x000002000061ef0b : mov eax, 0xc000005f ; jmp 0x2000041b144
0x000002000015e16b : mov eax, 0xc0000061 ; add rsp, 0x28 ; ret
0x00000200004d625c : mov eax, 0xc0000063 ; ret
0x0000020000383128 : mov eax, 0xc0000079 ; ret
0x000002000001dbc4 : mov eax, 0xc0000095 ; ret
0x000002000055d78b : mov eax, 0xc000009a ; add rsp, 0x28 ; ret
0x00000200001c2a49 : mov eax, 0xc000009a ; ret
0x00000200003f9494 : mov eax, 0xc00000a5 ; ret
0x00000200005735ee : mov eax, 0xc00000bb ; add rsp, 0x28 ; ret
0x0000020000016b78 : mov eax, 0xc00000bb ; ret
0x0000020000384689 : mov eax, 0xc00000e7 ; ret
0x00000200003cb555 : mov eax, 0xc00000ef ; ret
0x000002000016a6b1 : mov eax, 0xc00000f0 ; add rsp, 0x38 ; ret
0x00000200003cb55b : mov eax, 0xc00000f0 ; ret
0x00000200005fcc67 : mov eax, 0xc00000f1 ; jmp 0x20000468f54
0x000002000001fa44 : mov eax, 0xc00000f1 ; ret
0x00000200004698e0 : mov eax, 0xc00000f2 ; jmp 0x20000469887
0x000002000001fa3e : mov eax, 0xc00000f2 ; ret
0x00000200001c07cb : mov eax, 0xc00000ff ; add rsp, 0x28 ; ret
0x000002000005a93a : mov eax, 0xc0000106 ; ret
0x0000020000545ac0 : mov eax, 0xc0000148 ; ret
0x000002000015eb46 : mov eax, 0xc000014c ; ret
0x00000200004e034e : mov eax, 0xc0000189 ; ret
0x00000200003963ab : mov eax, 0xc0000206 ; ret
0x00000200004d6268 : mov eax, 0xc0000210 ; ret
0x00000200000272ab : mov eax, 0xc0000225 ; ret
0x00000200005e7a6d : mov eax, 0xc000022d ; jmp 0x200004e3d09
0x0000020000410812 : mov eax, 0xc000022d ; ret
0x0000020000076c28 : mov eax, 0xc0000258 ; ret
0x000002000003b4a9 : mov eax, 0xc000025f ; ret
0x0000020000378d43 : mov eax, 0xc00002c5 ; ret
0x0000020000569a1b : mov eax, 0xc0000303 ; ret
0x000002000017246c : mov eax, 0xc0000354 ; ret
0x000002000064cf13 : mov eax, 0xc000042a ; ret
0x0000020000141d12 : mov eax, 0xc0000718 ; ret
0x000002000049f9bf : mov eax, 0xc000a285 ; jmp 0x200004bbc53
0x00000200000beeb5 : mov eax, 0xc3000000 ; xor eax, eax ; ret
0x000002000052114c : mov eax, 0xc48148ff ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005240fa : mov eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200004974ff : mov eax, 0xcfe990ff ; test byte ptr [rbx], al ; add dh, dh ; ret
0x000002000023a9fc : mov eax, 0xd10060c2 ; ret 0x60
0x00000200000c6690 : mov eax, 0xe8000000 ; ret
0x0000020000540c95 : mov eax, 0xe8000000 ; ret 0xb77e
0x000002000049a80c : mov eax, 0xe8001e8a ; call qword ptr [rsi]
0x000002000050da23 : mov eax, 0xe990ffb2 ; ret 0xe8f8
0x00000200001005ae : mov eax, 0xe990fffd ; ret
0x00000200003d8e2b : mov eax, 0xe9fffffe ; jmp rax
0x000002000007ed54 : mov eax, 0xf0 ; jmp 0x2000007b047
0x00000200001f52c3 : mov eax, 0xf000000 ; xchg eax, ebp ; ret
0x000002000007ed94 : mov eax, 0xf2 ; jmp 0x2000007b047
0x000002000007edb4 : mov eax, 0xf3 ; jmp 0x2000007b047
0x000002000007edd4 : mov eax, 0xf4 ; jmp 0x2000007b047
0x000002000007edf4 : mov eax, 0xf5 ; jmp 0x2000007b047
0x000002000007ee14 : mov eax, 0xf6 ; jmp 0x2000007b047
0x00000200003df826 : mov eax, 0xf6000000 ; ret 0xf01
0x00000200000bc556 : mov eax, 0xf6000002 ; ret
0x00000200001c47d4 : mov eax, 0xf6001973 ; ret
0x000002000066797c : mov eax, 0xf6ffc267 ; ret
0x000002000007ee34 : mov eax, 0xf7 ; jmp 0x2000007b047
0x0000020000441b18 : mov eax, 0xf7000000 ; ret 0
0x0000020000522ee8 : mov eax, 0xf7fb8bff ; ret
0x00000200001649ab : mov eax, 0xf9eb ; mov word ptr [rdx], ax ; ret
0x0000020000223c18 : mov eax, 0xfc0013b1 ; ret
0x0000020000710e3b : mov eax, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x000002000050542e : mov eax, 0xff41ffd7 ; ret
0x000002000054e17f : mov eax, 0xfff9 ; and word ptr [rcx + 0x1a], ax ; ret
0x000002000001eed0 : mov eax, 0xffff ; add rsp, 0x38 ; ret
0x0000020000177e25 : mov eax, 0xffff ; add word ptr [rcx + 0x66], ax ; ret
0x000002000003fe5c : mov eax, 0xffff ; ret
0x0000020000008634 : mov eax, 1 ; add rsp, 0x28 ; ret
0x000002000007afbc : mov eax, 1 ; add rsp, 0x38 ; ret
0x00000200003f05eb : mov eax, 1 ; add rsp, 0x58 ; ret
0x0000020000052174 : mov eax, 1 ; cmove eax, r8d ; ret
0x0000020000174ffa : mov eax, 1 ; mov eax, r8d ; ret
0x00000200005ba8d8 : mov eax, 1 ; pop rbp ; ret
0x0000020000005881 : mov eax, 1 ; ret
0x0000020000007460 : mov eax, 1 ; xchg qword ptr [rcx], rax ; ret
0x000002000039fba6 : mov eax, 2 ; add rsp, 0x28 ; ret
0x000002000064c8a4 : mov eax, 2 ; call 0x20000198adb
0x000002000001e297 : mov eax, 2 ; ret
0x00000200000dc88a : mov eax, 2 ; ret 0
0x00000200001edfd1 : mov eax, 2 ; sbb ecx, ecx ; add eax, ecx ; ret
0x0000020000023013 : mov eax, 3 ; ret
0x000002000001e2b5 : mov eax, 4 ; ret
0x0000020000050f44 : mov eax, 5 ; ret
0x00000200005cd6cd : mov eax, 6 ; call rax
0x0000020000480d7f : mov eax, 6 ; ret
0x000002000010a8dd : mov eax, 7 ; ret
0x000002000001e2d5 : mov eax, 8 ; ret
0x0000020000152922 : mov eax, dword ptr [0x188] ; ret
0x000002000006febf : mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000019c69c : mov eax, dword ptr [r10 + 0x38] ; add rsp, 0x28 ; ret
0x00000200003923ac : mov eax, dword ptr [r10 + rcx*4] ; jmp 0x2000039237a
0x000002000012b333 : mov eax, dword ptr [r8 + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x2000012b308
0x000002000004f429 : mov eax, dword ptr [r8 + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x000002000035fecf : mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x2000035fed5 ; ret
0x00000200001c2c35 : mov eax, dword ptr [r8] ; mov dword ptr [rip + 0x14408a], eax ; ret
0x0000020000392aeb : mov eax, dword ptr [rax + 0x10] ; add rsp, 0x38 ; ret
0x000002000017a532 : mov eax, dword ptr [rax + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x000002000014aa49 : mov eax, dword ptr [rax + 0x10] ; test r8, r8 ; je 0x2000014aa5d ; jmp r8
0x00000200004de9b8 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x200004de9bb ; ret
0x0000020000108a03 : mov eax, dword ptr [rax + 0x18] ; test r8, r8 ; jne 0x200001089f6 ; ret
0x00000200000df8ca : mov eax, dword ptr [rax + 0x1c8] ; ret
0x0000020000574658 : mov eax, dword ptr [rax + 0x1f60] ; ret
0x00000200004d3853 : mov eax, dword ptr [rax + 0x20] ; mov qword ptr [rdx + 0x20], rax ; ret
0x0000020000574536 : mov eax, dword ptr [rax + 0x20] ; ret
0x00000200006a115b : mov eax, dword ptr [rax + 0x210] ; jmp rax
0x000002000001b99e : mov eax, dword ptr [rax + 0x220] ; ret
0x00000200000a917e : mov eax, dword ptr [rax + 0x24] ; ret
0x000002000054a3ea : mov eax, dword ptr [rax + 0x28] ; ret
0x000002000064e678 : mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x0000020000197552 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000200001684fd : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x2000016850f ; call rax
0x000002000017a655 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000200000bd79a : mov eax, dword ptr [rax + 0x398] ; ret
0x00000200000c03da : mov eax, dword ptr [rax + 0x3a0] ; ret
0x00000200000bdf4a : mov eax, dword ptr [rax + 0x3e0] ; ret
0x0000020000192af0 : mov eax, dword ptr [rax + 0x41000000] ; call rbx
0x00000200000df951 : mov eax, dword ptr [rax + 0x418] ; ret
0x0000020000574532 : mov eax, dword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000168579 : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x2000016858b ; call rax
0x000002000006b20a : mov eax, dword ptr [rax + 0x4b0] ; ret
0x0000020000182ea4 : mov eax, dword ptr [rax + 0x50] ; add rax, r9 ; ret
0x000002000015b574 : mov eax, dword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001685f9 : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x2000016860b ; call rax
0x00000200003cda29 : mov eax, dword ptr [rax + 0x610] ; ret
0x00000200001491a9 : mov eax, dword ptr [rax + 0x68] ; shr eax, 0x19 ; and eax, 1 ; ret
0x000002000008e289 : mov eax, dword ptr [rax + 0x7242b8f] ; sahf ; ret
0x0000020000111af8 : mov eax, dword ptr [rax + 0x80] ; ret
0x00000200000b986a : mov eax, dword ptr [rax + 0xb8] ; ret
0x000002000003a26a : mov eax, dword ptr [rax + 0xf0] ; ret
0x00000200001630c3 : mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x000002000012b334 : mov eax, dword ptr [rax + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x2000012b307
0x00000200006bfc17 : mov eax, dword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bdbcb : mov eax, dword ptr [rax + 8] ; cmp eax, edx ; cmove eax, r8d ; ret
0x000002000035ecd3 : mov eax, dword ptr [rax + 8] ; jmp 0x2000035ec9e
0x000002000004f42a : mov eax, dword ptr [rax + 8] ; mov dword ptr [rdx + 8], eax ; ret
0x000002000002867c : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200000bdf7c : mov eax, dword ptr [rax + 8] ; ret
0x00000200000e654a : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x200000e655d ; ret
0x0000020000441d8e : mov eax, dword ptr [rax + rax*8 - 1] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000043b381 : mov eax, dword ptr [rax + rcx*8] ; add rax, r9 ; ret
0x000002000052a6ed : mov eax, dword ptr [rax + rcx*8] ; lea ecx, dword ptr [r11 + 1] ; call rax
0x0000020000441db7 : mov eax, dword ptr [rax + rcx*8] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200004ee92b : mov eax, dword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x000002000036b2ab : mov eax, dword ptr [rax + rcx*8] ; mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x0000020000411cea : mov eax, dword ptr [rax + rdx*4] ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000389b1f : mov eax, dword ptr [rax - 0x18000000] ; xlatb ; call rdx
0x000002000050c3c7 : mov eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000ba1c : mov eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001baf68 : mov eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001043eb : mov eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0x000002000035fed0 : mov eax, dword ptr [rax] ; cmp eax, edx ; je 0x2000035fed4 ; ret
0x000002000056fb7d : mov eax, dword ptr [rax] ; cmp r8, r9 ; jne 0x2000056fb5b ; xor eax, eax ; ret
0x000002000059e83d : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000059e821 ; xor eax, eax ; ret
0x000002000065662a : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000065662c ; xor eax, eax ; ret
0x000002000054e19c : mov eax, dword ptr [rax] ; cmp rax, rcx ; jne 0x2000054e19e ; xor eax, eax ; ret
0x00000200006c674c : mov eax, dword ptr [rax] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001c2c36 : mov eax, dword ptr [rax] ; mov dword ptr [rip + 0x14408a], eax ; ret
0x000002000055a876 : mov eax, dword ptr [rax] ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200001294cb : mov eax, dword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x000002000002d93a : mov eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000036dfb : mov eax, dword ptr [rax] ; ret
0x0000020000466b53 : mov eax, dword ptr [rax] ; test al, 1 ; je 0x20000466b13 ; ret
0x000002000012c2eb : mov eax, dword ptr [rax] ; test r8b, 2 ; je 0x2000012c2ff ; mov eax, edx ; ret
0x00000200001684b9 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x200001684c9 ; call rax
0x0000020000119c35 : mov eax, dword ptr [rbp + 0x28] ; mov rdx, rbx ; call rax
0x00000200005b906d : mov eax, dword ptr [rbp + 0x38] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000050f29f : mov eax, dword ptr [rbp + 0x48] ; movsx ecx, word ptr [rax] ; jmp 0x2000050f271
0x0000020000101a2e : mov eax, dword ptr [rbp + 8] ; mov rcx, rbx ; call rax
0x00000200006f5e2c : mov eax, dword ptr [rbp + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x000002000007bf16 : mov eax, dword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x0000020000019c3f : mov eax, dword ptr [rbx + 0x20] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000017a56a : mov eax, dword ptr [rbx + 0x20] ; mov rdx, rdi ; mov rcx, rbp ; call rax
0x0000020000159868 : mov eax, dword ptr [rbx + 0x38] ; mov ecx, 1 ; call rax
0x000002000036b2af : mov eax, dword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x00000200006f5ffa : mov eax, dword ptr [rbx + 0x38] ; mov ecx, r15d ; call rax
0x000002000036f15c : mov eax, dword ptr [rbx + 0x48] ; test rax, rax ; je 0x2000036f16e ; call rax
0x000002000001eda8 : mov eax, dword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f8e96 : mov eax, dword ptr [rbx + 0x58] ; dec dword ptr [rbx + 8] ; inc dword ptr [rbx + 0x40] ; call rax
0x00000200001351bb : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000019c60e : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042c657 : mov eax, dword ptr [rbx + 0x78] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000016ec7 : mov eax, dword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x000002000041a581 : mov eax, dword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005a712c : mov eax, dword ptr [rbx + rdx*4] ; mov dword ptr [r14 + rdx*4], eax ; inc edx ; jmp 0x200005a712c
0x00000200000d9727 : mov eax, dword ptr [rbx - 4] ; add r8, r12 ; call r8
0x00000200006311bc : mov eax, dword ptr [rbx] ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200004fcc99 : mov eax, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000055ec5 : mov eax, dword ptr [rcx + 0x10] ; ret
0x00000200000bdd02 : mov eax, dword ptr [rcx + 0x10] ; test al, 2 ; jne 0x200000bdd23 ; mov al, 1 ; ret
0x00000200005e2eb1 : mov eax, dword ptr [rcx + 0x110] ; ret
0x00000200001621c0 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [r9], eax ; xor eax, eax ; ret
0x0000020000542e45 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [rdx + 0x207c], eax ; ret
0x00000200001590ef : mov eax, dword ptr [rcx + 0x14] ; sub eax, edx ; ret
0x0000020000574655 : mov eax, dword ptr [rcx + 0x18] ; mov eax, dword ptr [rax + 0x1f60] ; ret
0x000002000041b43d : mov eax, dword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000005a940 : mov eax, dword ptr [rcx + 0x1c0] ; ret
0x00000200000517b1 : mov eax, dword ptr [rcx + 0x1c8] ; ret
0x0000020000197540 : mov eax, dword ptr [rcx + 0x1e0] ; ret
0x000002000013297e : mov eax, dword ptr [rcx + 0x1f48] ; mov qword ptr [rdx], rax ; ret
0x000002000038a6ee : mov eax, dword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000574545 : mov eax, dword ptr [rcx + 0x20] ; ret
0x0000020000047acd : mov eax, dword ptr [rcx + 0x220] ; ret
0x00000200000e389c : mov eax, dword ptr [rcx + 0x24] ; ret
0x0000020000550728 : mov eax, dword ptr [rcx + 0x28] ; mov dword ptr [rax], r8d ; ret
0x00000200001064be : mov eax, dword ptr [rcx + 0x28] ; ret
0x00000200000c03a0 : mov eax, dword ptr [rcx + 0x28] ; test eax, eax ; js 0x200000c03b3 ; xor eax, eax ; ret
0x00000200004c425d : mov eax, dword ptr [rcx + 0x28] ; test rax, rax ; je 0x200004c4271 ; call rax
0x000002000014bd70 : mov eax, dword ptr [rcx + 0x28c] ; ret
0x00000200000d8528 : mov eax, dword ptr [rcx + 0x2c] ; ret
0x0000020000035711 : mov eax, dword ptr [rcx + 0x2d0] ; ret
0x000002000006c0e1 : mov eax, dword ptr [rcx + 0x2e0] ; ret
0x000002000038a1ce : mov eax, dword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000dcdb9 : mov eax, dword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000017a651 : mov eax, dword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200004b93b9 : mov eax, dword ptr [rcx + 0x30] ; test rax, rax ; jne 0x200004b93cc ; ret
0x00000200000df859 : mov eax, dword ptr [rcx + 0x398] ; ret
0x00000200000549d9 : mov eax, dword ptr [rcx + 0x3a0] ; ret
0x00000200000517a9 : mov eax, dword ptr [rcx + 0x3b0] ; ret
0x0000020000051f91 : mov eax, dword ptr [rcx + 0x3c8] ; ret
0x0000020000056431 : mov eax, dword ptr [rcx + 0x3d0] ; ret
0x00000200000dfacd : mov eax, dword ptr [rcx + 0x3e8] ; ret
0x0000020000197900 : mov eax, dword ptr [rcx + 0x3f0] ; ret
0x00000200000f82d0 : mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000f82df ; ret
0x000002000003fe71 : mov eax, dword ptr [rcx + 0x410] ; ret
0x00000200000e1399 : mov eax, dword ptr [rcx + 0x418] ; ret
0x0000020000054cb8 : mov eax, dword ptr [rcx + 0x42c] ; and al, 1 ; ret
0x000002000043be51 : mov eax, dword ptr [rcx + 0x448] ; ret
0x0000020000668e2f : mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x000002000058590c : mov eax, dword ptr [rcx + 0x450] ; ret
0x0000020000593314 : mov eax, dword ptr [rcx + 0x48] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x00000200001bfb70 : mov eax, dword ptr [rcx + 0x48] ; ret
0x00000200001bfb6c : mov eax, dword ptr [rcx + 0x4c] ; ret
0x000002000003b450 : mov eax, dword ptr [rcx + 0x50] ; shr eax, 0x18 ; and al, 1 ; ret
0x00000200000beea6 : mov eax, dword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200004a0cc0 : mov eax, dword ptr [rcx + 0x58c] ; ret
0x000002000041da14 : mov eax, dword ptr [rcx + 0x60] ; ret
0x000002000045a558 : mov eax, dword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000039e74 : mov eax, dword ptr [rcx + 0x74] ; shr eax, 0xc ; and al, 1 ; ret
0x00000200003dafe0 : mov eax, dword ptr [rcx + 0xc0] ; ret
0x0000020000393880 : mov eax, dword ptr [rcx + 0xc4] ; ret
0x000002000001c887 : mov eax, dword ptr [rcx + 0xc] ; jmp 0x2000001c67c
0x00000200004e8224 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x0000020000550a6c : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x000002000003f925 : mov eax, dword ptr [rcx + 0xf0] ; ret
0x00000200000b90d0 : mov eax, dword ptr [rcx + 4] ; ret
0x0000020000116b51 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setb al ; ret
0x0000020000060c79 : mov eax, dword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000019a5ad : mov eax, dword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x0000020000060aa9 : mov eax, dword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x00000200004e2dba : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x00000200004e43f4 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x0000020000163094 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx], eax ; ret
0x0000020000550a8a : mov eax, dword ptr [rcx + 8] ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000055ea5 : mov eax, dword ptr [rcx + 8] ; ret
0x0000020000076ce4 : mov eax, dword ptr [rcx + 8] ; test al, al ; je 0x20000076cf7 ; dec al ; ret
0x000002000041cbff : mov eax, dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000174e93 : mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000a9d57 : mov eax, dword ptr [rcx + rax*4] ; test eax, eax ; je 0x200000a9d6b ; ret
0x0000020000174e65 : mov eax, dword ptr [rcx + rax*8 + 8] ; ret
0x0000020000141d94 : mov eax, dword ptr [rcx + rax*8] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000200000342de : mov eax, dword ptr [rcx + rax*8] ; ret
0x00000200000f9100 : mov eax, dword ptr [rcx + rax*8] ; test dword ptr [rax], edx ; jne 0x200000f9113 ; xor eax, eax ; ret
0x00000200001792e6 : mov eax, dword ptr [rcx + rax*8] ; test rax, rcx ; setne al ; ret
0x0000020000641de2 : mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000016ee64 : mov eax, dword ptr [rcx - 0x58] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200001b36f4 : mov eax, dword ptr [rcx] ; and rax, 0xfffff000 ; ret
0x00000200001869e8 : mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x00000200004855b6 : mov eax, dword ptr [rcx] ; cmp rax, rcx ; jne 0x200004855c8 ; mov al, dl ; ret
0x00000200004855b6 : mov eax, dword ptr [rcx] ; cmp rax, rcx ; jne 0x200004855c9 ; mov al, dl ; ret
0x00000200006c67db : mov eax, dword ptr [rcx] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000065407b : mov eax, dword ptr [rcx] ; lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x000002000040c10b : mov eax, dword ptr [rcx] ; mov dword ptr [rcx], eax ; jmp 0x2000040c11e
0x0000020000179307 : mov eax, dword ptr [rcx] ; mov dword ptr [rip + 0x153691], eax ; ret
0x00000200004ff53a : mov eax, dword ptr [rcx] ; mov rax, r8 ; ret
0x00000200000b9650 : mov eax, dword ptr [rcx] ; ret
0x000002000053d6a8 : mov eax, dword ptr [rcx] ; shr eax, 0x1f ; not al ; and al, 1 ; ret
0x000002000058726a : mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x000002000006cdc1 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x2000006cdd4 ; mov al, 1 ; ret
0x0000020000641917 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200006418fc ; ret
0x00000200003c3337 : mov eax, dword ptr [rdi + 0x18] ; lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003c3311
0x000002000043a0ce : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x2000043a0e4 ; call rax
0x0000020000051b51 : mov eax, dword ptr [rdi] ; jmp 0x20000051b37
0x00000200004fa5e0 : mov eax, dword ptr [rdx + 0x10] ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000657074 : mov eax, dword ptr [rdx + 0x10] ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000064b4f8 : mov eax, dword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x0000020000542e62 : mov eax, dword ptr [rdx + 0x207c] ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200004eae92 : mov eax, dword ptr [rdx + 0x20] ; or dword ptr [rcx + 0x20], eax ; ret
0x00000200000bee9e : mov eax, dword ptr [rdx + 0x220] ; ret
0x000002000006fec0 : mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000001be92 : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x2000001be96 ; mov rax, rdx ; ret
0x000002000019c69d : mov eax, dword ptr [rdx + 0x38] ; add rsp, 0x28 ; ret
0x00000200004d0418 : mov eax, dword ptr [rdx + 0x38] ; ret
0x000002000002a15e : mov eax, dword ptr [rdx + 0x440] ; mov qword ptr [rcx], rax ; ret
0x00000200005a328e : mov eax, dword ptr [rdx + 0x74] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200000beeb3 : mov eax, dword ptr [rdx + 0xb8] ; ret
0x0000020000596763 : mov eax, dword ptr [rdx + 0xc] ; test eax, eax ; je 0x200005967a5 ; add rax, rdx ; jmp 0x2000059677c
0x000002000010a892 : mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x0000020000129fba : mov eax, dword ptr [rdx + 8] ; mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x0000020000028a85 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000041de0b : mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200003923ad : mov eax, dword ptr [rdx + rcx*4] ; jmp 0x20000392379
0x00000200004012de : mov eax, dword ptr [rdx + rdi*4 + 0x40115c] ; add rax, r10 ; jmp rax
0x000002000000bb7d : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x00000200006e7cc0 : mov eax, dword ptr [rdx] ; bswap eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000058d1dd : mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x00000200005b74c0 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rax ; jmp 0x200005b74d4
0x00000200004eeb0c : mov eax, dword ptr [rdx] ; or dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000366546 : mov eax, dword ptr [rdx] ; test al, 1 ; je 0x20000366555 ; ret
0x000002000016c801 : mov eax, dword ptr [rip + 0x114f71] ; call rax
0x000002000016c6ef : mov eax, dword ptr [rip + 0x115083] ; call rax
0x000002000016c234 : mov eax, dword ptr [rip + 0x115536] ; call rax
0x0000020000169380 : mov eax, dword ptr [rip + 0x117f4a] ; ret
0x0000020000142567 : mov eax, dword ptr [rip + 0x14ff1b] ; jmp 0x2000003e85f
0x00000200001d5437 : mov eax, dword ptr [rip + 0x181fab] ; call rax
0x00000200001cd32f : mov eax, dword ptr [rip + 0x18a183] ; call r8
0x00000200001bee10 : mov eax, dword ptr [rip + 0x1982a6] ; mov dword ptr [r8], eax ; ret
0x000002000064fac3 : mov eax, dword ptr [rip + 0x1b5e7] ; ret
0x0000020000183bd8 : mov eax, dword ptr [rip + 0x1cc4a2] ; ret
0x000002000016ac38 : mov eax, dword ptr [rip + 0x1ec87a] ; call rax
0x0000020000161060 : mov eax, dword ptr [rip + 0x1f6452] ; call rax
0x0000020000160f4d : mov eax, dword ptr [rip + 0x1f6565] ; call rax
0x0000020000160cbc : mov eax, dword ptr [rip + 0x1f67f6] ; call rax
0x0000020000160beb : mov eax, dword ptr [rip + 0x1f68c7] ; call rax
0x0000020000160a56 : mov eax, dword ptr [rip + 0x1f6a5c] ; call rax
0x00000200001609be : mov eax, dword ptr [rip + 0x1f6af4] ; call r8
0x0000020000149ed8 : mov eax, dword ptr [rip + 0x20d30e] ; ret
0x0000020000144b81 : mov eax, dword ptr [rip + 0x212b21] ; ret
0x0000020000140f52 : mov eax, dword ptr [rip + 0x2160b4] ; ret
0x000002000012edcc : mov eax, dword ptr [rip + 0x2286e6] ; call rax
0x000002000012ed6d : mov eax, dword ptr [rip + 0x228745] ; call rax
0x000002000011b5c8 : mov eax, dword ptr [rip + 0x23bc66] ; ret
0x000002000011b5d8 : mov eax, dword ptr [rip + 0x23bf7e] ; ret
0x0000020000030e61 : mov eax, dword ptr [rip + 0x2421c9] ; ret
0x00000200000faaa7 : mov eax, dword ptr [rip + 0x25c93b] ; call rax
0x00000200000fa81f : mov eax, dword ptr [rip + 0x25cbc3] ; call rax
0x00000200000e993e : mov eax, dword ptr [rip + 0x26d6c8] ; ret
0x0000020000003503 : mov eax, dword ptr [rip + 0x271f77] ; ret
0x0000020000016b50 : mov eax, dword ptr [rip + 0x280326] ; ret
0x00000200000a92d0 : mov eax, dword ptr [rip + 0x2add3e] ; ret
0x000002000006f9d8 : mov eax, dword ptr [rip + 0x2e76ce] ; ret
0x000002000005462d : mov eax, dword ptr [rip + 0x3029d9] ; mov dword ptr [rcx + 0x2c], eax ; ret
0x000002000003086f : mov eax, dword ptr [rip + 0x326c43] ; call rax
0x0000020000030736 : mov eax, dword ptr [rip + 0x326d7c] ; call rax
0x00000200000228cd : mov eax, dword ptr [rip + 0x334c15] ; sub rax, rcx ; ret
0x000002000001c390 : mov eax, dword ptr [rip + 0x33afb6] ; ret
0x00000200000155ee : mov eax, dword ptr [rip + 0x341ec4] ; call rax
0x0000020000013da8 : mov eax, dword ptr [rip + 0x34370a] ; call rax
0x0000020000013d35 : mov eax, dword ptr [rip + 0x34377d] ; call rax
0x0000020000013c43 : mov eax, dword ptr [rip + 0x34386f] ; call rax
0x0000020000013bdd : mov eax, dword ptr [rip + 0x3438d5] ; call r8
0x000002000001057e : mov eax, dword ptr [rip + 0x346f34] ; call rax
0x000002000001050b : mov eax, dword ptr [rip + 0x346fa7] ; call rax
0x000002000000f4c8 : mov eax, dword ptr [rip + 0x347fea] ; call rax
0x000002000000f303 : mov eax, dword ptr [rip + 0x3481af] ; call rax
0x000002000000f267 : mov eax, dword ptr [rip + 0x34824b] ; call rax
0x000002000000f13e : mov eax, dword ptr [rip + 0x348374] ; call rax
0x000002000000f106 : mov eax, dword ptr [rip + 0x3483ac] ; call rax
0x000002000000f0a9 : mov eax, dword ptr [rip + 0x348409] ; call rax
0x000002000000efa6 : mov eax, dword ptr [rip + 0x34850c] ; call rax
0x000002000000c594 : mov eax, dword ptr [rip + 0x34af1e] ; call rax
0x000002000000c4b0 : mov eax, dword ptr [rip + 0x34b002] ; call rax
0x000002000000c404 : mov eax, dword ptr [rip + 0x34b0ae] ; call rax
0x000002000000c320 : mov eax, dword ptr [rip + 0x34b192] ; call rax
0x000002000000c2d9 : mov eax, dword ptr [rip + 0x34b1d9] ; call rax
0x000002000000c22a : mov eax, dword ptr [rip + 0x34b288] ; call rax
0x00000200001b9230 : mov eax, dword ptr [rip + 0x4d5e16] ; ret
0x0000020000056440 : mov eax, dword ptr [rip + 0x62ce4e] ; ret
0x000002000038fff6 : mov eax, dword ptr [rip + 0xac994] ; call rax
0x000002000017bcbe : mov eax, dword ptr [rip + 0xf930c] ; mov rbx, rcx ; call qword ptr [rax]
0x000002000017bb9a : mov eax, dword ptr [rip + 0xf9430] ; mov rbp, rdx ; call qword ptr [rax]
0x000002000017bb2e : mov eax, dword ptr [rip + 0xf949c] ; mov rsi, rdx ; call qword ptr [rax]
0x00000200005d3f99 : mov eax, dword ptr [rip - 0x1975ff] ; call rax
0x00000200004bb20c : mov eax, dword ptr [rip - 0x223eea] ; call rax
0x000002000058d620 : mov eax, dword ptr [rip - 0x2a5446] ; ret
0x00000200005281fe : mov eax, dword ptr [rip - 0x2b4cf0] ; mov dword ptr [rcx + 8], eax ; ret
0x0000020000385416 : mov eax, dword ptr [rip - 0x2e34c] ; call rax
0x00000200005b6b0c : mov eax, dword ptr [rip - 0x342baa] ; call rax
0x000002000038f17e : mov eax, dword ptr [rip - 0x380b4] ; call rax
0x000002000063af00 : mov eax, dword ptr [rip - 0x3a433e] ; ret
0x0000020000624238 : mov eax, dword ptr [rip - 0x3b02d6] ; call rax
0x00000200003c0f47 : mov eax, dword ptr [rip - 0x69e7d] ; call rax
0x00000200003c1315 : mov eax, dword ptr [rip - 0x6a24b] ; call rax
0x00000200003e7142 : mov eax, dword ptr [rip - 0x90078] ; call rax
0x00000200005202d3 : mov eax, dword ptr [rsi + 0x24] ; mov ecx, dword ptr [rcx + 4] ; call 0x2000014bfe5
0x000002000057fac4 : mov eax, dword ptr [rsi + 0x28] ; mov rdx, rsi ; mov rcx, rdi ; call rax
0x000002000055f101 : mov eax, dword ptr [rsi + 0x38] ; xor edx, edx ; mov rcx, rdi ; call rax
0x00000200004474fd : mov eax, dword ptr [rsi + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x0000020000447b55 : mov eax, dword ptr [rsi + 0x68] ; mov dl, 1 ; mov rcx, r15 ; call r12
0x000002000042312e : mov eax, dword ptr [rsi + 0xc] ; mov qword ptr [r14], rax ; jmp 0x20000423100
0x000002000012f819 : mov eax, dword ptr [rsi + rdx*8] ; mov qword ptr [r11 + rdx*8], rax ; inc edx ; jmp 0x2000012f818
0x0000020000038173 : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x00000200000b4381 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x28 ; jmp rax
0x000002000049a62c : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x48 ; ret
0x0000020000596935 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x0000020000596917 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x00000200006f5d25 : mov eax, dword ptr [rsp + 0x28] ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000013ef88 : mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x0000020000107e6c : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x0000020000172c44 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x0000020000132a8d : mov eax, dword ptr [rsp + 0x30] ; test eax, eax ; jne 0x20000132ab0 ; ret
0x000002000011b977 : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000635cb : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x00000200005872e3 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b0e63 : mov eax, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 0x7c], eax ; call r9
0x0000020000601937 : mov eax, dword ptr [rsp + 0x44] ; jmp 0x2000046db82
0x000002000065acc8 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004eda2a : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x28 ; ret
0x00000200004f7c40 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x000002000041120e : mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000030232 : mov eax, dword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x0000020000468396 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000665f63 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000016852d : mov eax, dword ptr [rsp + 0x60] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003846d6 : mov eax, dword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x000002000064c68b : mov eax, dword ptr [rsp + 0x68] ; mov qword ptr [rcx + 0x58], rax ; ret
0x0000020000499e38 : mov eax, dword ptr [rsp + 0x70] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000040c33c : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000048edef : mov eax, dword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x0000020000541f1c : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000002000017bdb1 : mov eax, dword ptr [rsp] ; ret
0x000002000002990b : mov eax, eax ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000034af : mov eax, eax ; add rsp, 0x18 ; ret
0x000002000039cd26 : mov eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fa591 : mov eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001de7e : mov eax, eax ; add rsp, 0x28 ; ret
0x00000200005d2e98 : mov eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000157f4d : mov eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065990e : mov eax, eax ; add rsp, 0x38 ; jmp r9
0x00000200000d3062 : mov eax, eax ; add rsp, 0x38 ; ret
0x0000020000507d65 : mov eax, eax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000a96da : mov eax, eax ; add rsp, 8 ; ret
0x00000200000c82b0 : mov eax, eax ; call 0x200000e9479
0x00000200004f4094 : mov eax, eax ; call 0x200004f4111
0x00000200005fed14 : mov eax, eax ; call 0x200005729b4
0x00000200005bb4f5 : mov eax, eax ; call 0x200005bbab9
0x000002000048460c : mov eax, eax ; call rsi
0x0000020000138b86 : mov eax, eax ; div ecx ; ret
0x0000020000064b2b : mov eax, eax ; jne 0x20000064b34 ; ret
0x00000200000d9fe9 : mov eax, eax ; jne 0x200000da013 ; ret
0x000002000039a264 : mov eax, eax ; mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000003fa62 : mov eax, eax ; mov eax, r8d ; ret
0x00000200005aaf59 : mov eax, eax ; mov rcx, rbx ; call 0x200000771c7
0x00000200003d0258 : mov eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call r10
0x000002000015f8b8 : mov eax, eax ; mov rdx, rdi ; mov rcx, rbx ; call r10
0x000002000017fa9c : mov eax, eax ; mov word ptr [r9 + 0xa], cx ; ret
0x0000020000076d48 : mov eax, eax ; pop rbx ; ret
0x00000200000a3775 : mov eax, eax ; pop rsi ; pop rdi ; ret
0x000002000000a2e8 : mov eax, eax ; ret
0x000002000006c208 : mov eax, eax ; shl rax, 4 ; add rax, rcx ; ret
0x0000020000370c7f : mov eax, eax ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200005205d1 : mov eax, eax ; sub r9, r11 ; call 0x200001500c8
0x000002000017a482 : mov eax, eax ; wrmsr ; ret
0x000002000015af57 : mov eax, ebp ; call 0x200000771c4
0x0000020000640726 : mov eax, ebp ; call 0x20000270045
0x00000200004fb2a1 : mov eax, ebp ; call 0x200004fb309
0x00000200000d9ea2 : mov eax, ebp ; jmp 0x200000d9e0a
0x00000200006019ef : mov eax, ebp ; jmp 0x2000046dc7a
0x000002000015afb4 : mov eax, ebp ; mov dword ptr [rsi + 4], ebp ; call 0x200000771c7
0x0000020000645826 : mov eax, ebp ; mov edx, r14d ; mov rcx, rdi ; call r15
0x000002000014ed93 : mov eax, ebp ; mov edx, r15d ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x0000020000542ad7 : mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000e76d7 : mov eax, ebp ; mov rcx, r15 ; call rax
0x0000020000498b3c : mov eax, ebp ; mov rdx, rax ; mov rcx, rsi ; call r14
0x00000200006469df : mov eax, ebp ; mov rdx, rsi ; mov rcx, r12 ; call rax
0x000002000063dee2 : mov eax, ebp ; mov rdx, rsi ; mov rcx, r13 ; call r15
0x00000200001b2175 : mov eax, ebp ; mov rdx, rsi ; mov rcx, rdi ; call rax
0x000002000047a022 : mov eax, ebp ; xor edx, edx ; call 0x200000a3957
0x0000020000477690 : mov eax, ebx ; add ecx, 0x1c ; call r10
0x0000020000477550 : mov eax, ebx ; add ecx, 0x1c ; call rax
0x00000200000043ba : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000058402b : mov eax, ebx ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001aa9a : mov eax, ebx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e02ab : mov eax, ebx ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x0000020000020c4b : mov eax, ebx ; add rsp, 0x28 ; ret
0x00000200000d26a4 : mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014d487 : mov eax, ebx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013e7e1 : mov eax, ebx ; add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200004e00ea : mov eax, ebx ; add rsp, 0x38 ; ret
0x000002000047ae86 : mov eax, ebx ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000052111 : mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000592eeb : mov eax, ebx ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003ac83c : mov eax, ebx ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004dff31 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000002000046c59e : mov eax, ebx ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x00000200004fc7ce : mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000452af : mov eax, ebx ; add rsp, 0x58 ; pop rdi ; pop rbx ; ret
0x000002000001b5c9 : mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000117699 : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000002000012e1eb : mov eax, ebx ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000057f2f0 : mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000472570 : mov eax, ebx ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x000002000017121e : mov eax, ebx ; call rdi
0x00000200004841a7 : mov eax, ebx ; jmp 0x20000484177
0x00000200003e6190 : mov eax, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200005321eb : mov eax, ebx ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000015a2ab : mov eax, ebx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x0000020000132191 : mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000019afa5 : mov eax, ebx ; mov rcx, rbp ; call 0x200000771c7
0x000002000010580d : mov eax, ebx ; mov rcx, rdi ; call rax
0x0000020000067461 : mov eax, ebx ; mov rcx, rdi ; call rsi
0x00000200003cfa66 : mov eax, ebx ; mov rdx, rdi ; mov rcx, rbp ; call r15
0x0000020000164d76 : mov eax, ebx ; pop r15 ; pop r12 ; ret
0x0000020000148580 : mov eax, ebx ; pop r15 ; pop r14 ; ret
0x000002000056a97d : mov eax, ebx ; pop rdi ; ret
0x0000020000027230 : mov eax, ebx ; ret
0x000002000003c396 : mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000018f016 : mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000006740 : mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200001c7b5a : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x000002000015ad55 : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000006705 : mov eax, ecx ; add rsp, 0x38 ; ret
0x0000020000543df7 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000199053 : mov eax, ecx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000054c31 : mov eax, ecx ; add rsp, 0x48 ; ret
0x00000200003ab398 : mov eax, ecx ; add rsp, 0x50 ; pop r14 ; ret
0x000002000054dd24 : mov eax, ecx ; add rsp, 0x50 ; pop rsi ; ret
0x00000200000a5207 : mov eax, ecx ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200001843f9 : mov eax, ecx ; add rsp, 0x58 ; ret
0x0000020000054ac6 : mov eax, ecx ; add rsp, 0x68 ; ret
0x0000020000116f99 : mov eax, ecx ; jne 0x20000116fa2 ; ret
0x00000200005d3f19 : mov eax, ecx ; mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000543df5 : mov eax, ecx ; mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200007033a4 : mov eax, ecx ; mov ecx, 0x200 ; call r10
0x00000200005c7dd8 : mov eax, ecx ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x000002000047d71c : mov eax, ecx ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200004680ba : mov eax, ecx ; not eax ; and r12d, eax ; jmp 0x2000046808e
0x000002000000a078 : mov eax, ecx ; ret
0x000002000058dad0 : mov eax, ecx ; shr eax, 0x10 ; add eax, ecx ; ret
0x000002000041d40e : mov eax, ecx ; sub eax, r10d ; jmp 0x2000041d41c
0x00000200003de9b8 : mov eax, edi ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000050cd : mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039395e : mov eax, edi ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000387a7 : mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c2aa9 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000016e542 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c3292 : mov eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001487b0 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003b6e78 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001ac244 : mov eax, edi ; call 0x200001b847c
0x000002000064c563 : mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200003c378c : mov eax, edi ; mov rcx, rbp ; call rax
0x0000020000026b69 : mov eax, edi ; mov rcx, rbx ; call rax
0x00000200005515af : mov eax, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x000002000019f1f4 : mov eax, edi ; mov rdx, r13 ; call 0x2000014b4f7
0x00000200005c7b26 : mov eax, edi ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x0000020000510fdc : mov eax, edi ; mov rdx, rbp ; mov rcx, rsi ; call r14
0x0000020000645dce : mov eax, edi ; mov rdx, rbx ; mov rcx, r14 ; call r12
0x00000200004fa00c : mov eax, edi ; mov rdx, rsi ; call rax
0x00000200003d02cf : mov eax, edi ; mov rdx, rsi ; mov rcx, rbx ; call r11
0x00000200003b438c : mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200000a375d : mov eax, edi ; pop rsi ; pop rdi ; ret
0x00000200005c6a95 : mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa3
0x0000020000115e90 : mov eax, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000008293a : mov eax, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x00000200001a26b0 : mov eax, edx ; add qword ptr [rdx], rcx ; ret
0x00000200000fe7b9 : mov eax, edx ; add rsp, 0x118 ; ret
0x00000200004d6878 : mov eax, edx ; add rsp, 0x18 ; ret
0x000002000003efbc : mov eax, edx ; add rsp, 0x20 ; pop r14 ; ret
0x000002000016be7b : mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013a8e6 : mov eax, edx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000101b3e : mov eax, edx ; add rsp, 0x28 ; ret
0x0000020000046ee7 : mov eax, edx ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000549b81 : mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001be7d6 : mov eax, edx ; add rsp, 0x38 ; ret
0x000002000041b4d8 : mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001030e7 : mov eax, edx ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001a2ba5 : mov eax, edx ; add rsp, 0x48 ; ret
0x000002000041880d : mov eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000ee749 : mov eax, edx ; add rsp, 0x68 ; ret
0x000002000013f9bf : mov eax, edx ; cqo ; idiv rcx ; ret
0x00000200000034c5 : mov eax, edx ; jmp 0x20000003499
0x000002000001fc92 : mov eax, edx ; jmp 0x2000001fc1a
0x0000020000060d97 : mov eax, edx ; jmp 0x20000060d84
0x00000200000bdbd5 : mov eax, edx ; jmp 0x200000bdbcf
0x00000200000be691 : mov eax, edx ; jmp 0x200000be68b
0x00000200000da813 : mov eax, edx ; jmp 0x200000da798
0x00000200000ee259 : mov eax, edx ; jmp 0x200000ee220
0x00000200000ffd9a : mov eax, edx ; jmp 0x200000ffd1f
0x000002000013fb42 : mov eax, edx ; jmp 0x2000013fb2b
0x0000020000144c78 : mov eax, edx ; jmp 0x20000144c3a
0x000002000014d92b : mov eax, edx ; jmp 0x2000014d973
0x0000020000156071 : mov eax, edx ; jmp 0x20000156093
0x00000200001afa22 : mov eax, edx ; jmp 0x200001afa3b
0x00000200001b000c : mov eax, edx ; jmp 0x200001b002a
0x00000200001b41df : mov eax, edx ; jmp 0x200001b41f8
0x00000200001e4f40 : mov eax, edx ; jmp 0x200001e4f4e
0x00000200003e0283 : mov eax, edx ; jmp 0x200003e025c
0x0000020000460935 : mov eax, edx ; jmp 0x200004608d1
0x00000200004757ea : mov eax, edx ; jmp 0x200004757b1
0x00000200004a8007 : mov eax, edx ; jmp 0x200004a7ff1
0x000002000052b6f1 : mov eax, edx ; jmp 0x2000052b704
0x000002000056489f : mov eax, edx ; jmp 0x200005648b2
0x0000020000586319 : mov eax, edx ; jmp 0x20000586323
0x0000020000591902 : mov eax, edx ; jmp 0x2000059190e
0x00000200005d2261 : mov eax, edx ; jmp 0x200005d226b
0x000002000064abc1 : mov eax, edx ; jmp 0x2000064abcc
0x000002000069b265 : mov eax, edx ; jmp 0x2000069b26c
0x000002000069bbbd : mov eax, edx ; jmp 0x2000069bbfc
0x000002000069bf91 : mov eax, edx ; jmp 0x2000069bf98
0x000002000069c55f : mov eax, edx ; jmp 0x2000069c566
0x000002000069c69d : mov eax, edx ; jmp 0x2000069c6a4
0x000002000069ccd2 : mov eax, edx ; jmp 0x2000069ccd9
0x000002000069d0b6 : mov eax, edx ; jmp 0x2000069d0bd
0x000002000069dfae : mov eax, edx ; jmp 0x2000069dfb5
0x000002000069e494 : mov eax, edx ; jmp 0x2000069e49b
0x000002000069e761 : mov eax, edx ; jmp 0x2000069e768
0x000002000069e836 : mov eax, edx ; jmp 0x2000069e83d
0x000002000069f020 : mov eax, edx ; jmp 0x2000069f027
0x000002000069f96a : mov eax, edx ; jmp 0x2000069f971
0x000002000069fe2b : mov eax, edx ; jmp 0x2000069fe32
0x00000200006c8b0a : mov eax, edx ; jmp 0x200006c8ae9
0x00000200006d1d24 : mov eax, edx ; jmp 0x200006d1d2b
0x00000200006d2041 : mov eax, edx ; jmp 0x200006d2048
0x00000200006d24ec : mov eax, edx ; jmp 0x200006d24f3
0x00000200006d2991 : mov eax, edx ; jmp 0x200006d2998
0x00000200006d5f4f : mov eax, edx ; jmp 0x200006d5f56
0x00000200006d5fc0 : mov eax, edx ; jmp 0x200006d5fc7
0x00000200006d6a6b : mov eax, edx ; jmp 0x200006d6a72
0x00000200006d6d74 : mov eax, edx ; jmp 0x200006d6d7b
0x00000200006d7690 : mov eax, edx ; jmp 0x200006d7697
0x00000200006d8bc3 : mov eax, edx ; jmp 0x200006d8bca
0x00000200006d8edd : mov eax, edx ; jmp 0x200006d8ee4
0x00000200006da057 : mov eax, edx ; jmp 0x200006da05e
0x00000200006db5e6 : mov eax, edx ; jmp 0x200006db5ed
0x00000200006dcb69 : mov eax, edx ; jmp 0x200006dcb70
0x00000200006dce58 : mov eax, edx ; jmp 0x200006dce5f
0x00000200006de14e : mov eax, edx ; jmp 0x200006de155
0x00000200006de478 : mov eax, edx ; jmp 0x200006de47f
0x00000200006dea59 : mov eax, edx ; jmp 0x200006dea60
0x00000200006df4a8 : mov eax, edx ; jmp 0x200006df4af
0x00000200006df953 : mov eax, edx ; jmp 0x200006df95a
0x00000200006dfdae : mov eax, edx ; jmp 0x200006dfdb5
0x00000200006dfe84 : mov eax, edx ; jmp 0x200006dfe8b
0x00000200006e0295 : mov eax, edx ; jmp 0x200006e029c
0x00000200006e0678 : mov eax, edx ; jmp 0x200006e067f
0x00000200006e0a4d : mov eax, edx ; jmp 0x200006e0a54
0x00000200006e0e42 : mov eax, edx ; jmp 0x200006e0e49
0x00000200006e1248 : mov eax, edx ; jmp 0x200006e124f
0x00000200006e1649 : mov eax, edx ; jmp 0x200006e1650
0x00000200006e1a64 : mov eax, edx ; jmp 0x200006e1a6b
0x00000200006e1e65 : mov eax, edx ; jmp 0x200006e1e6c
0x00000200006e228a : mov eax, edx ; jmp 0x200006e2291
0x00000200006e2735 : mov eax, edx ; jmp 0x200006e273c
0x00000200006e2c0f : mov eax, edx ; jmp 0x200006e2c16
0x00000200006e31f3 : mov eax, edx ; jmp 0x200006e31fa
0x00000200006e37c0 : mov eax, edx ; jmp 0x200006e37c7
0x00000200006e3c76 : mov eax, edx ; jmp 0x200006e3c7d
0x00000200006e42a2 : mov eax, edx ; jmp 0x200006e42a9
0x00000200006e4774 : mov eax, edx ; jmp 0x200006e477b
0x00000200006e4c2e : mov eax, edx ; jmp 0x200006e4c35
0x00000200006e4f6c : mov eax, edx ; jmp 0x200006e4f73
0x00000200006e539b : mov eax, edx ; jmp 0x200006e53a2
0x00000200006e57ca : mov eax, edx ; jmp 0x200006e57d1
0x00000200006e5bf9 : mov eax, edx ; jmp 0x200006e5c00
0x00000200006e6039 : mov eax, edx ; jmp 0x200006e6040
0x00000200006e6469 : mov eax, edx ; jmp 0x200006e6470
0x00000200006eab70 : mov eax, edx ; jmp 0x200006eab7b
0x0000020000055ed4 : mov eax, edx ; jne 0x200001fb54c ; ret
0x00000200000b801f : mov eax, edx ; lock cmpxchg qword ptr [r8], rcx ; jne 0x200000b801b ; ret
0x00000200003cda0c : mov eax, edx ; lock xadd qword ptr [rcx - 0x10], rax ; ret
0x000002000013fb47 : mov eax, edx ; mov byte ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x000002000003e12b : mov eax, edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000058da23 : mov eax, edx ; mov rdx, r11 ; mov rcx, rbx ; call rax
0x0000020000076ec6 : mov eax, edx ; pop rbx ; ret
0x000002000001be9a : mov eax, edx ; ret
0x0000020000046712 : mov eax, edx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x200000466c8
0x000002000019bf48 : mov eax, edx ; shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x0000020000422857 : mov eax, esi ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000010df5 : mov eax, esi ; call rax
0x000002000062a64e : mov eax, esi ; jmp 0x20000386491
0x000002000064c1de : mov eax, esi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200001acb3c : mov eax, esi ; mov rcx, rdi ; call 0x200001a8d67
0x00000200000e74ad : mov eax, esi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200004d58f4 : mov eax, esi ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x00000200001aaf00 : mov eax, esi ; mov rdx, r15 ; call 0x200000771c7
0x00000200003abe84 : mov eax, esi ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000019a744 : mov eax, esi ; mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x00000200000f59ca : mov eax, esp ; add rsp, 0x30 ; pop r12 ; ret
0x00000200005b8820 : mov eax, esp ; call 0x20000054ad8
0x0000020000414d4b : mov eax, esp ; mov rcx, r13 ; call rax
0x0000020000025908 : mov eax, esp ; mov rcx, rdi ; call r14
0x00000200003b6c86 : mov eax, esp ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x000002000066771a : mov eax, esp ; xor edx, edx ; mov rcx, rax ; call 0x200000a3959
0x000002000016be7a : mov eax, r10d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000036b9de : mov eax, r10d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014aa2d : mov eax, r10d ; add rsp, 0x28 ; ret
0x000002000015955b : mov eax, r10d ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000549b80 : mov eax, r10d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001030e6 : mov eax, r10d ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004d0405 : mov eax, r10d ; add rsp, 0x48 ; ret
0x000002000001fc91 : mov eax, r10d ; jmp 0x2000001fc1b
0x0000020000060d96 : mov eax, r10d ; jmp 0x20000060d85
0x000002000013fb41 : mov eax, r10d ; jmp 0x2000013fb2c
0x0000020000025a5f : mov eax, r10d ; ret
0x000002000013fa0a : mov eax, r11d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001aa99 : mov eax, r11d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006686ad : mov eax, r11d ; add rsp, 0x28 ; ret
0x0000020000111a2b : mov eax, r11d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004b1f41 : mov eax, r11d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e00e9 : mov eax, r11d ; add rsp, 0x38 ; ret
0x000002000047ae85 : mov eax, r11d ; add rsp, 0x40 ; pop r14 ; ret
0x00000200003ac83b : mov eax, r11d ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005c2989 : mov eax, r11d ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000164d75 : mov eax, r11d ; pop r15 ; pop r12 ; ret
0x000002000014857f : mov eax, r11d ; pop r15 ; pop r14 ; ret
0x000002000056a97c : mov eax, r11d ; pop rdi ; ret
0x000002000002722f : mov eax, r11d ; ret
0x00000200000f59c9 : mov eax, r12d ; add rsp, 0x30 ; pop r12 ; ret
0x00000200000d9ea1 : mov eax, r13d ; jmp 0x200000d9e0b
0x00000200006019ee : mov eax, r13d ; jmp 0x2000046dc7b
0x0000020000422856 : mov eax, r14d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002990a : mov eax, r8d ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000034ae : mov eax, r8d ; add rsp, 0x18 ; ret
0x000002000039cd25 : mov eax, r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fa590 : mov eax, r8d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001de7d : mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000157f4c : mov eax, r8d ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000507d64 : mov eax, r8d ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000a96d9 : mov eax, r8d ; add rsp, 8 ; ret
0x0000020000138b85 : mov eax, r8d ; div ecx ; ret
0x000002000017fa9b : mov eax, r8d ; mov word ptr [r9 + 0xa], cx ; ret
0x000002000000d3c3 : mov eax, r8d ; ret
0x0000020000370c7e : mov eax, r8d ; shr rdx, 0x20 ; wrmsr ; ret
0x000002000017a481 : mov eax, r8d ; wrmsr ; ret
0x00000200001a7083 : mov eax, r9d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006ffc6 : mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200004fb1d9 : mov eax, r9d ; add rsp, 0x50 ; pop r14 ; ret
0x000002000000a077 : mov eax, r9d ; ret
0x000002000041d40d : mov eax, r9d ; sub eax, r10d ; jmp 0x2000041d41d
0x00000200006bd280 : mov ebp, 0x158d48ff ; call rsp
0x0000020000537fc0 : mov ebp, 0x1d8a44ff ; push rdi ; ret
0x0000020000538041 : mov ebp, 0x1d8a44ff ; salc ; ret 0xffd9
0x0000020000010e3a : mov ebp, 0x27aa ; setne al ; ret
0x0000020000189b40 : mov ebp, 0x2c ; jmp 0x20000189b7a
0x00000200006f9a55 : mov ebp, 0x35894cff ; ret 0xbdfd
0x00000200006605f2 : mov ebp, 0x3accffa1 ; ret 0x1b76
0x00000200001e4f3b : mov ebp, 0x440575c0 ; mov eax, edx ; jmp 0x200001e4f53
0x000002000002831f : mov ebp, 0x48000a8d ; add esp, 0x38 ; ret
0x00000200006c635f : mov ebp, 0x48ff943a ; add esp, 0x28 ; ret
0x00000200006c14b7 : mov ebp, 0x58b00ff ; insb byte ptr [rdi], dx ; ret 0xc7ff
0x0000020000448e75 : mov ebp, 0x74c085ff ; ret
0x00000200005587f8 : mov ebp, 0x80 ; add dword ptr [rax + rcx - 0x76], esi ; ret 0x5488
0x000002000054f519 : mov ebp, 0x8348fffa ; ret
0x000002000002b3a3 : mov ebp, 0x8949001a ; add bh, bh ; ret 0x8948
0x00000200005ba4cb : mov ebp, 0x8b000000 ; pop rdi ; adc bh, bh ; ret
0x000002000013dddf : mov ebp, 0x8b000b7c ; ret 0x4466
0x0000020000171ce3 : mov ebp, 0x8b001fa4 ; ret
0x0000020000397ba5 : mov ebp, 0x8b0028b1 ; ret
0x0000020000509b32 : mov ebp, 0x8b01b640 ; ret
0x0000020000146082 : mov ebp, 0x8b48000a ; ret
0x000002000061977f : mov ebp, 0x8bffa596 ; ret
0x000002000060d0af : mov ebp, 0x8bffa65c ; ret
0x000002000005513f : mov ebp, 0x8bfffabe ; ror dword ptr [rax - 0x75], -0x6c ; ret 0xf880
0x000002000042ee0f : mov ebp, 0x8bffffae ; ret
0x000002000051794e : mov ebp, 0x8de990ff ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000090f10 : mov ebp, 0xa73342c5 ; xlatb ; and eax, edi ; ret 0xf958
0x00000200004dd47b : mov ebp, 0xb60fffda ; ret
0x000002000016ff1a : mov ebp, 0xb60fffef ; ret
0x000002000015fece : mov ebp, 0xb60ffff0 ; ret
0x0000020000064c3b : mov ebp, 0xb70f41c9 ; ret 0xe0c1
0x0000020000054f4d : mov ebp, 0xc032c6eb ; ret
0x00000200004cd65c : mov ebp, 0xc0330015 ; add rsp, 0x28 ; ret
0x0000020000089eed : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000200004d215a : mov ebp, 0xc48348ff ; jo 0x200004d21c3 ; ret
0x000002000070e78f : mov ebp, 0xf6ff9951 ; ret
0x0000020000139d8f : mov ebp, 0xf6fff69b ; ret
0x000002000003d57a : mov ebp, 0xf6fffffa ; ret 0xf03
0x0000020000037600 : mov ebp, 0xff000000 ; ret 0x5189
0x0000020000121d2f : mov ebp, 0xff410017 ; ret 0x8d48
0x0000020000041f40 : mov ebp, 0xffeeb1e9 ; push rsi ; ret
0x000002000064adf8 : mov ebp, 1 ; call 0x20000270048
0x0000020000627390 : mov ebp, ds ; push rsi ; ret
0x000002000012d0d5 : mov ebp, dword ptr [rax - 0x37] ; adc al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x0000020000082d48 : mov ebp, dword ptr [rax] ; ret
0x000002000064041f : mov ebp, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop r15 ; ret
0x00000200003b449c : mov ebp, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b92e3 : mov ebp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000520ba4 : mov ebp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x000002000007714a : mov ebp, dword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x0000020000100f0e : mov ebp, dword ptr [rsp + 0x10] ; mov dword ptr [r11 + 0x18], ecx ; ret
0x0000020000124f80 : mov ebp, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000391aa7 : mov ebp, dword ptr [rsp + 0x28] ; pop rsi ; ret
0x000002000000cfa0 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c365b : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000032218 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000396459 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000cd038 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004caaef : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f6146 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000036f293 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049efd7 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001415e5 : mov ebp, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b2564 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000186549 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e1d32 : mov ebp, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000045c7aa : mov ebp, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000035539 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001ba663 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x000002000016991e : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rsi ; ret
0x00000200006449b3 : mov ebp, eax ; call 0x20000270045
0x0000020000646ead : mov ebp, eax ; call rbx
0x00000200006e3911 : mov ebp, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x000002000069dc91 : mov ebp, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x00000200001c6e72 : mov ebp, eax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x0000020000524fd0 : mov ebp, ebx ; mov rcx, r14 ; call 0x2000014cbd0
0x0000020000596d47 : mov ebp, ebx ; stosd dword ptr [rdi], eax ; inc dword ptr [rbp - 0xf38740] ; ret
0x0000020000479b2c : mov ebp, ecx ; call 0x200000a3955
0x00000200005c7c1d : mov ebp, ecx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000022f8d : mov ebp, ecx ; mov rcx, rsi ; call qword ptr [rbx]
0x0000020000705ab8 : mov ebp, ecx ; ret
0x00000200001c7a02 : mov ebp, edx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000017bba1 : mov ebp, edx ; call qword ptr [rax]
0x0000020000592b2a : mov ebp, edx ; mov ebx, 0xc0000002 ; call 0x2000001ed89
0x00000200006fe50c : mov ebp, es ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000520607 : mov ebp, esp ; call 0x2000014b799
0x0000020000090637 : mov ebp, esp ; ret 0x7431
0x0000020000520606 : mov ebp, r12d ; call 0x2000014b79a
0x00000200006c1afb : mov ebx, 0x15ff0001 ; movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; ret 0x33ff
0x00000200001bc046 : mov ebx, 0x20c48348 ; pop rbx ; ret
0x00000200005eb6c2 : mov ebx, 0x24c332ff ; add dword ptr [rdx], esi ; fdiv st(6) ; ret
0x00000200006c52f6 : mov ebx, 0x3b0cebff ; ret 0x876
0x0000020000498ae6 : mov ebx, 0x3bc0ffff ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200000edb30 : mov ebx, 0x3bfffffa ; ret 0x1976
0x00000200006e272f : mov ebx, 0x3d0 ; mov rax, rdx ; jmp 0x200006e2742
0x00000200006fed39 : mov ebx, 0x480000fc ; mov eax, ecx ; ret
0x0000020000129509 : mov ebx, 0x480039f8 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006e7a62 : mov ebx, 0x4890ff98 ; add esp, 0x20 ; pop rbp ; ret
0x00000200005d34fd : mov ebx, 0x4890ffc9 ; add esp, 0x20 ; pop rbp ; ret
0x00000200005d34cb : mov ebx, 0x4890ffc9 ; add esp, 0x50 ; pop rbp ; ret
0x00000200005735ef : mov ebx, 0x48c00000 ; add esp, 0x28 ; ret
0x00000200001a1c03 : mov ebx, 0x48c00000 ; add esp, 0x50 ; pop rbx ; ret
0x00000200005045ac : mov ebx, 0x48c033ff ; add esp, 0x30 ; pop rbx ; ret
0x00000200006607bd : mov ebx, 0x48ccffa1 ; add esp, 0x38 ; ret
0x0000020000570691 : mov ebx, 0x48ffb347 ; add esp, 0x58 ; ret
0x000002000052a791 : mov ebx, 0x48ffb7a6 ; add esp, 0x68 ; ret
0x00000200001a3c99 : mov ebx, 0x48ffe740 ; add esp, 0x38 ; ret
0x00000200001bc791 : mov ebx, 0x48ffee86 ; add esp, 0x60 ; pop rbp ; ret
0x000002000017b691 : mov ebx, 0x48fff297 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000172091 : mov ebx, 0x48fff32d ; add esp, 0x70 ; pop rbp ; ret
0x00000200005c499d : mov ebx, 0x75c00000 ; or bh, bh ; ret
0x0000020000091660 : mov ebx, 0x76b2d7d0 ; ret 0xbb54
0x0000020000370d72 : mov ebx, 0x83ffff41 ; call qword ptr [rdi]
0x000002000001f3ea : mov ebx, 0x850fd284 ; ret 4
0x0000020000708f8e : mov ebx, 0x8b44fffb ; ret
0x0000020000105806 : mov ebx, 0x8b48000c ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000708fb8 : mov ebx, 0x8b49fffb ; ret
0x000002000051483f : mov ebx, 0x8bc00000 ; ret
0x00000200006309a2 : mov ebx, 0x8bffd79f ; ret
0x00000200005f010d : mov ebx, 0xb60fffa7 ; ret
0x00000200005ebecc : mov ebx, 0xb60fffe5 ; ret 0xf44
0x00000200001600d2 : mov ebx, 0xb60ffff0 ; ret
0x0000020000089eeb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000020000592ab0 : mov ebx, 0xc0000002 ; call 0x2000001ed87
0x00000200001f7f97 : mov ebx, 0xc000000d ; jmp 0x20000034263
0x00000200004fd924 : mov ebx, 0xc000000d ; jmp 0x200004fd8f4
0x00000200003684f3 : mov ebx, 0xc0000017 ; jmp 0x200003684bc
0x00000200001043b8 : mov ebx, 0xc0000024 ; jmp 0x20000104388
0x0000020000632d24 : mov ebx, 0xc000009a ; call 0x2000026f017
0x00000200004ffe04 : mov ebx, 0xc000009a ; jmp 0x200004ffdd3
0x0000020000523e6e : mov ebx, 0xc000009a ; jmp 0x20000523e3e
0x00000200006c2638 : mov ebx, 0xc000009a ; jmp 0x200006c2608
0x00000200005c4d9f : mov ebx, 0xc00000e5 ; jmp 0x200005c4d6f
0x0000020000257cf4 : mov ebx, 0xc3005ac3 ; ret
0x00000200004eb0be : mov ebx, 0xc48348ff ; pop rax ; ret
0x0000020000039e00 : mov ebx, 0xd0 ; jmp 0x20000039dd0
0x00000200001e9294 : mov ebx, 0xe29695e9 ; dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200006bd684 : mov ebx, 0xe2c148ff ; and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x0000020000439c13 : mov ebx, 0xe8ce8b48 ; in al, -0x52 ; ret 0xebff
0x000002000057e9e1 : mov ebx, 0xe8ffd1a3 ; ret
0x00000200006000ae : mov ebx, 0xe990ffa6 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200001a8ef4 : mov ebx, 0xe9c00000 ; ret
0x00000200006289d4 : mov ebx, 0xe9c00000 ; ret 0xe45a
0x00000200000b5ec6 : mov ebx, 0xe9fffffe ; ret 0xf647
0x000002000048582b : mov ebx, 0xeafee8e0 ; ret 0x8bff
0x000002000066079d : mov ebx, 0xf6ccffa1 ; ret 0x7502
0x00000200003aa3f5 : mov ebx, 0xf7002862 ; ret
0x00000200004a0647 : mov ebx, 0xfc085ff ; xchg eax, esp ; ret
0x00000200006c2177 : mov ebx, 0xff4d77ff ; ret
0x000002000003c6cb : mov ebx, 0xffff70e9 ; dec dword ptr [rax - 0x39] ; ret 0xd300
0x0000020000489587 : mov ebx, 2 ; call 0x200000b6728
0x00000200001a5994 : mov ebx, dword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0xed0
0x0000020000406b8a : mov ebx, dword ptr [rbp - 0x40] ; mov rcx, rbx ; call 0x20000072e48
0x000002000048f553 : mov ebx, dword ptr [rbp - 0x49] ; jmp 0x2000048f51f
0x000002000039afa1 : mov ebx, dword ptr [rbp - 0x61] ; jmp 0x2000039af6d
0x00000200004c9bac : mov ebx, dword ptr [rbp - 0x61] ; jmp 0x200004c9b78
0x000002000007c1ab : mov ebx, dword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200003b587e : mov ebx, dword ptr [rbp - 0x71] ; jmp 0x200003b5849
0x000002000000f382 : mov ebx, dword ptr [rbx] ; jmp 0x2000000f34b
0x00000200004890a8 : mov ebx, dword ptr [rbx] ; mov rdx, rdi ; call rsi
0x00000200001b8c71 : mov ebx, dword ptr [rcx + rax*8 + 0x10] ; jmp 0x200001b8c83
0x000002000064ef32 : mov ebx, dword ptr [rcx] ; xor edx, edx ; call 0x2000026f017
0x0000020000185824 : mov ebx, dword ptr [rdi] ; mov rcx, rdi ; call 0x20000181a3f
0x000002000016c23d : mov ebx, dword ptr [rip + 0x11555d] ; call r11
0x00000200005f6b67 : mov ebx, dword ptr [rip - 0x3753a5] ; jmp 0x20000482e14
0x0000020000085de8 : mov ebx, dword ptr [rsi - 0x51e2d327] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x00000200004ecaf9 : mov ebx, dword ptr [rsi] ; inc rdx ; jmp 0x200004ecae3
0x00000200000ca82f : mov ebx, dword ptr [rsp + 0x10] ; ret
0x00000200000ca893 : mov ebx, dword ptr [rsp + 0x10] ; xor eax, eax ; ret
0x000002000002fd86 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x00000200003b9dba : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000196569 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000003403 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002f131 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000ad030 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000200007054e2 : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x200007054b0
0x000002000000e08a : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005bdc07 : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000c4326 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d52f2 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200006512fe : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000020aa6 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006af75 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000006d069 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; ret
0x00000200003e1564 : mov ebx, dword ptr [rsp + 0x40] ; mov rcx, rbx ; call 0x200000bd7b9
0x00000200000b05ef : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000067a89 : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003704c : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fdfe : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000b029d : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cb52a : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001340da : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000001b1bf : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004f8410 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rsi ; ret
0x000002000014050c : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049bf1f : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000019c338 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000001280b : mov ebx, dword ptr [rsp + 0x58] ; jmp 0x2000001285e
0x00000200004d7a63 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003781b4 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rsi ; ret
0x000002000014a494 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001079ac : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200005ab741 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001bfcb4 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000191c2b : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200006c5a9d : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x00000200001a336b : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000154402 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rbp ; ret
0x000002000004fdb8 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x000002000019511c : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000171d97 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x000002000012a0ad : mov ebx, dword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200000d25e0 : mov ebx, dword ptr [rsp + 8] ; mov dword ptr [r10 + 0xc], r9d ; ret
0x0000020000159c6d : mov ebx, dword ptr [rsp + 8] ; mov dword ptr [r8], r10d ; ret
0x00000200003daf3a : mov ebx, dword ptr [rsp + 8] ; mov dword ptr [rcx + 0x7c], eax ; ret
0x00000200003a80ef : mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000039c53 : mov ebx, dword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000105efc : mov ebx, dword ptr [rsp + 8] ; mov eax, r11d ; ret
0x000002000010eb2d : mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000142d16 : mov ebx, dword ptr [rsp + 8] ; mov rax, r10 ; ret
0x00000200001829a7 : mov ebx, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000006c1be : mov ebx, dword ptr [rsp + 8] ; mov rax, rdx ; ret
0x0000020000002fa0 : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000003e9e0 : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000004c0e1 : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200001c2c14 : mov ebx, dword ptr [rsp + 8] ; mov word ptr [r10], cx ; ret
0x0000020000588f59 : mov ebx, dword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x00000200000220ca : mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001c2d07 : mov ebx, dword ptr [rsp + 8] ; xor eax, eax ; ret
0x0000020000061a68 : mov ebx, dword ptr [rsp] ; add rsp, 8 ; ret
0x00000200003ecfde : mov ebx, dword ptr [rsp] ; call 0x200000a92d5
0x0000020000592ae4 : mov ebx, eax ; call 0x2000001edcc
0x000002000041a4ca : mov ebx, eax ; call 0x2000004969d
0x0000020000123706 : mov ebx, eax ; call 0x2000006f960
0x00000200004b0de9 : mov ebx, eax ; call 0x2000007d0e4
0x000002000002fc8e : mov ebx, eax ; jmp 0x2000002fb35
0x00000200001f7ff7 : mov ebx, eax ; jmp 0x20000034260
0x00000200004307f1 : mov ebx, eax ; jmp 0x200004307ba
0x000002000058624d : mov ebx, eax ; jmp 0x2000058625d
0x0000020000574c24 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003c832d : mov ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004c9d55 : mov ebx, ebx ; jmp 0x200004c9d1e
0x000002000000e1e4 : mov ebx, ecx ; call 0x2000000e0a4
0x000002000010d8f6 : mov ebx, ecx ; call 0x2000002e6bd
0x00000200005a7723 : mov ebx, ecx ; call 0x200000a3954
0x0000020000055f11 : mov ebx, ecx ; call 0x200000e21f4
0x0000020000576d87 : mov ebx, ecx ; call 0x2000019a571
0x000002000017bc17 : mov ebx, ecx ; call qword ptr [rax]
0x00000200004890e2 : mov ebx, ecx ; call qword ptr [rdi]
0x00000200005b4790 : mov ebx, ecx ; dec dword ptr [rbx + 0x35894cd8] ; insb byte ptr [rdi], dx ; ret 0xffcd
0x00000200003c4dac : mov ebx, ecx ; jne 0x200003c4dbf ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000477079 : mov ebx, ecx ; lea r8d, dword ptr [rdx + 0x58] ; call 0x200000a3959
0x00000200004b952b : mov ebx, ecx ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000051d700 : mov ebx, ecx ; mov rsi, r8 ; call 0x2000014a220
0x000002000064c197 : mov ebx, ecx ; test rax, rax ; je 0x2000064c1aa ; call rax
0x00000200004de48b : mov ebx, edi ; call 0x2000014a78c
0x000002000017bcfd : mov ebx, edx ; call qword ptr [rax]
0x0000020000526676 : mov ebx, edx ; mov rsi, rcx ; call 0x20000152e18
0x0000020000091089 : mov ebx, edx ; ret
0x000002000013ac73 : mov ebx, esi ; inc dword ptr [rbp - 0xf98b40] ; ret
0x000002000051e499 : mov ebx, fs ; push qword ptr [rdx - 0x75] ; ret
0x00000200004c9d54 : mov ebx, r11d ; jmp 0x200004c9d1f
0x00000200006f8a58 : mov ecx, 0x1d894cff ; call qword ptr [rbx]
0x00000200005b7d9a : mov ecx, 0x1e6 ; jne 0x200005b7daf ; call 0x20000023fb9
0x00000200001a98f7 : mov ecx, 0x20 ; call 0x200001b5b27
0x000002000064e0e8 : mov ecx, 0x200 ; call 0x20000270048
0x000002000064e0e7 : mov ecx, 0x200 ; call 0x20000270049
0x00000200007033a6 : mov ecx, 0x200 ; call r10
0x000002000070377b : mov ecx, 0x200 ; call r9
0x0000020000506c51 : mov ecx, 0x2bba0fff ; or cl, byte ptr [rax - 0x75] ; ret
0x00000200006f91bb : mov ecx, 0x2ff ; add byte ptr [rcx - 0xa], al ; ret
0x00000200003dcb3c : mov ecx, 0x4010001f ; call 0x200000f8e37
0x00000200004e435f : mov ecx, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x0000020000564b93 : mov ecx, 0x48ffb402 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000150f33 : mov ecx, 0x48ffecde ; add esp, 0x38 ; ret
0x00000200000e902e : mov ecx, 0x48fff249 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000057ac8 : mov ecx, 0x530b0019 ; je 0x20000057acd ; ret 0xf60
0x00000200006f529d : mov ecx, 0x5c701ff ; ret 0xb962
0x0000020000081919 : mov ecx, 0x66eb ; add byte ptr [rax], al ; ret 0x2fe1
0x0000020000091bdf : mov ecx, 0x79682177 ; ret
0x000002000008fd62 : mov ecx, 0x79daa6e7 ; ret
0x00000200004a6b68 : mov ecx, 0x800c ; call rax
0x00000200006f2d5a : mov ecx, 0x81480ce9 ; ret 0xa2
0x0000020000007333 : mov ecx, 0x8b00053e ; ret
0x00000200004dac1a : mov ecx, 0x8b0012b4 ; ret
0x00000200004a6c53 : mov ecx, 0x8bffdc83 ; ret
0x0000020000473253 : mov ecx, 0x8bffdfbd ; ret
0x000002000008e024 : mov ecx, 0xb5b5889b ; ret
0x0000020000089ee9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000200005eef1f : mov ecx, 0xc0000001 ; jmp 0x200004fb1cc
0x0000020000513afc : mov ecx, 0xc48348ff ; jo 0x20000513b6b ; pop rsi ; pop rbx ; ret
0x00000200004b8ed0 : mov ecx, 0xc48348ff ; pop rax ; ret
0x00000200006f6205 : mov ecx, 0xc48348ff ; pop rbx ; ret
0x00000200004e7ace : mov ecx, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200004d0160 : mov ecx, 0xc48348ff ; ret
0x000002000008ef95 : mov ecx, 0xcac82fee ; jne 0x2000008ef2f ; ret 0x5e78
0x00000200000dd6c0 : mov ecx, 0xd000dc3 ; ret 0xd
0x000002000009f84c : mov ecx, 0xe46b5c0 ; ret 0x2b84
0x000002000007e675 : mov ecx, 0xe9000000 ; ret 0xffc9
0x0000020000076fe8 : mov ecx, 0xf0 ; ret
0x0000020000077098 : mov ecx, 0xf0 ; xor eax, eax ; ret
0x00000200000d52d6 : mov ecx, 0xf6000007 ; ret
0x0000020000407f6f : mov ecx, 0xf6002086 ; ret
0x00000200003df830 : mov ecx, 0xf6410022 ; ret
0x0000020000361d99 : mov ecx, 0xffe80014 ; ret 0xffff
0x00000200000e2b83 : mov ecx, 1 ; call 0x200000aee27
0x00000200004ebdd2 : mov ecx, 1 ; call r8
0x000002000015986b : mov ecx, 1 ; call rax
0x00000200001b8d93 : mov ecx, 1 ; mov eax, r9d ; ret
0x000002000038e90c : mov ecx, 2 ; call 0x200001babe7
0x00000200005c7d38 : mov ecx, 2 ; call rax
0x0000020000608e3c : mov ecx, 2 ; jmp 0x20000608e60
0x0000020000152534 : mov ecx, 2 ; mov cr8, rcx ; ret
0x00000200005b51ef : mov ecx, 3 ; call rax
0x00000200000322a1 : mov ecx, 3 ; int 0x29
0x00000200005b8851 : mov ecx, 4 ; call 0x20000054adb
0x00000200005b8850 : mov ecx, 4 ; call 0x20000054adc
0x00000200005b884f : mov ecx, 4 ; call 0x20000054add
0x00000200000312a6 : mov ecx, 5 ; call 0x200000ad523
0x000002000041b4f9 : mov ecx, 8 ; jmp 0x2000041b4c9
0x00000200001738f2 : mov ecx, 8 ; mov eax, ecx ; ret
0x00000200005b881b : mov ecx, dword ptr [r12] ; mov r8, r12 ; call 0x20000054add
0x00000200000be619 : mov ecx, dword ptr [rax + 0x10] ; xor eax, eax ; mov dword ptr [rdx + 0xc], ecx ; ret
0x0000020000565916 : mov ecx, dword ptr [rax + 0x138] ; call 0x200001935d1
0x00000200001362d7 : mov ecx, dword ptr [rax + 0x14] ; cmp r9d, ecx ; jb 0x200001362c6 ; ret
0x00000200001684dd : mov ecx, dword ptr [rax + 0x18] ; test rcx, rcx ; je 0x200001684f1 ; jmp rcx
0x0000020000159e08 : mov ecx, dword ptr [rax + 0x30] ; call r9
0x00000200000ee22c : mov ecx, dword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000ee1ff
0x000002000036f585 : mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x0000020000165ca4 : mov ecx, dword ptr [rax + 8] ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000168499 : mov ecx, dword ptr [rax + 8] ; test rcx, rcx ; je 0x200001684ab ; call rcx
0x00000200003960f4 : mov ecx, dword ptr [rax - 0x18000000] ; ret 0xc54
0x00000200000af4f0 : mov ecx, dword ptr [rax - 0x7f] ; ret
0x00000200003f4c87 : mov ecx, dword ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000200005498bc : mov ecx, dword ptr [rax] ; cmp rcx, rax ; jbe 0x200005498cf ; xor eax, eax ; ret
0x00000200006f5d29 : mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000048457e : mov ecx, dword ptr [rbp + 0x10] ; xor rcx, rsp ; call 0x200000a4e59
0x000002000055fda3 : mov ecx, dword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x00000200004821ff : mov ecx, dword ptr [rbp + 0x17] ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000118c38 : mov ecx, dword ptr [rbp + 0x27] ; xor rcx, rsp ; call 0x200000a4e58
0x0000020000476ea8 : mov ecx, dword ptr [rbp + 0x27] ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000019e9c : mov ecx, dword ptr [rbp + 0x28] ; call rax
0x00000200001c7766 : mov ecx, dword ptr [rbp + 0x30] ; call rax
0x0000020000478cdd : mov ecx, dword ptr [rbp + 0x37] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200000194d1 : mov ecx, dword ptr [rbp + 0x38] ; call rax
0x00000200001044c0 : mov ecx, dword ptr [rbp + 0x40] ; call rax
0x000002000048490b : mov ecx, dword ptr [rbp + 0x40] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200005a8bf9 : mov ecx, dword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x200000a4e58
0x00000200005562c4 : mov ecx, dword ptr [rbp + 0x48] ; mov qword ptr [rsp + 0x20], rdi ; call r15
0x0000020000481e6d : mov ecx, dword ptr [rbp + 0x60] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200001c7602 : mov ecx, dword ptr [rbp + 0x68] ; call 0x200000d38f5
0x000002000062c132 : mov ecx, dword ptr [rbp + 0x68] ; xor edx, edx ; call r14
0x000002000012c0d1 : mov ecx, dword ptr [rbp + 0x80] ; mov edx, r15d ; call rax
0x0000020000479aad : mov ecx, dword ptr [rbp + 0xf] ; xor rcx, rsp ; call 0x200000a4e59
0x000002000047bde3 : mov ecx, dword ptr [rbp + 7] ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000178b85 : mov ecx, dword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x200000a4e58
0x0000020000476b7e : mov ecx, dword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x200000a4e59
0x000002000048b9cf : mov ecx, dword ptr [rbp - 0x11] ; call rax
0x0000020000443b0c : mov ecx, dword ptr [rbp - 0x29] ; call 0x20000072e46
0x00000200005ff845 : mov ecx, dword ptr [rbp - 0x49] ; call 0x20000377be5
0x0000020000443fa3 : mov ecx, dword ptr [rbp - 0x59] ; call 0x20000072e46
0x00000200004fa008 : mov ecx, dword ptr [rbp - 0x61] ; mov r8, r15 ; mov rdx, rsi ; call rax
0x0000020000480107 : mov ecx, dword ptr [rbp - 1] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200004e8bd2 : mov ecx, dword ptr [rbp - 8] ; xor rcx, rsp ; call 0x200000a4e58
0x00000200004909f4 : mov ecx, dword ptr [rbx + 0x20] ; call 0x200000b5016
0x00000200005c7a03 : mov ecx, dword ptr [rbx + 0x20] ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x000002000037fb8a : mov ecx, dword ptr [rbx + 0x28] ; call rax
0x000002000041f486 : mov ecx, dword ptr [rbx + 0x3d0] ; xor r8d, r8d ; call rax
0x0000020000426391 : mov ecx, dword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200004918ed : mov ecx, dword ptr [rbx + 0x48] ; call 0x200000b9b06
0x00000200004918b8 : mov ecx, dword ptr [rbx + 0x48] ; mov dl, dil ; call 0x200000b9889
0x0000020000192aef : mov ecx, dword ptr [rbx + 0x80] ; call r11
0x00000200000f6123 : mov ecx, dword ptr [rbx + 0xd8] ; mov dl, 1 ; call qword ptr [r11]
0x0000020000460a54 : mov ecx, dword ptr [rbx + 8] ; call 0x20000067ea9
0x000002000064ad53 : mov ecx, dword ptr [rbx + 8] ; mov rdx, r14 ; call r11
0x00000200005a8024 : mov ecx, dword ptr [rbx - 0xcfdbbc] ; ret 0xd03b
0x00000200001d8bbc : mov ecx, dword ptr [rbx] ; call 0x2000000dbb9
0x000002000049d1a0 : mov ecx, dword ptr [rbx] ; call 0x20000020fc9
0x0000020000423b3f : mov ecx, dword ptr [rbx] ; call 0x2000004ff89
0x000002000001d0da : mov ecx, dword ptr [rbx] ; call 0x20000072e49
0x000002000011a316 : mov ecx, dword ptr [rbx] ; call 0x2000011a2d9
0x00000200004fe152 : mov ecx, dword ptr [rbx] ; call 0x20000143715
0x00000200001826f9 : mov ecx, dword ptr [rbx] ; call 0x20000181d89
0x000002000039b9bc : mov ecx, dword ptr [rbx] ; call 0x2000039bc85
0x00000200003b2f30 : mov ecx, dword ptr [rbx] ; call 0x200003b321d
0x00000200005a503e : mov ecx, dword ptr [rbx] ; call 0x20000510879
0x000002000017a536 : mov ecx, dword ptr [rbx] ; call rax
0x0000020000062a88 : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x20000062a8d ; ret
0x000002000006347b : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x20000063480 ; ret
0x00000200001bfcea : mov ecx, dword ptr [rcx + 0x14] ; cmp r8d, ecx ; jb 0x200001bfcd6 ; ret
0x0000020000396b8c : mov ecx, dword ptr [rcx + 0x20] ; call 0x20000072e45
0x0000020000029384 : mov ecx, dword ptr [rcx + 0x28] ; call rdi
0x0000020000171b1a : mov ecx, dword ptr [rcx + 0x2988] ; call rax
0x0000020000426c68 : mov ecx, dword ptr [rcx + 0x2e0] ; call rax
0x00000200005dd878 : mov ecx, dword ptr [rcx + 0x628] ; call 0x200000b9b08
0x000002000059971e : mov ecx, dword ptr [rcx + 2] ; mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x00000200005202d6 : mov ecx, dword ptr [rcx + 4] ; call 0x2000014bfe2
0x00000200001183cc : mov ecx, dword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; ret
0x00000200004d482a : mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200003d9380 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x000002000017bcf9 : mov ecx, dword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000014b503 : mov ecx, dword ptr [rcx + 8] ; mov rdi, r8 ; mov rsi, rdx ; call qword ptr [rbx]
0x000002000004d67a : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x2000004d67f ; ret
0x0000020000059a24 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x20000059a29 ; ret
0x000002000019abcf : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x2000019abd4 ; ret
0x000002000064081b : mov ecx, dword ptr [rcx + 8] ; xor edx, edx ; call 0x2000026f018
0x00000200004ed795 : mov ecx, dword ptr [rcx + 8] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200001b960e : mov ecx, dword ptr [rcx] ; cmp r8, rcx ; jne 0x200001b9604 ; ret
0x0000020000388f96 : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rcx ; ret
0x00000200001605c3 : mov ecx, dword ptr [rcx] ; test r9, r9 ; jne 0x200001605ab ; xor eax, eax ; ret
0x00000200004b59e7 : mov ecx, dword ptr [rdi + 0x18] ; mov rdx, rdi ; call 0x200000d5ba9
0x00000200005f7ce7 : mov ecx, dword ptr [rdi + 0x30] ; call rdx
0x00000200004a1346 : mov ecx, dword ptr [rdi + 0x628] ; call 0x200000c85e9
0x00000200001efa5c : mov ecx, dword ptr [rdi + 0x80] ; mov edx, esi ; call rax
0x00000200004fe8c7 : mov ecx, dword ptr [rdi] ; add dh, dh ; ret 0x7504
0x0000020000156e8c : mov ecx, dword ptr [rdi] ; call 0x2000013e5d9
0x0000020000462de3 : mov ecx, dword ptr [rdi] ; xor edx, edx ; call 0x2000026f016
0x0000020000195c4d : mov ecx, dword ptr [rdx + 0x18] ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000171217 : mov ecx, dword ptr [rdx + 0x2988] ; mov r8, rbx ; call rdi
0x000002000014012b : mov ecx, dword ptr [rdx + 0xc] ; cmp eax, ecx ; ja 0x2000014013e ; sbb eax, eax ; ret
0x0000020000175049 : mov ecx, dword ptr [rdx + rax*8 + 8] ; xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x0000020000640c71 : mov ecx, dword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200003d9371 : mov ecx, dword ptr [rdx] ; cmp r8, rcx ; jne 0x200003d9384 ; xor eax, eax ; ret
0x00000200001184ec : mov ecx, dword ptr [rip + 0x171852] ; call rax
0x000002000013cb8d : mov ecx, dword ptr [rip + 0x210845] ; call qword ptr [rcx]
0x00000200000ddbad : mov ecx, dword ptr [rip + 0x26f825] ; call qword ptr [rcx]
0x0000020000076663 : mov ecx, dword ptr [rip + 0x2d6d6f] ; call qword ptr [rcx]
0x0000020000075f0c : mov ecx, dword ptr [rip + 0x2d74c6] ; call qword ptr [rcx]
0x0000020000075bba : mov ecx, dword ptr [rip + 0x2d7818] ; call qword ptr [rcx]
0x00000200000757f0 : mov ecx, dword ptr [rip + 0x2d7be2] ; call qword ptr [rcx]
0x0000020000075470 : mov ecx, dword ptr [rip + 0x2d7f62] ; call qword ptr [rcx]
0x0000020000074fbc : mov ecx, dword ptr [rip + 0x2d8416] ; call qword ptr [rcx]
0x0000020000074d62 : mov ecx, dword ptr [rip + 0x2d8670] ; call qword ptr [rcx]
0x0000020000073ebf : mov ecx, dword ptr [rip + 0x2d9513] ; call qword ptr [rcx]
0x000002000007136f : mov ecx, dword ptr [rip + 0x2dc063] ; call qword ptr [rcx]
0x000002000006f9e4 : mov ecx, dword ptr [rip + 0x2e7622] ; mov eax, ecx ; ret
0x00000200001f0260 : mov ecx, dword ptr [rip + 0x99ae2] ; call rax
0x00000200003b50e9 : mov ecx, dword ptr [rip - 0x133907] ; call rax
0x00000200005484ab : mov ecx, dword ptr [rip - 0x1f13e1] ; call r9
0x000002000054bf93 : mov ecx, dword ptr [rip - 0x1f4ec9] ; call r9
0x000002000054cac0 : mov ecx, dword ptr [rip - 0x1f59f6] ; call r9
0x0000020000381283 : mov ecx, dword ptr [rip - 0x2a1b9] ; call r9
0x000002000052e81e : mov ecx, dword ptr [rip - 0x2adac4] ; call r11
0x00000200005516fd : mov ecx, dword ptr [rip - 0x2cff1b] ; call rax
0x0000020000641bfb : mov ecx, dword ptr [rip - 0x3ca0c5] ; call rax
0x00000200003a5d2a : mov ecx, dword ptr [rip - 0x4ec60] ; call r9
0x00000200003bf9ad : mov ecx, dword ptr [rip - 0x688e3] ; call r9
0x00000200003c9f9d : mov ecx, dword ptr [rip - 0x72ed3] ; call r9
0x000002000041837c : mov ecx, dword ptr [rsi + 0x10] ; inc dword ptr [rcx + 4] ; jmp 0x2000041834d
0x0000020000644c76 : mov ecx, dword ptr [rsi + 0x10] ; mov byte ptr [rsp + 0x20], r14b ; call r15
0x0000020000401e01 : mov ecx, dword ptr [rsi + 0x10] ; mov rdx, qword ptr [r14 + 8] ; call rax
0x00000200006448d3 : mov ecx, dword ptr [rsi + 0x10] ; xor edx, edx ; call 0x2000026f018
0x0000020000053df5 : mov ecx, dword ptr [rsi + 0x28] ; call 0x20000050095
0x0000020000361049 : mov ecx, dword ptr [rsi + 0x28] ; call qword ptr [rax]
0x000002000042b808 : mov ecx, dword ptr [rsi + 0x3d0] ; call rax
0x0000020000493d90 : mov ecx, dword ptr [rsi + 0x48] ; call 0x200000bf2c6
0x00000200004475a8 : mov ecx, dword ptr [rsi + 0x60] ; call 0x200000771c6
0x000002000017b9e2 : mov ecx, dword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000037b641 : mov ecx, dword ptr [rsi - 0x32] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x26ae
0x0000020000644b15 : mov ecx, dword ptr [rsi] ; xor edx, edx ; call 0x2000026f017
0x00000200005aaea9 : mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x0000020000445b04 : mov ecx, dword ptr [rsp + 0x30] ; call 0x20000072e47
0x0000020000640906 : mov ecx, dword ptr [rsp + 0x30] ; call 0x2000026f017
0x0000020000433b06 : mov ecx, dword ptr [rsp + 0x30] ; call rax
0x00000200004b0de5 : mov ecx, dword ptr [rsp + 0x30] ; mov ebx, eax ; call 0x2000007d0e8
0x0000020000172a9e : mov ecx, dword ptr [rsp + 0x38] ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x0000020000449d06 : mov ecx, dword ptr [rsp + 0x40] ; call 0x20000072e47
0x00000200003f0bb5 : mov ecx, dword ptr [rsp + 0x40] ; call r10
0x00000200004cfa97 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000f22c7
0x00000200004cfaaf : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000f8d57
0x0000020000431ff9 : mov ecx, dword ptr [rsp + 0x48] ; call rax
0x0000020000492dea : mov ecx, dword ptr [rsp + 0x48] ; xor edx, edx ; call 0x2000026f018
0x0000020000074dbc : mov ecx, dword ptr [rsp + 0x50] ; call rdx
0x00000200005d5b8a : mov ecx, dword ptr [rsp + 0x60] ; call 0x20000441dd6
0x0000020000492f51 : mov ecx, dword ptr [rsp + 0x70] ; call 0x200000b5017
0x00000200000af3b3 : mov ecx, dword ptr [rsp + 0x88] ; call r11
0x00000200000af346 : mov ecx, dword ptr [rsp + 0x88] ; call rax
0x0000020000015159 : mov ecx, dword ptr [rsp + 0x90] ; call rax
0x00000200003c3c18 : mov ecx, dword ptr [rsp + 0xa8] ; call rax
0x00000200005b881c : mov ecx, dword ptr [rsp] ; mov r8, r12 ; call 0x20000054adc
0x000002000012391e : mov ecx, eax ; call 0x2000003fbfc
0x0000020000421c3c : mov ecx, eax ; call 0x2000004ff89
0x0000020000421561 : mov ecx, eax ; call 0x2000004fffd
0x0000020000423b58 : mov ecx, eax ; call 0x200000522b1
0x0000020000426c4f : mov ecx, eax ; call 0x20000055ea9
0x000002000042b7ec : mov ecx, eax ; call 0x20000055ec9
0x00000200004487cf : mov ecx, eax ; call 0x20000076da5
0x000002000066771f : mov ecx, eax ; call 0x200000a3954
0x00000200004764a2 : mov ecx, eax ; call 0x200000a3955
0x000002000053eeb8 : mov ecx, eax ; call 0x200000a3956
0x00000200004d169f : mov ecx, eax ; call 0x2000010bb78
0x000002000013ebc0 : mov ecx, eax ; call 0x2000014ae48
0x0000020000402d14 : mov ecx, eax ; call 0x2000026f014
0x000002000064e1ff : mov ecx, eax ; call 0x2000026f015
0x0000020000107bec : mov ecx, eax ; call 0x200003c3e94
0x000002000070fb14 : mov ecx, eax ; call 0x2000051bd64
0x0000020000652d79 : mov ecx, eax ; call r15
0x0000020000003032 : mov ecx, eax ; call r8
0x00000200004019fe : mov ecx, eax ; call r9
0x000002000069dec8 : mov ecx, eax ; call rdx
0x000002000046b5a1 : mov ecx, eax ; jmp 0x2000046b56b
0x0000020000117467 : mov ecx, eax ; jmp rdx
0x00000200000de1d0 : mov ecx, eax ; jne 0x200000de1bc ; mov eax, 1 ; ret
0x0000020000137566 : mov ecx, eax ; jne 0x2000013756f ; ret
0x000002000047d8f8 : mov ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000419e4f : mov ecx, eax ; mov eax, r9d ; add rsp, 0x38 ; ret
0x0000020000064186 : mov ecx, eax ; mov eax, r9d ; ret
0x000002000059078b : mov ecx, eax ; mov esi, eax ; call 0x2000019c9f2
0x00000200005907b7 : mov ecx, eax ; mov esi, eax ; call 0x2000019ca3e
0x0000020000490545 : mov ecx, eax ; mov qword ptr [rax + 0x18], rax ; call 0x200000b46e9
0x00000200006d1a01 : mov ecx, eax ; mov qword ptr [rbp - 0x58], rax ; call r9
0x00000200006d180c : mov ecx, eax ; mov qword ptr [rbp - 0x60], rax ; call r9
0x0000020000414d48 : mov ecx, eax ; mov r8, r12 ; mov rcx, r13 ; call rax
0x00000200005cd6ca : mov ecx, eax ; mov r8d, 6 ; call rax
0x0000020000484609 : mov ecx, eax ; mov r8d, eax ; call rsi
0x000002000000f264 : mov ecx, eax ; mov rax, qword ptr [rip + 0x34824b] ; call rax
0x0000020000022fef : mov ecx, eax ; mov rax, r9 ; ret
0x00000200005d23a8 : mov ecx, eax ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000041a4c7 : mov ecx, eax ; mov rbx, rax ; call 0x200000496a0
0x0000020000123703 : mov ecx, eax ; mov rbx, rax ; call 0x2000006f963
0x00000200005daf05 : mov ecx, eax ; shl r8, 5 ; call 0x200000771c8
0x00000200003fc321 : mov ecx, ebp ; call 0x2000002a13d
0x000002000061f3cc : mov ecx, ebp ; call 0x2000002bb86
0x0000020000421cea : mov ecx, ebp ; call 0x2000004fa89
0x0000020000438c6f : mov ecx, ebp ; call 0x20000064b05
0x0000020000446d1b : mov ecx, ebp ; call 0x20000067ea5
0x0000020000449900 : mov ecx, ebp ; call 0x20000071005
0x00000200004487d7 : mov ecx, ebp ; call 0x20000072e45
0x000002000019afa8 : mov ecx, ebp ; call 0x200000771c4
0x000002000047ad15 : mov ecx, ebp ; call 0x200000a3705
0x000002000048389e : mov ecx, ebp ; call 0x200000a9255
0x00000200005750b0 : mov ecx, ebp ; call 0x200000c5a48
0x0000020000575792 : mov ecx, ebp ; call 0x200000d97d8
0x000002000052dd2b : mov ecx, ebp ; call 0x200000d9fd4
0x00000200000efb6e : mov ecx, ebp ; call 0x200000dbe24
0x000002000037db33 : mov ecx, ebp ; call 0x200000ebf18
0x000002000051b7f3 : mov ecx, ebp ; call 0x2000014a79d
0x0000020000528664 : mov ecx, ebp ; call 0x20000153ff5
0x000002000052a4e1 : mov ecx, ebp ; call 0x20000159939
0x000002000054e4d6 : mov ecx, ebp ; call 0x2000016f0cd
0x00000200003c2dd1 : mov ecx, ebp ; call 0x2000026f014
0x00000200005dd965 : mov ecx, ebp ; call 0x20000389ba4
0x00000200005cb4cc : mov ecx, ebp ; call 0x2000039da99
0x00000200003f5bc0 : mov ecx, ebp ; call 0x20000441dd4
0x00000200006600b4 : mov ecx, ebp ; call 0x2000065c2c0
0x000002000050a6d4 : mov ecx, ebp ; call r12
0x0000020000005cd4 : mov ecx, ebp ; call r15
0x000002000069db22 : mov ecx, ebp ; call r9
0x00000200000e74b3 : mov ecx, ebp ; call rax
0x00000200003c081c : mov ecx, ebp ; call rsi
0x00000200006c051e : mov ecx, ebp ; jmp 0x2000070dfe4
0x0000020000646b0b : mov ecx, ebp ; mov byte ptr [rsp + 0x20], r10b ; call rax
0x00000200005e2295 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], edx ; call 0x2000015e538
0x00000200003aa8d9 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ecf9c : mov ecx, ebp ; mov dword ptr [rsp + 0x20], esi ; call r15
0x00000200003aaa14 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x00000200006465ab : mov ecx, ebp ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000002000012ed6a : mov ecx, ebp ; mov rax, qword ptr [rip + 0x228745] ; call rax
0x0000020000646d2e : mov ecx, ebp ; mov rdx, r12 ; call rax
0x000002000014ec18 : mov ecx, ebx ; add eax, 2 ; mov dword ptr [rdi], eax ; call 0x2000014ae6d
0x0000020000645fed : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200005cb8db : mov ecx, ebx ; add rsp, 0x28 ; jmp qword ptr [r10]
0x0000020000131c2d : mov ecx, ebx ; call 0x20000018f71
0x0000020000133432 : mov ecx, ebx ; call 0x20000027010
0x00000200004eb1c4 : mov ecx, ebx ; call 0x2000002db79
0x000002000070da09 : mov ecx, ebx ; call 0x20000030a79
0x0000020000601388 : mov ecx, ebx ; call 0x2000004d654
0x0000020000421972 : mov ecx, ebx ; call 0x2000004d655
0x00000200001e2f49 : mov ecx, ebx ; call 0x2000004f214
0x0000020000143a2a : mov ecx, ebx ; call 0x2000004fd24
0x00000200004275cc : mov ecx, ebx ; call 0x20000053b25
0x00000200004789c1 : mov ecx, ebx ; call 0x20000054c14
0x0000020000428627 : mov ecx, ebx ; call 0x20000056fc1
0x00000200001db4fc : mov ecx, ebx ; call 0x20000067804
0x0000020000446596 : mov ecx, ebx ; call 0x20000072d75
0x00000200003e6ba8 : mov ecx, ebx ; call 0x20000072e44
0x00000200005aaf5c : mov ecx, ebx ; call 0x200000771c4
0x0000020000449a88 : mov ecx, ebx ; call 0x200000771c5
0x0000020000526b4f : mov ecx, ebx ; call 0x200000771c9
0x00000200001f7682 : mov ecx, ebx ; call 0x200000a3954
0x00000200001de7f1 : mov ecx, ebx ; call 0x200000b6728
0x000002000004a521 : mov ecx, ebx ; call 0x200000b67a4
0x0000020000498c58 : mov ecx, ebx ; call 0x200000b8e85
0x00000200003e1569 : mov ecx, ebx ; call 0x200000bd7b4
0x0000020000567c12 : mov ecx, ebx ; call 0x200000bf279
0x00000200006c085b : mov ecx, ebx ; call 0x200000c85e9
0x000002000057fad3 : mov ecx, ebx ; call 0x200000df879
0x00000200004e2cd3 : mov ecx, ebx ; call 0x20000104d35
0x00000200004f1b02 : mov ecx, ebx ; call 0x200001183bd
0x0000020000183ad0 : mov ecx, ebx ; call 0x200001277d9
0x0000020000525e09 : mov ecx, ebx ; call 0x2000014bd15
0x0000020000186620 : mov ecx, ebx ; call 0x20000162854
0x00000200001ef0e9 : mov ecx, ebx ; call 0x20000162859
0x00000200001c84b4 : mov ecx, ebx ; call 0x20000174738
0x000002000005b8be : mov ecx, ebx ; call 0x20000177ae4
0x0000020000026dfb : mov ecx, ebx ; call 0x200001a3058
0x00000200001ab034 : mov ecx, ebx ; call 0x200001a7294
0x00000200001af169 : mov ecx, ebx ; call 0x200001ab3a4
0x00000200001af1bd : mov ecx, ebx ; call 0x200001ab434
0x0000020000512dd7 : mov ecx, ebx ; call 0x2000026f014
0x0000020000642273 : mov ecx, ebx ; call 0x2000026f015
0x00000200005465f2 : mov ecx, ebx ; call 0x2000026f018
0x000002000037287f : mov ecx, ebx ; call 0x2000036eac8
0x00000200003cc4b4 : mov ecx, ebx ; call 0x20000378754
0x000002000037fed9 : mov ecx, ebx ; call 0x2000038195c
0x000002000038ccaf : mov ecx, ebx ; call 0x2000038caa1
0x00000200003a0fca : mov ecx, ebx ; call 0x200003a1009
0x00000200005d8f67 : mov ecx, ebx ; call 0x200003d5174
0x00000200005dfe65 : mov ecx, ebx ; call 0x200003f82a9
0x0000020000587577 : mov ecx, ebx ; call 0x20000423838
0x000002000047fdc0 : mov ecx, ebx ; call 0x2000043c044
0x000002000055b0a4 : mov ecx, ebx ; call 0x20000468879
0x0000020000489347 : mov ecx, ebx ; call 0x200004855d8
0x000002000051af9d : mov ecx, ebx ; call 0x200004b71e8
0x00000200004018f9 : mov ecx, ebx ; call 0x200004b71ec
0x0000020000517c3e : mov ecx, ebx ; call 0x20000517585
0x0000020000401ee9 : mov ecx, ebx ; call 0x20000520071
0x0000020000584e63 : mov ecx, ebx ; call 0x200005810f4
0x0000020000585008 : mov ecx, ebx ; call 0x20000581294
0x00000200001c2556 : mov ecx, ebx ; call 0x200005bbab9
0x000002000064d38b : mov ecx, ebx ; call 0x2000064d8b9
0x00000200006e6e80 : mov ecx, ebx ; call 0x200007030d4
0x000002000015f8be : mov ecx, ebx ; call r10
0x00000200003bbd96 : mov ecx, ebx ; call r11
0x00000200003e797b : mov ecx, ebx ; call r12
0x0000020000040021 : mov ecx, ebx ; call r14
0x00000200003ab7a6 : mov ecx, ebx ; call r15
0x000002000035da98 : mov ecx, ebx ; call r8
0x0000020000026b6c : mov ecx, ebx ; call rax
0x0000020000178113 : mov ecx, ebx ; call rdi
0x00000200003bcb59 : mov ecx, ebx ; call rdx
0x00000200003bd661 : mov ecx, ebx ; call rsi
0x000002000005a9cc : mov ecx, ebx ; jmp 0x2000005a995
0x00000200001c51a5 : mov ecx, ebx ; lea edx, dword ptr [r9 + 7] ; call 0x200000213c8
0x000002000051ea52 : mov ecx, ebx ; lea r8d, dword ptr [r9 + 6] ; call 0x2000014b869
0x00000200005d53a6 : mov ecx, ebx ; mov dword ptr [rdx + 4], eax ; call 0x200004815d3
0x000002000056cf56 : mov ecx, ebx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000047204d : mov ecx, ebx ; mov dword ptr [rsp + 0x20], r11d ; call 0x2000046e319
0x0000020000423c05 : mov ecx, ebx ; mov edi, eax ; call 0x2000004fa8b
0x00000200003d077d : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005c7f1b : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200005c7e11 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000013da5 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x34370a] ; call rax
0x0000020000013d32 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x34377d] ; call rax
0x0000020000013c40 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x34386f] ; call rax
0x00000200004bb209 : mov ecx, ebx ; mov rax, qword ptr [rip - 0x223eea] ; call rax
0x00000200004890a5 : mov ecx, ebx ; mov rbx, qword ptr [rbx] ; mov rdx, rdi ; call rsi
0x000002000064c4a9 : mov ecx, ebx ; mov rcx, r14 ; call rax
0x0000020000656f53 : mov ecx, ebx ; mov rdi, rax ; call qword ptr [rbx]
0x0000020000584ff4 : mov ecx, ebx ; mov rdx, rsi ; call 0x20000581297
0x0000020000065272 : mov ecx, ebx ; xor r12d, r12d ; call r15
0x000002000005071b : mov ecx, ecx ; call 0x20000012a28
0x00000200006408c6 : mov ecx, ecx ; call 0x20000270045
0x000002000069e3b9 : mov ecx, ecx ; call rdx
0x0000020000012a28 : mov ecx, ecx ; je 0x200001dc6e3 ; ret
0x0000020000360403 : mov ecx, ecx ; je 0x20000360411 ; mov al, r10b ; ret
0x0000020000360403 : mov ecx, ecx ; je 0x20000360412 ; mov al, r10b ; ret
0x0000020000645529 : mov ecx, ecx ; test r8d, r8d ; jne 0x2000064553c ; xor eax, eax ; ret
0x00000200006d050e : mov ecx, ecx ; test rdx, rdx ; jne 0x200006d051f ; ret
0x000002000056a9b9 : mov ecx, ecx ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200004f441f : mov ecx, edi ; add rsi, rax ; call 0x200001183c0
0x000002000003484a : mov ecx, edi ; call 0x20000010a84
0x00000200003e3f7f : mov ecx, edi ; call 0x20000012a65
0x00000200003e3f7f : mov ecx, edi ; call 0x20000012a68
0x00000200004154e3 : mov ecx, edi ; call 0x200000392b9
0x000002000041a4bf : mov ecx, edi ; call 0x20000049001
0x0000020000066644 : mov ecx, edi ; call 0x2000004c4f9
0x00000200004b8440 : mov ecx, edi ; call 0x2000004d1c8
0x0000020000426e56 : mov ecx, edi ; call 0x20000054295
0x0000020000426c96 : mov ecx, edi ; call 0x200000547ed
0x0000020000428ef6 : mov ecx, edi ; call 0x20000056fc1
0x000002000059da09 : mov ecx, edi ; call 0x20000058939
0x00000200006c7354 : mov ecx, edi ; call 0x200000635b0
0x0000020000415486 : mov ecx, edi ; call 0x20000071008
0x0000020000443f91 : mov ecx, edi ; call 0x20000072e45
0x0000020000449a41 : mov ecx, edi ; call 0x20000076d15
0x0000020000448da8 : mov ecx, edi ; call 0x20000076da5
0x00000200004cafab : mov ecx, edi ; call 0x200000771c4
0x00000200004896a2 : mov ecx, edi ; call 0x200000b6725
0x000002000048968e : mov ecx, edi ; call 0x200000b8ae5
0x000002000048aa97 : mov ecx, edi ; call 0x200000b90e5
0x000002000048aafa : mov ecx, edi ; call 0x200000b9885
0x000002000048aaaa : mov ecx, edi ; call 0x200000b9b05
0x000002000049d00f : mov ecx, edi ; call 0x200000bf2c5
0x00000200005c2e2b : mov ecx, edi ; call 0x200000cf0e8
0x00000200004cfc89 : mov ecx, edi ; call 0x200000f22c5
0x00000200004cc0ae : mov ecx, edi ; call 0x200000f8d55
0x000002000070efac : mov ecx, edi ; call 0x200000fb20c
0x00000200004fd826 : mov ecx, edi ; call 0x2000012ac4d
0x0000020000601c79 : mov ecx, edi ; call 0x2000012deb0
0x00000200005755c4 : mov ecx, edi ; call 0x20000131814
0x000002000013d4a2 : mov ecx, edi ; call 0x2000013d828
0x0000020000635380 : mov ecx, edi ; call 0x200001415fc
0x0000020000520b0d : mov ecx, edi ; call 0x2000014b865
0x00000200003718b8 : mov ecx, edi ; call 0x2000014db84
0x00000200003718cc : mov ecx, edi ; call 0x2000014dbd4
0x00000200005222e4 : mov ecx, edi ; call 0x20000150a21
0x0000020000525a5a : mov ecx, edi ; call 0x20000150f49
0x000002000053d88f : mov ecx, edi ; call 0x2000015e535
0x0000020000647418 : mov ecx, edi ; call 0x20000173638
0x0000020000185827 : mov ecx, edi ; call 0x20000181a3c
0x00000200000ee6f9 : mov ecx, edi ; call 0x2000018a908
0x0000020000590392 : mov ecx, edi ; call 0x2000019c5a4
0x00000200005903b7 : mov ecx, edi ; call 0x2000019c5f4
0x0000020000590625 : mov ecx, edi ; call 0x2000019c8c4
0x00000200001a521d : mov ecx, edi ; call 0x200001a4941
0x00000200001acb3f : mov ecx, edi ; call 0x200001a8d64
0x00000200001b2d33 : mov ecx, edi ; call 0x2000026f014
0x00000200006407e6 : mov ecx, edi ; call 0x2000026f015
0x000002000059f3b8 : mov ecx, edi ; call 0x2000038b670
0x00000200005d9334 : mov ecx, edi ; call 0x200003d5584
0x000002000016b32c : mov ecx, edi ; call 0x20000417634
0x0000020000018e82 : mov ecx, edi ; call 0x2000042186c
0x0000020000416ea7 : mov ecx, edi ; call 0x2000042316c
0x00000200005d5ae3 : mov ecx, edi ; call 0x20000441dd4
0x000002000039a98c : mov ecx, edi ; call 0x20000466c94
0x000002000047eabd : mov ecx, edi ; call 0x2000047e69c
0x000002000013b682 : mov ecx, edi ; call 0x20000497968
0x000002000051d3e2 : mov ecx, edi ; call 0x2000049961c
0x0000020000541531 : mov ecx, edi ; call 0x20000541620
0x000002000064313d : mov ecx, edi ; call 0x20000642e39
0x000002000063fdb2 : mov ecx, edi ; call 0x20000648178
0x000002000066009e : mov ecx, edi ; call 0x2000065c398
0x00000200006f9e5a : mov ecx, edi ; call 0x200006f6154
0x000002000050b820 : mov ecx, edi ; call qword ptr [rax]
0x00000200001f4ae3 : mov ecx, edi ; call r10
0x00000200001264ec : mov ecx, edi ; call r12
0x000002000002590b : mov ecx, edi ; call r14
0x0000020000121e1e : mov ecx, edi ; call r15
0x00000200001a5c52 : mov ecx, edi ; call r9
0x0000020000033fa3 : mov ecx, edi ; call rax
0x00000200001d13cc : mov ecx, edi ; call rbx
0x000002000040331b : mov ecx, edi ; call rdx
0x000002000006740f : mov ecx, edi ; call rsi
0x0000020000496904 : mov ecx, edi ; jmp 0x20000496702
0x0000020000486057 : mov ecx, edi ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200005c4e8a : mov ecx, edi ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000048758e : mov ecx, edi ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200005c5412 : mov ecx, edi ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x00000200004ea24c : mov ecx, edi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x0000020000423b7c : mov ecx, edi ; mov esi, eax ; call 0x2000004fa8b
0x00000200000e7c27 : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call 0x200000f3ed9
0x0000020000037c07 : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006313ea : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000064aefe : mov ecx, edi ; mov qword ptr [rsp + 0x20], rdi ; call 0x200000a7119
0x0000020000484606 : mov ecx, edi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000016c231 : mov ecx, edi ; mov rax, qword ptr [rip + 0x115536] ; call rax
0x000002000016ac35 : mov ecx, edi ; mov rax, qword ptr [rip + 0x1ec87a] ; call rax
0x0000020000030733 : mov ecx, edi ; mov rax, qword ptr [rip + 0x326d7c] ; call rax
0x0000020000010df2 : mov ecx, edi ; mov rax, rsi ; call rax
0x0000020000487525 : mov ecx, edi ; mov rdx, r12 ; call rdi
0x000002000048bcd5 : mov ecx, edi ; mov rdx, rax ; call 0x200000b4338
0x0000020000645cea : mov ecx, edi ; mov rsi, rax ; call rbx
0x0000020000415128 : mov ecx, edx ; call 0x200000392b9
0x000002000042189d : mov ecx, edx ; call 0x2000004d655
0x00000200005b8803 : mov ecx, edx ; call 0x20000054ad8
0x00000200005b8802 : mov ecx, edx ; call 0x20000054ad9
0x00000200005b8801 : mov ecx, edx ; call 0x20000054ada
0x0000020000489505 : mov ecx, edx ; call 0x200000b8ae5
0x00000200001bde87 : mov ecx, edx ; call 0x200001bda24
0x000002000000b9f8 : mov ecx, edx ; call r10
0x0000020000710bcd : mov ecx, edx ; call r11
0x000002000069fd40 : mov ecx, edx ; call r8
0x00000200001374f7 : mov ecx, edx ; call r9
0x000002000039f479 : mov ecx, edx ; call rax
0x000002000069f861 : mov ecx, edx ; call rdi
0x00000200003990b0 : mov ecx, edx ; je 0x200003990c1 ; add rsp, 0x28 ; ret
0x00000200006e78d9 : mov ecx, edx ; jmp rcx
0x000002000001fd23 : mov ecx, edx ; mov dword ptr [r8 + 0x30], ebx ; call r9
0x000002000039f74a : mov ecx, edx ; mov dword ptr [rsp + 0x20], r15d ; call rax
0x000002000001fc8f : mov ecx, edx ; mov eax, r10d ; jmp 0x2000001fc1d
0x0000020000643c41 : mov ecx, edx ; mov qword ptr [rcx + r9], rax ; ret
0x00000200000dd8e5 : mov ecx, edx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000007bd36 : mov ecx, edx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x00000200000ee856 : mov ecx, edx ; sub rcx, r10 ; lea rax, qword ptr [r8 + rcx*8] ; ret
0x0000020000368d2f : mov ecx, esi ; add rbp, 3 ; call 0x200000d4fc8
0x000002000047de5e : mov ecx, esi ; call 0x2000000a094
0x000002000015d093 : mov ecx, esi ; call 0x200000392b8
0x000002000054a126 : mov ecx, esi ; call 0x200000479e8
0x000002000041f62c : mov ecx, esi ; call 0x2000004d1c5
0x0000020000421259 : mov ecx, esi ; call 0x2000004d4f4
0x0000020000383808 : mov ecx, esi ; call 0x2000004fa88
0x00000200004275ba : mov ecx, esi ; call 0x20000052465
0x00000200005b886e : mov ecx, esi ; call 0x20000054af8
0x00000200004297c4 : mov ecx, esi ; call 0x20000055f65
0x00000200004297ab : mov ecx, esi ; call 0x20000056fc1
0x0000020000439c15 : mov ecx, esi ; call 0x20000064b05
0x0000020000442561 : mov ecx, esi ; call 0x2000006ccfd
0x00000200003a4daa : mov ecx, esi ; call 0x20000071004
0x00000200003d1fb6 : mov ecx, esi ; call 0x20000071008
0x00000200005972fe : mov ecx, esi ; call 0x200000735d4
0x0000020000449766 : mov ecx, esi ; call 0x20000076d15
0x0000020000118211 : mov ecx, esi ; call 0x20000076da9
0x00000200001aaf52 : mov ecx, esi ; call 0x200000771c4
0x00000200004795a7 : mov ecx, esi ; call 0x200000a3955
0x000002000070e78c : mov ecx, esi ; call 0x200000a3958
0x000002000054cfe0 : mov ecx, esi ; call 0x200000a9254
0x0000020000485a44 : mov ecx, esi ; call 0x200000b5015
0x0000020000368cc2 : mov ecx, esi ; call 0x200000d4f14
0x000002000002fbd7 : mov ecx, esi ; call 0x200000dbe24
0x00000200003f6955 : mov ecx, esi ; call 0x200000ebf18
0x00000200004c243c : mov ecx, esi ; call 0x200000f22c5
0x00000200004ce2aa : mov ecx, esi ; call 0x200000f8d55
0x000002000070ef62 : mov ecx, esi ; call 0x200000fb20c
0x0000020000706073 : mov ecx, esi ; call 0x20000102294
0x00000200003c3224 : mov ecx, esi ; call 0x20000138fed
0x00000200001c4279 : mov ecx, esi ; call 0x2000013d828
0x0000020000522c47 : mov ecx, esi ; call 0x2000014c279
0x0000020000524fa7 : mov ecx, esi ; call 0x2000014cae5
0x0000020000524fd3 : mov ecx, esi ; call 0x2000014cbcd
0x00000200001d6551 : mov ecx, esi ; call 0x20000162854
0x0000020000549f17 : mov ecx, esi ; call 0x2000016aa55
0x000002000010b8cf : mov ecx, esi ; call 0x20000177ae4
0x0000020000122f89 : mov ecx, esi ; call 0x2000017f26c
0x0000020000402dc9 : mov ecx, esi ; call 0x2000026f014
0x00000200006407d8 : mov ecx, esi ; call 0x2000026f015
0x00000200005ffeb8 : mov ecx, esi ; call 0x2000026f018
0x0000020000555746 : mov ecx, esi ; call 0x2000026f019
0x000002000053c8b2 : mov ecx, esi ; call 0x200003d8b5c
0x00000200005fe1c2 : mov ecx, esi ; call 0x200003f572c
0x0000020000018c0d : mov ecx, esi ; call 0x2000042186c
0x00000200003ccb80 : mov ecx, esi ; call 0x20000438e64
0x00000200004118fe : mov ecx, esi ; call 0x200004edb10
0x00000200004921f6 : mov ecx, esi ; call 0x2000055e454
0x000002000065b798 : mov ecx, esi ; call 0x20000648178
0x0000020000660093 : mov ecx, esi ; call 0x2000065c398
0x0000020000022f90 : mov ecx, esi ; call qword ptr [rbx]
0x00000200001f4b2d : mov ecx, esi ; call r10
0x0000020000051833 : mov ecx, esi ; call r11
0x0000020000645dd4 : mov ecx, esi ; call r12
0x000002000002354c : mov ecx, esi ; call r14
0x00000200004b9fc8 : mov ecx, esi ; call r15
0x00000200005201b1 : mov ecx, esi ; call r9
0x000002000013fbf2 : mov ecx, esi ; call rax
0x000002000064c7e3 : mov ecx, esi ; call rdx
0x000002000044904d : mov ecx, esi ; inc dword ptr [rsi + 0x14] ; call 0x20000076d18
0x00000200001b753f : mov ecx, esi ; mov dword ptr [rbx], r11d ; call rdi
0x00000200005c6d4a : mov ecx, esi ; mov dword ptr [rsp + 0x40], r14d ; call rax
0x0000020000632d22 : mov ecx, esi ; mov ebx, 0xc000009a ; call 0x2000026f019
0x000002000048da46 : mov ecx, esi ; mov qword ptr [rbp - 0x41], r14 ; call 0x200000b5019
0x0000020000592cf2 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r11]
0x00000200001f1e52 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000047d772 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r12
0x000002000064c269 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x0000020000383708 : mov ecx, esi ; mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x00000200000e76d4 : mov ecx, esi ; mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200001d5434 : mov ecx, esi ; mov rax, qword ptr [rip + 0x181fab] ; call rax
0x000002000016105d : mov ecx, esi ; mov rax, qword ptr [rip + 0x1f6452] ; call rax
0x0000020000160f4a : mov ecx, esi ; mov rax, qword ptr [rip + 0x1f6565] ; call rax
0x0000020000160cb9 : mov ecx, esi ; mov rax, qword ptr [rip + 0x1f67f6] ; call rax
0x0000020000160be8 : mov ecx, esi ; mov rax, qword ptr [rip + 0x1f68c7] ; call rax
0x0000020000160a53 : mov ecx, esi ; mov rax, qword ptr [rip + 0x1f6a5c] ; call rax
0x00000200000faaa4 : mov ecx, esi ; mov rax, qword ptr [rip + 0x25c93b] ; call rax
0x00000200000fa81c : mov ecx, esi ; mov rax, qword ptr [rip + 0x25cbc3] ; call rax
0x000002000003086c : mov ecx, esi ; mov rax, qword ptr [rip + 0x326c43] ; call rax
0x0000020000010508 : mov ecx, esi ; mov rax, qword ptr [rip + 0x346fa7] ; call rax
0x000002000000f4c5 : mov ecx, esi ; mov rax, qword ptr [rip + 0x347fea] ; call rax
0x000002000000f13b : mov ecx, esi ; mov rax, qword ptr [rip + 0x348374] ; call rax
0x000002000000f103 : mov ecx, esi ; mov rax, qword ptr [rip + 0x3483ac] ; call rax
0x000002000000f0a6 : mov ecx, esi ; mov rax, qword ptr [rip + 0x348409] ; call rax
0x000002000000efa3 : mov ecx, esi ; mov rax, qword ptr [rip + 0x34850c] ; call rax
0x000002000000c31d : mov ecx, esi ; mov rax, qword ptr [rip + 0x34b192] ; call rax
0x0000020000646eaa : mov ecx, esi ; mov rbp, rax ; call rbx
0x0000020000646d2b : mov ecx, esi ; mov rcx, r13 ; mov rdx, r12 ; call rax
0x00000200005c6f24 : mov ecx, esi ; mov rdx, r12 ; call rsi
0x0000020000644a03 : mov ecx, esi ; shl rdx, 0xc ; call 0x20000270049
0x000002000043beca : mov ecx, esp ; call 0x20000068c4d
0x00000200004a0015 : mov ecx, esp ; call 0x200000c44d5
0x0000020000013edf : mov ecx, esp ; call 0x20000100108
0x00000200001761df : mov ecx, esp ; call 0x20000176835
0x00000200001b18e7 : mov ecx, esp ; call 0x200001adb88
0x000002000003ff93 : mov ecx, esp ; call r14
0x00000200001cf27d : mov ecx, esp ; call r15
0x00000200006a037f : mov ecx, esp ; call r9
0x00000200005cded9 : mov ecx, esp ; call rax
0x000002000051dce4 : mov ecx, esp ; lea r8d, dword ptr [r9 + 6] ; call 0x2000014b869
0x00000200005e226f : mov ecx, esp ; lea r8d, dword ptr [rdx + 0xe] ; call 0x2000015e538
0x0000020000645bbc : mov ecx, esp ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200005c99e7 : mov ecx, esp ; mov qword ptr [rsp + 0x20], rax ; call 0x200003b5cc1
0x00000200005a30c7 : mov ecx, fs ; dec dword ptr [rax - 0x75] ; ret
0x000002000070ef61 : mov ecx, r14d ; call 0x200000fb20d
0x00000200001d656c : mov ecx, r14d ; call 0x20000162855
0x000002000070efab : mov ecx, r15d ; call 0x200000fb20d
0x00000200006f9e59 : mov ecx, r15d ; call 0x200006f6155
0x00000200006f5ffd : mov ecx, r15d ; call rax
0x00000200006408c5 : mov ecx, r9d ; call 0x20000270046
0x00000200006408c4 : mov ecx, r9d ; call 0x20000270047
0x00000200001b9ec0 : mov ecx, ss ; hlt ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c8f2c : mov edi, 0x110e1ce9 ; add dh, dh ; ret
0x00000200006ea594 : mov edi, 0x158d48ff ; ret
0x00000200001d6a2f : mov edi, 0x168 ; add byte ptr [rdi], cl ; test ah, bl ; ret
0x000002000048b3ec : mov edi, 0x200f44ff ; ret
0x0000020000123bec : mov edi, 0x20c48348 ; pop rbx ; ret
0x000002000025cc75 : mov edi, 0x220023 ; add byte ptr [rax], al ; ret 0x50
0x000002000045b0ea : mov edi, 0x3b48ffef ; ret 0x5977
0x00000200005fbd77 : mov edi, 0x3b9 ; add ch, cl ; sub esi, esi ; ret
0x00000200005851a9 : mov edi, 0x3bffd048 ; ret 0x3c74
0x00000200006d6a65 : mov edi, 0x3d0 ; mov rax, rdx ; jmp 0x200006d6a78
0x000002000008f2af : mov edi, 0x46bcb1d7 ; ret
0x00000200004ae9e6 : mov edi, 0x48c033ff ; add esp, 0x70 ; pop rbx ; ret
0x00000200005a1119 : mov edi, 0x48ffa7a3 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000522c6d : mov edi, 0x48ffd75a ; test eax, eax ; je 0x20000522ca2 ; call rax
0x00000200004683fd : mov edi, 0x48ffff5d ; add esp, 0x58 ; ret
0x0000020000652ae0 : mov edi, 0x58b35eb ; scasd eax, dword ptr [rdi] ; push rax ; ret 0x85ff
0x000002000047b8d4 : mov edi, 0x85d233ff ; sal byte ptr [rbp - 0x24], 0x8b ; ret
0x00000200003bac17 : mov edi, 0x8a000000 ; ret
0x0000020000156088 : mov edi, 0x8b4492eb ; ret 0x8b44
0x00000200004c551f : mov edi, 0x8b44d233 ; ret
0x000002000064abbd : mov edi, 0x8b45ffc4 ; ret 0x6eb
0x00000200006f854d : mov edi, 0x8bffb76a ; ret
0x00000200006c744d : mov edi, 0x8bffc903 ; ret
0x00000200001ef430 : mov edi, 0xa8 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001c3f27 : mov edi, 0xaf0f4906 ; ret 0x9948
0x000002000015fd2a : mov edi, 0xb60ffff0 ; ret
0x00000200000cfc6a : mov edi, 0xb60ffff9 ; ret
0x000002000039795a : mov edi, 0xb70fffd0 ; ret
0x00000200004c53c5 : mov edi, 0xc0000003 ; jmp 0x200004c5394
0x00000200004c1249 : mov edi, 0xc000003e ; jmp 0x200003ed480
0x00000200003e1b36 : mov edi, 0xc000007c ; jmp 0x200003e1add
0x000002000057042e : mov edi, 0xc2f6ffd5 ; add dh, byte ptr [rcx + rdx - 0xa] ; ret 0x7504
0x00000200004ab66f : mov edi, 0xc48348ff ; jo 0x200004ab6de ; pop rsi ; pop rbx ; ret
0x00000200004ae79d : mov edi, 0xc48348ff ; jo 0x200004ae80c ; pop rbx ; pop rbp ; ret
0x0000020000485932 : mov edi, 0xc48348ff ; pop rax ; ret
0x00000200005b58f5 : mov edi, 0xe8ffcda9 ; ret 0xb3c9
0x000002000013a5c2 : mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013a5d4 : mov edi, 0xf490a42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013a5e6 : mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013a5f8 : mov edi, 0xf491242 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013a614 : mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x00000200001b47ed : mov edi, 0xf6000d66 ; ret
0x00000200000edcaa : mov edi, 0xf6000db8 ; ret
0x00000200004c6dd2 : mov edi, 0xf6168bff ; ret 0x7401
0x000002000062afb2 : mov edi, 0xf6ffd79f ; ret 0xf04
0x000002000004b08b : mov edi, 0xf6fffffb ; ret
0x000002000041e8b8 : mov edi, 0xf6fffffe ; ret
0x00000200005e64f0 : mov edi, 0xff4166c2 ; ret 0x4166
0x00000200003c43ad : mov edi, 0xff480023 ; ret
0x000002000051eff8 : mov edi, 0xffc7558b ; ret 0x5589
0x00000200004d74a4 : mov edi, 7 ; jmp 0x200004d74c8
0x000002000025fdf4 : mov edi, dr1 ; push rcx ; add byte ptr [rax], ch ; push rdx ; add al, cl ; ret 0x24
0x000002000013b90f : mov edi, dword ptr [rax - 0x3ffffff3] ; ret
0x000002000041a4bc : mov edi, dword ptr [rax] ; mov rcx, rdi ; call 0x20000049004
0x00000200000614b1 : mov edi, dword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200001a83c9 : mov edi, dword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000525a56 : mov edi, dword ptr [rbp - 0x20] ; mov rcx, rdi ; call 0x20000150f4d
0x0000020000577b44 : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x000002000010a1ad : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200006cab3f : mov edi, dword ptr [rbx + 0x18] ; xor eax, eax ; mov rsp, r11 ; pop rbp ; ret
0x000002000006865e : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200005767ce : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000003427a : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000001b6f9 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000106b36 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000016883 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c7350 : mov edi, dword ptr [rcx + 0x30] ; mov rcx, rdi ; call 0x200000635b4
0x00000200000d8787 : mov edi, dword ptr [rsp + 0x10] ; mov al, r9b ; ret
0x000002000003f823 : mov edi, dword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x00000200003cb303 : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000020000192d1d : mov edi, dword ptr [rsp + 0x10] ; mov eax, edx ; ret
0x000002000019d032 : mov edi, dword ptr [rsp + 0x10] ; mov eax, r10d ; ret
0x000002000002722b : mov edi, dword ptr [rsp + 0x10] ; mov eax, r11d ; ret
0x0000020000191823 : mov edi, dword ptr [rsp + 0x10] ; mov eax, r8d ; ret
0x000002000003eccf : mov edi, dword ptr [rsp + 0x10] ; mov eax, r9d ; ret
0x00000200004cf6e2 : mov edi, dword ptr [rsp + 0x10] ; mov rax, r10 ; ret
0x000002000018b9d8 : mov edi, dword ptr [rsp + 0x10] ; mov rax, r9 ; ret
0x0000020000176748 : mov edi, dword ptr [rsp + 0x10] ; mov word ptr [r11], cx ; ret
0x0000020000002fa5 : mov edi, dword ptr [rsp + 0x10] ; ret
0x000002000039a225 : mov edi, dword ptr [rsp + 0x10] ; test edx, edx ; sete al ; ret
0x0000020000192c19 : mov edi, dword ptr [rsp + 0x18] ; mov al, r10b ; ret
0x00000200000ab7d0 : mov edi, dword ptr [rsp + 0x18] ; mov al, r9b ; ret
0x000002000059b1d6 : mov edi, dword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000013a4b5 : mov edi, dword ptr [rsp + 0x18] ; mov eax, r10d ; ret
0x000002000019dadb : mov edi, dword ptr [rsp + 0x18] ; mov eax, r11d ; ret
0x000002000014c7df : mov edi, dword ptr [rsp + 0x18] ; mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000002d308 : mov edi, dword ptr [rsp + 0x18] ; ret
0x0000020000464ee5 : mov edi, dword ptr [rsp + 0x18] ; sub eax, edx ; ret
0x00000200001405b6 : mov edi, dword ptr [rsp + 0x18] ; xor eax, eax ; ret
0x00000200000b8d25 : mov edi, dword ptr [rsp + 0x20] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c5e19 : mov edi, dword ptr [rsp + 0x20] ; mov qword ptr [rdx - 0x58], r8 ; ret
0x00000200007055bb : mov edi, dword ptr [rsp + 0x20] ; movzx eax, r9w ; ret
0x000002000001fc82 : mov edi, dword ptr [rsp + 0x20] ; ret
0x000002000043a877 : mov edi, dword ptr [rsp + 0x20] ; xor eax, eax ; pop rbx ; ret
0x0000020000157cc7 : mov edi, dword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200000bad6a : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000eae56 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x60 ; pop rbx ; ret
0x00000200003d272d : mov edi, dword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x0000020000006391 : mov edi, dword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x00000200000bf08f : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a8347 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000043c165 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1ad4 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000561786 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000035ecc0 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006516f5 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000b969e : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004bb1b7 : mov edi, dword ptr [rsp + 0x48] ; jmp 0x200004bb21d
0x00000200005755bf : mov edi, dword ptr [rsp + 0x48] ; mov rcx, rdi ; call 0x20000131819
0x00000200001b395c : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000d07bc : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003806ae : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004a80ad : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200006ca991 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000058a11 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x00000200001ad0a6 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000100e3c : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001c25b4 : mov edi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000629c9 : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000006b181 : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000130926 : mov edi, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000014ddf9 : mov edi, dword ptr [rsp + 8] ; ret
0x000002000003ff44 : mov edi, dword ptr [rsp + rbp*8 + 0x220] ; jmp 0x2000003ff17
0x00000200000cc872 : mov edi, dword ptr [rsp] ; mov al, 1 ; add rsp, 8 ; ret
0x00000200000cc8b0 : mov edi, dword ptr [rsp] ; xor al, al ; add rsp, 8 ; ret
0x0000020000423c07 : mov edi, eax ; call 0x2000004fa89
0x0000020000423be5 : mov edi, eax ; call 0x200000522b1
0x000002000048c912 : mov edi, eax ; call 0x200000b9b05
0x0000020000656f56 : mov edi, eax ; call qword ptr [rbx]
0x000002000051e47f : mov edi, eax ; call r15
0x00000200000558f3 : mov edi, eax ; jmp 0x20000055af0
0x00000200001c6e78 : mov edi, eax ; jmp rsi
0x0000020000646bb1 : mov edi, eax ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x0000020000448f43 : mov edi, eax ; mov rcx, rdi ; call 0x20000072e48
0x00000200004e1ebd : mov edi, eax ; mov rsi, rdx ; call 0x20000105b7c
0x000002000014b507 : mov edi, eax ; mov rsi, rdx ; call qword ptr [rbx]
0x000002000041e8b5 : mov edi, ebp ; jmp 0x2000041e783
0x00000200004f31bd : mov edi, ebx ; jmp 0x200004f3075
0x00000200006001b5 : mov edi, ebx ; test rbx, rbx ; jne 0x2000060019f ; jmp 0x2000046c49d
0x00000200000b8b6c : mov edi, ecx ; jne 0x200000b8b7f ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000490f4e : mov edi, ecx ; mov qword ptr [rsp + 0x20], rax ; call 0x2000007d1c9
0x000002000017bcf6 : mov edi, ecx ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000011258a : mov edi, edi ; ret
0x0000020000549144 : mov edi, edx ; call 0x2000016af15
0x0000020000592aae : mov edi, edx ; mov ebx, 0xc0000002 ; call 0x2000001ed89
0x00000200004890db : mov edi, edx ; mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x00000200004e68d4 : mov edi, edx ; mov rsi, rcx ; xor ebx, ebx ; call 0x20000142b61
0x000002000059efaa : mov edi, edx ; xor edi, edi ; xor ebp, ebp ; call 0x2000005b1f8
0x00000200004f525d : mov edi, esi ; call 0x2000011d049
0x0000020000371c10 : mov edi, esi ; jmp 0x2000036643a
0x0000020000656d30 : mov edi, esi ; ret
0x000002000064d9ff : mov edi, esi ; shl rdx, 4 ; call 0x20000270049
0x00000200003d6bc3 : mov edx, 0x117210e2 ; ret
0x00000200006ca844 : mov edx, 0x158d48ff ; ret
0x0000020000029d3b : mov edx, 0x168 ; add byte ptr [rbp + 0x11], dh ; ret
0x00000200000a818f : mov edx, 0x1720029 ; ret
0x000002000042c006 : mov edx, 0x1890ae8 ; xor eax, eax ; ret
0x0000020000510cb1 : mov edx, 0x200f44ff ; ret
0x0000020000016dd9 : mov edx, 0x220f07f0 ; loopne 0x20000016df8 ; and ah, cl ; ret
0x00000200000e9458 : mov edx, 0x220f07f0 ; loopne 0x200000e9477 ; and ah, cl ; ret
0x00000200001818f0 : mov edx, 0x220f07f0 ; loopne 0x2000018190f ; and ah, cl ; ret
0x000002000009f419 : mov edx, 0x28033b3e ; ret
0x0000020000168b2f : mov edx, 0x32 ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000058aa71 : mov edx, 0x3481ff0 ; ret
0x000002000006bc38 : mov edx, 0x3720029 ; mov al, 1 ; ret
0x000002000063f03c : mov edx, 0x37211e0 ; mov al, 1 ; ret
0x0000020000111ac3 : mov edx, 0x37211e1 ; xor eax, eax ; ret
0x0000020000494ee7 : mov edx, 0x37309e0 ; mov al, 1 ; ret
0x0000020000091167 : mov edx, 0x3d11b926 ; ret 0xb08e
0x00000200004012e0 : mov edx, 0x40115c ; add rax, r10 ; jmp rax
0x00000200003bd6c6 : mov edx, 0x418 ; add byte ptr [rbp + 2], dh ; ret
0x0000020000115776 : mov edx, 0x420f1fe1 ; ret 0x8841
0x00000200004996b3 : mov edx, 0x430f1fe2 ; ret 0x4489
0x0000020000566519 : mov edx, 0x458b4cff ; ror byte ptr [rax - 0x75], 0xd ; ret 0xd1b2
0x0000020000106006 : mov edx, 0x48001c68 ; add esp, 0x28 ; ret
0x00000200006ccab2 : mov edx, 0x4801b0ff ; add esp, 0x28 ; ret
0x0000020000705c30 : mov edx, 0x480a086b ; add esp, 0x20 ; pop rbx ; ret
0x000002000064980d : mov edx, 0x481f106b ; add esp, 0x20 ; pop rbx ; ret
0x000002000057e684 : mov edx, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200004cbbf5 : mov edx, 0x48c033ff ; add esp, 0x40 ; pop rbx ; ret
0x000002000051d0d2 : mov edx, 0x48ffef9f ; add esp, 0x68 ; ret
0x0000020000117092 : mov edx, 0x48fff8dd ; add esp, 0x58 ; ret
0x000002000015069a : mov edx, 0x48fffdfe ; add esp, 0x30 ; pop rbx ; ret
0x00000200004a5946 : mov edx, 0x4a0a9 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x0000020000702465 : mov edx, 0x4b ; lea ecx, dword ptr [rdx - 0x32] ; call rax
0x000002000003a1a2 : mov edx, 0x508d1fe1 ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x000002000037ddd1 : mov edx, 0x57308e2 ; add rsp, 0x38 ; ret
0x0000020000552dc4 : mov edx, 0x58706e50 ; call 0x2000026f017
0x00000200006652cd : mov edx, 0x5890df0 ; cli ; lodsd eax, dword ptr [rsi] ; ret 0x4cff
0x0000020000465e14 : mov edx, 0x5f ; jmp 0x20000465de4
0x000002000064ce9e : mov edx, 0x62535442 ; call 0x2000026f018
0x00000200001bf60a : mov edx, 0x64 ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200007024c9 : mov edx, 0x64 ; xor ecx, ecx ; call rax
0x000002000064ceb2 : mov edx, 0x6d535442 ; call 0x2000026f018
0x0000020000002fec : mov edx, 0x70 ; call rax
0x00000200001dea3e : mov edx, 0x7200106e ; ret 0x8b48
0x000002000001ea83 : mov edx, 0x7300106e ; xor bh, bh ; ret
0x0000020000008dd3 : mov edx, 0x7300106f ; cmp bh, bh ; ret
0x0000020000179dbc : mov edx, 0x7300306e ; sub bh, bh ; ret
0x0000020000177668 : mov edx, 0x7300406e ; sub bh, bh ; ret
0x000002000003a1c0 : mov edx, 0x7721be1 ; ret
0x000002000060ca55 : mov edx, 0x7ae990ff ; ret
0x0000020000060247 : mov edx, 0x820f002f ; ret 0x16ee
0x00000200000ccae2 : mov edx, 0x820f0be1 ; ret 0x1209
0x000002000038e3d0 : mov edx, 0x820f0ce0 ; ret
0x00000200004319ff : mov edx, 0x820f15e2 ; ret
0x0000020000445261 : mov edx, 0x820f19e0 ; ret 2
0x00000200001ccf9a : mov edx, 0x820f1de6 ; ret 0xffef
0x000002000012678d : mov edx, 0x820f1f2b ; ret 0xabd
0x000002000062bea7 : mov edx, 0x830f0029 ; ret 0xd782
0x00000200000bc26b : mov edx, 0x830f0be0 ; ret 0
0x00000200001829fe : mov edx, 0x830f0fe1 ; ret
0x00000200001f314b : mov edx, 0x830f12e6 ; ret
0x000002000037982e : mov edx, 0x830f18e7 ; ret 0xfff6
0x00000200005eb5ac : mov edx, 0x8349ffd6 ; ret
0x0000020000651b5b : mov edx, 0x84 ; call 0x2000064de03
0x0000020000647f62 : mov edx, 0x85000018 ; ror byte ptr [rdi], 0x94 ; ret
0x00000200004f7d1b : mov edx, 0x853e8949 ; sar byte ptr [rax + 0x18], 0x8b ; ret
0x000002000060c222 : mov edx, 0x85ffe355 ; ror byte ptr [rdi], 0x88 ; ret 0xffe1
0x0000020000054a1c : mov edx, 0x8a057870 ; ret 0xf0c3
0x000002000039bf82 : mov edx, 0x8b00255f ; ret
0x00000200006c5a96 : mov edx, 0x8b073071 ; ret
0x00000200000aa984 : mov edx, 0x8b41002c ; ret 0x8b41
0x00000200006e2745 : mov edx, 0x8b411ff2 ; ret
0x000002000007047c : mov edx, 0x8b441fea ; ret 0x8141
0x0000020000101ecd : mov edx, 0x8b48000e ; ret
0x00000200000eeafc : mov edx, 0x8b4809f3 ; ret
0x0000020000506c54 : mov edx, 0x8b480a2b ; ret
0x00000200001cd7fe : mov edx, 0x8b48ffe7 ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200001cd7f1 : mov edx, 0x8b48ffe7 ; add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x00000200001ee577 : mov edx, 0x8b49002c ; ret 0x8b41
0x00000200004260b1 : mov edx, 0x8b4c08eb ; ret
0x000002000070b352 : mov edx, 0x8bffb63c ; ret
0x00000200003f3482 : mov edx, 0x8bffc7f9 ; ret
0x0000020000524f02 : mov edx, 0x8bffe321 ; ret
0x00000200001b3ff2 : mov edx, 0x8bffe6ff ; ret
0x000002000069d2eb : mov edx, 0x8d481ff7 ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200003679d2 : mov edx, 0xb60f0000 ; ret
0x000002000047fe3f : mov edx, 0xb60f0015 ; ret
0x00000200006c372c : mov edx, 0xb60fffbd ; ret
0x00000200001601a6 : mov edx, 0xb60ffff0 ; ret
0x0000020000711154 : mov edx, 0xb7ef752d ; call qword ptr [rcx]
0x00000200005d225c : mov edx, 0xc0000001 ; mov eax, edx ; jmp 0x200005d2270
0x00000200001418bb : mov edx, 0xc0330020 ; add rsp, 0x28 ; ret
0x00000200006688bd : mov edx, 0xc0f8c435 ; call qword ptr [rax]
0x00000200006685d4 : mov edx, 0xc0fbad35 ; call qword ptr [rax]
0x0000020000502ffe : mov edx, 0xc48148ff ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004ff2aa : mov edx, 0xc48348ff ; pop rax ; ret
0x00000200004fdd2c : mov edx, 0xc48348ff ; push rax ; pop rbx ; ret
0x0000020000504b9d : mov edx, 0xc48348ff ; ret
0x00000200005652ca : mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x0000020000255200 : mov edx, 0xd70058c2 ; ret 0x58
0x0000020000082d41 : mov edx, 0xdbfd ; add byte ptr [rax], al ; mov ebp, dword ptr [rax] ; ret
0x0000020000091d26 : mov edx, 0xe5cb97af ; ret 0xd54e
0x00000200003c95ea : mov edx, 0xe721ce1 ; ret
0x000002000042744f : mov edx, 0xe8107471 ; adc al, 0x85 ; ret
0x00000200001c3aa1 : mov edx, 0xf48000c ; ret 0x8d48
0x000002000001c89d : mov edx, 0xf6000001 ; ret
0x0000020000199d31 : mov edx, 0xf6000001 ; ret 0x753f
0x00000200006476a0 : mov edx, 0xf6143868 ; ret
0x00000200005e7672 : mov edx, 0xf641ffd9 ; ret
0x00000200004425bd : mov edx, 0xff001c14 ; ret 0x8348
0x00000200000bdccd : mov edx, 0xff411fe9 ; ret 0x8944
0x00000200001405d4 : mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x0000020000517591 : mov edx, 0xffff ; add word ptr [rcx + 0xa], dx ; ret
0x00000200005ece0a : mov edx, 0xffffec1c ; ret
0x00000200006a1077 : mov edx, 1 ; jmp r8
0x00000200003fef12 : mov edx, 1 ; mov rcx, rbx ; call r10
0x00000200005d5b16 : mov edx, 2 ; call 0x20000441dd7
0x00000200006c1b4c : mov edx, dword ptr [r12 + rax*4] ; call qword ptr [rip - 0x3dafae]
0x0000020000195cc8 : mov edx, dword ptr [rax + 0x18] ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000013c54b : mov edx, dword ptr [rax + 0x28] ; test rdx, rdx ; je 0x2000013c55f ; call rdx
0x000002000016861d : mov edx, dword ptr [rax + 0x50] ; test rdx, rdx ; je 0x20000168631 ; jmp rdx
0x000002000014ca64 : mov edx, dword ptr [rax + 8] ; bts qword ptr [rdx], rcx ; ret
0x0000020000361046 : mov edx, dword ptr [rax + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call qword ptr [rax]
0x000002000013955b : mov edx, dword ptr [rax - 0x74fffffc] ; ret 0x8b48
0x00000200004b5c17 : mov edx, dword ptr [rax] ; add rdx, 8 ; mov rax, rdx ; ret
0x000002000052b6ee : mov edx, dword ptr [rax] ; mov rax, rdx ; jmp 0x2000052b707
0x000002000056489c : mov edx, dword ptr [rax] ; mov rax, rdx ; jmp 0x200005648b5
0x00000200001c7084 : mov edx, dword ptr [rbp + 0x100] ; call 0x200000f3308
0x00000200001c7762 : mov edx, dword ptr [rbp + 0x28] ; mov rcx, qword ptr [rbp + 0x30] ; call rax
0x0000020000019e98 : mov edx, dword ptr [rbp + 0x30] ; mov rcx, qword ptr [rbp + 0x28] ; call rax
0x00000200001044bc : mov edx, dword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x00000200000194cd : mov edx, dword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x38] ; call rax
0x0000020000398a59 : mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200004cafa7 : mov edx, dword ptr [rbp - 0x41] ; mov rcx, rdi ; call 0x200000771c8
0x0000020000177fe2 : mov edx, dword ptr [rbx + 0x30] ; mov rcx, rbx ; call rax
0x00000200006e0a46 : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0a5b
0x00000200006e1241 : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1256
0x00000200006e1e5e : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1e73
0x00000200006e5394 : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e53a9
0x00000200006e5bf2 : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e5c07
0x00000200006e6462 : mov edx, dword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e6477
0x0000020000448cdf : mov edx, dword ptr [rbx + 0x40] ; mov rcx, rbx ; call rax
0x000002000054dc2f : mov edx, dword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200004ecaf5 : mov edx, dword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004ecae7
0x0000020000656f4f : mov edx, dword ptr [rbx + 8] ; mov rcx, r11 ; mov rdi, rax ; call qword ptr [rbx]
0x000002000008e77d : mov edx, dword ptr [rbx] ; ret
0x000002000007bd39 : mov edx, dword ptr [rcx + 0x38] ; jmp rdx
0x000002000040849d : mov edx, dword ptr [rcx + 0x40] ; call rax
0x000002000069e3b1 : mov edx, dword ptr [rcx] ; call r8
0x000002000069fd38 : mov edx, dword ptr [rcx] ; call r9
0x000002000069dec1 : mov edx, dword ptr [rcx] ; call rdi
0x00000200003cd9cf : mov edx, dword ptr [rcx] ; test r10d, r10d ; jne 0x200003cd9e2 ; xor eax, eax ; ret
0x00000200005b51b7 : mov edx, dword ptr [rdi + 0x38] ; lea ecx, dword ptr [rbp + 2] ; call rax
0x00000200004ebdcf : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 1 ; call r8
0x00000200005b51ec : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x000002000061b28b : mov edx, dword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000061b29d ; call rax
0x00000200004ebdc2 : mov edx, dword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000069e75a : mov edx, dword ptr [rdi + 0x3b8] ; mov rax, rdx ; jmp 0x2000069e76f
0x00000200006dfda7 : mov edx, dword ptr [rdi + 0x3b8] ; mov rax, rdx ; jmp 0x200006dfdbc
0x00000200003c3334 : mov edx, dword ptr [rdi + 8] ; mov eax, dword ptr [rdi + 0x18] ; lea r8, qword ptr [rdx + rax*8] ; jmp 0x200003c3314
0x000002000035eb1e : mov edx, dword ptr [rdx + 0x10] ; jmp 0x2000035eae9
0x00000200001590ec : mov edx, dword ptr [rdx + 0x14] ; mov eax, dword ptr [rcx + 0x14] ; sub eax, edx ; ret
0x000002000064bee2 : mov edx, dword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x2000064bedc ; ret
0x00000200000176a2 : mov edx, dword ptr [rdx + 0x20] ; jmp 0x200000173d0
0x00000200003b41f2 : mov edx, dword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x0000020000022f89 : mov edx, dword ptr [rdx + 8] ; mov rbp, rcx ; mov rcx, rsi ; call qword ptr [rbx]
0x00000200004890de : mov edx, dword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x000002000003f984 : mov edx, dword ptr [rdx + rax*8] ; jmp 0x2000003f98e
0x00000200001bd99a : mov edx, dword ptr [rdx + rax*8] ; jmp 0x200001bd9a4
0x0000020000162123 : mov edx, dword ptr [rdx + rax*8] ; test rdx, rdx ; je 0x20000162135 ; call rdx
0x0000020000020eda : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000020edd ; xor eax, eax ; ret
0x000002000037e99f : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x2000037e9a0 ; ret
0x00000200006ba29e : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x200006ba294 ; xor eax, eax ; ret
0x0000020000587268 : mov edx, dword ptr [rdx] ; mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x0000020000629925 : mov edx, dword ptr [rip - 0x39ded3] ; call r10
0x000002000042b83a : mov edx, dword ptr [rsi + 0x2e0] ; mov rcx, r14 ; call rax
0x0000020000602856 : mov edx, dword ptr [rsi + 0x38] ; test rdx, rdx ; je 0x20000602868 ; call rax
0x00000200006e028e : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e02a3
0x00000200006e0671 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0686
0x00000200006e0e3b : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0e50
0x00000200006e1642 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1657
0x00000200006e1a5d : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1a72
0x00000200006e2283 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e2298
0x00000200006e4f65 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e4f7a
0x00000200006e57c3 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e57d8
0x00000200006e6032 : mov edx, dword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e6047
0x00000200004471d4 : mov edx, dword ptr [rsi + 0x68] ; mov rcx, rdi ; call rax
0x0000020000401e05 : mov edx, dword ptr [rsi + 8] ; call rax
0x00000200001c84af : mov edx, dword ptr [rsp + 0x28] ; mov rcx, rbx ; call 0x2000017473d
0x00000200006a11ce : mov edx, dword ptr [rsp + 0x30] ; call r10
0x000002000007b5e0 : mov edx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; call r10
0x00000200004f442a : mov edx, dword ptr [rsp + 0x40] ; dec rax ; add rax, rdx ; jmp 0x200004f43d2
0x0000020000023e8e : mov edx, dword ptr [rsp + 0x48] ; call r10
0x0000020000074db7 : mov edx, dword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200003c0817 : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rbp ; call rsi
0x00000200001a5c4d : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rdi ; call r9
0x00000200001a5c8f : mov edx, dword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x00000200006c1b4d : mov edx, dword ptr [rsp + rax*4] ; call qword ptr [rip - 0x3dafae]
0x0000020000466975 : mov edx, eax ; add byte ptr [rax], al ; add al, ch ; ror edi, 1 ; ret
0x00000200006d203b : mov edx, eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006d250e : mov edx, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000065a31b : mov edx, eax ; add rsp, 0x38 ; jmp r8
0x000002000015f94e : mov edx, eax ; call 0x2000006bc58
0x000002000043c1ef : mov edx, eax ; call 0x2000006bc59
0x000002000048bcd8 : mov edx, eax ; call 0x200000b4335
0x00000200001e8d01 : mov edx, eax ; call 0x200000d4fc4
0x000002000016bf3a : mov edx, eax ; call 0x2000016c0dd
0x00000200001f0590 : mov edx, eax ; call qword ptr [rbx]
0x00000200006c17c0 : mov edx, eax ; call qword ptr [rip - 0x3dac20]
0x00000200006c181f : mov edx, eax ; call qword ptr [rip - 0x3dac7f]
0x00000200006c191b : mov edx, eax ; call qword ptr [rip - 0x3dad7b]
0x00000200005b4773 : mov edx, eax ; int 0xff
0x000002000041c30d : mov edx, eax ; jne 0x2000041c320 ; mov eax, 1 ; ret
0x0000020000523e0d : mov edx, eax ; mov dword ptr [rbp + 0x38], eax ; call 0x20000270047
0x00000200004d6876 : mov edx, eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x00000200001564b8 : mov edx, eax ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000041b4d6 : mov edx, eax ; mov eax, edx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000586317 : mov edx, eax ; mov eax, edx ; jmp 0x20000586325
0x00000200005070fe : mov edx, eax ; mov eax, edx ; ret
0x00000200005bafd0 : mov edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200004d0403 : mov edx, eax ; mov eax, r10d ; add rsp, 0x48 ; ret
0x00000200006449b1 : mov edx, eax ; mov ebp, eax ; call 0x20000270047
0x000002000035ecd0 : mov edx, eax ; mov rax, qword ptr [rax + 8] ; jmp 0x2000035eca1
0x0000020000101b3b : mov edx, eax ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000428624 : mov edx, eax ; mov rcx, rbx ; call 0x20000056fc4
0x0000020000428ef3 : mov edx, eax ; mov rcx, rdi ; call 0x20000056fc4
0x0000020000498b3f : mov edx, eax ; mov rcx, rsi ; call r14
0x00000200001682e9 : mov edx, eax ; shr rdx, 0x20 ; wrmsr ; ret
0x0000020000132af9 : mov edx, eax ; test r8d, r8d ; jne 0x20000132b0a ; ret
0x0000020000151dea : mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x000002000019f1f7 : mov edx, ebp ; call 0x2000014b4f4
0x000002000057a33f : mov edx, ebp ; call 0x200001a3bb1
0x00000200000d963a : mov edx, ebp ; call rax
0x000002000012034f : mov edx, ebp ; jmp 0x200001202a0
0x000002000016c6ec : mov edx, ebp ; mov rax, qword ptr [rip + 0x115083] ; call rax
0x00000200001ab031 : mov edx, ebp ; mov rcx, rbx ; call 0x200001a7297
0x000002000064c1e0 : mov edx, ebp ; mov rcx, rbx ; call rax
0x000002000006526f : mov edx, ebp ; mov rcx, rbx ; xor r12d, r12d ; call r15
0x00000200006407e3 : mov edx, ebp ; mov rcx, rdi ; call 0x2000026f018
0x000002000013b67f : mov edx, ebp ; mov rcx, rdi ; call 0x2000049796b
0x0000020000499746 : mov edx, ebp ; mov rcx, rdi ; call r12
0x00000200004ea249 : mov edx, ebp ; mov rcx, rdi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x00000200006473d7 : mov edx, ebp ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x00000200005b886b : mov edx, ebp ; mov rcx, rsi ; call 0x20000054afb
0x00000200006407d5 : mov edx, ebp ; mov rcx, rsi ; call 0x2000026f018
0x0000020000510fdf : mov edx, ebp ; mov rcx, rsi ; call r14
0x00000200001faf76 : mov edx, ebp ; shl r8, 4 ; call 0x200000771c8
0x00000200006c0607 : mov edx, ebx ; call 0x20000076da9
0x00000200004f3d64 : mov edx, ebx ; call 0x200000771c9
0x00000200004902f3 : mov edx, ebx ; call 0x200000bf275
0x000002000006acaf : mov edx, ebx ; call 0x200000c6f84
0x000002000001e9f6 : mov edx, ebx ; call 0x200000d256d
0x00000200004cbeba : mov edx, ebx ; call 0x2000012d999
0x00000200005137c0 : mov edx, ebx ; call 0x200001434b5
0x0000020000640765 : mov edx, ebx ; call 0x20000270045
0x00000200004118b6 : mov edx, ebx ; call 0x2000051db64
0x0000020000119c39 : mov edx, ebx ; call rax
0x00000200000207e3 : mov edx, ebx ; jmp 0x200000205b0
0x0000020000528662 : mov edx, ebx ; mov ecx, ebp ; call 0x20000153ff7
0x00000200004475a5 : mov edx, ebx ; mov rcx, qword ptr [r14 + 0x60] ; call 0x200000771c9
0x000002000004a51e : mov edx, ebx ; mov rcx, r11 ; call 0x200000b67a7
0x0000020000005cd1 : mov edx, ebx ; mov rcx, r13 ; call r15
0x00000200006600a6 : mov edx, ebx ; mov rcx, r14 ; call 0x2000065c39b
0x0000020000645dd1 : mov edx, ebx ; mov rcx, r14 ; call r12
0x0000020000448da5 : mov edx, ebx ; mov rcx, r15 ; call 0x20000076da8
0x00000200001264e9 : mov edx, ebx ; mov rcx, r15 ; call r12
0x00000200004487cc : mov edx, ebx ; mov rcx, r8 ; call 0x20000076da8
0x00000200006600b1 : mov edx, ebx ; mov rcx, rbp ; call 0x2000065c2c3
0x000002000058da26 : mov edx, ebx ; mov rcx, rbx ; call rax
0x0000020000416ea4 : mov edx, ebx ; mov rcx, rdi ; call 0x2000042316f
0x000002000066009b : mov edx, ebx ; mov rcx, rdi ; call 0x2000065c39b
0x00000200003d025b : mov edx, ebx ; mov rcx, rdi ; call r10
0x0000020000121e1b : mov edx, ebx ; mov rcx, rdi ; call r15
0x000002000005c3c1 : mov edx, ebx ; mov rcx, rdi ; call rax
0x000002000015c02b : mov edx, ebx ; mov rcx, rdi ; call rsi
0x0000020000010def : mov edx, ebx ; mov rcx, rdi ; mov rax, rsi ; call rax
0x00000200004297a8 : mov edx, ebx ; mov rcx, rsi ; call 0x20000056fc4
0x00000200005972fb : mov edx, ebx ; mov rcx, rsi ; call 0x200000735d7
0x0000020000706070 : mov edx, ebx ; mov rcx, rsi ; call 0x20000102297
0x0000020000522c44 : mov edx, ebx ; mov rcx, rsi ; call 0x2000014c27c
0x0000020000660090 : mov edx, ebx ; mov rcx, rsi ; call 0x2000065c39b
0x00000200001b753c : mov edx, ebx ; mov rcx, rsi ; mov dword ptr [rbx], r11d ; call rdi
0x00000200006a1149 : mov edx, ebx ; pop rbx ; add rsp, 8 ; jmp r8
0x00000200001ca884 : mov edx, ebx ; xor ecx, ecx ; call 0x200000f6b16
0x000002000019c6f7 : mov edx, ecx ; cmp rcx, qword ptr [r8 + 0x28] ; jne 0x2000019c6f5 ; ret
0x000002000011a2d5 : mov edx, ecx ; je 0x200001f075c ; ret
0x00000200001d7a31 : mov edx, ecx ; jmp 0x200001d79fa
0x00000200000ea9df : mov edx, ecx ; jne 0x200000ea9e8 ; ret
0x000002000064afb1 : mov edx, ecx ; jne 0x2000064afbe ; xor eax, eax ; ret
0x00000200005848dd : mov edx, ecx ; lea r8d, dword ptr [rax + 1] ; call 0x20000580b98
0x00000200000c8507 : mov edx, ecx ; lea rcx, qword ptr [rbp + 0x10] ; call 0x200001747b8
0x000002000013945b : mov edx, ecx ; mov eax, edx ; ret
0x00000200005748c5 : mov edx, ecx ; mov eax, r10d ; ret
0x000002000010580a : mov edx, ecx ; mov rax, rbx ; mov rcx, rdi ; call rax
0x000002000044944a : mov edx, ecx ; mov rcx, r8 ; call 0x20000076da8
0x000002000000302f : mov edx, ecx ; mov rcx, rax ; call r8
0x00000200005d01ae : mov edx, ecx ; test r9, r9 ; jne 0x200005d01c1 ; xor al, al ; ret
0x000002000058be8d : mov edx, ecx ; test rcx, rcx ; jne 0x2000058bea0 ; xor al, al ; ret
0x0000020000123ad0 : mov edx, edi ; add rcx, 8 ; call 0x200000cfd34
0x000002000052b8d2 : mov edx, edi ; call 0x20000038f9d
0x00000200001aaf03 : mov edx, edi ; call 0x200000771c4
0x000002000048fddb : mov edx, edi ; call 0x200000bf275
0x00000200004b59eb : mov edx, edi ; call 0x200000d5ba5
0x000002000051c8fb : mov edx, edi ; call 0x2000014a721
0x000002000063f5ae : mov edx, edi ; call 0x2000026f015
0x00000200003b71dd : mov edx, edi ; call 0x200003b3408
0x0000020000426395 : mov edx, edi ; call qword ptr [rax]
0x000002000012c0d8 : mov edx, edi ; call rax
0x0000020000644d57 : mov edx, edi ; call rdi
0x00000200004890ab : mov edx, edi ; call rsi
0x000002000014ed96 : mov edx, edi ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x000002000070ef5f : mov edx, edi ; mov ecx, r14d ; call 0x200000fb20f
0x0000020000553db2 : mov edx, edi ; mov r12d, edi ; call 0x20000270047
0x00000200001b18e4 : mov edx, edi ; mov rcx, r12 ; call 0x200001adb8b
0x000002000003ff90 : mov edx, edi ; mov rcx, r12 ; call r14
0x0000020000645bb9 : mov edx, edi ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000368cbf : mov edx, edi ; mov rcx, r14 ; call 0x200000d4f17
0x000002000063111c : mov edx, edi ; mov rcx, r14 ; call rax
0x000002000063124c : mov edx, edi ; mov rcx, r15 ; call rax
0x00000200003cfa69 : mov edx, edi ; mov rcx, rbp ; call r15
0x000002000017a56e : mov edx, edi ; mov rcx, rbp ; call rax
0x0000020000026df8 : mov edx, edi ; mov rcx, rbx ; call 0x200001a305b
0x000002000015f8bb : mov edx, edi ; mov rcx, rbx ; call r10
0x000002000019ad93 : mov edx, edi ; mov rcx, rbx ; call rax
0x000002000046f0c7 : mov edx, edi ; mov rcx, rdi ; call rax
0x000002000041f629 : mov edx, edi ; mov rcx, rsi ; call 0x2000004d1c8
0x00000200001aaf4f : mov edx, edi ; mov rcx, rsi ; call 0x200000771c7
0x0000020000549f14 : mov edx, edi ; mov rcx, rsi ; call 0x2000016aa58
0x0000020000630bbf : mov edx, edi ; mov rcx, rsi ; call r10
0x000002000003ffcb : mov edx, edi ; mov rcx, rsi ; call r14
0x0000020000646ea7 : mov edx, edi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000051bd0b : mov edx, edx ; call 0x2000014a6e5
0x0000020000396c89 : mov edx, edx ; call r11
0x00000200000ea9dc : mov edx, edx ; mov rdx, rcx ; jne 0x200000ea9eb ; ret
0x000002000045ba60 : mov edx, esi ; call 0x200000bb078
0x00000200004895e3 : mov edx, esi ; call 0x20000107958
0x00000200001efa4b : mov edx, esi ; call 0x2000012bd10
0x0000020000544a90 : mov edx, esi ; call 0x2000016af85
0x0000020000503df5 : mov edx, esi ; call 0x20000270044
0x0000020000584e52 : mov edx, esi ; call 0x200005810f4
0x0000020000584ff7 : mov edx, esi ; call 0x20000581294
0x000002000012bc9c : mov edx, esi ; call r11
0x000002000003ff58 : mov edx, esi ; call r14
0x00000200001efa62 : mov edx, esi ; call rax
0x00000200006138be : mov edx, esi ; dec dword ptr [rax - 1] ; ret
0x00000200004a8f76 : mov edx, esi ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200004d4827 : mov edx, esi ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001cf27a : mov edx, esi ; mov rcx, r12 ; call r15
0x00000200005cded6 : mov edx, esi ; mov rcx, r12 ; call rax
0x000002000063dee5 : mov edx, esi ; mov rcx, r13 ; call r15
0x0000020000475358 : mov edx, esi ; mov rcx, r13 ; call rax
0x0000020000421256 : mov edx, esi ; mov rcx, r14 ; call 0x2000004d4f7
0x0000020000051830 : mov edx, esi ; mov rcx, r14 ; call r11
0x00000200005201ae : mov edx, esi ; mov rcx, r14 ; call r9
0x0000020000140825 : mov edx, esi ; mov rcx, r15 ; call r14
0x00000200003b6c89 : mov edx, esi ; mov rcx, r15 ; call rax
0x000002000070fb11 : mov edx, esi ; mov rcx, rax ; call 0x2000051bd67
0x0000020000652d76 : mov edx, esi ; mov rcx, rax ; call r15
0x00000200003abe87 : mov edx, esi ; mov rcx, rbp ; call rax
0x0000020000449a85 : mov edx, esi ; mov rcx, rbx ; call 0x200000771c8
0x0000020000584e60 : mov edx, esi ; mov rcx, rbx ; call 0x200005810f7
0x0000020000585005 : mov edx, esi ; mov rcx, rbx ; call 0x20000581297
0x00000200003d02d2 : mov edx, esi ; mov rcx, rbx ; call r11
0x000002000004001e : mov edx, esi ; mov rcx, rbx ; call r14
0x000002000064c565 : mov edx, esi ; mov rcx, rbx ; call rax
0x00000200005222e1 : mov edx, esi ; mov rcx, rdi ; call 0x20000150a24
0x000002000051d3df : mov edx, esi ; mov rcx, rdi ; call 0x2000049961f
0x000002000050b81d : mov edx, esi ; mov rcx, rdi ; call qword ptr [rax]
0x00000200006d9162 : mov edx, esi ; mov rcx, rdi ; call r12
0x000002000004004e : mov edx, esi ; mov rcx, rdi ; call r14
0x0000020000645829 : mov edx, esi ; mov rcx, rdi ; call r15
0x00000200001b2178 : mov edx, esi ; mov rcx, rdi ; call rax
0x00000200001d13c9 : mov edx, esi ; mov rcx, rdi ; call rbx
0x00000200004275b7 : mov edx, esi ; mov rcx, rsi ; call 0x20000052468
0x000002000044255e : mov edx, esi ; mov rcx, rsi ; call 0x2000006cd00
0x00000200005c7b29 : mov edx, esi ; mov rcx, rsi ; call rax
0x000002000049dfc4 : mov edx, esp ; call 0x200000c6f85
0x0000020000503dcc : mov edx, esp ; call 0x20000270044
0x0000020000646d31 : mov edx, esp ; call rax
0x0000020000487528 : mov edx, esp ; call rdi
0x00000200005c6f27 : mov edx, esp ; call rsi
0x0000020000630116 : mov edx, esp ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200005098eb : mov edx, esp ; lea rcx, qword ptr [rsp + 0x40] ; call 0x20000405b91
0x00000200003a77a8 : mov edx, esp ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x0000020000053df2 : mov edx, esp ; mov rcx, qword ptr [rsi + 0x28] ; call 0x20000050098
0x00000200000e74b0 : mov edx, esp ; mov rcx, r13 ; call rax
0x00000200004118fb : mov edx, esp ; mov rcx, r14 ; call 0x200004edb13
0x00000200005515b2 : mov edx, esp ; mov rcx, r14 ; call rax
0x00000200004d58f7 : mov edx, esp ; mov rcx, r15 ; call rax
0x00000200003ab7a3 : mov edx, esp ; mov rcx, rbx ; call r15
0x000002000035da95 : mov edx, esp ; mov rcx, rbx ; call r8
0x00000200003ccb7d : mov edx, esp ; mov rcx, rsi ; call 0x20000438e67
0x0000020000491de1 : mov edx, esp ; ret 0x90ff
0x00000200004af290 : mov edx, fs ; push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0xd ; ret
0x0000020000396c88 : mov edx, r10d ; call r11
0x00000200004118fa : mov edx, r12d ; mov rcx, r14 ; call 0x200004edb14
0x00000200005b886a : mov edx, r13d ; mov rcx, rsi ; call 0x20000054afc
0x000002000012bc9b : mov edx, r14d ; call r11
0x0000020000632104 : mov edx, r14d ; call rax
0x000002000070fb10 : mov edx, r14d ; mov rcx, rax ; call 0x2000051bd68
0x0000020000645828 : mov edx, r14d ; mov rcx, rdi ; call r15
0x0000020000123acf : mov edx, r15d ; add rcx, 8 ; call 0x200000cfd35
0x00000200003b71dc : mov edx, r15d ; call 0x200003b3409
0x000002000012c0d7 : mov edx, r15d ; call rax
0x0000020000644d56 : mov edx, r15d ; call rdi
0x000002000014ed95 : mov edx, r15d ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x000002000046f0c6 : mov edx, r15d ; mov rcx, rdi ; call rax
0x000002000038cd07 : mov edx, r8d ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200005848dc : mov edx, r9d ; lea r8d, dword ptr [rax + 1] ; call 0x20000580b99
0x00000200002163f0 : mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x000002000070e278 : mov es, esp ; inc dword ptr [rcx - 0x73] ; add dword ptr [r11], r12d ; ret 0xd2f7
0x00000200000322db : mov es, word ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200003a0f86 : mov es, word ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000082cfb : mov esi, 0 ; leave ; ret 0x21d1
0x000002000063ad53 : mov esi, 0x175ffc5 ; ret
0x00000200003ca3da : mov esi, 0x20f083c1 ; ret
0x00000200004cee0b : mov esi, 0x33fffffe ; ror byte ptr [rcx - 0x77], 0x13 ; ret
0x00000200006fdf55 : mov esi, 0x35894cff ; ret 0xbe82
0x000002000064abc8 : mov esi, 0x3b45ffc4 ; ret 0x4a75
0x00000200004bd8a2 : mov esi, 0x3bf88bff ; ret
0x00000200006e3c70 : mov esi, 0x3d0 ; mov rax, rdx ; jmp 0x200006e3c83
0x00000200006646b5 : mov esi, 0x3d80ffae ; push rcx ; cwde ; ret 0xff
0x00000200004f496a : mov esi, 0x48000000 ; mov ecx, ebx ; call rax
0x000002000063f576 : mov esi, 0x480004fa ; add esp, 0x38 ; ret
0x000002000013c4ae : mov esi, 0x4800162b ; add esp, 0x20 ; pop rbx ; ret
0x00000200006686ac : mov esi, 0x48c38b41 ; add esp, 0x28 ; ret
0x000002000041cefa : mov esi, 0x48ffc3a7 ; add esp, 0x28 ; ret
0x000002000054dc4e : mov esi, 0x48ffd213 ; add esp, 0x40 ; pop rbx ; ret
0x0000020000177d7e : mov esi, 0x48fff2a2 ; add esp, 0x38 ; ret
0x00000200000627d4 : mov esi, 0x4c8b49c0 ; ret 0x4848
0x0000020000706380 : mov esi, 0x5c8b48ff ; and al, 8 ; xor eax, eax ; ret
0x00000200006bba1b : mov esi, 0x6348ffc1 ; ret 0x8d49
0x0000020000489ef9 : mov esi, 0x75c085ff ; ret
0x0000020000142b89 : mov esi, 0x75c83bc0 ; or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200007021d7 : mov esi, 0x8b08ebff ; ret
0x0000020000584f99 : mov esi, 0x8b44ffec ; ret
0x000002000005c415 : mov esi, 0x8b480018 ; ret 0x4cf0
0x000002000006c150 : mov esi, 0x8b48c033 ; pop rsp ; and al, 8 ; ret
0x00000200005d7fb0 : mov esi, 0x8b48ffef ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001426ca : mov esi, 0x8b4cffef ; ret
0x00000200004da9e2 : mov esi, 0x8bffce1d ; ret
0x000002000060aa76 : mov esi, 0x8bffe2c9 ; ret
0x00000200000ef55e : mov esi, 0x8bfffec8 ; ret
0x0000020000525641 : mov esi, 0x8bfffffe ; ret
0x00000200001e822e : mov esi, 0x90fffa0a ; jmp 0x200000c4446
0x000002000000bbae : mov esi, 0x90ffffff ; add rsp, 0x28 ; ret
0x0000020000085521 : mov esi, 0x92d ; add byte ptr [rax], al ; ret
0x00000200004b7191 : mov esi, 0x950f41ff ; ret
0x00000200003b8c50 : mov esi, 0x989680 ; call 0x200000a4e87
0x000002000048c025 : mov esi, 0xb60fffe4 ; ret
0x00000200000e5948 : mov esi, 0xbe0f080c ; ret 0xc82b
0x00000200003a9394 : mov esi, 0xc0000010 ; jmp 0x200003a9363
0x00000200003efa44 : mov esi, 0xc0000017 ; jmp 0x200003ebd0e
0x00000200003efa3a : mov esi, 0xc000003e ; jmp 0x200003ebd0e
0x0000020000089eee : mov esi, 0xc2c1c0bf ; ret
0x0000020000570549 : mov esi, 0xc2f6ffd5 ; add dh, byte ptr [rcx + rdx - 0xa] ; ret 0x7504
0x00000200001aec0f : mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x57e
0x000002000005aff0 : mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x8d0f
0x00000200004b71d4 : mov esi, 0xc48348ff ; jo 0x200004b723d ; ret
0x0000020000490777 : mov esi, 0xc48348ff ; pop rbx ; ret
0x0000020000590788 : mov esi, 0xc88bffc0 ; mov esi, eax ; call 0x2000019c9f5
0x00000200005907b4 : mov esi, 0xc88bffc0 ; mov esi, eax ; call 0x2000019ca41
0x000002000042eef7 : mov esi, 0xe8000000 ; jo 0x2000042ef40 ; ret
0x0000020000438c5b : mov esi, 0xe9fffffe ; ret
0x000002000048fb69 : mov esi, 0xf44ccff ; mov dh, 0xd ; insb byte ptr [rdi], dx ; ret 0xffe3
0x000002000014cce6 : mov esi, 0xf6000b30 ; ret
0x000002000036b1d3 : mov esi, 0xf641fffe ; ret
0x00000200004dbf56 : mov esi, 0xf6ffdaca ; ret
0x000002000004184f : mov esi, 0xf6fffff8 ; ret
0x00000200001569fe : mov esi, 0xf6fffffe ; ret
0x000002000018cfe1 : mov esi, 0xfff6fb7d ; dec dword ptr [rax + 0x3b] ; ret 0x1372
0x000002000018cff0 : mov esi, 0xfff6fb7d ; dec dword ptr [rax + 0x3b] ; ret 0x477
0x000002000047c977 : mov esi, 0xfff6fb7d ; dec dword ptr [rax - 0x75] ; ret
0x0000020000004474 : mov esi, 0xfff6fb7d ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006231fa : mov esi, 0xffffae6f ; ret
0x000002000043a97c : mov esi, 2 ; jmp 0x2000043a94c
0x000002000008ebbf : mov esi, dr0 ; push rsi ; ret
0x000002000062f980 : mov esi, dr0 ; ret
0x0000020000009ed0 : mov esi, dword ptr [rax + rcx*4] ; jmp 0x2000004ad5e
0x00000200001a8d4a : mov esi, dword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001dd60d : mov esi, dword ptr [rbp + 0x67] ; jmp 0x2000014cd9b
0x0000020000568ed2 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x00000200004ad845 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000019271 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000562850 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000410a0d : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000049c124 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000000756f : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c8540 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x00000200000362a8 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000001ae0d : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x00000200006d1ce1 : mov esi, dword ptr [rbx + rax - 0x74b70000] ; ret 0xc148
0x00000200006e425f : mov esi, dword ptr [rbx + rax - 0x74bb0000] ; ret
0x00000200003b8204 : mov esi, dword ptr [rsi] ; jmp 0x200003b8130
0x000002000009f70b : mov esi, dword ptr [rsi] ; mov dl, 0xc8 ; mov ah, 0xe ; outsd dx, dword ptr [rsi] ; ret
0x000002000002d303 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000003e9e5 : mov esi, dword ptr [rsp + 0x10] ; ret
0x000002000001fc7d : mov esi, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x000002000004c0e6 : mov esi, dword ptr [rsp + 0x18] ; ret
0x0000020000112caf : mov esi, dword ptr [rsp + 0x20] ; mov al, r10b ; ret
0x000002000019a747 : mov esi, dword ptr [rsp + 0x20] ; pop r14 ; ret
0x0000020000060ba4 : mov esi, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000014c7e4 : mov esi, dword ptr [rsp + 0x20] ; ret
0x000002000056a978 : mov esi, dword ptr [rsp + 0x28] ; mov eax, r11d ; pop rdi ; ret
0x0000020000024313 : mov esi, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200001a2a07 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000c2056 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b1ab5 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000003714 : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019f813 : mov esi, dword ptr [rsp + 0x38] ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000006bdf : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000164627 : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c06d5 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000005174 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000466a9f : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000013b6e : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000a8355 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000564d7 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000158040 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001b616c : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000028454 : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000330cd : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000003a14b : mov esi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000017037c : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000006e95 : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000003e1e8 : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000368a7c : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000001b12d : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000036c92 : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200005ebf07 : mov esi, dword ptr [rsp + 0x98] ; jmp 0x20000448174
0x00000200001c4412 : mov esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200006c1e10 : mov esi, eax ; add eax, 0xd890000 ; push rcx ; ret
0x0000020000423b7e : mov esi, eax ; call 0x2000004fa89
0x000002000051d703 : mov esi, eax ; call 0x2000014a21d
0x000002000059078d : mov esi, eax ; call 0x2000019c9f0
0x00000200005907b9 : mov esi, eax ; call 0x2000019ca3c
0x0000020000645ced : mov esi, eax ; call rbx
0x000002000012209a : mov esi, eax ; jmp 0x20000121fe5
0x0000020000600255 : mov esi, eax ; jmp 0x2000037dc37
0x00000200001c6e75 : mov esi, eax ; mov r15, rax ; jmp rsi
0x000002000008e0c4 : mov esi, eax ; ret 0x6716
0x00000200001eed9d : mov esi, ebp ; dec dword ptr [rbx + 0x5892043] ; ret
0x000002000004184c : mov esi, ebp ; jmp 0x20000041119
0x0000020000026683 : mov esi, ebx ; jmp 0x200000262d1
0x000002000005197f : mov esi, ebx ; jmp 0x20000051911
0x0000020000526679 : mov esi, ecx ; call 0x20000152e15
0x000002000018fdb6 : mov esi, ecx ; jmp 0x2000018fe20
0x0000020000549140 : mov esi, ecx ; mov cl, 0xb0 ; mov edi, edx ; call 0x2000016af19
0x0000020000520604 : mov esi, ecx ; mov ebp, r12d ; call 0x2000014b79c
0x00000200004e68d7 : mov esi, ecx ; xor ebx, ebx ; call 0x20000142b5e
0x00000200004c1241 : mov esi, edi ; jmp 0x200003ed4bf
0x00000200004e1ec0 : mov esi, edx ; call 0x20000105b79
0x000002000017bb35 : mov esi, edx ; call qword ptr [rax]
0x000002000014b50a : mov esi, edx ; call qword ptr [rbx]
0x00000200006d5183 : mov esi, edx ; lea edx, dword ptr [rbx + 0x18] ; call rdi
0x00000200006d55a5 : mov esi, edx ; lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59f9 : mov esi, edx ; lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d5792 : mov esi, edx ; lea edx, dword ptr [rbx + 0x58] ; call rdi
0x00000200006d536c : mov esi, edx ; lea edx, dword ptr [rbx + 0x88] ; call rdi
0x000002000015606e : mov esi, edx ; mov r8d, edx ; jmp 0x20000156096
0x00000200005c7c1a : mov esi, edx ; mov rbp, rcx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x000002000017bc14 : mov esi, edx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000610af0 : mov esi, esi ; jmp 0x200003c1b7c
0x0000020000051982 : mov esi, esi ; ret
0x00000200006eab6d : mov esi, esp ; mov rax, rdx ; jmp 0x200006eab7e
0x0000020000610aef : mov esi, r14d ; jmp 0x200003c1b7d
0x00000200004c1240 : mov esi, r15d ; jmp 0x200003ed4c0
0x000002000006ea86 : mov esp, 0x12024 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000003ff45 : mov esp, 0x220ec ; add bl, ch ; ret 0xd148
0x0000020000023e8c : mov esp, 0x24548b48 ; call r10
0x0000020000091f43 : mov esp, 0x2bee8961 ; ret 0x8199
0x000002000010d659 : mov esp, 0x356c80c1 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200006c1e27 : mov esp, 0x390d89ff ; ret
0x00000200000ff74d : mov esp, 0x440f41c0 ; ret
0x000002000002095e : mov esp, 0x440f41c0 ; ret 0xc13b
0x00000200000ff6ab : mov esp, 0x440f41c1 ; ret
0x000002000015eeb9 : mov esp, 0x440f41c2 ; ret 0xc13b
0x00000200000ffd95 : mov esp, 0x44fffffe ; mov eax, edx ; jmp 0x200000ffd24
0x00000200000cfa16 : mov esp, 0x458944c1 ; ret
0x0000020000136c88 : mov esp, 0x48000b6d ; add esp, 0x38 ; ret
0x000002000018bf80 : mov esp, 0x48000e40 ; add esp, 0x28 ; ret
0x00000200001bc043 : mov esp, 0x48bb75cb ; add esp, 0x20 ; pop rbx ; ret
0x00000200004eb039 : mov esp, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200004e4325 : mov esp, 0x48c033ff ; add esp, 0x30 ; pop rbx ; ret
0x00000200004cdf4c : mov esp, 0x48ffef55 ; add esp, 0x38 ; ret
0x00000200006bf39c : mov esp, 0x58948ff ; ret
0x00000200006ca9c4 : mov esp, 0x58d48ff ; ret
0x00000200006bf395 : mov esp, 0x58d48ff ; ret 0xbcb2
0x00000200003d8e35 : mov esp, 0x666c ; jmp 0x200003d8db1
0x000002000010e123 : mov esp, 0x68e90008 ; sub bh, dh ; push rsi ; ret
0x00000200004aeeaa : mov esp, 0x75c085ff ; ret
0x00000200006c9c3f : mov esp, 0x75e800ff ; ret
0x0000020000611a20 : mov esp, 0x8024 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000472eb0 : mov esp, 0x8024 ; add dh, dh ; ret 0x7410
0x00000200004b9a70 : mov esp, 0x83fff97a ; ret
0x000002000056cb5c : mov esp, 0x84ffd894 ; ret 0x1274
0x0000020000468da6 : mov esp, 0x8824 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000596ab5 : mov esp, 0x8824 ; add byte ptr [rbx - 0xa], dh ; ret
0x00000200005309a0 : mov esp, 0x89ffea64 ; ret
0x000002000065b108 : mov esp, 0x8affffd6 ; ret
0x0000020000418be6 : mov esp, 0x8b000006 ; ret
0x00000200001e9435 : mov esp, 0x8b49ffee ; ret
0x0000020000667a00 : mov esp, 0x8bffae2e ; ret
0x00000200006c73f8 : mov esp, 0x8bffc901 ; ret
0x0000020000523e50 : mov esp, 0x8bffd4b1 ; ret
0x00000200001e8190 : mov esp, 0x90fffa0b ; jmp 0x200000c4446
0x00000200000917c4 : mov esp, 0xab89f2ec ; and bpl, 0xe4 ; ret 0x394e
0x000002000008dd28 : mov esp, 0xb4473c5 ; pop rdi ; xchg eax, ebp ; ret
0x000002000015ffe5 : mov esp, 0xb60ffff0 ; ret
0x000002000038a746 : mov esp, 0xb60ffff5 ; ret
0x0000020000146678 : mov esp, 0xb70f000a ; ret 0x94c
0x0000020000146657 : mov esp, 0xb70f000a ; ret 0x94d
0x000002000060a6cd : mov esp, 0xb70fffef ; ret 0x8d48
0x000002000060cbe9 : mov esp, 0xc00000bb ; jmp 0x20000428e2f
0x00000200001183aa : mov esp, 0xc032000b ; ret
0x0000020000626884 : mov esp, 0xc3f6ffc6 ; add dh, byte ptr [rcx + rdx - 0xa] ; ret
0x00000200004de075 : mov esp, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000008dde6 : mov esp, 0xc629519f ; ret
0x00000200000915df : mov esp, 0xe70b3d35 ; ret
0x000002000049a49f : mov esp, 0xe8a3ebff ; sub bl, bh ; ret
0x00000200000de921 : mov esp, 0xf6fffff9 ; ret 0xf03
0x00000200000921a7 : mov esp, 0xf76cb2a1 ; sub eax, dword ptr [rdi - 0x67] ; ret
0x000002000038370b : mov esp, dword ptr [rax + 0x1e4] ; call rdi
0x000002000006a4aa : mov esp, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000413346 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000011e4d3 : mov esp, dword ptr [rbx] ; add byte ptr [rcx - 0xa], al ; ret
0x000002000007714e : mov esp, dword ptr [rcx + 0x10] ; jmp rdx
0x000002000007b4ff : mov esp, dword ptr [rsp + 0x100] ; sti ; ret
0x00000200006f06b8 : mov esp, ebx ; jmp 0x200006f068c
0x000002000070ef4b : mov esp, ebx ; mov qword ptr [rbp - 0x10], rbx ; call 0x200000fb210
0x000002000038485c : mov esp, ebx ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006c0b11 : mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b8b3b : mov esp, ebx ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000034104 : mov esp, ebx ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000011dc60 : mov esp, ebx ; pop r14 ; pop r13 ; pop r12 ; ret
0x0000020000367a00 : mov esp, ebx ; pop r14 ; pop r13 ; pop rbp ; ret
0x000002000017c49d : mov esp, ebx ; pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000006610 : mov esp, ebx ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000041b2 : mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000001b6fd : mov esp, ebx ; pop r14 ; ret
0x000002000060589d : mov esp, ebx ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200006f24ab : mov esp, ebx ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000edffb : mov esp, ebx ; pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003ad740 : mov esp, ebx ; pop r15 ; pop r13 ; pop rbp ; ret
0x000002000000cb9f : mov esp, ebx ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000014d9a7 : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000117991 : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; ret
0x000002000000389e : mov esp, ebx ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001423d3 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000012c78 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000057a3e4 : mov esp, ebx ; pop r15 ; pop r14 ; pop rsi ; ret
0x000002000011904c : mov esp, ebx ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200005a920a : mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000106b3a : mov esp, ebx ; pop r15 ; ret
0x0000020000016887 : mov esp, ebx ; pop rbp ; ret
0x0000020000007573 : mov esp, ebx ; pop rdi ; ret
0x0000020000553db5 : mov esp, edi ; call 0x20000270044
0x00000200003747d6 : mov esp, edi ; jmp 0x2000035f966
0x00000200004d4743 : mov esp, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001dd95e : mov esp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200001dd9af : mov esp, esi ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000057a1c5 : mov esp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006cd4f0 : mov esp, fs ; xchg eax, ebp ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005a0972 : mov fs, eax ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000060ddbf : mov fs, eax ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001dd8b1 : mov fs, esi ; push rsi ; ret 0xf10
0x00000200003d7c5b : mov fs, word ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf02
0x00000200000b503d : mov fs, word ptr [rdi + rax*4 - 0x74b7ffed] ; ret
0x00000200006315dd : mov gs, ecx ; call rcx
0x000002000042862a : mov gs, ecx ; ret 0xbaff
0x00000200006315dc : mov gs, r9d ; call rcx
0x00000200003c08d1 : mov gs, word ptr [rax + 0x41fffffb] ; call rdi
0x000002000009f6f3 : mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x0000020000588e64 : mov gs, word ptr [rax - 0x18000000] ; ret 0xb2b4
0x000002000008e2da : mov gs, word ptr [rbx - 0x56883c5e] ; push rcx ; ret 0xcce4
0x000002000048c90e : mov gs, word ptr [rdi - 0x774001c] ; call 0x200000b9b09
0x000002000009230e : mov gs, word ptr [rip + 0x337635d] ; ret 0xcdf4
0x0000020000068b2f : mov gs, word ptr [rsi + 0x16] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000008e2d8 : mov gs, word ptr cs:[rbx - 0x56883c5e] ; push rcx ; ret 0xcce4
0x0000020000028252 : mov qword ptr [r10 + 8], rax ; mov qword ptr [rcx + rdx*8 + 0x10], r10 ; ret
0x00000200001c65d1 : mov qword ptr [r10 - 0x58], r11 ; ret
0x00000200005122e0 : mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x0000020000038c8d : mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x000002000004fe27 : mov qword ptr [r10], rcx ; ret
0x000002000004eb32 : mov qword ptr [r11 + 0x230], r10 ; ret
0x000002000012f81c : mov qword ptr [r11 + rdx*8], rax ; inc edx ; jmp 0x2000012f815
0x00000200004b1cf8 : mov qword ptr [r11 - 0x18], rdi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x000002000011c388 : mov qword ptr [r11 - 0x28], rax ; call r10
0x000002000041b306 : mov qword ptr [r11 - 0x38], rax ; call r10
0x00000200005c7dda : mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200004b1cfc : mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200001c622c : mov qword ptr [r11 - 0x58], r10 ; ret
0x00000200001838b0 : mov qword ptr [r11], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000170af3 : mov qword ptr [r11], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003681a3 : mov qword ptr [r11], rcx ; ret
0x00000200004cee11 : mov qword ptr [r11], rdx ; ret
0x0000020000423131 : mov qword ptr [r14], rax ; jmp 0x200004230fd
0x0000020000101aa4 : mov qword ptr [r14], rcx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000127824 : mov qword ptr [r8 + 0x20], rax ; ret
0x000002000003f069 : mov qword ptr [r8 + 0xf8], rcx ; ret
0x0000020000066ef0 : mov qword ptr [r8 + 8], 1 ; ret
0x0000020000129fd4 : mov qword ptr [r8 + 8], rax ; mov al, 1 ; ret
0x00000200001d6cca : mov qword ptr [r8 + 8], rax ; mov qword ptr [rcx], rax ; ret
0x00000200004a497c : mov qword ptr [r8 + rdx*8 + 8], r9 ; add rsp, 0x28 ; ret
0x0000020000550a62 : mov qword ptr [r8], 1 ; xor eax, eax ; ret
0x000002000001e269 : mov qword ptr [r8], r10 ; ret
0x00000200000e62c3 : mov qword ptr [r8], r11 ; mov qword ptr [r9], r11 ; ret
0x000002000001e25e : mov qword ptr [r8], r9 ; ret
0x00000200005f0e54 : mov qword ptr [r8], rax ; mov al, 1 ; ret
0x0000020000480f6c : mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000017c7b : mov qword ptr [r8], rax ; ret
0x0000020000054afd : mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200001606a8 : mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x000002000039e3a2 : mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x000002000001dbbc : mov qword ptr [r8], rcx ; ret
0x000002000013b34c : mov qword ptr [r8], rcx ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000165ca7 : mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200000dc886 : mov qword ptr [r9 + 0x18], rax ; mov eax, 2 ; ret 0
0x0000020000640c74 : mov qword ptr [r9 + 0x20], rcx ; ret
0x000002000057d656 : mov qword ptr [r9 + 0x38], 4 ; ret
0x0000020000127278 : mov qword ptr [r9 + 0x40], rcx ; ret
0x00000200001b3730 : mov qword ptr [r9 + 0x48], rdx ; ret
0x0000020000118ce9 : mov qword ptr [r9 + 0x5450], rax ; ret
0x0000020000410808 : mov qword ptr [r9 + 8], r8 ; mov eax, 0xc0000001 ; ret
0x00000200000be5d6 : mov qword ptr [r9 + 8], rcx ; add rsp, 8 ; ret
0x00000200004b5bd1 : mov qword ptr [r9 + 8], rdx ; add rsp, 0x28 ; ret
0x000002000045e1a5 : mov qword ptr [r9], 0 ; ret
0x000002000015f73b : mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x000002000039bfee : mov qword ptr [r9], r10 ; ret
0x000002000015f730 : mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200000e62c6 : mov qword ptr [r9], r11 ; ret
0x000002000040f83d : mov qword ptr [r9], r8 ; mov eax, 1 ; ret
0x000002000019c55a : mov qword ptr [r9], r8 ; mov eax, edx ; ret
0x00000200000ca674 : mov qword ptr [r9], rax ; mov dword ptr [r9 + 0x18], eax ; ret
0x00000200000e61cd : mov qword ptr [r9], rax ; ret
0x000002000064d89f : mov qword ptr [r9], rcx ; mov eax, 1 ; ret
0x0000020000063645 : mov qword ptr [r9], rcx ; mov eax, r10d ; ret
0x00000200004ded82 : mov qword ptr [r9], rcx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x000002000017504f : mov qword ptr [r9], rcx ; ret
0x0000020000384b90 : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200000bd696 : mov qword ptr [r9], rdx ; mov eax, r8d ; ret
0x00000200001c433a : mov qword ptr [r9], rdx ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x00000200004c5cc8 : mov qword ptr [rax + 0x10], r9 ; ret
0x00000200001c6c8b : mov qword ptr [rax + 0x18], r8 ; mov qword ptr [rax + 0x20], r9 ; ret
0x0000020000029872 : mov qword ptr [rax + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d841a : mov qword ptr [rax + 0x18], rax ; call 0x200000b46e6
0x0000020000490547 : mov qword ptr [rax + 0x18], rax ; call 0x200000b46e7
0x00000200001c6c8f : mov qword ptr [rax + 0x20], r9 ; ret
0x00000200000bf2d9 : mov qword ptr [rax + 0x3e0], rcx ; ret
0x000002000011fa9c : mov qword ptr [rax + 0x3e8], rdx ; ret
0x000002000006ab69 : mov qword ptr [rax + 0x4b0], rcx ; ret
0x000002000048ce0e : mov qword ptr [rax + 8], r13 ; call 0x200000b5017
0x000002000014415e : mov qword ptr [rax + 8], r9 ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x00000200000234ed : mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x0000020000026cd6 : mov qword ptr [rax + 8], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006c4c1 : mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x000002000064afed : mov qword ptr [rax + 8], rcx ; ret
0x000002000015de54 : mov qword ptr [rax + rcx*8], r8 ; add rsp, 0x28 ; ret
0x000002000014b05f : mov qword ptr [rax - 0x10], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e43cf : mov qword ptr [rax], 1 ; xor eax, eax ; ret
0x0000020000641daf : mov qword ptr [rax], r8 ; mov al, 1 ; ret
0x00000200000dcb4c : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006bd22 : mov qword ptr [rax], rax ; add rsp, 0x28 ; ret
0x0000020000064ec2 : mov qword ptr [rax], rax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000003ef26 : mov qword ptr [rax], rax ; mov word ptr [rcx + 0x30], 0x100 ; ret
0x00000200000234f1 : mov qword ptr [rax], rax ; ret
0x00000200004ded85 : mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200000da087 : mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x00000200001bac1b : mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x00000200001b372d : mov qword ptr [rax], rdx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x000002000006345d : mov qword ptr [rax], rdx ; ret
0x000002000044254f : mov qword ptr [rbp + 0x18], rcx ; call 0x2000006cccb
0x00000200005596ad : mov qword ptr [rbp + 0x40], rax ; call 0x20000485902
0x000002000070ef4d : mov qword ptr [rbp - 0x10], rbx ; call 0x200000fb20e
0x00000200006d16c0 : mov qword ptr [rbp - 0x10], rdx ; jmp 0x200006d168d
0x0000020000701a0d : mov qword ptr [rbp - 0x1c], rbx ; call qword ptr [r14]
0x00000200005c26c5 : mov qword ptr [rbp - 0x30], rdi ; call 0x20000270048
0x000002000048da48 : mov qword ptr [rbp - 0x41], r14 ; call 0x200000b5017
0x0000020000503054 : mov qword ptr [rbp - 0x48], rbx ; call 0x200000bf276
0x0000020000475ca3 : mov qword ptr [rbp - 0x48], rbx ; call r14
0x000002000055677d : mov qword ptr [rbp - 0x48], rcx ; jne 0x2000055674a ; jmp 0x200005567a6
0x000002000048b8d7 : mov qword ptr [rbp - 0x51], r10 ; call rax
0x00000200006d1a03 : mov qword ptr [rbp - 0x58], rax ; call r9
0x00000200006d180e : mov qword ptr [rbp - 0x60], rax ; call r9
0x00000200004837a7 : mov qword ptr [rbp - 0x80], r12 ; call 0x200000a3957
0x0000020000064d64 : mov qword ptr [rbx + 0x10], r11 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000039298 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000507170 : mov qword ptr [rbx + 0x28], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000368040 : mov qword ptr [rbx + 0x30], rcx ; add rax, qword ptr [rbx] ; jmp 0x20000368014
0x00000200003cfbdb : mov qword ptr [rbx + 0x38], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046888e : mov qword ptr [rbx + 8], r11 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000178976 : mov qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011f985 : mov qword ptr [rbx], r11 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000170a8a : mov qword ptr [rbx], r11 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000d864c : mov qword ptr [rbx], r14 ; jmp 0x200000d8618
0x0000020000010e2d : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006f212e : mov qword ptr [rbx], rax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000037f1fb : mov qword ptr [rbx], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b23e8 : mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000152c78 : mov qword ptr [rcx + 0x10], -1 ; ret
0x00000200004e5259 : mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200006bfe94 : mov qword ptr [rcx + 0x10], rax ; mov rax, r8 ; ret
0x00000200001c6e2a : mov qword ptr [rcx + 0x10], rax ; ret
0x00000200005837ac : mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200006c6455 : mov qword ptr [rcx + 0x128], rax ; xor eax, eax ; ret
0x00000200000a737d : mov qword ptr [rcx + 0x168], rax ; ret
0x000002000006acfa : mov qword ptr [rcx + 0x18], r8 ; mov qword ptr [rcx + 0x38], r8 ; ret
0x000002000053f875 : mov qword ptr [rcx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bfe03 : mov qword ptr [rcx + 0x18], rax ; mov rax, rdx ; ret
0x000002000006ad1c : mov qword ptr [rcx + 0x20], r8 ; ret
0x00000200005837b1 : mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200004ee236 : mov qword ptr [rcx + 0x20], rdx ; xor eax, eax ; ret
0x000002000006acfe : mov qword ptr [rcx + 0x38], r8 ; ret
0x00000200000dfafa : mov qword ptr [rcx + 0x38], r9 ; mov qword ptr [rcx + 0x40], rax ; ret
0x0000020000061c73 : mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x000002000006ad18 : mov qword ptr [rcx + 0x38], rax ; mov qword ptr [rcx + 0x20], r8 ; ret
0x00000200005438f3 : mov qword ptr [rcx + 0x38], rax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x000002000041b434 : mov qword ptr [rcx + 0x3c8], rdx ; ret
0x000002000016ab90 : mov qword ptr [rcx + 0x3e8], rdx ; ret
0x00000200004e44b2 : mov qword ptr [rcx + 0x400], rax ; ret
0x00000200005438f7 : mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200003bc483 : mov qword ptr [rcx + 0x40], r8 ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200000dfafe : mov qword ptr [rcx + 0x40], rax ; ret
0x0000020000585900 : mov qword ptr [rcx + 0x448], rdx ; xor eax, eax ; ret
0x0000020000588064 : mov qword ptr [rcx + 0x48], r9 ; ret
0x000002000058805f : mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000117364 : mov qword ptr [rcx + 0x50], rax ; ret
0x00000200001486e3 : mov qword ptr [rcx + 0x5348], rax ; ret
0x0000020000056e31 : mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000064c68f : mov qword ptr [rcx + 0x58], rax ; ret
0x0000020000056e35 : mov qword ptr [rcx + 0x60], rax ; ret
0x00000200001273db : mov qword ptr [rcx + 0x68], rax ; ret
0x00000200000ee22f : mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000ee1fc
0x0000020000107d24 : mov qword ptr [rcx + 0x70], rdx ; ret
0x00000200003cb54e : mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200001b5fcc : mov qword ptr [rcx + 0x88], rdx ; xor eax, eax ; ret
0x000002000064e062 : mov qword ptr [rcx + 0xe0], rax ; ret
0x0000020000448fc5 : mov qword ptr [rcx + 4], rdi ; call 0x20000072e47
0x000002000056edef : mov qword ptr [rcx + 8], r9 ; ret
0x000002000002db7e : mov qword ptr [rcx + 8], rax ; add rsp, 0x28 ; ret
0x00000200001c6e26 : mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rax ; ret
0x0000020000028a88 : mov qword ptr [rcx + 8], rax ; ret
0x00000200004f3388 : mov qword ptr [rcx + 8], rcx ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000058b052 : mov qword ptr [rcx + 8], rcx ; ret
0x0000020000025833 : mov qword ptr [rcx + 8], rdx ; ret
0x0000020000643c43 : mov qword ptr [rcx + r9], rax ; ret
0x0000020000028256 : mov qword ptr [rcx + rdx*8 + 0x10], r10 ; ret
0x00000200000c7851 : mov qword ptr [rcx - 8], rax ; jne 0x200000c7836 ; ret 0
0x0000020000110fe8 : mov qword ptr [rcx], 0 ; ret
0x0000020000641d59 : mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x0000020000025830 : mov qword ptr [rcx], r8 ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000017f78b : mov qword ptr [rcx], r8 ; ret
0x0000020000144162 : mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000056ccc9 : mov qword ptr [rcx], r9 ; ret
0x0000020000597158 : mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x0000020000161d9e : mov qword ptr [rcx], rax ; mov eax, 0xc00000bb ; ret
0x000002000064d8cf : mov qword ptr [rcx], rax ; mov eax, 1 ; ret
0x00000200004e4502 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002a164 : mov qword ptr [rcx], rax ; ret
0x00000200000dde2a : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000003f09b : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000010a9aa : mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200004cd51d : mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200000a97d6 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rax ; ret
0x00000200006429bb : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; jmp 0x2000064298f
0x0000020000642a9b : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; jmp 0x20000642a6f
0x000002000042244c : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200000dbb0e : mov qword ptr [rcx], rdx ; ret
0x00000200005cfc34 : mov qword ptr [rcx], rdx ; xor al, al ; ret
0x00000200000c7a81 : mov qword ptr [rdi + 0x18], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b8e32 : mov qword ptr [rdi + 0x20], r14 ; jmp 0x200003b8e14
0x00000200005ebf13 : mov qword ptr [rdi + 0x38], r12 ; mov dword ptr [rdi + 0x30], eax ; jmp 0x20000448174
0x0000020000495776 : mov qword ptr [rdi + 0x40], rbx ; call 0x200000b9b07
0x00000200001ced70 : mov qword ptr [rdi + 0x68], r12 ; call rbx
0x00000200001ff1be : mov qword ptr [rdi + 0x68], rax ; jmp 0x200000bb4b1
0x0000020000123ab4 : mov qword ptr [rdi + 0xa0], rbx ; call 0x200000cfd35
0x000002000006c273 : mov qword ptr [rdi + 8], rdx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e1dec : mov qword ptr [rdi], r12 ; xor al, al ; jmp 0x200003e1dcc
0x000002000019a988 : mov qword ptr [rdi], r9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006c45d : mov qword ptr [rdi], rcx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042047c : mov qword ptr [rdi], rdi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000386760 : mov qword ptr [rdi], rsi ; jmp 0x2000038672b
0x00000200001b98c7 : mov qword ptr [rdx + 0x10], rax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001294cd : mov qword ptr [rdx + 0x10], rax ; ret
0x000002000003bb7c : mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000065a75b : mov qword ptr [rdx + 0x120], rax ; xor eax, eax ; ret
0x00000200004d383e : mov qword ptr [rdx + 0x18], rax ; ret
0x00000200000a6d68 : mov qword ptr [rdx + 0x18], rcx ; add rsp, 0x28 ; ret
0x0000020000028f5d : mov qword ptr [rdx + 0x18], rdx ; add rsp, 0x38 ; ret
0x00000200004d3820 : mov qword ptr [rdx + 0x20], rax ; ret
0x00000200004d37f2 : mov qword ptr [rdx + 0x28], rax ; ret
0x00000200005367b3 : mov qword ptr [rdx + 0x28], rcx ; mov qword ptr [rdx + 0x38], rax ; ret
0x00000200004e72bb : mov qword ptr [rdx + 0x28], rcx ; ret
0x00000200004d3811 : mov qword ptr [rdx + 0x30], rax ; ret
0x00000200001b335c : mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200005367b7 : mov qword ptr [rdx + 0x38], rax ; ret
0x00000200004d384d : mov qword ptr [rdx + 0x40], rax ; ret
0x00000200005367e4 : mov qword ptr [rdx + 0x48], rax ; ret
0x000002000006bfc0 : mov qword ptr [rdx + 0x4b0], rcx ; ret
0x00000200004d3802 : mov qword ptr [rdx + 0x50], rax ; ret
0x0000020000389d5b : mov qword ptr [rdx + 8], r10 ; mov word ptr [rdx + 2], ax ; ret
0x0000020000066272 : mov qword ptr [rdx + 8], r8 ; ret
0x00000200004b93d6 : mov qword ptr [rdx + 8], rax ; and qword ptr [rcx + 0x30], 0 ; ret
0x0000020000494a44 : mov qword ptr [rdx + 8], rax ; call 0x200000b9b07
0x000002000043b453 : mov qword ptr [rdx + 8], rax ; mov word ptr [rdx], ax ; mov al, 1 ; ret
0x0000020000389d73 : mov qword ptr [rdx + 8], rax ; ret
0x00000200001c6d55 : mov qword ptr [rdx + 8], rcx ; add rsp, 0x28 ; ret
0x00000200003604bb : mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200001b94c1 : mov qword ptr [rdx + 8], rcx ; jmp 0x200001b948f
0x00000200006429be : mov qword ptr [rdx + 8], rcx ; jmp 0x2000064298c
0x0000020000642a9e : mov qword ptr [rdx + 8], rcx ; jmp 0x20000642a6c
0x00000200000dbb0a : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x000002000042244f : mov qword ptr [rdx + 8], rcx ; ret
0x000002000038873e : mov qword ptr [rdx + r9*8 + 0x70], rcx ; inc dword ptr [rdx + 0x6c] ; ret
0x00000200001c5e1d : mov qword ptr [rdx - 0x58], r8 ; ret
0x00000200000ee21c : mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x00000200001b3c29 : mov qword ptr [rdx], r10 ; ret
0x000002000063fc5c : mov qword ptr [rdx], r11 ; mov rax, r9 ; ret
0x000002000036e0b5 : mov qword ptr [rdx], r8 ; add rsp, 0x28 ; ret
0x00000200003fd18c : mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x000002000002c840 : mov qword ptr [rdx], r8 ; ret
0x00000200005b74c2 : mov qword ptr [rdx], rax ; jmp 0x200005b74d2
0x00000200005529a3 : mov qword ptr [rdx], rax ; mov eax, r8d ; ret
0x00000200001191b1 : mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000001dc62 : mov qword ptr [rdx], rax ; ret
0x000002000016ee67 : mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000001eef3 : mov qword ptr [rdx], rcx ; add rsp, 0x38 ; ret
0x0000020000152a27 : mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x000002000043198a : mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x0000020000599721 : mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x000002000002c81d : mov qword ptr [rdx], rcx ; ret
0x000002000019a9da : mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200001ca7ad : mov qword ptr [rip + 0x11d3d4], rax ; jmp 0x200000f6a69
0x0000020000153bb0 : mov qword ptr [rip + 0x12d6d1], rcx ; ret
0x0000020000141d02 : mov qword ptr [rip + 0x14c077], rax ; xor eax, eax ; ret
0x000002000016997d : mov qword ptr [rip + 0x16fd54], rcx ; ret
0x00000200004f9057 : mov qword ptr [rip + 0x18a56a], rax ; ret
0x00000200000b1b00 : mov qword ptr [rip + 0x219e39], rax ; ret
0x00000200000169ed : mov qword ptr [rip + 0x2b6024], rcx ; ret
0x00000200005d8492 : mov qword ptr [rip + 0xab127], rcx ; ret
0x00000200003b20ac : mov qword ptr [rip - 0x11921b], rcx ; ret
0x00000200004b05f9 : mov qword ptr [rip - 0x1d86d8], rcx ; ret
0x000002000056ed88 : mov qword ptr [rip - 0x2a2937], rcx ; jmp 0x2000056ed5c
0x000002000056eed2 : mov qword ptr [rip - 0x2a2a81], rcx ; jmp 0x2000056eea6
0x00000200006c05b8 : mov qword ptr [rip - 0x368d7f], rax ; ret
0x00000200006c349a : mov qword ptr [rip - 0x36bea9], r8 ; ret
0x0000020000606e5f : mov qword ptr [rip - 0x36df9e], rcx ; ret
0x00000200006525f8 : mov qword ptr [rip - 0x3bb757], rcx ; ret
0x000002000012391a : mov qword ptr [rsi], rcx ; mov rcx, r8 ; call 0x2000003fc00
0x00000200006465ad : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000200005d74e8 : mov qword ptr [rsp + 0x20], r12 ; call r10
0x000002000049724a : mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000046d2e7 : mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200003aac74 : mov qword ptr [rsp + 0x20], r13 ; call rax
0x0000020000532023 : mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200005321ed : mov qword ptr [rsp + 0x20], r14 ; call rax
0x00000200006171d0 : mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x00000200005d75b0 : mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200004d693f : mov qword ptr [rsp + 0x20], rax ; add rsp, 0x38 ; ret
0x000002000042521f : mov qword ptr [rsp + 0x20], rax ; call 0x2000004fd28
0x000002000018003a : mov qword ptr [rsp + 0x20], rax ; call 0x2000007c347
0x0000020000490f50 : mov qword ptr [rsp + 0x20], rax ; call 0x2000007d1c7
0x0000020000545dba : mov qword ptr [rsp + 0x20], rax ; call 0x200000a2047
0x0000020000480b5e : mov qword ptr [rsp + 0x20], rax ; call 0x200000a66a8
0x00000200000e7c29 : mov qword ptr [rsp + 0x20], rax ; call 0x200000f3ed7
0x00000200005259dc : mov qword ptr [rsp + 0x20], rax ; call 0x20000150f0c
0x0000020000542f8a : mov qword ptr [rsp + 0x20], rax ; call 0x2000016d2b0
0x00000200005c99e9 : mov qword ptr [rsp + 0x20], rax ; call 0x200003b5cbf
0x0000020000592cf4 : mov qword ptr [rsp + 0x20], rax ; call qword ptr [r11]
0x0000020000037c09 : mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200000dd8e7 : mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000047d71e : mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200003c9967 : mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200003b5adb : mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200005c7e13 : mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000385bd0 : mov qword ptr [rsp + 0x20], rax ; call rsi
0x00000200003b253b : mov qword ptr [rsp + 0x20], rbp ; and edx, 1 ; call rdi
0x000002000064af00 : mov qword ptr [rsp + 0x20], rdi ; call 0x200000a7117
0x00000200005562c7 : mov qword ptr [rsp + 0x20], rdi ; call r15
0x000002000064c26b : mov qword ptr [rsp + 0x20], rdi ; call rax
0x00000200004965ad : mov qword ptr [rsp + 0x20], rdi ; call rsi
0x0000020000396c83 : mov qword ptr [rsp + 0x20], rdx ; mov edx, r10d ; call r11
0x000002000047a12b : mov qword ptr [rsp + 0x20], rsi ; call 0x200000a2048
0x00000200003a77aa : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x000002000043aa48 : mov qword ptr [rsp + 0x20], rsi ; call rax
0x0000020000443be2 : mov qword ptr [rsp + 0x28], r13 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000051db98 : mov qword ptr [rsp + 0x38], rbx ; call rdi
0x00000200004b1a6f : mov qword ptr [rsp + 0x40], r14 ; inc edx ; jmp 0x200004b1a34
0x00000200005b846f : mov qword ptr [rsp + 0x48], rax ; call 0x200000b46e7
0x00000200005b846e : mov qword ptr [rsp + 0x48], rax ; call 0x200000b46e8
0x00000200001b175c : mov qword ptr [rsp + 0x58], rax ; call 0x200001ada47
0x0000020000532fef : mov qword ptr [rsp + 0x68], rax ; call 0x200000bf277
0x000002000035eb1d : mov r10, qword ptr [r10 + 0x10] ; jmp 0x2000035eaea
0x00000200001bd999 : mov r10, qword ptr [r10 + rax*8] ; jmp 0x200001bd9a5
0x00000200000ea9db : mov r10, rdx ; mov rdx, rcx ; jne 0x200000ea9ec ; ret
0x0000020000580ade : mov r10b, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005d4376 : mov r10b, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000da084 : mov r10b, 1 ; mov qword ptr [rax], rdx ; mov al, r10b ; ret
0x00000200006ca843 : mov r10d, 0x158d48ff ; ret
0x0000020000465e13 : mov r10d, 0x5f ; jmp 0x20000465de5
0x00000200005e7671 : mov r10d, 0xf641ffd9 ; ret
0x000002000008e77c : mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000630115 : mov r10d, r12d ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200005748c4 : mov r10d, r9d ; mov eax, r10d ; ret
0x000002000007c1aa : mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x000002000016c23c : mov r11, qword ptr [rip + 0x11555d] ; call r11
0x0000020000570692 : mov r11b, 0xff ; add rsp, 0x58 ; ret
0x000002000001f3e9 : mov r11d, 0x850fd284 ; ret 4
0x000002000048582a : mov r11d, 0xeafee8e0 ; ret 0x8bff
0x00000200004a0646 : mov r11d, 0xfc085ff ; xchg eax, esp ; ret
0x0000020000091088 : mov r11d, r10d ; ret
0x0000020000413345 : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000070ef4a : mov r12, rbx ; mov qword ptr [rbp - 0x10], rbx ; call 0x200000fb211
0x00000200003747d5 : mov r12, rdi ; jmp 0x2000035f967
0x00000200004aeea9 : mov r12d, 0x75c085ff ; ret
0x000002000060cbe8 : mov r12d, 0xc00000bb ; jmp 0x20000428e30
0x000002000038370a : mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x00000200006f06b7 : mov r12d, ebx ; jmp 0x200006f068d
0x0000020000553db4 : mov r12d, edi ; call 0x20000270045
0x00000200001c6e71 : mov r13, rax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200006e3910 : mov r13d, eax ; lea rcx, qword ptr [rax + 8] ; call r10
0x000002000069dc90 : mov r13d, eax ; lea rcx, qword ptr [rax + 8] ; call r9
0x0000020000410a0c : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x00000200006c64d3 : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200003c853f : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x00000200000362a7 : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b8203 : mov r14, qword ptr [r14] ; jmp 0x200003b8131
0x00000200001a8d49 : mov r14, qword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000112cae : mov r14, qword ptr [rsp + 0x20] ; mov al, r10b ; ret
0x000002000014c7e3 : mov r14, qword ptr [rsp + 0x20] ; ret
0x00000200001c6e74 : mov r14, rax ; mov r15, rax ; jmp rsi
0x0000020000520603 : mov r14, rcx ; mov ebp, r12d ; call 0x2000014b79d
0x00000200006d5182 : mov r14, rdx ; lea edx, dword ptr [rbx + 0x18] ; call rdi
0x00000200006d55a4 : mov r14, rdx ; lea edx, dword ptr [rbx + 0x48] ; call rdi
0x00000200006d59f8 : mov r14, rdx ; lea edx, dword ptr [rbx + 0x50] ; call rdi
0x00000200006d5791 : mov r14, rdx ; lea edx, dword ptr [rbx + 0x58] ; call rdi
0x00000200006d536b : mov r14, rdx ; lea edx, dword ptr [rbx + 0x88] ; call rdi
0x00000200004845dd : mov r14b, 1 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x0000020000627097 : mov r14b, al ; jmp 0x20000394003
0x00000200004bd8a1 : mov r14d, 0x3bf88bff ; ret
0x000002000015606d : mov r14d, r10d ; mov r8d, edx ; jmp 0x20000156097
0x00000200006eab6c : mov r14d, r12d ; mov rax, rdx ; jmp 0x200006eab7f
0x000002000004184b : mov r14d, r13d ; jmp 0x2000004111a
0x00000200006ca8f0 : mov r15, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000016882 : mov r15, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000614b0 : mov r15, qword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200001c5e18 : mov r15, qword ptr [rsp + 0x20] ; mov qword ptr [rdx - 0x58], r8 ; ret
0x00000200003d272c : mov r15, qword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x000002000003ff43 : mov r15, qword ptr [rsp + r13*8 + 0x220] ; jmp 0x2000003ff18
0x000002000041e8b4 : mov r15, r13 ; jmp 0x2000041e784
0x00000200001c6e77 : mov r15, rax ; jmp rsi
0x0000020000646bb0 : mov r15, rax ; mov byte ptr [rsp + 0x20], r10b ; call rbx
0x000002000059efa9 : mov r15, rdx ; xor edi, edi ; xor ebp, ebp ; call 0x2000005b1f9
0x000002000017a80a : mov r15b, 0xff ; ret
0x00000200001b94be : mov r15b, 1 ; mov qword ptr [rdx + 8], rcx ; jmp 0x200001b9492
0x000002000015606a : mov r15b, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x2000015609a
0x00000200005e7bc1 : mov r15b, 9 ; add cl, ch ; ret 0xd9c4
0x0000020000123beb : mov r15d, 0x20c48348 ; pop rbx ; ret
0x0000020000156087 : mov r15d, 0x8b4492eb ; ret 0x8b44
0x00000200004c1248 : mov r15d, 0xc000003e ; jmp 0x200003ed481
0x000002000051eff7 : mov r15d, 0xffc7558b ; ret 0x5589
0x0000020000423be4 : mov r15d, eax ; call 0x200000522b2
0x0000020000448f42 : mov r15d, eax ; mov rcx, rdi ; call 0x20000072e49
0x00000200004474fc : mov r8, qword ptr [r14 + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x000002000017a531 : mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x0000020000119c34 : mov r8, qword ptr [rbp + 0x28] ; mov rdx, rbx ; call rax
0x0000020000101a2d : mov r8, qword ptr [rbp + 8] ; mov rcx, rbx ; call rax
0x0000020000159867 : mov r8, qword ptr [rbx + 0x38] ; mov ecx, 1 ; call rax
0x000002000036b2ae : mov r8, qword ptr [rbx + 0x38] ; mov ecx, edi ; call rax
0x00000200006f5ff9 : mov r8, qword ptr [rbx + 0x38] ; mov ecx, r15d ; call rax
0x00000200004ff539 : mov r8, qword ptr [rcx] ; mov rax, r8 ; ret
0x0000020000142566 : mov r8, qword ptr [rip + 0x14ff1b] ; jmp 0x2000003e860
0x00000200001cd32e : mov r8, qword ptr [rip + 0x18a183] ; call r8
0x00000200001609bd : mov r8, qword ptr [rip + 0x1f6af4] ; call r8
0x0000020000013bdc : mov r8, qword ptr [rip + 0x3438d5] ; call r8
0x00000200000ee258 : mov r8, r10 ; jmp 0x200000ee221
0x00000200001afa21 : mov r8, r10 ; jmp 0x200001afa3c
0x00000200001b41de : mov r8, r10 ; jmp 0x200001b41f9
0x000002000058da22 : mov r8, r10 ; mov rdx, r11 ; mov rcx, rbx ; call rax
0x00000200005b881f : mov r8, r12 ; call 0x20000054ad9
0x0000020000414d4a : mov r8, r12 ; mov rcx, r13 ; call rax
0x0000020000025907 : mov r8, r12 ; mov rcx, rdi ; call r14
0x0000020000542ad6 : mov r8, r13 ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000e76d6 : mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200006469de : mov r8, r13 ; mov rdx, rsi ; mov rcx, r12 ; call rax
0x000002000047a021 : mov r8, r13 ; xor edx, edx ; call 0x200000a3958
0x0000020000016eca : mov r8, r14 ; call rax
0x00000200001acb3b : mov r8, r14 ; mov rcx, rdi ; call 0x200001a8d68
0x00000200004d58f3 : mov r8, r14 ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x0000020000026b68 : mov r8, r15 ; mov rcx, rbx ; call rax
0x00000200004fa00b : mov r8, r15 ; mov rdx, rsi ; call rax
0x000002000065990d : mov r8, rax ; add rsp, 0x38 ; jmp r9
0x00000200005fed13 : mov r8, rax ; call 0x200005729b5
0x0000020000064b2a : mov r8, rax ; jne 0x20000064b35 ; ret
0x00000200000d9fe8 : mov r8, rax ; jne 0x200000da014 ; ret
0x00000200005205d0 : mov r8, rax ; sub r9, r11 ; call 0x200001500c9
0x000002000015af56 : mov r8, rbp ; call 0x200000771c5
0x000002000017121d : mov r8, rbx ; call rdi
0x000002000015a2aa : mov r8, rbx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x0000020000067460 : mov r8, rbx ; mov rcx, rdi ; call rsi
0x000002000064c562 : mov r8, rdi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200003c378b : mov r8, rdi ; mov rcx, rbp ; call rax
0x000002000019f1f3 : mov r8, rdi ; mov rdx, r13 ; call 0x2000014b4f8
0x00000200001b000b : mov r8, rdx ; jmp 0x200001b002b
0x00000200001b000a : mov r8, rdx ; jmp 0x200001b002c
0x000002000064c1dd : mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200000e74ac : mov r8, rsi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x000002000047f3df : mov r8b, 0xe8 ; mov bh, dh ; ret
0x000002000070923c : mov r8b, 0xe8 ; sub eax, 0x8bffd3d1 ; ret
0x00000200001e053e : mov r8b, 0xe9 ; out dx, al ; sbb al, dh ; dec dword ptr [rax - 0x75] ; ret
0x000002000055ec5c : mov r8b, 0xf ; mov bh, 0x41 ; sub byte ptr [rcx - 0x7d], cl ; ret 0x8910
0x00000200003e6db8 : mov r8b, 1 ; jmp 0x200003e6d5d
0x000002000035f267 : mov r8b, 1 ; mov al, r8b ; ret
0x00000200001efa48 : mov r8b, 1 ; mov edx, esi ; call 0x2000012bd13
0x000002000056af62 : mov r8d, 0x200 ; call 0x200000771c8
0x000002000047e336 : mov r8d, 0x280 ; call 0x200000a3959
0x000002000047c115 : mov r8d, 0x2c8 ; call 0x200000a3959
0x0000020000523db4 : mov r8d, 0x4b505953 ; call 0x20000270048
0x00000200005c3d96 : mov r8d, 0x52504e50 ; call 0x20000270048
0x000002000064edae : mov r8d, 0x54466656 ; call 0x20000270049
0x0000020000643588 : mov r8d, 0x566c6148 ; call 0x20000270049
0x000002000064dc79 : mov r8d, 0x61436656 ; call 0x20000270049
0x00000200006417cf : mov r8d, 0x61446656 ; call 0x20000270049
0x00000200004c3d96 : mov r8d, 0x624e4d43 ; call 0x20000270048
0x000002000064ce18 : mov r8d, 0x62535442 ; call 0x20000270049
0x00000200004d3dc7 : mov r8d, 0x69634d43 ; call 0x20000270048
0x000002000064cdfa : mov r8d, 0x6d535442 ; call 0x20000270049
0x0000020000133db6 : mov r8d, 0x73556f49 ; call 0x20000270048
0x0000020000067709 : mov r8d, 0x80 ; call 0x200000a3958
0x0000020000479b3d : mov r8d, 0x80 ; call 0x200000a3959
0x0000020000172b92 : mov r8d, 0xc000000e ; mov eax, r8d ; ret
0x0000020000710e3a : mov r8d, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000174ff9 : mov r8d, 1 ; mov eax, r8d ; ret
0x000002000064c8a3 : mov r8d, 2 ; call 0x20000198adc
0x00000200005cd6cc : mov r8d, 6 ; call rax
0x00000200000d9726 : mov r8d, dword ptr [rbx - 4] ; add r8, r12 ; call r8
0x00000200006311bb : mov r8d, dword ptr [rbx] ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000048460b : mov r8d, eax ; call rsi
0x000002000003fa61 : mov r8d, eax ; mov eax, r8d ; ret
0x00000200005aaf58 : mov r8d, eax ; mov rcx, rbx ; call 0x200000771c8
0x0000020000640725 : mov r8d, ebp ; call 0x20000270046
0x000002000015afb3 : mov r8d, ebp ; mov dword ptr [rsi + 4], ebp ; call 0x200000771c8
0x00000200001b2174 : mov r8d, ebp ; mov rdx, rsi ; mov rcx, rdi ; call rax
0x000002000047768f : mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000047754f : mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200003e618f : mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200005321ea : mov r8d, ebx ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000019afa4 : mov r8d, ebx ; mov rcx, rbp ; call 0x200000771c8
0x00000200001ac243 : mov r8d, edi ; call 0x200001b847d
0x00000200005515ae : mov r8d, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200000034c4 : mov r8d, edx ; jmp 0x2000000349a
0x00000200000ffd99 : mov r8d, edx ; jmp 0x200000ffd20
0x000002000014d92a : mov r8d, edx ; jmp 0x2000014d974
0x000002000014d929 : mov r8d, edx ; jmp 0x2000014d975
0x0000020000156070 : mov r8d, edx ; jmp 0x20000156094
0x000002000015606f : mov r8d, edx ; jmp 0x20000156095
0x00000200001e4f3f : mov r8d, edx ; jmp 0x200001e4f4f
0x00000200006430e0 : mov r8d, esi ; call rax
0x0000020000144c77 : mov r8d, r10d ; jmp 0x20000144c3b
0x000002000064abc0 : mov r8d, r10d ; jmp 0x2000064abcd
0x00000200003b6c85 : mov r8d, r12d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x00000200001aaeff : mov r8d, r14d ; mov rdx, r15 ; call 0x200000771c8
0x00000200003abe83 : mov r8d, r14d ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200005c7b25 : mov r8d, r15d ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200007033a3 : mov r8d, r9d ; mov ecx, 0x200 ; call r10
0x00000200005c7dd7 : mov r8d, r9d ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x000002000047d71b : mov r8d, r9d ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200005484aa : mov r9, qword ptr [rip - 0x1f13e1] ; call r9
0x000002000054bf92 : mov r9, qword ptr [rip - 0x1f4ec9] ; call r9
0x000002000054cabf : mov r9, qword ptr [rip - 0x1f59f6] ; call r9
0x0000020000381282 : mov r9, qword ptr [rip - 0x2a1b9] ; call r9
0x00000200003a5d29 : mov r9, qword ptr [rip - 0x4ec60] ; call r9
0x00000200003bf9ac : mov r9, qword ptr [rip - 0x688e3] ; call r9
0x00000200003c9f9c : mov r9, qword ptr [rip - 0x72ed3] ; call r9
0x00000200000e76d3 : mov r9, r14 ; mov r8, r13 ; mov rcx, r15 ; call rax
0x000002000062e325 : mov r9, r15 ; call r12
0x00000200005cd6c9 : mov r9, r8 ; mov r8d, 6 ; call rax
0x0000020000137565 : mov r9, rax ; jne 0x20000137570 ; ret
0x0000020000022fee : mov r9, rax ; mov rax, r9 ; ret
0x000002000064c4a8 : mov r9, rbx ; mov rcx, r14 ; call rax
0x0000020000360402 : mov r9, rcx ; je 0x20000360412 ; mov al, r10b ; ret
0x0000020000360402 : mov r9, rcx ; je 0x20000360413 ; mov al, r10b ; ret
0x00000200006d050d : mov r9, rcx ; test rdx, rdx ; jne 0x200006d0520 ; ret
0x00000200004e3e45 : mov r9b, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000373165 : mov r9b, 1 ; lea ecx, dword ptr [r8 + 0xa] ; call r11
0x00000200001d1886 : mov r9b, 1 ; lea ecx, dword ptr [r8 + 3] ; call r11
0x00000200001755f2 : mov r9b, 1 ; lea ecx, dword ptr [r8 + 3] ; call rax
0x00000200001d18d8 : mov r9b, 1 ; lea ecx, dword ptr [r8 + 4] ; call r11
0x0000020000372f47 : mov r9b, 1 ; lea ecx, dword ptr [r8 + 8] ; call rax
0x0000020000373f8a : mov r9b, 1 ; xor r8d, r8d ; mov ecx, ebx ; call rax
0x0000020000590344 : mov r9b, bl ; call 0x2000019c575
0x0000020000175f1c : mov r9b, dil ; xor r8d, r8d ; call rax
0x0000020000372717 : mov r9b, r12b ; lea ecx, dword ptr [r8 + 2] ; call r10
0x00000200005eef1e : mov r9d, 0xc0000001 ; jmp 0x200004fb1cd
0x00000200001b8d92 : mov r9d, 1 ; mov eax, r9d ; ret
0x00000200005c7d37 : mov r9d, 2 ; call rax
0x00000200005c7d70 : mov r9d, 3 ; call rax
0x0000020000064185 : mov r9d, eax ; mov eax, r9d ; ret
0x0000020000484608 : mov r9d, eax ; mov r8d, eax ; call rsi
0x00000200003990af : mov r9d, edx ; je 0x200003990c2 ; add rsp, 0x28 ; ret
0x0000020000013ede : mov r9d, r12d ; call 0x20000100109
0x0000020000646d2a : mov r9d, r14d ; mov rcx, r13 ; mov rdx, r12 ; call rax
0x0000020000414d47 : mov r9d, r8d ; mov r8, r12 ; mov rcx, r13 ; call rax
0x0000020000060539 : mov rax, cr0 ; cmp al, 1 ; jae 0x2000006054c ; mov al, cl ; ret
0x00000200001c5651 : mov rax, cr0 ; cmp al, 2 ; jae 0x200001c5664 ; xor eax, eax ; ret
0x0000020000152541 : mov rax, cr0 ; ret
0x0000020000016de3 : mov rax, cr3 ; mov cr3, rax ; ret
0x0000020000141df0 : mov rax, cr3 ; ret
0x0000020000152540 : mov rax, cr8 ; ret
0x0000020000152921 : mov rax, qword ptr [0x188] ; ret
0x000002000036f15b : mov rax, qword ptr [r11 + 0x48] ; test rax, rax ; je 0x2000036f16f ; call rax
0x00000200006f5e2b : mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x00000200004d3852 : mov rax, qword ptr [r8 + 0x20] ; mov qword ptr [rdx + 0x20], rax ; ret
0x000002000019751b : mov rax, qword ptr [r8 + 0x418] ; ret
0x0000020000182ea3 : mov rax, qword ptr [r8 + 0x50] ; add rax, r9 ; ret
0x0000020000111af7 : mov rax, qword ptr [r8 + 0x80] ; ret
0x0000020000441d8d : mov rax, qword ptr [r8 + rax*8 - 1] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000055a875 : mov rax, qword ptr [r8] ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200004fcc98 : mov rax, qword ptr [r9 + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000016ee63 : mov rax, qword ptr [r9 - 0x58] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200000df8c9 : mov rax, qword ptr [rax + 0x1c8] ; ret
0x0000020000574535 : mov rax, qword ptr [rax + 0x20] ; ret
0x00000200006a115a : mov rax, qword ptr [rax + 0x210] ; jmp rax
0x000002000001b99d : mov rax, qword ptr [rax + 0x220] ; ret
0x000002000054a3e9 : mov rax, qword ptr [rax + 0x28] ; ret
0x000002000064e677 : mov rax, qword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x0000020000197551 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001684fc : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x20000168510 ; call rax
0x000002000017a654 : mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000bd799 : mov rax, qword ptr [rax + 0x398] ; ret
0x00000200000c03d9 : mov rax, qword ptr [rax + 0x3a0] ; ret
0x00000200000bdf49 : mov rax, qword ptr [rax + 0x3e0] ; ret
0x00000200000df950 : mov rax, qword ptr [rax + 0x418] ; ret
0x0000020000574531 : mov rax, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000168578 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x2000016858c ; call rax
0x000002000006b209 : mov rax, qword ptr [rax + 0x4b0] ; ret
0x000002000015b573 : mov rax, qword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001685f8 : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x2000016860c ; call rax
0x00000200003cda28 : mov rax, qword ptr [rax + 0x610] ; ret
0x00000200000b9869 : mov rax, qword ptr [rax + 0xb8] ; ret
0x000002000003a269 : mov rax, qword ptr [rax + 0xf0] ; ret
0x00000200006bfc16 : mov rax, qword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000035ecd2 : mov rax, qword ptr [rax + 8] ; jmp 0x2000035ec9f
0x000002000002867b : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200000bdf7b : mov rax, qword ptr [rax + 8] ; ret
0x000002000043b380 : mov rax, qword ptr [rax + rcx*8] ; add rax, r9 ; ret
0x000002000052a6ec : mov rax, qword ptr [rax + rcx*8] ; lea ecx, dword ptr [r11 + 1] ; call rax
0x0000020000441db6 : mov rax, qword ptr [rax + rcx*8] ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200004ee92a : mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200001baf67 : mov rax, qword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001294ca : mov rax, qword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x000002000002d939 : mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000036dfa : mov rax, qword ptr [rax] ; ret
0x00000200001684b8 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x200001684ca ; call rax
0x000002000050f29e : mov rax, qword ptr [rbp + 0x48] ; movsx ecx, word ptr [rax] ; jmp 0x2000050f272
0x000002000007bf15 : mov rax, qword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x000002000001eda7 : mov rax, qword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000016ec6 : mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x000002000041a580 : mov rax, qword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000055ec4 : mov rax, qword ptr [rcx + 0x10] ; ret
0x000002000041b43c : mov rax, qword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200000517b0 : mov rax, qword ptr [rcx + 0x1c8] ; ret
0x000002000038a6ed : mov rax, qword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000574544 : mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000047acc : mov rax, qword ptr [rcx + 0x220] ; ret
0x0000020000550727 : mov rax, qword ptr [rcx + 0x28] ; mov dword ptr [rax], r8d ; ret
0x00000200001064bd : mov rax, qword ptr [rcx + 0x28] ; ret
0x00000200004c425c : mov rax, qword ptr [rcx + 0x28] ; test rax, rax ; je 0x200004c4272 ; call rax
0x0000020000035710 : mov rax, qword ptr [rcx + 0x2d0] ; ret
0x000002000006c0e0 : mov rax, qword ptr [rcx + 0x2e0] ; ret
0x000002000038a1cd : mov rax, qword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000dcdb8 : mov rax, qword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000017a650 : mov rax, qword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000df858 : mov rax, qword ptr [rcx + 0x398] ; ret
0x00000200000549d8 : mov rax, qword ptr [rcx + 0x3a0] ; ret
0x00000200000517a8 : mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000051f90 : mov rax, qword ptr [rcx + 0x3c8] ; ret
0x0000020000056430 : mov rax, qword ptr [rcx + 0x3d0] ; ret
0x00000200000dfacc : mov rax, qword ptr [rcx + 0x3e8] ; ret
0x00000200001978ff : mov rax, qword ptr [rcx + 0x3f0] ; ret
0x000002000003fe70 : mov rax, qword ptr [rcx + 0x410] ; ret
0x00000200000e1398 : mov rax, qword ptr [rcx + 0x418] ; ret
0x000002000043be50 : mov rax, qword ptr [rcx + 0x448] ; ret
0x0000020000593313 : mov rax, qword ptr [rcx + 0x48] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x00000200000beea5 : mov rax, qword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x000002000045a557 : mov rax, qword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000003f924 : mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000060c78 : mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000019a5ac : mov rax, qword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x0000020000060aa8 : mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x0000020000055ea4 : mov rax, qword ptr [rcx + 8] ; ret
0x0000020000174e64 : mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000141d93 : mov rax, qword ptr [rcx + rax*8] ; movzx eax, byte ptr [rax + 0x48] ; ret
0x00000200000342dd : mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001b36f3 : mov rax, qword ptr [rcx] ; and rax, 0xfffff000 ; ret
0x00000200004855b5 : mov rax, qword ptr [rcx] ; cmp rax, rcx ; jne 0x200004855c9 ; mov al, dl ; ret
0x0000020000641916 : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x200006418fd ; ret
0x000002000043a0cd : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x2000043a0e5 ; call rax
0x0000020000051b50 : mov rax, qword ptr [rdi] ; jmp 0x20000051b38
0x0000020000657073 : mov rax, qword ptr [rdx + 0x10] ; mov qword ptr [rcx + 0x10], rax ; ret
0x000002000064b4f7 : mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x00000200000bee9d : mov rax, qword ptr [rdx + 0x220] ; ret
0x00000200004d0417 : mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200000beeb2 : mov rax, qword ptr [rdx + 0xb8] ; ret
0x0000020000028a84 : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000058d1dc : mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x00000200005b74bf : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rax ; jmp 0x200005b74d5
0x0000020000366545 : mov rax, qword ptr [rdx] ; test al, 1 ; je 0x20000366556 ; ret
0x000002000016c800 : mov rax, qword ptr [rip + 0x114f71] ; call rax
0x000002000016c6ee : mov rax, qword ptr [rip + 0x115083] ; call rax
0x000002000016c233 : mov rax, qword ptr [rip + 0x115536] ; call rax
0x00000200001d5436 : mov rax, qword ptr [rip + 0x181fab] ; call rax
0x0000020000183bd7 : mov rax, qword ptr [rip + 0x1cc4a2] ; ret
0x000002000016ac37 : mov rax, qword ptr [rip + 0x1ec87a] ; call rax
0x000002000016105f : mov rax, qword ptr [rip + 0x1f6452] ; call rax
0x0000020000160f4c : mov rax, qword ptr [rip + 0x1f6565] ; call rax
0x0000020000160cbb : mov rax, qword ptr [rip + 0x1f67f6] ; call rax
0x0000020000160bea : mov rax, qword ptr [rip + 0x1f68c7] ; call rax
0x0000020000160a55 : mov rax, qword ptr [rip + 0x1f6a5c] ; call rax
0x0000020000144b80 : mov rax, qword ptr [rip + 0x212b21] ; ret
0x000002000012edcb : mov rax, qword ptr [rip + 0x2286e6] ; call rax
0x000002000012ed6c : mov rax, qword ptr [rip + 0x228745] ; call rax
0x0000020000030e60 : mov rax, qword ptr [rip + 0x2421c9] ; ret
0x00000200000faaa6 : mov rax, qword ptr [rip + 0x25c93b] ; call rax
0x00000200000fa81e : mov rax, qword ptr [rip + 0x25cbc3] ; call rax
0x0000020000003502 : mov rax, qword ptr [rip + 0x271f77] ; ret
0x000002000003086e : mov rax, qword ptr [rip + 0x326c43] ; call rax
0x0000020000030735 : mov rax, qword ptr [rip + 0x326d7c] ; call rax
0x00000200000155ed : mov rax, qword ptr [rip + 0x341ec4] ; call rax
0x0000020000013da7 : mov rax, qword ptr [rip + 0x34370a] ; call rax
0x0000020000013d34 : mov rax, qword ptr [rip + 0x34377d] ; call rax
0x0000020000013c42 : mov rax, qword ptr [rip + 0x34386f] ; call rax
0x000002000001057d : mov rax, qword ptr [rip + 0x346f34] ; call rax
0x000002000001050a : mov rax, qword ptr [rip + 0x346fa7] ; call rax
0x000002000000f4c7 : mov rax, qword ptr [rip + 0x347fea] ; call rax
0x000002000000f302 : mov rax, qword ptr [rip + 0x3481af] ; call rax
0x000002000000f266 : mov rax, qword ptr [rip + 0x34824b] ; call rax
0x000002000000f13d : mov rax, qword ptr [rip + 0x348374] ; call rax
0x000002000000f105 : mov rax, qword ptr [rip + 0x3483ac] ; call rax
0x000002000000f0a8 : mov rax, qword ptr [rip + 0x348409] ; call rax
0x000002000000efa5 : mov rax, qword ptr [rip + 0x34850c] ; call rax
0x000002000000c593 : mov rax, qword ptr [rip + 0x34af1e] ; call rax
0x000002000000c4af : mov rax, qword ptr [rip + 0x34b002] ; call rax
0x000002000000c403 : mov rax, qword ptr [rip + 0x34b0ae] ; call rax
0x000002000000c31f : mov rax, qword ptr [rip + 0x34b192] ; call rax
0x000002000000c2d8 : mov rax, qword ptr [rip + 0x34b1d9] ; call rax
0x000002000000c229 : mov rax, qword ptr [rip + 0x34b288] ; call rax
0x000002000038fff5 : mov rax, qword ptr [rip + 0xac994] ; call rax
0x00000200005d3f98 : mov rax, qword ptr [rip - 0x1975ff] ; call rax
0x00000200004bb20b : mov rax, qword ptr [rip - 0x223eea] ; call rax
0x0000020000385415 : mov rax, qword ptr [rip - 0x2e34c] ; call rax
0x00000200005b6b0b : mov rax, qword ptr [rip - 0x342baa] ; call rax
0x000002000038f17d : mov rax, qword ptr [rip - 0x380b4] ; call rax
0x0000020000624237 : mov rax, qword ptr [rip - 0x3b02d6] ; call rax
0x00000200003c0f46 : mov rax, qword ptr [rip - 0x69e7d] ; call rax
0x00000200003c1314 : mov rax, qword ptr [rip - 0x6a24b] ; call rax
0x00000200003e7141 : mov rax, qword ptr [rip - 0x90078] ; call rax
0x000002000055f100 : mov rax, qword ptr [rsi + 0x38] ; xor edx, edx ; mov rcx, rdi ; call rax
0x000002000042312d : mov rax, qword ptr [rsi + 0xc] ; mov qword ptr [r14], rax ; jmp 0x20000423101
0x000002000012f818 : mov rax, qword ptr [rsi + rdx*8] ; mov qword ptr [r11 + rdx*8], rax ; inc edx ; jmp 0x2000012f819
0x0000020000478aa7 : mov rax, qword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x0000020000596934 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x0000020000596916 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x0000020000172c43 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x00000200000635ca : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x0000020000030231 : mov rax, qword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x0000020000468395 : mov rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x00000200003846d5 : mov rax, qword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x000002000064c68a : mov rax, qword ptr [rsp + 0x68] ; mov qword ptr [rcx + 0x58], rax ; ret
0x000002000048edee : mov rax, qword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x000002000017bdb0 : mov rax, qword ptr [rsp] ; ret
0x0000020000152920 : mov rax, qword ptr gs:[0x188] ; ret
0x00000200001a26af : mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x0000020000153b88 : mov rax, r10 ; add rsp, 0x28 ; ret
0x00000200006c8b09 : mov rax, r10 ; jmp 0x200006c8aea
0x0000020000076ec5 : mov rax, r10 ; pop rbx ; ret
0x00000200000fe56d : mov rax, r10 ; ret
0x00000200006cb7af : mov rax, r11 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000020c4a : mov rax, r11 ; add rsp, 0x28 ; ret
0x000002000014d486 : mov rax, r11 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007378e : mov rax, r11 ; ret
0x000002000013cd73 : mov rax, r8 ; add rsp, 0x28 ; ret
0x00000200005d2e97 : mov rax, r8 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000d3061 : mov rax, r8 ; add rsp, 0x38 ; ret
0x0000020000076d47 : mov rax, r8 ; pop rbx ; ret
0x00000200000a3774 : mov rax, r8 ; pop rsi ; pop rdi ; ret
0x000002000000a2e7 : mov rax, r8 ; ret
0x0000020000657f12 : mov rax, r9 ; add rsp, 0x28 ; ret
0x000002000000e265 : mov rax, r9 ; ret
0x000002000000b4be : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d26a3 : mov rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000380278 : mov rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000046c59d : mov rax, rbx ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x00000200000452ae : mov rax, rbx ; add rsp, 0x58 ; pop rdi ; pop rbx ; ret
0x000002000018fbfa : mov rax, rbx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000132190 : mov rax, rbx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000010580c : mov rax, rbx ; mov rcx, rdi ; call rax
0x0000020000141e00 : mov rax, rbx ; ret
0x000002000003c395 : mov rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d23aa : mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000015ae25 : mov rax, rcx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000026806 : mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000199052 : mov rax, rcx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000054c30 : mov rax, rcx ; add rsp, 0x48 ; ret
0x00000200000a5206 : mov rax, rcx ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x00000200001843f8 : mov rax, rcx ; add rsp, 0x58 ; ret
0x0000020000054ac5 : mov rax, rcx ; add rsp, 0x68 ; ret
0x0000020000116f98 : mov rax, rcx ; jne 0x20000116fa3 ; ret
0x000002000001804c : mov rax, rcx ; ret
0x00000200000050cc : mov rax, rdi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000387a6 : mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000522be7 : mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000a375c : mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000082939 : mov rax, rdx ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x000002000003efbb : mov rax, rdx ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000101b3d : mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000046ee6 : mov rax, rdx ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001be7d5 : mov rax, rdx ; add rsp, 0x38 ; ret
0x00000200001a2ba4 : mov rax, rdx ; add rsp, 0x48 ; ret
0x000002000013f9be : mov rax, rdx ; cqo ; idiv rcx ; ret
0x00000200000da812 : mov rax, rdx ; jmp 0x200000da799
0x00000200003e0282 : mov rax, rdx ; jmp 0x200003e025d
0x00000200004757e9 : mov rax, rdx ; jmp 0x200004757b2
0x00000200004757e8 : mov rax, rdx ; jmp 0x200004757b3
0x000002000052b6f0 : mov rax, rdx ; jmp 0x2000052b705
0x000002000056489e : mov rax, rdx ; jmp 0x200005648b3
0x000002000069b264 : mov rax, rdx ; jmp 0x2000069b26d
0x000002000069bf90 : mov rax, rdx ; jmp 0x2000069bf99
0x000002000069c55e : mov rax, rdx ; jmp 0x2000069c567
0x000002000069c69c : mov rax, rdx ; jmp 0x2000069c6a5
0x000002000069ccd1 : mov rax, rdx ; jmp 0x2000069ccda
0x000002000069d0b5 : mov rax, rdx ; jmp 0x2000069d0be
0x000002000069dfad : mov rax, rdx ; jmp 0x2000069dfb6
0x000002000069e493 : mov rax, rdx ; jmp 0x2000069e49c
0x000002000069e760 : mov rax, rdx ; jmp 0x2000069e769
0x000002000069e835 : mov rax, rdx ; jmp 0x2000069e83e
0x000002000069f01f : mov rax, rdx ; jmp 0x2000069f028
0x000002000069f969 : mov rax, rdx ; jmp 0x2000069f972
0x000002000069fe2a : mov rax, rdx ; jmp 0x2000069fe33
0x00000200006d1d23 : mov rax, rdx ; jmp 0x200006d1d2c
0x00000200006d2040 : mov rax, rdx ; jmp 0x200006d2049
0x00000200006d24eb : mov rax, rdx ; jmp 0x200006d24f4
0x00000200006d2990 : mov rax, rdx ; jmp 0x200006d2999
0x00000200006d5f4e : mov rax, rdx ; jmp 0x200006d5f57
0x00000200006d5fbf : mov rax, rdx ; jmp 0x200006d5fc8
0x00000200006d6a6a : mov rax, rdx ; jmp 0x200006d6a73
0x00000200006d6d73 : mov rax, rdx ; jmp 0x200006d6d7c
0x00000200006d768f : mov rax, rdx ; jmp 0x200006d7698
0x00000200006d8bc2 : mov rax, rdx ; jmp 0x200006d8bcb
0x00000200006d8edc : mov rax, rdx ; jmp 0x200006d8ee5
0x00000200006da056 : mov rax, rdx ; jmp 0x200006da05f
0x00000200006db5e5 : mov rax, rdx ; jmp 0x200006db5ee
0x00000200006dcb68 : mov rax, rdx ; jmp 0x200006dcb71
0x00000200006dce57 : mov rax, rdx ; jmp 0x200006dce60
0x00000200006de14d : mov rax, rdx ; jmp 0x200006de156
0x00000200006de477 : mov rax, rdx ; jmp 0x200006de480
0x00000200006dea58 : mov rax, rdx ; jmp 0x200006dea61
0x00000200006df4a7 : mov rax, rdx ; jmp 0x200006df4b0
0x00000200006df952 : mov rax, rdx ; jmp 0x200006df95b
0x00000200006dfdad : mov rax, rdx ; jmp 0x200006dfdb6
0x00000200006dfe83 : mov rax, rdx ; jmp 0x200006dfe8c
0x00000200006e0294 : mov rax, rdx ; jmp 0x200006e029d
0x00000200006e0677 : mov rax, rdx ; jmp 0x200006e0680
0x00000200006e0a4c : mov rax, rdx ; jmp 0x200006e0a55
0x00000200006e0e41 : mov rax, rdx ; jmp 0x200006e0e4a
0x00000200006e1247 : mov rax, rdx ; jmp 0x200006e1250
0x00000200006e1648 : mov rax, rdx ; jmp 0x200006e1651
0x00000200006e1a63 : mov rax, rdx ; jmp 0x200006e1a6c
0x00000200006e1e64 : mov rax, rdx ; jmp 0x200006e1e6d
0x00000200006e2289 : mov rax, rdx ; jmp 0x200006e2292
0x00000200006e2734 : mov rax, rdx ; jmp 0x200006e273d
0x00000200006e2c0e : mov rax, rdx ; jmp 0x200006e2c17
0x00000200006e2c0d : mov rax, rdx ; jmp 0x200006e2c18
0x00000200006e31f2 : mov rax, rdx ; jmp 0x200006e31fb
0x00000200006e37bf : mov rax, rdx ; jmp 0x200006e37c8
0x00000200006e3c75 : mov rax, rdx ; jmp 0x200006e3c7e
0x00000200006e42a1 : mov rax, rdx ; jmp 0x200006e42aa
0x00000200006e4773 : mov rax, rdx ; jmp 0x200006e477c
0x00000200006e4c2d : mov rax, rdx ; jmp 0x200006e4c36
0x00000200006e4f6b : mov rax, rdx ; jmp 0x200006e4f74
0x00000200006e539a : mov rax, rdx ; jmp 0x200006e53a3
0x00000200006e57c9 : mov rax, rdx ; jmp 0x200006e57d2
0x00000200006e5bf8 : mov rax, rdx ; jmp 0x200006e5c01
0x00000200006e6038 : mov rax, rdx ; jmp 0x200006e6041
0x00000200006e6468 : mov rax, rdx ; jmp 0x200006e6471
0x00000200006eab6f : mov rax, rdx ; jmp 0x200006eab7c
0x0000020000055ed3 : mov rax, rdx ; jne 0x200001fb54d ; ret
0x000002000003e12a : mov rax, rdx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000001be99 : mov rax, rdx ; ret
0x0000020000046711 : mov rax, rdx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x200000466c9
0x0000020000010df4 : mov rax, rsi ; call rax
0x000002000064041e : mov rbp, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop r15 ; ret
0x00000200003b449b : mov rbp, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200005b92e2 : mov rbp, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000520ba3 : mov rbp, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000077149 : mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x0000020000100f0d : mov rbp, qword ptr [rsp + 0x10] ; mov dword ptr [r11 + 0x18], ecx ; ret
0x0000020000391aa6 : mov rbp, qword ptr [rsp + 0x28] ; pop rsi ; ret
0x0000020000479b2b : mov rbp, r9 ; call 0x200000a3956
0x0000020000646eac : mov rbp, rax ; call rbx
0x0000020000524fcf : mov rbp, rbx ; mov rcx, r14 ; call 0x2000014cbd1
0x00000200005c7c1c : mov rbp, rcx ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000022f8c : mov rbp, rcx ; mov rcx, rsi ; call qword ptr [rbx]
0x00000200001c7a01 : mov rbp, rdx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000017bba0 : mov rbp, rdx ; call qword ptr [rax]
0x00000200003ecfdd : mov rbx, qword ptr [r12] ; call 0x200000a92d6
0x0000020000406b89 : mov rbx, qword ptr [rbp - 0x40] ; mov rcx, rbx ; call 0x20000072e49
0x000002000048f552 : mov rbx, qword ptr [rbp - 0x49] ; jmp 0x2000048f520
0x000002000000f381 : mov rbx, qword ptr [rbx] ; jmp 0x2000000f34c
0x00000200004890a7 : mov rbx, qword ptr [rbx] ; mov rdx, rdi ; call rsi
0x00000200001b8c70 : mov rbx, qword ptr [rcx + rax*8 + 0x10] ; jmp 0x200001b8c84
0x000002000064ef31 : mov rbx, qword ptr [rcx] ; xor edx, edx ; call 0x2000026f018
0x0000020000185823 : mov rbx, qword ptr [rdi] ; mov rcx, rdi ; call 0x20000181a40
0x00000200005f6b66 : mov rbx, qword ptr [rip - 0x3753a5] ; jmp 0x20000482e15
0x00000200004ecaf8 : mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004ecae4
0x00000200000ca82e : mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200000ca892 : mov rbx, qword ptr [rsp + 0x10] ; xor eax, eax ; ret
0x00000200000ad02f : mov rbx, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000200007054e1 : mov rbx, qword ptr [rsp + 0x30] ; jmp 0x200007054b1
0x000002000006d068 : mov rbx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; ret
0x000002000001280a : mov rbx, qword ptr [rsp + 0x58] ; jmp 0x2000001285f
0x0000020000012809 : mov rbx, qword ptr [rsp + 0x58] ; jmp 0x20000012860
0x000002000012a0ac : mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200000d25df : mov rbx, qword ptr [rsp + 8] ; mov dword ptr [r10 + 0xc], r9d ; ret
0x0000020000159c6c : mov rbx, qword ptr [rsp + 8] ; mov dword ptr [r8], r10d ; ret
0x00000200003daf39 : mov rbx, qword ptr [rsp + 8] ; mov dword ptr [rcx + 0x7c], eax ; ret
0x00000200003a80ee : mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000039c52 : mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000105efb : mov rbx, qword ptr [rsp + 8] ; mov eax, r11d ; ret
0x000002000010eb2c : mov rbx, qword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000142d15 : mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x00000200001829a6 : mov rbx, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000006c1bd : mov rbx, qword ptr [rsp + 8] ; mov rax, rdx ; ret
0x00000200001c2c13 : mov rbx, qword ptr [rsp + 8] ; mov word ptr [r10], cx ; ret
0x0000020000588f58 : mov rbx, qword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x00000200000220c9 : mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c2d06 : mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x0000020000061a67 : mov rbx, qword ptr [rsp] ; add rsp, 8 ; ret
0x000002000051d6ff : mov rbx, r9 ; mov rsi, r8 ; call 0x2000014a221
0x000002000041a4c9 : mov rbx, rax ; call 0x2000004969e
0x0000020000123705 : mov rbx, rax ; call 0x2000006f961
0x00000200004307f0 : mov rbx, rax ; jmp 0x200004307bb
0x00000200005a7722 : mov rbx, rcx ; call 0x200000a3955
0x0000020000055f10 : mov rbx, rcx ; call 0x200000e21f5
0x0000020000576d86 : mov rbx, rcx ; call 0x2000019a572
0x000002000017bc16 : mov rbx, rcx ; call qword ptr [rax]
0x00000200004890e1 : mov rbx, rcx ; call qword ptr [rdi]
0x000002000064c196 : mov rbx, rcx ; test rax, rax ; je 0x2000064c1ab ; call rax
0x000002000017bcfc : mov rbx, rdx ; call qword ptr [rax]
0x0000020000526675 : mov rbx, rdx ; mov rsi, rcx ; call 0x20000152e19
0x000002000041837b : mov rcx, qword ptr [r14 + 0x10] ; inc dword ptr [rcx + 4] ; jmp 0x2000041834e
0x0000020000401e00 : mov rcx, qword ptr [r14 + 0x10] ; mov rdx, qword ptr [r14 + 8] ; call rax
0x000002000042b807 : mov rcx, qword ptr [r14 + 0x3d0] ; call rax
0x00000200004475a7 : mov rcx, qword ptr [r14 + 0x60] ; call 0x200000771c7
0x0000020000644b14 : mov rcx, qword ptr [r14] ; xor edx, edx ; call 0x2000026f018
0x0000020000462de2 : mov rcx, qword ptr [r15] ; xor edx, edx ; call 0x2000026f017
0x0000020000159e07 : mov rcx, qword ptr [r8 + 0x30] ; call r9
0x0000020000388f95 : mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x00000200000ee22b : mov rcx, qword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x200000ee200
0x000002000036f584 : mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x0000020000165ca3 : mov rcx, qword ptr [rax + 8] ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000168498 : mov rcx, qword ptr [rax + 8] ; test rcx, rcx ; je 0x200001684ac ; call rcx
0x000002000055fda2 : mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000118c37 : mov rcx, qword ptr [rbp + 0x27] ; xor rcx, rsp ; call 0x200000a4e59
0x0000020000019e9b : mov rcx, qword ptr [rbp + 0x28] ; call rax
0x00000200001c7765 : mov rcx, qword ptr [rbp + 0x30] ; call rax
0x00000200000194d0 : mov rcx, qword ptr [rbp + 0x38] ; call rax
0x00000200001044bf : mov rcx, qword ptr [rbp + 0x40] ; call rax
0x00000200005a8bf8 : mov rcx, qword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200001c7601 : mov rcx, qword ptr [rbp + 0x68] ; call 0x200000d38f6
0x000002000062c131 : mov rcx, qword ptr [rbp + 0x68] ; xor edx, edx ; call r14
0x0000020000178b84 : mov rcx, qword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x200000a4e59
0x000002000048b9ce : mov rcx, qword ptr [rbp - 0x11] ; call rax
0x0000020000443b0b : mov rcx, qword ptr [rbp - 0x29] ; call 0x20000072e47
0x0000020000443fa2 : mov rcx, qword ptr [rbp - 0x59] ; call 0x20000072e47
0x00000200004e8bd1 : mov rcx, qword ptr [rbp - 8] ; xor rcx, rsp ; call 0x200000a4e59
0x00000200004909f3 : mov rcx, qword ptr [rbx + 0x20] ; call 0x200000b5017
0x000002000037fb89 : mov rcx, qword ptr [rbx + 0x28] ; call rax
0x0000020000426390 : mov rcx, qword ptr [rbx + 0x40] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200004918ec : mov rcx, qword ptr [rbx + 0x48] ; call 0x200000b9b07
0x0000020000192aee : mov rcx, qword ptr [rbx + 0x80] ; call r11
0x000002000064ad52 : mov rcx, qword ptr [rbx + 8] ; mov rdx, r14 ; call r11
0x000002000017a535 : mov rcx, qword ptr [rbx] ; call rax
0x0000020000396b8b : mov rcx, qword ptr [rcx + 0x20] ; call 0x20000072e46
0x0000020000029383 : mov rcx, qword ptr [rcx + 0x28] ; call rdi
0x0000020000171b19 : mov rcx, qword ptr [rcx + 0x2988] ; call rax
0x0000020000426c67 : mov rcx, qword ptr [rcx + 0x2e0] ; call rax
0x00000200005dd877 : mov rcx, qword ptr [rcx + 0x628] ; call 0x200000b9b09
0x00000200001183cb : mov rcx, qword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; ret
0x00000200004d4829 : mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200003d937f : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x000002000017bcf8 : mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000064081a : mov rcx, qword ptr [rcx + 8] ; xor edx, edx ; call 0x2000026f019
0x00000200001b960d : mov rcx, qword ptr [rcx] ; cmp r8, rcx ; jne 0x200001b9605 ; ret
0x00000200005f7ce6 : mov rcx, qword ptr [rdi + 0x30] ; call rdx
0x00000200001efa5b : mov rcx, qword ptr [rdi + 0x80] ; mov edx, esi ; call rax
0x0000020000640c70 : mov rcx, qword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x000002000013cb8c : mov rcx, qword ptr [rip + 0x210845] ; call qword ptr [rcx]
0x00000200000ddbac : mov rcx, qword ptr [rip + 0x26f825] ; call qword ptr [rcx]
0x0000020000076662 : mov rcx, qword ptr [rip + 0x2d6d6f] ; call qword ptr [rcx]
0x0000020000075f0b : mov rcx, qword ptr [rip + 0x2d74c6] ; call qword ptr [rcx]
0x0000020000075bb9 : mov rcx, qword ptr [rip + 0x2d7818] ; call qword ptr [rcx]
0x00000200000757ef : mov rcx, qword ptr [rip + 0x2d7be2] ; call qword ptr [rcx]
0x000002000007546f : mov rcx, qword ptr [rip + 0x2d7f62] ; call qword ptr [rcx]
0x0000020000074fbb : mov rcx, qword ptr [rip + 0x2d8416] ; call qword ptr [rcx]
0x0000020000074d61 : mov rcx, qword ptr [rip + 0x2d8670] ; call qword ptr [rcx]
0x0000020000073ebe : mov rcx, qword ptr [rip + 0x2d9513] ; call qword ptr [rcx]
0x000002000007136e : mov rcx, qword ptr [rip + 0x2dc063] ; call qword ptr [rcx]
0x00000200003b50e8 : mov rcx, qword ptr [rip - 0x133907] ; call rax
0x000002000052e81d : mov rcx, qword ptr [rip - 0x2adac4] ; call r11
0x00000200005516fc : mov rcx, qword ptr [rip - 0x2cff1b] ; call rax
0x00000200006448d2 : mov rcx, qword ptr [rsi + 0x10] ; xor edx, edx ; call 0x2000026f019
0x0000020000053df4 : mov rcx, qword ptr [rsi + 0x28] ; call 0x20000050096
0x0000020000493d8f : mov rcx, qword ptr [rsi + 0x48] ; call 0x200000bf2c7
0x000002000017b9e1 : mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x0000020000445b03 : mov rcx, qword ptr [rsp + 0x30] ; call 0x20000072e48
0x0000020000640905 : mov rcx, qword ptr [rsp + 0x30] ; call 0x2000026f018
0x0000020000433b05 : mov rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200004b0de4 : mov rcx, qword ptr [rsp + 0x30] ; mov ebx, eax ; call 0x2000007d0e9
0x0000020000449d05 : mov rcx, qword ptr [rsp + 0x40] ; call 0x20000072e48
0x00000200003f0bb4 : mov rcx, qword ptr [rsp + 0x40] ; call r10
0x00000200004cfa96 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000f22c8
0x00000200004cfaae : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000f8d58
0x0000020000431ff8 : mov rcx, qword ptr [rsp + 0x48] ; call rax
0x0000020000492de9 : mov rcx, qword ptr [rsp + 0x48] ; xor edx, edx ; call 0x2000026f019
0x0000020000074dbb : mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200005d5b89 : mov rcx, qword ptr [rsp + 0x60] ; call 0x20000441dd7
0x0000020000492f50 : mov rcx, qword ptr [rsp + 0x70] ; call 0x200000b5018
0x00000200000af3b2 : mov rcx, qword ptr [rsp + 0x88] ; call r11
0x00000200000af345 : mov rcx, qword ptr [rsp + 0x88] ; call rax
0x0000020000015158 : mov rcx, qword ptr [rsp + 0x90] ; call rax
0x00000200003c3c17 : mov rcx, qword ptr [rsp + 0xa8] ; call rax
0x0000020000489504 : mov rcx, r10 ; call 0x200000b8ae6
0x00000200001bde86 : mov rcx, r10 ; call 0x200001bda25
0x000002000000b9f7 : mov rcx, r10 ; call r10
0x0000020000710bcc : mov rcx, r10 ; call r11
0x000002000039f478 : mov rcx, r10 ; call rax
0x00000200006e78d8 : mov rcx, r10 ; jmp rcx
0x000002000001fd22 : mov rcx, r10 ; mov dword ptr [r8 + 0x30], ebx ; call r9
0x000002000039f749 : mov rcx, r10 ; mov dword ptr [rsp + 0x20], r15d ; call rax
0x00000200000dd8e4 : mov rcx, r10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200005cb8da : mov rcx, r11 ; add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000004a520 : mov rcx, r11 ; call 0x200000b67a5
0x00000200004f1b01 : mov rcx, r11 ; call 0x200001183be
0x00000200005cbb46 : mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000656f52 : mov rcx, r11 ; mov rdi, rax ; call qword ptr [rbx]
0x000002000043bec9 : mov rcx, r12 ; call 0x20000068c4e
0x00000200004a0014 : mov rcx, r12 ; call 0x200000c44d6
0x00000200001b18e6 : mov rcx, r12 ; call 0x200001adb89
0x000002000003ff92 : mov rcx, r12 ; call r14
0x00000200001cf27c : mov rcx, r12 ; call r15
0x00000200006a037e : mov rcx, r12 ; call r9
0x00000200005cded8 : mov rcx, r12 ; call rax
0x00000200005e226e : mov rcx, r12 ; lea r8d, dword ptr [rdx + 0xe] ; call 0x2000015e539
0x0000020000645bbb : mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200003fc320 : mov rcx, r13 ; call 0x2000002a13e
0x0000020000446d1a : mov rcx, r13 ; call 0x20000067ea6
0x00000200004498ff : mov rcx, r13 ; call 0x20000071006
0x000002000048389d : mov rcx, r13 ; call 0x200000a9256
0x00000200005750af : mov rcx, r13 ; call 0x200000c5a49
0x0000020000575791 : mov rcx, r13 ; call 0x200000d97d9
0x000002000052dd2a : mov rcx, r13 ; call 0x200000d9fd5
0x00000200003c2dd0 : mov rcx, r13 ; call 0x2000026f015
0x00000200003f5bbf : mov rcx, r13 ; call 0x20000441dd5
0x000002000050a6d3 : mov rcx, r13 ; call r12
0x0000020000005cd3 : mov rcx, r13 ; call r15
0x000002000069db21 : mov rcx, r13 ; call r9
0x00000200000e74b2 : mov rcx, r13 ; call rax
0x00000200003aa8d8 : mov rcx, r13 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004ecf9b : mov rcx, r13 ; mov dword ptr [rsp + 0x20], esi ; call r15
0x00000200003aaa13 : mov rcx, r13 ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x0000020000646d2d : mov rcx, r13 ; mov rdx, r12 ; call rax
0x0000020000368d2e : mov rcx, r14 ; add rbp, 3 ; call 0x200000d4fc9
0x000002000047de5d : mov rcx, r14 ; call 0x2000000a095
0x000002000054a125 : mov rcx, r14 ; call 0x200000479e9
0x0000020000421258 : mov rcx, r14 ; call 0x2000004d4f5
0x00000200003a4dbc : mov rcx, r14 ; call 0x20000071005
0x00000200004795a6 : mov rcx, r14 ; call 0x200000a3956
0x000002000070e78b : mov rcx, r14 ; call 0x200000a3959
0x000002000054cfdf : mov rcx, r14 ; call 0x200000a9255
0x0000020000491692 : mov rcx, r14 ; call 0x200000b5016
0x0000020000368cc1 : mov rcx, r14 ; call 0x200000d4f15
0x000002000002fbd6 : mov rcx, r14 ; call 0x200000dbe25
0x00000200004c414c : mov rcx, r14 ; call 0x200000f22c6
0x00000200001c4278 : mov rcx, r14 ; call 0x2000013d829
0x0000020000524fa6 : mov rcx, r14 ; call 0x2000014cae6
0x0000020000524fd2 : mov rcx, r14 ; call 0x2000014cbce
0x0000020000122f88 : mov rcx, r14 ; call 0x2000017f26d
0x0000020000402dc8 : mov rcx, r14 ; call 0x2000026f015
0x00000200005ffeb7 : mov rcx, r14 ; call 0x2000026f019
0x00000200004118fd : mov rcx, r14 ; call 0x200004edb11
0x00000200006600a8 : mov rcx, r14 ; call 0x2000065c399
0x00000200001f4b2c : mov rcx, r14 ; call r10
0x0000020000051832 : mov rcx, r14 ; call r11
0x0000020000645dd3 : mov rcx, r14 ; call r12
0x00000200004b9fc7 : mov rcx, r14 ; call r15
0x00000200005201b0 : mov rcx, r14 ; call r9
0x000002000042b840 : mov rcx, r14 ; call rax
0x0000020000592cf1 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r11]
0x000002000064c268 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x00000200005c6f23 : mov rcx, r14 ; mov rdx, r12 ; call rsi
0x00000200003e3f7e : mov rcx, r15 ; call 0x20000012a66
0x00000200003e3f7e : mov rcx, r15 ; call 0x20000012a69
0x00000200004154e2 : mov rcx, r15 ; call 0x200000392ba
0x0000020000426e55 : mov rcx, r15 ; call 0x20000054296
0x0000020000426c95 : mov rcx, r15 ; call 0x200000547ee
0x0000020000415485 : mov rcx, r15 ; call 0x20000071009
0x0000020000443f90 : mov rcx, r15 ; call 0x20000072e46
0x0000020000448da7 : mov rcx, r15 ; call 0x20000076da6
0x00000200004896a1 : mov rcx, r15 ; call 0x200000b6726
0x000002000048968d : mov rcx, r15 ; call 0x200000b8ae6
0x000002000048aa96 : mov rcx, r15 ; call 0x200000b90e6
0x000002000048aaf9 : mov rcx, r15 ; call 0x200000b9886
0x000002000048aaa9 : mov rcx, r15 ; call 0x200000b9b06
0x00000200004d1a0a : mov rcx, r15 ; call 0x200000f22c6
0x000002000013d4a1 : mov rcx, r15 ; call 0x2000013d829
0x00000200003718b7 : mov rcx, r15 ; call 0x2000014db85
0x00000200003718cb : mov rcx, r15 ; call 0x2000014dbd5
0x00000200001264eb : mov rcx, r15 ; call r12
0x0000020000140827 : mov rcx, r15 ; call r14
0x00000200006d9141 : mov rcx, r15 ; call r9
0x00000200000e76d9 : mov rcx, r15 ; call rax
0x000002000045ffc5 : mov rcx, r15 ; call rbx
0x0000020000447502 : mov rcx, r15 ; call rsi
0x0000020000486056 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200005c4e89 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000048758d : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r9d ; call rdi
0x00000200005c5411 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r9d ; call rsi
0x0000020000487524 : mov rcx, r15 ; mov rdx, r12 ; call rdi
0x000002000012391d : mov rcx, r8 ; call 0x2000003fbfd
0x00000200004487ce : mov rcx, r8 ; call 0x20000076da6
0x000002000069dec7 : mov rcx, r8 ; call rdx
0x0000020000117466 : mov rcx, r8 ; jmp rdx
0x000002000005071a : mov rcx, r9 ; call 0x20000012a29
0x000002000069e3b8 : mov rcx, r9 ; call rdx
0x0000020000421560 : mov rcx, rax ; call 0x2000004fffe
0x0000020000423b57 : mov rcx, rax ; call 0x200000522b2
0x0000020000426c4e : mov rcx, rax ; call 0x20000055eaa
0x000002000042b7eb : mov rcx, rax ; call 0x20000055eca
0x000002000066771e : mov rcx, rax ; call 0x200000a3955
0x00000200004764a1 : mov rcx, rax ; call 0x200000a3956
0x000002000053eeb7 : mov rcx, rax ; call 0x200000a3957
0x0000020000402d13 : mov rcx, rax ; call 0x2000026f015
0x000002000064e1fe : mov rcx, rax ; call 0x2000026f016
0x0000020000107beb : mov rcx, rax ; call 0x200003c3e95
0x000002000070fb13 : mov rcx, rax ; call 0x2000051bd65
0x0000020000652d78 : mov rcx, rax ; call r15
0x0000020000003031 : mov rcx, rax ; call r8
0x000002000046b5a0 : mov rcx, rax ; jmp 0x2000046b56c
0x00000200006d1a00 : mov rcx, rax ; mov qword ptr [rbp - 0x58], rax ; call r9
0x00000200006d180b : mov rcx, rax ; mov qword ptr [rbp - 0x60], rax ; call r9
0x000002000041a4c6 : mov rcx, rax ; mov rbx, rax ; call 0x200000496a1
0x0000020000123702 : mov rcx, rax ; mov rbx, rax ; call 0x2000006f964
0x00000200005daf04 : mov rcx, rax ; shl r8, 5 ; call 0x200000771c9
0x000002000061f3cb : mov rcx, rbp ; call 0x2000002bb87
0x0000020000421ce9 : mov rcx, rbp ; call 0x2000004fa8a
0x0000020000438c6e : mov rcx, rbp ; call 0x20000064b06
0x00000200004487d6 : mov rcx, rbp ; call 0x20000072e46
0x000002000019afa7 : mov rcx, rbp ; call 0x200000771c5
0x000002000047ad14 : mov rcx, rbp ; call 0x200000a3706
0x00000200000efb6d : mov rcx, rbp ; call 0x200000dbe25
0x000002000037db32 : mov rcx, rbp ; call 0x200000ebf19
0x000002000051b7f2 : mov rcx, rbp ; call 0x2000014a79e
0x000002000052a4e0 : mov rcx, rbp ; call 0x2000015993a
0x000002000054e4d5 : mov rcx, rbp ; call 0x2000016f0ce
0x00000200005dd964 : mov rcx, rbp ; call 0x20000389ba5
0x00000200006600b3 : mov rcx, rbp ; call 0x2000065c2c1
0x00000200003cfa6b : mov rcx, rbp ; call r15
0x000002000017a570 : mov rcx, rbp ; call rax
0x00000200003c081b : mov rcx, rbp ; call rsi
0x0000020000646b0a : mov rcx, rbp ; mov byte ptr [rsp + 0x20], r10b ; call rax
0x00000200005e2294 : mov rcx, rbp ; mov dword ptr [rsp + 0x20], edx ; call 0x2000015e539
0x00000200006465aa : mov rcx, rbp ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000645fec : mov rcx, rbx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000020000133431 : mov rcx, rbx ; call 0x20000027011
0x0000020000601387 : mov rcx, rbx ; call 0x2000004d655
0x0000020000421971 : mov rcx, rbx ; call 0x2000004d656
0x00000200001e2f48 : mov rcx, rbx ; call 0x2000004f215
0x0000020000143a29 : mov rcx, rbx ; call 0x2000004fd25
0x00000200004275cb : mov rcx, rbx ; call 0x20000053b26
0x00000200004789c0 : mov rcx, rbx ; call 0x20000054c15
0x0000020000428626 : mov rcx, rbx ; call 0x20000056fc2
0x00000200001db4fb : mov rcx, rbx ; call 0x20000067805
0x0000020000446595 : mov rcx, rbx ; call 0x20000072d76
0x00000200003e6ba7 : mov rcx, rbx ; call 0x20000072e45
0x00000200005aaf5b : mov rcx, rbx ; call 0x200000771c5
0x0000020000449a87 : mov rcx, rbx ; call 0x200000771c6
0x00000200001f7681 : mov rcx, rbx ; call 0x200000a3955
0x00000200001f7680 : mov rcx, rbx ; call 0x200000a3956
0x00000200001f767f : mov rcx, rbx ; call 0x200000a3957
0x00000200001de7f0 : mov rcx, rbx ; call 0x200000b6729
0x0000020000498c57 : mov rcx, rbx ; call 0x200000b8e86
0x00000200003e1568 : mov rcx, rbx ; call 0x200000bd7b5
0x00000200003e1567 : mov rcx, rbx ; call 0x200000bd7b6
0x00000200004e2cd2 : mov rcx, rbx ; call 0x20000104d36
0x0000020000525e08 : mov rcx, rbx ; call 0x2000014bd16
0x0000020000525e07 : mov rcx, rbx ; call 0x2000014bd17
0x00000200001c84b3 : mov rcx, rbx ; call 0x20000174739
0x000002000005b8bd : mov rcx, rbx ; call 0x20000177ae5
0x0000020000026dfa : mov rcx, rbx ; call 0x200001a3059
0x00000200001ab033 : mov rcx, rbx ; call 0x200001a7295
0x00000200001af168 : mov rcx, rbx ; call 0x200001ab3a5
0x00000200001af1bc : mov rcx, rbx ; call 0x200001ab435
0x0000020000512dd6 : mov rcx, rbx ; call 0x2000026f015
0x0000020000642272 : mov rcx, rbx ; call 0x2000026f016
0x00000200005465f1 : mov rcx, rbx ; call 0x2000026f019
0x000002000037287e : mov rcx, rbx ; call 0x2000036eac9
0x00000200003cc4b3 : mov rcx, rbx ; call 0x20000378755
0x000002000037fed8 : mov rcx, rbx ; call 0x2000038195d
0x00000200005d8f66 : mov rcx, rbx ; call 0x200003d5175
0x0000020000587576 : mov rcx, rbx ; call 0x20000423839
0x000002000047fdbf : mov rcx, rbx ; call 0x2000043c045
0x0000020000489346 : mov rcx, rbx ; call 0x200004855d9
0x0000020000584e62 : mov rcx, rbx ; call 0x200005810f5
0x0000020000585007 : mov rcx, rbx ; call 0x20000581295
0x00000200006e6e7f : mov rcx, rbx ; call 0x200007030d5
0x000002000015f8bd : mov rcx, rbx ; call r10
0x00000200003bbd95 : mov rcx, rbx ; call r11
0x00000200003e797a : mov rcx, rbx ; call r12
0x0000020000040020 : mov rcx, rbx ; call r14
0x00000200003ab7a5 : mov rcx, rbx ; call r15
0x000002000035da97 : mov rcx, rbx ; call r8
0x0000020000026b6b : mov rcx, rbx ; call rax
0x0000020000178112 : mov rcx, rbx ; call rdi
0x00000200003bcb58 : mov rcx, rbx ; call rdx
0x00000200003bd660 : mov rcx, rbx ; call rsi
0x000002000005a9cb : mov rcx, rbx ; jmp 0x2000005a996
0x00000200001c51a4 : mov rcx, rbx ; lea edx, dword ptr [r9 + 7] ; call 0x200000213c9
0x00000200005d53a5 : mov rcx, rbx ; mov dword ptr [rdx + 4], eax ; call 0x200004815d4
0x000002000056cf55 : mov rcx, rbx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000423c04 : mov rcx, rbx ; mov edi, eax ; call 0x2000004fa8c
0x00000200003d077c : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005c7f1a : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200005c7e10 : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x00000200004890a4 : mov rcx, rbx ; mov rbx, qword ptr [rbx] ; mov rdx, rdi ; call rsi
0x0000020000584ff3 : mov rcx, rbx ; mov rdx, rsi ; call 0x20000581298
0x0000020000065271 : mov rcx, rbx ; xor r12d, r12d ; call r15
0x00000200004f441e : mov rcx, rdi ; add rsi, rax ; call 0x200001183c1
0x0000020000034849 : mov rcx, rdi ; call 0x20000010a85
0x000002000041a4be : mov rcx, rdi ; call 0x20000049002
0x00000200004b843f : mov rcx, rdi ; call 0x2000004d1c9
0x0000020000428ef5 : mov rcx, rdi ; call 0x20000056fc2
0x00000200006c7353 : mov rcx, rdi ; call 0x200000635b1
0x0000020000448f45 : mov rcx, rdi ; call 0x20000072e46
0x0000020000449a40 : mov rcx, rdi ; call 0x20000076d16
0x00000200004cafaa : mov rcx, rdi ; call 0x200000771c5
0x000002000049d00e : mov rcx, rdi ; call 0x200000bf2c6
0x00000200005c2e2a : mov rcx, rdi ; call 0x200000cf0e9
0x00000200004cfc88 : mov rcx, rdi ; call 0x200000f22c6
0x00000200004cc0ad : mov rcx, rdi ; call 0x200000f8d56
0x00000200004fd825 : mov rcx, rdi ; call 0x2000012ac4e
0x0000020000601c78 : mov rcx, rdi ; call 0x2000012deb1
0x00000200005755c3 : mov rcx, rdi ; call 0x20000131815
0x00000200005755c2 : mov rcx, rdi ; call 0x20000131816
0x000002000063537f : mov rcx, rdi ; call 0x200001415fd
0x00000200005222e3 : mov rcx, rdi ; call 0x20000150a22
0x0000020000525a59 : mov rcx, rdi ; call 0x20000150f4a
0x000002000053d88e : mov rcx, rdi ; call 0x2000015e536
0x0000020000647417 : mov rcx, rdi ; call 0x20000173639
0x0000020000185826 : mov rcx, rdi ; call 0x20000181a3d
0x00000200000ee6f8 : mov rcx, rdi ; call 0x2000018a909
0x0000020000590391 : mov rcx, rdi ; call 0x2000019c5a5
0x00000200005903b6 : mov rcx, rdi ; call 0x2000019c5f5
0x0000020000590624 : mov rcx, rdi ; call 0x2000019c8c5
0x00000200001acb3e : mov rcx, rdi ; call 0x200001a8d65
0x00000200001b2d32 : mov rcx, rdi ; call 0x2000026f015
0x00000200006407e5 : mov rcx, rdi ; call 0x2000026f016
0x000002000064e5cc : mov rcx, rdi ; call 0x2000026f017
0x000002000059f3b7 : mov rcx, rdi ; call 0x2000038b671
0x00000200005d9333 : mov rcx, rdi ; call 0x200003d5585
0x000002000016b32b : mov rcx, rdi ; call 0x20000417635
0x0000020000018e81 : mov rcx, rdi ; call 0x2000042186d
0x0000020000416ea6 : mov rcx, rdi ; call 0x2000042316d
0x00000200005d5ae2 : mov rcx, rdi ; call 0x20000441dd5
0x000002000039a98b : mov rcx, rdi ; call 0x20000466c95
0x000002000047eabc : mov rcx, rdi ; call 0x2000047e69d
0x000002000013b681 : mov rcx, rdi ; call 0x20000497969
0x000002000051d3e1 : mov rcx, rdi ; call 0x2000049961d
0x0000020000541530 : mov rcx, rdi ; call 0x20000541621
0x000002000066009d : mov rcx, rdi ; call 0x2000065c399
0x000002000050b81f : mov rcx, rdi ; call qword ptr [rax]
0x00000200001f4ae2 : mov rcx, rdi ; call r10
0x0000020000499748 : mov rcx, rdi ; call r12
0x000002000002590a : mov rcx, rdi ; call r14
0x0000020000121e1d : mov rcx, rdi ; call r15
0x00000200001a5c51 : mov rcx, rdi ; call r9
0x0000020000033fa2 : mov rcx, rdi ; call rax
0x00000200001d13cb : mov rcx, rdi ; call rbx
0x000002000040331a : mov rcx, rdi ; call rdx
0x000002000006740e : mov rcx, rdi ; call rsi
0x00000200004ea24b : mov rcx, rdi ; mov dword ptr [rsp + 0x40], esi ; call rax
0x0000020000423b7b : mov rcx, rdi ; mov esi, eax ; call 0x2000004fa8c
0x0000020000037c06 : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006313e9 : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x0000020000484605 : mov rcx, rdi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000010df1 : mov rcx, rdi ; mov rax, rsi ; call rax
0x000002000048bcd4 : mov rcx, rdi ; mov rdx, rax ; call 0x200000b4339
0x0000020000645ce9 : mov rcx, rdi ; mov rsi, rax ; call rbx
0x0000020000415127 : mov rcx, rdx ; call 0x200000392ba
0x000002000042189c : mov rcx, rdx ; call 0x2000004d656
0x000002000069fd3f : mov rcx, rdx ; call r8
0x00000200001374f6 : mov rcx, rdx ; call r9
0x000002000069f860 : mov rcx, rdx ; call rdi
0x000002000007bd35 : mov rcx, rdx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x000002000015d092 : mov rcx, rsi ; call 0x200000392b9
0x000002000041f62b : mov rcx, rsi ; call 0x2000004d1c6
0x0000020000383807 : mov rcx, rsi ; call 0x2000004fa89
0x00000200004275b9 : mov rcx, rsi ; call 0x20000052466
0x00000200005b886d : mov rcx, rsi ; call 0x20000054af9
0x00000200004297c3 : mov rcx, rsi ; call 0x20000055f66
0x00000200004297aa : mov rcx, rsi ; call 0x20000056fc2
0x0000020000439c14 : mov rcx, rsi ; call 0x20000064b06
0x0000020000442560 : mov rcx, rsi ; call 0x2000006ccfe
0x00000200003a4da9 : mov rcx, rsi ; call 0x20000071005
0x00000200003d1fb5 : mov rcx, rsi ; call 0x20000071009
0x00000200005972fd : mov rcx, rsi ; call 0x200000735d5
0x0000020000449765 : mov rcx, rsi ; call 0x20000076d16
0x00000200001aaf51 : mov rcx, rsi ; call 0x200000771c5
0x0000020000485a43 : mov rcx, rsi ; call 0x200000b5016
0x000002000048894e : mov rcx, rsi ; call 0x200000b5017
0x00000200003f6954 : mov rcx, rsi ; call 0x200000ebf19
0x00000200004c243b : mov rcx, rsi ; call 0x200000f22c6
0x00000200004ce2a9 : mov rcx, rsi ; call 0x200000f8d56
0x0000020000706072 : mov rcx, rsi ; call 0x20000102295
0x0000020000522c46 : mov rcx, rsi ; call 0x2000014c27a
0x0000020000549f16 : mov rcx, rsi ; call 0x2000016aa56
0x000002000010b8ce : mov rcx, rsi ; call 0x20000177ae5
0x0000020000702d83 : mov rcx, rsi ; call 0x2000026f015
0x00000200006407d7 : mov rcx, rsi ; call 0x2000026f016
0x000002000053c8b1 : mov rcx, rsi ; call 0x200003d8b5d
0x00000200005fe1c1 : mov rcx, rsi ; call 0x200003f572d
0x0000020000018c0c : mov rcx, rsi ; call 0x2000042186d
0x00000200003ccb7f : mov rcx, rsi ; call 0x20000438e65
0x00000200004921f5 : mov rcx, rsi ; call 0x2000055e455
0x0000020000660092 : mov rcx, rsi ; call 0x2000065c399
0x0000020000022f8f : mov rcx, rsi ; call qword ptr [rbx]
0x0000020000630bc1 : mov rcx, rsi ; call r10
0x000002000064736e : mov rcx, rsi ; call r12
0x000002000002354b : mov rcx, rsi ; call r14
0x00000200005c7b2b : mov rcx, rsi ; call rax
0x000002000064c7e2 : mov rcx, rsi ; call rdx
0x000002000044904c : mov rcx, rsi ; inc dword ptr [rsi + 0x14] ; call 0x20000076d19
0x00000200001b753e : mov rcx, rsi ; mov dword ptr [rbx], r11d ; call rdi
0x00000200005c6d49 : mov rcx, rsi ; mov dword ptr [rsp + 0x40], r14d ; call rax
0x00000200003f9124 : mov rcx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000047d771 : mov rcx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r12
0x0000020000646ea9 : mov rcx, rsi ; mov rbp, rax ; call rbx
0x0000020000577b43 : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x000002000010a1ac : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x000002000006865d : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200005767cd : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000034279 : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000001b6f8 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000106b35 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000062c9a : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000041a4bb : mov rdi, qword ptr [rax] ; mov rcx, rdi ; call 0x20000049005
0x00000200006345b9 : mov rdi, qword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200001a83c8 : mov rdi, qword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200006c734f : mov rdi, qword ptr [rcx + 0x30] ; mov rcx, rdi ; call 0x200000635b5
0x00000200000d8786 : mov rdi, qword ptr [rsp + 0x10] ; mov al, r9b ; ret
0x000002000003f822 : mov rdi, qword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x0000020000192d1c : mov rdi, qword ptr [rsp + 0x10] ; mov eax, edx ; ret
0x000002000019d031 : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r10d ; ret
0x000002000002722a : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r11d ; ret
0x0000020000191822 : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r8d ; ret
0x000002000003ecce : mov rdi, qword ptr [rsp + 0x10] ; mov eax, r9d ; ret
0x00000200004cf6e1 : mov rdi, qword ptr [rsp + 0x10] ; mov rax, r10 ; ret
0x000002000018b9d7 : mov rdi, qword ptr [rsp + 0x10] ; mov rax, r9 ; ret
0x0000020000176747 : mov rdi, qword ptr [rsp + 0x10] ; mov word ptr [r11], cx ; ret
0x0000020000002fa4 : mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000192c18 : mov rdi, qword ptr [rsp + 0x18] ; mov al, r10b ; ret
0x00000200000ab7cf : mov rdi, qword ptr [rsp + 0x18] ; mov al, r9b ; ret
0x000002000059b1d5 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, ecx ; ret
0x000002000013a4b4 : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r10d ; ret
0x000002000019dada : mov rdi, qword ptr [rsp + 0x18] ; mov eax, r11d ; ret
0x000002000002d307 : mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000464ee4 : mov rdi, qword ptr [rsp + 0x18] ; sub eax, edx ; ret
0x00000200001405b5 : mov rdi, qword ptr [rsp + 0x18] ; xor eax, eax ; ret
0x00000200007055ba : mov rdi, qword ptr [rsp + 0x20] ; movzx eax, r9w ; ret
0x000002000001fc81 : mov rdi, qword ptr [rsp + 0x20] ; ret
0x000002000043a876 : mov rdi, qword ptr [rsp + 0x20] ; xor eax, eax ; pop rbx ; ret
0x0000020000157cc6 : mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x0000020000006390 : mov rdi, qword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x00000200004bb1b6 : mov rdi, qword ptr [rsp + 0x48] ; jmp 0x200004bb21e
0x0000020000058a10 : mov rdi, qword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x0000020000130925 : mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000014ddf8 : mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000371c0f : mov rdi, r14 ; jmp 0x2000036643b
0x00000200004e1ebc : mov rdi, r8 ; mov rsi, rdx ; call 0x20000105b7d
0x000002000014b506 : mov rdi, r8 ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000656f55 : mov rdi, rax ; call qword ptr [rbx]
0x00000200006e0670 : mov rdx, qword ptr [r14 + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0687
0x00000200006e1a5c : mov rdx, qword ptr [r14 + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1a73
0x00000200004471d3 : mov rdx, qword ptr [r14 + 0x68] ; mov rcx, rdi ; call rax
0x0000020000401e04 : mov rdx, qword ptr [r14 + 8] ; call rax
0x000002000052b6ed : mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x2000052b708
0x000002000056489b : mov rdx, qword ptr [r8] ; mov rax, rdx ; jmp 0x200005648b6
0x000002000013c54a : mov rdx, qword ptr [rax + 0x28] ; test rdx, rdx ; je 0x2000013c560 ; call rdx
0x000002000014ca63 : mov rdx, qword ptr [rax + 8] ; bts qword ptr [rdx], rcx ; ret
0x0000020000361045 : mov rdx, qword ptr [rax + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call qword ptr [rax]
0x00000200004b5c16 : mov rdx, qword ptr [rax] ; add rdx, 8 ; mov rax, rdx ; ret
0x00000200001c7083 : mov rdx, qword ptr [rbp + 0x100] ; call 0x200000f3309
0x00000200001c7761 : mov rdx, qword ptr [rbp + 0x28] ; mov rcx, qword ptr [rbp + 0x30] ; call rax
0x0000020000019e97 : mov rdx, qword ptr [rbp + 0x30] ; mov rcx, qword ptr [rbp + 0x28] ; call rax
0x00000200001044bb : mov rdx, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x00000200000194cc : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x38] ; call rax
0x0000020000398a58 : mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200004cafa6 : mov rdx, qword ptr [rbp - 0x41] ; mov rcx, rdi ; call 0x200000771c9
0x0000020000177fe1 : mov rdx, qword ptr [rbx + 0x30] ; mov rcx, rbx ; call rax
0x00000200006e0a45 : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0a5c
0x00000200006e1240 : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1257
0x00000200006e1e5d : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1e74
0x00000200006e5393 : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e53aa
0x00000200006e5bf1 : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e5c08
0x00000200006e6461 : mov rdx, qword ptr [rbx + 0x3b8] ; mov rax, rdx ; jmp 0x200006e6478
0x0000020000448cde : mov rdx, qword ptr [rbx + 0x40] ; mov rcx, rbx ; call rax
0x000002000054dc2e : mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200004ecaf4 : mov rdx, qword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200004ecae8
0x000002000007bd38 : mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x000002000040849c : mov rdx, qword ptr [rcx + 0x40] ; call rax
0x000002000069e3b0 : mov rdx, qword ptr [rcx] ; call r8
0x000002000069fd37 : mov rdx, qword ptr [rcx] ; call r9
0x000002000069dec0 : mov rdx, qword ptr [rcx] ; call rdi
0x00000200005b51b6 : mov rdx, qword ptr [rdi + 0x38] ; lea ecx, dword ptr [rbp + 2] ; call rax
0x00000200005b51eb : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x000002000061b28a : mov rdx, qword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000061b29e ; call rax
0x00000200004ebdc1 : mov rdx, qword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000069e759 : mov rdx, qword ptr [rdi + 0x3b8] ; mov rax, rdx ; jmp 0x2000069e770
0x00000200006dfda6 : mov rdx, qword ptr [rdi + 0x3b8] ; mov rax, rdx ; jmp 0x200006dfdbd
0x00000200000176a1 : mov rdx, qword ptr [rdx + 0x20] ; jmp 0x200000173d1
0x00000200003b41f1 : mov rdx, qword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200004890dd : mov rdx, qword ptr [rdx + 8] ; mov rbx, rcx ; call qword ptr [rdi]
0x000002000003f983 : mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000003f98f
0x0000020000162122 : mov rdx, qword ptr [rdx + rax*8] ; test rdx, rdx ; je 0x20000162136 ; call rdx
0x000002000037e99e : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x2000037e9a1 ; ret
0x0000020000629924 : mov rdx, qword ptr [rip - 0x39ded3] ; call r10
0x0000020000602855 : mov rdx, qword ptr [rsi + 0x38] ; test rdx, rdx ; je 0x20000602869 ; call rax
0x00000200006e028d : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e02a4
0x00000200006e0e3a : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e0e51
0x00000200006e1641 : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e1658
0x00000200006e2282 : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e2299
0x00000200006e4f64 : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e4f7b
0x00000200006e57c2 : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e57d9
0x00000200006e6031 : mov rdx, qword ptr [rsi + 0x3b8] ; mov rax, rdx ; jmp 0x200006e6048
0x00000200006a11cd : mov rdx, qword ptr [rsp + 0x30] ; call r10
0x0000020000023e8d : mov rdx, qword ptr [rsp + 0x48] ; call r10
0x00000200003c0816 : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rbp ; call rsi
0x00000200001a5c4c : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rdi ; call r9
0x00000200001a5c8e : mov rdx, qword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x000002000040849b : mov rdx, qword ptr gs:[rcx + 0x40] ; call rax
0x000002000051bd0a : mov rdx, r10 ; call 0x2000014a6e6
0x000002000058da25 : mov rdx, r11 ; mov rcx, rbx ; call rax
0x000002000049dfc3 : mov rdx, r12 ; call 0x200000c6f86
0x0000020000503dcb : mov rdx, r12 ; call 0x20000270045
0x0000020000646d30 : mov rdx, r12 ; call rax
0x0000020000487527 : mov rdx, r12 ; call rdi
0x00000200005c6f26 : mov rdx, r12 ; call rsi
0x00000200003a77a7 : mov rdx, r12 ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x0000020000053df1 : mov rdx, r12 ; mov rcx, qword ptr [rsi + 0x28] ; call 0x20000050099
0x00000200000e74af : mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200005515b1 : mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200004d58f6 : mov rdx, r12 ; mov rcx, r15 ; call rax
0x00000200003ab7a2 : mov rdx, r12 ; mov rcx, rbx ; call r15
0x000002000035da94 : mov rdx, r12 ; mov rcx, rbx ; call r8
0x00000200003ccb7c : mov rdx, r12 ; mov rcx, rsi ; call 0x20000438e68
0x000002000019f1f6 : mov rdx, r13 ; call 0x2000014b4f5
0x00000200001ab030 : mov rdx, r13 ; mov rcx, rbx ; call 0x200001a7298
0x0000020000499745 : mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200001faf75 : mov rdx, r13 ; shl r8, 4 ; call 0x200000771c9
0x00000200004895e2 : mov rdx, r14 ; call 0x20000107959
0x0000020000544a8f : mov rdx, r14 ; call 0x2000016af86
0x000002000064ad56 : mov rdx, r14 ; call r11
0x00000200004d4826 : mov rdx, r14 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001cf279 : mov rdx, r14 ; mov rcx, r12 ; call r15
0x0000020000475357 : mov rdx, r14 ; mov rcx, r13 ; call rax
0x00000200003b6c88 : mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000652d75 : mov rdx, r14 ; mov rcx, rax ; call r15
0x00000200005222e0 : mov rdx, r14 ; mov rcx, rdi ; call 0x20000150a25
0x000002000051d3de : mov rdx, r14 ; mov rcx, rdi ; call 0x20000499620
0x000002000044255d : mov rdx, r14 ; mov rcx, rsi ; call 0x2000006cd01
0x00000200005c7b28 : mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200001aaf02 : mov rdx, r15 ; call 0x200000771c5
0x000002000051c8fa : mov rdx, r15 ; call 0x2000014a722
0x000002000051c8f9 : mov rdx, r15 ; call 0x2000014a723
0x000002000003ff8f : mov rdx, r15 ; mov rcx, r12 ; call r14
0x0000020000368cbe : mov rdx, r15 ; mov rcx, r14 ; call 0x200000d4f18
0x00000200001aaf4e : mov rdx, r15 ; mov rcx, rsi ; call 0x200000771c8
0x000002000003ffca : mov rdx, r15 ; mov rcx, rsi ; call r14
0x00000200001f058f : mov rdx, r8 ; call qword ptr [rbx]
0x000002000065a31a : mov rdx, rax ; add rsp, 0x38 ; jmp r8
0x000002000048bcd7 : mov rdx, rax ; call 0x200000b4336
0x00000200001e8d00 : mov rdx, rax ; call 0x200000d4fc5
0x000002000035eccf : mov rdx, rax ; mov rax, qword ptr [rax + 8] ; jmp 0x2000035eca2
0x0000020000498b3e : mov rdx, rax ; mov rcx, rsi ; call r14
0x00000200001682e8 : mov rdx, rax ; shr rdx, 0x20 ; wrmsr ; ret
0x000002000057a33e : mov rdx, rbp ; call 0x200001a3bb2
0x00000200000d9639 : mov rdx, rbp ; call rax
0x000002000013b67e : mov rdx, rbp ; mov rcx, rdi ; call 0x2000049796c
0x0000020000510fde : mov rdx, rbp ; mov rcx, rsi ; call r14
0x00000200004902f2 : mov rdx, rbx ; call 0x200000bf276
0x000002000006acae : mov rdx, rbx ; call 0x200000c6f85
0x00000200005137bf : mov rdx, rbx ; call 0x200001434b6
0x00000200004118b5 : mov rdx, rbx ; call 0x2000051db65
0x0000020000119c38 : mov rdx, rbx ; call rax
0x0000020000528661 : mov rdx, rbx ; mov ecx, ebp ; call 0x20000153ff8
0x000002000004a51d : mov rdx, rbx ; mov rcx, r11 ; call 0x200000b67a8
0x0000020000005cd0 : mov rdx, rbx ; mov rcx, r13 ; call r15
0x00000200006600a5 : mov rdx, rbx ; mov rcx, r14 ; call 0x2000065c39c
0x0000020000645dd0 : mov rdx, rbx ; mov rcx, r14 ; call r12
0x0000020000448da4 : mov rdx, rbx ; mov rcx, r15 ; call 0x20000076da9
0x00000200001264e8 : mov rdx, rbx ; mov rcx, r15 ; call r12
0x00000200004487cb : mov rdx, rbx ; mov rcx, r8 ; call 0x20000076da9
0x00000200006600b0 : mov rdx, rbx ; mov rcx, rbp ; call 0x2000065c2c4
0x0000020000416ea3 : mov rdx, rbx ; mov rcx, rdi ; call 0x20000423170
0x000002000066009a : mov rdx, rbx ; mov rcx, rdi ; call 0x2000065c39c
0x00000200003d025a : mov rdx, rbx ; mov rcx, rdi ; call r10
0x0000020000121e1a : mov rdx, rbx ; mov rcx, rdi ; call r15
0x000002000005c3c0 : mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000015c02a : mov rdx, rbx ; mov rcx, rdi ; call rsi
0x0000020000010dee : mov rdx, rbx ; mov rcx, rdi ; mov rax, rsi ; call rax
0x00000200005972fa : mov rdx, rbx ; mov rcx, rsi ; call 0x200000735d8
0x000002000070606f : mov rdx, rbx ; mov rcx, rsi ; call 0x20000102298
0x000002000066008f : mov rdx, rbx ; mov rcx, rsi ; call 0x2000065c39c
0x00000200001b753b : mov rdx, rbx ; mov rcx, rsi ; mov dword ptr [rbx], r11d ; call rdi
0x00000200006a1148 : mov rdx, rbx ; pop rbx ; add rsp, 8 ; jmp r8
0x00000200001ca883 : mov rdx, rbx ; xor ecx, ecx ; call 0x200000f6b17
0x000002000011a2d4 : mov rdx, rcx ; je 0x200001f075d ; ret
0x00000200001d7a30 : mov rdx, rcx ; jmp 0x200001d79fb
0x00000200000ea9de : mov rdx, rcx ; jne 0x200000ea9e9 ; ret
0x000002000064afb0 : mov rdx, rcx ; jne 0x2000064afbf ; xor eax, eax ; ret
0x00000200000c8506 : mov rdx, rcx ; lea rcx, qword ptr [rbp + 0x10] ; call 0x200001747b9
0x0000020000105809 : mov rdx, rcx ; mov rax, rbx ; mov rcx, rdi ; call rax
0x0000020000449449 : mov rdx, rcx ; mov rcx, r8 ; call 0x20000076da9
0x000002000000302e : mov rdx, rcx ; mov rcx, rax ; call r8
0x000002000048fdda : mov rdx, rdi ; call 0x200000bf276
0x00000200004b59ea : mov rdx, rdi ; call 0x200000d5ba6
0x0000020000426394 : mov rdx, rdi ; call qword ptr [rax]
0x000002000055fda6 : mov rdx, rdi ; call rax
0x00000200004890aa : mov rdx, rdi ; call rsi
0x000002000063111b : mov rdx, rdi ; mov rcx, r14 ; call rax
0x000002000063124b : mov rdx, rdi ; mov rcx, r15 ; call rax
0x00000200003cfa68 : mov rdx, rdi ; mov rcx, rbp ; call r15
0x000002000017a56d : mov rdx, rdi ; mov rcx, rbp ; call rax
0x0000020000026df7 : mov rdx, rdi ; mov rcx, rbx ; call 0x200001a305c
0x000002000015f8ba : mov rdx, rdi ; mov rcx, rbx ; call r10
0x000002000019ad92 : mov rdx, rdi ; mov rcx, rbx ; call rax
0x000002000041f628 : mov rdx, rdi ; mov rcx, rsi ; call 0x2000004d1c9
0x0000020000549f13 : mov rdx, rdi ; mov rcx, rsi ; call 0x2000016aa59
0x0000020000630bbe : mov rdx, rdi ; mov rcx, rsi ; call r10
0x0000020000646ea6 : mov rdx, rdi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000045ba5f : mov rdx, rsi ; call 0x200000bb079
0x0000020000503df4 : mov rdx, rsi ; call 0x20000270045
0x0000020000584e51 : mov rdx, rsi ; call 0x200005810f5
0x0000020000584ff6 : mov rdx, rsi ; call 0x20000581295
0x000002000003ff57 : mov rdx, rsi ; call r14
0x00000200002002a4 : mov rdx, rsi ; call rax
0x00000200004a8f75 : mov rdx, rsi ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x00000200005cded5 : mov rdx, rsi ; mov rcx, r12 ; call rax
0x000002000063dee4 : mov rdx, rsi ; mov rcx, r13 ; call r15
0x0000020000421255 : mov rdx, rsi ; mov rcx, r14 ; call 0x2000004d4f8
0x000002000005182f : mov rdx, rsi ; mov rcx, r14 ; call r11
0x0000020000140824 : mov rdx, rsi ; mov rcx, r15 ; call r14
0x00000200004750c3 : mov rdx, rsi ; mov rcx, r15 ; call rax
0x00000200003abe86 : mov rdx, rsi ; mov rcx, rbp ; call rax
0x0000020000449a84 : mov rdx, rsi ; mov rcx, rbx ; call 0x200000771c9
0x0000020000584e5f : mov rdx, rsi ; mov rcx, rbx ; call 0x200005810f8
0x0000020000585004 : mov rdx, rsi ; mov rcx, rbx ; call 0x20000581298
0x00000200003d02d1 : mov rdx, rsi ; mov rcx, rbx ; call r11
0x000002000004001d : mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000050b81c : mov rdx, rsi ; mov rcx, rdi ; call qword ptr [rax]
0x00000200006d9161 : mov rdx, rsi ; mov rcx, rdi ; call r12
0x000002000004004d : mov rdx, rsi ; mov rcx, rdi ; call r14
0x00000200001b2177 : mov rdx, rsi ; mov rcx, rdi ; call rax
0x00000200001d13c8 : mov rdx, rsi ; mov rcx, rdi ; call rbx
0x00000200004275b6 : mov rdx, rsi ; mov rcx, rsi ; call 0x20000052469
0x0000020000568ed1 : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop r14 ; ret
0x00000200004ad844 : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000019270 : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x000002000056284f : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x000002000049c123 : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000000756e : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x000002000001ae0c : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x000002000003e9e4 : mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000004c0e5 : mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000019a746 : mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x0000020000060ba3 : mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000056a977 : mov rsi, qword ptr [rsp + 0x28] ; mov eax, r11d ; pop rdi ; ret
0x0000020000024312 : mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000051d702 : mov rsi, r8 ; call 0x2000014a21e
0x0000020000645cec : mov rsi, rax ; call rbx
0x0000020000600254 : mov rsi, rax ; jmp 0x2000037dc38
0x0000020000526678 : mov rsi, rcx ; call 0x20000152e16
0x000002000018fdb5 : mov rsi, rcx ; jmp 0x2000018fe21
0x00000200004e68d6 : mov rsi, rcx ; xor ebx, ebx ; call 0x20000142b5f
0x00000200004e1ebf : mov rsi, rdx ; call 0x20000105b7a
0x000002000017bb34 : mov rsi, rdx ; call qword ptr [rax]
0x000002000014b509 : mov rsi, rdx ; call qword ptr [rbx]
0x000002000017bc13 : mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x000002000007714d : mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000007b4fe : mov rsp, qword ptr [rsp + 0x100] ; sti ; ret
0x000002000038485b : mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006c0b10 : mov rsp, r11 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b8b3a : mov rsp, r11 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000034103 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000011dc5f : mov rsp, r11 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200003679ff : mov rsp, r11 ; pop r14 ; pop r13 ; pop rbp ; ret
0x000002000017c49c : mov rsp, r11 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000000660f : mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000041b1 : mov rsp, r11 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000001b6fc : mov rsp, r11 ; pop r14 ; ret
0x000002000060589c : mov rsp, r11 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200006f24aa : mov rsp, r11 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000edffa : mov rsp, r11 ; pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003ad73f : mov rsp, r11 ; pop r15 ; pop r13 ; pop rbp ; ret
0x000002000000cb9e : mov rsp, r11 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000117990 : mov rsp, r11 ; pop r15 ; pop r14 ; pop r13 ; ret
0x000002000000389d : mov rsp, r11 ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000012c77 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000057a3e3 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rsi ; ret
0x000002000011904b : mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200005a9209 : mov rsp, r11 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000106b39 : mov rsp, r11 ; pop r15 ; ret
0x0000020000016886 : mov rsp, r11 ; pop rbp ; ret
0x0000020000007572 : mov rsp, r11 ; pop rdi ; ret
0x0000020000494c70 : mov sil, al ; call 0x200000b9b06
0x000002000011b5ca : mov sp, 0x23 ; ret
0x000002000055de03 : mov spl, 0xff ; add rsp, 0x38 ; ret
0x000002000069bf8b : mov ss, eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200006d993a : mov ss, eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001e9267 : mov ss, word ptr [rsi - 0x74b6001e] ; ret 0x8348
0x000002000012efde : mov word ptr [r10 + 2], r8w ; ret
0x00000200001056ed : mov word ptr [r10], cx ; add rsp, 0x28 ; ret
0x00000200001c2c18 : mov word ptr [r10], cx ; ret
0x000002000058decc : mov word ptr [r10], r9w ; mov al, 1 ; ret
0x000002000017674c : mov word ptr [r11], cx ; ret
0x00000200003f9da0 : mov word ptr [r14 + rcx*2 + 0x18], ax ; inc edx ; jmp 0x200003f9d97
0x00000200003f9d9f : mov word ptr [r14 + rcx*2 + 0x18], ax ; inc edx ; jmp 0x200003f9d98
0x0000020000529fdb : mov word ptr [r15], cx ; jmp 0x20000529fa9
0x00000200004dedfc : mov word ptr [r8 + 6], ax ; ret
0x00000200001ffdbd : mov word ptr [r8], ax ; mov eax, 0x80070216 ; ret
0x00000200001d0eb5 : mov word ptr [r8], ax ; mov eax, 0xc0000095 ; ret
0x00000200001d2c49 : mov word ptr [r8], ax ; ret
0x000002000003fe4c : mov word ptr [r8], ax ; xor eax, eax ; ret
0x0000020000163bcb : mov word ptr [r8], si ; test rax, rax ; je 0x20000163be1 ; call rax
0x000002000017fa9e : mov word ptr [r9 + 0xa], cx ; ret
0x0000020000025a5a : mov word ptr [r9 + 2], ax ; mov eax, r10d ; ret
0x0000020000391ba4 : mov word ptr [r9 + 2], cx ; xor eax, eax ; ret
0x000002000043b467 : mov word ptr [r9], ax ; mov al, 1 ; ret
0x00000200001f4ebc : mov word ptr [rax + 0x1f3ed2], es ; add rcx, r8 ; jmp rcx
0x00000200005cf35e : mov word ptr [rax + 0x5ce654], es ; add rcx, r8 ; jmp rcx
0x000002000008e2cd : mov word ptr [rax + 0x70], es ; mov ch, 0x6e ; ret
0x00000200001386fa : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x00000200001a028b : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000483f81 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000004aa72 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000487680 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x000002000016cb25 : mov word ptr [rax + rbp*4], fs ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200003f4273 : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xc7eb
0x00000200001e346f : mov word ptr [rax + rbx*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x48f8
0x000002000000be4e : mov word ptr [rax + rbx*8], fs ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000050344d : mov word ptr [rax + rbx], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200003ff5f2 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005b98b3 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add bh, bh ; ret 0x8349
0x000002000059aa07 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000400d78 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000af0d4 : mov word ptr [rax + rcx], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x0000020000416b82 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000540c93 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xb77e
0x000002000037aa1d : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x0000020000162f56 : mov word ptr [rax + rdi*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc1f6
0x00000200004671a2 : mov word ptr [rax + rdx + 0x49004662], es ; add ecx, esp ; jmp rcx
0x00000200001afdd4 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000040e289 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x39e8
0x000002000040e11f : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xa3e8
0x0000020000032063 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200003bedba : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4108
0x0000020000167b1e : mov word ptr [rax + rsi*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003b89e8 : mov word ptr [rax + rsi*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000056f207 : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; ret
0x00000200000cc100 : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x00000200003b7af3 : mov word ptr [rax + rsi*8], fs ; add dword ptr [rax], eax ; add al, ch ; ret 0xcbf6
0x00000200000c37d9 : mov word ptr [rax + rsi], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005f6c90 : mov word ptr [rax - 0x166f005b], ss ; ret
0x00000200003aad76 : mov word ptr [rax - 0x7c000002], fs ; jmp qword ptr [rcx]
0x000002000025ba89 : mov word ptr [rax], dr1 ; add al, al ; ret 0x22
0x0000020000143d0f : mov word ptr [rax], ds ; add dh, dh ; ret
0x0000020000475d35 : mov word ptr [rax], dx ; ret
0x00000200001118c2 : mov word ptr [rax], es ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000158511 : mov word ptr [rax], es ; add byte ptr [rax], al ; mov al, r10b ; ret
0x000002000012c196 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x0000020000610ff8 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x000002000046e4f1 : mov word ptr [rbp + 0x46eb30], es ; add rcx, r13 ; jmp rcx
0x000002000046e59a : mov word ptr [rbp + 0x46ed40], es ; add rcx, r13 ; jmp rcx
0x000002000053966d : mov word ptr [rbp + rax*2], r12w ; call 0x20000105968
0x00000200001b1b86 : mov word ptr [rbp - 0x2d], ax ; call r9
0x0000020000556aa3 : mov word ptr [rbp - 0x3e], ax ; jmp 0x20000556ac0
0x00000200001f10f8 : mov word ptr [rbp - 0x80], ax ; jmp 0x2000010d337
0x00000200003be834 : mov word ptr [rbp - 0xffddb2], dr0 ; ret 0x5489
0x000002000043a674 : mov word ptr [rbx + 0x439880], es ; add rcx, rbx ; jmp rcx
0x0000020000068e85 : mov word ptr [rbx + 0x68490], dr0 ; add rcx, r11 ; jmp rcx
0x000002000058a896 : mov word ptr [rbx + 8], ax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ae8fd : mov word ptr [rbx - 0x14000002], es ; adc dword ptr [rcx - 0x75], ecx ; ret 0x2b48
0x000002000058af2e : mov word ptr [rbx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063803d : mov word ptr [rbx], dr0 ; add rcx, rdx ; jmp rcx
0x000002000025b2b1 : mov word ptr [rbx], dr1 ; add ah, ah ; jmp qword ptr [rdx]
0x0000020000491410 : mov word ptr [rcx + 0x1d2], 0 ; ret
0x000002000003ef29 : mov word ptr [rcx + 0x30], 0x100 ; ret
0x000002000019c911 : mov word ptr [rcx + 0x48], ax ; ret
0x00000200004d37dd : mov word ptr [rcx + 0x4d285c], es ; add rcx, r9 ; jmp rcx
0x0000020000634b12 : mov word ptr [rcx + 0xd6], ax ; ret
0x00000200000dd07a : mov word ptr [rcx + 0xdc648], es ; add rcx, r9 ; jmp rcx
0x00000200000dd22c : mov word ptr [rcx + 0xdc690], es ; add rcx, r9 ; jmp rcx
0x00000200000dd3ae : mov word ptr [rcx + 0xdc6c0], es ; add rcx, r9 ; jmp rcx
0x00000200000057a3 : mov word ptr [rcx + 2], ax ; ret
0x000002000005a933 : mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200004b7b96 : mov word ptr [rcx + 2], dx ; ret
0x00000200003b015a : mov word ptr [rcx + 6], ax ; xor eax, eax ; ret
0x00000200000bf09b : mov word ptr [rcx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c433d : mov word ptr [rcx], ax ; xor eax, eax ; ret
0x0000020000475d32 : mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x0000020000119a3f : mov word ptr [rcx], r10w ; add rsp, 0x28 ; ret
0x00000200001548af : mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x0000020000038ddc : mov word ptr [rcx], r11w ; mov eax, r10d ; ret
0x0000020000020eac : mov word ptr [rcx], r11w ; ret
0x0000020000020e61 : mov word ptr [rcx], r9w ; add rsp, 0x28 ; ret
0x0000020000018094 : mov word ptr [rdi + 0x17134], es ; add rcx, rdi ; jmp rcx
0x0000020000108afb : mov word ptr [rdx + 0x107e00], es ; add rcx, rdx ; jmp rcx
0x000002000010a8c6 : mov word ptr [rdx + 0x1098ec], es ; add rcx, rdx ; jmp rcx
0x0000020000135c0f : mov word ptr [rdx + 0x135194], es ; add rcx, rdx ; jmp rcx
0x00000200003e0d02 : mov word ptr [rdx + 0x3e0960], es ; add rcx, r10 ; jmp rcx
0x00000200003e0f6d : mov word ptr [rdx + 0x3e0994], es ; add rcx, r10 ; jmp rcx
0x00000200003f5b62 : mov word ptr [rdx + 0x3f5054], ds ; add rcx, rdx ; jmp rcx
0x000002000042590b : mov word ptr [rdx + 0x424dd0], es ; add rcx, rdx ; jmp rcx
0x000002000043143b : mov word ptr [rdx + 0x4307b8], es ; add rcx, rdx ; jmp rcx
0x0000020000459aae : mov word ptr [rdx + 0x4594b0], es ; add rcx, rdx ; jmp rcx
0x00000200004909d0 : mov word ptr [rdx + 0x48fa3c], es ; add rcx, rdx ; jmp rcx
0x0000020000490b47 : mov word ptr [rdx + 0x48fb5c], es ; add rcx, rdx ; jmp rcx
0x00000200004d2f1c : mov word ptr [rdx + 0x4d2724], es ; add rcx, rdx ; jmp rcx
0x000002000063803b : mov word ptr [rdx + 0x63748c], es ; add rcx, rdx ; jmp rcx
0x000002000006917c : mov word ptr [rdx + 0x684f0], dr0 ; add rcx, rdx ; jmp rcx
0x0000020000507d91 : mov word ptr [rdx + 0xa], ax ; and word ptr [rdx + 8], cx ; ret
0x00000200001c3aa0 : mov word ptr [rdx + 0xf48000c], dr1 ; ret 0x8d48
0x0000020000539d8e : mov word ptr [rdx + 2], ax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000389d5f : mov word ptr [rdx + 2], ax ; ret
0x0000020000389d6f : mov word ptr [rdx + 2], cx ; mov qword ptr [rdx + 8], rax ; ret
0x000002000064f1a1 : mov word ptr [rdx + 2], r8w ; ret
0x000002000043b457 : mov word ptr [rdx], ax ; mov al, 1 ; ret
0x00000200001649b0 : mov word ptr [rdx], ax ; ret
0x000002000001a98a : mov word ptr [rdx], ax ; xor eax, eax ; ret
0x000002000019c0ff : mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x000002000014bd72 : mov word ptr [rdx], es ; add byte ptr [rax], al ; ret
0x0000020000128b47 : mov word ptr [rdx], es ; add dh, dh ; ret
0x000002000018ad20 : mov word ptr [rdx], fs ; call 0x20005a3fa2e
0x000002000064f19d : mov word ptr [rdx], r8w ; mov word ptr [rdx + 2], r8w ; ret
0x000002000013b40d : mov word ptr [rip + 0x149be0], cx ; ret
0x0000020000572d01 : mov word ptr [rip - 0x2a74c8], ax ; ret
0x0000020000572d43 : mov word ptr [rip - 0x2a750b], r9w ; ret
0x000002000048bc5d : mov word ptr [rsi + 2], r12w ; call 0x200000b5068
0x000002000008e779 : mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x000002000070d3e8 : mov word ptr [rsi - 0x74b3003c], fs ; ret 0x8348
0x0000020000031148 : mov word ptr [rsi], es ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000540e91 : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000048bc5c : mov word ptr cs:[rsi + 2], r12w ; call 0x200000b5069
0x00000200006e6ae5 : movabs al, byte ptr [0x2341ffca83000012] ; ret
0x000002000066807f : movabs al, byte ptr [0x25bf05c6c03345ff] ; ret 0x1ff
0x0000020000561004 : movabs al, byte ptr [0x274c08548000029] ; call rax
0x00000200001685a3 : movabs al, byte ptr [0x274c98548000000] ; call rcx
0x000002000064b7f7 : movabs al, byte ptr [0x2f96058b48000000] ; ret
0x000002000008edcf : movabs al, byte ptr [0x32188b65b1df219e] ; ret
0x00000200004cd504 : movabs al, byte ptr [0x3b49c32349ffe89e] ; ret 0xd74
0x000002000064a47b : movabs al, byte ptr [0x4312058b48000000] ; ret
0x0000020000085e73 : movabs al, byte ptr [0x4e048354d70dd2ee] ; ret 0x3b3
0x000002000055160c : movabs al, byte ptr [0x5b30c483480007a9] ; ret
0x000002000042c171 : movabs al, byte ptr [0x5d5e415f41000001] ; ret
0x00000200004c22aa : movabs al, byte ptr [0x6a9be8cc8b49fff9] ; ret
0x0000020000378bd4 : movabs al, byte ptr [0x70e8cc3348000001] ; ret 0xffd2
0x0000020000667fef : movabs al, byte ptr [0x73f9258300ffc15f] ; ret 0xff
0x00000200004aee4e : movabs al, byte ptr [0x8348f28b45000000] ; ret
0x0000020000516b86 : movabs al, byte ptr [0x850fc08548000000] ; ret 0xdd2
0x0000020000004f45 : movabs al, byte ptr [0x8b4575ff85480026] ; ret
0x00000200000242f7 : movabs al, byte ptr [0x8b49244f8b000050] ; ret 0x8941
0x00000200001d0e2c : movabs al, byte ptr [0x8b4cc93345fff6d7] ; ret
0x000002000061fd45 : movabs al, byte ptr [0x8bffee5ef6e990ff] ; ret
0x00000200006557f7 : movabs al, byte ptr [0x8f96058b48000000] ; ret 0x48ff
0x0000020000262fb4 : movabs al, byte ptr [0x90000000220022b0] ; ret
0x000002000008fbc7 : movabs al, byte ptr [0x9ef3685456a26e5a] ; ret
0x00000200006656b6 : movabs al, byte ptr [0xaa671d8944000000] ; ret 0x48ff
0x000002000023b1e4 : movabs al, byte ptr [0xb00050b020023a1] ; ret 0xf007
0x0000020000111a49 : movabs al, byte ptr [0xb44c08b44000004] ; ret 0x44f0
0x00000200006432b5 : movabs al, byte ptr [0xb4d8058b48000000] ; ret
0x000002000066439c : movabs al, byte ptr [0xbda10d8b48000006] ; ret 0x48ff
0x000002000025ba84 : movabs al, byte ptr [0xc000388c2400388b] ; ret 0x22
0x000002000062a13d : movabs al, byte ptr [0xc748c03345000000] ; ret 0x6980
0x0000020000640c8a : movabs al, byte ptr [0xdb03058b48000000] ; ret
0x000002000064094b : movabs al, byte ptr [0xde42058b48000000] ; ret
0x00000200004bb620 : movabs al, byte ptr [0xe8cf8b48c8558d48] ; ret
0x000002000000d684 : movabs al, byte ptr [0xff0001a1fce90001] ; ret 0x1bd
0x000002000019f9ed : movabs al, byte ptr [0xff48c8334800306e] ; ret 0x8b49
0x000002000049e7d1 : movabs byte ptr [0x3db10ff0c033ffdf], al ; ret 0xdfa2
0x00000200001179fa : movabs byte ptr [0x5b20c4834800011f], al ; ret
0x000002000064bddb : movabs byte ptr [0x5b20c48348c38bff], al ; ret
0x000002000014c7fe : movabs byte ptr [0x83489c7500388341], al ; ret 0x4920
0x000002000035f032 : movabs byte ptr [0x8b41085e8b44ffd4], al ; ret
0x00000200005f0ab5 : movabs byte ptr [0xb60fb04d8b48ffa7], al ; ret
0x00000200006c047a : movabs byte ptr [0xd8c48148ff], al ; ret
0x000002000008e320 : movabs byte ptr [0xea736cac0799c984], al ; ret
0x00000200005f8a34 : movabs byte ptr [0xf6ffe86b38e990ff], al ; ret
0x00000200006ffb6f : movabs dword ptr [0x34c00b60f41d08b], eax ; ret
0x00000200006c1aef : movabs dword ptr [0x50a60d8d4808518b], eax ; ret 0x66ff
0x00000200001a4044 : movabs dword ptr [0x60e80575000001e6], eax ; jmp rdi
0x00000200001dcdfd : movabs dword ptr [0x8b244f8b41ffe936], eax ; ret
0x000002000062e636 : movabs dword ptr [0x8b4c14558d49ffee], eax ; ret
0x000002000065fced : movabs dword ptr [0x8b4ccf8b44ffffc6], eax ; ret
0x00000200005e7a6b : movabs dword ptr [0x8be9c000022db8ff], eax ; ret 0xffef
0x00000200001f4de4 : movabs dword ptr [0x9de9ed3345ffe101], eax ; jmp rax
0x00000200006659d5 : movabs dword ptr [0xa6f01d8b44ffaeab], eax ; ret 0x41ff
0x00000200001419f7 : movabs dword ptr [0xc18b41c1920f41c2], eax ; ret
0x0000020000620e84 : movabs dword ptr [0xff1074c085c933ff], eax ; ret
0x00000200003cda6c : movabs dword ptr [0xff41c1ff410373c1], eax ; ret 0x8341
0x0000020000464fcf : movabs dword ptr [0xfffff700010800c0], eax ; ret
0x0000020000464fb7 : movabs dword ptr [0xfffff700010800c4], eax ; ret
0x000002000003d7f3 : movabs eax, dword ptr [0x1b8001aa1] ; ret
0x00000200004c2292 : movabs eax, dword ptr [0x23e8cc8b49fff9] ; ret
0x0000020000003b34 : movabs eax, dword ptr [0x34cc18b44000000] ; ret 0x8b48
0x0000020000362aab : movabs eax, dword ptr [0x5d40c48348fffff7] ; ret
0x0000020000661fb3 : movabs eax, dword ptr [0x83480058638348ff] ; ret
0x00000200000eda68 : movabs eax, dword ptr [0x850f0878394c001f] ; ret 0xdb7
0x00000200004a7b42 : movabs eax, dword ptr [0x850ffffc83410013] ; ret 0x139f
0x0000020000187fa2 : movabs eax, dword ptr [0x8b4ccd8b4c000000] ; ret
0x000002000066560d : movabs eax, dword ptr [0xab401d8948000043] ; ret 0x45ff
0x000002000009093f : movabs eax, dword ptr [0xc063c9e4cec12226] ; ret
0x00000200000913c8 : movabs eax, dword ptr [0xcaa654caa598164f] ; ret
0x00000200001d13c5 : movabs eax, dword ptr [0xcf8b48d68b480047] ; call rbx
0x000002000060c794 : movabs eax, dword ptr [0xe8ffe1c00ee990ff] ; call rdi
0x0000020000610706 : movabs eax, dword ptr [0xf6ffe11ed4e990ff] ; ret
0x0000020000605b56 : movabs eax, dword ptr [0xf6ffec991ae990ff] ; ret
0x0000020000605ce7 : movabs eax, dword ptr [0xf6ffecc35ce990ff] ; ret
0x0000020000605c7d : movabs eax, dword ptr [0xf6fff12359e990ff] ; ret
0x000002000040ff17 : movabs eax, dword ptr [0xf6ffffff68e90002] ; ret
0x00000200001cde17 : movabs eax, dword ptr [0xff0a78c085fff909] ; ret
0x00000200005a6b47 : movabs eax, dword ptr [0xff48c1ff41000000] ; ret 0x8341
0x000002000064ccdb : movabs eax, dword ptr [0xffffd0a329058bff] ; ret
0x000002000064cbc6 : movabs eax, dword ptr [0xffffd0a43e0d8bff] ; ret
0x00000200001400e6 : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x00000200001400e7 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bd09b : movaps xmm6, xmmword ptr [rsp + 0x70] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000076fe4 : movdqa xmmword ptr [rcx + 0xf0], xmm15 ; ret
0x00000200005c0501 : movdqu xmmword ptr [r10], xmm0 ; add rsp, 0x28 ; ret
0x0000020000593317 : movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x0000020000385c26 : movdqu xmmword ptr [rbp - 0x30], xmm0 ; call rsi
0x00000200001adcd7 : movdqu xmmword ptr [rcx], xmm0 ; add qword ptr [rcx + 8], -0x18 ; ret
0x0000020000376b0f : movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x000002000064f165 : movdqu xmmword ptr [rdx], xmm0 ; ret
0x00000200001b18cb : movdqu xmmword ptr [rsp + 0x70], xmm0 ; call 0x200001adb34
0x00000200000a389a : movnti dword ptr [rcx], eax ; sfence ; ret 0
0x00000200000a3899 : movnti qword ptr [rcx], rax ; sfence ; ret 0
0x00000200005c0502 : movq qword ptr [r10], mm0 ; add rsp, 0x28 ; ret
0x00000200001a5e89 : movq qword ptr [r8], mm0 ; mov eax, 1 ; ret
0x0000020000593318 : movq qword ptr [rax + 8], mm0 ; ret
0x00000200001a5e8a : movq qword ptr [rax], mm0 ; mov eax, 1 ; ret
0x0000020000385c27 : movq qword ptr [rbp - 0x30], mm0 ; call rsi
0x000002000053f8fe : movq qword ptr [rcx + 0x20], mm0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000076fe6 : movq qword ptr [rcx + 0xf0], mm7 ; ret
0x0000020000077096 : movq qword ptr [rcx + 0xf0], mm7 ; xor eax, eax ; ret
0x00000200001adcd8 : movq qword ptr [rcx], mm0 ; add qword ptr [rcx + 8], -0x18 ; ret
0x00000200005c0503 : movq qword ptr [rdx], mm0 ; add rsp, 0x28 ; ret
0x0000020000376b10 : movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x000002000064f166 : movq qword ptr [rdx], mm0 ; ret
0x00000200001b18cc : movq qword ptr [rsp + 0x70], mm0 ; call 0x200001adb33
0x00000200000f6594 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x4189001f ; add al, 0x3b ; ret 0x870f
0x000002000042a462 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rbx + 0x7823e8cb], cl ; ret
0x00000200004c7028 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0 ; add byte ptr [rbx], bh ; ret 0xe475
0x0000020000640bc8 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000841b3 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb1
0x000002000013977d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000155f1b : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x9ce9
0x000002000007b500 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000010ed83 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000936ac : movsb byte ptr [rdi], byte ptr [rsi] ; and dword ptr [rdi], ecx ; add eax, 0x1ac10510 ; ret
0x00000200006eda98 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, 0x8b44ffb8 ; ret
0x00000200003f7937 : movsb byte ptr [rdi], byte ptr [rsi] ; call 0x20000023fb4
0x00000200005030c0 : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdi]
0x00000200005466b8 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp dword ptr [rbx + 0x105f89ff], 0x3b ; ret
0x00000200006d0bdd : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000036e850 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200006f4558 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000041719 : movsb byte ptr [rdi], byte ptr [rsi] ; idiv bh ; push rsi ; ret
0x00000200006315d6 : movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rbp + 0x45850fc0] ; mov gs, ecx ; call rcx
0x0000020000629f65 : movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rbp - 0x607bf040] ; ret
0x000002000041e8c7 : movsb byte ptr [rdi], byte ptr [rsi] ; int 0xff
0x000002000025c748 : movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x00000200001e25f4 : movsb byte ptr [rdi], byte ptr [rsi] ; lock dec dword ptr [rax + 0x3b] ; ret 0x830f
0x000002000008e023 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x000002000008f072 : movsb byte ptr [rdi], byte ptr [rsi] ; or ah, cl ; jge 0x2000008f0a6 ; ret
0x00000200004e7220 : movsb byte ptr [rdi], byte ptr [rsi] ; pavgb mm7, mm7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ff2a8 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rbx ; mov edx, 0xc48348ff ; pop rax ; ret
0x00000200006c1b00 : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; ret 0x33ff
0x00000200003707dc : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000644b40 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x33ff
0x0000020000661640 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x41ff
0x0000020000448945 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x0000020000644b1b : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x49ff
0x000002000026f10e : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x64c0
0x0000020000071949 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x6c80
0x0000020000665bf4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x85ff
0x00000200003f9abe : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xebff
0x00000200001ee9ab : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffeb
0x0000020000665bd8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff
0x000002000049cc7d : movsb byte ptr [rdi], byte ptr [rsi] ; sar bh, 0xe9 ; ret 0xfffd
0x000002000066612f : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; xchg eax, edi ; lahf ; ret 0x41ff
0x000002000062a69a : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; in eax, dx ; push rsi ; ret
0x00000200006e6d32 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x0000020000665670 : movsb byte ptr [rdi], byte ptr [rsi] ; stosb byte ptr [rdi], al ; ret 0x44ff
0x00000200005fa2bd : movsb byte ptr [rdi], byte ptr [rsi] ; sub esp, esi ; push rsi ; ret
0x00000200000b503e : movsb byte ptr [rdi], byte ptr [rsi] ; xchg dword ptr [rbx], edx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001a06a8 : movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, al ; dec dword ptr [rax - 0x75] ; ret
0x00000200001e25f3 : movsb byte ptr [rdi], byte ptr ss:[rsi] ; lock dec dword ptr [rax + 0x3b] ; ret 0x830f
0x000002000001aca7 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008129b : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200001aefc2 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rip - 0x7cb80000], al ; retf ; call rbx
0x000002000011b284 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200005a4fdd : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000601867 : movsd dword ptr [rdi], dword ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; scasb al, byte ptr [rdi] ; dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x0000020000600eda : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7b] ; ret
0x00000200006bc844 : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbp - 0xf68740] ; ret
0x000002000066706c : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret 0x48ff
0x0000020000666df7 : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; js 0x20000666e76 ; ret 0x48ff
0x0000020000666e32 : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; mov ch, 0x92 ; ret 0x48ff
0x0000020000666d0b : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; or al, 0x72 ; ret 0x48ff
0x000002000065160e : movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rsi - 0x77]
0x00000200000c78ca : movsd dword ptr [rdi], dword ptr [rsi] ; lock or byte ptr [rsp], 0 ; ret
0x000002000009f6f0 : movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x00000200004eb16f : movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xda ; inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000009f418 : movsd dword ptr [rdi], dword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x0000020000090879 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1fffff59d0b
0x0000020000090878 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rbp ; call 0x1fffff59d0c
0x00000200004dedcb : movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200001fae9e : movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x000002000045cccf : movsd dword ptr [rdi], dword ptr [rsi] ; rcr dword ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000041ceb1 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000020000665ba0 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x41ff
0x000002000066152b : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x49ff
0x00000200004cdb17 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xebff
0x0000020000665af3 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xff
0x00000200001e8196 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffed
0x00000200001d65a7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfff8
0x0000020000232aac : movsd dword ptr [rdi], dword ptr [rsi] ; sar dword ptr [rax + rax], 0x3e ; ret 0x3c
0x00000200004f905b : movsd dword ptr [rdi], dword ptr [rsi] ; sbb byte ptr [rax], al ; ret
0x0000020000711150 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; dec dword ptr [rdi] ; mov edx, 0xb7ef752d ; call qword ptr [rcx]
0x000002000050164e : movsd dword ptr [rdi], dword ptr [rsi] ; str word ptr [r8 - 0x75] ; ret
0x0000020000640fef : movsd dword ptr [rdi], dword ptr [rsi] ; xlatb ; ret
0x000002000009f417 : movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x00000200000dfac4 : movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200003ca3d9 : movsx eax, cl ; xor eax, 0x20 ; ret
0x000002000050f2a2 : movsx ecx, word ptr [rax] ; jmp 0x2000050f26e
0x000002000050f2a1 : movsx rcx, word ptr [rax] ; jmp 0x2000050f26f
0x000002000050f2a0 : movsx rcx, word ptr [rax] ; jmp 0x2000050f270
0x00000200004d3dca : movsxd r13, dword ptr [r9 - 0x18] ; outsb dx, byte ptr [rsi] ; ret 0xffd9
0x00000200006bd8b1 : movsxd rax, dword ptr [rcx + 0xc] ; add qword ptr [rcx + 0x18], rax ; ret
0x0000020000143069 : movsxd rax, eax ; jne 0x200001f0dc1 ; ret
0x0000020000090946 : movsxd rax, eax ; ret
0x0000020000622fec : movsxd rax, edi ; push rsi ; ret
0x000002000061a648 : movsxd rbp, eax ; ret 0xc549
0x000002000043bb4e : movsxd rbp, eax ; sbb al, 0x72 ; ret
0x00000200005e14c3 : movsxd rbp, esp ; push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret
0x000002000008439a : movsxd rcx, edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000008a6c1 : movsxd rdi, esi ; ret
0x00000200000b8b1d : movsxd rdx, eax ; jne 0x200001e88f8 ; ret
0x0000020000366a40 : movsxd rdx, edx ; dec dword ptr [rax + 0xb] ; ret 0xcf8b
0x000002000042325e : movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200003926c1 : movsxd rsi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005b711b : movsxd rsi, eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x00000200003a594f : movsxd rsi, edx ; jmp qword ptr [rbx]
0x000002000053b357 : movsxd rsi, esi ; ret
0x00000200004e7ddf : movsxd rsp, eax ; add byte ptr [rbx], al ; sar bh, cl ; ret 0x5489
0x00000200001de231 : movsxd rsp, edx ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000385c22 : movups xmm0, xmmword ptr [rbp - 0x30] ; movdqu xmmword ptr [rbp - 0x30], xmm0 ; call rsi
0x000002000064f162 : movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000480d85 : movzx eax, al ; and eax, r8d ; or eax, 5 ; ret
0x0000020000448e9d : movzx eax, al ; ret
0x0000020000124884 : movzx eax, al ; shr eax, 3 ; and eax, 4 ; ret
0x00000200001c2a88 : movzx eax, al ; shr eax, 4 ; and eax, 1 ; ret
0x00000200005a7a20 : movzx eax, ax ; cmp eax, 0x50 ; jmp 0x200005a79f1
0x0000020000156831 : movzx eax, ax ; ret
0x0000020000054a73 : movzx eax, ax ; sub eax, ecx ; ret
0x00000200000d83c1 : movzx eax, bh ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a81d7 : movzx eax, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000126d8c : movzx eax, bpl ; mov cr8, rax ; jmp 0x20000126d62
0x000002000013259b : movzx eax, bx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001ef85 : movzx eax, bx ; add rsp, 0x38 ; ret
0x00000200000bdeb9 : movzx eax, byte ptr [rax + 0x232] ; ret
0x0000020000141d97 : movzx eax, byte ptr [rax + 0x48] ; ret
0x000002000047e81e : movzx eax, byte ptr [rcx + 0x10] ; shr eax, 1 ; and eax, 1 ; ret
0x00000200003f6f60 : movzx eax, byte ptr [rcx + 0x4f] ; add dword ptr [rdx + 0x18], eax ; ret
0x0000020000126d8d : movzx eax, ch ; mov cr8, rax ; jmp 0x20000126d61
0x00000200000bf23c : movzx eax, cl ; add rsp, 0x58 ; ret
0x0000020000050f8f : movzx eax, cl ; mov cr8, rax ; ret
0x0000020000589416 : movzx eax, cx ; add eax, 0x20 ; ret
0x000002000006b25e : movzx eax, cx ; add rsp, 0x38 ; ret
0x00000200001f4adf : movzx eax, cx ; mov rcx, rdi ; call r10
0x0000020000425e56 : movzx eax, cx ; ret
0x000002000019c005 : movzx eax, cx ; sub eax, 0x16 ; ret
0x0000020000425e60 : movzx eax, cx ; sub eax, 0x20 ; ret
0x000002000012f244 : movzx eax, cx ; sub eax, edx ; ret
0x0000020000167196 : movzx eax, dh ; mov cr8, rax ; jmp 0x20000167169
0x000002000058eaef : movzx eax, di ; add eax, edx ; jmp 0x2000058eafd
0x0000020000005f2e : movzx eax, di ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000145ec8 : movzx eax, di ; jmp 0x20000145ec3
0x00000200000d83c0 : movzx eax, dil ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000152df2 : movzx eax, dl ; add rsp, 8 ; ret
0x000002000064c237 : movzx eax, dl ; jmp 0x2000064c24a
0x000002000064c2e2 : movzx eax, dl ; jmp 0x2000064c2f5
0x000002000064c39a : movzx eax, dl ; jmp 0x2000064c3ad
0x000002000064c46b : movzx eax, dl ; jmp 0x2000064c47e
0x000002000014dbd5 : movzx eax, dl ; mov cr8, rax ; ret
0x000002000043b429 : movzx eax, dl ; ret
0x0000020000545314 : movzx eax, dx ; jmp 0x20000545323
0x0000020000174e61 : movzx eax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000141d71 : movzx eax, dx ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000425e9d : movzx eax, dx ; ret
0x0000020000378d5c : movzx eax, dx ; test eax, eax ; js 0x20000378d6f ; xor eax, eax ; ret
0x0000020000152df1 : movzx eax, r10b ; add rsp, 8 ; ret
0x000002000064c236 : movzx eax, r10b ; jmp 0x2000064c24b
0x000002000064c2e1 : movzx eax, r10b ; jmp 0x2000064c2f6
0x000002000064c399 : movzx eax, r10b ; jmp 0x2000064c3ae
0x000002000064c46a : movzx eax, r10b ; jmp 0x2000064c47f
0x000002000043b428 : movzx eax, r10b ; ret
0x0000020000545313 : movzx eax, r10w ; jmp 0x20000545324
0x000002000001ef84 : movzx eax, r11w ; add rsp, 0x38 ; ret
0x00000200005a7a1f : movzx eax, r8w ; cmp eax, 0x50 ; jmp 0x200005a79f2
0x0000020000156830 : movzx eax, r8w ; ret
0x0000020000050f8e : movzx eax, r9b ; mov cr8, rax ; ret
0x0000020000589415 : movzx eax, r9w ; add eax, 0x20 ; ret
0x0000020000588f5d : movzx eax, r9w ; ret
0x00000200001f4bae : movzx eax, si ; mov rcx, r14 ; call r10
0x0000020000167195 : movzx eax, sil ; mov cr8, rax ; jmp 0x2000016716a
0x00000200001e5913 : movzx eax, word ptr [r10 + rax*8 + 0xc] ; ret
0x00000200003fea45 : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r10d ; ret
0x00000200003ffe5c : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r9d ; ret
0x000002000014437d : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x157 ; ret
0x000002000013c8cd : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x80 ; ret
0x0000020000154561 : movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x0000020000154585 : movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x000002000010dad1 : movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x000002000013c8f5 : movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x00000200003fea46 : movzx eax, word ptr [rax + rcx*2] ; imul eax, r10d ; ret
0x00000200003ffe5d : movzx eax, word ptr [rax + rcx*2] ; imul eax, r9d ; ret
0x000002000002706c : movzx eax, word ptr [rax + rcx*2] ; movzx ecx, dx ; and eax, ecx ; ret
0x0000020000153132 : movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001b1b82 : movzx eax, word ptr [rbp - 1] ; mov word ptr [rbp - 0x2d], ax ; call r9
0x0000020000556a9f : movzx eax, word ptr [rcx + 0x24] ; mov word ptr [rbp - 0x3e], ax ; jmp 0x20000556ac4
0x000002000006cb60 : movzx eax, word ptr [rcx + 0x44] ; ret
0x00000200001622cc : movzx eax, word ptr [rcx + 0xc] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200004cdbda : movzx eax, word ptr [rcx + 2] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x0000020000017062 : movzx eax, word ptr [rcx] ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000174dc5 : movzx eax, word ptr [rdx + 2] ; mov word ptr [rcx + 2], ax ; ret
0x00000200001e5914 : movzx eax, word ptr [rdx + rax*8 + 0xc] ; ret
0x000002000047c0ba : movzx eax, word ptr [rdx] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x000002000013aee0 : movzx eax, word ptr [rip + 0x14a10d] ; ret
0x0000020000056588 : movzx eax, word ptr [rip + 0x300a79] ; dec eax ; ret
0x0000020000029cf0 : movzx eax, word ptr [rip + 0x32d369] ; ret
0x0000020000021cde : movzx eax, word ptr [rip + 0x33537f] ; ret
0x00000200004017a0 : movzx ebx, word ptr [r14] ; call 0x20000029cf7
0x00000200004017a1 : movzx ebx, word ptr [rsi] ; call 0x20000029cf6
0x00000200000dcdf5 : movzx ecx, al ; mov dword ptr [rdx + 0x30], ecx ; ret
0x0000020000163622 : movzx ecx, ax ; call r9
0x00000200006f39cc : movzx ecx, bx ; add rdx, 0x40 ; call rax
0x000002000017bda0 : movzx ecx, byte ptr [rcx + 0x438] ; or eax, ecx ; ret
0x00000200000ba2f4 : movzx ecx, cl ; mov cr8, rcx ; ret
0x0000020000613814 : movzx ecx, cx ; mov al, byte ptr [rax + rcx] ; ret
0x0000020000054a70 : movzx ecx, cx ; movzx eax, ax ; sub eax, ecx ; ret
0x000002000058f668 : movzx ecx, cx ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000006c01d : movzx ecx, cx ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200000f6ae6 : movzx ecx, dl ; call 0x2000001b7f1
0x00000200000e4509 : movzx ecx, dl ; cmovne eax, ecx ; ret
0x00000200001bf9c1 : movzx ecx, dl ; mov dword ptr [rax + 0x30], ecx ; mov al, r8b ; ret
0x0000020000027070 : movzx ecx, dx ; and eax, ecx ; ret
0x00000200000dcdf4 : movzx ecx, r8b ; mov dword ptr [rdx + 0x30], ecx ; ret
0x0000020000613813 : movzx ecx, r9w ; mov al, byte ptr [rax + rcx] ; ret
0x000002000058f667 : movzx ecx, r9w ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000052312f : movzx ecx, word ptr [rbp + 0x28] ; call 0x2000014cc7b
0x0000020000529fd8 : movzx ecx, word ptr [rbx] ; mov word ptr [r15], cx ; jmp 0x20000529fac
0x0000020000017065 : movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200004297c0 : movzx edx, bh ; mov rcx, rsi ; call 0x20000055f69
0x0000020000532cde : movzx edx, byte ptr [rdi] ; call 0x2000040ef65
0x00000200001c5100 : movzx edx, cx ; in al, dx ; ret
0x00000200001c50f6 : movzx edx, cx ; out dx, al ; ret
0x0000020000362ded : movzx edx, dl ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200001f4ade : movzx r8d, cx ; mov rcx, rdi ; call r10
0x00000200001f4bad : movzx r8d, si ; mov rcx, r14 ; call r10
0x000002000002706f : movzx rcx, dx ; and eax, ecx ; ret
0x0000020000039b25 : mul byte ptr [rax + rax] ; add rsp, 0x28 ; ret
0x000002000010e7e2 : mul byte ptr [rax - 0x74b70003] ; ret
0x000002000043c5ae : mul byte ptr [rdx - 0x49f00016] ; ret
0x00000200001056ec : mul byte ptr [rsi + 0x41] ; mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x00000200004b7d7e : mul byte ptr [rsi - 0x7d] ; ret 0xf02
0x000002000066415e : mul dword ptr [rax + rax] ; ret
0x000002000070b9b3 : mul dword ptr [rsi - 0x7d] ; ret
0x00000200001f1237 : mul ecx ; shr edx, 0xd ; mov byte ptr [r10 + 0x39], dl ; ret
0x00000200004b9034 : neg al ; sbb cl, cl ; and dl, cl ; mov al, dl ; ret
0x00000200001f11d4 : neg al ; sbb eax, eax ; neg eax ; inc eax ; ret
0x00000200001dd433 : neg byte ptr [rbp - 0x1d] ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004e034b : neg byte ptr [rip + 0x189b800] ; add al, al ; ret
0x000002000064c9cb : neg dl ; sbb ecx, ecx ; and eax, ecx ; ret
0x00000200000bd55a : neg dword ptr [rdx + 0x11] ; add dh, dh ; ret
0x00000200001f11d8 : neg eax ; inc eax ; ret
0x000002000005e6ea : neg eax ; sbb eax, eax ; and eax, 0xc0000001 ; ret
0x000002000004d3ac : neg eax ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000154672 : neg eax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200001070a5 : neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200003fc518 : neg ecx ; sbb eax, eax ; and eax, 0xc00000bb ; ret
0x00000200004e1107 : neg edx ; push rsi ; ret
0x00000200001eee68 : neg edx ; sbb eax, eax ; add eax, 3 ; ret
0x0000020000378d39 : neg edx ; sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000011e903 : neg edx ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000154671 : neg r8 ; sbb rax, rax ; and rax, rcx ; ret
0x00000200000e4ddf : nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x00000200003ec7af : nop ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200006f66e0 : nop ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200006d0b45 : nop ; add byte ptr [rax], al ; add al, ch ; ret 0xffa4
0x00000200001afdd6 : nop ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003be55a : nop ; add byte ptr [rax], al ; add bl, ch ; fld qword ptr [rcx - 1] ; ret 0x8944
0x00000200000d1718 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000019673b : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001a5042 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000043bb2a : nop ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200006168aa : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x000002000016da17 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000020000180f41 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000040a933 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000658caf : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4450
0x00000200004125ac : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004fd3e5 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200003995c3 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be01], al ; ret
0x00000200001a1ba6 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000040e28b : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x39e8
0x000002000040e121 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xa3e8
0x000002000006931b : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000032065 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000000bc47 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004d4f13 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000002000014fd47 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200003af758 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000571054 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200005953a6 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x4589
0x000002000012b54a : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x0000020000009d54 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200003bedbc : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4108
0x00000200004dcf98 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4110
0x000002000049776c : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8b4a
0x000002000013156b : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000003e5b9 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200003cbe0b : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000010ed85 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000ed98f : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000665afc : nop ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000b6326 : nop ; add byte ptr [rdi], dl ; add byte ptr [rax - 0x75], cl ; ret 0x8148
0x00000200004d8403 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000372abb : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000047a6b2 : nop ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7447
0x00000200004a51cf : nop ; add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x00000200005fd0bf : nop ; add eax, 0x8b4c0000 ; ret
0x00000200006a1058 : nop ; add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x0000020000004c33 : nop ; add qword ptr [rcx], rdx ; ret
0x000002000049298f : nop ; add rdx, 0x28 ; call 0x200000bf038
0x0000020000161422 : nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000046697f : nop ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d3672 : nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000000bbb2 : nop ; add rsp, 0x28 ; ret
0x000002000013cd09 : nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001c74d5 : nop ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003704f2 : nop ; add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x00000200001c70b1 : nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200001c80da : nop ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200001c7655 : nop ; add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001c70db : nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000144684 : nop ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005d370b : nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x00000200001c73f1 : nop ; add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000161179 : nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005d362e : nop ; add rsp, 0x58 ; pop rbp ; pop rbx ; ret
0x000002000063e1db : nop ; add rsp, 0x58 ; ret
0x00000200005d3c39 : nop ; add rsp, 0x60 ; pop rbp ; ret
0x000002000063e157 : nop ; add rsp, 0x68 ; ret
0x0000020000585ce5 : nop ; add rsp, 0x70 ; pop rbp ; ret
0x000002000063e0d3 : nop ; add rsp, 0x78 ; ret
0x0000020000141dcb : nop ; and dword ptr [rcx + 0x4c], 0 ; or dword ptr [rcx + 0x48], 0xffffffff ; ret
0x00000200005438bb : nop ; and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x0000020000567b9f : nop ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200004c84cf : nop ; and qword ptr [rcx + 8], 0 ; ret
0x000002000051365f : nop ; and qword ptr [rcx], 0 ; ret
0x00000200006c732f : nop ; and qword ptr [rip - 0x438778], 0 ; ret
0x000002000011fa9e : nop ; call 0x1ffc311faac
0x00000200005e34eb : nop ; call rax
0x000002000014ee93 : nop ; cmp dword ptr [rcx + 0x10], 0x6d ; je 0x2000014eea6 ; xor eax, eax ; ret
0x0000020000365393 : nop ; cmp dword ptr [rcx + 0x24], 0 ; je 0x200003653a4 ; ret
0x00000200004cbb8f : nop ; cmp dword ptr [rcx], 0 ; sete al ; ret
0x000002000063ad4f : nop ; cmp dword ptr [rip - 0x3a418e], ecx ; jne 0x2000063ad62 ; ret
0x000002000058dd8f : nop ; cmp ecx, edx ; sete al ; ret
0x00000200004b1f8b : nop ; cmp edx, 3 ; je 0x200004b1f9a ; ret
0x000002000012cd0b : nop ; cmp edx, ecx ; ja 0x2000012cd18 ; ret
0x00000200000badcf : nop ; cmp qword ptr [rcx], rcx ; jne 0x200000bade2 ; mov rax, rcx ; ret
0x000002000042ee5f : nop ; cmp r9, 1 ; je 0x2000042ee6e ; ret
0x0000020000442564 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x00000200003f981c : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xebff
0x0000020000424e13 : nop ; dec dword ptr [rcx] ; je 0x20000424e1e ; ret
0x00000200003aa2e7 : nop ; dec ecx ; jne 0x200003aa2f8 ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000139a8f : nop ; dec word ptr [rcx + 0x1e4] ; ret
0x000002000018012d : nop ; inc dword ptr [rbx - 0x6bf0fe03] ; ret
0x000002000015f873 : nop ; inc dword ptr gs:[0x2e40] ; ret
0x00000200003cd77f : nop ; inc dword ptr gs:[0x2e44] ; ret
0x000002000038f8ef : nop ; inc dword ptr gs:[0x2e48] ; ret
0x000002000000ec03 : nop ; inc dword ptr gs:[0x5504] ; ret
0x0000020000046fd7 : nop ; invlpg byte ptr [rcx] ; ret
0x000002000060364c : nop ; ja 0x2000060361f ; dec dword ptr [rbx + rcx*4 + 4] ; ret 0x8d48
0x0000020000653e4c : nop ; jg 0x20000653e1b ; push rsi ; ret 0x7401
0x0000020000122bbe : nop ; jmp 0x200000042d1
0x00000200001edacf : nop ; jmp 0x2000001e379
0x00000200001c8bcd : nop ; jmp 0x2000002014a
0x00000200001f7e0a : nop ; jmp 0x20000034063
0x00000200001f7e23 : nop ; jmp 0x2000003409c
0x00000200001f7ec8 : nop ; jmp 0x20000034131
0x00000200001f7f55 : nop ; jmp 0x2000003420a
0x00000200001f7fb9 : nop ; jmp 0x2000003423b
0x00000200001f7fcf : nop ; jmp 0x2000003424e
0x0000020000142559 : nop ; jmp 0x2000003e82a
0x00000200001daca5 : nop ; jmp 0x2000004721c
0x00000200001dace5 : nop ; jmp 0x20000047269
0x000002000003a371 : nop ; jmp 0x20000049835
0x00000200001dca08 : nop ; jmp 0x20000058fec
0x000002000010bdd9 : nop ; jmp 0x2000005a80d
0x0000020000109df9 : nop ; jmp 0x2000005abf3
0x00000200001d8821 : nop ; jmp 0x20000070378
0x00000200001d37a2 : nop ; jmp 0x200000a1f12
0x00000200001ee9c2 : nop ; jmp 0x200000aac9a
0x00000200001d446a : nop ; jmp 0x200000af02e
0x00000200001ff19b : nop ; jmp 0x200000bb3ee
0x00000200001e275e : nop ; jmp 0x200000c1cec
0x00000200001e8194 : nop ; jmp 0x200000c4442
0x00000200001ccfca : nop ; jmp 0x200000c920b
0x00000200001e9598 : nop ; jmp 0x200000d5871
0x00000200001e96ad : nop ; jmp 0x200000d5925
0x00000200001fdaa2 : nop ; jmp 0x200000eb051
0x00000200001e568d : nop ; jmp 0x2000010e873
0x00000200001e5649 : nop ; jmp 0x2000011021a
0x000002000010ce0e : nop ; jmp 0x2000012639c
0x00000200001da275 : nop ; jmp 0x200001269b8
0x00000200001ef8f3 : nop ; jmp 0x2000012bb7e
0x00000200001fae9c : nop ; jmp 0x2000012f64e
0x0000020000149c31 : nop ; jmp 0x2000013613f
0x00000200001fa944 : nop ; jmp 0x20000139b58
0x000002000013d225 : nop ; jmp 0x2000013d281
0x000002000013d1f7 : nop ; jmp 0x2000013d2af
0x00000200001f0bd4 : nop ; jmp 0x200001430b4
0x00000200001ef340 : nop ; jmp 0x20000143168
0x0000020000026198 : nop ; jmp 0x200001defef
0x0000020000370566 : nop ; jmp 0x2000035d06d
0x0000020000371bc8 : nop ; jmp 0x20000360020
0x0000020000371ca0 : nop ; jmp 0x20000360101
0x0000020000371cfd : nop ; jmp 0x20000360875
0x000002000060dc74 : nop ; jmp 0x20000375897
0x0000020000625142 : nop ; jmp 0x20000378970
0x00000200005dd7b3 : nop ; jmp 0x20000389a47
0x000002000062ad48 : nop ; jmp 0x20000390266
0x00000200005fc3e4 : nop ; jmp 0x20000391ffb
0x000002000062be7c : nop ; jmp 0x200003a408b
0x00000200005f9b24 : nop ; jmp 0x200003af9c0
0x0000020000610b13 : nop ; jmp 0x200003c16cc
0x00000200006110a1 : nop ; jmp 0x200003c1aa5
0x00000200006115ea : nop ; jmp 0x200003c1b7b
0x00000200004a03cf : nop ; jmp 0x200003d0d5e
0x000002000054b0ac : nop ; jmp 0x200003db08f
0x000002000062d780 : nop ; jmp 0x200003dedd6
0x00000200005fc46c : nop ; jmp 0x200003e03bb
0x00000200005fc841 : nop ; jmp 0x200003f042b
0x00000200003bc376 : nop ; jmp 0x200003fcef5
0x000002000062738d : nop ; jmp 0x20000400084
0x0000020000386a6b : nop ; jmp 0x200004005d9
0x0000020000386a38 : nop ; jmp 0x2000040068f
0x00000200005fbfd0 : nop ; jmp 0x20000403693
0x00000200004a9320 : nop ; jmp 0x20000405d7d
0x00000200005fbff8 : nop ; jmp 0x2000040689b
0x0000020000622905 : nop ; jmp 0x2000040c885
0x00000200003877e0 : nop ; jmp 0x200004106c2
0x000002000060b1db : nop ; jmp 0x20000412d6e
0x000002000060b4ba : nop ; jmp 0x20000418694
0x0000020000626e38 : nop ; jmp 0x2000041a39f
0x000002000049b7b4 : nop ; jmp 0x2000041f12b
0x00000200005fc56d : nop ; jmp 0x20000420825
0x00000200004a0c97 : nop ; jmp 0x20000421478
0x0000020000610708 : nop ; jmp 0x200004225e9
0x000002000060fbf4 : nop ; jmp 0x20000423546
0x000002000060f194 : nop ; jmp 0x20000423891
0x000002000061232c : nop ; jmp 0x200004239a7
0x0000020000608408 : nop ; jmp 0x2000042461e
0x00000200006083d1 : nop ; jmp 0x20000424659
0x000002000060c1d7 : nop ; jmp 0x20000428498
0x000002000060c796 : nop ; jmp 0x200004287b1
0x000002000060e76a : nop ; jmp 0x2000042aa69
0x00000200005eb553 : nop ; jmp 0x2000044776f
0x00000200005ebb80 : nop ; jmp 0x20000447d89
0x00000200005ebb99 : nop ; jmp 0x20000447e28
0x00000200005fa2a4 : nop ; jmp 0x2000045ce1f
0x00000200005fa2bb : nop ; jmp 0x2000045ce6c
0x00000200004a95bf : nop ; jmp 0x2000046cb1c
0x00000200006019cb : nop ; jmp 0x2000046dcb5
0x0000020000627d9b : nop ; jmp 0x2000046e4b2
0x00000200005f8a03 : nop ; jmp 0x2000047f541
0x00000200005f8a36 : nop ; jmp 0x2000047f57b
0x0000020000600759 : nop ; jmp 0x2000049debb
0x0000020000605a0b : nop ; jmp 0x200004b79e5
0x0000020000626845 : nop ; jmp 0x200004bbaab
0x0000020000605b58 : nop ; jmp 0x200004cf47f
0x0000020000497501 : nop ; jmp 0x200004cf9dd
0x0000020000497553 : nop ; jmp 0x200004cfbde
0x00000200005176d3 : nop ; jmp 0x200004d1967
0x0000020000605ce9 : nop ; jmp 0x200004d2052
0x0000020000604dee : nop ; jmp 0x200004dbf28
0x0000020000604d59 : nop ; jmp 0x200004dc000
0x00000200005178f0 : nop ; jmp 0x200004dd1c7
0x000002000062a598 : nop ; jmp 0x200004e1108
0x00000200005e7aae : nop ; jmp 0x200004e3d03
0x000002000062a49e : nop ; jmp 0x200004ebd30
0x00000200005f8ae8 : nop ; jmp 0x200004fd0a9
0x000002000062a698 : nop ; jmp 0x2000050a049
0x00000200005f9f86 : nop ; jmp 0x2000050c5ec
0x0000020000605bec : nop ; jmp 0x200005174dc
0x0000020000517950 : nop ; jmp 0x200005179ea
0x0000020000605c7f : nop ; jmp 0x20000517fe5
0x0000020000638730 : nop ; jmp 0x20000634a06
0x0000020000669710 : nop ; jmp 0x20000665ff1
0x000002000070c800 : nop ; jmp 0x200006f360a
0x000002000070f6d1 : nop ; jmp 0x200006fff32
0x0000020000241744 : nop ; jmp qword ptr [rbx]
0x00000200001b967f : nop ; jmp r9
0x00000200001c56af : nop ; jmp rdx
0x0000020000129473 : nop ; lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200000dfb0b : nop ; lea rax, qword ptr [rcx + 0x438] ; ret
0x000002000004e93f : nop ; lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c793b : nop ; lea rax, qword ptr [rcx + 2] ; ret
0x000002000013b0ff : nop ; lea rax, qword ptr [rip + 0x1640f1] ; ret
0x00000200004ff6cf : nop ; lea rax, qword ptr [rip + 0x184bf1] ; ret
0x000002000045b49f : nop ; lea rax, qword ptr [rip - 0x1e8e7] ; ret
0x0000020000607c8f : nop ; lea rcx, qword ptr [rsp + 0x5c] ; call 0x200004e3efc
0x000002000001bd7f : nop ; lock dec dword ptr [r8] ; ret
0x0000020000177493 : nop ; lock dec dword ptr [rcx] ; ret
0x0000020000150f8f : nop ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd19f : nop ; lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03bf : nop ; lock inc dword ptr [rcx + 0x38] ; ret
0x00000200003981ef : nop ; lock inc dword ptr [rcx + 0x4c0] ; ret
0x0000020000192193 : nop ; lock inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x000002000019219f : nop ; lock inc dword ptr [rcx + 4] ; ret
0x0000020000119613 : nop ; lock or dword ptr [rip + 0x15a56d], ecx ; ret
0x00000200001bec93 : nop ; lock or dword ptr [rip + 0x198405], ecx ; ret
0x00000200000a9d67 : nop ; mov al, 1 ; ret
0x0000020000197537 : nop ; mov al, byte ptr [rcx + 0x447] ; ret
0x00000200005438af : nop ; mov al, byte ptr [rcx - 0x18] ; shr al, 3 ; and al, 1 ; ret
0x00000200004266cf : nop ; mov al, byte ptr [rcx - 0x18] ; shr al, 4 ; and al, 1 ; ret
0x0000020000141db3 : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rip + 0x156484], al ; ret
0x00000200001c50fb : nop ; mov al, byte ptr [rcx] ; ret
0x0000020000168fcf : nop ; mov al, byte ptr [rip + 0x1182fe] ; ret
0x000002000014a787 : nop ; mov al, byte ptr [rip + 0x20ca3a] ; ret
0x00000200004ba6bf : nop ; mov al, byte ptr [rip - 0x1d44c6] ; ret
0x000002000035fe93 : nop ; mov al, byte ptr [rip - 0xdaea8] ; ret
0x0000020000115ef3 : nop ; mov al, cl ; ret
0x000002000019752f : nop ; mov byte ptr [rcx + 0x447], dl ; ret
0x0000020000129f9f : nop ; mov byte ptr [rcx + 0x88], 1 ; ret
0x0000020000147c7b : nop ; mov byte ptr [rcx + 1], dl ; ret
0x00000200005bcd23 : nop ; mov byte ptr [rcx], 0 ; xor eax, eax ; ret
0x00000200005bde8f : nop ; mov byte ptr [rcx], 1 ; xor eax, eax ; ret
0x000002000013c88f : nop ; mov byte ptr [rip + 0x21a893], 1 ; ret
0x00000200006c66d7 : nop ; mov byte ptr [rip - 0x36f5e8], cl ; ret
0x00000200000dbabf : nop ; mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000014541f : nop ; mov dword ptr [rip + 0x12dbea], ecx ; ret
0x000002000057b06b : nop ; mov eax, 0x100 ; ret
0x000002000052aea3 : nop ; mov eax, 0x18 ; ret
0x000002000002931f : nop ; mov eax, 0x50 ; ret
0x000002000065a6ff : nop ; mov eax, 0xc0000001 ; ret
0x0000020000197a0f : nop ; mov eax, 0xc0000002 ; ret
0x0000020000614e0f : nop ; mov eax, 0xc000000d ; jmp 0x20000411041
0x00000200001c0d3b : nop ; mov eax, 0xc000000e ; ret
0x0000020000054a7b : nop ; mov eax, 0xc00000bb ; ret
0x0000020000545abf : nop ; mov eax, 0xc0000148 ; ret
0x000002000058d627 : nop ; mov eax, 0xc000025f ; ret
0x000002000003fe5b : nop ; mov eax, 0xffff ; ret
0x0000020000050f4f : nop ; mov eax, 1 ; ret
0x000002000000745f : nop ; mov eax, 1 ; xchg qword ptr [rcx], rax ; ret
0x00000200005437df : nop ; mov eax, 2 ; ret
0x0000020000050f43 : nop ; mov eax, 5 ; ret
0x000002000035fece : nop ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x2000035fed6 ; ret
0x000002000019753f : nop ; mov eax, dword ptr [rcx + 0x1e0] ; ret
0x00000200000e389b : nop ; mov eax, dword ptr [rcx + 0x24] ; ret
0x00000200000d8527 : nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000f82cf : nop ; mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000f82e0 ; ret
0x0000020000054cb7 : nop ; mov eax, dword ptr [rcx + 0x42c] ; and al, 1 ; ret
0x000002000058590b : nop ; mov eax, dword ptr [rcx + 0x450] ; ret
0x00000200001bfb6b : nop ; mov eax, dword ptr [rcx + 0x4c] ; ret
0x000002000003b44f : nop ; mov eax, dword ptr [rcx + 0x50] ; shr eax, 0x18 ; and al, 1 ; ret
0x00000200004a0cbf : nop ; mov eax, dword ptr [rcx + 0x58c] ; ret
0x0000020000039e73 : nop ; mov eax, dword ptr [rcx + 0x74] ; shr eax, 0xc ; and al, 1 ; ret
0x00000200003dafdf : nop ; mov eax, dword ptr [rcx + 0xc0] ; ret
0x000002000039387f : nop ; mov eax, dword ptr [rcx + 0xc4] ; ret
0x00000200004e8223 : nop ; mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x00000200000b90cf : nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964f : nop ; mov eax, dword ptr [rcx] ; ret
0x00000200004eeb0b : nop ; mov eax, dword ptr [rdx] ; or dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000016937f : nop ; mov eax, dword ptr [rip + 0x117f4a] ; ret
0x0000020000149ed7 : nop ; mov eax, dword ptr [rip + 0x20d30e] ; ret
0x0000020000016b4f : nop ; mov eax, dword ptr [rip + 0x280326] ; ret
0x00000200000a92cf : nop ; mov eax, dword ptr [rip + 0x2add3e] ; ret
0x000002000001c38f : nop ; mov eax, dword ptr [rip + 0x33afb6] ; ret
0x00000200001b922f : nop ; mov eax, dword ptr [rip + 0x4d5e16] ; ret
0x000002000005643f : nop ; mov eax, dword ptr [rip + 0x62ce4e] ; ret
0x000002000058d61f : nop ; mov eax, dword ptr [rip - 0x2a5446] ; ret
0x000002000063aeff : nop ; mov eax, dword ptr [rip - 0x3a433e] ; ret
0x0000020000161dcb : nop ; mov eax, ecx ; ret
0x00000200003cda0b : nop ; mov eax, edx ; lock xadd qword ptr [rcx - 0x10], rax ; ret
0x00000200000dd6bf : nop ; mov ecx, 0xd000dc3 ; ret 0xd
0x00000200001f025f : nop ; mov ecx, dword ptr [rip + 0x99ae2] ; call rax
0x00000200001590eb : nop ; mov edx, dword ptr [rdx + 0x14] ; mov eax, dword ptr [rcx + 0x14] ; sub eax, edx ; ret
0x0000020000587267 : nop ; mov edx, dword ptr [rdx] ; mov eax, dword ptr [rcx] ; sub eax, edx ; ret
0x00000200001b18e3 : nop ; mov edx, edi ; mov rcx, r12 ; call 0x200001adb8c
0x000002000041b433 : nop ; mov qword ptr [rcx + 0x3c8], rdx ; ret
0x0000020000107d23 : nop ; mov qword ptr [rcx + 0x70], rdx ; ret
0x000002000002582f : nop ; mov qword ptr [rcx], r8 ; mov qword ptr [rcx + 8], rdx ; ret
0x0000020000153baf : nop ; mov qword ptr [rip + 0x12d6d1], rcx ; ret
0x00000200001b175b : nop ; mov qword ptr [rsp + 0x58], rax ; call 0x200001ada48
0x000002000007c1a9 : nop ; mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200000af543 : nop ; mov rax, cr3 ; mov cr3, rax ; ret
0x000002000015253f : nop ; mov rax, cr8 ; ret
0x0000020000055ec3 : nop ; mov rax, qword ptr [rcx + 0x10] ; ret
0x0000020000574543 : nop ; mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000047acb : nop ; mov rax, qword ptr [rcx + 0x220] ; ret
0x000002000003570f : nop ; mov rax, qword ptr [rcx + 0x2d0] ; ret
0x000002000006c0df : nop ; mov rax, qword ptr [rcx + 0x2e0] ; ret
0x000002000017a64f : nop ; mov rax, qword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200000df857 : nop ; mov rax, qword ptr [rcx + 0x398] ; ret
0x00000200000549d7 : nop ; mov rax, qword ptr [rcx + 0x3a0] ; ret
0x00000200000517a7 : nop ; mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000051f8f : nop ; mov rax, qword ptr [rcx + 0x3c8] ; ret
0x000002000011e91f : nop ; mov rax, qword ptr [rcx + 0x3e8] ; ret
0x000002000003fe6f : nop ; mov rax, qword ptr [rcx + 0x410] ; ret
0x00000200000e1397 : nop ; mov rax, qword ptr [rcx + 0x418] ; ret
0x000002000043be4f : nop ; mov rax, qword ptr [rcx + 0x448] ; ret
0x000002000003f923 : nop ; mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000060c77 : nop ; mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000019a5ab : nop ; mov rax, qword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x0000020000060aa7 : nop ; mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x0000020000055ea3 : nop ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000058d1db : nop ; mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x0000020000144b7f : nop ; mov rax, qword ptr [rip + 0x212b21] ; ret
0x0000020000030e5f : nop ; mov rax, qword ptr [rip + 0x2421c9] ; ret
0x000002000017bdaf : nop ; mov rax, qword ptr [rsp] ; ret
0x0000020000710bcb : nop ; mov rcx, r10 ; call r11
0x000002000049cc7c : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; sar bh, 0xe9 ; ret 0xfffd
0x00000200000dfac3 : nop ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200000ba34f : nop ; movzx eax, cl ; mov cr8, rax ; ret
0x000002000013aedf : nop ; movzx eax, word ptr [rip + 0x14a10d] ; ret
0x0000020000029cef : nop ; movzx eax, word ptr [rip + 0x32d369] ; ret
0x00000200001c50ff : nop ; movzx edx, cx ; in al, dx ; ret
0x00000200004a51ce : nop ; nop ; add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x0000020000004c32 : nop ; nop ; add qword ptr [rcx], rdx ; ret
0x00000200001c7d99 : nop ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005438ba : nop ; nop ; and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x0000020000567b9e : nop ; nop ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200004c84ce : nop ; nop ; and qword ptr [rcx + 8], 0 ; ret
0x000002000051365e : nop ; nop ; and qword ptr [rcx], 0 ; ret
0x00000200005e34ea : nop ; nop ; call rax
0x0000020000365392 : nop ; nop ; cmp dword ptr [rcx + 0x24], 0 ; je 0x200003653a5 ; ret
0x00000200004cbb8e : nop ; nop ; cmp dword ptr [rcx], 0 ; sete al ; ret
0x000002000058dd8e : nop ; nop ; cmp ecx, edx ; sete al ; ret
0x00000200004b1f8a : nop ; nop ; cmp edx, 3 ; je 0x200004b1f9b ; ret
0x000002000012cd0a : nop ; nop ; cmp edx, ecx ; ja 0x2000012cd19 ; ret
0x000002000042ee5e : nop ; nop ; cmp r9, 1 ; je 0x2000042ee6f ; ret
0x0000020000424e12 : nop ; nop ; dec dword ptr [rcx] ; je 0x20000424e1f ; ret
0x00000200003aa2e6 : nop ; nop ; dec ecx ; jne 0x200003aa2f9 ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000139a8e : nop ; nop ; dec word ptr [rcx + 0x1e4] ; ret
0x0000020000046fd6 : nop ; nop ; invlpg byte ptr [rcx] ; ret
0x000002000060c1d6 : nop ; nop ; jmp 0x20000428499
0x00000200001b967e : nop ; nop ; jmp r9
0x00000200001c56ae : nop ; nop ; jmp rdx
0x0000020000129472 : nop ; nop ; lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200000dfb0a : nop ; nop ; lea rax, qword ptr [rcx + 0x438] ; ret
0x000002000004e93e : nop ; nop ; lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c793a : nop ; nop ; lea rax, qword ptr [rcx + 2] ; ret
0x000002000013b0fe : nop ; nop ; lea rax, qword ptr [rip + 0x1640f1] ; ret
0x00000200004ff6ce : nop ; nop ; lea rax, qword ptr [rip + 0x184bf1] ; ret
0x000002000045b49e : nop ; nop ; lea rax, qword ptr [rip - 0x1e8e7] ; ret
0x0000020000607c8e : nop ; nop ; lea rcx, qword ptr [rsp + 0x5c] ; call 0x200004e3efd
0x0000020000150f8e : nop ; nop ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd19e : nop ; nop ; lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03be : nop ; nop ; lock inc dword ptr [rcx + 0x38] ; ret
0x000002000019219e : nop ; nop ; lock inc dword ptr [rcx + 4] ; ret
0x0000020000119612 : nop ; nop ; lock or dword ptr [rip + 0x15a56d], ecx ; ret
0x00000200001bec92 : nop ; nop ; lock or dword ptr [rip + 0x198405], ecx ; ret
0x000002000036b3fe : nop ; nop ; mov al, 1 ; ret
0x0000020000168fce : nop ; nop ; mov al, byte ptr [rip + 0x1182fe] ; ret
0x000002000014a786 : nop ; nop ; mov al, byte ptr [rip + 0x20ca3a] ; ret
0x00000200004ba6be : nop ; nop ; mov al, byte ptr [rip - 0x1d44c6] ; ret
0x000002000035fe92 : nop ; nop ; mov al, byte ptr [rip - 0xdaea8] ; ret
0x0000020000115ef2 : nop ; nop ; mov al, cl ; ret
0x000002000019752e : nop ; nop ; mov byte ptr [rcx + 0x447], dl ; ret
0x0000020000129f9e : nop ; nop ; mov byte ptr [rcx + 0x88], 1 ; ret
0x00000200005bcd22 : nop ; nop ; mov byte ptr [rcx], 0 ; xor eax, eax ; ret
0x00000200005bde8e : nop ; nop ; mov byte ptr [rcx], 1 ; xor eax, eax ; ret
0x000002000013c88e : nop ; nop ; mov byte ptr [rip + 0x21a893], 1 ; ret
0x00000200006c66d6 : nop ; nop ; mov byte ptr [rip - 0x36f5e8], cl ; ret
0x00000200000dbabe : nop ; nop ; mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000014541e : nop ; nop ; mov dword ptr [rip + 0x12dbea], ecx ; ret
0x000002000057b06a : nop ; nop ; mov eax, 0x100 ; ret
0x000002000052aea2 : nop ; nop ; mov eax, 0x18 ; ret
0x000002000002931e : nop ; nop ; mov eax, 0x50 ; ret
0x000002000065a6fe : nop ; nop ; mov eax, 0xc0000001 ; ret
0x0000020000197a0e : nop ; nop ; mov eax, 0xc0000002 ; ret
0x0000020000614e0e : nop ; nop ; mov eax, 0xc000000d ; jmp 0x20000411042
0x0000020000054a7a : nop ; nop ; mov eax, 0xc00000bb ; ret
0x0000020000545abe : nop ; nop ; mov eax, 0xc0000148 ; ret
0x000002000003fe5a : nop ; nop ; mov eax, 0xffff ; ret
0x0000020000050f4e : nop ; nop ; mov eax, 1 ; ret
0x00000200005437de : nop ; nop ; mov eax, 2 ; ret
0x0000020000050f42 : nop ; nop ; mov eax, 5 ; ret
0x00000200000e389a : nop ; nop ; mov eax, dword ptr [rcx + 0x24] ; ret
0x00000200000d8526 : nop ; nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000f82ce : nop ; nop ; mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000f82e1 ; ret
0x000002000058590a : nop ; nop ; mov eax, dword ptr [rcx + 0x450] ; ret
0x00000200001bfb6a : nop ; nop ; mov eax, dword ptr [rcx + 0x4c] ; ret
0x00000200003dafde : nop ; nop ; mov eax, dword ptr [rcx + 0xc0] ; ret
0x00000200000b90ce : nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964e : nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x00000200004eeb0a : nop ; nop ; mov eax, dword ptr [rdx] ; or dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000016937e : nop ; nop ; mov eax, dword ptr [rip + 0x117f4a] ; ret
0x0000020000149ed6 : nop ; nop ; mov eax, dword ptr [rip + 0x20d30e] ; ret
0x0000020000016b4e : nop ; nop ; mov eax, dword ptr [rip + 0x280326] ; ret
0x00000200000a92ce : nop ; nop ; mov eax, dword ptr [rip + 0x2add3e] ; ret
0x000002000001c38e : nop ; nop ; mov eax, dword ptr [rip + 0x33afb6] ; ret
0x00000200001b922e : nop ; nop ; mov eax, dword ptr [rip + 0x4d5e16] ; ret
0x000002000005643e : nop ; nop ; mov eax, dword ptr [rip + 0x62ce4e] ; ret
0x000002000058d61e : nop ; nop ; mov eax, dword ptr [rip - 0x2a5446] ; ret
0x000002000063aefe : nop ; nop ; mov eax, dword ptr [rip - 0x3a433e] ; ret
0x0000020000161dca : nop ; nop ; mov eax, ecx ; ret
0x00000200001f025e : nop ; nop ; mov ecx, dword ptr [rip + 0x99ae2] ; call rax
0x000002000041b432 : nop ; nop ; mov qword ptr [rcx + 0x3c8], rdx ; ret
0x0000020000107d22 : nop ; nop ; mov qword ptr [rcx + 0x70], rdx ; ret
0x000002000002582e : nop ; nop ; mov qword ptr [rcx], r8 ; mov qword ptr [rcx + 8], rdx ; ret
0x0000020000153bae : nop ; nop ; mov qword ptr [rip + 0x12d6d1], rcx ; ret
0x00000200000af542 : nop ; nop ; mov rax, cr3 ; mov cr3, rax ; ret
0x000002000015253e : nop ; nop ; mov rax, cr8 ; ret
0x0000020000055ec2 : nop ; nop ; mov rax, qword ptr [rcx + 0x10] ; ret
0x0000020000574542 : nop ; nop ; mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000047aca : nop ; nop ; mov rax, qword ptr [rcx + 0x220] ; ret
0x000002000003570e : nop ; nop ; mov rax, qword ptr [rcx + 0x2d0] ; ret
0x000002000006c0de : nop ; nop ; mov rax, qword ptr [rcx + 0x2e0] ; ret
0x00000200000df856 : nop ; nop ; mov rax, qword ptr [rcx + 0x398] ; ret
0x00000200000549d6 : nop ; nop ; mov rax, qword ptr [rcx + 0x3a0] ; ret
0x00000200000517a6 : nop ; nop ; mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000051f8e : nop ; nop ; mov rax, qword ptr [rcx + 0x3c8] ; ret
0x000002000011e91e : nop ; nop ; mov rax, qword ptr [rcx + 0x3e8] ; ret
0x000002000003fe6e : nop ; nop ; mov rax, qword ptr [rcx + 0x410] ; ret
0x00000200000e1396 : nop ; nop ; mov rax, qword ptr [rcx + 0x418] ; ret
0x000002000043be4e : nop ; nop ; mov rax, qword ptr [rcx + 0x448] ; ret
0x000002000003f922 : nop ; nop ; mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000060c76 : nop ; nop ; mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x0000020000060aa6 : nop ; nop ; mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x0000020000055ea2 : nop ; nop ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000058d1da : nop ; nop ; mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x0000020000144b7e : nop ; nop ; mov rax, qword ptr [rip + 0x212b21] ; ret
0x0000020000030e5e : nop ; nop ; mov rax, qword ptr [rip + 0x2421c9] ; ret
0x000002000017bdae : nop ; nop ; mov rax, qword ptr [rsp] ; ret
0x0000020000710bca : nop ; nop ; mov rcx, r10 ; call r11
0x00000200000dfac2 : nop ; nop ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200000ba34e : nop ; nop ; movzx eax, cl ; mov cr8, rax ; ret
0x000002000013aede : nop ; nop ; movzx eax, word ptr [rip + 0x14a10d] ; ret
0x0000020000029cee : nop ; nop ; movzx eax, word ptr [rip + 0x32d369] ; ret
0x00000200004a51cd : nop ; nop ; nop ; add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x0000020000004c31 : nop ; nop ; nop ; add qword ptr [rcx], rdx ; ret
0x00000200005438b9 : nop ; nop ; nop ; and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x0000020000567b9d : nop ; nop ; nop ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200004c84cd : nop ; nop ; nop ; and qword ptr [rcx + 8], 0 ; ret
0x000002000051365d : nop ; nop ; nop ; and qword ptr [rcx], 0 ; ret
0x00000200005e34e9 : nop ; nop ; nop ; call rax
0x00000200004cbb8d : nop ; nop ; nop ; cmp dword ptr [rcx], 0 ; sete al ; ret
0x000002000058dd8d : nop ; nop ; nop ; cmp ecx, edx ; sete al ; ret
0x000002000012cd09 : nop ; nop ; nop ; cmp edx, ecx ; ja 0x2000012cd1a ; ret
0x000002000042ee5d : nop ; nop ; nop ; cmp r9, 1 ; je 0x2000042ee70 ; ret
0x0000020000424e11 : nop ; nop ; nop ; dec dword ptr [rcx] ; je 0x20000424e20 ; ret
0x00000200001b967d : nop ; nop ; nop ; jmp r9
0x00000200001c56ad : nop ; nop ; nop ; jmp rdx
0x000002000004e93d : nop ; nop ; nop ; lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c7939 : nop ; nop ; nop ; lea rax, qword ptr [rcx + 2] ; ret
0x0000020000150f8d : nop ; nop ; nop ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd19d : nop ; nop ; nop ; lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03bd : nop ; nop ; nop ; lock inc dword ptr [rcx + 0x38] ; ret
0x000002000019219d : nop ; nop ; nop ; lock inc dword ptr [rcx + 4] ; ret
0x000002000036b3fd : nop ; nop ; nop ; mov al, 1 ; ret
0x0000020000168fcd : nop ; nop ; nop ; mov al, byte ptr [rip + 0x1182fe] ; ret
0x000002000014a785 : nop ; nop ; nop ; mov al, byte ptr [rip + 0x20ca3a] ; ret
0x00000200004ba6bd : nop ; nop ; nop ; mov al, byte ptr [rip - 0x1d44c6] ; ret
0x000002000035fe91 : nop ; nop ; nop ; mov al, byte ptr [rip - 0xdaea8] ; ret
0x0000020000115ef1 : nop ; nop ; nop ; mov al, cl ; ret
0x000002000019752d : nop ; nop ; nop ; mov byte ptr [rcx + 0x447], dl ; ret
0x00000200005bcd21 : nop ; nop ; nop ; mov byte ptr [rcx], 0 ; xor eax, eax ; ret
0x00000200005bde8d : nop ; nop ; nop ; mov byte ptr [rcx], 1 ; xor eax, eax ; ret
0x00000200006c66d5 : nop ; nop ; nop ; mov byte ptr [rip - 0x36f5e8], cl ; ret
0x000002000014541d : nop ; nop ; nop ; mov dword ptr [rip + 0x12dbea], ecx ; ret
0x000002000057b069 : nop ; nop ; nop ; mov eax, 0x100 ; ret
0x000002000052aea1 : nop ; nop ; nop ; mov eax, 0x18 ; ret
0x000002000002931d : nop ; nop ; nop ; mov eax, 0x50 ; ret
0x000002000065a6fd : nop ; nop ; nop ; mov eax, 0xc0000001 ; ret
0x0000020000197a0d : nop ; nop ; nop ; mov eax, 0xc0000002 ; ret
0x0000020000054a79 : nop ; nop ; nop ; mov eax, 0xc00000bb ; ret
0x000002000003fe59 : nop ; nop ; nop ; mov eax, 0xffff ; ret
0x0000020000050f4d : nop ; nop ; nop ; mov eax, 1 ; ret
0x00000200005437dd : nop ; nop ; nop ; mov eax, 2 ; ret
0x0000020000050f41 : nop ; nop ; nop ; mov eax, 5 ; ret
0x00000200000e3899 : nop ; nop ; nop ; mov eax, dword ptr [rcx + 0x24] ; ret
0x00000200000d8525 : nop ; nop ; nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000b90cd : nop ; nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964d : nop ; nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x00000200004eeb09 : nop ; nop ; nop ; mov eax, dword ptr [rdx] ; or dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000016937d : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x117f4a] ; ret
0x0000020000149ed5 : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x20d30e] ; ret
0x0000020000016b4d : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x280326] ; ret
0x00000200000a92cd : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x2add3e] ; ret
0x000002000001c38d : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x33afb6] ; ret
0x00000200001b922d : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x4d5e16] ; ret
0x000002000005643d : nop ; nop ; nop ; mov eax, dword ptr [rip + 0x62ce4e] ; ret
0x000002000058d61d : nop ; nop ; nop ; mov eax, dword ptr [rip - 0x2a5446] ; ret
0x000002000063aefd : nop ; nop ; nop ; mov eax, dword ptr [rip - 0x3a433e] ; ret
0x0000020000161dc9 : nop ; nop ; nop ; mov eax, ecx ; ret
0x00000200001f025d : nop ; nop ; nop ; mov ecx, dword ptr [rip + 0x99ae2] ; call rax
0x0000020000107d21 : nop ; nop ; nop ; mov qword ptr [rcx + 0x70], rdx ; ret
0x0000020000055ec1 : nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x10] ; ret
0x0000020000574541 : nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000055ea1 : nop ; nop ; nop ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000017bdad : nop ; nop ; nop ; mov rax, qword ptr [rsp] ; ret
0x0000020000710bc9 : nop ; nop ; nop ; mov rcx, r10 ; call r11
0x0000020000004c30 : nop ; nop ; nop ; nop ; add qword ptr [rcx], rdx ; ret
0x0000020000567b9c : nop ; nop ; nop ; nop ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200004c84cc : nop ; nop ; nop ; nop ; and qword ptr [rcx + 8], 0 ; ret
0x000002000051365c : nop ; nop ; nop ; nop ; and qword ptr [rcx], 0 ; ret
0x000002000058dd8c : nop ; nop ; nop ; nop ; cmp ecx, edx ; sete al ; ret
0x000002000012cd08 : nop ; nop ; nop ; nop ; cmp edx, ecx ; ja 0x2000012cd1b ; ret
0x0000020000424e10 : nop ; nop ; nop ; nop ; dec dword ptr [rcx] ; je 0x20000424e21 ; ret
0x00000200001b967c : nop ; nop ; nop ; nop ; jmp r9
0x00000200001c56ac : nop ; nop ; nop ; nop ; jmp rdx
0x000002000004e93c : nop ; nop ; nop ; nop ; lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c7938 : nop ; nop ; nop ; nop ; lea rax, qword ptr [rcx + 2] ; ret
0x0000020000150f8c : nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd19c : nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03bc : nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x38] ; ret
0x000002000036b3fc : nop ; nop ; nop ; nop ; mov al, 1 ; ret
0x00000200005bde8c : nop ; nop ; nop ; nop ; mov byte ptr [rcx], 1 ; xor eax, eax ; ret
0x000002000052aea0 : nop ; nop ; nop ; nop ; mov eax, 0x18 ; ret
0x000002000002931c : nop ; nop ; nop ; nop ; mov eax, 0x50 ; ret
0x000002000065a6fc : nop ; nop ; nop ; nop ; mov eax, 0xc0000001 ; ret
0x0000020000197a0c : nop ; nop ; nop ; nop ; mov eax, 0xc0000002 ; ret
0x0000020000545aac : nop ; nop ; nop ; nop ; mov eax, 0xc00000bb ; ret
0x000002000003fe58 : nop ; nop ; nop ; nop ; mov eax, 0xffff ; ret
0x0000020000050f4c : nop ; nop ; nop ; nop ; mov eax, 1 ; ret
0x0000020000050f40 : nop ; nop ; nop ; nop ; mov eax, 5 ; ret
0x00000200000d8524 : nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000b90cc : nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964c : nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x0000020000055ec0 : nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x10] ; ret
0x0000020000574540 : nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000055ea0 : nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000017bdac : nop ; nop ; nop ; nop ; mov rax, qword ptr [rsp] ; ret
0x0000020000004c2f : nop ; nop ; nop ; nop ; nop ; add qword ptr [rcx], rdx ; ret
0x000002000051365b : nop ; nop ; nop ; nop ; nop ; and qword ptr [rcx], 0 ; ret
0x0000020000424e0f : nop ; nop ; nop ; nop ; nop ; dec dword ptr [rcx] ; je 0x20000424e22 ; ret
0x00000200001b967b : nop ; nop ; nop ; nop ; nop ; jmp r9
0x00000200001c56ab : nop ; nop ; nop ; nop ; nop ; jmp rdx
0x000002000004e93b : nop ; nop ; nop ; nop ; nop ; lea rax, qword ptr [rcx + 1] ; ret
0x00000200003c7937 : nop ; nop ; nop ; nop ; nop ; lea rax, qword ptr [rcx + 2] ; ret
0x0000020000150f8b : nop ; nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200004cd19b : nop ; nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x18] ; ret
0x00000200000c03bb : nop ; nop ; nop ; nop ; nop ; lock inc dword ptr [rcx + 0x38] ; ret
0x000002000036b3fb : nop ; nop ; nop ; nop ; nop ; mov al, 1 ; ret
0x00000200000d8523 : nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000b984b : nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964b : nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x0000020000055ebf : nop ; nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x10] ; ret
0x000002000057453f : nop ; nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000055e9f : nop ; nop ; nop ; nop ; nop ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000017bdab : nop ; nop ; nop ; nop ; nop ; mov rax, qword ptr [rsp] ; ret
0x0000020000004c2e : nop ; nop ; nop ; nop ; nop ; nop ; add qword ptr [rcx], rdx ; ret
0x00000200001b967a : nop ; nop ; nop ; nop ; nop ; nop ; jmp r9
0x00000200001c56aa : nop ; nop ; nop ; nop ; nop ; nop ; jmp rdx
0x000002000036b3fa : nop ; nop ; nop ; nop ; nop ; nop ; mov al, 1 ; ret
0x00000200000d8522 : nop ; nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000b984a : nop ; nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200000b964a : nop ; nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x00000200001b9679 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; jmp r9
0x00000200001c56a9 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; jmp rdx
0x000002000036b3f9 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; mov al, 1 ; ret
0x00000200000b9649 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; mov eax, dword ptr [rcx] ; ret
0x00000200001b9678 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; jmp r9
0x00000200001c56a8 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; jmp rdx
0x0000020000061d97 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret 0
0x0000020000061d98 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret 0
0x0000020000440f48 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret 0x4043
0x000002000011709d : nop ; nop ; nop ; nop ; nop ; nop ; nop ; pause ; ret
0x0000020000061d99 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret 0
0x0000020000440f49 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; ret 0x4043
0x0000020000027079 : nop ; nop ; nop ; nop ; nop ; nop ; nop ; xor eax, eax ; ret
0x0000020000156c4e : nop ; nop ; nop ; nop ; nop ; nop ; or eax, 0xffffffff ; ret
0x000002000011709e : nop ; nop ; nop ; nop ; nop ; nop ; pause ; ret
0x0000020000061d9a : nop ; nop ; nop ; nop ; nop ; nop ; ret 0
0x0000020000440f4a : nop ; nop ; nop ; nop ; nop ; nop ; ret 0x4043
0x000002000013c8a6 : nop ; nop ; nop ; nop ; nop ; nop ; xor al, al ; ret
0x000002000002707a : nop ; nop ; nop ; nop ; nop ; nop ; xor eax, eax ; ret
0x00000200003cb6eb : nop ; nop ; nop ; nop ; nop ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000156c4f : nop ; nop ; nop ; nop ; nop ; or eax, 0xffffffff ; ret
0x000002000011709f : nop ; nop ; nop ; nop ; nop ; pause ; ret
0x0000020000061d9b : nop ; nop ; nop ; nop ; nop ; ret 0
0x0000020000440f4b : nop ; nop ; nop ; nop ; nop ; ret 0x4043
0x000002000013c8a7 : nop ; nop ; nop ; nop ; nop ; xor al, al ; ret
0x000002000002707b : nop ; nop ; nop ; nop ; nop ; xor eax, eax ; ret
0x00000200003cb6ec : nop ; nop ; nop ; nop ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000156c50 : nop ; nop ; nop ; nop ; or eax, 0xffffffff ; ret
0x00000200001170a0 : nop ; nop ; nop ; nop ; pause ; ret
0x0000020000061d9c : nop ; nop ; nop ; nop ; ret 0
0x0000020000440f4c : nop ; nop ; nop ; nop ; ret 0x4043
0x000002000038fbec : nop ; nop ; nop ; nop ; test ecx, edx ; setne al ; ret
0x000002000012e13c : nop ; nop ; nop ; nop ; wbinvd ; ret
0x000002000014989c : nop ; nop ; nop ; nop ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x000002000013c8a8 : nop ; nop ; nop ; nop ; xor al, al ; ret
0x000002000002707c : nop ; nop ; nop ; nop ; xor eax, eax ; ret
0x00000200003cb6ed : nop ; nop ; nop ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000361459 : nop ; nop ; nop ; or dword ptr [rip - 0xc89ee], ecx ; ret
0x0000020000156c51 : nop ; nop ; nop ; or eax, 0xffffffff ; ret
0x00000200001170a1 : nop ; nop ; nop ; pause ; ret
0x0000020000061d9d : nop ; nop ; nop ; ret 0
0x0000020000440f4d : nop ; nop ; nop ; ret 0x4043
0x00000200006a103d : nop ; nop ; nop ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x000002000038fbed : nop ; nop ; nop ; test ecx, edx ; setne al ; ret
0x00000200003ab541 : nop ; nop ; nop ; test edx, edx ; jne 0x200003ab554 ; mov al, 1 ; ret
0x0000020000012a5d : nop ; nop ; nop ; test rcx, rcx ; jne 0x20000012a70 ; ret
0x000002000048f569 : nop ; nop ; nop ; test rcx, rcx ; jne 0x2000048f57c ; ret
0x000002000012e13d : nop ; nop ; nop ; wbinvd ; ret
0x000002000014989d : nop ; nop ; nop ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x000002000061b465 : nop ; nop ; nop ; xor al, al ; jmp 0x200004276fb
0x000002000013c8a9 : nop ; nop ; nop ; xor al, al ; ret
0x000002000002707d : nop ; nop ; nop ; xor eax, eax ; ret
0x00000200003cb6ee : nop ; nop ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000025996 : nop ; nop ; or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x000002000036145a : nop ; nop ; or dword ptr [rip - 0xc89ee], ecx ; ret
0x0000020000156c52 : nop ; nop ; or eax, 0xffffffff ; ret
0x00000200001170a2 : nop ; nop ; pause ; ret
0x0000020000061d9e : nop ; nop ; ret 0
0x0000020000440f4e : nop ; nop ; ret 0x4043
0x00000200006a103e : nop ; nop ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x00000200001a361a : nop ; nop ; sub r8d, dword ptr [rdx + 0x28] ; mov eax, r8d ; ret
0x000002000038fbee : nop ; nop ; test ecx, edx ; setne al ; ret
0x00000200003ab542 : nop ; nop ; test edx, edx ; jne 0x200003ab553 ; mov al, 1 ; ret
0x000002000001703e : nop ; nop ; test r8, r8 ; jne 0x20000017066 ; xor eax, eax ; ret
0x0000020000012a5e : nop ; nop ; test rcx, rcx ; jne 0x20000012a6f ; ret
0x0000020000030bd6 : nop ; nop ; test rcx, rcx ; jne 0x20000030be9 ; xor eax, eax ; ret
0x000002000012f8ee : nop ; nop ; test rcx, rcx ; jne 0x2000012f901 ; xor eax, eax ; ret
0x0000020000153f0e : nop ; nop ; test rcx, rcx ; jne 0x20000153f21 ; xor eax, eax ; ret
0x000002000048f56a : nop ; nop ; test rcx, rcx ; jne 0x2000048f57b ; ret
0x000002000012e13e : nop ; nop ; wbinvd ; ret
0x000002000014989e : nop ; nop ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x00000200004e451e : nop ; nop ; xchg qword ptr [rip + 0x19ef49], rcx ; ret
0x000002000061b466 : nop ; nop ; xor al, al ; jmp 0x200004276fa
0x000002000013c8aa : nop ; nop ; xor al, al ; ret
0x000002000002707e : nop ; nop ; xor eax, eax ; ret
0x000002000019365a : nop ; nop ; xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x00000200003fc667 : nop ; not ecx ; test ecx, edx ; sete al ; ret
0x000002000000e300 : nop ; or byte ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x00000200004c0a76 : nop ; or dword ptr [rax], eax ; add byte ptr [rbp + 0x7a880ff6], al ; ret
0x00000200003cb6ef : nop ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000025997 : nop ; or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x000002000036145b : nop ; or dword ptr [rip - 0xc89ee], ecx ; ret
0x0000020000156c53 : nop ; or eax, 0xffffffff ; ret
0x00000200001170a3 : nop ; pause ; ret
0x00000200004eb0bc : nop ; popfq ; mov ebx, 0xc48348ff ; pop rax ; ret
0x00000200006e78df : nop ; prefetchw byte ptr [rcx] ; ret
0x00000200000d97af : nop ; ret
0x0000020000061d9f : nop ; ret 0
0x00000200002237ec : nop ; ret 0x14
0x0000020000263040 : nop ; ret 0x37
0x0000020000440f4f : nop ; ret 0x4043
0x000002000043bab0 : nop ; ret 0x48ff
0x0000020000476b4a : nop ; ret 0x88ff
0x000002000043ba80 : nop ; ret 0xe9ff
0x00000200005e229c : nop ; ret 0xffb7
0x000002000042125c : nop ; ret 0xffc2
0x0000020000578a0b : nop ; sar bh, 0x81 ; ret
0x000002000039e022 : nop ; sar bh, 1 ; add rsp, 0x38 ; ret
0x00000200006bb595 : nop ; sar edi, -0x18 ; ret
0x00000200006a103f : nop ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x00000200001a361b : nop ; sub r8d, dword ptr [rdx + 0x28] ; mov eax, r8d ; ret
0x0000020000068e87 : nop ; test byte ptr [rsi], al ; add byte ptr [rcx + 3], cl ; retf ; jmp rcx
0x0000020000177e1b : nop ; test dl, dl ; je 0x20000177e2e ; inc word ptr [rcx + 0x66] ; ret
0x000002000038fbef : nop ; test ecx, edx ; setne al ; ret
0x00000200003ab543 : nop ; test edx, edx ; jne 0x200003ab552 ; mov al, 1 ; ret
0x000002000001703f : nop ; test r8, r8 ; jne 0x20000017065 ; xor eax, eax ; ret
0x0000020000012a5f : nop ; test rcx, rcx ; jne 0x20000012a6e ; ret
0x0000020000030bd7 : nop ; test rcx, rcx ; jne 0x20000030be8 ; xor eax, eax ; ret
0x000002000012f8ef : nop ; test rcx, rcx ; jne 0x2000012f900 ; xor eax, eax ; ret
0x0000020000153f0f : nop ; test rcx, rcx ; jne 0x20000153f20 ; xor eax, eax ; ret
0x000002000048f56b : nop ; test rcx, rcx ; jne 0x2000048f57a ; ret
0x000002000012e13f : nop ; wbinvd ; ret
0x000002000014989f : nop ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x0000020000054f21 : nop ; xchg eax, edi ; xor eax, 0x848b4900 ; ret 0x6c80
0x00000200004e451f : nop ; xchg qword ptr [rip + 0x19ef49], rcx ; ret
0x00000200006059ac : nop ; xor al, 0xc8 ; push rsi ; ret
0x000002000061b467 : nop ; xor al, al ; jmp 0x200004276f9
0x000002000006cdcc : nop ; xor al, al ; ret
0x0000020000362e9e : nop ; xor byte ptr [rax + rax], al ; add dh, dh ; ret 0x7401
0x0000020000174842 : nop ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000172be7 : nop ; xor eax, eax ; cmp byte ptr [rcx], 0xcc ; sete al ; ret
0x000002000001d6df : nop ; xor eax, eax ; cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x000002000019abdb : nop ; xor eax, eax ; cmp qword ptr [rcx], rax ; sete al ; ret
0x00000200001688b7 : nop ; xor eax, eax ; mov dword ptr [rip + 0x17144c], eax ; ret
0x000002000002707f : nop ; xor eax, eax ; ret
0x000002000038872b : nop ; xor eax, eax ; test rcx, rcx ; jne 0x2000038873e ; ret
0x000002000019365b : nop ; xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x00000200001406eb : nop ; xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x0000020000411cec : nop ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000141e18 : nop dword ptr [rax + rax] ; cli ; ret
0x0000020000141dfb : nop dword ptr [rax + rax] ; mov rax, rbx ; ret
0x0000020000076f28 : nop dword ptr [rax + rax] ; ret
0x0000020000141e0b : nop dword ptr [rax + rax] ; sti ; ret
0x000002000007c99c : nop dword ptr [rax] ; fldcw word ptr [rcx] ; ret
0x000002000007c97c : nop dword ptr [rax] ; fninit ; ret
0x0000020000141dfa : nop word ptr [rax + rax] ; mov rax, rbx ; ret
0x0000020000076f27 : nop word ptr [rax + rax] ; ret
0x0000020000141e0a : nop word ptr [rax + rax] ; sti ; ret
0x0000020000704b46 : not ah ; cdq ; dec dword ptr [rbx - 0x7e97db84] ; jmp qword ptr [rbx]
0x000002000038ec18 : not al ; and al, 1 ; ret
0x000002000003f02e : not byte ptr [rcx - 0x3fcdffe7] ; ret
0x00000200004c7178 : not eax ; and dword ptr [rcx + 0x3a8], eax ; ret
0x0000020000583c42 : not eax ; and eax, 0xc0000001 ; ret
0x00000200000521df : not eax ; and eax, 0xc000000d ; ret
0x00000200003dd7d6 : not eax ; and eax, 0xc0000034 ; ret
0x00000200004d6254 : not eax ; and eax, 0xc00002b9 ; ret
0x00000200001b7824 : not eax ; and eax, 1 ; ret
0x000002000001ab38 : not eax ; and eax, 2 ; ret
0x00000200001530ec : not eax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000015290b : not eax ; and qword ptr [r8], rax ; ret
0x0000020000174e51 : not eax ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200004680bc : not eax ; and r12d, eax ; jmp 0x2000046808c
0x0000020000150389 : not eax ; lock and dword ptr [r10], eax ; ret
0x000002000056fdcb : not eax ; lock and dword ptr [r9], eax ; ret
0x0000020000198c52 : not eax ; test eax, ecx ; je 0x20000198c63 ; xor al, al ; ret
0x00000200000fea97 : not ecx ; mov eax, ecx ; ret
0x00000200001c2484 : not ecx ; mov eax, r9d ; ret
0x00000200003fc668 : not ecx ; test ecx, edx ; sete al ; ret
0x000002000036fae1 : not esp ; dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000174e50 : not r8 ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200001c2483 : not r9d ; mov eax, r9d ; ret
0x00000200001530eb : not rax ; and qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000015290a : not rax ; and qword ptr [r8], rax ; ret
0x000002000006eeaa : or ah, byte ptr [rbx] ; enter 0xf41, -0x49 ; ret
0x000002000008e14b : or ah, byte ptr [rdi - 0x7f] ; ret
0x00000200001a1951 : or ah, byte ptr [rsi - 0x77] ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000200004c8619 : or ah, byte ptr [rsi - 0x7b] ; dec dword ptr [rdi] ; ret
0x000002000036ee07 : or ah, byte ptr [rsi - 0x7d] ; ret 0x4806
0x000002000008f073 : or ah, cl ; jge 0x2000008f0a5 ; ret
0x0000020000444832 : or ah, dh ; ret 0x4dff
0x00000200002163ec : or ah, dl ; sbb dword ptr [rax], eax ; mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x0000020000041225 : or al, 0 ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000050c68c : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000483fb4 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000e943c : or al, 0 ; add byte ptr [rax], al ; jmp 0x200000e940a
0x00000200006dc05b : or al, 0 ; add byte ptr [rbx + 0x2341ffca], al ; ret 0xe0c1
0x0000020000401482 : or al, 0 ; add byte ptr [rbx - 0x6bf0b701], al ; ret 0x8d4c
0x000002000045ea42 : or al, 0 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000443874 : or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000009c0e : or al, 0 ; add byte ptr [rdx - 0x38], dh ; add rsp, 0x38 ; ret
0x00000200004a51c2 : or al, 0 ; add dword ptr [rcx + 4], eax ; ret
0x00000200006c67b2 : or al, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000101e59 : or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a3b9e : or al, 0 ; add rsp, 0x28 ; ret
0x000002000012998e : or al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003f5671 : or al, 0 ; call 0x20000023fb5
0x00000200001c2b5b : or al, 0 ; cmp dword ptr [rcx], eax ; jb 0x200001c2b6c ; xor al, al ; ret
0x000002000002e02c : or al, 0 ; jmp 0x2000002de41
0x000002000002e02b : or al, 0 ; jmp 0x2000002de42
0x000002000012ad66 : or al, 0 ; mov eax, r8d ; ret
0x00000200004a03cd : or al, 0 ; nop ; jmp 0x200003d0d60
0x0000020000231872 : or al, 0 ; or al, byte ptr [rsi] ; ret 0x1706
0x000002000011d3ee : or al, 0 ; ret
0x0000020000204f7e : or al, 0 ; sysenter
0x000002000010ccdb : or al, 0 ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000105b08 : or al, 0 ; xor eax, eax ; ret
0x00000200003efa31 : or al, 0 ; xor edx, edx ; jmp 0x200003ebccf
0x0000020000168f5b : or al, 0x17 ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200006ebcdc : or al, 0x18 ; call 0x200000c85e9
0x00000200003d17c3 : or al, 0x23 ; ret 0x8941
0x000002000018bec0 : or al, 0x23 ; ret 0xc88b
0x0000020000364ec4 : or al, 0x23 ; ret 0xf80b
0x00000200006c279c : or al, 0x24 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200005b881d : or al, 0x24 ; mov r8, r12 ; call 0x20000054adb
0x000002000057882d : or al, 0x28 ; call 0x20000181a40
0x00000200005779d3 : or al, 0x2b ; call 0x2000018bbc5
0x000002000042ef6e : or al, 0x2b ; ret 0x3b48
0x000002000018271a : or al, 0x31 ; call 0x20000181d89
0x00000200000679ba : or al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200006478d2 : or al, 0x33 ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f019
0x0000020000123ddf : or al, 0x33 ; ror byte ptr [rax - 0x77], cl ; or byte ptr [r9 - 0x75], r8b ; ret
0x00000200001fb556 : or al, 0x33 ; ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x000002000046dde9 : or al, 0x3b ; ret 0x870f
0x00000200006c52f9 : or al, 0x3b ; ret 0x876
0x000002000004d2fe : or al, 0x3b ; sbb al, 0x76 ; ret 0x5eb
0x00000200004155a4 : or al, 0x3d ; ret 0xe9ff
0x0000020000641dce : or al, 0x40 ; cmp ecx, dword ptr [rdx + 0x14] ; jb 0x20000641de1 ; xor eax, eax ; ret
0x000002000064af5c : or al, 0x40 ; ret
0x00000200003a15f8 : or al, 0x41 ; inc edx ; jmp 0x200003a15e5
0x000002000055421d : or al, 0x41 ; jne 0x2000055421c ; jmp 0x200005541eb
0x0000020000164db3 : or al, 0x41 ; mov dword ptr [rax + 0x28], eax ; ret
0x00000200003e6e1c : or al, 0x41 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200001bcbb7 : or al, 0x41 ; mov eax, ecx ; ret
0x00000200001b0009 : or al, 0x41 ; mov r8, rdx ; jmp 0x200001b002d
0x000002000013b8d8 : or al, 0x44 ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200006bd8e5 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200006e7a8e : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x00000200006bd8b4 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; ret
0x00000200006ec4e8 : or al, 0x48 ; add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x0000020000019517 : or al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000200003f82f2 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000001d73a : or al, 0x48 ; add esp, 0x28 ; ret
0x00000200004d8899 : or al, 0x48 ; and eax, ecx ; ret
0x00000200003dd803 : or al, 0x48 ; cmp ecx, 0x20 ; je 0x200003dd823 ; ret
0x000002000038eb45 : or al, 0x48 ; lea ecx, dword ptr [rbx + 0xe] ; add rcx, rax ; jmp 0x2000038eb1b
0x000002000069f853 : or al, 0x48 ; lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x000002000069fd32 : or al, 0x48 ; lea ecx, dword ptr [rdx - 8] ; mov rdx, qword ptr [rcx] ; call r9
0x000002000013c531 : or al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x000002000001d980 : or al, 0x48 ; mov eax, edx ; ret
0x0000020000192aed : or al, 0x48 ; mov ecx, dword ptr [rbx + 0x80] ; call r11
0x00000200003dd81b : or al, 0x48 ; ret
0x000002000036be2f : or al, 0x48 ; shl edx, 0xc ; call rax
0x0000020000526416 : or al, 0x48 ; shr eax, 0x12 ; add rsp, 0x28 ; ret
0x0000020000073529 : or al, 0x48 ; xor eax, eax ; ret
0x000002000019fbc9 : or al, 0x49 ; add eax, 0xc ; jmp 0x2000019fbeb
0x00000200001a03a2 : or al, 0x49 ; add eax, 0xc ; jmp 0x200001a03c4
0x000002000069e3ab : or al, 0x49 ; lea ecx, dword ptr [rcx - 8] ; mov rdx, qword ptr [rcx] ; call r8
0x00000200003d8807 : or al, 0x49 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000423130 : or al, 0x49 ; mov dword ptr [rsi], eax ; jmp 0x200004230fe
0x000002000042312f : or al, 0x49 ; mov dword ptr [rsi], eax ; jmp 0x200004230ff
0x000002000007378d : or al, 0x49 ; mov eax, ebx ; ret
0x000002000058944c : or al, 0x4a ; add cx, r9w ; movzx eax, cx ; ret
0x00000200001f5ee3 : or al, 0x4c ; hlt ; push rsi ; ret 0xf03
0x000002000064c561 : or al, 0x4c ; mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000040f83c : or al, 0x4d ; mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000200005122df : or al, 0x4d ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004d712c : or al, 0x53 ; mov rax, r9 ; ret
0x0000020000076836 : or al, 0x5b ; ret
0x0000020000707226 : or al, 0x66 ; cmp ecx, eax ; jg 0x200007071cd ; xor al, al ; ret
0x0000020000707225 : or al, 0x66 ; cmp ecx, eax ; jg 0x200007071ce ; xor al, al ; ret
0x00000200001622cf : or al, 0x66 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000057f990 : or al, 0x6d ; mov dl, 0xff ; add rsp, 0x38 ; ret
0x00000200004601a8 : or al, 0x6f ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000666d10 : or al, 0x72 ; ret 0x48ff
0x0000020000140d90 : or al, 0x73 ; sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000157cfd : or al, 0x74 ; cmovno edi, edi ; ret 0x8348
0x00000200003c2755 : or al, 0x75 ; add al, 0x41 ; mov al, cl ; ret
0x0000020000485930 : or al, 0x78 ; mov edi, 0xc48348ff ; pop rax ; ret
0x00000200004a6b69 : or al, 0x80 ; add byte ptr [rax], al ; call rax
0x00000200001bed35 : or al, 0x80 ; mov byte ptr [rdx], cl ; mov byte ptr [rdx + 1], al ; ret
0x0000020000431174 : or al, 0x81 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005b1c9e : or al, 0x81 ; jmp qword ptr [rbx]
0x000002000050a423 : or al, 0x81 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000013588a : or al, 0x81 ; ret
0x0000020000126ea0 : or al, 0x81 ; ret 0xfff
0x00000200005dc9ef : or al, 0x83 ; ret
0x00000200003f9c7f : or al, 0x83 ; ret 0x3bf0
0x000002000053daab : or al, 0x83 ; ret 0x8303
0x0000020000438bf0 : or al, 0x84 ; ret
0x000002000045f3d0 : or al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret 0x1b70
0x0000020000596765 : or al, 0x85 ; sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x00000200000c5615 : or al, 0x85 ; sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x000002000000efa8 : or al, 0x85 ; xor al, 0 ; call rax
0x00000200004fa387 : or al, 0x89 ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200001662bf : or al, 0x89 ; or byte ptr [rbx - 0x74dfdbb4], cl ; ret 0xc1f6
0x00000200006c58e1 : or al, 0x89 ; or eax, 0xffbbb468 ; ret
0x00000200004f7090 : or al, 0x89 ; ret 0x48ff
0x000002000013dc13 : or al, 0x8a ; adc byte ptr [r9 - 0x75], r9b ; ret
0x00000200001a1710 : or al, 0x8b ; add al, byte ptr [rcx + 0x33] ; ret 0x4974
0x000002000040efee : or al, 0x8b ; ret
0x000002000002fda7 : or al, 0x8b ; ret 0x25
0x0000020000546d66 : or al, 0x8b ; ret 0x8b48
0x00000200001bcb76 : or al, 0x8b ; ret 0x8b49
0x000002000036714c : or al, 0x8b ; ret 0xc148
0x000002000000e7f3 : or al, 0x8b ; ret 0xc2ff
0x0000020000169139 : or al, 0x8b ; ret 0xe8c1
0x00000200000ac05d : or al, 0x8b ; ret 0xe8d1
0x0000020000192ccf : or al, 0x8b ; ror dword ptr [rax - 0x75], -0x74 ; ret
0x0000020000571bbf : or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x00000200004f8850 : or al, 0x8d ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000054adc
0x00000200000c8198 : or al, 0x8d ; add qword ptr [r9 - 0x75], rax ; ret 0x2341
0x00000200000619c7 : or al, 0x91 ; jmp r9
0x00000200005c6a8f : or al, 0x92 ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa9
0x00000200006c681e : or al, 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000023012 : or al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000070829e : or al, 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001620d3 : or al, 0xc1 ; ret
0x000002000056a9bd : or al, 0xc2 ; mov eax, r9d ; ret
0x00000200001c2a6f : or al, 0xc3 ; mov eax, 0xc000000d ; ret
0x00000200006378fe : or al, 0xc7 ; ret
0x0000020000476aab : or al, 0xc8 ; call 0x200000a3955
0x0000020000107da1 : or al, 0xca ; call 0x200000771c9
0x0000020000480ce5 : or al, 0xd3 ; loop 0x20000480ce4 ; ret 0x3a0
0x00000200004e1ef8 : or al, 0xdf ; add byte ptr [rax], al ; add al, ch ; jb 0x200004e1f44 ; ret 0x48ff
0x00000200004e1ef7 : or al, 0xdf ; add byte ptr [rax], al ; add al, ch ; jb 0x200004e1f45 ; ret 0x48ff
0x00000200007082e2 : or al, 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x000002000049df56 : or al, 0xe0 ; push qword ptr [rbx] ; shr al, cl ; xor ch, cl ; ret 0x4cff
0x000002000037e920 : or al, 0xe1 ; add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000480e60 : or al, 0xe4 ; ret
0x000002000019fbcd : or al, 0xeb ; adc cl, byte ptr [rax - 0x7d] ; ret
0x0000020000705d3f : or al, 0xf ; xchg eax, ebp ; ret
0x00000200003d9f17 : or al, 0xf ; xchg ebp, esp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200001e71e0 : or al, 0xf3 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004d516b : or al, 0xf5 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000421c68 : or al, 0xf6 ; ret
0x00000200004e828f : or al, 0xf7 ; jno 0x200004e829f ; ret
0x00000200004e828e : or al, 0xf7 ; jno 0x200004e82a0 ; ret
0x0000020000417131 : or al, 0xf7 ; ret
0x00000200003d17be : or al, 0xf7 ; rol cl, 1 ; call 0x20041ff3ada
0x000002000015da52 : or al, 0xff ; ret
0x0000020000606616 : or al, 0xff ; ret 0x8348
0x000002000064d954 : or al, 0xff ; ror byte ptr [rcx - 0x7d], 0xc6 ; adc byte ptr [rbx], bh ; ret 0xf172
0x000002000001de06 : or al, 1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000016b327 : or al, 1 ; add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000417639
0x00000200000df8cb : or al, 1 ; add byte ptr [rax], al ; ret
0x0000020000436790 : or al, 1 ; jmp 0x2000043679a
0x0000020000643650 : or al, 3 ; enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x000002000004fe23 : or al, 3 ; mov al, 1 ; mov qword ptr [r10], rcx ; ret
0x0000020000182e98 : or al, 3 ; ret 0x34c
0x0000020000126eab : or al, 3 ; ret 0x3948
0x00000200001535a9 : or al, 3 ; ret 0xc148
0x000002000037f8af : or al, 3 ; ret 0xe8c1
0x000002000006e6b8 : or al, 3 ; ret 0xff48
0x000002000006d763 : or al, 3 ; ret 0xffba
0x00000200004c5b6a : or al, 3 ; ror byte ptr [rcx - 1], 1 ; enter -0x128b, -0x75 ; ret 0xffb9
0x00000200002519a0 : or al, 6 ; ret 0x2546
0x0000020000217d0a : or al, 6 ; sysenter
0x000002000024eb5d : or al, 7 ; add byte ptr [rip + 0xc060c06], al ; ret 0x7005
0x00000200001e7440 : or al, 7 ; call 0x20000181a40
0x00000200003dd810 : or al, 8 ; ret
0x00000200003ab55b : or al, al ; call 0x1ffc33bd96b
0x00000200000322d7 : or al, al ; mov byte ptr [rcx + 0x8e], al ; ret
0x000002000040605f : or al, bl ; mov eax, 0xc00000bb ; ret
0x0000020000388f9a : or al, bl ; xor eax, eax ; ret
0x0000020000494a46 : or al, bpl ; mov bl, 0x50 ; ret 0x65ff
0x00000200004dccbd : or al, byte ptr [r11] ; or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000200006d7768 : or al, byte ptr [rax - 0x78] ; cmp byte ptr [rcx + 3], cl ; ret
0x000002000048162e : or al, byte ptr [rax] ; add al, ch ; fidivr dword ptr [rcx] ; ret
0x00000200004815e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fcos ; ret 0x1b9
0x0000020000083853 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x00000200005dd7e1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x200003899f6
0x00000200003ad7df : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000002000010a98a : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000016ce4d : or al, byte ptr [rax] ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200005bb0a6 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000000e302 : or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000028321 : or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000144510 : or al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000000280b : or al, byte ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000138887 : or al, byte ptr [rax] ; add rsp, 0x60 ; pop r13 ; ret
0x0000020000009d22 : or al, byte ptr [rax] ; add rsp, 0xc8 ; ret
0x000002000038fffa : or al, byte ptr [rax] ; call rax
0x000002000020cc5e : or al, byte ptr [rax] ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x00000200000057c1 : or al, byte ptr [rax] ; mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001503ef : or al, byte ptr [rax] ; mov dword ptr [r10], 0 ; ret
0x0000020000153b86 : or al, byte ptr [rax] ; mov rax, r10 ; add rsp, 0x28 ; ret
0x000002000014306f : or al, byte ptr [rax] ; ret
0x000002000020bf3e : or al, byte ptr [rax] ; ret 0xae5
0x0000020000485a69 : or al, byte ptr [rax] ; setne al ; ret
0x0000020000216a66 : or al, byte ptr [rax] ; sysenter
0x0000020000149180 : or al, byte ptr [rax] ; xor al, al ; ret
0x000002000012a960 : or al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001413ec : or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200000cf7ec : or al, byte ptr [rbp + 0x3b480011] ; ret
0x00000200001a6a18 : or al, byte ptr [rbx + rdi - 0x3f] ; jae 0x200001a6a2b ; or eax, 0xffffffff ; ret
0x00000200001c43b7 : or al, byte ptr [rbx - 0x67c0036] ; cmovne eax, edx ; ret
0x00000200002088ad : or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x000002000054f4da : or al, byte ptr [rbx] ; add dword ptr [rcx - 1], ecx ; leave ; jne 0x2000054f4d6 ; ret
0x00000200004dccbe : or al, byte ptr [rbx] ; or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000002000066a33c : or al, byte ptr [rbx] ; ret 0xff
0x00000200005bab7d : or al, byte ptr [rcx + 0xf] ; ret
0x00000200000113bb : or al, byte ptr [rcx + 3] ; ret
0x000002000038717a : or al, byte ptr [rcx - 0x75] ; add al, byte ptr [rcx - 0x7b] ; ret
0x000002000013cf14 : or al, byte ptr [rcx - 0x75] ; ret
0x00000200001a216b : or al, byte ptr [rcx - 0x75] ; ret 0xff49
0x0000020000617ac2 : or al, byte ptr [rcx - 0x7f] ; ret 0x2400
0x000002000065c300 : or al, byte ptr [rcx - 0xa] ; ret
0x00000200000f9159 : or al, byte ptr [rcx - 0xa] ; ret 0xf08
0x00000200003cb174 : or al, byte ptr [rcx - 1] ; ret
0x000002000070e637 : or al, byte ptr [rcx - 1] ; ret 0x8348
0x000002000040fbf6 : or al, byte ptr [rdi + rcx - 0x49] ; ret 0x8341
0x00000200002389b4 : or al, byte ptr [rsi] ; call qword ptr [rsi]
0x0000020000244aaa : or al, byte ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x0000020000231874 : or al, byte ptr [rsi] ; ret 0x1706
0x000002000020bc70 : or al, byte ptr [rsi] ; ret 0x1c06
0x000002000021339c : or al, byte ptr [rsi] ; ret 0x1f26
0x0000020000251a0c : or al, byte ptr [rsi] ; ret 0x2726
0x0000020000240388 : or al, byte ptr [rsi] ; ret 0x2e06
0x000002000024ae2e : or al, byte ptr [rsi] ; sysenter
0x000002000000280a : or al, byte ptr es:[rax] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000020cc5d : or al, byte ptr fs:[rax] ; cmp byte ptr [rsi + 0xb], 0 ; ret
0x0000020000216a65 : or al, byte ptr fs:[rax] ; sysenter
0x00000200004d674b : or al, ch ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000059e06f : or al, ch ; imul edx ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005587e5 : or al, ch ; int1 ; ret
0x00000200004185da : or al, ch ; jl 0x200004185c0 ; ret
0x0000020000494a47 : or al, ch ; mov bl, 0x50 ; ret 0x65ff
0x0000020000418590 : or al, ch ; pop rsi ; leave ; ret
0x0000020000434d7d : or al, ch ; popfq ; lodsd eax, dword ptr [rsi] ; ret
0x0000020000123ad5 : or al, ch ; push rcx ; ret 0xfffa
0x0000020000015cb7 : or al, ch ; ret
0x000002000014aa24 : or al, ch ; ret 0x51ae
0x00000200005291c8 : or al, ch ; ret 0xaf2f
0x00000200005bbef4 : or al, ch ; ret 0xebe1
0x00000200001803df : or al, ch ; scasd eax, dword ptr [rdi] ; add bl, bh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005a5bc7 : or al, ch ; sysenter
0x0000020000188d91 : or al, dh ; dec dword ptr [rip + 0x1162f3] ; ret
0x0000020000188d73 : or al, dh ; dec dword ptr [rip + 0x11630d] ; ret
0x000002000005aa8b : or al, dh ; inc dword ptr [rcx + 0x46c] ; ret
0x000002000006ceb5 : or al, dl ; mov byte ptr [rcx + 0x8e], r8b ; ret
0x00000200004185d9 : or al, r13b ; jl 0x200004185c1 ; ret
0x000002000041858f : or al, r13b ; pop rsi ; leave ; ret
0x00000200005306ca : or al, r13b ; ret
0x00000200000322d6 : or al, r8b ; mov byte ptr [rcx + 0x8e], al ; ret
0x00000200001b47ee : or ax, 0xf600 ; ret
0x000002000014672b : or bh, al ; push -0x7cb7ffd9 ; ret 0x4808
0x0000020000139b7f : or bh, al ; ret 0xc
0x00000200005f8e9b : or bh, bh ; call rax
0x00000200000c3cd8 : or bh, bh ; int 0x75
0x0000020000140741 : or bh, bh ; mov eax, 0x80070216 ; ret
0x000002000001dbc2 : or bh, bh ; mov eax, 0xc0000095 ; ret
0x000002000070f6d4 : or bh, bh ; push rsi ; ret
0x00000200000360d0 : or bh, bh ; ret
0x00000200001c965c : or bh, bh ; ret 0x1589
0x00000200005d2373 : or bh, bh ; ret 0x341
0x000002000000d635 : or bh, bh ; ret 0x4166
0x000002000070afe5 : or bh, bh ; ret 0x5489
0x000002000015db32 : or bh, bh ; ret 0x6348
0x00000200001634f9 : or bh, bh ; ret 0x8348
0x000002000019d3b5 : or bh, bh ; ret 0x8349
0x00000200001c0c37 : or bh, bh ; ret 0xca8b
0x00000200005a45a1 : or bh, bh ; ret 0xefeb
0x000002000041c4b7 : or bh, bh ; ret 0xff49
0x000002000001e48f : or bh, bh ; rol byte ptr [rcx - 0x7d], 0xc2 ; or byte ptr [rbx], bh ; ret
0x00000200001633fd : or bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x00000200003e0150 : or bh, bh ; xchg byte ptr [rcx + rax - 0x74b80000], ch ; ret
0x000002000049da9e : or bh, byte ptr [rax + 1] ; ret
0x0000020000522ee7 : or bh, byte ptr [rax - 0x8047401] ; ret
0x000002000053e968 : or bh, byte ptr [rbx] ; ret 0xd72
0x0000020000464ec7 : or bh, byte ptr [rbx] ; ret 0xe75
0x0000020000705d3c : or bh, byte ptr [rcx] ; pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x0000020000169314 : or bh, byte ptr [rdx + 0x32] ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000702464 : or bh, byte ptr [rdx + 0x4b] ; lea ecx, dword ptr [rdx - 0x32] ; call rax
0x0000020000651b5a : or bh, byte ptr [rdx + 0x84] ; call 0x2000064de04
0x00000200003d14ee : or bh, dh ; ret 0x1ff
0x00000200004e2a22 : or bh, dh ; ret 0xff80
0x00000200001e822f : or bh, dl ; call qword ptr [rax - 0x123df817]
0x00000200001d800f : or bh, dl ; call qword ptr [rax - 0x130e3d17]
0x00000200001edad2 : or bl, ah ; push rsi ; ret
0x0000020000266a88 : or bl, al ; add byte ptr fs:[rsi], dl ; ret
0x00000200005092cd : or bl, al ; dec dword ptr [rbx - 0x17c6172a] ; ret
0x0000020000509344 : or bl, al ; dec dword ptr [rbx - 0x183d172a] ; ret
0x000002000045a905 : or bl, al ; mov al, 1 ; add rsp, 8 ; ret
0x000002000036d649 : or bl, al ; mov al, 4 ; ret
0x0000020000507d98 : or bl, al ; mov eax, 0xc000000d ; ret
0x0000020000021ec5 : or bl, al ; mov qword ptr [r8], r10 ; ret
0x000002000019219b : or bl, al ; nop ; nop ; nop ; lock inc dword ptr [rcx + 4] ; ret
0x00000200000dfab7 : or bl, al ; or eax, 0xffffffff ; ret
0x00000200004297ae : or bl, al ; ret 0x44ff
0x00000200000d855d : or bl, al ; test r8, r8 ; jne 0x200000d8570 ; xor eax, eax ; ret
0x000002000014a4e3 : or bl, al ; xor al, al ; ret
0x0000020000174e68 : or bl, al ; xor eax, eax ; ret
0x00000200001b94c3 : or bl, bpl ; ret
0x000002000012b339 : or bl, bpl ; ret 0x8b41
0x000002000035ecd4 : or bl, bpl ; ret 0x8b45
0x000002000011a1e1 : or bl, ch ; clc ; xor eax, eax ; ret
0x000002000011e172 : or bl, ch ; in al, dx ; xor eax, eax ; ret
0x000002000035e7c4 : or bl, ch ; leave ; ret
0x000002000019fbd7 : or bl, ch ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000171d26 : or bl, ch ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x00000200006dc0b6 : or bl, ch ; or eax, dword ptr [rbx - 0x73] ; adc al, 0x2e ; xor ecx, ecx ; call rdi
0x00000200006d917b : or bl, ch ; or eax, dword ptr [rcx - 0x73] ; adc al, 0x1f ; xor ecx, ecx ; call rdi
0x00000200006d1849 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x13 ; xor ecx, ecx ; call rdi
0x00000200006d2688 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rdi
0x00000200006d6aa1 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x23 ; xor ecx, ecx ; call rdi
0x00000200006d8193 : or bl, ch ; or eax, dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rdi
0x00000200001b94c4 : or bl, ch ; ret
0x000002000012b33a : or bl, ch ; ret 0x8b41
0x000002000035ecd5 : or bl, ch ; ret 0x8b45
0x000002000005ff82 : or bl, ch ; ret 0xc5ff
0x000002000035eec1 : or bl, dh ; jmp 0x20000360532
0x000002000035eec0 : or bl, dh ; jmp 0x20000360533
0x0000020000447351 : or byte ptr [ecx - 0x75], cl ; iretd ; call 0x20000072e48
0x00000200004ae261 : or byte ptr [r10], dl ; ret
0x00000200005e83c3 : or byte ptr [r11 + 0x318948c3], 0xe9 ; ret
0x00000200005558a1 : or byte ptr [r11 + 0x3480c53], cl ; ret
0x00000200001f7260 : or byte ptr [r11 + 0x4894cc3], r9b ; ret 0x854d
0x00000200005e689b : or byte ptr [r11 + 0xf481b45], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000708d76 : or byte ptr [r11 + rcx*4 + 0x41], al ; add al, 0x8b ; ret 0x8b49
0x0000020000575c3e : or byte ptr [r11 + rcx*4 + 0x4c], 0x24 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000045374 : or byte ptr [r11 + rdi - 0x40], cl ; jb 0x2000004532f ; xor eax, eax ; ret
0x000002000002381b : or byte ptr [r11], al ; ret
0x00000200006168b0 : or byte ptr [r11], bpl ; ret 0x8b44
0x00000200003f0b06 : or byte ptr [r13 + 0x2b], cl ; ret 0x8b44
0x00000200004ed796 : or byte ptr [r13 + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200005e5766 : or byte ptr [r13 + 0x3b], al ; ret 0xd072
0x00000200005c09cc : or byte ptr [r13 + r10 - 0x7d], r14b ; ret
0x0000020000187f82 : or byte ptr [r13 - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000004eb30 : or byte ptr [r13 - 0x77], cl ; xchg eax, ebx ; xor byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200004d768d : or byte ptr [r13 - 0x7b], r9b ; in al, 0x75 ; cmp cl, byte ptr [rax - 0x75] ; ret
0x000002000043b465 : or byte ptr [r14 + 0x41], spl ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200006404ef : or byte ptr [r14 + 4], sil ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000197eb5 : or byte ptr [r14 - 0x7b], r12b ; ret 0x1975
0x000002000037f025 : or byte ptr [r15 + r9 - 0x49], r8b ; ret
0x0000020000060c7a : or byte ptr [r15], cl ; mov bl, 0x10 ; ret
0x000002000010960d : or byte ptr [r15], cl ; mov dh, 0x85 ; ret
0x0000020000038ad5 : or byte ptr [r15], cl ; test byte ptr [rdi + 0x78], al ; sbb dword ptr [rax], eax ; ret
0x00000200003baedc : or byte ptr [r15], cl ; test byte ptr [rdx], ah ; ret 0xd
0x000002000055bd9a : or byte ptr [r15], r9b ; mov bh, 0x55 ; add byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200000636af : or byte ptr [r8 + 0x1a], 0x10 ; ret
0x00000200001830c8 : or byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x000002000000b3a3 : or byte ptr [r8 + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000018962d : or byte ptr [r8 + 0x33], cl ; ret 0x2349
0x00000200001c9b43 : or byte ptr [r8 + 0x3b], cl ; ret
0x00000200001b8916 : or byte ptr [r8 + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x0000020000149144 : or byte ptr [r8 + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x000002000043b761 : or byte ptr [r8 + 0x3b], r9b ; ret
0x000002000041e5ad : or byte ptr [r8 + 0x3b], r9b ; ret 0x830f
0x000002000018cce0 : or byte ptr [r8 + 0xb], cl ; ret 0x4466
0x000002000019a5ae : or byte ptr [r8 + 0xf], cl ; mov bl, 0x10 ; ret
0x00000200000c7877 : or byte ptr [r8 + 0xf], cl ; ret
0x0000020000025864 : or byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200005babae : or byte ptr [r8 + 1], r15b ; pop rbp ; ret
0x000002000016bfc9 : or byte ptr [r8 + 3], cl ; add dword ptr [rax + 0x3b], ecx ; ret
0x00000200006bdc30 : or byte ptr [r8 + 3], cl ; ret
0x00000200004f8225 : or byte ptr [r8 + 3], cl ; ret 0x3b48
0x00000200004fdbd2 : or byte ptr [r8 + 3], cl ; ret 0x3b49
0x000002000005dfb0 : or byte ptr [r8 + 3], r9b ; ret
0x0000020000076ce5 : or byte ptr [r8 + rax*8 - 0x3701fc8c], al ; ret
0x000002000041080a : or byte ptr [r8 - 0x3fffffff], dil ; ret
0x000002000006b2c1 : or byte ptr [r8 - 0x74178aff], r13b ; ret
0x0000020000627176 : or byte ptr [r8 - 0x75], cl ; adc dh, dh ; ret 0x7503
0x000002000000619e : or byte ptr [r8 - 0x75], cl ; ret
0x0000020000175046 : or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x0000020000101a2f : or byte ptr [r8 - 0x75], r9b ; retf ; call rax
0x000002000004d67b : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000004d67e ; ret
0x0000020000059a25 : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x20000059a28 ; ret
0x000002000019abd0 : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000019abd3 ; ret
0x0000020000391b81 : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200001afa1a : or byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x200001afa43
0x000002000010b01a : or byte ptr [r8 - 0x7d], cl ; ret
0x00000200006c72c5 : or byte ptr [r8 - 0x7d], cl ; ret 0x3b02
0x00000200004faa9c : or byte ptr [r8 - 0x7d], cl ; ret 0x4808
0x0000020000702db9 : or byte ptr [r8 - 0x7d], cl ; ret 0x4810
0x000002000046884c : or byte ptr [r8 - 0x7d], cl ; ret 0xe808
0x00000200000cbcd2 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200004c5bf2 : or byte ptr [r8 - 0x7f], cl ; ret 0x1000
0x0000020000059165 : or byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200003869a3 : or byte ptr [r8 - 1], cl ; ret 0x3966
0x000002000047d4a6 : or byte ptr [r8 - 1], r9b ; ret
0x0000020000107072 : or byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000038d9e : or byte ptr [r8], al ; add rsp, 0x38 ; ret
0x000002000001bb5e : or byte ptr [r8], cl ; add byte ptr [rax], al ; ret
0x00000200004d54c4 : or byte ptr [r9 + 0x23], cl ; ret 0x3b49
0x00000200004d95ad : or byte ptr [r9 + 0x23], cl ; ret 0x3b4c
0x00000200004d5705 : or byte ptr [r9 + 0x23], cl ; ret 0xb60f
0x00000200001b5d38 : or byte ptr [r9 + 0x2b], r9b ; ret 0x348
0x000002000001386d : or byte ptr [r9 + 0x33], cl ; ret 0x2349
0x000002000003f912 : or byte ptr [r9 + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000142206 : or byte ptr [r9 + 3], r8b ; ret
0x00000200004f45a5 : or byte ptr [r9 - 0x75], al ; ret
0x00000200005318a6 : or byte ptr [r9 - 0x75], al ; ror byte ptr [rax - 0x75], 1 ; ret
0x0000020000117f2c : or byte ptr [r9 - 0x75], cl ; add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x000002000014b504 : or byte ptr [r9 - 0x75], cl ; clc ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200004147f2 : or byte ptr [r9 - 0x75], cl ; ret
0x0000020000366f99 : or byte ptr [r9 - 0x75], cl ; ret 0x8b41
0x000002000064ad54 : or byte ptr [r9 - 0x75], cl ; salc ; call r11
0x0000020000123de4 : or byte ptr [r9 - 0x75], r8b ; ret
0x0000020000157f9a : or byte ptr [r9 - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200001bcbb2 : or byte ptr [r9 - 0x77], al ; or al, 0x41 ; mov eax, ecx ; ret
0x00000200004c5be9 : or byte ptr [r9 - 0x77], cl ; push rsp ; ret
0x00000200001a52ae : or byte ptr [r9 - 0x7d], cl ; ret
0x00000200000636b0 : or byte ptr [rax + 0x1a], 0x10 ; ret
0x00000200004f452b : or byte ptr [rax + 0x21], 0x10 ; jmp 0x200004f44f8
0x00000200001830c9 : or byte ptr [rax + 0x23], cl ; ret 0x3148
0x000002000005af9c : or byte ptr [rax + 0x29], cl ; adc eax, 0x244104 ; ret
0x00000200005912de : or byte ptr [rax + 0x2b], cl ; ret 0x348
0x0000020000573bb6 : or byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000037bb51 : or byte ptr [rax + 0x2b], cl ; ret 0x9948
0x0000020000502a2e : or byte ptr [rax + 0x2b], cl ; ret 0xc148
0x000002000054cf59 : or byte ptr [rax + 0x2b], cl ; ret 0xd148
0x0000020000573bb5 : or byte ptr [rax + 0x2b], r9b ; ret 0x3b48
0x0000020000502a2d : or byte ptr [rax + 0x2b], r9b ; ret 0xc148
0x000002000000b3a4 : or byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000018962e : or byte ptr [rax + 0x33], cl ; ret 0x2349
0x000002000019e6a1 : or byte ptr [rax + 0x33], cl ; ror byte ptr [rbp + 0x3b], 1 ; ret
0x000002000008b907 : or byte ptr [rax + 0x36], al ; pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; push rax ; call qword ptr [rdx]
0x0000020000103049 : or byte ptr [rax + 0x3748df9], al ; xor al, al ; ret
0x0000020000378713 : or byte ptr [rax + 0x39], 9 ; jne 0x20000378724 ; xor eax, eax ; ret
0x00000200003baed9 : or byte ptr [rax + 0x39], cl ; or byte ptr [r15], cl ; test byte ptr [rdx], ah ; ret 0xd
0x00000200003b3c7a : or byte ptr [rax + 0x3b], 0xc8 ; je 0x200003b3c8b ; xor al, al ; ret
0x000002000003749e : or byte ptr [rax + 0x3b], cl ; ret
0x0000020000116554 : or byte ptr [rax + 0x3b], cl ; ret 0x2874
0x0000020000124c9f : or byte ptr [rax + 0x3b], cl ; ret 0x3a75
0x00000200000a907b : or byte ptr [rax + 0x3b], cl ; ret 0x5974
0x00000200001988d2 : or byte ptr [rax + 0x3b], cl ; ret 0x675
0x000002000041e5ae : or byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200000a4d5b : or byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000aaa00 : or byte ptr [rax + 0x3b], cl ; ret 0xa76
0x000002000017fc0a : or byte ptr [rax + 0x3b], cl ; ret 0xcd72
0x0000020000072b3a : or byte ptr [rax + 0x3b], cl ; ret 0xd75
0x0000020000072d2c : or byte ptr [rax + 0x3b], cl ; ret 0xe75
0x0000020000176e1c : or byte ptr [rax + 0x3b], cl ; ret 0xeb75
0x00000200001b8917 : or byte ptr [rax + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x000002000011e134 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbp - 0xe], 1 ; sub rax, rdx ; ret
0x0000020000149145 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200001cc8cb : or byte ptr [rax + 0x3b], r9b ; ret
0x0000020000002d9e : or byte ptr [rax + 0x408a4102], cl ; add dword ptr [rax - 0x7d], ecx ; ret 0x8808
0x000002000012c1b1 : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rax], al ; ret
0x000002000012c1b0 : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rax], al ; ret
0x00000200000dbe0f : or byte ptr [rax + 0x47], 0x20 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000035fc72 : or byte ptr [rax + 0x5c8b4801], dh ; and al, 8 ; ret
0x000002000012a04c : or byte ptr [rax + 0x63], cl ; ret 0x8b41
0x0000020000271575 : or byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000466622 : or byte ptr [rax + 0x755c013c], al ; or eax, dword ptr [rcx - 1] ; ret
0x0000020000081bb1 : or byte ptr [rax + 0x9d], dl ; add bl, cl ; ret
0x000002000018cce1 : or byte ptr [rax + 0xb], cl ; ret 0x4466
0x000002000017857f : or byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000019a5af : or byte ptr [rax + 0xf], cl ; mov bl, 0x10 ; ret
0x00000200000a37ed : or byte ptr [rax + 0xf], cl ; ret
0x0000020000025865 : or byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200005babaf : or byte ptr [rax + 1], bh ; pop rbp ; ret
0x000002000048cbd8 : or byte ptr [rax + 1], bh ; ret
0x000002000070d7dd : or byte ptr [rax + 1], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000064943d : or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x000002000016bfca : or byte ptr [rax + 3], cl ; add dword ptr [rax + 0x3b], ecx ; ret
0x000002000005df60 : or byte ptr [rax + 3], cl ; ret
0x00000200004f8226 : or byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004fdbd3 : or byte ptr [rax + 3], cl ; ret 0x3b49
0x000002000005df5f : or byte ptr [rax + 3], r9b ; ret
0x000002000015b5e6 : or byte ptr [rax + 4], 4 ; ret
0x0000020000076ce6 : or byte ptr [rax + rax*8 - 0x3701fc8c], al ; ret
0x000002000023b465 : or byte ptr [rax + rax], al ; or eax, dword ptr [rsi] ; ret
0x00000200000e754c : or byte ptr [rax + rbx - 0xa], dh ; ret 0x7504
0x000002000054e4d2 : or byte ptr [rax + rcx + 0x48], dh ; mov ecx, ebp ; call 0x2000016f0d1
0x00000200000e980d : or byte ptr [rax + rdi + 0x41], dh ; mov eax, eax ; ret
0x00000200003f6f2d : or byte ptr [rax + rdi + 0x49], al ; jne 0x200003f6f3e ; ret
0x0000020000144948 : or byte ptr [rax - 0x2d], cl ; ret
0x000002000069bf64 : or byte ptr [rax - 0x2d], cl ; ret 0x2b48
0x000002000069b237 : or byte ptr [rax - 0x2d], cl ; ret 0x2b49
0x000002000069c532 : or byte ptr [rax - 0x2d], cl ; ret 0x2b4c
0x000002000014477e : or byte ptr [rax - 0x2d], cl ; ret 0x2b4d
0x0000020000701a30 : or byte ptr [rax - 0x2d], cl ; ret 0x8948
0x000002000038dda0 : or byte ptr [rax - 0x2d], cl ; ret 0xff48
0x000002000069d08b : or byte ptr [rax - 0x2d], cl ; ret 0xff49
0x0000020000027c56 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc225c471
0x0000020000050ead : or byte ptr [rax - 0x3f], cl ; call 0x1ffc22856c8
0x0000020000062f9d : or byte ptr [rax - 0x3f], cl ; call 0x1ffc22977b5
0x00000200000d17bf : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2305fda
0x00000200000ebffe : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2320816
0x0000020000368d69 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc259d684
0x00000200004033e1 : or byte ptr [rax - 0x3f], cl ; call qword ptr [rbx]
0x00000200005761ea : or byte ptr [rax - 0x3f], cl ; jmp 0x1ffc2e2aefc
0x000002000001ac93 : or byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000544bcb : or byte ptr [rax - 0x3fffff45], bh ; ret
0x000002000041080b : or byte ptr [rax - 0x3fffffff], bh ; ret
0x000002000011ae47 : or byte ptr [rax - 0x68], 0x49 ; or eax, ecx ; or rax, rcx ; ret
0x0000020000045b8a : or byte ptr [rax - 0x73], 0x14 ; ret 0x8948
0x00000200001428b1 : or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x00000200004e302a : or byte ptr [rax - 0x73], 0x45 ; call 0x2004910bb7e
0x0000020000190b99 : or byte ptr [rax - 0x73], 0xc ; ret
0x00000200005842af : or byte ptr [rax - 0x73], cl ; add eax, 0xffecc929 ; ret
0x000002000057df6c : or byte ptr [rax - 0x73], cl ; add eax, 0xffed0d6c ; ret
0x0000020000112b2c : or byte ptr [rax - 0x73], cl ; add eax, 0xfffe8fcc ; ret
0x0000020000112b7c : or byte ptr [rax - 0x73], cl ; add eax, 0xfffeb40c ; ret
0x000002000036e6fb : or byte ptr [rax - 0x73], cl ; add eax, 0xffffbe3d ; ret
0x00000200005291c4 : or byte ptr [rax - 0x73], cl ; or r8b, bpl ; ret 0xaf2f
0x00000200003d4c7f : or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x000002000006b2c2 : or byte ptr [rax - 0x74178aff], ch ; ret
0x0000020000372a74 : or byte ptr [rax - 0x74bb0001], al ; ret
0x000002000015ada6 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 3], cl ; ret
0x0000020000627177 : or byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7503
0x000002000036da67 : or byte ptr [rax - 0x75], cl ; add byte ptr [rcx + 0x3b], cl ; ret 0xda75
0x00000200001a0bac : or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x000002000064ddd1 : or byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x0000020000596933 : or byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x00000200006f524c : or byte ptr [rax - 0x75], cl ; and byte ptr [r8 - 0x7d], cl ; ret 0x4d10
0x00000200006d19ff : or byte ptr [rax - 0x75], cl ; enter -0x76b8, 0x45 ; test al, 0x41 ; call rcx
0x00000200004fe946 : or byte ptr [rax - 0x75], cl ; fisttp word ptr [rax - 1] ; ret
0x00000200000f92a1 : or byte ptr [rax - 0x75], cl ; insb byte ptr [rdi], dx ; ret 0x4c08
0x00000200004cc0ac : or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000f8d57
0x00000200006157b9 : or byte ptr [rax - 0x75], cl ; iretd ; call r10
0x0000020000027229 : or byte ptr [rax - 0x75], cl ; jl 0x2000002725a ; adc byte ptr [rcx - 0x75], al ; ret
0x0000020000103d69 : or byte ptr [rax - 0x75], cl ; jl 0x20000103d9a ; adc byte ptr [rcx - 0x75], al ; ret
0x0000020000129939 : or byte ptr [rax - 0x75], cl ; jl 0x2000012996a ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000019d030 : or byte ptr [rax - 0x75], cl ; jl 0x2000019d061 ; adc byte ptr [rcx - 0x75], al ; ret 0x90c3
0x00000200004cf6e0 : or byte ptr [rax - 0x75], cl ; jl 0x200004cf711 ; adc byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x00000200005926ce : or byte ptr [rax - 0x75], cl ; jl 0x200005926ff ; adc byte ptr [rcx - 0x75], al ; ret 0x90c3
0x0000020000022f8b : or byte ptr [rax - 0x75], cl ; jmp 0x1ffffd0bae2
0x0000020000030ab1 : or byte ptr [rax - 0x75], cl ; pop rcx ; sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200003a80ed : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, edx ; ret
0x00000200001a5c8d : or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000000619f : or byte ptr [rax - 0x75], cl ; ret
0x0000020000175047 : or byte ptr [rax - 0x75], cl ; ret 0x3308
0x000002000006c1c1 : or byte ptr [rax - 0x75], cl ; ret 0x41c3
0x00000200001244c6 : or byte ptr [rax - 0x75], cl ; ret 0x44e9
0x0000020000054935 : or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000035e8fe : or byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000035e9c8 : or byte ptr [rax - 0x75], cl ; ret 0x854d
0x00000200001982ba : or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200003b8042 : or byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200003c91e3 : or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x0000020000176e09 : or byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200004b5c1c : or byte ptr [rax - 0x75], cl ; ret 0xbac3
0x00000200004d8454 : or byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000a9696 : or byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000101a30 : or byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000005c3bf : or byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000019ad91 : or byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbx ; call rax
0x00000200004fe945 : or byte ptr [rax - 0x75], r9b ; fisttp word ptr [rax - 1] ; ret
0x00000200001231fc : or byte ptr [rax - 0x75], r9b ; ret
0x000002000069b70e : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006d6901 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x00000200006d6c26 : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x000002000064d8ce : or byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x00000200000b1aff : or byte ptr [rax - 0x77], cl ; add eax, 0x219e39 ; ret
0x0000020000153823 : or byte ptr [rax - 0x77], cl ; and byte ptr [r13 - 0x77], cl ; ret 0x8b41
0x0000020000427360 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000042789e : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200003604ba : or byte ptr [rax - 0x77], cl ; or dil, dil ; ret
0x00000200006525f7 : or byte ptr [rax - 0x77], cl ; or eax, 0xffc448a9 ; ret
0x0000020000606e5e : or byte ptr [rax - 0x77], cl ; or eax, 0xffc92062 ; ret
0x000002000056eed1 : or byte ptr [rax - 0x77], cl ; or eax, 0xffd5d57f ; jmp 0x2000056eea7
0x000002000056ed87 : or byte ptr [rax - 0x77], cl ; or eax, 0xffd5d6c9 ; jmp 0x2000056ed5d
0x00000200004b05f8 : or byte ptr [rax - 0x77], cl ; or eax, 0xffe27928 ; ret
0x00000200003b20ab : or byte ptr [rax - 0x77], cl ; or eax, 0xffee6de5 ; ret
0x000002000005ff7e : or byte ptr [rax - 0x77], cl ; or r11b, bpl ; ret 0xc5ff
0x00000200004c2e41 : or byte ptr [rax - 0x77], cl ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200004051d3 : or byte ptr [rax - 0x79], cl ; xchg eax, ecx ; enter 1, 0 ; ret
0x00000200000f155a : or byte ptr [rax - 0x7b], 0xc1 ; setne dl ; mov eax, edx ; ret
0x000002000000e04a : or byte ptr [rax - 0x7b], cl ; div byte ptr [rdx - 0x75] ; ret
0x000002000016849b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001684a9 ; call rcx
0x000002000016849a : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001684aa ; call rcx
0x0000020000443b8e : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000443ba6 ; call 0x20000072e49
0x000002000004d67c : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000004d67d ; ret
0x0000020000059a26 : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000059a27 ; ret
0x000002000019abd1 : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000019abd2 ; ret
0x0000020000391b82 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200004cdbbe : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x44 ; ret 0x90c3
0x00000200005e0a30 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; ret 0xffd9
0x00000200001afa1b : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x200001afa42
0x00000200001b41d8 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x200001b41ff
0x0000020000028673 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x16], cl ; ret
0x000002000002587a : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200003869e9 : or byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000070c77 : or byte ptr [rax - 0x7d], cl ; ret
0x00000200006c72c6 : or byte ptr [rax - 0x7d], cl ; ret 0x3b02
0x0000020000012496 : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000016fbb3 : or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200000a7bee : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000040eb6f : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200001beb09 : or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200004380ac : or byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000002000040755c : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000200006d4690 : or byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x0000020000183e98 : or byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000002000013e94e : or byte ptr [rax - 0x7d], cl ; ret 0x8328
0x00000200004958df : or byte ptr [rax - 0x7d], cl ; ret 0x8902
0x000002000046884d : or byte ptr [rax - 0x7d], cl ; ret 0xe808
0x00000200001f62d3 : or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x0000020000005834 : or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200001255eb : or byte ptr [rax - 0x7f], cl ; ret
0x00000200004c5bf3 : or byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200003cda02 : or byte ptr [rax - 0x7fffffec], bh ; ret
0x0000020000059166 : or byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200000d8c33 : or byte ptr [rax - 1], cl ; ret
0x00000200003869a4 : or byte ptr [rax - 1], cl ; ret 0x3966
0x0000020000113dcd : or byte ptr [rax - 1], cl ; ret 0x3b49
0x000002000007381a : or byte ptr [rax - 1], cl ; ret 0x77e9
0x00000200001f682e : or byte ptr [rax - 1], cl ; ret 0x7be9
0x00000200001f6256 : or byte ptr [rax - 1], cl ; ret 0x9ceb
0x00000200006bfcea : or byte ptr [rax - 1], r9b ; ret
0x000002000002469b : or byte ptr [rax - 9], cl ; ret
0x000002000070d38b : or byte ptr [rax - 9], cl ; ret 0xfff
0x000002000004f43a : or byte ptr [rax], ah ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000255d82 : or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x000002000022c63a : or byte ptr [rax], al ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x00000200002090aa : or byte ptr [rax], al ; add al, 6 ; mov byte ptr [rsi], dl ; sysenter
0x000002000021ebfe : or byte ptr [rax], al ; add al, 6 ; or al, 6 ; sysenter
0x000002000024ae2a : or byte ptr [rax], al ; add al, 6 ; or al, byte ptr [rsi] ; sysenter
0x0000020000204c8e : or byte ptr [rax], al ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x0000020000249a4e : or byte ptr [rax], al ; add al, 6 ; sbb dword ptr [rsi], eax ; sysenter
0x000002000021856a : or byte ptr [rax], al ; add al, byte ptr [rsi] ; ret 0xf06
0x0000020000569e2d : or byte ptr [rax], al ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200003ee2a7 : or byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x00000200000d5091 : or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000069e07b : or byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000364c81 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000035fee4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x000002000018e73f : or byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0x23] ; ret 0xce8b
0x0000020000070f99 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xc123
0x00000200000db021 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000548c90 : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200005b4ef6
0x000002000041b4fa : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x2000041b4c8
0x00000200001738f3 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000047de59 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, r14 ; call 0x2000000a099
0x000002000001e2d6 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004ea50a : or byte ptr [rax], al ; add byte ptr [rbx + 0x78c085d8], cl ; ret
0x000002000012e98e : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x234c
0x0000020000434694 : or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200005d4b44 : or byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x000002000045e7b3 : or byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret 0x850f
0x00000200003e83e4 : or byte ptr [rax], al ; add dh, dh ; ret
0x000002000006ed46 : or byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000020000107073 : or byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c805c : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000039ead : or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000065034b : or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000058956d : or byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000038d9f : or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000017cb4 : or byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200003db36e : or byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000047e817 : or byte ptr [rax], al ; je 0x2000047e824 ; xor eax, eax ; ret
0x00000200000648bf : or byte ptr [rax], al ; jmp 0x20000064675
0x000002000010e124 : or byte ptr [rax], al ; jmp 0x200000f0b9b
0x00000200003db717 : or byte ptr [rax], al ; jmp 0x200003db6e1
0x0000020000127274 : or byte ptr [rax], al ; jne 0x2000012725d ; mov qword ptr [r9 + 0x40], rcx ; ret
0x00000200003f82ef : or byte ptr [rax], al ; jne 0x200003f8308 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e81bf : or byte ptr [rax], al ; mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x00000200003981ca : or byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200004fea68 : or byte ptr [rax], al ; mov rax, rdx ; ret
0x0000020000143e07 : or byte ptr [rax], al ; ret
0x0000020000201a3e : or byte ptr [rax], al ; sysenter
0x0000020000144c71 : or byte ptr [rax], al ; test eax, eax ; jns 0x20000144c84 ; mov r8d, r10d ; jmp 0x20000144c41
0x0000020000039e4d : or byte ptr [rax], al ; xor eax, eax ; ret
0x00000200003cdd2a : or byte ptr [rax], al ; xor r9d, r9d ; jmp 0x200003cdcf9
0x000002000001bb5f : or byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000200003ab55a : or byte ptr [rax], cl ; shr al, 3 ; and al, 1 ; ret
0x000002000014b690 : or byte ptr [rax], r8b ; add rsp, 0x28 ; ret
0x00000200003ab559 : or byte ptr [rax], r9b ; shr al, 3 ; and al, 1 ; ret
0x000002000004f439 : or byte ptr [rax], spl ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x000002000004d668 : or byte ptr [rbp + 0x19], dh ; ret
0x000002000004d667 : or byte ptr [rbp + 0x19], sil ; ret
0x00000200001743d6 : or byte ptr [rbp + 0x2b], cl ; ret
0x00000200000ade04 : or byte ptr [rbp + 0x2b], cl ; ret 0x840f
0x00000200003f0b07 : or byte ptr [rbp + 0x2b], cl ; ret 0x8b44
0x00000200006d5293 : or byte ptr [rbp + 0x2b], cl ; ret 0xcb75
0x00000200006e32c7 : or byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x000002000041a540 : or byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x00000200004ed797 : or byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200000076b9 : or byte ptr [rbp + 0x33], cl ; xchg eax, esp ; ret
0x0000020000526569 : or byte ptr [rbp + 0x39], al ; sbb dword ptr [rdi - 0x49], esi ; ret
0x0000020000617f7b : or byte ptr [rbp + 0x3b], al ; ret 0x427f
0x000002000050a40e : or byte ptr [rbp + 0x3b], al ; ret 0xcc72
0x00000200005e5767 : or byte ptr [rbp + 0x3b], al ; ret 0xd072
0x00000200003fd16a : or byte ptr [rbp + 0x3b], cl ; ret
0x0000020000546e10 : or byte ptr [rbp + 0x8083], cl ; add byte ptr [rbx], bh ; ret 0x2375
0x00000200003c794f : or byte ptr [rbp + 0x88d04], cl ; add byte ptr [rax], al ; ret
0x00000200004e7e3b : or byte ptr [rbp + 0xf], dh ; xor al, al ; ret
0x00000200006d1acb : or byte ptr [rbp + 3], al ; ret
0x0000020000019755 : or byte ptr [rbp + 3], cl ; ret
0x00000200000b7fe2 : or byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200001364ac : or byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000010f15 : or byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000020000165c4f : or byte ptr [rbp + 6], dh ; mov eax, 0xc0000022 ; ret
0x000002000010142c : or byte ptr [rbp + 7], dh ; mov al, byte ptr [rip + 0x1e692d] ; ret
0x00000200000afa71 : or byte ptr [rbp + rcx*4 + 0x14], cl ; ret
0x00000200000f92a6 : or byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8141
0x00000200003b41f4 : or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x00000200006f76e5 : or byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000200005c09cd : or byte ptr [rbp + rdx - 0x7d], dh ; ret
0x0000020000520108 : or byte ptr [rbp - 0x10], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000b8025 : or byte ptr [rbp - 0x16], dh ; ret
0x00000200001009e1 : or byte ptr [rbp - 0x19], dh ; mov byte ptr [rip + 0x1e737c], dl ; ret
0x000002000006440e : or byte ptr [rbp - 0x26], dh ; mov dl, 1 ; mov al, dl ; ret
0x000002000018a2da : or byte ptr [rbp - 0x2c], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000134e42 : or byte ptr [rbp - 0x3574ffcb], 0x8b ; ret 0xe183
0x000002000025c1e0 : or byte ptr [rbp - 0x6fdbffc8], 0x38 ; add byte ptr [rax], al ; ret
0x00000200004a02c5 : or byte ptr [rbp - 0x73], al ; adc dword ptr [r8 - 0x75], ecx ; ret
0x00000200006eab6b : or byte ptr [rbp - 0x75], al ; hlt ; mov rax, rdx ; jmp 0x200006eab80
0x00000200005973fe : or byte ptr [rbp - 0x75], al ; outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x000002000014d93b : or byte ptr [rbp - 0x75], al ; ret
0x00000200001febed : or byte ptr [rbp - 0x75], al ; ret 0x3be9
0x00000200000acd6c : or byte ptr [rbp - 0x75], al ; ret 0x8545
0x00000200000bde78 : or byte ptr [rbp - 0x75], cl ; adc byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000020000187f83 : or byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000018e311 : or byte ptr [rbp - 0x75], cl ; push rsp ; ret
0x0000020000199b41 : or byte ptr [rbp - 0x75], cl ; ret 0xc149
0x00000200006d6d31 : or byte ptr [rbp - 0x77], al ; pop rax ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x000002000069fdbe : or byte ptr [rbp - 0x77], al ; push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006dc374 : or byte ptr [rbp - 0x77], al ; push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000064e149 : or byte ptr [rbp - 0x77], cl ; sbb ecx, dword ptr [rax - 0x75] ; ret
0x00000200001252da : or byte ptr [rbp - 0x77], cl ; sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000004eb31 : or byte ptr [rbp - 0x77], cl ; xchg eax, ebx ; xor byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200004d768e : or byte ptr [rbp - 0x7b], cl ; in al, 0x75 ; cmp cl, byte ptr [rax - 0x75] ; ret
0x00000200000d8553 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 2], 0xf3 ; ret
0x0000020000155ade : or byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x49], 0xff ; ret 0xf45
0x0000020000465673 : or byte ptr [rbp - 0x7c], al ; sal byte ptr [rdi + rbx*2 + 0x49], 0x3b ; ret 0x2573
0x00000200000808de : or byte ptr [rbp - 0x7e], al ; lodsb al, byte ptr [rsi] ; ret
0x000002000015db57 : or byte ptr [rbp - 0xc128a2e], al ; ret
0x0000020000657c91 : or byte ptr [rbx + 0x1337b0d], al ; add byte ptr [rax], dl ; ret
0x0000020000587573 : or byte ptr [rbx + 0x15], dh ; mov rcx, rbx ; call 0x2000042383c
0x00000200001ed24b : or byte ptr [rbx + 0x2de908ce], al ; ret 0xfff2
0x00000200005e83c4 : or byte ptr [rbx + 0x318948c3], 0xe9 ; ret
0x00000200005558a2 : or byte ptr [rbx + 0x3480c53], cl ; ret
0x00000200001f7261 : or byte ptr [rbx + 0x4894cc3], cl ; ret 0x854d
0x000002000040caf7 : or byte ptr [rbx + 0x4a], 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e689c : or byte ptr [rbx + 0xf481b45], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200005cf6bf : or byte ptr [rbx + 4], dh ; or eax, 0xffffffff ; ret
0x000002000037ddd3 : or byte ptr [rbx + 5], dh ; add rsp, 0x38 ; ret
0x000002000050c40f : or byte ptr [rbx + rcx*4 + 0x14], cl ; xor al, byte ptr [rcx - 0xa] ; ret 0xf01
0x0000020000708d77 : or byte ptr [rbx + rcx*4 + 0x41], al ; add al, 0x8b ; ret 0x8b49
0x0000020000575c3f : or byte ptr [rbx + rcx*4 + 0x4c], 0x24 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000afa6c : or byte ptr [rbx + rcx*4 + 0x5c], cl ; ret
0x00000200005ed3dd : or byte ptr [rbx + rcx*4 + 0x74], 0x24 ; jo 0x200005ed36e ; ret 0x4404
0x000002000052a2f4 : or byte ptr [rbx + rdi - 0x36], al ; jb 0x2000052a2f0 ; ret
0x0000020000566cf9 : or byte ptr [rbx + rdi - 0x3e], al ; jb 0x20000566cef ; xor al, al ; ret
0x0000020000706097 : or byte ptr [rbx + rdi - 0x3f], cl ; jae 0x200007060aa ; or eax, 0xffffffff ; ret
0x0000020000045375 : or byte ptr [rbx + rdi - 0x40], cl ; jb 0x2000004532e ; xor eax, eax ; ret
0x000002000057577e : or byte ptr [rbx + rsi - 0xa], dh ; ret
0x00000200001f71de : or byte ptr [rbx - 0x1f7cefbf], cl ; add ecx, dword ptr [rcx + 0xb] ; ret
0x00000200006f462d : or byte ptr [rbx - 0x3b7cb701], bl ; ret
0x00000200000be618 : or byte ptr [rbx - 0x3fccefb8], cl ; mov dword ptr [rdx + 0xc], ecx ; ret
0x00000200003c3336 : or byte ptr [rbx - 0x72b3e7b9], cl ; add al, 0xc2 ; jmp 0x200003c3312
0x00000200000da037 : or byte ptr [rbx - 0x74be0007], al ; ret 0x950f
0x00000200001662c1 : or byte ptr [rbx - 0x74dfdbb4], cl ; ret 0xc1f6
0x00000200006653b4 : or byte ptr [rbx - 0x76b7003e], 0x1d ; jno 0x20000665351 ; ret 0x48ff
0x000002000014f44a : or byte ptr [rbx - 0x77], al ; push rsp ; ret
0x00000200001b7812 : or byte ptr [rbx - 0x7afb8b38], cl ; ret 0xec74
0x000002000004aae9 : or byte ptr [rbx - 0x8b7fc31], al ; ret
0x00000200000b89a2 : or byte ptr [rbx - 0x8b7fc33], al ; ret
0x00000200003a6fcf : or byte ptr [rbx - 0x90cd409], cl ; ret 0xf20
0x0000020000127232 : or byte ptr [rbx], ah ; rol dword ptr [rbx + 0x23], 1 ; ret 0x4908
0x0000020000037f8c : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000002000020c841 : or byte ptr [rbx], al ; add byte ptr [rax], cl ; ret 0xc004
0x000002000002381c : or byte ptr [rbx], al ; ret
0x000002000001e495 : or byte ptr [rbx], bh ; ret
0x0000020000577709 : or byte ptr [rbx], bh ; ret 0x7a77
0x0000020000071e46 : or byte ptr [rbx], bh ; ret 0x830f
0x0000020000151104 : or byte ptr [rbx], bh ; ret 0x850f
0x00000200003d28f2 : or byte ptr [rbx], bh ; ret 0x860f
0x000002000053c833 : or byte ptr [rbx], bh ; ret 0xed72
0x00000200000bdbcd : or byte ptr [rbx], bh ; ret 0xf41
0x00000200006168b1 : or byte ptr [rbx], ch ; ret 0x8b44
0x0000020000018015 : or byte ptr [rbx], cl ; ret 0x3345
0x000002000052835d : or byte ptr [rbx], cl ; ret 0xe0c1
0x0000020000038cf4 : or byte ptr [rbx], cl ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000020000552109 : or byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; jmp 0x2004917ac63
0x00000200003e81ca : or byte ptr [rbx], dh ; ret
0x00000200001b4984 : or byte ptr [rbx], dh ; ret 0x25
0x000002000006bdaf : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004b67f5 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x000002000064e1fb : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter 0xae8, 0xe ; ret 0x48ff
0x0000020000652dd3 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; setne al ; ret
0x00000200003781d1 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200000b966e : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000013b34e : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sub bl, al ; inc edx ; jmp 0x2000013b335
0x000002000017504c : or byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 9 ; ret
0x00000200000bdbcc : or byte ptr [rbx], dil ; ret 0xf41
0x000002000046ec40 : or byte ptr [rbx], dl ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200000c37f2 : or byte ptr [rcx + 0x23], cl ; ret
0x00000200004d54c5 : or byte ptr [rcx + 0x23], cl ; ret 0x3b49
0x00000200004d5279 : or byte ptr [rcx + 0x23], cl ; ret 0x3b4c
0x00000200001e661d : or byte ptr [rcx + 0x23], cl ; ret 0x8d48
0x00000200004d5706 : or byte ptr [rcx + 0x23], cl ; ret 0xb60f
0x00000200003c4d69 : or byte ptr [rcx + 0x2b], cl ; ret
0x00000200001b5d39 : or byte ptr [rcx + 0x2b], cl ; ret 0x348
0x000002000058805b : or byte ptr [rcx + 0x2b], cl ; ror byte ptr [rax - 0x77], 0x41 ; ret
0x00000200003c4d68 : or byte ptr [rcx + 0x2b], r9b ; ret
0x00000200000076c8 : or byte ptr [rcx + 0x33], cl ; lodsb al, byte ptr [rsi] ; ret
0x000002000001386e : or byte ptr [rcx + 0x33], cl ; ret 0x2349
0x00000200000738a0 : or byte ptr [rcx + 0x33], cl ; ret 0x8549
0x0000020000511337 : or byte ptr [rcx + 0x3b], al ; ret
0x0000020000132b0c : or byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx - 0x10], 1 ; ret
0x0000020000070fc3 : or byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx - 0x1d], 0xf3 ; ret
0x0000020000634a8b : or byte ptr [rcx + 0x3b], al ; sal dword ptr [rdx - 0x18], 1 ; xor eax, eax ; ret
0x00000200000b2836 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx - 0x18], 0xf3 ; ret
0x00000200001d8609 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx - 0xf], 0xf3 ; ret
0x00000200004fa384 : or byte ptr [rcx + 0x43890c43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000003f913 : or byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000081918 : or byte ptr [rcx + 0x66eb], bh ; add byte ptr [rax], al ; ret 0x2fe1
0x000002000047b586 : or byte ptr [rcx + 0x9c83], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001b5993 : or byte ptr [rcx + 0xe80de05], cl ; add cl, ch ; ret 0
0x0000020000589414 : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; add eax, 0x20 ; ret
0x0000020000588f5c : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x000002000046bae8 : or byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; call 0x1ffc3cb4644
0x00000200000dcdf3 : or byte ptr [rcx + 0xf], al ; mov dh, 0xc8 ; mov dword ptr [rdx + 0x30], ecx ; ret
0x0000020000142207 : or byte ptr [rcx + 3], al ; ret
0x00000200003c4bb0 : or byte ptr [rcx + 3], al ; ret 0x4589
0x000002000006d049 : or byte ptr [rcx + 3], al ; ret 0xf41
0x000002000014059e : or byte ptr [rcx + 3], cl ; ret 0x349
0x00000200000e8f22 : or byte ptr [rcx + 3], cl ; ret 0x8348
0x00000200000e8c25 : or byte ptr [rcx + 3], cl ; ret 0x8948
0x0000020000157147 : or byte ptr [rcx + 3], cl ; ret 0xff49
0x0000020000107041 : or byte ptr [rcx + 9], 4 ; ret
0x0000020000028254 : or byte ptr [rcx + r9*4 + 0x54], cl ; rcl dword ptr [rax], 1 ; ret
0x000002000060d62a : or byte ptr [rcx + rcx - 0x7d], dh ; call qword ptr [rax]
0x00000200000ee21b : or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x00000200003e1deb : or byte ptr [rcx + rcx*4 + 0x27], cl ; xor al, al ; jmp 0x200003e1dcd
0x00000200006d98d3 : or byte ptr [rcx + rcx*4 + 0x4f], al ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000028255 : or byte ptr [rcx + rcx*4 + 0x54], cl ; rcl dword ptr [rax], 1 ; ret
0x00000200004c1512 : or byte ptr [rcx + rcx*4 + 0x6d], cl ; and byte ptr [rcx + 3], al ; ret 0x4589
0x00000200006e26c4 : or byte ptr [rcx + rcx*4 + 0x7f], al ; adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000144161 : or byte ptr [rcx + rcx*4 + 9], cl ; mov rax, r10 ; ret
0x0000020000624b4a : or byte ptr [rcx - 0x2b], 0xff ; jmp 0x20000624b18
0x0000020000411e35 : or byte ptr [rcx - 0x2d], al ; leave ; lea eax, dword ptr [r9 + r10] ; ret
0x0000020000411ecd : or byte ptr [rcx - 0x2d], al ; leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x0000020000411ccd : or byte ptr [rcx - 0x2d], al ; leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200003707d7 : or byte ptr [rcx - 0x2f], cl ; jmp 0x1ffc42aac5b
0x0000020000060ae6 : or byte ptr [rcx - 0x73], al ; inc qword ptr [r9 - 0x75] ; ret 0xc148
0x00000200000d0060 : or byte ptr [rcx - 0x75], al ; ret
0x00000200006bde23 : or byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000056869b : or byte ptr [rcx - 0x75], al ; ret 0x4566
0x0000020000039c56 : or byte ptr [rcx - 0x75], al ; ret 0x90c3
0x00000200001f52f5 : or byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200001f2f7d : or byte ptr [rcx - 0x75], al ; ret 0xf45
0x00000200005318a7 : or byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x75], 1 ; ret
0x00000200000070a7 : or byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x4df0
0x000002000052b6ec : or byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xeeb
0x00000200006e2cb3 : or byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x834a
0x00000200000b8011 : or byte ptr [rcx - 0x75], cl ; adc dh, dh ; ret 0x7501
0x0000020000117f2d : or byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x75], r9b ; ret 0x8b48
0x000002000014b505 : or byte ptr [rcx - 0x75], cl ; clc ; mov rsi, rdx ; call qword ptr [rbx]
0x000002000052dc45 : or byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200004155e1 : or byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000392bb
0x0000020000447352 : or byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000072e47
0x00000200006d9140 : or byte ptr [rcx - 0x75], cl ; iretd ; call r9
0x000002000000768a : or byte ptr [rcx - 0x75], cl ; lodsb al, byte ptr [rsi] ; ret
0x0000020000113441 : or byte ptr [rcx - 0x75], cl ; ret
0x00000200001a26ae : or byte ptr [rcx - 0x75], cl ; ret 0x148
0x000002000046393a : or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x0000020000142d19 : or byte ptr [rcx - 0x75], cl ; ret 0x41c3
0x0000020000366f9a : or byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x00000200001b982d : or byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200001e3fa5 : or byte ptr [rcx - 0x75], cl ; ret 0x8be9
0x0000020000656f51 : or byte ptr [rcx - 0x75], cl ; retf ; mov rdi, rax ; call qword ptr [rbx]
0x000002000064ad55 : or byte ptr [rcx - 0x75], cl ; salc ; call r11
0x000002000019751a : or byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x0000020000644168 : or byte ptr [rcx - 0x76], al ; ret
0x0000020000644167 : or byte ptr [rcx - 0x76], r8b ; ret
0x0000020000157f9b : or byte ptr [rcx - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200001bcbb3 : or byte ptr [rcx - 0x77], al ; or al, 0x41 ; mov eax, ecx ; ret
0x00000200003f9c7b : or byte ptr [rcx - 0x77], al ; or al, 0x83 ; ret 0x3bf0
0x0000020000076832 : or byte ptr [rcx - 0x77], al ; push rax ; or al, 0x5b ; ret
0x00000200006a06dc : or byte ptr [rcx - 0x77], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4808
0x00000200006d466d : or byte ptr [rcx - 0x77], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4d08
0x00000200005e5763 : or byte ptr [rcx - 0x77], cl ; or byte ptr [r13 + 0x3b], al ; ret 0xd072
0x00000200004c5bea : or byte ptr [rcx - 0x77], cl ; push rsp ; ret
0x00000200001fd71b : or byte ptr [rcx - 0x77], cl ; sbb dword ptr [rbp - 0x75], ecx ; ret
0x00000200001c64f8 : or byte ptr [rcx - 0x78], al ; push rbx ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200001c611b : or byte ptr [rcx - 0x78], al ; push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000200006d0294 : or byte ptr [rcx - 0x7b], al ; sal byte ptr [rbp - 0x3d], 1 ; xor eax, eax ; ret
0x00000200003b77a8 : or byte ptr [rcx - 0x7d], al ; ret
0x0000020000703411 : or byte ptr [rcx - 0x7d], al ; ret 0x4df8
0x00000200003a45ba : or byte ptr [rcx - 0x7d], cl ; lock add byte ptr gs:[rax - 0x75], cl ; ret
0x000002000010c776 : or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x000002000014dd2c : or byte ptr [rcx - 0x7d], cl ; ret
0x000002000011ec8b : or byte ptr [rcx - 0x7d], cl ; ret 0x308
0x00000200001c60bb : or byte ptr [rcx - 0x7d], cl ; ret 0x4102
0x00000200004439d9 : or byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200006eb645 : or byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000020000144866 : or byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000045a8a8 : or byte ptr [rcx - 0x7d], cl ; ret 0x8308
0x000002000019fbd3 : or byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200005e437f : or byte ptr [rcx - 0x7f], al ; ret 0x1000
0x00000200003c2720 : or byte ptr [rcx - 0xa], al ; ret
0x00000200001b14cd : or byte ptr [rcx - 0xff0037], al ; jmp qword ptr [rbx]
0x000002000017244d : or byte ptr [rcx - 1], al ; leave ; jne 0x20000172430 ; ret
0x00000200001ef16a : or byte ptr [rcx - 1], al ; ret
0x000002000016e03f : or byte ptr [rcx - 1], al ; ret 0x3b44
0x0000020000060b3e : or byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200001a7a28 : or byte ptr [rcx - 1], al ; ret 0x4e9
0x00000200000dcd86 : or byte ptr [rcx - 1], al ; ret 0x8348
0x00000200001a5abc : or byte ptr [rcx - 1], al ; ret 0xdbe9
0x00000200006223d0 : or byte ptr [rcx - 1], cl ; enter -0x1b8b, -0xd ; ret
0x0000020000708472 : or byte ptr [rcx - 1], cl ; enter -0x1e8b, -0x75 ; ret
0x00000200000aec9d : or byte ptr [rcx - 1], cl ; leave ; jne 0x200000aec95 ; ret
0x0000020000153f6c : or byte ptr [rcx - 1], cl ; ret 0x2c6
0x00000200001e7189 : or byte ptr [rcx - 1], cl ; ret 0x3b4d
0x0000020000140dfa : or byte ptr [rcx - 1], cl ; ret 0x854d
0x00000200004360d8 : or byte ptr [rcx - 1], cl ; ret 0x8d4c
0x00000200001e71a2 : or byte ptr [rcx - 1], cl ; ret 0xe5eb
0x000002000005193f : or byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200000585fc : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000053114 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b4c
0x000002000014a701 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x0000020000024ac3 : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c07ce : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d3045 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200000dfd38 : or byte ptr [rcx], 0 ; add dh, dh ; ret 0x7504
0x000002000040a140 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x00000200003f5f44 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x0000020000467496 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop r13 ; pop r12 ; ret
0x00000200004070a8 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000049157d : or byte ptr [rcx], al ; inc dword ptr [rcx + 4] ; xor eax, eax ; ret
0x00000200000d864a : or byte ptr [rcx], al ; mov qword ptr [rbx], r14 ; jmp 0x200000d861a
0x0000020000549cf8 : or byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000039bb2 : or byte ptr [rcx], bh ; add byte ptr [rdx], bh ; ret
0x00000200004ee233 : or byte ptr [rdi + 7], dh ; mov qword ptr [rcx + 0x20], rdx ; xor eax, eax ; ret
0x000002000012ffc8 : or byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000174b66 : or byte ptr [rdi + rcx + 0x45], cl ; ret 0x8d45
0x000002000037f026 : or byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200000c46a6 : or byte ptr [rdi + rcx - 0x49], al ; ret 0xba48
0x00000200000fea87 : or byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b43
0x0000020000174329 : or byte ptr [rdi + rcx - 0x4a], al ; rol byte ptr [rcx + 0xf], 0xb6 ; ret
0x00000200001419f4 : or byte ptr [rdi + rcx - 0x5d], cl ; ret 0xf41
0x000002000070228c : or byte ptr [rdi + rdi*8 - 0x74b7fc15], ah ; ret
0x0000020000606615 : or byte ptr [rdi + rdi*8], cl ; ret 0x8348
0x0000020000606614 : or byte ptr [rdi + rdi*8], r9b ; ret 0x8348
0x0000020000499e4c : or byte ptr [rdi], 0x44 ; ror dword ptr [rax - 0x7d], -0x3c ; ret
0x000002000012679d : or byte ptr [rdi], 0x85 ; ret
0x000002000064f161 : or byte ptr [rdi], cl ; adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000041663 : or byte ptr [rdi], cl ; cmp dword ptr [rax - 7], -1 ; push rsi ; ret
0x0000020000615ddd : or byte ptr [rdi], cl ; mov bh, 0x48 ; add al, byte ptr [rbp + 0x23] ; ret 0xefd1
0x00000200001f82f2 : or byte ptr [rdi], cl ; mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x000002000054feb5 : or byte ptr [rdi], cl ; mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000055bd9b : or byte ptr [rdi], cl ; mov bh, 0x55 ; add byte ptr [rcx - 1], al ; ret 0xb70f
0x000002000012f0e4 : or byte ptr [rdi], cl ; mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000060c7b : or byte ptr [rdi], cl ; mov bl, 0x10 ; ret
0x000002000060be55 : or byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, ecx ; call 0x1ff8422f16e
0x000002000010960e : or byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x00000200001f578e : or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x00000200003d6bc1 : or byte ptr [rdi], cl ; mov edx, 0x117210e2 ; ret
0x000002000003a1be : or byte ptr [rdi], cl ; mov edx, 0x7721be1 ; ret
0x00000200001d7a49 : or byte ptr [rdi], cl ; test bl, cl ; sal esp, 1 ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200003aac0b : or byte ptr [rdi], cl ; test byte ptr [rcx - 0x7cffffff], al ; call qword ptr [rbx]
0x0000020000038ad6 : or byte ptr [rdi], cl ; test byte ptr [rdi + 0x78], al ; sbb dword ptr [rax], eax ; ret
0x00000200003baedd : or byte ptr [rdi], cl ; test byte ptr [rdx], ah ; ret 0xd
0x00000200000ecb24 : or byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000471cf7 : or byte ptr [rdi], cl ; test dword ptr [rbx], esi ; ret
0x00000200001a31a0 : or byte ptr [rdi], cl ; test dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000050724 : or byte ptr [rdi], cl ; test dword ptr [rdi - 0xa000000], esp ; ret
0x00000200001a31cc : or byte ptr [rdi], cl ; test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x28eb
0x00000200006056cc : or byte ptr [rdi], cl ; test edi, ebx ; ret 0xffec
0x000002000045eaa8 : or byte ptr [rdi], cl ; test edi, edi ; jp 0x2000045ead2 ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000391c19 : or byte ptr [rdi], cl ; xchg bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000001e32f : or byte ptr [rdi], cl ; xchg byte ptr [rdx + 0x6d], ah ; sbb al, 0 ; ret
0x00000200003db11d : or byte ptr [rdi], cl ; xchg cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000124dae : or byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rbp - 0x75], 4 ; ret 0x8348
0x0000020000058a69 : or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000036e4d : or byte ptr [rdi], cl ; xchg eax, esp ; rol byte ptr [rcx - 0x78], 1 ; xor eax, eax ; ret
0x00000200001f72b0 : or byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rbp - 0x77], 4 ; ret 0x8b41
0x00000200006f5f57 : or byte ptr [rdi], dl ; add byte ptr [rbx - 0xbeb7bb], cl ; ret
0x00000200000839f1 : or byte ptr [rdx + 0x54], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005a459d : or byte ptr [rdx + rax + 4], al ; or bh, bh ; ret 0xefeb
0x00000200004baf3d : or byte ptr [rdx - 0x1a], dh ; mov byte ptr [rdx + 1], r10b ; xor eax, eax ; ret
0x00000200001df083 : or byte ptr [rdx - 0x77], al ; push rsp ; ret
0x000002000000e301 : or byte ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x00000200001c8029 : or byte ptr [rdx], ch ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000705c32 : or byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000cfd86 : or byte ptr [rdx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004ae262 : or byte ptr [rdx], dl ; ret
0x000002000057a0c9 : or byte ptr [rip + 0x1ffffff], ah ; mov dword ptr [rdx + 0x10], eax ; ret
0x000002000008c599 : or byte ptr [rip + 0x3820125c], ah ; call qword ptr [rdx]
0x000002000008c585 : or byte ptr [rip + 0xe20125c], ah ; call qword ptr [rdx]
0x000002000008c625 : or byte ptr [rip - 0x43dfeda4], ah ; call qword ptr [rdx]
0x000002000018a1cc : or byte ptr [rip - 0x74b30010], ah ; ret 0x3345
0x0000020000362bec : or byte ptr [rsi + 0x33cffdb], 0x74 ; ret
0x00000200003f0984 : or byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000141975 : or byte ptr [rsi + 0x41], ah ; cmp eax, dword ptr [rax] ; jb 0x20000141966 ; ret
0x000002000043b466 : or byte ptr [rsi + 0x41], ah ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200001c2c17 : or byte ptr [rsi + 0x41], ah ; mov dword ptr [rdx], ecx ; ret
0x0000020000038ddb : or byte ptr [rsi + 0x44], ah ; mov dword ptr [rcx], ebx ; mov eax, r10d ; ret
0x0000020000572d42 : or byte ptr [rsi + 0x44], ah ; mov dword ptr [rip - 0x2a750b], ecx ; ret
0x00000200001772b3 : or byte ptr [rsi + 0x7300001d], cl ; cmp edi, edi ; ret
0x0000020000085520 : or byte ptr [rsi + 0x92d], bh ; add byte ptr [rax], al ; ret
0x000002000049da9c : or byte ptr [rsi + 0xa], dh ; mov eax, 1 ; ret
0x0000020000061a60 : or byte ptr [rsi + 3], ah ; ret
0x00000200006404f0 : or byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 8], rax ; ret
0x00000200006300f4 : or byte ptr [rsi - 0x61], ch ; call qword ptr [rax - 0x2afd3d17]
0x0000020000572d00 : or byte ptr [rsi - 0x77], ah ; add eax, 0xffd58b38 ; ret
0x0000020000197eb6 : or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x0000020000223795 : or byte ptr [rsi], 0 ; pop rax ; jmp qword ptr [rax]
0x00000200002178f6 : or byte ptr [rsi], al ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000020482e : or byte ptr [rsi], al ; sysenter
0x0000020000124890 : or byte ptr [rsp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000c78cc : or byte ptr [rsp], 0 ; ret
0x0000020000201a3d : or byte ptr fs:[rax], al ; sysenter
0x000002000008b906 : or byte ptr ss:[rax + 0x36], al ; pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; push rax ; call qword ptr [rdx]
0x0000020000144c70 : or byte ptr ss:[rax], al ; test eax, eax ; jns 0x20000144c85 ; mov r8d, r10d ; jmp 0x20000144c42
0x0000020000596f9a : or ch, 0xff ; add rsp, 0x28 ; ret
0x00000200004a65f5 : or ch, bl ; dec dword ptr [rax + 0x3b] ; ret 0x4077
0x00000200004000ab : or ch, cl ; push rsi ; ret
0x00000200003a0c14 : or ch, cl ; ret 0x16e3
0x00000200001bed11 : or cl, 0xc0 ; mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x00000200004720f4 : or cl, bh ; ret
0x00000200003e597e : or cl, bpl ; ret
0x000002000003a7e8 : or cl, bpl ; ret 0x349
0x0000020000159b84 : or cl, byte ptr [r13 + 0x3c8dc00c] ; int 0x80
0x000002000064ff63 : or cl, byte ptr [r8 - 0x75] ; ret
0x0000020000149137 : or cl, byte ptr [rax + 0x3b] ; ret 0x1c74
0x000002000051dba4 : or cl, byte ptr [rax - 0x73] ; and al, 0x20 ; call 0x2000014a305
0x0000020000160695 : or cl, byte ptr [rax - 0x75] ; add byte ptr [rcx + 0x3b], cl ; ret 0xee75
0x00000200005d3f97 : or cl, byte ptr [rax - 0x75] ; add eax, 0xffe68a01 ; call rax
0x0000020000647416 : or cl, byte ptr [rax - 0x75] ; iretd ; call 0x2000017363a
0x0000020000576bf7 : or cl, byte ptr [rax - 0x75] ; pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000046c59c : or cl, byte ptr [rax - 0x75] ; ret
0x00000200005acd72 : or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x0000020000465617 : or cl, byte ptr [rax - 0x75] ; ret 0xb70f
0x00000200001db4fa : or cl, byte ptr [rax - 0x75] ; retf ; call 0x20000067806
0x000002000015c029 : or cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200003f84fd : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x00000200000e753d : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0x200000e7550 ; mov rax, r9 ; ret
0x00000200001592b5 : or cl, byte ptr [rax - 0x7d] ; and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000019bba3 : or cl, byte ptr [rax - 0x7d] ; ret
0x000002000015a4bc : or cl, byte ptr [rax - 0x7d] ; ret 0x3848
0x0000020000112c0e : or cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x0000020000112c90 : or cl, byte ptr [rax - 0x7d] ; ret 0x4408
0x00000200001ef1ef : or cl, byte ptr [rax - 0x7d] ; ret 0x4410
0x0000020000112c4d : or cl, byte ptr [rax - 0x7d] ; ret 0x4504
0x00000200005d1c9b : or cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000200004dccc0 : or cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000020000708524 : or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000058a385 : or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x0000020000636e00 : or cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x000002000041fc5d : or cl, byte ptr [rax - 0x7d] ; ret 0x4d08
0x00000200004b2114 : or cl, byte ptr [rax - 0x7d] ; ret 0x8904
0x00000200001d1675 : or cl, byte ptr [rax - 0x7d] ; ret 0x8b08
0x00000200006148f3 : or cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000020000523faa : or cl, byte ptr [rax - 0x7d] ; ret 0xf02
0x000002000017445a : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000020000617b8b : or cl, byte ptr [rax - 1] ; ret 0x3b4d
0x000002000000a056 : or cl, byte ptr [rax - 1] ; ret 0x418d
0x0000020000617b75 : or cl, byte ptr [rax - 1] ; ret 0x8445
0x000002000058a128 : or cl, byte ptr [rax - 1] ; ret 0x8844
0x0000020000617be0 : or cl, byte ptr [rax - 1] ; ret 0x97e9
0x0000020000073783 : or cl, byte ptr [rax - 1] ; ret 0xc2f6
0x0000020000635058 : or cl, byte ptr [rax - 1] ; ret 0xff41
0x0000020000141974 : or cl, byte ptr [rax] ; cmp ax, word ptr [r8] ; jb 0x20000141967 ; ret
0x000002000063e802 : or cl, byte ptr [rax] ; ret
0x00000200000ce2f0 : or cl, byte ptr [rbp + 0x3b] ; ret
0x0000020000159b85 : or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x000002000015402f : or cl, byte ptr [rbp - 0x75] ; ret 0xd233
0x0000020000142204 : or cl, byte ptr [rbx + 0x3410845] ; ret
0x0000020000137564 : or cl, byte ptr [rbx + rcx*4 - 0x38] ; jne 0x20000137571 ; ret
0x000002000065990c : or cl, byte ptr [rbx + rcx*4 - 0x40] ; add rsp, 0x38 ; jmp r9
0x000002000037bd39 : or cl, byte ptr [rbx + rdi - 0x3e] ; setbe al ; ret
0x00000200003d9372 : or cl, byte ptr [rbx + rdi - 0x3f] ; jne 0x200003d9383 ; xor eax, eax ; ret
0x00000200006407e2 : or cl, byte ptr [rbx - 0x3074b72b] ; call 0x2000026f019
0x000002000066950a : or cl, byte ptr [rbx - 0x3f] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000556b13 : or cl, byte ptr [rbx] ; fcompi st(7) ; ret
0x000002000064a6e0 : or cl, byte ptr [rbx] ; ret 0x1be
0x000002000048d14e : or cl, byte ptr [rcx + 0x2b] ; ret
0x000002000013a5e3 : or cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000013a5d6 : or cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000057c41b : or cl, byte ptr [rcx + rcx*4 + 0x5c] ; ret
0x00000200006a111b : or cl, byte ptr [rcx - 0x3f] ; leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000069c8cd : or cl, byte ptr [rcx - 0x75] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4908
0x000002000019c101 : or cl, byte ptr [rcx - 0x7d] ; add byte ptr [rdx], al ; ret
0x0000020000590fca : or cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000180a3f : or cl, byte ptr [rcx - 0x7d] ; ret 0x4108
0x0000020000155484 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x0000020000398c3f : or cl, byte ptr [rcx - 0x7d] ; ret 0x4910
0x000002000010a5fb : or cl, byte ptr [rcx - 0x7d] ; ret 0x4b08
0x000002000006a3f6 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200005910bf : or cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x0000020000155b25 : or cl, byte ptr [rcx - 1] ; ret 0x3841
0x00000200006145f7 : or cl, byte ptr [rcx - 1] ; ret 0x8841
0x000002000000a043 : or cl, byte ptr [rcx - 1] ; ret 0x8d41
0x0000020000589ef0 : or cl, byte ptr [rcx - 1] ; ret 0xc883
0x00000200004c5926 : or cl, byte ptr [rdi - 3] ; inc dword ptr [rcx - 0x73] ; adc byte ptr [r11], r15b ; ret
0x0000020000051588 : or cl, byte ptr [rdi] ; adc dword ptr [rdx + 1], 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004184a3 : or cl, byte ptr [rdi] ; mov bh, 0x43 ; add cl, byte ptr [rcx + 3] ; ret
0x00000200000d7ffb : or cl, byte ptr [rdi] ; or dword ptr [rsi + 0x48fffffd], 0xffffffc1 ; call qword ptr [rax]
0x000002000050468a : or cl, byte ptr [rdi] ; sub ecx, 0x2a ; int1 ; push rdi ; ret
0x00000200000cb37c : or cl, byte ptr [rdi] ; test dword ptr [rsi], ecx ; xor al, 0xf5 ; inc dword ptr [rcx - 0x7d] ; ret 0x48e0
0x00000200000d5b43 : or cl, byte ptr [rdx + 0x2814c10d] ; add byte ptr [rcx - 0x75], al ; ret
0x000002000066535a : or cl, byte ptr [rdx + rax*8 + 0x1d8948ff] ; jrcxz 0x200006652f7 ; ret 0x48ff
0x00000200001ab1e9 : or cl, byte ptr [rdx - 0x74feb8b4] ; ret
0x000002000064e202 : or cl, byte ptr [rsi] ; ret 0x48ff
0x00000200000126ec : or cl, ch ; int 0xeb
0x000002000004b089 : or cl, ch ; mov edi, 0xf6fffffb ; ret
0x000002000003381c : or cl, ch ; ret
0x000002000003a7e9 : or cl, ch ; ret 0x349
0x00000200005d82fd : or cl, ch ; ret 0xefb9
0x0000020000495f23 : or cl, ch ; ret 0xfef3
0x0000020000189ff5 : or cl, ch ; wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005f7b55 : or cl, cl ; inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x00000200004341a7 : or dh, bh ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200004722f2 : or dh, bh ; ret
0x0000020000076e52 : or dh, byte ptr [rbp - 0x12] ; lea rax, qword ptr [rdx - 1] ; pop rbx ; ret
0x0000020000076dd0 : or dh, byte ptr [rbp - 0x18] ; mov rax, r8 ; pop rbx ; ret
0x0000020000076d44 : or dh, byte ptr [rbp - 0x21] ; mov rax, r8 ; pop rbx ; ret
0x000002000064e817 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter -0x1118, 7 ; ret 0x48ff
0x00000200001b2d2f : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f018
0x00000200004e2ccf : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000104d39
0x0000020000512dd3 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f018
0x000002000064226f : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f019
0x00000200000cd145 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200001f4c57 : or dh, byte ptr [rbx] ; sal dh, 1 ; ret 0xf08
0x0000020000013daa : or dh, byte ptr [rdi] ; xor al, 0 ; call rax
0x00000200003871ec : or dh, byte ptr [rsi + rdi*4 - 0x7b] ; ret
0x00000200001c97ce : or dh, cl ; int1 ; call qword ptr [rax - 0xc833d17]
0x00000200001f11d3 : or dh, dh ; fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x0000020000600562 : or dh, dh ; leave ; push rsi ; ret
0x0000020000040c3a : or dh, dh ; ret
0x0000020000535153 : or dh, dh ; ret 0x7402
0x0000020000047eb1 : or dh, dh ; ret 0x7403
0x000002000058c1fa : or dh, dh ; ret 0x7501
0x00000200000dd349 : or dh, dh ; ret 0xe908
0x00000200006fed33 : or dh, dh ; ret 0xf01
0x00000200003d7c61 : or dh, dh ; ret 0xf02
0x00000200000c1e45 : or dh, dh ; ret 0xf10
0x00000200000ca5a4 : or dh, dh ; shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x00000200003604bd : or dil, dil ; ret
0x00000200001c965b : or dil, dil ; ret 0x1589
0x00000200005d2372 : or dil, r15b ; ret 0x341
0x000002000025e9d8 : or dl, al ; add al, spl ; ret 0x40
0x000002000001e215 : or dl, al ; ret 8
0x000002000020e55a : or dl, byte ptr [rax + 2] ; adc dword ptr [rdi], eax ; add byte ptr [rcx], dl ; ret 0xf00d
0x0000020000091bdd : or dl, byte ptr [rax] ; mov ecx, 0x79682177 ; ret
0x0000020000231870 : or dl, byte ptr [rdi] ; or al, 0 ; or al, byte ptr [rsi] ; ret 0x1706
0x0000020000261fd1 : or dl, byte ptr [rdx] ; hlt ; ret
0x00000200001724a4 : or dl, byte ptr [rsi] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000015367e : or dword ptr [r10], eax ; ret
0x000002000051a081 : or dword ptr [r15], 0xffffffff ; call 0x20000056346
0x00000200001c1b71 : or dword ptr [r8], 0xffffffff ; mov eax, 0x80070216 ; ret
0x00000200000272d0 : or dword ptr [r8], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x00000200000360ce : or dword ptr [r8], 0xffffffff ; ret
0x0000020000032ef9 : or dword ptr [rax + 0x23], ecx ; ret
0x000002000006d00e : or dword ptr [rax + 0x23], ecx ; ret 0x2b48
0x00000200006cffb1 : or dword ptr [rax + 0x23], ecx ; ret 0x8b4a
0x000002000006d02c : or dword ptr [rax + 0x23], ecx ; ret 0x8d48
0x0000020000045df2 : or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x0000020000576b58 : or dword ptr [rax + 0x2b], ecx ; fmul dword ptr [rax - 0x7d] ; ret
0x000002000013551d : or dword ptr [rax + 0x2b], ecx ; ret 0xc148
0x000002000036cfbf : or dword ptr [rax + 0x39], ecx ; adc byte ptr [rdi + 3], sil ; mov al, 1 ; ret
0x00000200005ada74 : or dword ptr [rax + 0x3b], ecx ; ret 0x472
0x0000020000042170 : or dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x0000020000073886 : or dword ptr [rax + 0x3b], ecx ; ret 0xbf75
0x00000200000734ff : or dword ptr [rax + 0x3b], ecx ; ret 0xc575
0x000002000042ee7d : or dword ptr [rax + 1], 0x4a80000 ; jne 0x2000042ee90 ; ret
0x00000200006ba082 : or dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add al, dl ; ret 0x4009
0x00000200006b9fe2 : or dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4009
0x00000200006ba00a : or dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4009
0x000002000064d8a1 : or dword ptr [rax + 1], edi ; ret
0x0000020000399177 : or dword ptr [rax + 3], ecx ; ret 0x8d4d
0x00000200006c953b : or dword ptr [rax + 3], ecx ; ret 0xc149
0x000002000015f1a6 : or dword ptr [rax + 4], 2 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012b23a : or dword ptr [rax + rcx*2], eax ; add esp, 0x20 ; pop rdi ; ret
0x00000200001418ae : or dword ptr [rax + rdx*8 + 8], eax ; ret
0x00000200003bcae8 : or dword ptr [rax - 0x17fa8afc], ebp ; pop rsi ; ret 0xffd3
0x0000020000189004 : or dword ptr [rax - 0x39], ecx ; ret
0x00000200001025c4 : or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x00000200000dd07b : or dword ptr [rax - 0x3a], 0x349000d ; leave ; jmp rcx
0x0000020000038d23 : or dword ptr [rax - 0x3d74d28c], eax ; ret
0x0000020000469d1d : or dword ptr [rax - 0x3f], ecx ; jmp 0x1ffc269e635
0x00000200000461d2 : or dword ptr [rax - 0x3f], ecx ; jmp 0x1ffc403a2ea
0x000002000004130b : or dword ptr [rax - 0x3f], ecx ; jmp 0x20049c71222
0x00000200006d022f : or dword ptr [rax - 0x3f], ecx ; loopne 0x200006d0256 ; sar rax, 0x10 ; ret
0x0000020000664287 : or dword ptr [rax - 0x73], ecx ; add al, 0x48 ; add esp, 0x38 ; ret
0x000002000065126e : or dword ptr [rax - 0x73], ecx ; or byte ptr [r8 + 0x3b], cl ; ret
0x00000200005b4d6a : or dword ptr [rax - 0x73], ecx ; push r8 ; call 0x20000071007
0x0000020000651913 : or dword ptr [rax - 0x73], ecx ; sbb byte ptr [r8 + 0x3b], cl ; ret
0x0000020000596915 : or dword ptr [rax - 0x75], ecx ; and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x0000020000493d8e : or dword ptr [rax - 0x75], ecx ; call 0x200000bf2c8
0x0000020000574530 : or dword ptr [rax - 0x75], ecx ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000048b9cd : or dword ptr [rax - 0x75], ecx ; out dx, eax ; call rax
0x000002000012770e : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x00000200000eeafe : or dword ptr [rax - 0x75], ecx ; ret
0x000002000064c75c : or dword ptr [rax - 0x75], ecx ; retf ; call rax
0x0000020000071019 : or dword ptr [rax - 0x75], ecx ; sbb esi, esi ; ret
0x00000200006429ba : or dword ptr [rax - 0x77], ecx ; adc dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x0000020000388f97 : or dword ptr [rax - 0x77], ecx ; or al, bl ; xor eax, eax ; ret
0x0000020000174e75 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x20000174e88 ; or eax, 0xffffffff ; ret
0x00000200005437f5 : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200001555fa : or dword ptr [rax - 0x7d], ecx ; ret
0x000002000039ebd8 : or dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x00000200003d32e7 : or dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000002000011e16e : or dword ptr [rax - 0x7d], ecx ; ret 0xeb08
0x00000200007027c2 : or dword ptr [rax - 0x7d], ecx ; ret 0xf02
0x0000020000399daa : or dword ptr [rax - 0x7d], ecx ; sar ah, 0x48 ; add esp, 0x28 ; ret
0x0000020000416e1e : or dword ptr [rax - 0x7d], ecx ; sar dh, 0x83 ; ret 0x75fe
0x0000020000142b8e : or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200004cdbbd : or dword ptr [rax], 0xfc08548 ; ret 0x90c3
0x0000020000140740 : or dword ptr [rax], 0xffffffff ; mov eax, 0x80070216 ; ret
0x000002000001dbc1 : or dword ptr [rax], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x00000200000360cf : or dword ptr [rax], 0xffffffff ; ret
0x0000020000549cf7 : or dword ptr [rax], 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000022e532 : or dword ptr [rax], eax ; add al, 6 ; adc al, byte ptr [rsi] ; sysenter
0x0000020000256972 : or dword ptr [rax], eax ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x000002000025a046 : or dword ptr [rax], eax ; add al, 6 ; and al, 6 ; sysenter
0x0000020000264d5a : or dword ptr [rax], eax ; add al, 6 ; or al, byte ptr [rsi] ; sysenter
0x000002000025a01e : or dword ptr [rax], eax ; add al, 6 ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0de : or dword ptr [rax], eax ; add al, 6 ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f4e : or dword ptr [rax], eax ; add al, 6 ; xor byte ptr [rsi], al ; sysenter
0x0000020000569d01 : or dword ptr [rax], eax ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200000585fd : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000053115 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x8b4c
0x000002000014a702 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200006d5594 : or dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200004a85f6 : or dword ptr [rax], eax ; add byte ptr [rax + 0x3b], al ; ret 0x870f
0x000002000051bfca : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x00000200000d50aa : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x0000020000032ef3 : or dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc326770f
0x00000200001025be : or dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x00000200001b1490 : or dword ptr [rax], eax ; add byte ptr [rax - 0x74ee8af8], ch ; ret
0x0000020000024ac4 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c07cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003ed2db : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000200004c0a77 : or dword ptr [rax], eax ; add byte ptr [rbp + 0x7a880ff6], al ; ret
0x00000200005bb155 : or dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006f1cb2 : or dword ptr [rax], eax ; add byte ptr [rbx], bh ; fisttp qword ptr [rdi] ; ret 0x8b49
0x00000200000d3046 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x2b49
0x00000200005bb0c9 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200000ea02d : or dword ptr [rax], eax ; add cl, ch ; add qword ptr [r8], r8 ; add dh, dh ; ret
0x0000020000040dbe : or dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000dfd39 : or dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000002000001fac5 : or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000000e0e3 : or dword ptr [rax], eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003cd72b : or dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200003cdc3c : or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200001f0264 : or dword ptr [rax], eax ; call rax
0x000002000038ec21 : or dword ptr [rax], eax ; je 0x2000038ec2e ; xor al, al ; ret
0x0000020000041fb4 : or dword ptr [rax], eax ; jmp 0x2000004148f
0x000002000006ccb1 : or dword ptr [rax], eax ; jmp 0x2000006cca8
0x0000020000525949 : or dword ptr [rax], eax ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013fbf0 : or dword ptr [rax], eax ; mov ecx, esi ; call rax
0x0000020000174b57 : or dword ptr [rax], eax ; ret
0x0000020000202316 : or dword ptr [rax], eax ; sysenter
0x00000200003c7930 : or dword ptr [rax], eax ; xor al, al ; ret
0x000002000013c470 : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000168838 : or dword ptr [rax], ebx ; add byte ptr [rcx - 1], al ; ret
0x00000200006ca056 : or dword ptr [rax], ebx ; add rsp, 0x38 ; ret
0x00000200006ca055 : or dword ptr [rax], r11d ; add rsp, 0x38 ; ret
0x00000200004166dd : or dword ptr [rbp + 0x33], eax ; shr al, 0x3a ; xchg eax, esi ; ret
0x00000200004a43a3 : or dword ptr [rbp + 0x39], ecx ; imul esp, dword ptr [rax], 0x8b440375 ; ret 0x8545
0x00000200003c2752 : or dword ptr [rbp + 0x4750c4a], eax ; mov al, r9b ; ret
0x0000020000148fe3 : or dword ptr [rbp + 0xb], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ee3b8 : or dword ptr [rbp + 0xfffebcb], 0xffffffb7 ; ret
0x0000020000423fd6 : or dword ptr [rbp + 1], esi ; ret
0x0000020000531de1 : or dword ptr [rbp + 3], ecx ; ret 0x4166
0x0000020000378716 : or dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200000badd2 : or dword ptr [rbp + 4], esi ; mov rax, rcx ; ret
0x000002000002a58b : or dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x00000200001b3fee : or dword ptr [rbp + rax - 0x18], esi ; mov edx, 0x8bffe6ff ; ret
0x00000200001b13e6 : or dword ptr [rbp + rax - 0x18], esi ; ret 0xe72b
0x00000200000bae4b : or dword ptr [rbp - 0x75], esi ; mov rax, rcx ; ret
0x00000200001605c4 : or dword ptr [rbp - 0x7b], ecx ; leave ; jne 0x200001605aa ; xor eax, eax ; ret
0x0000020000037081 : or dword ptr [rbx + 0x10], 2 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039274a : or dword ptr [rbx + 0x18], 0xffffffff ; add rsp, 0x28 ; ret
0x00000200004c6012 : or dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000069bbb7 : or dword ptr [rbx + 0x47402f9], eax ; mov eax, edx ; jmp 0x2000069bc02
0x0000020000494ee9 : or dword ptr [rbx + 3], esi ; mov al, 1 ; ret
0x00000200003ab275 : or dword ptr [rbx + rbp - 0x75], esi ; ret
0x00000200001b960f : or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x200001b9603 ; ret
0x0000020000066f47 : or dword ptr [rbx - 0x188bf71e], eax ; mov al, 1 ; ret
0x000002000064c771 : or dword ptr [rbx - 0x3474b729], ecx ; call rax
0x000002000063f5ad : or dword ptr [rbx - 0x5a41729], ecx ; ret 0xebff
0x00000200003625e7 : or dword ptr [rbx - 0xe], edi ; inc dword ptr [rcx - 0xa] ; ret
0x00000200003e0cf3 : or dword ptr [rbx], eax ; ret 0x41ff
0x0000020000081caa : or dword ptr [rbx], edi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000042281b : or dword ptr [rbx], edi ; ret 0xea75
0x00000200003bc3dd : or dword ptr [rbx], esi ; ret 0xc069
0x0000020000392ab9 : or dword ptr [rbx], esi ; ret 0xe083
0x0000020000121899 : or dword ptr [rbx], esi ; ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x00000200004eae8f : or dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x20] ; or dword ptr [rcx + 0x20], eax ; ret
0x00000200004eae95 : or dword ptr [rcx + 0x20], eax ; ret
0x00000200000e242a : or dword ptr [rcx + 0x23], ecx ; ret
0x0000020000469d21 : or dword ptr [rcx + 0x23], ecx ; ret 0x2349
0x00000200006c07d8 : or dword ptr [rcx + 0x23], ecx ; ret 0x2b49
0x000002000004a8a8 : or dword ptr [rcx + 0x23], ecx ; ret 0xba49
0x000002000054c429 : or dword ptr [rcx + 0x38], eax ; pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000d2ea2 : or dword ptr [rcx + 0x3b], eax ; ret 0x830f
0x00000200000ccf98 : or dword ptr [rcx + 0x3b], ecx ; ret
0x0000020000144325 : or dword ptr [rcx + 0x42c], 0x10 ; ret
0x0000020000141dd0 : or dword ptr [rcx + 0x48], 0xffffffff ; ret
0x00000200001e631e : or dword ptr [rcx + 0x48ffe574], 0xffffff8b ; ret 0xb948
0x00000200003a9433 : or dword ptr [rcx + 0x63], ecx ; ret 0x8545
0x0000020000010685 : or dword ptr [rcx + 0x90], ebx ; ret
0x0000020000010684 : or dword ptr [rcx + 0x90], r11d ; ret
0x00000200004e4485 : or dword ptr [rcx + 0x98], 1 ; ret
0x00000200000ead62 : or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x00000200000ead61 : or dword ptr [rcx + 0xa], r8d ; mov eax, edx ; ret
0x0000020000141d75 : or dword ptr [rcx + rax*8 + 8], eax ; ret
0x00000200001724b3 : or dword ptr [rcx + rcx*4 + 0x11], eax ; ret
0x000002000002125e : or dword ptr [rcx + rcx*4 + 0x45], eax ; xchg dword ptr [rbp + rcx*4 + 0x1c], ecx ; ret 0x3b49
0x00000200003cb6f0 : or dword ptr [rcx - 0x18], 8 ; ret
0x00000200001a3ac8 : or dword ptr [rcx - 0x2c], eax ; dec rcx ; jne 0x200001a3ac0 ; ret
0x00000200004cf676 : or dword ptr [rcx - 0x3f], ecx ; jmp 0x1ffc370428e
0x000002000070a691 : or dword ptr [rcx - 0x489ed3fb], ecx ; push rsi ; ret 0xf02
0x00000200001f661e : or dword ptr [rcx - 0x73], ecx ; add al, 0xe9 ; ret 0xe46c
0x0000020000443bfe : or dword ptr [rcx - 0x73], ecx ; xor r8b, r13b ; cmp dl, dh ; ret 0x81ff
0x000002000002b0b0 : or dword ptr [rcx - 0x75], eax ; fimul dword ptr [rbp - 0x75] ; ret
0x0000020000659254 : or dword ptr [rcx - 0x75], eax ; ret
0x00000200001e63c7 : or dword ptr [rcx - 0x75], eax ; ret 0x2b41
0x0000020000063647 : or dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x00000200000b266e : or dword ptr [rcx - 0x75], eax ; ret 0xe083
0x00000200004d9461 : or dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax + 0x3b], cl ; ret 0xf275
0x0000020000144164 : or dword ptr [rcx - 0x75], ecx ; ret 0xb9c3
0x00000200000e8f1e : or dword ptr [rcx - 0x77], ecx ; or byte ptr [rcx + 3], cl ; ret 0x8348
0x000002000003ea1d : or dword ptr [rcx - 0x7d], 0xffffffe8 ; add al, 0x83 ; ret 0xebe0
0x00000200006eac03 : or dword ptr [rcx - 0x7d], ecx ; ret
0x000002000047c0ac : or dword ptr [rcx - 0x7d], ecx ; ret 0x4802
0x00000200001e719e : or dword ptr [rcx - 0x7d], ecx ; ror byte ptr [rax], 0x49 ; inc edx ; jmp 0x200001e7194
0x000002000017c956 : or dword ptr [rcx - 0x7f], eax ; call qword ptr [rdi]
0x0000020000171d28 : or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x00000200000461d6 : or dword ptr [rcx - 1], eax ; ret
0x000002000050cf08 : or dword ptr [rcx], 0xffffffff ; mov eax, 0xc000000d ; ret
0x000002000002d941 : or dword ptr [rcx], 0xffffffff ; ret
0x000002000012b239 : or dword ptr [rcx], 4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051dbfb : or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x00000200004eeb0e : or dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000014ce52 : or dword ptr [rcx], ecx ; add byte ptr [rcx - 0x7d], cl ; ret 0x4818
0x000002000001e2d2 : or dword ptr [rdi + 0x19], esi ; mov eax, 8 ; ret
0x00000200003e8434 : or dword ptr [rdi + 0x22], esp ; add al, ch ; jmp qword ptr [rax]
0x0000020000083d41 : or dword ptr [rdi + 0xf], ecx ; add byte ptr [rdx], cl ; ret 0xf854
0x000002000019c002 : or dword ptr [rdi + 7], esi ; movzx eax, cx ; sub eax, 0x16 ; ret
0x00000200000850f0 : or dword ptr [rdi + rbx + 0x24], esp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb9b4
0x0000020000023e2f : or dword ptr [rdi + rcx + 0x20], eax ; ret
0x00000200001bde08 : or dword ptr [rdi + rcx + 0x20], eax ; ret 0xfa80
0x0000020000464fa0 : or dword ptr [rdi + rsi*4 - 0x7d], esi ; clc ; add dword ptr [rdx + rbp*8 - 0x75], esi ; ret 0xc8a3
0x0000020000627d9d : or dword ptr [rdi - 0x1c], esp ; dec dword ptr [rax - 0x7d] ; ret
0x000002000051a082 : or dword ptr [rdi], 0xffffffff ; call 0x20000056345
0x00000200000aec04 : or dword ptr [rdi], ebx ; add byte ptr [rax + 0x3b], cl ; ret 0x573
0x0000020000174e60 : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x00000200000a81d6 : or dword ptr [rdi], ecx ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000058aa6f : or dword ptr [rdi], ecx ; mov edx, 0x3481ff0 ; ret
0x00000200001df632 : or dword ptr [rdi], edx ; add byte ptr [rbx], bh ; vpsrld ymm13, ymm1, xmm1 ; ret
0x00000200001549e4 : or dword ptr [rdx + 0x18], 0x20 ; mov eax, 0xffff ; ret
0x0000020000025998 : or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x00000200004c6a4a : or dword ptr [rdx + 0x20], 1 ; inc dword ptr [rcx + 0x3c] ; ret
0x00000200004c65de : or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x000002000064ce9d : or dword ptr [rdx + 0x62535442], edi ; call 0x2000026f019
0x00000200007024c8 : or dword ptr [rdx + 0x64], edi ; xor ecx, ecx ; call rax
0x00000200001f1d9e : or dword ptr [rdx + 0xf000000], 0xffffffb7 ; ret 0x8b4c
0x00000200001d93df : or dword ptr [rdx + 6], 0xfffffff0 ; push rsi ; ret 0x7401
0x0000020000136bd0 : or dword ptr [rdx + rdx*8 + 0x66e81475], eax ; ret 0xfff3
0x000002000050b7bb : or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x0000020000540a47 : or dword ptr [rdx - 0x49f0004e], esi ; ret
0x00000200001f348d : or dword ptr [rdx - 0x74b7001b], esi ; ret 0x854d
0x000002000016309a : or dword ptr [rdx], 0xffffffff ; ret
0x00000200006ee0d8 : or dword ptr [rdx], eax ; add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, al ; ret
0x000002000015367f : or dword ptr [rdx], eax ; ret
0x00000200001fad5a : or dword ptr [rdx], ecx ; add dh, dh ; ret
0x0000020000073850 : or dword ptr [rdx], edi ; ret 0x5675
0x0000020000261fcd : or dword ptr [rdx], edx ; or r10b, byte ptr [rdx] ; hlt ; ret
0x000002000016436b : or dword ptr [rdx], esp ; ret
0x0000020000657c92 : or dword ptr [rip + 0x1337b], 0x10 ; ret
0x0000020000119615 : or dword ptr [rip + 0x15a56d], ecx ; ret
0x00000200001bec95 : or dword ptr [rip + 0x198405], ecx ; ret
0x000002000014b9fe : or dword ptr [rip + 0x480009ad], 0xfffffff7 ; ret 0xfff
0x0000020000371390 : or dword ptr [rip - 0x1a137], 1 ; ret
0x000002000008def4 : or dword ptr [rip - 0x27aeebc9], edi ; ret
0x000002000036145c : or dword ptr [rip - 0xc89ee], ecx ; ret
0x00000200003653ab : or dword ptr [rip - 0xe152], 2 ; ret
0x0000020000018035 : or dword ptr [rsi + 0x3b], esp ; ret 0x1174
0x00000200000d7ffd : or dword ptr [rsi + 0x48fffffd], 0xffffffc1 ; call qword ptr [rax]
0x00000200001a6db1 : or dword ptr [rsi + 0xb], esp ; ret 0x8966
0x00000200000f807f : or dword ptr [rsi + rdx*4 - 0x7b], esi ; ret 0xf174
0x0000020000174112 : or dword ptr [rsi - 0x7b], esp ; sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x0000020000241f46 : or dword ptr [rsi], eax ; sysenter
0x00000200001c50ef : or dword ptr [rsp], 0 ; ret
0x0000020000202315 : or dword ptr fs:[rax], eax ; sysenter
0x0000020000266a82 : or eax, 0x100 ; add byte ptr [rax], cl ; ret
0x000002000022c046 : or eax, 0x100 ; add byte ptr [rbx], ah ; ret
0x000002000023cb0e : or eax, 0x100 ; add dl, ch ; ret
0x0000020000193c5a : or eax, 0x104551 ; ret
0x00000200001ee9ca : or eax, 0x10765d ; jmp 0x200000aaca9
0x00000200002581ec : or eax, 0x11061506 ; ret 0xf00d
0x0000020000239708 : or eax, 0x11068506 ; ret 0xf00d
0x00000200006e6b51 : or eax, 0x110968d ; add byte ptr [rax], al ; xor ecx, ecx ; call rdi
0x000002000022e800 : or eax, 0x1136e206 ; ret 0xf00d
0x00000200000abded : or eax, 0x113a ; call rax
0x0000020000188d94 : or eax, 0x1162f3 ; ret
0x0000020000188d76 : or eax, 0x11630d ; ret
0x00000200001549db : or eax, 0x12bd88 ; sete al ; ret
0x0000020000153ba7 : or eax, 0x12d215 ; ret
0x0000020000153bb2 : or eax, 0x12d6d1 ; ret
0x0000020000145421 : or eax, 0x12dbea ; ret
0x000002000024ec5c : or eax, 0x14061306 ; ret 0xf00d
0x000002000024da50 : or eax, 0x14061c06 ; ret 0xf00d
0x000002000023184c : or eax, 0x14061e06 ; ret 0xf00d
0x00000200002539c0 : or eax, 0x14062206 ; ret 0xf010
0x00000200002476b4 : or eax, 0x14063106 ; ret 0xf00d
0x00000200002404c0 : or eax, 0x14063206 ; ret 0xf00d
0x000002000026ba64 : or eax, 0x14063e06 ; ret 0xf00d
0x000002000013b40f : or eax, 0x149be0 ; ret
0x000002000021b078 : or eax, 0x15061506 ; ret 0xf011
0x0000020000231f30 : or eax, 0x15268406 ; ret 0xf011
0x0000020000205050 : or eax, 0x15665006 ; ret 0xf011
0x0000020000119616 : or eax, 0x15a56d ; ret
0x0000020000144dfa : or eax, 0x15a6b9 ; ret
0x000002000012dd4f : or eax, 0x15b434 ; call 0x200000d9fd7
0x000002000016997f : or eax, 0x16fd54 ; ret
0x000002000024d98c : or eax, 0x17064d06 ; ret 0xf010
0x0000020000168f59 : or eax, 0x170c62 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001184ed : or eax, 0x171852 ; call rax
0x00000200001dca7d : or eax, 0x173c7e ; call 0x200000f8d57
0x00000200000c315d : or eax, 0x18 ; ret
0x0000020000250ff0 : or eax, 0x18061b06 ; ret 0xf011
0x000002000022eb58 : or eax, 0x18063406 ; ret 0xf011
0x000002000022d304 : or eax, 0x1806de06 ; ret 0xf011
0x00000200001bec96 : or eax, 0x198405 ; ret
0x000002000013e612 : or eax, 0x199bf1 ; add rsp, 0x48 ; ret
0x00000200004e4522 : or eax, 0x19ef49 ; ret
0x0000020000213e4c : or eax, 0x1a062d06 ; ret 0xf016
0x0000020000245ce8 : or eax, 0x1b06b606 ; ret 0xf017
0x00000200000dd64c : or eax, 0x1c000dc2 ; ret
0x00000200000c8862 : or eax, 0x1ce8a1 ; call 0x20000064b07
0x000002000000aa77 : or eax, 0x1ce99000 ; js 0x2000000aa90 ; add bh, bh ; ret
0x0000020000259924 : or eax, 0x1d061306 ; ret 0xf016
0x000002000024a10c : or eax, 0x1d06d406 ; ret 0xf016
0x00000200001521c7 : or eax, 0x1e ; sub r9, r8 ; jmp r9
0x000002000024344c : or eax, 0x1e06b606 ; ret 0xf01a
0x0000020000173e1d : or eax, 0x1e39a6 ; ret
0x0000020000174e8e : or eax, 0x1e58fd ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000025531c : or eax, 0x1f46a006 ; ret 0xf01b
0x00000200002375f2 : or eax, 0x200 ; add byte ptr [rcx], ah ; ret
0x000002000022ff16 : or eax, 0x200 ; add byte ptr [rdi], ah ; ret 0x3a
0x0000020000233b48 : or eax, 0x2106e406 ; ret 0xf01a
0x000002000013cb8e : or eax, 0x210845 ; call qword ptr [rcx]
0x00000200002367e4 : or eax, 0x21168306 ; ret 0xf01a
0x0000020000139d0e : or eax, 0x21df6d ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000021e31c : or eax, 0x22061306 ; ret 0xf01b
0x0000020000220594 : or eax, 0x22061606 ; ret 0xf01b
0x000002000024bf74 : or eax, 0x22165a06 ; ret 0xf01e
0x0000020000205dd0 : or eax, 0x22265f06 ; ret 0xf01b
0x00000200005a071a : or eax, 0x23104733 ; ret 0x4731
0x000002000011c194 : or eax, 0x25834800 ; ret 0x16d8
0x0000020000265f24 : or eax, 0x26061506 ; ret 0xf01f
0x000002000021891c : or eax, 0x26064b06 ; ret 0xf01f
0x00000200000ddbae : or eax, 0x26f825 ; call qword ptr [rcx]
0x00000200004b906d : or eax, 0x275ffdd ; mov al, cl ; ret
0x00000200000dc852 : or eax, 0x27a7c9 ; sete al ; ret
0x000002000064305c : or eax, 0x2804b ; ret
0x0000020000640bc6 : or eax, 0x2a4e9 ; add rsp, 0x28 ; ret
0x00000200003d8778 : or eax, 0x2aac6b ; add rsp, 0x38 ; ret
0x0000020000617f43 : or eax, 0x2b14438b ; ret 0x341
0x00000200000169ef : or eax, 0x2b6024 ; ret
0x0000020000076664 : or eax, 0x2d6d6f ; call qword ptr [rcx]
0x0000020000075f0d : or eax, 0x2d74c6 ; call qword ptr [rcx]
0x0000020000075bbb : or eax, 0x2d7818 ; call qword ptr [rcx]
0x00000200000757f1 : or eax, 0x2d7be2 ; call qword ptr [rcx]
0x0000020000075471 : or eax, 0x2d7f62 ; call qword ptr [rcx]
0x0000020000074fbd : or eax, 0x2d8416 ; call qword ptr [rcx]
0x0000020000074d63 : or eax, 0x2d8670 ; call qword ptr [rcx]
0x0000020000073ec0 : or eax, 0x2d9513 ; call qword ptr [rcx]
0x0000020000071370 : or eax, 0x2dc063 ; call qword ptr [rcx]
0x000002000006f9e5 : or eax, 0x2e7622 ; mov eax, ecx ; ret
0x0000020000054f6a : or eax, 0x302739 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000395ab8 : or eax, 0x303c0c1 ; add cl, byte ptr [rax - 0x7d] ; ret 0xff04
0x00000200000342d8 : or eax, 0x3239a3 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000009019d : or eax, 0x33bc25e6 ; ret
0x0000020000635e68 : or eax, 0x348c78b ; ret
0x00000200001a2eb5 : or eax, 0x35894800 ; ret 0xdc1
0x00000200001f123b : or eax, 0x39528841 ; ret
0x00000200000e4727 : or eax, 0x3b410019 ; ret
0x00000200003962cf : or eax, 0x3b48fffc ; ret 0x1177
0x000002000000d3bf : or eax, 0x41c22b4c ; mov eax, eax ; ret
0x00000200004e907f : or eax, 0x48000000 ; add esp, 0x38 ; ret
0x00000200006f84b3 : or eax, 0x48000000 ; add esp, 0x60 ; pop rbp ; ret
0x000002000063e6af : or eax, 0x480000d8 ; add esp, 0x28 ; ret
0x0000020000085e76 : or eax, 0x48354d7 ; ret 0x3b3
0x000002000003cdb3 : or eax, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000047b7f : or eax, 0x48c00000 ; add esp, 0x20 ; pop rdi ; ret
0x000002000013b22f : or eax, 0x48c00000 ; add esp, 0x28 ; ret
0x0000020000165993 : or eax, 0x48c00000 ; add esp, 0x38 ; ret
0x0000020000513b71 : or eax, 0x48c00000 ; add esp, 0x58 ; ret
0x00000200001184e2 : or eax, 0x48c03300 ; add esp, 0x20 ; pop rbx ; ret
0x000002000003fc46 : or eax, 0x48c38b00 ; add esp, 0x20 ; pop rbx ; ret
0x000002000050ce23 : or eax, 0x48c38b00 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004a96e1 : or eax, 0x48d43 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000040037 : or eax, 0x48d68b48 ; mov ecx, ebx ; call r14
0x000002000004004c : or eax, 0x48d68b48 ; mov ecx, edi ; call r14
0x000002000037d73f : or eax, 0x48ffd277 ; add esp, 0x50 ; pop rbx ; ret
0x00000200000769e2 : or eax, 0x4974 ; jmp rcx
0x00000200000dd688 : or eax, 0x4a000dc2 ; ret
0x000002000000ae63 : or eax, 0x5058b00 ; ret 0x34
0x000002000010fc3c : or eax, 0x568b4800 ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000183d1c : or eax, 0x583d8148 ; ret
0x00000200001bcc0d : or eax, 0x5894800 ; ret 0xd59
0x00000200003cb35c : or eax, 0x5bc00000 ; ret
0x00000200003cb54d : or eax, 0x70518948 ; xor eax, eax ; ret
0x00000200004e2a1d : or eax, 0x74c08545 ; or bh, dh ; ret 0xff80
0x00000200001244c1 : or eax, 0x75ff8440 ; or byte ptr [rax - 0x75], cl ; ret 0x44e9
0x0000020000568696 : or eax, 0x76ea3b41 ; or byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200003de576 : or eax, 0x77545 ; call 0x200000086e4
0x00000200003de540 : or eax, 0x7757b ; call 0x200000086e4
0x00000200003de523 : or eax, 0x77598 ; call 0x200000086e4
0x00000200003de506 : or eax, 0x775b5 ; call 0x200000086e4
0x00000200003de4e6 : or eax, 0x775d5 ; call 0x200000086e4
0x00000200003df2dd : or eax, 0x785ae ; call 0x200000086e4
0x00000200003df2b8 : or eax, 0x785d3 ; call 0x200000086e4
0x00000200003df287 : or eax, 0x78604 ; call 0x200000086e4
0x00000200003df267 : or eax, 0x78624 ; call 0x200000086e4
0x00000200003df213 : or eax, 0x78678 ; call 0x200000086e4
0x00000200006680bb : or eax, 0x802a1589 ; ret 0x8bff
0x00000200003dd80d : or eax, 0x80cebeb ; ret
0x00000200005f4d04 : or eax, 0x81c00000 ; jmp qword ptr [rbx]
0x00000200004ca3e7 : or eax, 0x83000000 ; call qword ptr [rax]
0x00000200001bd565 : or eax, 0x8348c1ff ; ret
0x00000200003f4fd5 : or eax, 0x8348c1ff ; ret 0x4110
0x00000200005cd910 : or eax, 0x8348c6ff ; ret
0x000002000010d8fa : or eax, 0x8348fff2 ; ret
0x000002000000ade4 : or eax, 0x84058b00 ; ret 0x34
0x0000020000515d66 : or eax, 0x85187800 ; ror byte ptr [rdi], 0x9e ; ret
0x00000200004a5a2d : or eax, 0x85c00000 ; fisttp dword ptr [rdi] ; cdq ; ret 0x8b48
0x0000020000118d8e : or eax, 0x8a01b300 ; ret
0x000002000049bb8f : or eax, 0x8ad1420f ; ret 0x90c3
0x00000200003eb633 : or eax, 0x8b440000 ; ret
0x000002000003476b : or eax, 0x8b49004d ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000157878 : or eax, 0x8bc00000 ; ret
0x00000200004383f5 : or eax, 0x8bc00000 ; ret 0x6fe9
0x000002000046e69f : or eax, 0x8bffbb59 ; ret
0x00000200005ec7ff : or eax, 0x8bffc828 ; ret
0x00000200003b222f : or eax, 0x8bffcc0c ; ret
0x00000200004b7eff : or eax, 0x8bffdb71 ; ret
0x000002000053322f : or eax, 0x8bfff06f ; ret
0x00000200005c1443 : or eax, 0x8bffffd5 ; ret
0x00000200001f0261 : or eax, 0x99ae2 ; call rax
0x00000200005d8494 : or eax, 0xab127 ; ret
0x00000200006652cf : or eax, 0xadfa0589 ; ret 0x4cff
0x0000020000509004 : or eax, 0xb60fffd8 ; shr al, 1 ; add ebx, ebp ; ret
0x0000020000383887 : or eax, 0xb60ffff5 ; ret
0x00000200001be7c3 : or eax, 0xb9000000 ; ret 0
0x00000200001e592d : or eax, 0xb9b86 ; ret
0x0000020000039e4c : or eax, 0xc0330008 ; ret
0x0000020000021e86 : or eax, 0xc033c300 ; ret
0x00000200004b907b : or eax, 0xc084ffdd ; jne 0x200004b908a ; ret
0x0000020000006702 : or eax, 0xc18bca2b ; add rsp, 0x38 ; ret
0x000002000011e912 : or eax, 0xc3c00000 ; xor eax, eax ; ret
0x0000020000111289 : or eax, 0xc4834800 ; pop rbx ; ret
0x000002000038c701 : or eax, 0xc4834800 ; push rax ; pop rbp ; ret
0x00000200000dd668 : or eax, 0xc6000dc2 ; ret
0x00000200001ac241 : or eax, 0xc78b4400 ; call 0x200001b847f
0x00000200001ac240 : or eax, 0xc78b4400 ; call 0x200001b8480
0x00000200000dd07e : or eax, 0xc9034900 ; jmp rcx
0x00000200000dd664 : or eax, 0xd000dc2 ; ret 0xd
0x00000200000dd676 : or eax, 0xdc20d00 ; add cl, ch ; ret
0x00000200000dd666 : or eax, 0xdc20d00 ; add dh, al ; ret
0x00000200000dd68e : or eax, 0xdc2d700 ; add byte ptr [rdi], dh ; ret 0xd
0x00000200000dd68a : or eax, 0xdc34a00 ; add bh, dl ; ret 0xd
0x0000020000091855 : or eax, 0xdc4e18ea ; ret 0xb3cc
0x000002000038f088 : or eax, 0xe8c00000 ; pop rdi ; call rsp
0x000002000038f055 : or eax, 0xe8c00000 ; xchg eax, edx ; call rsp
0x00000200000dd678 : or eax, 0xe9000dc2 ; ret
0x00000200003eff3e : or eax, 0xe9c00000 ; ret
0x00000200005dd478 : or eax, 0xe9c00000 ; ret 0xec54
0x00000200005c0496 : or eax, 0xeb800000 ; add bh, bh ; ret
0x00000200005c055f : or eax, 0xeb800000 ; add eax, dword ptr [rcx - 1] ; ret
0x000002000001e263 : or eax, 0xebc00000 ; jmp 0x1ffc3126bc3
0x00000200003a15f3 : or eax, 0xebc00000 ; or al, 0x41 ; inc edx ; jmp 0x200003a15ea
0x000002000039543b : or eax, 0xebc00000 ; ret
0x000002000001b8fa : or eax, 0xebc00000 ; ret 0xc933
0x0000020000590001 : or eax, 0xf18418b ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000058dec2 : or eax, 0xf522d ; jne 0x2000058ded5 ; xor al, al ; ret
0x000002000048dcc7 : or eax, 0xf6000001 ; ret
0x00000200005652cc : or eax, 0xf704ce83 ; ret
0x000002000014ae55 : or eax, 0xfc000000 ; ret
0x0000020000617bde : or eax, 0xff480a88 ; ret 0x97e9
0x000002000006195d : or eax, 0xff49228a ; ret 0xc9ff
0x00000200006c58e3 : or eax, 0xffbbb468 ; ret
0x00000200006c1b17 : or eax, 0xffc25084 ; call qword ptr [rip - 0x3daf7a]
0x00000200006c1ad7 : or eax, 0xffc250c4 ; call qword ptr [rip - 0x3daf3a]
0x00000200006c18c5 : or eax, 0xffc252d6 ; call qword ptr [rip - 0x3dad28]
0x00000200006c0fa7 : or eax, 0xffc2705c ; ret
0x0000020000641bfc : or eax, 0xffc35f3b ; call rax
0x00000200006525fa : or eax, 0xffc448a9 ; ret
0x000002000064f314 : or eax, 0xffc47627 ; call 0x2000006b5a7
0x000002000063ad51 : or eax, 0xffc5be72 ; jne 0x2000063ad60 ; ret
0x00000200006e9e66 : or eax, 0xffc6d4b5 ; je 0x200006e9e83 ; ret
0x00000200006500e3 : or eax, 0xffc7bd8c ; add rsp, 0x28 ; ret
0x000002000064dab1 : or eax, 0xffc7e3a6 ; ret
0x00000200006c66d9 : or eax, 0xffc90a18 ; ret
0x0000020000606e61 : or eax, 0xffc92062 ; ret
0x0000020000592adf : or eax, 0xffd0487c ; mov ebx, eax ; call 0x2000001edd1
0x00000200005516fe : or eax, 0xffd300e5 ; call rax
0x000002000052e81f : or eax, 0xffd5253c ; call r11
0x0000020000572d46 : or eax, 0xffd58af5 ; ret
0x000002000056eed4 : or eax, 0xffd5d57f ; jmp 0x2000056eea4
0x000002000056ee28 : or eax, 0xffd5d613 ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000056edea : or eax, 0xffd5d661 ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000056ed8a : or eax, 0xffd5d6c9 ; jmp 0x2000056ed5a
0x00000200004f4c02 : or eax, 0xffd95349 ; call 0x2000011f954
0x00000200004f0855 : or eax, 0xffd996f6 ; call 0x2000011f954
0x00000200004e452a : or eax, 0xffd9c8c9 ; ret
0x00000200004f708a : or eax, 0xffda0d91 ; call 0x2000011f9a8
0x00000200004f7059 : or eax, 0xffda0dc2 ; call 0x2000011f954
0x00000200005473ca : or eax, 0xffda1d71 ; add rsp, 0x28 ; ret
0x00000200004f5ca1 : or eax, 0xffda217a ; call 0x2000011f954
0x00000200004b906b : or eax, 0xffdd0d1f ; jne 0x200004b907d ; mov al, cl ; ret
0x00000200004ae25c : or eax, 0xffddb8eb ; or byte ptr [r10], dl ; ret
0x00000200004ad07b : or eax, 0xffde8e38 ; call 0x200000392bb
0x000002000049820e : or eax, 0xffdf8d8d ; call 0x200000b9b08
0x000002000054cac1 : or eax, 0xffe0a60a ; call r9
0x000002000054bf94 : or eax, 0xffe0b137 ; call r9
0x00000200005484ac : or eax, 0xffe0ec1f ; call r9
0x000002000052d3b5 : or eax, 0xffe23446 ; call 0x200000b9667
0x00000200004b05fb : or eax, 0xffe27928 ; ret
0x000002000049976e : or eax, 0xffe3222d ; call 0x200000b9b08
0x0000020000495d79 : or eax, 0xffe41b22 ; call 0x200000b9b08
0x0000020000494984 : or eax, 0xffe42d57 ; call 0x200000b9b08
0x00000200004913b2 : or eax, 0xffe43089 ; call 0x200000b9b08
0x0000020000609e40 : or eax, 0xffe4691b ; and r8d, edx ; jmp 0x20000609ebb
0x000002000048f4d0 : or eax, 0xffe483cb ; call 0x200000b9b08
0x000002000048fb25 : or eax, 0xffe49796 ; call 0x200000b9b08
0x000002000048fae9 : or eax, 0xffe497d2 ; call 0x200000b9b08
0x000002000048eb0e : or eax, 0xffe4a7ad ; call 0x200000b9b08
0x000002000048e3d8 : or eax, 0xffe4aee3 ; call 0x200000b9888
0x000002000048b626 : or eax, 0xffe4c275 ; call 0x200000b9b08
0x000002000048b451 : or eax, 0xffe4c44a ; call 0x200000b9b08
0x000002000048b1fb : or eax, 0xffe4c6a0 ; call 0x200000b9b08
0x000002000048ad33 : or eax, 0xffe4cb68 ; call 0x200000b9b08
0x000002000048a466 : or eax, 0xffe4d435 ; call 0x200000b9b08
0x0000020000444719 : or eax, 0xffe54ae2 ; call 0x2000006ad30
0x00000200004446a9 : or eax, 0xffe54b52 ; call 0x2000006ad30
0x0000020000483b68 : or eax, 0xffe62a53 ; call 0x200000a97ec
0x000002000042517b : or eax, 0xffe72c20 ; jne 0x2000042518a ; ret
0x000002000041b57e : or eax, 0xffe7f85d ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000405141 : or eax, 0xffe8343a ; call 0x2000002dc48
0x000002000040d526 : or eax, 0xffe8e3e5 ; call 0x200000392bc
0x00000200005bc4af : or eax, 0xffe98afc ; call 0x200000086e3
0x000002000043c678 : or eax, 0xffeaa223 ; call 0x2000006ad30
0x000002000043c1d9 : or eax, 0xffeaa662 ; call 0x2000006ad30
0x000002000043b290 : or eax, 0xffeab60b ; call 0x2000006ad30
0x00000200001f027d : or eax, 0xffebccaa ; call rax
0x00000200003b50ea : or eax, 0xffecc6f9 ; call rax
0x00000200003b20ae : or eax, 0xffee6de5 ; ret
0x00000200003df94e : or eax, 0xfff06f4d ; mov edx, eax ; call 0x2000006bc5d
0x000002000037d87d : or eax, 0xfff1371e ; call 0x200000b9b07
0x0000020000363716 : or eax, 0xfff26835 ; call 0x2000011f953
0x0000020000363746 : or eax, 0xfff346f5 ; call 0x2000011f9a7
0x0000020000363735 : or eax, 0xfff34706 ; call 0x2000011f953
0x000002000036145d : or eax, 0xfff37612 ; ret
0x0000020000393629 : or eax, 0xfff54352 ; jne 0x2000039363e ; ret
0x00000200003cd3fc : or eax, 0xfff833ff ; call 0x200000b9667
0x00000200003c9f9e : or eax, 0xfff8d12d ; call r9
0x00000200003bf9ae : or eax, 0xfff9771d ; call r9
0x000002000004a42d : or eax, 0xfffafee9 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003a5d2b : or eax, 0xfffb13a0 ; call r9
0x0000020000381284 : or eax, 0xfffd5e47 ; call r9
0x00000200005f771b : or eax, 0xffffe82e ; ret
0x0000020000036ce2 : or eax, 0xffffffff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000015492a : or eax, 0xffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000156c80 : or eax, 0xffffffff ; add rsp, 0x38 ; ret
0x00000200000a9795 : or eax, 0xffffffff ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200003b43d2 : or eax, 0xffffffff ; pop rdi ; pop rbx ; ret
0x000002000002599c : or eax, 0xffffffff ; ret
0x0000020000371567 : or eax, 1 ; mov qword ptr [rdx], rax ; ret
0x000002000017f788 : or eax, 2 ; mov qword ptr [rcx], r8 ; ret
0x0000020000480d8b : or eax, 5 ; ret
0x00000200000e9861 : or eax, 8 ; mov eax, r8d ; ret
0x0000020000640285 : or eax, dword ptr [rax] ; add al, ch ; ret
0x0000020000418a0b : or eax, dword ptr [rax] ; add bh, dh ; ret 0xf838
0x0000020000102279 : or eax, dword ptr [rax] ; add bl, ch ; ret
0x00000200003b39b1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; outsd dx, dword ptr [rsi] ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003be267 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001bd68d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000070823f : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004ec539 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000011ce69 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200004fce3d : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000006fb39 : or eax, dword ptr [rax] ; add byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x000002000039ca4a : or eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x65], al ; ret
0x00000200001bd5ec : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x00000200003be345 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000446c25 : or eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200000b8734 : or eax, dword ptr [rax] ; add rax, r8 ; jmp rax
0x00000200001e590e : or eax, dword ptr [rax] ; add rax, rax ; movzx eax, word ptr [r10 + rax*8 + 0xc] ; ret
0x0000020000119c09 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000136c8a : or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000513bad : or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x00000200000b8866 : or eax, dword ptr [rax] ; and dword ptr [rcx + 4], 0 ; ret
0x000002000020d41e : or eax, dword ptr [rax] ; cld ; ret
0x0000020000148410 : or eax, dword ptr [rax] ; mov al, 1 ; jmp 0x200001483de
0x0000020000131602 : or eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001169d1 : or eax, dword ptr [rax] ; mov eax, edx ; ret
0x0000020000117cee : or eax, dword ptr [rax] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200002581ea : or eax, dword ptr [rax] ; or eax, 0x11061506 ; ret 0xf00d
0x0000020000239706 : or eax, dword ptr [rax] ; or eax, 0x11068506 ; ret 0xf00d
0x000002000022e7fe : or eax, dword ptr [rax] ; or eax, 0x1136e206 ; ret 0xf00d
0x000002000024ec5a : or eax, dword ptr [rax] ; or eax, 0x14061306 ; ret 0xf00d
0x000002000024da4e : or eax, dword ptr [rax] ; or eax, 0x14061c06 ; ret 0xf00d
0x000002000023184a : or eax, dword ptr [rax] ; or eax, 0x14061e06 ; ret 0xf00d
0x00000200002539be : or eax, dword ptr [rax] ; or eax, 0x14062206 ; ret 0xf010
0x00000200002476b2 : or eax, dword ptr [rax] ; or eax, 0x14063106 ; ret 0xf00d
0x00000200002404be : or eax, dword ptr [rax] ; or eax, 0x14063206 ; ret 0xf00d
0x000002000026ba62 : or eax, dword ptr [rax] ; or eax, 0x14063e06 ; ret 0xf00d
0x000002000021b076 : or eax, dword ptr [rax] ; or eax, 0x15061506 ; ret 0xf011
0x0000020000231f2e : or eax, dword ptr [rax] ; or eax, 0x15268406 ; ret 0xf011
0x000002000020504e : or eax, dword ptr [rax] ; or eax, 0x15665006 ; ret 0xf011
0x000002000024d98a : or eax, dword ptr [rax] ; or eax, 0x17064d06 ; ret 0xf010
0x0000020000250fee : or eax, dword ptr [rax] ; or eax, 0x18061b06 ; ret 0xf011
0x000002000022eb56 : or eax, dword ptr [rax] ; or eax, 0x18063406 ; ret 0xf011
0x000002000022d302 : or eax, dword ptr [rax] ; or eax, 0x1806de06 ; ret 0xf011
0x0000020000213e4a : or eax, dword ptr [rax] ; or eax, 0x1a062d06 ; ret 0xf016
0x0000020000245ce6 : or eax, dword ptr [rax] ; or eax, 0x1b06b606 ; ret 0xf017
0x0000020000259922 : or eax, dword ptr [rax] ; or eax, 0x1d061306 ; ret 0xf016
0x000002000024a10a : or eax, dword ptr [rax] ; or eax, 0x1d06d406 ; ret 0xf016
0x000002000024344a : or eax, dword ptr [rax] ; or eax, 0x1e06b606 ; ret 0xf01a
0x000002000025531a : or eax, dword ptr [rax] ; or eax, 0x1f46a006 ; ret 0xf01b
0x0000020000233b46 : or eax, dword ptr [rax] ; or eax, 0x2106e406 ; ret 0xf01a
0x00000200002367e2 : or eax, dword ptr [rax] ; or eax, 0x21168306 ; ret 0xf01a
0x000002000021e31a : or eax, dword ptr [rax] ; or eax, 0x22061306 ; ret 0xf01b
0x0000020000220592 : or eax, dword ptr [rax] ; or eax, 0x22061606 ; ret 0xf01b
0x000002000024bf72 : or eax, dword ptr [rax] ; or eax, 0x22165a06 ; ret 0xf01e
0x0000020000205dce : or eax, dword ptr [rax] ; or eax, 0x22265f06 ; ret 0xf01b
0x0000020000265f22 : or eax, dword ptr [rax] ; or eax, 0x26061506 ; ret 0xf01f
0x000002000021891a : or eax, dword ptr [rax] ; or eax, 0x26064b06 ; ret 0xf01f
0x000002000020d41a : or eax, dword ptr [rax] ; push rdx ; fisttp word ptr [rbx] ; add ah, bh ; ret
0x000002000012672f : or eax, dword ptr [rax] ; ret
0x0000020000203fde : or eax, dword ptr [rax] ; sysenter
0x000002000020d30e : or eax, dword ptr [rax] ; test eax, 0xf0000bd7 ; ret 0x20
0x00000200001183ab : or eax, dword ptr [rax] ; xor al, al ; ret
0x00000200001316a8 : or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006dc0b8 : or eax, dword ptr [rbx - 0x73] ; adc al, 0x2e ; xor ecx, ecx ; call rdi
0x00000200006a03c5 : or eax, dword ptr [rbx - 0x73] ; adc al, 0x34 ; xor ecx, ecx ; call rdi
0x0000020000049ee8 : or eax, dword ptr [rbx - 0x7af0fe1f] ; ret
0x0000020000494f0b : or eax, dword ptr [rbx] ; add byte ptr [rax], al ; jne 0x20000494ef4 ; xor al, al ; ret
0x0000020000602f07 : or eax, dword ptr [rcx + 0x2b] ; fisttp dword ptr [rax + 0x63] ; ret
0x0000020000126797 : or eax, dword ptr [rcx + 0xf9] ; or byte ptr [rdi], 0x85 ; ret
0x00000200005e30eb : or eax, dword ptr [rcx + 3] ; ret 0x8348
0x00000200001feabd : or eax, dword ptr [rcx - 0x47] ; add eax, 0xe9000000 ; call qword ptr [rax]
0x0000020000156069 : or eax, dword ptr [rcx - 0x49] ; add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x2000015609b
0x00000200006d917d : or eax, dword ptr [rcx - 0x73] ; adc al, 0x1f ; xor ecx, ecx ; call rdi
0x00000200006e6885 : or eax, dword ptr [rcx - 0x73] ; adc al, 0x36 ; xor ecx, ecx ; call rdi
0x000002000013a6ca : or eax, dword ptr [rcx - 0x75] ; ret
0x0000020000466628 : or eax, dword ptr [rcx - 1] ; ret
0x000002000035d984 : or eax, dword ptr [rcx - 1] ; ret 0xff48
0x00000200004853b2 : or eax, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; and r8b, bpl ; ret 0xc816
0x00000200005895a7 : or eax, dword ptr [rdi + rcx - 0x49] ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x00000200006d184b : or eax, dword ptr [rdx - 0x73] ; adc al, 0x13 ; xor ecx, ecx ; call rdi
0x00000200006d268a : or eax, dword ptr [rdx - 0x73] ; adc al, 0x16 ; xor ecx, ecx ; call rdi
0x00000200006d6aa3 : or eax, dword ptr [rdx - 0x73] ; adc al, 0x23 ; xor ecx, ecx ; call rdi
0x00000200006d8195 : or eax, dword ptr [rdx - 0x73] ; adc al, 0x26 ; xor ecx, ecx ; call rdi
0x000002000019e161 : or eax, dword ptr [rdx] ; add byte ptr [rax], al ; je 0x2000019e172 ; xor al, al ; ret
0x0000020000251c5a : or eax, dword ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000023b468 : or eax, dword ptr [rsi] ; ret
0x0000020000204c92 : or eax, dword ptr [rsi] ; sysenter
0x0000020000265f21 : or eax, dword ptr es:[rax] ; or eax, 0x26061506 ; ret 0xf01f
0x0000020000218919 : or eax, dword ptr es:[rax] ; or eax, 0x26064b06 ; ret 0xf01f
0x0000020000203fdd : or eax, dword ptr fs:[rax] ; sysenter
0x00000200001a986c : or eax, eax ; jmp 0x200001a9885
0x00000200001ae3c1 : or eax, eax ; jmp 0x200001ae3da
0x00000200000c20d3 : or eax, eax ; mov qword ptr [rdx], rax ; ret
0x000002000007c660 : or eax, eax ; wrmsr ; ret 0
0x0000020000443b93 : or eax, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x4dff
0x00000200004f66c4 : or eax, ebp ; inc dword ptr [rcx - 0xa] ; ret
0x000002000043bf87 : or eax, ebp ; ret
0x0000020000482534 : or eax, ebp ; ret 0xbc6a
0x0000020000107080 : or eax, ebp ; ret 0xfffe
0x0000020000198c91 : or eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010a972 : or eax, ebx ; mov eax, 2 ; ret
0x0000020000038cf5 : or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000006609c : or eax, ecx ; jne 0x200000660af ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000520cf3 : or eax, ecx ; mov ch, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000011ae4b : or eax, ecx ; or rax, rcx ; ret
0x000002000011ae4e : or eax, ecx ; ret
0x00000200001baf43 : or eax, edx ; add rsp, 0x28 ; ret
0x00000200003ac674 : or eax, edx ; mov dword ptr [r10], r8d ; add rsp, 0x28 ; ret
0x00000200000e983c : or eax, edx ; mov eax, r8d ; ret
0x0000020000151e22 : or eax, edx ; pop rdi ; ret
0x00000200005e5898 : or eax, edx ; push rsi ; ret
0x0000020000133cb7 : or eax, edx ; ret
0x0000020000054a19 : or eax, esi ; btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000144323 : or eax, esi ; or dword ptr [rcx + 0x42c], 0x10 ; ret
0x000002000010a971 : or eax, r11d ; mov eax, 2 ; ret
0x000002000007c65f : or eax, r8d ; wrmsr ; ret 0
0x0000020000520da0 : or ebp, dword ptr [rbx] ; ret
0x000002000066a615 : or ebp, dword ptr [rcx + 0x58b48ff] ; jmp 0x2004d666875
0x000002000008e05c : or ebp, dword ptr [rdx - 0x48] ; ret 0x3ecb
0x00000200004d5168 : or ebp, eax ; loop 0x200004d5180 ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000587777 : or ebp, eax ; ret
0x00000200006fe8b0 : or ebp, eax ; ret 0xff9c
0x00000200005a503f : or ebp, eax ; sub edi, dword ptr [rax - 0x7cb7000a] ; ret
0x00000200001826fa : or ebp, eax ; xor dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004853c5 : or ebp, ecx ; ret 0xfffe
0x0000020000608b90 : or ebp, edi ; inc dword ptr [rbx - 0x37f061f3] ; call qword ptr [rax]
0x00000200000ecbe2 : or ebx, 0x10 ; jmp 0x200000ecaf2
0x000002000008dd2c : or ebx, dword ptr [rdi - 0x6b] ; ret
0x00000200000ae88f : or ebx, dword ptr [rdi] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000481a91 : or ebx, dword ptr [rsi - 0x1b] ; push qword ptr [rdx + 0x7644e801] ; ret
0x000002000017654d : or ebx, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000056cccb : or ebx, eax ; mov eax, 0xc000000d ; ret
0x00000200003dd814 : or ebx, ebp ; in al, -0x50 ; cmp ch, bl ; loopne 0x200003dd831 ; ret
0x0000020000610b16 : or ebx, ebx ; push rsi ; ret
0x0000020000426808 : or ebx, esi ; push rdi ; ret 0x3fc
0x00000200004a03d2 : or ebx, esi ; push rsi ; ret
0x00000200004475e6 : or ecx, 0x40 ; shr r9d, 1 ; call 0x2000006b509
0x000002000058d89c : or ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000054c7c : or ecx, dword ptr [rax + 0x3b] ; ret 0x2d73
0x000002000014914a : or ecx, dword ptr [rax + 0x3b] ; ret 0x974
0x000002000003cdcf : or ecx, dword ptr [rax + 0x3b] ; ret 0xae72
0x00000200006d0d57 : or ecx, dword ptr [rax + 0x3b] ; ret 0xda75
0x0000020000032602 : or ecx, dword ptr [rax + 0x3b] ; ret 0xf7c
0x000002000011768d : or ecx, dword ptr [rax - 0x73] ; push rbp ; enter -0x36cd, -0x18 ; jmp rdx
0x00000200004b5c15 : or ecx, dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001b51a1 : or ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7407
0x0000020000032592 : or ecx, dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 3
0x0000020000433b04 : or ecx, dword ptr [rax - 0x75] ; and al, 0x30 ; call rax
0x0000020000431ff7 : or ecx, dword ptr [rax - 0x75] ; and al, 0x48 ; call rax
0x00000200003c917a : or ecx, dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000142d14 : or ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x000002000001f23e : or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000068446 : or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000037287d : or ecx, dword ptr [rax - 0x75] ; retf ; call 0x2000036eaca
0x00000200006d9160 : or ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rdi ; call r12
0x00000200004fbe85 : or ecx, dword ptr [rax - 0x75] ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000200001aa2f0 : or ecx, dword ptr [rax - 0x77] ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000020000127429 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000da7e4 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x000002000064d8bf : or ecx, dword ptr [rax - 0x7d] ; ret 0x4828
0x0000020000026e48 : or ecx, dword ptr [rax - 0x7d] ; ret 0x6602
0x00000200004927bd : or ecx, dword ptr [rax - 0x7d] ; ret 0xe838
0x00000200001b8b7f : or ecx, dword ptr [rax - 0x7d] ; ror byte ptr [rax], 0xff ; ret
0x000002000019fc1d : or ecx, dword ptr [rax - 1] ; ret
0x000002000001ab32 : or ecx, dword ptr [rbp + 0x3b] ; ret 0xc01b
0x0000020000371ef4 : or ecx, dword ptr [rbx + 0x2b412043] ; ret
0x00000200004f8223 : or ecx, dword ptr [rbx + 0x3480841] ; ret 0x3b48
0x000002000011515a : or ecx, dword ptr [rbx + 0x3484040] ; ret
0x000002000017659c : or ecx, dword ptr [rbx + 0x3484041] ; ret 0x3b48
0x0000020000187c70 : or ecx, dword ptr [rbx + 0x3494042] ; ret
0x00000200005a712b : or ecx, dword ptr [rbx - 0x76be6cfc] ; add al, 0x96 ; inc edx ; jmp 0x200005a712d
0x000002000069debb : or ecx, dword ptr [rcx - 0x73] ; clc ; mov rdx, qword ptr [rcx] ; call rdi
0x000002000014485f : or ecx, dword ptr [rcx - 0x75] ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200004fdbf1 : or ecx, dword ptr [rcx - 0x75] ; and byte ptr [r9 - 0x7d], r9b ; ret
0x00000200000f925e : or ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000f4738 : or ecx, dword ptr [rcx - 0x75] ; xor byte ptr [r8 + 0x3b], r9b ; ret
0x00000200000e7f41 : or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200001aa849 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000020000105db1 : or ecx, dword ptr [rdi] ; idiv edi ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000583cc1 : or ecx, dword ptr [rsi + rbp*8 - 1] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000632f03 : or ecx, eax ; ret
0x00000200001428fd : or ecx, ebp ; ret 0xf890
0x00000200001cde18 : or ecx, edi ; inc dword ptr [rbp - 0xf58740] ; ret
0x000002000037d9b4 : or ecx, edx ; cmp ecx, r8d ; sete al ; ret
0x000002000012e7bd : or edi, 0x28 ; jmp 0x2000012e622
0x00000200003b43ca : or edi, 0xffffffff ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200005c4843 : or edi, dword ptr [rbx] ; ret
0x000002000049e495 : or edi, dword ptr [rbx] ; ret 0x470f
0x00000200006352f1 : or edi, ecx ; ret
0x00000200003aa2ff : or edi, edi ; leave ; jne 0x200003aa310 ; lea eax, dword ptr [rcx + 5] ; ret
0x000002000050cf09 : or edi, edi ; mov eax, 0xc000000d ; ret
0x000002000002d942 : or edi, edi ; ret
0x000002000004130f : or edi, edi ; ret 0x2349
0x000002000040e8af : or edi, edi ; ret 0x3b49
0x00000200004664d6 : or edi, edi ; ret 0x9489
0x0000020000427b2c : or edi, edi ; ret 0xfa83
0x00000200001e8191 : or edi, edx ; call qword ptr [rax - 0x123d5a17]
0x00000200001e81a7 : or edi, edx ; call qword ptr [rax - 0x123d7017]
0x0000020000073ebc : or edi, edx ; mov rcx, qword ptr [rip + 0x2d9513] ; call qword ptr [rcx]
0x000002000060e6c2 : or edx, 0xb00000f ; ret 0xc883
0x0000020000710e40 : or edx, 0xffffffff ; call qword ptr [rax]
0x00000200001c43b8 : or edx, 0xffffffff ; cmp ecx, 0x40 ; cmovne eax, edx ; ret
0x00000200000c7ec3 : or edx, 0xffffffff ; jmp 0x200000c7ce0
0x0000020000055bd0 : or edx, 4 ; jmp 0x20000055a3a
0x00000200004b92c7 : or edx, dword ptr [rax] ; call 0x200000771c9
0x00000200001f6428 : or edx, dword ptr [rsi] ; add bl, ch ; adc dh, dh ; ret 0xf03
0x000002000064e6cf : or edx, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200001682d0 : or edx, eax ; mov rax, rdx ; ret
0x00000200000e1a86 : or edx, eax ; xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x00000200004b7b92 : or edx, eax ; xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x0000020000417b7b : or edx, ebp ; ret
0x00000200003d7246 : or edx, ecx ; out dx, eax ; add edi, r14d ; jmp 0x200003d7218
0x0000020000632603 : or edx, ecx ; ret
0x00000200004b7b91 : or edx, r8d ; xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x00000200001ed25d : or esi, 0x18 ; jmp 0x20000119486
0x00000200001ed24c : or esi, 8 ; jmp 0x20000119486
0x0000020000076ec2 : or esi, dword ptr [rbp - 0x1d] ; mov rax, r10 ; pop rbx ; ret
0x000002000006ad4b : or esi, dword ptr [rbp - 0xf] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c0aaa : or esi, dword ptr [rbx] ; rol byte ptr [rbx - 0x61f0f808], cl ; ret 0xc283
0x0000020000100a51 : or esi, dword ptr [rbx] ; ror byte ptr [rcx + 0x3b], cl ; ret 0x3677
0x000002000014463f : or esi, dword ptr [rbx] ; sal byte ptr [rbx], cl ; leave ; call rax
0x00000200001b3945 : or esi, dword ptr [rbx] ; shr al, cl ; ret
0x0000020000481c71 : or esi, dword ptr [rdx] ; ret 0x90ff
0x000002000043b291 : or esi, dword ptr [rsi - 0x71170016] ; cli ; ret 0xe9ff
0x00000200000600c9 : or esi, edi ; ret
0x00000200004ac723 : or esi, esi ; add al, byte ptr [r9] ; jne 0x200004ac736 ; xor eax, eax ; ret
0x00000200001df0db : or esi, esi ; ret
0x00000200005c0ec4 : or esi, esi ; ret 0xf01
0x00000200005cfada : or esi, esi ; ret 0xf02
0x000002000053d902 : or esi, esi ; ret 0xf06
0x0000020000045ce7 : or esi, esi ; ret 0xf20
0x00000200004613fe : or esi, esi ; ret 0xf44
0x0000020000069a4c : or esp, 0xffffffff ; ret
0x00000200003c2a38 : or esp, dword ptr [rip - 0x48f0bc00] ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x0000020000529fda : or esp, dword ptr [rsi + 0x41] ; mov dword ptr [rdi], ecx ; jmp 0x20000529faa
0x000002000019cec1 : or esp, dword ptr [rsi + 0xb] ; enter 0xf41, -0x49 ; ret 0xd166
0x0000020000169a9a : or esp, ebp ; inc esi ; and dword ptr [r8 - 0x75], r9d ; ret
0x000002000064f1ff : or esp, ebx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000915e2 : or esp, edi ; ret
0x00000200001fad59 : or qword ptr [r10], rcx ; add dh, dh ; ret
0x0000020000392749 : or qword ptr [r11 + 0x18], 0xffffffffffffffff ; add rsp, 0x28 ; ret
0x00000200001418ad : or qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000014073f : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0x80070216 ; ret
0x000002000001dbc0 : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0xc0000095 ; ret
0x0000020000174b56 : or qword ptr [r8], rax ; ret
0x000002000001fac4 : or qword ptr [rax], r8 ; add rsp, 0x28 ; ret
0x000002000006ccb0 : or qword ptr [rax], r8 ; jmp 0x2000006cca9
0x00000200006d5780 : or qword ptr [rax], rax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200004c6011 : or qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141d74 : or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000050cf07 : or qword ptr [rcx], 0xffffffffffffffff ; mov eax, 0xc000000d ; ret
0x000002000002d940 : or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000037138f : or qword ptr [rip - 0x1a137], 1 ; ret
0x00000200003653aa : or qword ptr [rip - 0xe152], 2 ; ret
0x00000200001724a3 : or r10b, byte ptr [r14] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000261fd0 : or r10b, byte ptr [rdx] ; hlt ; ret
0x000002000035e7c3 : or r11b, bpl ; leave ; ret
0x0000020000171d25 : or r11b, bpl ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x000002000005ff81 : or r11b, bpl ; ret 0xc5ff
0x000002000008dd2b : or r11d, dword ptr [rdi - 0x6b] ; ret
0x000002000008e14a : or r12b, byte ptr [r15 - 0x7f] ; ret
0x0000020000596fbd : or r13b, 0xff ; add rsp, 0x28 ; ret
0x00000200005f8e9a : or r15b, dil ; call rax
0x00000200001c0c36 : or r15b, r15b ; ret 0xca8b
0x000002000017f787 : or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x000002000059e06e : or r8b, bpl ; imul edx ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000434d7c : or r8b, bpl ; popfq ; lodsd eax, dword ptr [rsi] ; ret
0x00000200001adcdd : or r8b, bpl ; ret
0x00000200005291c7 : or r8b, bpl ; ret 0xaf2f
0x00000200005bbef3 : or r8b, r13b ; ret 0xebe1
0x00000200000e9860 : or r8d, 8 ; mov eax, r8d ; ret
0x00000200000e983b : or r8d, edx ; mov eax, r8d ; ret
0x00000200000ce2ef : or r9b, byte ptr [rbp + 0x3b] ; ret
0x000002000048d14d : or r9b, byte ptr [rcx + 0x2b] ; ret
0x00000200000e4726 : or rax, 0x3b410019 ; ret
0x0000020000154929 : or rax, 0xffffffffffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000371566 : or rax, 1 ; mov qword ptr [rdx], rax ; ret
0x00000200001a986b : or rax, r8 ; jmp 0x200001a9886
0x00000200001ae3c0 : or rax, r8 ; jmp 0x200001ae3db
0x00000200000c20d2 : or rax, r8 ; mov qword ptr [rdx], rax ; ret
0x000002000011ae4a : or rax, r9 ; or rax, rcx ; ret
0x0000020000198c90 : or rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011ae4d : or rax, rcx ; ret
0x00000200001baf42 : or rax, rdx ; add rsp, 0x28 ; ret
0x0000020000151e21 : or rax, rdx ; pop rdi ; ret
0x0000020000133cb6 : or rax, rdx ; ret
0x00000200001682cf : or rdx, rax ; mov rax, rdx ; ret
0x00000200001f4c56 : or sil, byte ptr [r11] ; sal dh, 1 ; ret 0xf08
0x00000200000ead60 : or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x00000200003d7b46 : out -0x10, eax ; inc dword ptr [rbx] ; ret
0x00000200001e2790 : out -0x17, eax ; ret 0xedf5
0x000002000048c915 : out -0x2f, eax ; ret 0x65ff
0x000002000050b7bd : out -0x48, eax ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000064fac5 : out -0x4b, eax ; add dword ptr [rax], eax ; ret
0x00000200006655e4 : out -0x56, eax ; ret 0xbff
0x00000200001bd995 : out -0x5e, eax ; sbb dword ptr [rax], eax ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x200001bd9a9
0x000002000045a941 : out -0x75, eax ; ret 0xc148
0x00000200006660ed : out -0x76, eax ; ret 0x8bff
0x00000200001009e3 : out -0x78, eax ; adc eax, 0x1e737c ; ret
0x0000020000545a99 : out -0x7f, eax ; out -1, eax ; add rsp, 0x68 ; ret
0x0000020000438f15 : out -0x80, eax ; ret
0x00000200001a3acf : out -0xd, eax ; ret
0x0000020000425266 : out -1, eax ; add rsp, 0x28 ; ret
0x00000200001a3c9b : out -1, eax ; add rsp, 0x38 ; ret
0x00000200001a392e : out -1, eax ; add rsp, 0x48 ; ret
0x0000020000545a48 : out -1, eax ; add rsp, 0x68 ; ret
0x000002000042517e : out -1, eax ; jne 0x20000425187 ; ret
0x000002000041b581 : out -1, eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001f7fcd : out -1, eax ; nop ; jmp 0x20000034250
0x00000200004c5bff : out -1, eax ; ret
0x0000020000538545 : out -1, eax ; ret 0x348
0x00000200005546af : out -1, eax ; ret 0x7489
0x0000020000635325 : out -6, eax ; ret
0x000002000038468a : out 0, eax ; add al, al ; ret
0x000002000015a8e5 : out 0x18, eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003a9fdc : out 0x23, eax ; ret 0x1b9
0x00000200003b4aed : out 0x27, al ; add byte ptr [rbx - 0x7cf0e701], al ; ret
0x0000020000090031 : out 0x27, al ; ret 0xbe64
0x00000200000a8e5c : out 0x2b, eax ; ret
0x0000020000081298 : out 0x30, al ; push rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x000002000001b00a : out 0x30, eax ; ret 0x3b88
0x000002000023d24c : out 0x32, al ; add byte ptr [rax], r12b ; ret 0x23
0x00000200001de5a1 : out 0x3b, eax ; ret
0x00000200003a9fe7 : out 0x3b, eax ; ret 0x8b48
0x00000200005de47c : out 0x41, eax ; mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200000e986b : out 0x41, eax ; mov eax, eax ; ret
0x00000200004baf3f : out 0x44, al ; mov byte ptr [rdx + 1], dl ; xor eax, eax ; ret
0x0000020000425355 : out 0x47, eax ; out 0xff, al ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000661036 : out 0x48, al ; add esp, 0x20 ; pop rbx ; ret
0x0000020000012a84 : out 0x48, eax ; add esp, 0x20 ; pop rbx ; ret
0x000002000048c4b8 : out 0x48, eax ; mov dword ptr [rdx], ecx ; ret
0x0000020000141637 : out 0x48, eax ; mov eax, ecx ; add rsp, 0x38 ; ret
0x00000200001540a0 : out 0x48, eax ; mov eax, ecx ; ret
0x00000200003718b6 : out 0x49, eax ; mov ecx, edi ; call 0x2000014db86
0x000002000008a6be : out 0x4b, eax ; cwde ; movsxd rdi, esi ; ret
0x00000200006c2175 : out 0x58, eax ; mov ebx, 0xff4d77ff ; ret
0x0000020000669f75 : out 0x61, eax ; ret 0x48ff
0x00000200006491ce : out 0x67, al ; add al, 0 ; add rsp, 0x48 ; ret
0x00000200004257e5 : out 0x71, eax ; ret
0x0000020000648535 : out 0x7a, eax ; add al, 0 ; add rsp, 0x48 ; ret
0x0000020000668276 : out 0x7e, al ; ret 0x48ff
0x000002000012edce : out 0x86, al ; and al, byte ptr [rax] ; call rax
0x00000200001419b5 : out 0x8a, al ; ret 0x90c3
0x000002000062591e : out 0x9f, al ; call qword ptr [rax - 0x28ef3d17]
0x000002000064f555 : out 0xa, eax ; ret 0x48ff
0x000002000062a6b0 : out 0xac, al ; call qword ptr [rax - 0x12063d17]
0x000002000047ea81 : out 0xb0, al ; add ebx, eax ; xor al, al ; ret
0x00000200004ab56a : out 0xc3, al ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000056e422 : out 0xc3, al ; ret 0x48ff
0x0000020000584c4e : out 0xd3, al ; mov eax, 0x8acb8aff ; ret
0x00000200001e1a8e : out 0xe9, al ; ret
0x00000200003b5c9e : out 0xe9, al ; ret 0x1566
0x0000020000073bb9 : out 0xeb, al ; or al, 0x49 ; mov eax, ebx ; ret
0x0000020000017061 : out 0xf, al ; mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200000f8e7b : out 0xf, eax ; add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 3] ; ret 0x789
0x00000200005bc158 : out 0xf, eax ; test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xc32b
0x0000020000132aa6 : out 0xf0, al ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000046a0d1 : out 0xf6, al ; ret
0x0000020000425357 : out 0xff, al ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x0000020000405077 : out 0xff, al ; add rsp, 0x28 ; ret
0x00000200005997ed : out 0xff, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001baf12 : out 0xff, al ; add rsp, 0x38 ; ret
0x00000200001b9034 : out 0xff, al ; add rsp, 0x48 ; ret
0x0000020000483b6b : out 0xff, al ; call 0x200000a97e9
0x00000200005d3f9d : out 0xff, al ; call rax
0x00000200006019cf : out 0xff, al ; mov eax, 0x40000017 ; jmp 0x2000046dc7f
0x00000200005fcc65 : out 0xff, al ; mov eax, 0xc00000f1 ; jmp 0x20000468f56
0x00000200004f84a8 : out 0xff, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000477d40 : out 1, al ; add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; call 0x20000023fb9
0x00000200003f7932 : out 1, al ; add byte ptr [rax], al ; jne 0x200003f78e5 ; call 0x20000023fb9
0x00000200003f828b : out 1, al ; add byte ptr [rax], al ; jne 0x200003f8278 ; call 0x20000023fb9
0x00000200003f9815 : out 1, al ; add byte ptr [rax], al ; jne 0x200003f9806 ; call 0x20000023fb9
0x00000200003fc642 : out 1, al ; add byte ptr [rax], al ; jne 0x200003fc619 ; call 0x20000023fb9
0x00000200003fd761 : out 1, al ; add byte ptr [rax], al ; jne 0x200003fd741 ; call 0x20000023fb9
0x00000200003fd9af : out 1, al ; add byte ptr [rax], al ; jne 0x200003fd980 ; call 0x20000023fb9
0x00000200003ffd4f : out 1, al ; add byte ptr [rax], al ; jne 0x200003ffd25 ; call 0x20000023fb9
0x00000200003ffdc2 : out 1, al ; add byte ptr [rax], al ; jne 0x200003ffda2 ; call 0x20000023fb9
0x00000200005b7d9b : out 1, al ; add byte ptr [rax], al ; jne 0x200005b7dae ; call 0x20000023fb8
0x00000200005d7cc0 : out 1, al ; add byte ptr [rax], al ; jne 0x200005d7cd3 ; call 0x20000023fb8
0x00000200000bdf9c : out 1, al ; add byte ptr [rax], al ; ret
0x00000200000ea05f : out 3, al ; add dh, dh ; ret
0x0000020000083959 : out 5, eax ; add byte ptr [r8], al ; add byte ptr [rax], al ; ret 0xdf27
0x0000020000438f0e : out dx, al ; add bl, 0xff ; jmp 0x20000438eaa
0x0000020000470f4e : out dx, al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf03
0x000002000016382e : out dx, al ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200000558f6 : out dx, al ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200006e3c6e : out dx, al ; add dword ptr [rsi + 0x3d0], edi ; mov rax, rdx ; jmp 0x200006e3c85
0x00000200004d015e : out dx, al ; add edi, dword ptr [rcx - 0x3b7cb701] ; ret
0x000002000054c2b9 : out dx, al ; add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x000002000012cd2e : out dx, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005abad5 : out dx, al ; add rsp, 0x28 ; ret
0x000002000038b65c : out dx, al ; and al, 0 ; mov al, 1 ; ret
0x000002000041c4c5 : out dx, al ; and eax, 0x1f ; ret
0x0000020000527c26 : out dx, al ; and eax, 0x8a44ffb6 ; ret
0x0000020000443805 : out dx, al ; call 0x20000072e44
0x0000020000133290 : out dx, al ; call qword ptr [rax - 0x5043d17]
0x00000200001e6490 : out dx, al ; cmc ; dec dword ptr [rax + 0x33] ; ret 0x8549
0x0000020000131c32 : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000609ca1 : out dx, al ; dec dword ptr [rbx - 0x3ef00f3d] ; add dword ptr [rbx], eax ; ret
0x00000200001e9436 : out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200000c6b68 : out dx, al ; idiv edi ; inc dword ptr [rcx - 0xa] ; ret
0x000002000056dacb : out dx, al ; inc dword ptr [rbp + 0x33] ; leave ; call 0x2000019a814
0x000002000062194a : out dx, al ; inc dword ptr [rbx - 0x1704ef9d] ; pop rbx ; ret
0x000002000012e068 : out dx, al ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001e121d : out dx, al ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001c1a6a : out dx, al ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000914b0 : out dx, al ; jp 0x2000009150b ; ret 0x7ec2
0x0000020000076e54 : out dx, al ; lea rax, qword ptr [rdx - 1] ; pop rbx ; ret
0x00000200000badb9 : out dx, al ; mov al, 1 ; ret
0x00000200004fea65 : out dx, al ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000569a44 : out dx, al ; mov dword ptr [rip - 0x273a33], edx ; xor eax, eax ; ret
0x000002000000ade2 : out dx, al ; mov dword ptr [rip - 0x7bfa7500], ecx ; ret 0x34
0x00000200003b0129 : out dx, al ; mov eax, 0xc0000058 ; ret
0x000002000014df86 : out dx, al ; mov eax, 0xc00000bb ; ret
0x0000020000005880 : out dx, al ; mov eax, 1 ; ret
0x0000020000020eea : out dx, al ; mov rax, rdx ; ret
0x000002000019c0fe : out dx, al ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200001025c3 : out dx, al ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000014ce51 : out dx, al ; or dword ptr [rcx], ecx ; add byte ptr [rcx - 0x7d], cl ; ret 0x4818
0x000002000017506b : out dx, al ; or eax, 0xffffffff ; ret
0x0000020000443804 : out dx, al ; out dx, al ; call 0x20000072e45
0x000002000042b622 : out dx, al ; pop rbx ; ret
0x0000020000122bc2 : out dx, al ; push rsi ; ret
0x00000200001e1202 : out dx, al ; push rsi ; ret 0x7401
0x000002000013b15e : out dx, al ; pushfq ; idiv bh ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000147ca4 : out dx, al ; ret
0x000002000036448a : out dx, al ; ret 0
0x0000020000443fa8 : out dx, al ; ret 0x48ff
0x0000020000443f95 : out dx, al ; ret 0xb8ff
0x0000020000085e74 : out dx, al ; ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x00000200001e0541 : out dx, al ; sbb al, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000137528 : out dx, al ; xor al, al ; ret
0x00000200006ec90b : out dx, eax ; adc eax, 0x2b44df03 ; ret
0x00000200003c2edd : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0xff48
0x0000020000391c1c : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000462153 : out dx, eax ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200001a1b3b : out dx, eax ; add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200003d7248 : out dx, eax ; add edi, r14d ; jmp 0x200003d7216
0x000002000064c971 : out dx, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002beb1 : out dx, eax ; call 0x1ffc2eabee5
0x0000020000597ce6 : out dx, eax ; call 0x20000593f7b
0x000002000048b9d1 : out dx, eax ; call rax
0x0000020000018046 : out dx, eax ; cmp ax, dx ; jne 0x20000018059 ; mov rax, rcx ; ret
0x00000200004b0614 : out dx, eax ; cmp rax, r8 ; je 0x200004b05ea ; ret
0x000002000045b0eb : out dx, eax ; dec dword ptr [rax + 0x3b] ; ret 0x5977
0x00000200005e79fc : out dx, eax ; dec dword ptr [rax - 0x73] ; sub byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200005d7fb1 : out dx, eax ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004918ea : out dx, eax ; dec dword ptr [rax - 0x75] ; call 0x200000b9b09
0x0000020000398336 : out dx, eax ; dec dword ptr [rax - 0x7d] ; ret
0x000002000019aac9 : out dx, eax ; dec dword ptr [rbp - 0x75] ; ret
0x00000200001ecffc : out dx, eax ; dec dword ptr [rcx - 0x73] ; adc r9b, byte ptr [r8 + 3] ; ret
0x0000020000549dba : out dx, eax ; inc dword ptr [rbp - 0x74fb8625] ; ret
0x00000200001d90c9 : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000608b91 : out dx, eax ; inc dword ptr [rbx - 0x37f061f3] ; call qword ptr [rax]
0x000002000062f47e : out dx, eax ; inc dword ptr [rbx - 0x7cf0fa02] ; ret
0x00000200005e7f78 : out dx, eax ; inc dword ptr [rcx + rcx*4 + 0x35] ; ret
0x0000020000617afe : out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200004601aa : out dx, eax ; inc dword ptr [rcx - 0xa] ; ret
0x00000200001dd001 : out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200001d8d9b : out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005e7a20 : out dx, eax ; jmp qword ptr [rcx]
0x000002000048b8d2 : out dx, eax ; lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r10 ; call rax
0x000002000064303a : out dx, eax ; lodsb al, byte ptr [rsi] ; je 0x20000643049 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000019e41d : out dx, eax ; mov al, 1 ; ret
0x00000200000f5fed : out dx, eax ; mov byte ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200001766cc : out dx, eax ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000404d1b : out dx, eax ; mov eax, 0xc000000d ; ret
0x000002000056ccc2 : out dx, eax ; mov eax, 0xc0000225 ; ret
0x000002000050542d : out dx, eax ; mov eax, 0xff41ffd7 ; ret
0x00000200001a68a2 : out dx, eax ; mov eax, edx ; ret
0x00000200001547f2 : out dx, eax ; mov rax, rcx ; ret
0x0000020000105866 : out dx, eax ; mov word ptr [r10], cx ; add rsp, 0x28 ; ret
0x0000020000020e60 : out dx, eax ; mov word ptr [rcx], r9w ; add rsp, 0x28 ; ret
0x00000200003f9abd : out dx, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xebff
0x0000020000083852 : out dx, eax ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add al, bh ; sysenter
0x00000200001428fc : out dx, eax ; or ecx, ebp ; ret 0xf890
0x00000200000e985f : out dx, eax ; or r8d, 8 ; mov eax, r8d ; ret
0x0000020000621949 : out dx, eax ; out dx, al ; inc dword ptr [rbx - 0x1704ef9d] ; pop rbx ; ret
0x0000020000398bac : out dx, eax ; push qword ptr [rbp - 0x53] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000133437 : out dx, eax ; push rsi ; ret
0x00000200004626e8 : out dx, eax ; push rsi ; ret 0x7501
0x00000200001d9096 : out dx, eax ; push rsi ; ret 0xf07
0x00000200000eac85 : out dx, eax ; ret
0x00000200003f5063 : out dx, eax ; ret 0x48ff
0x0000020000443e90 : out dx, eax ; ret 0x4dff
0x000002000048ab19 : out dx, eax ; ret 0x65ff
0x000002000051b7f7 : out dx, eax ; ret 0x8bff
0x0000020000143a2d : out dx, eax ; ret 0xfff0
0x00000200006600a1 : out dx, eax ; ret 0xffff
0x00000200004e4524 : out dx, eax ; sbb dword ptr [rax], eax ; ret
0x00000200006f2cb8 : out dx, eax ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200005a8d5d : out dx, eax ; shr byte ptr [rdi - 0x3b7cb701], 0x68 ; ret
0x00000200000bdd12 : out dx, eax ; test al, 2 ; jne 0x200000bdd28 ; xor al, al ; ret
0x00000200001dd9d0 : out dx, eax ; xchg dh, ah ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000053157f : out dx, eax ; xor al, al ; ret
0x0000020000657f79 : out dx, eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000643f90 : out dx, eax ; xor eax, eax ; ret
0x0000020000648d15 : outsb dx, byte ptr [rsi] ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000648cfb : outsb dx, byte ptr [rsi] ; add al, 0 ; add rsp, 0x48 ; ret
0x00000200005a98dc : outsb dx, byte ptr [rsi] ; add al, 0x72 ; ret 0x8d48
0x0000020000597401 : outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x000002000035fbdf : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000049f5c5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax + 0x3b], ecx ; ret
0x000002000050a105 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000002e6a7 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000d9df1 : outsb dx, byte ptr [rsi] ; add edi, esi ; ret
0x0000020000539bd9 : outsb dx, byte ptr [rsi] ; and al, 0x72 ; ret
0x000002000057b873 : outsb dx, byte ptr [rsi] ; and bl, ch ; adc dword ptr [rbp + rcx*4 + 5], ecx ; ret 0xed2e
0x000002000061639c : outsb dx, byte ptr [rsi] ; and ebx, edi ; push rsi ; ret
0x000002000042b832 : outsb dx, byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4dff
0x0000020000552dc6 : outsb dx, byte ptr [rsi] ; jo 0x20000552e26 ; call 0x2000026f015
0x0000020000562d18 : outsb dx, byte ptr [rsi] ; jo 0x20000562d57 ; mov rcx, rdi ; call 0x2000026f018
0x0000020000562d2a : outsb dx, byte ptr [rsi] ; jo 0x20000562d69 ; mov rcx, r14 ; call 0x2000026f018
0x00000200006300f5 : outsb dx, byte ptr [rsi] ; lahf ; call qword ptr [rax - 0x2afd3d17]
0x0000020000544e01 : outsb dx, byte ptr [rsi] ; mov dl, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000055fda1 : outsb dx, byte ptr [rsi] ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000446594 : outsb dx, byte ptr [rsi] ; mov rcx, rbx ; call 0x20000072d77
0x0000020000446593 : outsb dx, byte ptr [rsi] ; mov rcx, rbx ; call 0x20000072d78
0x000002000009f6ef : outsb dx, byte ptr [rsi] ; movsd dword ptr [rdi], dword ptr [rsi] ; mov bl, 0xc4 ; mov gs, word ptr [rax + 0x68] ; ret 0xbe48
0x00000200001ed222 : outsb dx, byte ptr [rsi] ; push rbx ; int1 ; push qword ptr [rbx] ; shr cl, 0xf8 ; ret 0xfff2
0x000002000008e2d2 : outsb dx, byte ptr [rsi] ; ret
0x0000020000667072 : outsb dx, byte ptr [rsi] ; ret 0x48ff
0x00000200006670e8 : outsb dx, byte ptr [rsi] ; ret 0x89ff
0x000002000064ad9e : outsb dx, byte ptr [rsi] ; ret 0xccff
0x00000200006679c6 : outsb dx, byte ptr [rsi] ; ret 0xe8ff
0x00000200004d3dce : outsb dx, byte ptr [rsi] ; ret 0xffd9
0x000002000041f44e : outsb dx, byte ptr [rsi] ; sahf ; ret
0x00000200000a44a7 : outsb dx, byte ptr [rsi] ; sbb byte ptr [rcx - 0x75], al ; ret
0x0000020000125fae : outsb dx, byte ptr [rsi] ; sbb byte ptr [rdi], cl ; test eax, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004ac43e : outsb dx, byte ptr [rsi] ; sbb eax, 0x2896600 ; ret
0x0000020000027e76 : outsb dx, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000644d9e : outsb dx, byte ptr [rsi] ; sub byte ptr [rax - 0x77], cl ; and al, r13b ; ret
0x000002000036ee02 : outsb dx, byte ptr [rsi] ; sub byte ptr [rbp + rcx*4 + 0x24], al ; or ah, byte ptr [rsi - 0x7d] ; ret 0x4806
0x00000200005fa2a6 : outsb dx, byte ptr [rsi] ; sub esp, esi ; push rsi ; ret
0x000002000008e77a : outsb dx, byte ptr [rsi] ; xchg eax, ebx ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000666fdd : outsd dx, dword ptr [esi] ; ret 0x48ff
0x0000020000481e25 : outsd dx, dword ptr [rsi] ; adc al, 0xe8 ; and al, 0x1b ; ret 0x45ff
0x00000200005facfa : outsd dx, dword ptr [rsi] ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000aec6e : outsd dx, dword ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x0000020000157409 : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x0000020000648c50 : outsd dx, dword ptr [rsi] ; add al, 0 ; add rsp, 0x48 ; ret
0x000002000035fbf1 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000025d48d : outsd dx, dword ptr [rsi] ; add byte ptr [rax + 0x4004870], cl ; jmp qword ptr [rbx]
0x000002000057584a : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000013c45 : outsd dx, dword ptr [rsi] ; cmp byte ptr [rax + rax], dh ; call rax
0x00000200003b39b6 : outsd dx, dword ptr [rsi] ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000015552d : outsd dx, dword ptr [rsi] ; enter -0x10, -0x75 ; ret
0x00000200004e4518 : outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200001c8bcf : outsd dx, dword ptr [rsi] ; jne 0x200001c8bbd ; inc dword ptr [rcx - 0xa] ; ret
0x000002000048e54d : outsd dx, dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; in al, -1 ; mov edi, eax ; call 0x200000b9b09
0x0000020000544c87 : outsd dx, dword ptr [rsi] ; mov dl, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001005ad : outsd dx, dword ptr [rsi] ; mov eax, 0xe990fffd ; ret
0x00000200001ced6e : outsd dx, dword ptr [rsi] ; mov qword ptr [rdi + 0x68], r12 ; call rbx
0x0000020000580add : outsd dx, dword ptr [rsi] ; mov r10b, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001803de : outsd dx, dword ptr [rsi] ; or al, ch ; scasd eax, dword ptr [rdi] ; add bl, bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000415d9d : outsd dx, dword ptr [rsi] ; out dx, al ; ret
0x00000200004601a9 : outsd dx, dword ptr [rsi] ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret
0x00000200004259ed : outsd dx, dword ptr [rsi] ; popfq ; ret 0xfff
0x000002000009f712 : outsd dx, dword ptr [rsi] ; ret
0x0000020000524eb3 : outsd dx, dword ptr [rsi] ; ret 0x48ff
0x00000200005234cb : outsd dx, dword ptr [rsi] ; ret 0x83ff
0x0000020000478ded : outsd dx, dword ptr [rsi] ; ret 0xffc3
0x000002000063fbcd : outsd dx, dword ptr [rsi] ; ret 0xffc8
0x0000020000659ed5 : outsd dx, dword ptr [rsi] ; ret 0xffc9
0x00000200001e96af : outsd dx, dword ptr [rsi] ; ret 0xffee
0x000002000047617b : outsd dx, dword ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200006365b5 : outsd dx, dword ptr [rsi] ; sar edi, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000644329 : outsd dx, dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; ret
0x00000200006622d5 : outsd dx, dword ptr [rsi] ; xchg eax, edi ; ret 0xb2ff
0x000002000001050e : outsd dx, dword ptr [rsi] ; xor al, 0 ; call rax
0x0000020000469a7b : outsd dx, dword ptr [rsi] ; xor dh, dh ; ret
0x00000200000dd75f : paddd mm7, mm7 ; add rsp, 0x68 ; ret
0x00000200001170a4 : pause ; ret
0x000002000006cdcb : pause ; xor al, al ; ret
0x0000020000174841 : pause ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004e7221 : pavgb mm7, mm7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ae501 : pcmpeqb mm0, qword ptr [rip + 0x28c48348] ; ret
0x00000200004155df : pcmpeqb mm1, qword ptr [rax] ; mov rcx, r15 ; call 0x200000392bd
0x00000200004fa490 : pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x00000200001b6af8 : pcmpeqw mm0, qword ptr [rdx + rcx*4] ; ret 0x8eb
0x0000020000204f7c : pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x00000200003a5841 : pcmpgtb mm6, mm2 ; call qword ptr [rdx]
0x0000020000491006 : pcmpgtd mm1, qword ptr [rcx + 0x2b49b95d] ; ret
0x000002000048277a : pop qword ptr [rax - 0x18000000] ; jl 0x200004827fd ; ret
0x000002000048288c : pop qword ptr [rax - 0x18000000] ; push 0x72 ; ret
0x0000020000387e31 : pop qword ptr [rax - 0x75000000] ; fsubr st(0) ; ret
0x00000200001efa5d : pop qword ptr [rax - 0x75000000] ; salc ; call rax
0x00000200000e92e2 : pop qword ptr [rax] ; add bl, ch ; mov dh, dh ; ret
0x00000200003f806b : pop qword ptr [rax] ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000091936 : pop qword ptr [rcx + 0x6a] ; sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x000002000018c8cb : pop qword ptr [rcx - 0x73] ; add qword ptr [r8 - 0x75], rcx ; ret
0x00000200007087ff : pop qword ptr [rcx - 1] ; ret 0x345
0x00000200004c4fa2 : pop qword ptr [rip + 0x2bc68b00] ; ret 0x3b44
0x00000200000905bb : pop r10 ; and eax, dword ptr [rcx] ; ret 0xfa65
0x0000020000360400 : pop r12 ; mov r9, rcx ; je 0x20000360414 ; mov al, r10b ; ret
0x0000020000061b63 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200003d25ad : pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000017e5a : pop r12 ; pop rbp ; ret
0x00000200000250cf : pop r12 ; pop rbx ; pop rbp ; ret
0x00000200000460e4 : pop r12 ; pop rbx ; ret
0x0000020000016153 : pop r12 ; pop rcx ; ret
0x0000020000466f62 : pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e04 : pop r12 ; pop rdi ; pop rbp ; pop rcx ; ret
0x000002000001fe05 : pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f9a9f : pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c584b : pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001624c9 : pop r12 ; pop rdi ; pop rcx ; ret
0x00000200000aacd6 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496c : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d2a : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f70 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008883 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e13 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d8 : pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000006d99 : pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000004641 : pop r12 ; pop rdi ; ret
0x0000020000163059 : pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000001e716 : pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000516dc : pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000044004 : pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af94a : pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000320e3 : pop r12 ; pop rsi ; ret
0x000002000000432e : pop r12 ; ret
0x00000200003d25ab : pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000017e58 : pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000c9d97 : pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200000460e2 : pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000016151 : pop r13 ; pop r12 ; pop rcx ; ret
0x0000020000466f60 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e02 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rcx ; ret
0x00000200000f05a0 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004040f7 : pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c5849 : pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000aacd4 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496a : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d28 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f6e : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000013a40 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e11 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d6 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000007a59 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000000463f : pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000163057 : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000001e714 : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000516da : pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000044002 : pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003d1f01 : pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000005d4c2 : pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000398a3 : pop r13 ; pop r12 ; ret
0x0000020000061b65 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000ab1ae : pop r13 ; pop rbp ; pop rbx ; ret
0x000002000014d9ad : pop r13 ; pop rbp ; ret
0x0000020000071711 : pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000df3d7 : pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7eaf : pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c0b8b : pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000aa2da : pop r13 ; pop rdi ; pop rbx ; pop rcx ; ret
0x0000020000133b19 : pop r13 ; pop rdi ; pop rbx ; ret
0x0000020000069a29 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000025531 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b1c41 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000505f1 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e5 : pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d5373 : pop r13 ; pop rdi ; ret
0x00000200000ea247 : pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1448 : pop r13 ; pop rsi ; pop rbp ; ret
0x00000200000cf5fb : pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004a800 : pop r13 ; pop rsi ; pop rbx ; ret
0x00000200000d635f : pop r13 ; pop rsi ; ret
0x000002000000278b : pop r13 ; ret
0x0000020000643e8c : pop r14 ; jmp rax
0x00000200004791db : pop r14 ; pop r12 ; pop rbp ; ret
0x00000200000250cd : pop r14 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000001fe03 : pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f9a9d : pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001624c7 : pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000003defa : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d5dcd : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008881 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b0dd9 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006d97 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000001ba07 : pop r14 ; pop r12 ; pop rdi ; ret
0x00000200003d6075 : pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006f3b1 : pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af948 : pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000320e1 : pop r14 ; pop r12 ; pop rsi ; ret
0x000002000000432c : pop r14 ; pop r12 ; ret
0x0000020000017e56 : pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000001614f : pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x0000020000466f5e : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e00 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rcx ; ret
0x00000200000f059e : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004040f5 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000132919 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000004f6c : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003e0f : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d4 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000007a57 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000000463d : pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000001e712 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d21fb : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000044000 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d4c0 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000398a1 : pop r14 ; pop r13 ; pop r12 ; ret
0x000002000046c813 : pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000014d9ab : pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000466880 : pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a8ede : pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000133b17 : pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x0000020000069a27 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002552f : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b1c3f : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000505ef : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e3 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d5371 : pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ea245 : pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1446 : pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000002789 : pop r14 ; pop r13 ; ret
0x0000020000061b67 : pop r14 ; pop r15 ; ret
0x000002000010970e : pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000038a2 : pop r14 ; pop rbp ; ret
0x0000020000463c60 : pop r14 ; pop rbx ; ret
0x0000020000016565 : pop r14 ; pop rcx ; ret
0x0000020000464c9a : pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000006612 : pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ef290 : pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000af055 : pop r14 ; pop rdi ; pop rbx ; ret
0x000002000001aba8 : pop r14 ; pop rdi ; pop rcx ; ret
0x00000200000644a8 : pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005243d : pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071d53 : pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000382f1 : pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001423d7 : pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000041b4 : pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007032 : pop r14 ; pop rdi ; ret
0x00000200003cff81 : pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000045b512 : pop r14 ; pop rsi ; pop rbp ; ret
0x000002000005e317 : pop r14 ; pop rsi ; ret
0x000002000000505c : pop r14 ; ret
0x000002000066a2d1 : pop r14 ; ret 0x48ff
0x00000200007021d5 : pop r15 ; mov esi, 0x8b08ebff ; ret
0x000002000060589f : pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000c7c62 : pop r15 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004385a5 : pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000539ea : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000049d175 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006f3907 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000fb1f9 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000013b1f9 : pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000c1890 : pop r15 ; pop r12 ; pop rsi ; ret
0x0000020000164d78 : pop r15 ; pop r12 ; ret
0x00000200003d25a9 : pop r15 ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000051de02 : pop r15 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000048a37a : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000046155a : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c5847 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000caeed : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000025ebd : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000a35d2 : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200003d1eff : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000edffd : pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003ad742 : pop r15 ; pop r13 ; pop rbp ; ret
0x000002000007170f : pop r15 ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000df3d5 : pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7ead : pop r15 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c0b89 : pop r15 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003fa459 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bfce8 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000438996 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000050ca09 : pop r15 ; pop r13 ; pop rdi ; ret
0x00000200000abd29 : pop r15 ; pop r13 ; ret
0x000002000001fe01 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f9a9b : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001624c5 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200000d5dcb : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b0dd7 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006d95 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000eac2b : pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200003d6073 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000dd83c : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af946 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000320df : pop r15 ; pop r14 ; pop r12 ; pop rsi ; ret
0x000002000000432a : pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000017e54 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000001614d : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x000002000000463b : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000005d4be : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000006b818 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000014d9a9 : pop r15 ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000a8edc : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000133b15 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200004a87ec : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000011090c : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e1 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d536f : pop r15 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ea243 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1444 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000002787 : pop r15 ; pop r14 ; pop r13 ; ret
0x000002000010970c : pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000038a0 : pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000016563 : pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000464c98 : pop r15 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000ef28e : pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003e0930 : pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000e2c74 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005243b : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001bc850 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000047f94 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001423d5 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200003b85c0 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007030 : pop r15 ; pop r14 ; pop rdi ; ret
0x000002000005e315 : pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000006395 : pop r15 ; pop r14 ; ret
0x00000200005d0d3d : pop r15 ; pop rbx ; pop rbp ; ret
0x00000200000e9561 : pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000011904e : pop r15 ; pop rdi ; pop rbp ; ret
0x000002000055252a : pop r15 ; pop rdi ; pop rbx ; ret
0x000002000019a930 : pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000026df0 : pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d9e9b : pop r15 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003a024 : pop r15 ; pop rdi ; pop rsi ; ret
0x00000200003d7b3b : pop r15 ; pop rdi ; ret
0x00000200000dbb6d : pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000492a3 : pop r15 ; pop rsi ; pop rbx ; ret
0x000002000002cab8 : pop r15 ; ret
0x00000200000beea7 : pop r8 ; and rax, 0xfffffffffffffff9 ; ret
0x00000200005f8e97 : pop r8 ; dec dword ptr [rbx + 8] ; inc dword ptr [rbx + 0x40] ; call rax
0x0000020000056e33 : pop r8 ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200000362c9 : pop r8 ; ret
0x0000020000159eba : pop r9 ; add rsp, 0x28 ; ret
0x00000200004ee930 : pop r9 ; call rax
0x00000200004f8191 : pop rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006d6d34 : pop rax ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000159801 : pop rax ; adc dword ptr [rax], eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200000d8875 : pop rax ; add al, 0xf ; ret
0x000002000035fb50 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200001f9de5 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xe1e6
0x0000020000011238 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000485214 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000011b4c : pop rax ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfff6
0x0000020000255202 : pop rax ; add bh, dl ; ret 0x58
0x000002000013cd07 : pop rax ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x0000020000661fb8 : pop rax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000657ca4 : pop rax ; add byte ptr [rax], 0 ; ret
0x00000200004fb2a4 : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d1068 : pop rax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000255206 : pop rax ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, bl ; ret 0x58
0x00000200000c12b6 : pop rax ; add byte ptr [rdi], cl ; test dword ptr [rdi - 0x9000007], ebp ; ret
0x0000020000040e78 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x00000200004f4ccf : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x0000020000621a4d : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200005b0ea0 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200004621c6 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200000c1c74 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000101b75 : pop rax ; add rdx, rax ; jmp 0x20000101b42
0x00000200000c89c3 : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000f927e : pop rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000002af26 : pop rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000054d7 : pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000674f2 : pop rax ; add rsp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000037e62f : pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001b616f : pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000198526 : pop rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000028457 : pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049bf22 : pop rax ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000030235 : pop rax ; add rsp, 0x38 ; ret
0x0000020000117ccb : pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200003806b1 : pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000330d0 : pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003cf7b1 : pop rax ; add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004422b0 : pop rax ; and dh, dh ; ret
0x000002000003cc55 : pop rax ; and eax, 0x408d4100 ; jmp qword ptr [rbx]
0x00000200000beea8 : pop rax ; and rax, 0xfffffffffffffff9 ; ret
0x000002000047707e : pop rax ; call 0x200000a3954
0x000002000047707d : pop rax ; call 0x200000a3955
0x00000200001b1760 : pop rax ; call 0x200001ada43
0x0000020000552dc8 : pop rax ; call 0x2000026f013
0x000002000010a111 : pop rax ; call qword ptr [rdi]
0x00000200003b41f9 : pop rax ; call rax
0x00000200006d5796 : pop rax ; call rdi
0x00000200006620ec : pop rax ; cdq ; ret 0x48ff
0x0000020000228390 : pop rax ; cmp dword ptr [rax], esp ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, bl ; ret 5
0x000002000011fa17 : pop rax ; cmp ecx, 5 ; jb 0x2000011fa15 ; xor eax, eax ; ret
0x0000020000147b83 : pop rax ; cmp edx, 5 ; jb 0x20000147b81 ; xor eax, eax ; ret
0x00000200005f8e98 : pop rax ; dec dword ptr [rbx + 8] ; inc dword ptr [rbx + 0x40] ; call rax
0x0000020000386b64 : pop rax ; hlt ; push rsi ; ret 0xf02
0x00000200005f4e1e : pop rax ; jmp 0x1ffc3ea9328
0x000002000001280e : pop rax ; jmp 0x2000001285b
0x0000020000041e25 : pop rax ; jmp 0x20000040f4b
0x00000200001ee9b3 : pop rax ; jmp 0x200000aac58
0x0000020000461682 : pop rax ; jmp 0x200004613a1
0x0000020000223798 : pop rax ; jmp qword ptr [rax]
0x0000020000142439 : pop rax ; lea r8, qword ptr [rsp + 0x40] ; call qword ptr [rbx]
0x0000020000526c2d : pop rax ; lea rdx, qword ptr [rsp + 0x38] ; call 0x200001536f9
0x00000200001a8d4c : pop rax ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200003bd65c : pop rax ; loop 0x200003bd662 ; dec dword ptr [rax - 0x75] ; retf ; call rsi
0x000002000002d8b4 : pop rax ; mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d4c82 : pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x00000200005497e4 : pop rax ; mov byte ptr [rbp + 0x843e8ff], dh ; ret 0x33ff
0x000002000019232d : pop rax ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000038b8ad : pop rax ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016e541 : pop rax ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c2176 : pop rax ; mov ebx, 0xff4d77ff ; ret
0x00000200000e2b82 : pop rax ; mov ecx, 1 ; call 0x200000aee28
0x00000200005b8869 : pop rax ; mov edx, r13d ; mov rcx, rsi ; call 0x20000054afd
0x0000020000056e34 : pop rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000495775 : pop rax ; mov qword ptr [rdi + 0x40], rbx ; call 0x200000b9b08
0x00000200000dca87 : pop rax ; mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f9c79 : pop rax ; mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c7600 : pop rax ; mov rcx, qword ptr [rbp + 0x68] ; call 0x200000d38f7
0x00000200003e7979 : pop rax ; mov rcx, rbx ; call r12
0x000002000005182e : pop rax ; mov rdx, rsi ; mov rcx, r14 ; call r11
0x000002000010de02 : pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x000002000069fdbd : pop rax ; or byte ptr [rbp - 0x77], al ; push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000495f22 : pop rax ; or cl, ch ; ret 0xfef3
0x00000200003bed45 : pop rax ; or dh, dh ; ret
0x000002000058c1f9 : pop rax ; or dh, dh ; ret 0x7501
0x00000200005bb154 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000461806 : pop rax ; out dx, eax ; inc dword ptr [rcx - 0xa] ; ret
0x00000200000aa2d9 : pop rax ; pop r13 ; pop rdi ; pop rbx ; pop rcx ; ret
0x00000200000d635e : pop rax ; pop r13 ; pop rsi ; ret
0x00000200004dd03e : pop rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b65e4 : pop rax ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000010970b : pop rax ; pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200001bc84f : pop rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a4f5a : pop rax ; pop rbp ; pop rbx ; ret
0x0000020000151def : pop rax ; pop rcx ; ret
0x00000200000452b4 : pop rax ; pop rdi ; pop rbx ; ret
0x00000200000259f3 : pop rax ; ret
0x000002000008f1a7 : pop rax ; ret 0x4609
0x000002000008fd28 : pop rax ; ret 0xc2c7
0x00000200003bad74 : pop rax ; ret 0xd
0x0000020000590790 : pop rax ; ret 0xffc0
0x00000200005ebf0f : pop rax ; ret 0xffe5
0x0000020000664d53 : pop rax ; ret 0xfff
0x0000020000059b99 : pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200006f3ba7 : pop rax ; sub rdx, r8 ; jne 0x200006f3b9f ; ret
0x00000200006f3ba6 : pop rax ; sub rdx, r8 ; jne 0x200006f3ba0 ; ret
0x0000020000082cf8 : pop rax ; test byte ptr [r14], dil ; leave ; ret 0x21d1
0x0000020000160581 : pop rax ; test eax, eax ; je 0x20000160591 ; mov dl, 1 ; mov al, dl ; ret
0x00000200006622ec : pop rax ; xchg eax, edi ; ret 0x8bff
0x0000020000437ba4 : pop rax ; xchg eax, esp ; ret
0x000002000048998c : pop rax ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b2134 : pop rax ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004793c3 : pop rax ; xor rcx, rsp ; call 0x200000a4e57
0x000002000013c56f : pop rbp ; adc al, 0 ; ret
0x0000020000148cdf : pop rbp ; adc dh, bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000034770 : pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005a319f : pop rbp ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200001b9fd6 : pop rbp ; add byte ptr [rax], al ; jmp 0x200001b9fec
0x000002000059a0bf : pop rbp ; add byte ptr [rbp - 0x7cbefeb5], cl ; ret
0x000002000018dfc5 : pop rbp ; add byte ptr [rcx - 0xa], al ; ret
0x000002000055c6bb : pop rbp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x000002000010e8a9 : pop rbp ; add dh, dh ; ret
0x0000020000038d21 : pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rbp + rbp - 0x75], 0xc2 ; ret
0x00000200005d3e1d : pop rbp ; and byte ptr [rax + 0x63], cl ; ret
0x00000200003972ca : pop rbp ; and dh, dh ; ret
0x00000200000d91a7 : pop rbp ; call 0x1ffc403b529
0x000002000009087a : pop rbp ; call 0x1fffff59d0a
0x00000200003a56f3 : pop rbp ; call qword ptr gs:[rbx]
0x000002000041b57f : pop rbp ; clc ; out -1, eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000490f8a : pop rbp ; cmovns ebp, dword ptr [rbx] ; ret
0x0000020000434674 : pop rbp ; cmp byte ptr [rcx - 0xa], al ; ret
0x00000200000e980a : pop rbp ; cmp eax, 8 ; je 0x200000e9851 ; mov eax, r8d ; ret
0x00000200005f69af : pop rbp ; cmp ebp, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000007c1ac : pop rbp ; cwde ; add rsp, 0x68 ; ret
0x000002000048d14a : pop rbp ; dec dword ptr [rbp + 0x2b490a4e] ; ret
0x00000200004d4a1e : pop rbp ; enter -0x76b4, 0x5d ; sal byte ptr [rbx], 1 ; ret 0x8d48
0x00000200001ce12f : pop rbp ; ficomp dword ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x1ba
0x0000020000083748 : pop rbp ; fild dword ptr gs:[rcx] ; ret
0x0000020000178b1b : pop rbp ; fimul dword ptr [rax - 0x49f027bb] ; ret
0x000002000045e22d : pop rbp ; fmul dword ptr [rax - 0x75] ; ret 0x8948
0x0000020000021efc : pop rbp ; imul ecx, dword ptr [rsi], 0x1b800 ; add byte ptr [rax], al ; ret
0x0000020000701a0f : pop rbp ; in al, 0x41 ; call qword ptr [rsi]
0x000002000053327f : pop rbp ; in eax, dx ; dec dword ptr [rbx - 0x74bbe7b0] ; ret
0x00000200006fe422 : pop rbp ; jmp qword ptr [rcx]
0x0000020000362593 : pop rbp ; jnp 0x2000036258e ; inc dword ptr [rcx - 0xa] ; ret
0x000002000063129f : pop rbp ; lahf ; call r15
0x000002000039afa2 : pop rbp ; lahf ; jmp 0x2000039af6c
0x00000200004c9bad : pop rbp ; lahf ; jmp 0x200004c9b77
0x00000200005c4ad3 : pop rbp ; ljmp ptr [rax + 0xfc085ff] ; xchg eax, esp ; ret
0x000002000048f554 : pop rbp ; mov bh, 0xeb ; ret
0x00000200004c1511 : pop rbp ; or byte ptr [rcx + rcx*4 + 0x6d], cl ; and byte ptr [rcx + 3], al ; ret 0x4589
0x00000200003d392c : pop rbp ; or byte ptr [rcx - 0xa], al ; ret
0x00000200001f578d : pop rbp ; or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x00000200003a9fe6 : pop rbp ; out 0x3b, eax ; ret 0x8b48
0x0000020000491005 : pop rbp ; pcmpgtd mm1, qword ptr [rcx + 0x2b49b95d] ; ret
0x00000200003d25ac : pop rbp ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000017e59 : pop rbp ; pop r12 ; pop rbp ; ret
0x00000200000c9d98 : pop rbp ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200000460e3 : pop rbp ; pop r12 ; pop rbx ; ret
0x0000020000016152 : pop rbp ; pop r12 ; pop rcx ; ret
0x0000020000466f61 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e03 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; pop rcx ; ret
0x00000200000f05a1 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004040f8 : pop rbp ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c584a : pop rbp ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000aacd5 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496b : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d29 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f6f : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000013a41 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e12 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d7 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000007a5a : pop rbp ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000004640 : pop rbp ; pop r12 ; pop rdi ; ret
0x0000020000163058 : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000001e715 : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000516db : pop rbp ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000044003 : pop rbp ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003d1f02 : pop rbp ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000005d4c3 : pop rbp ; pop r12 ; pop rsi ; ret
0x0000020000033e22 : pop rbp ; pop r12 ; ret
0x0000020000061b66 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000200000ab1af : pop rbp ; pop rbp ; pop rbx ; ret
0x000002000014d9ae : pop rbp ; pop rbp ; ret
0x0000020000071712 : pop rbp ; pop rbx ; pop rbp ; ret
0x00000200000aacda : pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000004970 : pop rbp ; pop rbx ; ret
0x0000020000162d2e : pop rbp ; pop rcx ; ret
0x00000200000df3d8 : pop rbp ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7eb0 : pop rbp ; pop rdi ; pop rbp ; ret
0x00000200000c0b8c : pop rbp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000aa2db : pop rbp ; pop rdi ; pop rbx ; pop rcx ; ret
0x0000020000133b1a : pop rbp ; pop rdi ; pop rbx ; ret
0x0000020000069a2a : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000025532 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b1c42 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000505f2 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e6 : pop rbp ; pop rdi ; pop rsi ; ret
0x00000200000d5374 : pop rbp ; pop rdi ; ret
0x000002000011f8ec : pop rbp ; pop rdi ; std ; push rsi ; ret 0xf08
0x00000200000ea248 : pop rbp ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1449 : pop rbp ; pop rsi ; pop rbp ; ret
0x00000200000cf5fc : pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004a801 : pop rbp ; pop rsi ; pop rbx ; ret
0x00000200000d6360 : pop rbp ; pop rsi ; ret
0x000002000016c23f : pop rbp ; push rbp ; adc dword ptr [rax], eax ; call r11
0x000002000000278c : pop rbp ; ret
0x000002000036484a : pop rbp ; ret 0
0x0000020000079df4 : pop rbp ; ret 0x27
0x0000020000013a0f : pop rbp ; ret 0x28
0x000002000066a3d4 : pop rbp ; ret 0x4cff
0x00000200006699e7 : pop rbp ; ret 0xe9ff
0x00000200005aaf5f : pop rbp ; ret 0xffac
0x0000020000406b8b : pop rbp ; ror byte ptr [rax - 0x75], 0xcb ; call 0x20000072e47
0x000002000002194c : pop rbp ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4808
0x000002000018691e : pop rbp ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200004d4a22 : pop rbp ; sal byte ptr [rbx], 1 ; ret 0x8d48
0x00000200000e6a90 : pop rbp ; sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x000002000045bb7f : pop rbp ; sbb byte ptr [rcx - 0xa], al ; ret
0x0000020000665307 : pop rbp ; scasb al, byte ptr [rdi] ; ret 0x48ff
0x00000200006656cb : pop rbp ; stosb byte ptr [rdi], al ; ret 0x48ff
0x000002000008ebb9 : pop rbp ; sub al, byte ptr [rdx] ; shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x00000200003b236a : pop rbp ; test al, 0xe8 ; ret
0x000002000016f97f : pop rbp ; test dword ptr [rsi], edx ; add byte ptr [rax - 0x7d], cl ; ret 0x4540
0x000002000011885f : pop rbp ; xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x00000200003c3228 : pop rbp ; xlatb ; dec dword ptr [rax - 0x7f] ; ret
0x00000200003a899d : pop rbp ; xor byte ptr [rcx - 0x75], cl ; add ecx, dword ptr [rcx + 0x3b] ; ret
0x000002000008b90b : pop rbx ; adc ah, byte ptr [rax] ; push rax ; call qword ptr [rdx]
0x000002000008b99b : pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x00000200004c7bab : pop rbx ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000063acc0 : pop rbx ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000029b6c : pop rbx ; add al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000061dd5d : pop rbx ; add al, byte ptr [rcx - 0xa] ; ret
0x000002000058d7fc : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x000002000039d66e : pop rbx ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000046be1 : pop rbx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006a114b : pop rbx ; add rsp, 8 ; jmp r8
0x000002000018a7a0 : pop rbx ; and byte ptr [rcx - 0x3f], cl ; jmp 0x2000018a7bd
0x000002000018ca1f : pop rbx ; and byte ptr [rcx - 0x3f], cl ; jmp 0x2000018ca3c
0x00000200006540ce : pop rbx ; and byte ptr [rcx - 0xa], al ; ret
0x00000200001d1a01 : pop rbx ; call 0x1ffcfa75c0e
0x000002000063f5b1 : pop rbx ; cli ; ret 0xebff
0x0000020000080516 : pop rbx ; cmp byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006659e9 : pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x000002000003d719 : pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000183e2e : pop rbx ; idiv bh ; add rsp, 0x28 ; ret
0x0000020000053821 : pop rbx ; int1 ; add eax, 0x74c08500 ; ret 0x8d48
0x000002000008ebf8 : pop rbx ; jb 0x2000008ec01 ; ret
0x0000020000526006 : pop rbx ; jmp 0x2000014c5a8
0x0000020000019c46 : pop rbx ; jmp rax
0x00000200005fe1c5 : pop rbx ; jne 0x200005fe1ac ; push rsi ; ret
0x00000200003f6205 : pop rbx ; lahf ; ret 0xe9ff
0x00000200005f6b69 : pop rbx ; lodsb al, byte ptr [rsi] ; enter -0x1601, -0x66 ; ret 0xffe8
0x000002000057dda1 : pop rbx ; mov ch, 0xd0 ; push rsi ; ret
0x00000200004ff2a9 : pop rbx ; mov edx, 0xc48348ff ; pop rax ; ret
0x000002000059d0a7 : pop rbx ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006f76e4 : pop rbx ; or byte ptr [rbp + rcx*4 + 5], cl ; ret
0x000002000064e148 : pop rbx ; or byte ptr [rbp - 0x77], cl ; sbb ecx, dword ptr [rax - 0x75] ; ret
0x00000200001252d9 : pop rbx ; or byte ptr [rbp - 0x77], cl ; sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000701611 : pop rbx ; or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000617892 : pop rbx ; or byte ptr [rcx - 0xa], al ; ret
0x0000020000508bb1 : pop rbx ; out dx, eax ; ret
0x0000020000033e21 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000008887 : pop rbx ; pop rbp ; ret
0x00000200001d1a00 : pop rbx ; pop rbx ; call 0x1ffcfa75c0f
0x00000200000aa2dd : pop rbx ; pop rcx ; ret
0x0000020000075252 : pop rbx ; pop rdi ; pop r12 ; ret
0x0000020000076a6d : pop rbx ; pop rdi ; pop rsi ; ret
0x0000020000111c61 : pop rbx ; push rdi ; stc ; call qword ptr [rax - 0xb2a3d17]
0x000002000051393d : pop rbx ; push rdx ; ret
0x0000020000002811 : pop rbx ; ret
0x0000020000133549 : pop rbx ; ret 0x16
0x000002000066992f : pop rbx ; ret 0x33ff
0x000002000066a52d : pop rbx ; ret 0x44ff
0x0000020000669959 : pop rbx ; ret 0x45ff
0x000002000066993d : pop rbx ; ret 0x48ff
0x000002000066a5fd : pop rbx ; ret 0x4dff
0x0000020000480b65 : pop rbx ; ret 0xc6ff
0x000002000036f33d : pop rbx ; sar edi, cl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006ecef7 : pop rbx ; sbb byte ptr [rcx - 0x7d], cl ; ret
0x0000020000414004 : pop rbx ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x000002000046cd56 : pop rbx ; sub byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000003717b : pop rbx ; sub byte ptr [rcx - 0x3f], cl ; jmp 0x200000371c2
0x000002000017f655 : pop rbx ; sub byte ptr [rcx - 0x3f], cl ; jmp 0x2000017f69c
0x00000200005fa344 : pop rbx ; sub esp, esi ; push rsi ; ret
0x0000020000661ee9 : pop rbx ; wait ; ret 0x41ff
0x00000200001cac4a : pop rcx ; adc byte ptr [rbp - 0x75], al ; ret
0x00000200005fe645 : pop rcx ; adc byte ptr [rbx], dh ; shr al, cl ; ret 0xc709
0x00000200003def2d : pop rcx ; add al, 0 ; add dh, dh ; ret 0xf03
0x000002000066588e : pop rcx ; add al, 0x83 ; ret
0x0000020000157b8b : pop rcx ; add al, 0xff ; ret 0x8348
0x000002000035fb61 : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000007da75 : pop rcx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffd5
0x00000200004e3eba : pop rcx ; add byte ptr [rax], al ; call r14
0x00000200001388c5 : pop rcx ; add byte ptr [rax], al ; ret
0x000002000007fa75 : pop rcx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffb5
0x0000020000072155 : pop rcx ; add eax, dword ptr [rax] ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x0000020000159ebb : pop rcx ; add rsp, 0x28 ; ret
0x000002000014ab2d : pop rcx ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000069636 : pop rcx ; and byte ptr [rax], al ; jmp 0x20000069602
0x000002000005e51a : pop rcx ; and byte ptr [rcx + 0x2b], cl ; ret 0xf748
0x00000200006c848d : pop rcx ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200000689c6 : pop rcx ; and dh, dh ; ret
0x0000020000605c81 : pop rcx ; and esi, ecx ; push rsi ; ret
0x00000200004ee931 : pop rcx ; call rax
0x00000200004c9663 : pop rcx ; clc ; dec dword ptr [rax - 0x75] ; ror dword ptr [rax - 1], 1 ; ret 0x4466
0x00000200001a6369 : pop rcx ; clc ; jmp 0x200001a6377
0x00000200001a834c : pop rcx ; clc ; jmp 0x200001a835a
0x00000200001a8491 : pop rcx ; clc ; jmp 0x200001a849f
0x00000200001a8941 : pop rcx ; clc ; jmp 0x200001a894f
0x00000200001a8d11 : pop rcx ; clc ; jmp 0x200001a8d1f
0x00000200001a8e74 : pop rcx ; clc ; jmp 0x200001a8e82
0x00000200001abb29 : pop rcx ; clc ; jmp 0x200001abb37
0x00000200001abc88 : pop rcx ; clc ; jmp 0x200001abc96
0x00000200005dd7af : pop rcx ; cld ; cmc ; call qword ptr [rax - 0x253d7417]
0x00000200006cd423 : pop rcx ; in eax, -0x6b ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005f9f88 : pop rcx ; int1 ; push rsi ; ret
0x00000200005adf91 : pop rcx ; lea rdx, qword ptr [rsp + 0x48] ; call rax
0x00000200000a46a3 : pop rcx ; leave ; cmc ; dec dword ptr [rax - 0x77] ; add r14b, r14b ; ret
0x000002000048969e : pop rcx ; loope 0x200004896a9 ; mov rcx, r15 ; call 0x200000b6729
0x00000200005706f3 : pop rcx ; mov r11b, 0xff ; add rsp, 0x58 ; ret
0x000002000015afb2 : pop rcx ; mov r8d, ebp ; mov dword ptr [rsi + 4], ebp ; call 0x200000771c9
0x0000020000421970 : pop rcx ; mov rcx, rbx ; call 0x2000004d657
0x000002000012998d : pop rcx ; or al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000705d3e : pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x00000200005a1a7f : pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200003d4c7e : pop rcx ; or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x0000020000030ab0 : pop rcx ; or byte ptr [rax - 0x75], cl ; pop rcx ; sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200006dc373 : pop rcx ; or byte ptr [rbp - 0x77], al ; push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200006c7389 : pop rcx ; or byte ptr [rbx], bh ; ret
0x000002000054c42c : pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001bcc0c : pop rcx ; or eax, 0x5894800 ; ret 0xd59
0x00000200001e121c : pop rcx ; out dx, al ; inc dword ptr [rcx - 0xa] ; ret
0x000002000042acd3 : pop rcx ; outsd dx, dword ptr [rsi] ; ret
0x0000020000523db7 : pop rcx ; push rax ; call 0x20000270045
0x00000200006c1943 : pop rcx ; push rdx ; ret 0x48ff
0x0000020000016155 : pop rcx ; ret
0x00000200004838a2 : pop rcx ; ret 0x48ff
0x000002000047f470 : pop rcx ; ret 0x4cff
0x00000200005b8897 : pop rcx ; ret 0xffa9
0x00000200004d4b9b : pop rcx ; ret 0xffda
0x0000020000188c23 : pop rcx ; ret 0xfff1
0x000002000002703a : pop rcx ; sbb al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000030ab4 : pop rcx ; sbb byte ptr [rcx + 0x3b], al ; ret
0x000002000008784b : pop rcx ; scasd eax, dword ptr [rdi] ; lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x000002000062f4b3 : pop rcx ; sti ; ret
0x0000020000601383 : pop rcx ; xor al, 0xf7 ; dec dword ptr [rax - 0x75] ; retf ; call 0x2000004d659
0x000002000056ae8c : pop rcx ; xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x0000020000534d83 : pop rcx ; xor dword ptr [rdi + rdi*8 + 0x479db85], 0xffffff8b ; ret
0x00000200000bbe20 : pop rdi ; adc bh, bh ; ret
0x00000200005466bd : pop rdi ; adc byte ptr [rbx], bh ; ret
0x00000200005fb326 : pop rdi ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000d894a : pop rdi ; add al, 0x8b ; ret
0x00000200001a2623 : pop rdi ; add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000058f286 : pop rdi ; add al, byte ptr [rcx - 0x3a] ; add al, 0x3b ; add dword ptr [rcx - 1], ecx ; ret
0x0000020000465e15 : pop rdi ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000200001b8892 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000061ef0c : pop rdi ; add byte ptr [rax], al ; shr cl, 0x28 ; ret 0xffdf
0x00000200005b985f : pop rdi ; add dword ptr [rbp + 0x63], ecx ; ret
0x00000200001a6fd5 : pop rdi ; add dword ptr [rbp - 0x7b], ecx ; sal byte ptr [rcx + rbx + 0x45], 0x84 ; ret
0x00000200001f0939 : pop rdi ; add eax, 0x3b018b41 ; ret
0x00000200001a2654 : pop rdi ; add eax, 0xc18b0000 ; ret
0x00000200005974e5 : pop rdi ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200000cdb50 : pop rdi ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000481e21 : pop rdi ; and byte ptr [rcx + rcx*4 + 0x6f], al ; adc al, 0xe8 ; and al, 0x1b ; ret 0x45ff
0x00000200004afb1a : pop rdi ; and byte ptr [rcx - 0xa], al ; ret
0x000002000062eadd : pop rdi ; and dword ptr [rdx + 0x48c933ff], 0xffffffff ; ret
0x0000020000495778 : pop rdi ; call 0x200000b9b05
0x000002000038f08d : pop rdi ; call rsp
0x00000200007096ce : pop rdi ; cld ; dec dword ptr [rax - 0x7d] ; ret 0x4410
0x0000020000482770 : pop rdi ; cmp byte ptr [rcx - 0xa], al ; ret
0x000002000049a49d : pop rdi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esp, 0xe8a3ebff ; sub bl, bh ; ret
0x000002000018271d : pop rdi ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x000002000008ff70 : pop rdi ; jg 0x2000008ff92 ; ret
0x00000200004fdcc7 : pop rdi ; jl 0x200004fdcb8 ; ret 0x90cc
0x00000200004218e8 : pop rdi ; jmp 0x2000004d1c4
0x000002000045f0ad : pop rdi ; jmp rax
0x0000020000447752 : pop rdi ; leave ; push qword ptr [rdx] ; ret
0x0000020000665461 : pop rdi ; lodsb al, byte ptr [rsi] ; ret 0x4ff
0x00000200007021d6 : pop rdi ; mov esi, 0x8b08ebff ; ret
0x00000200005d8491 : pop rdi ; mov qword ptr [rip + 0xab127], rcx ; ret
0x00000200006c6d84 : pop rdi ; or al, 0x83 ; ret
0x0000020000576bfa : pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200003b77a7 : pop rdi ; or byte ptr [rcx - 0x7d], al ; ret
0x00000200003c271f : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x00000200003dc45d : pop rdi ; or dh, dh ; ret
0x0000020000061b62 : pop rdi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200006058a0 : pop rdi ; pop r12 ; pop rbp ; ret
0x00000200000c7c63 : pop rdi ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004385a6 : pop rdi ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000539eb : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000049d176 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006f3908 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000fb1fa : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000013b1fa : pop rdi ; pop r12 ; pop rdi ; ret
0x00000200000c1891 : pop rdi ; pop r12 ; pop rsi ; ret
0x0000020000075253 : pop rdi ; pop r12 ; ret
0x00000200003d25aa : pop rdi ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000051de03 : pop rdi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000048a37b : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000046155b : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c5848 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000dfefd : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000caeee : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000a87e2 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025ebe : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000a35d3 : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200003d1f00 : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000edffe : pop rdi ; pop r13 ; pop r12 ; ret
0x00000200003ad743 : pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000071710 : pop rdi ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000df3d6 : pop rdi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a7eae : pop rdi ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c0b8a : pop rdi ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003fa45a : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bfce9 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000438997 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000050ca0a : pop rdi ; pop r13 ; pop rdi ; ret
0x00000200000abd2a : pop rdi ; pop r13 ; ret
0x000002000001fe02 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f9a9c : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001624c6 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000003def9 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d5dcc : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000403b4 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b0dd8 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006d96 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000eac2c : pop rdi ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200003d6074 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000dd83d : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af947 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000320e0 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; ret
0x000002000000432b : pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000017e55 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x000002000001614e : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rcx ; ret
0x0000020000132918 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000007a56 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000000463c : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000005d4bf : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000006b819 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000014d9aa : pop rdi ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000a8edd : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000133b16 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200003860d1 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004a87ed : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b1c3e : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000011090d : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e2 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d5370 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000ea244 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1445 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x0000020000002788 : pop rdi ; pop r14 ; pop r13 ; ret
0x000002000010970d : pop rdi ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000038a1 : pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000016564 : pop rdi ; pop r14 ; pop rcx ; ret
0x0000020000464c99 : pop rdi ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000ef28f : pop rdi ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003e0931 : pop rdi ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000e2c75 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005243c : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001bc851 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000047f95 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001423d6 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200003b85c1 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007031 : pop rdi ; pop r14 ; pop rdi ; ret
0x000002000005e316 : pop rdi ; pop r14 ; pop rsi ; ret
0x0000020000006396 : pop rdi ; pop r14 ; ret
0x00000200000061bb : pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e06 : pop rdi ; pop rbp ; pop rcx ; ret
0x0000020000006614 : pop rdi ; pop rbp ; ret
0x0000020000033e20 : pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000200000c0b8d : pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000aa2dc : pop rdi ; pop rbx ; pop rcx ; ret
0x00000200000452b5 : pop rdi ; pop rbx ; ret
0x000002000001abaa : pop rdi ; pop rcx ; ret
0x00000200000e9562 : pop rdi ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000011904f : pop rdi ; pop rdi ; pop rbp ; ret
0x000002000055252b : pop rdi ; pop rdi ; pop rbx ; ret
0x000002000019a931 : pop rdi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000026df1 : pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d9e9c : pop rdi ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003a025 : pop rdi ; pop rdi ; pop rsi ; ret
0x00000200003d7b3c : pop rdi ; pop rdi ; ret
0x00000200000aacd8 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496e : pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d2c : pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f72 : pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008885 : pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e15 : pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85da : pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000041b6 : pop rdi ; pop rsi ; ret
0x000002000000340b : pop rdi ; ret
0x0000020000525e0d : pop rdi ; ret 0x48ff
0x0000020000669ffd : pop rdi ; ret 0x83ff
0x00000200000dfd55 : pop rdi ; ret 0xf
0x000002000066a05c : pop rdi ; ret 0xff
0x000002000006350a : pop rdi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200003b4221 : pop rdi ; sbb al, 0x3b ; ret
0x0000020000176f00 : pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x000002000011f8ed : pop rdi ; std ; push rsi ; ret 0xf08
0x00000200000bcced : pop rdi ; sti ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x0000020000516dd8 : pop rdi ; sub al, 0x8b ; ret 0x8b48
0x000002000008dd2d : pop rdi ; xchg eax, ebp ; ret
0x0000020000257cf6 : pop rdx ; add bl, al ; ret
0x0000020000257cfa : pop rdx ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, al ; ret
0x0000020000112d07 : pop rdx ; add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x00000200000e435d : pop rdx ; add dword ptr [rbp - 0x75], eax ; ret
0x000002000041a549 : pop rdx ; add dword ptr [rcx - 0x75], eax ; ret
0x00000200000905bc : pop rdx ; and eax, dword ptr [rcx] ; ret 0xfa65
0x000002000058eaec : pop rdx ; ja 0x2000058eafd ; movzx eax, di ; add eax, edx ; jmp 0x2000058eb00
0x00000200003a9782 : pop rdx ; jg 0x200003a97b2 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000061fda2 : pop rdx ; jno 0x2000061fd71 ; push rsi ; ret
0x0000020000084af1 : pop rdx ; jns 0x20000084afe ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3a], ch ; ret 1
0x00000200006348ae : pop rdx ; lodsb al, byte ptr [rsi] ; inc dword ptr [rbp - 0x74f38740] ; ret
0x0000020000085dd9 : pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000200000915db : pop rdx ; mov ah, 0x78 ; mov esp, 0xe70b3d35 ; ret
0x000002000043e444 : pop rdx ; mov al, 0x54 ; jnp 0x2000043e44f ; ret 0x823c
0x0000020000544c36 : pop rdx ; mov bh, 0xff ; add rsp, 0x38 ; ret
0x000002000013ac72 : pop rdx ; mov ebx, esi ; inc dword ptr [rbp - 0xf98b40] ; ret
0x0000020000178a1c : pop rdx ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000151dee : pop rdx ; pop rax ; pop rcx ; ret
0x00000200004c7baa : pop rdx ; pop rbx ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000005b0ee : pop rdx ; ret
0x0000020000471ebb : pop rdx ; ret 0x18
0x0000020000548696 : pop rdx ; ret 0xebff
0x00000200005b47a2 : pop rdx ; ret 0xffcd
0x00000200003cd402 : pop rdx ; ret 0xffce
0x0000020000607c96 : pop rdx ; ret 0xffed
0x0000020000024283 : pop rdx ; ror dword ptr [rdi], -0x43 ; fiadd word ptr [rcx - 0x75] ; ret
0x000002000036f3cf : pop rdx ; sar edi, cl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001a4a7e : pop rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0x391c
0x0000020000367f35 : pop rdx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200004c1907 : pop rdx ; sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x0000020000395377 : pop rsi ; adc dh, dh ; ret 0xf04
0x000002000004aee2 : pop rsi ; add al, byte ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000294fe : pop rsi ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000597c03 : pop rsi ; add al, byte ptr [rcx - 0xa] ; ret
0x0000020000360a57 : pop rsi ; add al, byte ptr [rdi + rcx + 0x22] ; ret
0x0000020000011904 : pop rsi ; add byte ptr es:[rbx + rdi + 0x34], cl ; ret 0x840f
0x00000200003d81ea : pop rsi ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x0000020000426b5e : pop rsi ; add eax, dword ptr [rcx - 0xa] ; ret
0x00000200004d4d8c : pop rsi ; add esi, esi ; ret 0xf02
0x0000020000058f6f : pop rsi ; and al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010fe68 : pop rsi ; and byte ptr [rax - 0x75], cl ; ret
0x000002000005dbe7 : pop rsi ; and dh, dh ; ret
0x000002000014917e : pop rsi ; cdq ; or al, byte ptr [rax] ; xor al, al ; ret
0x000002000043c1f2 : pop rsi ; cli ; ret 0xe9ff
0x00000200003964f3 : pop rsi ; cli ; sub byte ptr [rax], al ; ret
0x00000200001966fa : pop rsi ; cmp al, 0x3b ; ret
0x0000020000071920 : pop rsi ; cmp al, 0x75 ; add ecx, dword ptr [rcx + 0x1d39045e] ; ret
0x0000020000081e50 : pop rsi ; jbe 0x20000081e11 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000147afe : pop rsi ; jbe 0x200001f01a9 ; xor eax, eax ; ret
0x00000200003fcdd0 : pop rsi ; jmp 0x1ffc3cb16da
0x0000020000091853 : pop rsi ; jmp 0x2000009186a
0x0000020000643e8d : pop rsi ; jmp rax
0x0000020000418592 : pop rsi ; leave ; ret
0x00000200003c792e : pop rsi ; lock or dword ptr [rax], eax ; xor al, al ; ret
0x000002000012a1ee : pop rsi ; lodsb al, byte ptr [rsi] ; idiv edi ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000601149 : pop rsi ; lodsb al, byte ptr [rsi] ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005072ab : pop rsi ; mov bh, 0xff ; add rsp, 0x58 ; ret
0x000002000035f06b : pop rsi ; or byte ptr [rax - 0x75], cl ; ret
0x00000200001f9f16 : pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200001b6368 : pop rsi ; or byte ptr [rcx - 0x75], al ; ret
0x00000200004791dc : pop rsi ; pop r12 ; pop rbp ; ret
0x00000200000250ce : pop rsi ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000001fe04 : pop rsi ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f9a9e : pop rsi ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001624c8 : pop rsi ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000003defb : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d5dce : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008882 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b0dda : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006d98 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000001ba08 : pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003d6076 : pop rsi ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006f3b2 : pop rsi ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af949 : pop rsi ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000320e2 : pop rsi ; pop r12 ; pop rsi ; ret
0x000002000000432d : pop rsi ; pop r12 ; ret
0x0000020000017e57 : pop rsi ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000016150 : pop rsi ; pop r13 ; pop r12 ; pop rcx ; ret
0x0000020000466f5f : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e01 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rcx ; ret
0x00000200000f059f : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004040f6 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013291a : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000004969 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d27 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f6d : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001c807 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e10 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d5 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000007a58 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000000463e : pop rsi ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000163056 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000001e713 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d21fc : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000044001 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000005d4c1 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000398a2 : pop rsi ; pop r13 ; pop r12 ; ret
0x000002000046c814 : pop rsi ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000014d9ac : pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000466881 : pop rsi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000a8edf : pop rsi ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000133b18 : pop rsi ; pop r13 ; pop rdi ; pop rbx ; ret
0x0000020000069a28 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000025530 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b1c40 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000505f0 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000344e4 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d5372 : pop rsi ; pop r13 ; pop rdi ; ret
0x00000200000ea246 : pop rsi ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000d1447 : pop rsi ; pop r13 ; pop rsi ; pop rbp ; ret
0x000002000000278a : pop rsi ; pop r13 ; ret
0x0000020000061b68 : pop rsi ; pop r15 ; ret
0x00000200000aacd9 : pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496f : pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d2d : pop rsi ; pop rbp ; pop rcx ; ret
0x00000200000038a3 : pop rsi ; pop rbp ; ret
0x0000020000008886 : pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e16 : pop rsi ; pop rbx ; ret
0x0000020000016566 : pop rsi ; pop rcx ; ret
0x0000020000464c9b : pop rsi ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000006613 : pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000033e1f : pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000200000ef291 : pop rsi ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000af056 : pop rsi ; pop rdi ; pop rbx ; ret
0x000002000001aba9 : pop rsi ; pop rdi ; pop rcx ; ret
0x00000200000644a9 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005243e : pop rsi ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071d54 : pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000382f2 : pop rsi ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001423d8 : pop rsi ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000041b5 : pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000007033 : pop rsi ; pop rdi ; ret
0x00000200003cff82 : pop rsi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000045b513 : pop rsi ; pop rsi ; pop rbp ; ret
0x000002000005e318 : pop rsi ; pop rsi ; ret
0x00000200000041b7 : pop rsi ; ret
0x000002000066a26d : pop rsi ; ret 0x48ff
0x000002000066a2b4 : pop rsi ; ret 0x64ff
0x000002000066a2d9 : pop rsi ; ret 0xe8ff
0x00000200003bcaee : pop rsi ; ret 0xffd3
0x00000200001f7ffa : pop rsi ; ret 0xffe3
0x000002000041b56e : pop rsi ; rol dword ptr [rax + rax], cl ; add rsp, 0x70 ; pop rbp ; ret
0x000002000026ff7c : pop rsi ; sbb eax, 0xf7480000 ; ret
0x000002000018e6f5 : pop rsi ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x000002000056518a : pop rsi ; sub byte ptr [rax - 0x75], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x00000200003f40a1 : pop rsi ; sub byte ptr [rcx - 0x75], al ; ret 0x349
0x0000020000420afe : pop rsi ; xchg eax, ecx ; ret
0x0000020000110262 : pop rsi ; xor dh, dh ; ret
0x000002000008c59b : pop rsp ; adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x000002000008c67f : pop rsp ; adc ah, byte ptr [rax] ; ret 0xff
0x000002000008c597 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x000002000008c583 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x00000200004012e1 : pop rsp ; adc dword ptr [rax], eax ; add rax, r10 ; jmp rax
0x00000200005685bb : pop rsp ; add al, 0x8b ; ret
0x00000200000c88bf : pop rsp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000ca830 : pop rsp ; and al, 0x10 ; ret
0x00000200000ca894 : pop rsp ; and al, 0x10 ; xor eax, eax ; ret
0x0000020000060ba0 : pop rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000059a696 : pop rsp ; and al, 0x20 ; call 0x200003c68f1
0x0000020000472051 : pop rsp ; and al, 0x20 ; call 0x2000046e315
0x00000200003a8b5e : pop rsp ; and al, 0x20 ; jmp 0x200003a8bad
0x000002000070efa8 : pop rsp ; and al, 0x20 ; mov ecx, r15d ; call 0x200000fb210
0x000002000064c3e4 : pop rsp ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000002fd87 : pop rsp ; and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x000002000002a3bb : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ef324 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003b9dbb : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000019656a : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200005cfc28 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000003404 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002f132 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000ad031 : pop rsp ; and al, 0x30 ; add rsp, 0x38 ; ret
0x00000200007054e3 : pop rsp ; and al, 0x30 ; jmp 0x200007054af
0x00000200004add37 : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000e08b : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005bdc08 : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000051db9a : pop rsp ; and al, 0x38 ; call rdi
0x00000200000c4327 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d52f3 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000267bf : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000002cab1 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006512ff : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000020aa7 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006af76 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000006d06a : pop rsp ; and al, 0x40 ; add rsp, 0x48 ; ret
0x0000020000413208 : pop rsp ; and al, 0x40 ; jmp 0x2000041330b
0x00000200003e1565 : pop rsp ; and al, 0x40 ; mov rcx, rbx ; call 0x200000bd7b8
0x0000020000525e05 : pop rsp ; and al, 0x40 ; mov rcx, rbx ; call 0x2000014bd19
0x00000200000b05f0 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000067a8a : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039931f : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003704d : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fdff : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200003b1c89 : pop rsp ; and al, 0x48 ; call 0x200000ddf65
0x00000200000b029e : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cb52b : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012ba04 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000368aca : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200001340db : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000001b1c0 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004f8411 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200003d9d08 : pop rsp ; and al, 0x50 ; jmp 0x200003d988a
0x00000200005c6e32 : pop rsp ; and al, 0x54 ; call rax
0x000002000039e34a : pop rsp ; and al, 0x54 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000014050d : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049bf20 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000019c339 : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000001280c : pop rsp ; and al, 0x58 ; jmp 0x2000001285d
0x00000200004d7a64 : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003781b5 : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000012b8c8 : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000014a495 : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001079ad : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200005ab742 : pop rsp ; and al, 0x68 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000013f07a : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200001bfcb5 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000191c2c : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200006c5a9e : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200001a336c : pop rsp ; and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000154403 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000004fdb9 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000484403 : pop rsp ; and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call rsi
0x000002000019511d : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000171d98 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000012a0ae : pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200000d25e1 : pop rsp ; and al, 8 ; mov dword ptr [r10 + 0xc], r9d ; ret
0x0000020000159c6e : pop rsp ; and al, 8 ; mov dword ptr [r8], r10d ; ret
0x00000200003daf3b : pop rsp ; and al, 8 ; mov dword ptr [rcx + 0x7c], eax ; ret
0x00000200003a80f0 : pop rsp ; and al, 8 ; mov eax, edx ; ret
0x0000020000039c54 : pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x0000020000105efd : pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000010eb2e : pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x00000200001a26ac : pop rsp ; and al, 8 ; mov rax, r10 ; add qword ptr [rdx], rcx ; ret
0x0000020000142d17 : pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x00000200001829a8 : pop rsp ; and al, 8 ; mov rax, r9 ; ret
0x000002000006c1bf : pop rsp ; and al, 8 ; mov rax, rdx ; ret
0x0000020000002fa1 : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000003e9e1 : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000004c0e2 : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200001c2c15 : pop rsp ; and al, 8 ; mov word ptr [r10], cx ; ret
0x0000020000588f5a : pop rsp ; and al, 8 ; movzx eax, r9w ; ret
0x00000200000220cb : pop rsp ; and al, 8 ; ret
0x00000200001c2d08 : pop rsp ; and al, 8 ; xor eax, eax ; ret
0x0000020000607c94 : pop rsp ; call 0x200004e3ef7
0x00000200000aa83e : pop rsp ; cmp al, 0x14 ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret
0x0000020000664554 : pop rsp ; cmp al, 0xc1 ; call rcx
0x0000020000085ddf : pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000054bb70 : pop rsp ; fstpnce st(0), st(0) ; push rsi ; ret
0x000002000013ccf2 : pop rsp ; idiv bh ; cli ; add rsp, 8 ; ret
0x00000200003baf14 : pop rsp ; in eax, dx ; dec dword ptr [rdi] ; test dword ptr [rsi], ebp ; ret 0xd
0x00000200002633a4 : pop rsp ; jmp qword ptr [rdx]
0x0000020000420b38 : pop rsp ; jmp rsi
0x0000020000223790 : pop rsp ; jns 0x200002237aa ; add byte ptr [rax], dl ; or byte ptr [rsi], 0 ; pop rax ; jmp qword ptr [rax]
0x0000020000091fd7 : pop rsp ; mov bl, 0x3b ; sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x2000009200c ; ret 0x23e8
0x00000200000be656 : pop rsp ; mov dword ptr [rip + 0x3750000], ebx ; xor al, al ; ret
0x0000020000360401 : pop rsp ; mov r9, rcx ; je 0x20000360413 ; mov al, r10b ; ret
0x0000020000360401 : pop rsp ; mov r9, rcx ; je 0x20000360414 ; mov al, r10b ; ret
0x000002000006740d : pop rsp ; mov rcx, rdi ; call rsi
0x0000020000443873 : pop rsp ; or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000091bdc : pop rsp ; or dl, byte ptr [rax] ; mov ecx, 0x79682177 ; ret
0x00000200004f84a7 : pop rsp ; out 0xff, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000061b64 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200005f4e1d : pop rsp ; pop rax ; jmp 0x1ffc3ea9329
0x00000200003d25ae : pop rsp ; pop rbp ; pop rbx ; ret
0x0000020000017e5b : pop rsp ; pop rbp ; ret
0x000002000008b90a : pop rsp ; pop rbx ; adc ah, byte ptr [rax] ; push rax ; call qword ptr [rdx]
0x000002000008b99a : pop rsp ; pop rbx ; adc al, byte ptr [rcx] ; salc ; call qword ptr [rcx]
0x00000200000250d0 : pop rsp ; pop rbx ; pop rbp ; ret
0x00000200000460e5 : pop rsp ; pop rbx ; ret
0x0000020000016154 : pop rsp ; pop rcx ; ret
0x0000020000466f63 : pop rsp ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001c4e05 : pop rsp ; pop rdi ; pop rbp ; pop rcx ; ret
0x000002000001fe06 : pop rsp ; pop rdi ; pop rbp ; ret
0x00000200003f9aa0 : pop rsp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000c584c : pop rsp ; pop rdi ; pop rbx ; ret
0x00000200001624ca : pop rsp ; pop rdi ; pop rcx ; ret
0x00000200000aacd7 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000496d : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000162d2b : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000004f71 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000008884 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000003e14 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000a85d9 : pop rsp ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000006d9a : pop rsp ; pop rdi ; pop rsi ; ret
0x0000020000004642 : pop rsp ; pop rdi ; ret
0x000002000016305a : pop rsp ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000001e717 : pop rsp ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000516dd : pop rsp ; pop rsi ; pop rbp ; ret
0x0000020000044005 : pop rsp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000af94b : pop rsp ; pop rsi ; pop rbx ; ret
0x00000200000320e4 : pop rsp ; pop rsi ; ret
0x000002000000432f : pop rsp ; ret
0x0000020000263fc8 : pop rsp ; ret 0x24
0x000002000009102f : pop rsp ; ret 0x2db0
0x000002000066827e : pop rsp ; ret 0x44ff
0x0000020000551646 : pop rsp ; ret 0x4908
0x000002000047f15a : pop rsp ; ret 0x4cff
0x0000020000668264 : pop rsp ; ret 0x81ff
0x0000020000483b6f : pop rsp ; ret 0x84ff
0x00000200001dc55d : pop rsp ; ret 0xe908
0x00000200006bbf7c : pop rsp ; ret 0xffc2
0x000002000038a8d8 : pop rsp ; ret 0xfff5
0x00000200001ca61b : pop rsp ; sal dl, 0xff ; jmp 0x200000f686c
0x000002000037f246 : pop rsp ; sar bh, cl ; add rsp, 0x58 ; ret
0x00000200004d37df : pop rsp ; sub byte ptr [rbp], cl ; add rcx, r9 ; jmp rcx
0x0000020000144354 : popfq ; adc al, 0 ; bt eax, ecx ; setb al ; ret
0x00000200003c5fdf : popfq ; adc ebp, ebp ; dec dword ptr [rax - 0x7d] ; ret 0x4902
0x0000020000082d13 : popfq ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub dword ptr [rbp - 0x6e], esi ; ret
0x00000200004e2e07 : popfq ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200000e77c7 : popfq ; add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret
0x00000200006157c3 : popfq ; call 0x1ffc3eca0cd
0x0000020000615836 : popfq ; call 0x1ffcfeca142
0x0000020000463b61 : popfq ; clc ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200003f67cb : popfq ; cld ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000091e98 : popfq ; cmpsq qword ptr [rsi], qword ptr [rdi] ; outsb dx, byte ptr [rsi] ; ret
0x00000200000f20c1 : popfq ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200006ebce1 : popfq ; dec dword ptr [rax - 0x7d] ; ret
0x000002000054735f : popfq ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xe904
0x000002000037ebcb : popfq ; int1 ; dec dword ptr [rax + 0x3b] ; ret 0xa74
0x00000200005ff06f : popfq ; jg 0x200005ff04a ; jmp qword ptr [rdx]
0x00000200001f4dec : popfq ; jmp rax
0x0000020000558519 : popfq ; lock add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x0000020000434d7f : popfq ; lodsd eax, dword ptr [rsi] ; ret
0x00000200004eb0bd : popfq ; mov ebx, 0xc48348ff ; pop rax ; ret
0x00000200001edad1 : popfq ; or bl, ah ; push rsi ; ret
0x0000020000513c66 : popfq ; or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x000002000062a6af : popfq ; out 0xac, al ; call qword ptr [rax - 0x12063d17]
0x0000020000119c07 : popfq ; push rbx ; or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000090312 : popfq ; ret
0x00000200000e7c2f : popfq ; ret 0
0x0000020000107bef : popfq ; ret 0x2b
0x0000020000475db8 : popfq ; ret 0x49ff
0x0000020000661cc7 : popfq ; ret 0x4cff
0x000002000050dc1a : popfq ; ret 0xdfe9
0x00000200003fa213 : popfq ; ret 0xebff
0x00000200004259ee : popfq ; ret 0xfff
0x000002000008f771 : popfq ; sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x000002000007e78f : popfq ; sbb eax, 0xb8500000 ; ret 0
0x00000200004b718f : popfq ; xchg dword ptr [rsi - 0x6af0be01], edi ; ret
0x00000200000a97bf : popfq ; xchg eax, edi ; adc al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200006d6020 : prefetchw byte ptr [rcx] ; ret
0x0000020000143e7c : psadbw mm7, mm7 ; add rsp, 0x68 ; ret
0x00000200000b5b8e : psubd mm7, mm7 ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000643bdd : psubq mm7, mm7 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000065c27f : psubsb mm4, qword ptr [rdi - 0x740000e0] ; ret
0x0000020000447c79 : push -0x111817 ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200001e11fe : push -0x11aee317 ; push rsi ; ret 0x7401
0x000002000049d745 : push -0x166f0048 ; ret 0xf605
0x0000020000100cd0 : push -0x16ffe27b ; ret 0xfffe
0x000002000047814c : push -0x16ffffe1 ; sub ecx, ebp ; ret 0x90ff
0x000002000048ad34 : push -0x17001b35 ; ret
0x00000200006011f4 : push -0x17003621 ; ret
0x00000200006e9fe4 : push -0x170044b5 ; ret
0x00000200004c7c48 : push -0x1733ccb8 ; call rcx
0x000002000046a84e : push -0x1733ccb8 ; stc ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200005204b5 : push -0x178d9d97 ; add bh, ah ; ret 0x48ff
0x0000020000627c46 : push -0x1b97ac17 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000020000085d38 : push -0x1e1fe0e ; ret 0x6906
0x000002000000302c : push -0x2e74b800 ; mov rcx, rax ; call r8
0x0000020000460930 : push -0x3114003f ; mov eax, edx ; jmp 0x200004608d6
0x000002000069db1f : push -0x3274b6f8 ; call r9
0x000002000025fdf8 : push -0x37ffae00 ; ret 0x24
0x00000200006c17e5 : push -0x4cf272b8 ; push rbx ; ret 0x48ff
0x0000020000153b52 : push -0x4ffffff ; mov eax, ecx ; ret
0x00000200006c18f6 : push -0x5df272b8 ; push rdx ; ret 0x48ff
0x00000200004c69b7 : push -0x66f0247b ; ret 0x6ee8
0x00000200000910c7 : push -0x6a650f2e ; xchg eax, esi ; ret 0x6280
0x00000200000ba3b9 : push -0x6c41f0b8 ; ret
0x00000200005184a4 : push -0x74002a95 ; ret
0x0000020000534ca4 : push -0x74002c5d ; ret
0x0000020000031dcf : push -0x742dccbb ; ret 0xbb49
0x000002000014aec6 : push -0x74b62f75 ; add cl, byte ptr [rcx - 0x7f] ; ret 0x160
0x0000020000447b57 : push -0x74b6fe4e ; iretd ; call r12
0x000002000046c5ac : push -0x74b70040 ; ret
0x00000200004c7ceb : push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x00000200001507dc : push -0x74b7fff7 ; ret
0x00000200001f7bc6 : push -0x74befe77 ; ret
0x00000200003c4c4d : push -0x74c776b8 ; ret
0x000002000039b564 : push -0x74ffffd8 ; ret
0x000002000049bf18 : push -0x74ffffee ; ret
0x0000020000604a06 : push -0x7536ccbb ; shr eax, cl ; ret
0x00000200000238e0 : push -0x76f48c00 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006ce7f4 : push -0x7c3174b8 ; ret
0x000002000014672d : push -0x7cb7ffd9 ; ret 0x4808
0x0000020000627c49 : push -0x7cbe001c ; call qword ptr [rax]
0x00000200001491ab : push -0x7ce6173f ; loopne 0x200001491ba ; ret
0x00000200001491aa : push -0x7ce6173f ; loopne 0x200001491bb ; ret
0x000002000048ce10 : push -0x7e0617f8 ; ret 0x48ff
0x000002000040ff1b : push -0x9000001 ; ret
0x000002000010e127 : push -0x90001d6 ; ret
0x000002000042043c : push -0x90018f9 ; ret
0x00000200003a9dd2 : push -0x9fffffe ; ret
0x000002000025b880 : push -0xbffc75d ; ret
0x0000020000545540 : push -0xfb8c00 ; ret 0x15eb
0x00000200004726e2 : push 0x12 ; ret
0x00000200000aba71 : push 0x14 ; add byte ptr [rsi - 1], ah ; ret 0xf44
0x0000020000181030 : push 0x244c8b48 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000020000069a1b : push 0x24648b4c ; jo 0x200000699b4 ; ret
0x00000200000257d6 : push 0x24748b48 ; jo 0x2000002576f ; ret
0x00000200000cc3ba : push 0x24748b48 ; jo 0x200000cc353 ; ret
0x000002000017b974 : push 0x24748b48 ; jo 0x2000017b90d ; ret
0x0000020000192a9e : push 0x24748b48 ; jo 0x20000192a37 ; ret
0x00000200003b2062 : push 0x24748b48 ; jo 0x200003b1ffb ; ret
0x0000020000419ac4 : push 0x24748b48 ; jo 0x20000419a5d ; ret
0x0000020000427e89 : push 0x24748b48 ; jo 0x20000427e22 ; ret
0x0000020000487697 : push 0x24748b48 ; jo 0x20000487630 ; ret
0x00000200004877bb : push 0x24748b48 ; jo 0x20000487754 ; ret
0x0000020000488199 : push 0x24748b48 ; jo 0x20000488132 ; ret
0x00000200004e9e5e : push 0x24748b48 ; jo 0x200004e9df7 ; ret
0x0000020000510778 : push 0x24748b48 ; jo 0x20000510711 ; ret
0x00000200005144c9 : push 0x24748b48 ; jo 0x20000514462 ; ret
0x0000020000552ccb : push 0x24748b48 ; jo 0x20000552c64 ; ret
0x00000200005c3464 : push 0x24748b48 ; jo 0x200005c33fd ; ret
0x00000200005c635e : push 0x24748b48 ; jo 0x200005c62f7 ; ret
0x00000200006f4cd8 : push 0x24748b48 ; jo 0x200006f4c71 ; ret
0x000002000011235e : push 0x24748b48 ; js 0x200001122f7 ; ret
0x00000200003b6daa : push 0x24748b48 ; js 0x200003b6d42 ; ret
0x00000200003c4196 : push 0x24748b48 ; js 0x200003c412f ; ret
0x000002000041c831 : push 0x24748b48 ; js 0x2000041c7ca ; ret
0x000002000049d01a : push 0x24748b48 ; js 0x2000049cfb3 ; ret
0x000002000047c033 : push 0x247c8b48 ; jo 0x2000047bfcb ; ret
0x0000020000517b85 : push 0x247c8b48 ; jo 0x20000517b1e ; ret
0x00000200005601d0 : push 0x247c8b48 ; jo 0x20000560169 ; ret
0x000002000059a7ea : push 0x247c8b48 ; jo 0x2000059a783 ; ret
0x00000200001aaae7 : push 0x247c8b48 ; js 0x200001aaa80 ; ret
0x0000020000600cb8 : push 0x28788348 ; add byte ptr [rsp + rdx*2 - 0xa], dh ; ret
0x000002000010b79a : push 0x28b0004 ; add rsp, 0x28 ; ret
0x00000200006c82fc : push 0x2b48ffbd ; ret
0x0000020000363718 : push 0x2ce8fff2 ; ret 0xffdb
0x00000200006ce07d : push 0x2d ; add byte ptr [rcx + 3], cl ; ret
0x00000200000b0877 : push 0x30c48348 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004739ff : push 0x30c48348 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000036d291 : push 0x30c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003d7464 : push 0x30c48348 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000055218d : push 0x30c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001565c0 : push 0x33 ; sal dh, cl ; ret
0x0000020000002ffa : push 0x35dec0de ; add rsp, 0x28 ; ret
0x000002000064820d : push 0x38c48348 ; ret
0x000002000049b7b6 : push 0x39 ; clc ; push rsi ; ret
0x000002000003e9a0 : push 0x3b ; sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x00000200003d4709 : push 0x3b660000 ; ret 0x4075
0x000002000039088d : push 0x40c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000e659 : push 0x40c48348 ; pop r14 ; ret
0x000002000004978a : push 0x40c48348 ; pop r15 ; ret
0x00000200001ad0a9 : push 0x40c48348 ; pop rbp ; ret
0x00000200004cd709 : push 0x40c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000017037f : push 0x40c48348 ; pop rdi ; ret
0x000002000054530f : push 0x41c80366 ; movzx eax, dx ; jmp 0x20000545328
0x0000020000016e08 : push 0x48000002 ; add esp, 0x48 ; ret
0x00000200005e437a : push 0x48894810 ; or byte ptr [rcx - 0x7f], al ; ret 0x1000
0x00000200000ace93 : push 0x48c48348 ; pop r13 ; pop r12 ; ret
0x00000200003846d9 : push 0x48c48348 ; ret
0x00000200003614e4 : push 0x48ffd439 ; add esp, 0x70 ; pop rbp ; ret
0x000002000012d0d6 : push 0x490012c9 ; add edx, ebx ; jmp rdx
0x00000200005502cf : push 0x4c0054f3 ; add ecx, ecx ; jmp r9
0x000002000013f07c : push 0x50c48348 ; pop r14 ; ret
0x0000020000100e3f : push 0x50c48348 ; pop rbp ; ret
0x0000020000006e98 : push 0x50c48348 ; pop rdi ; ret
0x00000200001ba666 : push 0x50c48348 ; pop rsi ; ret
0x00000200000839f2 : push 0x54 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000064c68e : push 0x58418948 ; ret
0x00000200000c9d96 : push 0x5c415d41 ; pop rbx ; pop rbp ; ret
0x00000200000516d9 : push 0x5c415d41 ; pop rsi ; pop rbp ; ret
0x00000200003fa458 : push 0x5d415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000438995 : push 0x5d415f41 ; pop rdi ; pop rsi ; ret
0x0000020000536293 : push 0x5d5b5e5f ; ret
0x00000200000dbb6c : push 0x5d5e5f41 ; pop rbx ; ret
0x00000200000320de : push 0x5e415f41 ; pop r12 ; pop rsi ; ret
0x000002000044635e : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200006c4615 : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000ef7f6 : push 0x5e5f5e41 ; pop rbp ; ret
0x000002000045ef19 : push 0x5f000002 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000660ab6 : push 0x63 ; ret
0x0000020000091938 : push 0x65 ; sbb edi, dword ptr [rax + 0x6e] ; ret
0x000002000008f775 : push 0x70 ; ret 0xccb
0x0000020000482892 : push 0x72 ; ret
0x00000200005a0d82 : push 0x76063b45 ; or edi, edi ; ret
0x00000200004fd762 : push 0x8448b43 ; adc byte ptr [rcx - 1], al ; ret
0x00000200004f5d32 : push 0x9c ; ret 0x48ff
0x000002000041ee92 : push 0xa0 ; ret
0x00000200004f905a : push 0xa5 ; sbb byte ptr [rax], al ; ret
0x0000020000085ddd : push 0xb3 ; pop rsp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000008e05d : push 0xb8 ; ret 0x3ecb
0x00000200006333a2 : push 0xbc ; ret
0x000002000008def1 : push 0xbd ; push rbp ; or dword ptr [rip - 0x27aeebc9], edi ; ret
0x000002000049f9de : push 0xc2 ; add dword ptr [rax], eax ; jmp 0x200004bbc1c
0x000002000041fcc6 : push 0xc9 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200006236a4 : push 0xd5 ; inc dword ptr [rbx - 0x7cb70740] ; ret
0x00000200006443fc : push 0xd8d48a8 ; scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; ret
0x00000200004bbaaa : push 0xdd ; push rsi ; ret
0x00000200004fa0d5 : push 0xf ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000060bd06 : push 0xf000001 ; xchg eax, ebp ; ret
0x0000020000443cd2 : push 0xf1 ; ret 0xe9ff
0x000002000012ea6c : push 0xf49f008 ; rcr dword ptr [rsi], -0xa ; ret
0x00000200004333d2 : push 0xfa ; ret
0x000002000060becc : push 0xfc98548 ; xchg eax, ebp ; ret
0x0000020000651686 : push 0xff ; inc dword ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x0000020000029d3c : push 1 ; jne 0x20000029d5b ; ret
0x0000020000572608 : push 2 ; add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200006408c2 : push bx ; mov ecx, r9d ; call 0x20000270049
0x0000020000661a35 : push fs ; ret 0x41ff
0x00000200005ebb7d : push gs ; call qword ptr [rax - 0x1a3dff17]
0x00000200003ad5d0 : push qword ptr [r11] ; jmp qword ptr [rcx]
0x000002000007720a : push qword ptr [r13 - 0xe] ; mov rax, r11 ; ret
0x00000200000b8b32 : push qword ptr [rax + rbx - 0x75] ; ret 0x41f0
0x0000020000122eff : push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x000002000052dd27 : push qword ptr [rax + rcx + 0x49] ; mov ecx, ebp ; call 0x200000d9fd8
0x00000200004b9fc4 : push qword ptr [rax + rcx + 0x49] ; mov ecx, esi ; call r15
0x00000200005b1d7f : push qword ptr [rax + rcx - 0x7f] ; jmp qword ptr [rbx]
0x00000200004908b8 : push qword ptr [rax + rdx - 0x75] ; ret
0x000002000042517f : push qword ptr [rbp + 1] ; ret
0x00000200004b906f : push qword ptr [rbp + 2] ; mov al, cl ; ret
0x00000200000a4e61 : push qword ptr [rbp + 3] ; ret 0
0x00000200001ab3a3 : push qword ptr [rbp + 6] ; and qword ptr [rdx + 8], 0 ; ret
0x000002000001ad81 : push qword ptr [rbp + 7] ; mov byte ptr [rcx + 0x185], dl ; ret
0x000002000039362d : push qword ptr [rbp + 7] ; ret
0x0000020000603950 : push qword ptr [rbp + rdx - 1] ; ret
0x00000200005abad3 : push qword ptr [rbp - 0x12] ; add rsp, 0x28 ; ret
0x000002000015502f : push qword ptr [rbp - 0x3e] ; jmp 0x20000155013
0x0000020000398bad : push qword ptr [rbp - 0x53] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005197c7 : push qword ptr [rbp - 0x5f] ; ret
0x000002000007720b : push qword ptr [rbp - 0xe] ; mov rax, r11 ; ret
0x00000200001525fb : push qword ptr [rbx + rax - 0x50] ; add ebx, eax ; xor al, al ; ret
0x000002000057b561 : push qword ptr [rbx - 0xa] ; ret
0x00000200001225cd : push qword ptr [rbx] ; div dh ; ret
0x000002000062a0aa : push qword ptr [rbx] ; fild dword ptr [rbx - 0x61f0f808] ; ret
0x000002000065308b : push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200003ae2b2 : push qword ptr [rbx] ; fisttp dword ptr [rbx + 0x358d48f9] ; ret 0xfa99
0x00000200000bf821 : push qword ptr [rbx] ; fucomi st(1) ; ret 0xfffb
0x000002000000ebfd : push qword ptr [rbx] ; fucomi st(3) ; ret
0x000002000059efad : push qword ptr [rbx] ; in eax, dx ; call 0x2000005b1f5
0x00000200000e4f5e : push qword ptr [rbx] ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x00000200003ad5d1 : push qword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200000c1183 : push qword ptr [rbx] ; leave ; call 0x200000e13b9
0x00000200001e81c2 : push qword ptr [rbx] ; leave ; call 0x200001444b1
0x0000020000580482 : push qword ptr [rbx] ; leave ; call 0x2000038c6a1
0x00000200001405d8 : push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x00000200003be4c7 : push qword ptr [rbx] ; leave ; jmp 0x200003be4c4
0x000002000047b8d5 : push qword ptr [rbx] ; rol byte ptr [rbp - 0x74238a40], cl ; ret
0x00000200005cc9f1 : push qword ptr [rbx] ; rol byte ptr [rbp - 0xcf8b40], cl ; ret
0x00000200005e14c5 : push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret
0x00000200005e1417 : push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret 0xf
0x00000200006f9e56 : push qword ptr [rbx] ; rol byte ptr [rcx - 0x75], cl ; iretd ; call 0x200006f6158
0x0000020000137add : push qword ptr [rbx] ; rol byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000062f979 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter -0x7318, -0xa ; ret
0x000002000062f896 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter 0x6fe8, -9 ; ret
0x0000020000644c88 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f019
0x0000020000500634 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x0000020000632d83 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f018
0x0000020000644b42 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f019
0x000002000047fdfe : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000043c048
0x00000200006f3511 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000115324 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011538f ; ret
0x00000200004ae9e7 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004aea52 ; ret
0x00000200004a9cbf : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000016b9f8 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200001277c1 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200000b01af : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rdi + 0x5e], bl ; ret
0x000002000070ade6 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x17f3b6], cl ; ret
0x000002000070adff : push qword ptr [rbx] ; ror byte ptr [rbp - 0x1917f2b6], cl ; ret
0x00000200004e67f5 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x74bbc5a1], cl ; ret
0x000002000064daad : push qword ptr [rbx] ; ror byte ptr [rcx - 0x381c59f3], 0xff ; ret
0x00000200004cee0e : push qword ptr [rbx] ; ror byte ptr [rcx - 0x77], 0x13 ; ret
0x00000200005b479b : push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0x35 ; pop rdx ; ret 0xffcd
0x0000020000388092 : push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0x3d ; ret
0x000002000049e7d3 : push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0x3d ; ret 0xdfa2
0x00000200004af292 : push qword ptr [rbx] ; sal al, 0xf ; mov cl, 0xd ; ret
0x00000200004967be : push qword ptr [rbx] ; shr al, cl ; jp 0x20000496801 ; ret 0x45ff
0x00000200003f6201 : push qword ptr [rbx] ; shr al, cl ; pop rbx ; lahf ; ret 0xe9ff
0x00000200003675ec : push qword ptr [rbx] ; shr al, cl ; pop rsp ; ret
0x00000200005d6499 : push qword ptr [rbx] ; shr al, cl ; ret
0x000002000060259a : push qword ptr [rbx] ; shr al, cl ; ret 0xa1db
0x0000020000620c76 : push qword ptr [rbx] ; shr al, cl ; ret 0xa992
0x0000020000603846 : push qword ptr [rbx] ; shr al, cl ; ret 0xc6b7
0x000002000049df58 : push qword ptr [rbx] ; shr al, cl ; xor ch, cl ; ret 0x4cff
0x00000200006132a2 : push qword ptr [rbx] ; shr cl, 0x5f ; jmp rax
0x00000200001ed225 : push qword ptr [rbx] ; shr cl, 0xf8 ; ret 0xfff2
0x0000020000605cff : push qword ptr [rbx] ; shr cl, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x00000200000cdf3a : push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000010181e : push qword ptr [rcx + rbx - 0x75] ; ret 0x45f0
0x000002000039a8af : push qword ptr [rcx + rdx*2 - 0x75] ; ret
0x00000200004e4466 : push qword ptr [rdi + 2] ; ret
0x0000020000596792 : push qword ptr [rdi + rax - 0x7c] ; leave ; jne 0x200005967a5 ; mov al, 1 ; ret
0x000002000059cdc4 : push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x000002000048644d : push qword ptr [rdx + 0x342be801] ; ret
0x0000020000495c66 : push qword ptr [rdx + 0x3c12e801] ; ret 0x48ff
0x000002000049557d : push qword ptr [rdx + 0x42fbe801] ; ret 0x4cff
0x0000020000494c50 : push qword ptr [rdx + 0x4c28e801] ; ret 0x48ff
0x0000020000494950 : push qword ptr [rdx + 0x4f28e801] ; ret 0x48ff
0x0000020000481a94 : push qword ptr [rdx + 0x7644e801] ; ret
0x00000200004819eb : push qword ptr [rdx + 0x76ede801] ; ret
0x000002000058e01e : push qword ptr [rdx + rax - 1] ; ret
0x00000200003df6d4 : push qword ptr [rdx + rbx - 0xa] ; ret
0x000002000052a4dd : push qword ptr [rdx + rdx + 0x48] ; mov ecx, ebp ; call 0x2000015993d
0x0000020000641b53 : push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x000002000047b09d : push qword ptr [rdx - 0x182417ff] ; ret
0x0000020000489a01 : push qword ptr [rdx - 0x18817ff] ; ret 0x4cff
0x000002000048b5df : push qword ptr [rdx - 0x250617ff] ; ret 0x48ff
0x000002000047cd22 : push qword ptr [rdx - 0x34a917ff] ; ret
0x000002000048c8c3 : push qword ptr [rdx - 0x37ea17ff] ; ret 0x48ff
0x000002000047e90f : push qword ptr [rdx - 0x509617ff] ; ret
0x000002000048f490 : push qword ptr [rdx - 0x63b717ff] ; ret 0x48ff
0x000002000051e49b : push qword ptr [rdx - 0x75] ; ret
0x0000020000491372 : push qword ptr [rdx - 0x7af917ff] ; ret 0x48ff
0x000002000048a447 : push qword ptr [rdx - 0xbce17ff] ; ret 0x4cff
0x0000020000447754 : push qword ptr [rdx] ; ret
0x0000020000073b4b : push qword ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200003ba7f1 : push qword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x0000020000547385 : push qword ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000605ae1 : push qword ptr [rsi + rax - 1] ; ret 0xefd1
0x000002000010e965 : push qword ptr [rsi + rbp - 0x75] ; ret
0x00000200006e9e6a : push qword ptr [rsi + rcx - 0xd] ; ret
0x0000020000107be8 : push qword ptr [rsp + rbp + 0x48] ; mov ecx, eax ; call 0x200003c3e98
0x00000200005b1c98 : push qword ptr [rsp + rbx - 0x7b] ; push qword ptr [rsp + rcx - 0x7f] ; jmp qword ptr [rbx]
0x00000200005b1c9c : push qword ptr [rsp + rcx - 0x7f] ; jmp qword ptr [rbx]
0x0000020000421c39 : push qword ptr [rsp - 0x75] ; enter 0x41e8, -0x1d ; ret 0x48ff
0x00000200001528b7 : push qword ptr [rsp - 0x75] ; ror byte ptr [rax - 0x75], 0x94 ; ret
0x000002000042723f : push r10 ; push rdi ; ret 0x3fc
0x00000200004f4c03 : push r11 ; fcos ; call 0x2000011f953
0x000002000064e3f2 : push r12 ; mov rcx, rbx ; call 0x2000026f018
0x000002000064e3f1 : push r12w ; mov rcx, rbx ; call 0x2000026f019
0x0000020000084d99 : push r13 ; xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x000002000001eda9 : push r8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005b4d6d : push r8 ; call 0x20000071004
0x00000200001ae05c : push r8 ; call 0x200001aa328
0x0000020000127251 : push r8 ; je 0x2000012725c ; ret
0x00000200000660fd : push r8 ; jne 0x2000006610c ; mov al, r8b ; ret
0x00000200001248ee : push r8 ; jne 0x200001248fd ; mov al, r9b ; ret
0x000002000001801c : push r8 ; mov eax, r8d ; ret
0x000002000054553d : push r8 ; push -0xfb8c00 ; ret 0x15eb
0x0000020000117366 : push r8 ; ret
0x000002000003b451 : push r8 ; shr eax, 0x18 ; and al, 1 ; ret
0x00000200006d3838 : push rax ; adc al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000016a560 : push rax ; adc al, 0x49 ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000047e920 : push rax ; adc al, ch ; leave ; jle 0x2000047e8f7 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001b1646 : push rax ; adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200000229bb : push rax ; adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rcx + 0x3b], al ; ret
0x000002000069fdc1 : push rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000013097b : push rax ; adc byte ptr [rdi], cl ; ret 0x8b49
0x0000020000463cad : push rax ; adc dh, dh ; ret 0x743f
0x000002000016c6f2 : push rax ; adc dword ptr [rax], eax ; call rax
0x00000200000bfc7e : push rax ; add al, 0 ; add bh, dh ; shl byte ptr [rbx], 1 ; ret
0x000002000059536e : push rax ; add al, 0 ; add byte ptr [rcx + 3], al ; ret 0x8944
0x000002000070550b : push rax ; add al, 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000064268b : push rax ; add al, 0x48 ; add esp, 0x28 ; ret
0x00000200004c6c58 : push rax ; add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x000002000014aa21 : push rax ; add al, 0x8b ; or al, ch ; ret 0x51ae
0x0000020000129330 : push rax ; add al, 0x8d ; sbb byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200001ab392 : push rax ; add al, 0xc3 ; mov dword ptr [rcx], edx ; ret
0x00000200003ead54 : push rax ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200004223ee : push rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 2], dh ; ret
0x00000200004024c8 : push rax ; add al, byte ptr [rax] ; jmp 0x200004023ee
0x00000200000ab55a : push rax ; add al, ch ; ret
0x0000020000555d24 : push rax ; add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200004b11e1 : push rax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000251999 : push rax ; add byte ptr [rax], al ; add ah, byte ptr [rip + 0x60c000d] ; ret 0x2546
0x000002000011751e : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000002000023b461 : push rax ; add byte ptr [rax], al ; and cl, byte ptr [rax] ; add al, 0 ; or eax, dword ptr [rsi] ; ret
0x00000200000679b5 : push rax ; add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000005d6aa : push rax ; add byte ptr [rax], al ; ret
0x000002000005d6a4 : push rax ; add byte ptr [rax], al ; xchg dword ptr [rcx + 0x506c], eax ; ret
0x000002000006ed41 : push rax ; add byte ptr [rdi], cl ; test edx, edx ; or byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000002000025cc7e : push rax ; add byte ptr [rsi], dh ; ret
0x000002000063503c : push rax ; add byte ptr ss:[rax], al ; add rsp, 0x28 ; ret
0x00000200001875bf : push rax ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x0000020000255d7f : push rax ; add cl, byte ptr [rdi] ; or byte ptr [rax], al ; add al, 0x16 ; add byte ptr [rsi], al ; sysenter
0x00000200006f4bc8 : push rax ; add cl, byte ptr [rdi] ; test ecx, eax ; ret
0x000002000061607a : push rax ; add dh, dh ; ret 0xf04
0x000002000061c325 : push rax ; add dh, dh ; ret 0xf10
0x00000200000f98d8 : push rax ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000474301 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200001944e5 : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000035ed85 : push rax ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064de92 : push rax ; add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x0000020000160a2c : push rax ; add dword ptr [rbx], edi ; ret
0x00000200001f6de7 : push rax ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x0000020000425e99 : push rax ; add dx, cx ; movzx eax, dx ; ret
0x000002000047d135 : push rax ; add eax, ebp ; and al, 0x7f ; ret
0x0000020000182ea6 : push rax ; add rax, r9 ; ret
0x000002000062377a : push rax ; add rbx, 2 ; jmp 0x20000623777
0x000002000001aba3 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000016f0a : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003fa67d : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000045dfcc : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000001edaa : push rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d096e : push rax ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000013afec : push rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003d7b36 : push rax ; add rsp, 0x28 ; pop r15 ; pop rdi ; ret
0x00000200000affc4 : push rax ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200003b4bc0 : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000043ba5e : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000003eb8d : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000003238c : push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000364d1b : push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001b395f : push rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000a8358 : push rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200000061b6 : push rax ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000e9c44 : push rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000564da : push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cb52d : push rax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012ba06 : push rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000368acc : push rax ; add rsp, 0x40 ; pop r15 ; ret
0x00000200001340dd : push rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000d07bf : push rax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001b1c2 : push rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004f8413 : push rax ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000b4957 : push rax ; add rsp, 0x68 ; pop r12 ; pop rdi ; ret
0x0000020000270f47 : push rax ; add rsp, 0x78 ; pop rsi ; pop rbp ; ret
0x0000020000127605 : push rax ; and al, 0x8b ; fmul dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b42
0x00000200000563a3 : push rax ; and al, 0x8b ; ret
0x00000200006e72b4 : push rax ; and bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x44f0
0x00000200000568cb : push rax ; and byte ptr [rax - 0x7d], cl ; ret
0x00000200005eec64 : push rax ; and byte ptr [rax - 0x7f], cl ; ret 0x88
0x00000200006ffe51 : push rax ; and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000057a456 : push rax ; and byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000200005497fd : push rax ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x000002000016aa7c : push rax ; and dh, dh ; ret 0x750f
0x00000200005b4d6e : push rax ; call 0x20000071003
0x00000200001ae05d : push rax ; call 0x200001aa327
0x0000020000523db8 : push rax ; call 0x20000270044
0x00000200006f3406 : push rax ; call 0x2000047f60f
0x000002000008b90e : push rax ; call qword ptr [rdx]
0x000002000007b5e7 : push rax ; call r10
0x00000200006d59fd : push rax ; call rdi
0x0000020000074dbf : push rax ; call rdx
0x00000200004263a4 : push rax ; cmp bl, ch ; mov al, 0x48 ; lea edx, dword ptr [rbx + 0x18] ; call rax
0x00000200000b5b8b : push rax ; cmp cl, ch ; psubd mm7, mm7 ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000d4b40 : push rax ; cmp dh, dh ; ret 0x7520
0x000002000003b465 : push rax ; cmp dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000140aee : push rax ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000140ada ; ret
0x0000020000665a7c : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x89ff
0x00000200001f5c07 : push rax ; dec dword ptr [rax - 0x75] ; ret
0x000002000001c0ad : push rax ; enter -0x72b8, 0xd ; ret 0x277c
0x0000020000039a63 : push rax ; fmul dword ptr [rax - 0x7d] ; ret
0x000002000038105d : push rax ; inc dword ptr [rax] ; ret
0x0000020000140af2 : push rax ; jb 0x20000140ad6 ; ret
0x0000020000127252 : push rax ; je 0x2000012725b ; ret
0x000002000042f5ec : push rax ; je 0x2000042f5fc ; mov eax, edx ; ret
0x000002000042f5ec : push rax ; je 0x2000042f5fd ; mov eax, edx ; ret
0x00000200005b4d68 : push rax ; je 0x200005b4d7d ; lea rcx, qword ptr [rbx + 0x50] ; call 0x20000071009
0x0000020000263784 : push rax ; jle 0x200002637c7 ; add byte ptr [rax], cl ; jmp qword ptr [rdx]
0x00000200001e235a : push rax ; jmp 0x200001e2657
0x00000200003d9d0a : push rax ; jmp 0x200003d9888
0x00000200004c74f5 : push rax ; jmp 0x200004c7501
0x00000200005a7a25 : push rax ; jmp 0x200005a79ec
0x000002000019794c : push rax ; jmp qword ptr [rcx]
0x00000200000660fe : push rax ; jne 0x2000006610b ; mov al, r8b ; ret
0x00000200001248ef : push rax ; jne 0x200001248fc ; mov al, r9b ; ret
0x00000200000d6663 : push rax ; jo 0x200000d6652 ; ret
0x000002000048d555 : push rax ; jo 0x2000048d57e ; and byte ptr [rax - 0x7d], cl ; ret 0xe802
0x00000200004a523f : push rax ; lea rdx, qword ptr [rsp + 0x48] ; mov rcx, rdi ; call rax
0x000002000008db7a : push rax ; loop 0x2000008dbae ; adc dword ptr [rdx], ebp ; lahf ; ret
0x000002000006c345 : push rax ; mov al, 1 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000052f2cd : push rax ; mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000223c14 : push rax ; mov cl, 0x13 ; add byte ptr [rax - 0x3ffec4f], bh ; ret
0x000002000001fd30 : push rax ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007ed53 : push rax ; mov eax, 0xf0 ; jmp 0x2000007b048
0x000002000007ed93 : push rax ; mov eax, 0xf2 ; jmp 0x2000007b048
0x000002000007edb3 : push rax ; mov eax, 0xf3 ; jmp 0x2000007b048
0x000002000007edd3 : push rax ; mov eax, 0xf4 ; jmp 0x2000007b048
0x000002000007edf3 : push rax ; mov eax, 0xf5 ; jmp 0x2000007b048
0x000002000007ee13 : push rax ; mov eax, 0xf6 ; jmp 0x2000007b048
0x000002000007ee33 : push rax ; mov eax, 0xf7 ; jmp 0x2000007b048
0x0000020000154988 : push rax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006e52e : push rax ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001801d : push rax ; mov eax, r8d ; ret
0x00000200001dd8b0 : push rax ; mov fs, esi ; push rsi ; ret 0xf10
0x00000200005265d7 : push rax ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x0000020000056e30 : push rax ; mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000062e324 : push rax ; mov r9, r15 ; call r12
0x000002000050709c : push rax ; mov rax, r11 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000049d09 : push rax ; mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000077148 : push rax ; mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x00000200003f0bb3 : push rax ; mov rcx, qword ptr [rsp + 0x40] ; call r10
0x00000200001af167 : push rax ; mov rcx, rbx ; call 0x200001ab3a6
0x00000200001af1bb : push rax ; mov rcx, rbx ; call 0x200001ab436
0x000002000046243a : push rax ; mov rcx, rbx ; call r15
0x0000020000398a5b : push rax ; mov rcx, rbx ; call rax
0x0000020000163621 : push rax ; movzx ecx, ax ; call r9
0x0000020000076835 : push rax ; or al, 0x5b ; ret
0x00000200005761e9 : push rax ; or byte ptr [rax - 0x3f], cl ; jmp 0x1ffc2e2aefd
0x000002000039024d : push rax ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000176e08 : push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000028672 : push rax ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x16], cl ; ret
0x000002000040eb6e : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000374286 : push rax ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006d6d30 : push rax ; or byte ptr [rbp - 0x77], al ; pop rax ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200006bde22 : push rax ; or byte ptr [rcx - 0x75], al ; ret 0x349
0x00000200001b982c : push rax ; or byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x000002000010c775 : push rax ; or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x00000200001ef169 : push rax ; or byte ptr [rcx - 1], al ; ret
0x0000020000535152 : push rax ; or dh, dh ; ret 0x7402
0x00000200003d7c60 : push rax ; or dh, dh ; ret 0xf02
0x00000200006ca053 : push rax ; or dword ptr [rax], r11d ; add rsp, 0x38 ; ret
0x0000020000552dc5 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000552e27 ; call 0x2000026f016
0x0000020000562d17 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000562d58 ; mov rcx, rdi ; call 0x2000026f019
0x0000020000562d29 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000562d6a ; mov rcx, r14 ; call 0x2000026f019
0x00000200000a78e1 : push rax ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000be341 : push rax ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000016f976 : push rax ; pop r13 ; ret
0x00000200000ac4f6 : push rax ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000361585 : push rax ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000039a108 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000047c69b : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000040661e : push rax ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000045b511 : push rax ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000002201d : push rax ; pop r14 ; ret
0x00000200005a3c75 : push rax ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000c5846 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000a35d1 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200005b68ee : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003addb2 : push rax ; pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000010d0d7 : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000127d8a : push rax ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000026def : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003a8bbf : push rax ; pop r15 ; ret
0x00000200000629d0 : push rax ; pop rbp ; ret
0x0000020000002810 : push rax ; pop rbx ; ret
0x000002000066993c : push rax ; pop rbx ; ret 0x48ff
0x0000020000134a35 : push rax ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001020cc : push rax ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001a956c : push rax ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000006e9c : push rax ; pop rdi ; ret
0x0000020000169925 : push rax ; pop rsi ; ret
0x000002000066a2d8 : push rax ; pop rsi ; ret 0xe8ff
0x00000200004c7cea : push rax ; push -0x74b7ef75 ; fdivr st(7) ; ret 0xe2c1
0x000002000054553e : push rax ; push -0xfb8c00 ; ret 0x15eb
0x00000200005c3d98 : push rax ; push rax ; push rdx ; call 0x20000270046
0x000002000016861e : push rax ; push rax ; test rdx, rdx ; je 0x20000168630 ; jmp rdx
0x000002000054fafc : push rax ; push rbx ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005c3d9a : push rax ; push rdx ; call 0x20000270044
0x00000200005c3d99 : push rax ; push rdx ; call 0x20000270045
0x0000020000118cec : push rax ; push rsp ; add byte ptr [rax], al ; ret
0x0000020000012a4c : push rax ; ret
0x0000020000217b14 : push rax ; ret 0x13
0x00000200006c1b01 : push rax ; ret 0x33ff
0x000002000064aebc : push rax ; ret 0x41ff
0x0000020000478d7c : push rax ; ret 0x48ff
0x00000200006c1b1f : push rax ; ret 0x4cff
0x0000020000494a4a : push rax ; ret 0x65ff
0x00000200006c1af7 : push rax ; ret 0x66ff
0x000002000008f3d2 : push rax ; ret 0x763c
0x0000020000652ae6 : push rax ; ret 0x85ff
0x000002000036374c : push rax ; ret 0xffdb
0x00000200001f7e0c : push rax ; ret 0xffe3
0x00000200005eb53c : push rax ; ret 0xffe5
0x00000200006c1ad9 : push rax ; ret 0xffff
0x0000020000381312 : push rax ; sar edi, cl ; jmp 0x20000381348
0x000002000022e52f : push rax ; sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; adc al, byte ptr [rsi] ; sysenter
0x000002000025696f : push rax ; sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x00000200003f311f : push rax ; sbb al, 0xf6 ; ret 0x7504
0x00000200005471e2 : push rax ; sbb al, ch ; ret
0x00000200001a3653 : push rax ; sbb byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000003a1a6 : push rax ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x00000200004ebe2c : push rax ; sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200001de9a7 : push rax ; sbb dh, ch ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x00000200003dd9c2 : push rax ; sbb dh, dh ; ret 0x4901
0x000002000003b452 : push rax ; shr eax, 0x18 ; and al, 1 ; ret
0x000002000013d222 : push rax ; sti ; call qword ptr [rax - 0x3c09aa15]
0x000002000057dafc : push rax ; sub al, 0xf6 ; ret 0x7401
0x00000200003a1299 : push rax ; sub dh, dh ; ret 0x7501
0x00000200003bc004 : push rax ; test edx, edx ; je 0x200003bc00f ; ret
0x00000200000e622f : push rax ; test rax, rax ; je 0x200000e61d9 ; mov qword ptr [r9], rax ; ret
0x000002000016861f : push rax ; test rdx, rdx ; je 0x2000016862f ; jmp rdx
0x000002000064c7dc : push rax ; test rdx, rdx ; je 0x2000064c7f0 ; mov rcx, rsi ; call rdx
0x00000200004b4b6c : push rax ; xlatb ; ret
0x00000200005be522 : push rax ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003c032d : push rax ; xor al, al ; add rsp, 0x30 ; pop r14 ; ret
0x000002000008a6bc : push rax ; xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x0000020000605cfc : push rax ; xor byte ptr [rdi - 0x162dcc01], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x0000020000661443 : push rax ; xor dh, dh ; ret 0xf02
0x0000020000480ba9 : push rax ; xor eax, eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000b02f5 : push rax ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016ba76 : push rax ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004772dc : push rax ; xor rcx, rsp ; call 0x200000a4e57
0x000002000055bdf8 : push rbp ; adc byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200004b1fa7 : push rbp ; adc dh, bl ; inc dword ptr [rcx] ; ret
0x000002000016c240 : push rbp ; adc dword ptr [rax], eax ; call r11
0x000002000016c237 : push rbp ; adc dword ptr [rax], eax ; call rax
0x000002000054feb8 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000000ec09 : push rbp ; add byte ptr [rax], al ; ret
0x000002000055bd9e : push rbp ; add byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200000c3cc9 : push rbp ; add dh, dh ; ret 0x7401
0x000002000002f3de : push rbp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], al ; ret
0x0000020000132039 : push rbp ; add dword ptr [rcx - 0x75], eax ; rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x00000200000d3c23 : push rbp ; add ebx, ebp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4504
0x000002000004a6e8 : push rbp ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000059173d : push rbp ; call 0x200000fb20f
0x000002000059173c : push rbp ; call 0x200000fb210
0x00000200001acce7 : push rbp ; call 0x200459a8f73
0x00000200004494e7 : push rbp ; cdq ; ret 0x4cff
0x000002000069b53b : push rbp ; cmp byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200001e3b67 : push rbp ; cmp byte ptr [rax - 0x73], cl ; loopne 0x200001e3b5d ; ret 0xf90b
0x00000200001044bd : push rbp ; cmp byte ptr [rax - 0x75], cl ; call rax
0x00000200006612ef : push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ff
0x000002000026f0e5 : push rbp ; dec dword ptr [rax - 9] ; ret 0xfff
0x0000020000117690 : push rbp ; enter -0x36cd, -0x18 ; jmp rdx
0x000002000045e229 : push rbp ; enter -0x76b8, 0x5d ; fmul dword ptr [rax - 0x75] ; ret 0x8948
0x00000200005c9270 : push rbp ; fmul dword ptr [rax - 0x77] ; ror byte ptr [r8 - 0x73], 0x35 ; ret
0x00000200001ff198 : push rbp ; idiv edi ; nop ; jmp 0x200000bb3f1
0x000002000008e777 : push rbp ; in eax, dx ; mov word ptr [rsi - 0x6d], gs ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000111287 : push rbp ; int1 ; or eax, 0xc4834800 ; pop rbx ; ret
0x000002000039f476 : push rbp ; mov al, 0x49 ; mov ecx, edx ; call rax
0x00000200004f1aff : push rbp ; mov bh, 0x49 ; mov ecx, ebx ; call 0x200001183c0
0x000002000051a98d : push rbp ; mov byte ptr [rax - 0x73], cl ; and al, 0x60 ; call 0x20000056bc9
0x00000200004eb484 : push rbp ; mov eax, 0x48c03345 ; mov ecx, edi ; call r15
0x00000200000194ce : push rbp ; mov rcx, qword ptr [rbp + 0x38] ; call rax
0x00000200005ed3dc : push rbp ; or byte ptr [rbx + rcx*4 + 0x74], 0x24 ; jo 0x200005ed36f ; ret 0x4404
0x00000200003a6fce : push rbp ; or byte ptr [rbx - 0x90cd409], cl ; ret 0xf20
0x000002000008def3 : push rbp ; or dword ptr [rip - 0x27aeebc9], edi ; ret
0x0000020000597ce5 : push rbp ; out dx, eax ; call 0x20000593f7c
0x00000200007087fe : push rbp ; pop qword ptr [rcx - 1] ; ret 0x345
0x00000200001c75ff : push rbp ; pop rax ; mov rcx, qword ptr [rbp + 0x68] ; call 0x200000d38f8
0x000002000042c127 : push rbp ; pop rcx ; ret
0x00000200007096cd : push rbp ; pop rdi ; cld ; dec dword ptr [rax - 0x7d] ; ret 0x4410
0x0000020000398a5a : push rbp ; push rax ; mov rcx, rbx ; call rax
0x00000200004eaf35 : push rbp ; push rbx ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001f209 : push rbp ; ret
0x000002000002ae27 : push rbp ; ret 0x32
0x00000200003807ef : push rbp ; ret 0x4166
0x0000020000478e69 : push rbp ; ret 0x48ff
0x00000200000914b2 : push rbp ; ret 0x7ec2
0x0000020000665063 : push rbp ; ret 0xe8ff
0x000002000070efaf : push rbp ; ret 0xff9e
0x0000020000599e47 : push rbp ; ret 0xffd5
0x000002000054f9a7 : push rbp ; ret 0xffef
0x00000200001ab037 : push rbp ; ret 0xffff
0x000002000054fe06 : push rbp ; rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x000002000062ad4b : push rbp ; salc ; push rsi ; ret
0x000002000048b8d9 : push rbp ; scasd eax, dword ptr [rdi] ; call rax
0x00000200004aefa8 : push rbp ; scasd eax, dword ptr [rdi] ; lea rcx, qword ptr [r15 + 0x68] ; call 0x200000ddfe9
0x000002000048b8d5 : push rbp ; scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r10 ; call rax
0x00000200006ec421 : push rbp ; shr al, 0xf4 ; ret
0x00000200001d496f : push rbp ; shr al, 1 ; ret 0xf439
0x00000200001532ca : push rbp ; xchg dword ptr [rcx - 0x7f], eax ; ret
0x0000020000666b97 : push rbp ; xchg eax, ebp ; ret 0x48ff
0x00000200004f3d67 : push rbp ; xor al, 0xb8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000601c94 : push rbp ; xor byte ptr [rax - 0x75], cl ; iretd ; call 0x2000012deb3
0x0000020000084d9a : push rbp ; xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x000002000004d52a : push rbx ; adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200004244fc : push rbx ; adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x00000200000602d0 : push rbx ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000006b962 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200003b4a8f : push rbx ; adc byte ptr [rbx - 0x74b3e3b5], cl ; ret
0x000002000056b191 : push rbx ; adc byte ptr [rcx + 0x2b86e801], dh ; ret
0x00000200000b2fa2 : push rbx ; adc dh, dh ; ret 0xf08
0x0000020000576d05 : push rbx ; adc dh, dh ; ret 0xf3f
0x00000200004eaf36 : push rbx ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000641b0a : push rbx ; add al, 0x73 ; jbe 0x20000641a9f ; ret 0x3949
0x000002000054ba34 : push rbx ; add al, 0xf ; mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x0000020000125565 : push rbx ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x000002000051bba5 : push rbx ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000006cb5d : push rbx ; add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x44] ; ret
0x00000200001486e7 : push rbx ; add byte ptr [rax], al ; ret
0x000002000010cafc : push rbx ; add byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], al ; ret 0xf08
0x00000200004b5175 : push rbx ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200000d92ad : push rbx ; add dh, dh ; ret 0x7401
0x0000020000034847 : push rbx ; add dword ptr [rax - 0x75], ecx ; iretd ; call 0x20000010a87
0x00000200003c2f51 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000002000038eee7 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001823ad : push rbx ; add dword ptr [rcx + 0xf], eax ; jmp 0x20000182404
0x00000200001c64fb : push rbx ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200004739a0 : push rbx ; add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x00000200001a4506 : push rbx ; add ebp, eax ; ret
0x00000200001305de : push rbx ; add ecx, eax ; call 0x1ffc34e46f0
0x0000020000197471 : push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000703779 : push rbx ; and byte ptr [rcx + 0x200], bh ; call r9
0x00000200006d55a8 : push rbx ; call rdi
0x000002000009a2ab : push rbx ; cli ; sahf ; ret
0x00000200001cd7d9 : push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000049231 : push rbx ; cmp byte ptr [rax + 0x3b], cl ; ret 0xd74
0x0000020000115c20 : push rbx ; cmp byte ptr [rax + 3], cl ; ret
0x00000200004b0709 : push rbx ; cmp byte ptr [rdx], bh ; ret 0x820f
0x00000200000df7e2 : push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200003c65e9 : push rbx ; enter -0x36, -0x75 ; ret
0x00000200001c31ac : push rbx ; enter -0x74b8, 0x15 ; sti ; ret
0x00000200004f4c04 : push rbx ; fcos ; call 0x2000011f952
0x00000200003d2b58 : push rbx ; fldenv dword ptr [rdx] ; add byte ptr [rcx - 0x75], al ; adc dh, bh ; ret 0xfff
0x0000020000648f11 : push rbx ; imul eax, dword ptr [rax + rax], 0x48 ; add esp, 0x68 ; ret
0x000002000064ceb5 : push rbx ; insd dword ptr [rdi], dx ; call 0x2000026f015
0x000002000064cdfe : push rbx ; insd dword ptr [rdi], dx ; call 0x20000270045
0x00000200001ed223 : push rbx ; int1 ; push qword ptr [rbx] ; shr cl, 0xf8 ; ret 0xfff2
0x0000020000057acc : push rbx ; je 0x20000057ac9 ; ret 0xf60
0x00000200001a98f5 : push rbx ; je 0x200001a98ba ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001b5b29
0x000002000054fafd : push rbx ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006408c3 : push rbx ; mov ecx, r9d ; call 0x20000270048
0x00000200004d712d : push rbx ; mov rax, r9 ; ret
0x0000020000448ce0 : push rbx ; mov rcx, rbx ; call rax
0x00000200000aa9ff : push rbx ; or byte ptr [rax + 0x3b], cl ; ret 0xa76
0x00000200004033e0 : push rbx ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rbx]
0x00000200003c91e2 : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000016fbb2 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200001f2f7c : push rbx ; or byte ptr [rcx - 0x75], al ; ret 0xf45
0x0000020000656f50 : push rbx ; or byte ptr [rcx - 0x75], cl ; retf ; mov rdi, rax ; call qword ptr [rbx]
0x0000020000040dbd : push rbx ; or dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000119c08 : push rbx ; or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046dff9 : push rbx ; outsb dx, byte ptr [rsi] ; ret
0x00000200006d5795 : push rbx ; pop rax ; call rdi
0x0000020000523db6 : push rbx ; pop rcx ; push rax ; call 0x20000270046
0x0000020000627c48 : push rbx ; push -0x7cbe001c ; call qword ptr [rax]
0x00000200006d59fc : push rbx ; push rax ; call rdi
0x00000200001ca931 : push rbx ; rcl byte ptr [rcx], cl ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000008e694 : push rbx ; ret
0x00000200006c184f : push rbx ; ret 0x45ff
0x00000200006c17c5 : push rbx ; ret 0x48ff
0x00000200006c17aa : push rbx ; ret 0x8bff
0x00000200004921f9 : push rbx ; ret 0xc
0x000002000056af69 : push rbx ; ret 0xffb0
0x0000020000463b3e : push rbx ; sbb bh, bh ; ret 0xc148
0x00000200006c9638 : push rbx ; sbb byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x0000020000116612 : push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000036ec5 : push rbx ; sbb dh, dh ; ret 0xf20
0x00000200004fa1bc : push rbx ; sub byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x8908
0x0000020000665eb1 : push rbx ; xchg eax, ebp ; ret 0xe9ff
0x00000200006648c1 : push rbx ; xchg eax, edi ; sar edi, -0x18 ; ret 0xadf5
0x00000200001b39ae : push rbx ; xor al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000040d1da : push rbx ; xor byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000177fe3 : push rbx ; xor byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200006349aa : push rbx ; xor byte ptr [rbp - 0x75], cl ; ret
0x0000020000496f49 : push rbx ; xor eax, 0x8b44ffdf ; ret
0x0000020000021cd7 : push rbx ; xor eax, dword ptr [rax] ; jne 0x20000021ce4 ; ret
0x0000020000021ce2 : push rbx ; xor eax, dword ptr [rax] ; ret
0x00000200000e1a8b : push rcx ; adc bl, al ; mov eax, 0xc000000d ; ret
0x00000200005837ae : push rcx ; adc bl, al ; mov qword ptr [rcx + 0x20], rdx ; ret
0x0000020000193c5b : push rcx ; adc byte ptr [r8], r8b ; ret
0x00000200005516fa : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xffd300e5 ; call rax
0x00000200003b50e6 : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xffecc6f9 ; call rax
0x00000200006d8b5a : push rcx ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000a3a0c : push rcx ; adc byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0xf ; ret
0x00000200003bbb9d : push rcx ; adc byte ptr [rbp - 0xe], dh ; mov al, 1 ; ret
0x00000200005837a8 : push rcx ; adc byte ptr [rbx + 9], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200006dc377 : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000003a2a9 : push rcx ; adc byte ptr [rdi], cl ; test dword ptr [rdi], esp ; cwde ; sbb al, byte ptr [rax] ; ret
0x00000200003c7f15 : push rcx ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4907
0x00000200003fb3ab : push rcx ; adc dh, dh ; ret 0x7504
0x000002000060ac96 : push rcx ; adc dh, dh ; ret 0xf01
0x000002000069f0df : push rcx ; adc eax, 0x8318894c ; ret 0x48f8
0x0000020000135c12 : push rcx ; adc eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x000002000019f9a4 : push rcx ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000475d30 : push rcx ; add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x0000020000426517 : push rcx ; add al, 0xf6 ; ret 0x7401
0x00000200004b7b98 : push rcx ; add al, bl ; mov eax, 0xc000000d ; ret
0x000002000007d975 : push rcx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffd6
0x000002000025fdf6 : push rcx ; add byte ptr [rax], ch ; push rdx ; add al, cl ; ret 0x24
0x0000020000632ac6 : push rcx ; add ch, al ; ret
0x000002000055df67 : push rcx ; add ch, al ; ret 0xff10
0x0000020000019796 : push rcx ; add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000002000013b0ab : push rcx ; add cl, byte ptr [rbp + 0x3b] ; ret 0x870f
0x0000020000016e33 : push rcx ; add dh, dh ; ret 0x7501
0x00000200001f82f5 : push rcx ; add dh, dh ; ret 0xf10
0x000002000007f975 : push rcx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffb6
0x000002000050b34d : push rcx ; add dword ptr [rcx + 3], eax ; ret 0x4566
0x00000200004d82ed : push rcx ; add dword ptr [rcx - 0x75], eax ; ret
0x0000020000131987 : push rcx ; add dword ptr [rcx - 0x75], ecx ; fucomp st(3) ; mov cl, byte ptr [rax - 0x75] ; ret
0x0000020000006c73 : push rcx ; add eax, 0xe8c03345 ; ret
0x0000020000053153 : push rcx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200000bd4ad : push rcx ; add eax, ebp ; insb byte ptr [rdi], dx ; ret
0x0000020000020f86 : push rcx ; add eax, ebp ; xchg eax, ebx ; mov byte ptr [rax], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000016a9aa : push rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a42fd : push rcx ; and byte ptr [rcx - 0x75], cl ; fisttp qword ptr [rcx - 0x7d] ; ret 0x660a
0x0000020000548a53 : push rcx ; and byte ptr [rcx - 0x77], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x000002000014a2ca : push rcx ; and dh, dh ; ret 0xf01
0x0000020000006f61 : push rcx ; and dh, dh ; ret 0xf0f
0x00000200000a3a22 : push rcx ; call 0x20051cd4979
0x000002000040849e : push rcx ; call rax
0x000002000070e790 : push rcx ; cdq ; push rsi ; ret
0x000002000006ed05 : push rcx ; cmp dh, dh ; ret 0xf08
0x00000200001f78ab : push rcx ; cwde ; push rsi ; ret
0x00000200006646ba : push rcx ; cwde ; ret 0xff
0x00000200000a3a15 : push rcx ; fmul dword ptr [rax + 0xf] ; ret
0x0000020000064318 : push rcx ; fst dword ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000040720d : push rcx ; in al, dx ; push rsi ; ret
0x000002000052f434 : push rcx ; je 0x2000052f430 ; ret 0xf02
0x000002000052f986 : push rcx ; je 0x2000052f982 ; ret 0xf02
0x0000020000361d0f : push rcx ; jle 0x20000361d07 ; jmp qword ptr [rbx]
0x00000200004d9dda : push rcx ; jne 0x200004d9deb ; test eax, eax ; setg al ; ret
0x000002000060d0ac : push rcx ; jns 0x2000060d09f ; mov ebp, 0x8bffa65c ; ret
0x00000200000ee231 : push rcx ; jo 0x200000ee222 ; ret 0x8b44
0x000002000001bb5b : push rcx ; mov dword ptr ss:[rcx + 8], 0x48 ; ret
0x000002000015db31 : push rcx ; or bh, bh ; ret 0x6348
0x00000200003d14ed : push rcx ; or bh, dh ; ret 0x1ff
0x000002000011a1e0 : push rcx ; or bl, ch ; clc ; xor eax, eax ; ret
0x00000200000a3a07 : push rcx ; or byte ptr [rax + 0xf], cl ; ret
0x00000200000e754b : push rcx ; or byte ptr [rax + rbx - 0xa], dh ; ret 0x7504
0x00000200001a0bab : push rcx ; or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200006157b8 : push rcx ; or byte ptr [rax - 0x75], cl ; iretd ; call r10
0x0000020000054934 : push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000015db56 : push rcx ; or byte ptr [rbp - 0xc128a2e], al ; ret
0x0000020000071e45 : push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x0000020000060ae5 : push rcx ; or byte ptr [rcx - 0x73], al ; inc qword ptr [r9 - 0x75] ; ret 0xc148
0x00000200000cd144 : push rcx ; or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200006fed32 : push rcx ; or dh, dh ; ret 0xf01
0x00000200001e1201 : push rcx ; out dx, al ; push rsi ; ret 0x7401
0x0000020000101b74 : push rcx ; pop rax ; add rdx, rax ; jmp 0x20000101b43
0x000002000066a3d3 : push rcx ; pop rbp ; ret 0x4cff
0x0000020000176eff : push rcx ; pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x00000200003bc003 : push rcx ; push rax ; test edx, edx ; je 0x200003bc010 ; ret
0x0000020000061c78 : push rcx ; push rdx ; ret
0x00000200001498a1 : push rcx ; push rsp ; mov eax, edx ; ret
0x0000020000145a7b : push rcx ; ret
0x0000020000499bd6 : push rcx ; ret 0x15
0x0000020000376e37 : push rcx ; ret 0x30
0x000002000047fc57 : push rcx ; ret 0x48ff
0x00000200006c1ac0 : push rcx ; ret 0x4ff
0x000002000049498b : push rcx ; ret 0x65ff
0x000002000008e2e0 : push rcx ; ret 0xcce4
0x00000200006c7357 : push rcx ; ret 0xff99
0x000002000061f453 : push rcx ; ret 0xffc7
0x00000200005b33e3 : push rcx ; ret 0xffcc
0x000002000051adab : push rcx ; ret 0xffe3
0x0000020000123ad7 : push rcx ; ret 0xfffa
0x0000020000463d94 : push rcx ; sbb al, 0xff ; ret 0xfa81
0x00000200006bfdec : push rcx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000608512 : push rcx ; sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x000002000015866e : push rcx ; sbb byte ptr [rbx], bh ; ret 0x2d73
0x00000200005fb9b7 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x0000020000132a39 : push rcx ; sbb dh, dh ; ret 0x7510
0x0000020000132a41 : push rcx ; sbb esi, esi ; ret 0x7508
0x0000020000502109 : push rcx ; sldt word ptr [rcx - 0x75] ; ret 0x8d48
0x0000020000399152 : push rcx ; sub byte ptr [rcx - 1], al ; ret
0x000002000039c3e5 : push rcx ; sub dh, dh ; ret 0xf02
0x000002000008dde8 : push rcx ; sub esi, eax ; ret
0x000002000001bc33 : push rcx ; xchg eax, ebp ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000070a687 : push rcx ; xor al, 0xf6 ; ret 0x7401
0x00000200000dc8ab : push rcx ; xor byte ptr [rax + 0x28c48348], dl ; ret
0x000002000014a924 : push rdi ; adc al, 0 ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200001aa512 : push rdi ; adc al, 0xf6 ; ret 0x7408
0x0000020000182923 : push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200004eb65e : push rdi ; add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x00000200001cbf3f : push rdi ; add al, 0xf6 ; ret 0xf08
0x000002000001b2d7 : push rdi ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x5f7
0x000002000005879f : push rdi ; add byte ptr [rdi], al ; sub bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x000002000038518f : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200006658fe : push rdi ; and rax, 0xfffffffffffffff0 ; add rax, 0x20 ; ret
0x000002000043c6f9 : push rdi ; cmc ; ret 0xebff
0x0000020000059a6f : push rdi ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004ebdc3 : push rdi ; cmp byte ptr [rbx], dh ; leave ; call rax
0x00000200004ebdd0 : push rdi ; cmp byte ptr [rcx + 1], bh ; call r8
0x00000200005b51ed : push rdi ; cmp byte ptr [rcx + 3], bh ; call rax
0x00000200006cc9e1 : push rdi ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200006d0cd5 : push rdi ; fistp qword ptr [rdi + rdi*8 + 0x20c48348] ; pop rdi ; ret
0x000002000006433c : push rdi ; fst dword ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200001e1a89 : push rdi ; hlt ; inc dword ptr [rbp - 0x75] ; out 0xe9, al ; ret
0x000002000046cbf5 : push rdi ; insd dword ptr [rdi], dx ; ret
0x0000020000567c15 : push rdi ; jbe 0x20000567bd3 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000043c22d : push rdi ; je 0x2000043c229 ; ret 0xf20
0x0000020000021dff : push rdi ; lea rax, qword ptr [rip + 0xdc089] ; ret
0x0000020000016ec5 : push rdi ; mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x00000200005587e4 : push rdi ; or al, ch ; int1 ; ret
0x00000200005291c3 : push rdi ; or byte ptr [rax - 0x73], cl ; or r8b, bpl ; ret 0xaf2f
0x000002000002ca55 : push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000005833 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000020000656eff : push rdi ; or byte ptr [rbp - 0x75], al ; ret
0x00000200003c3335 : push rdi ; or byte ptr [rbx - 0x72b3e7b9], cl ; add al, 0xc2 ; jmp 0x200003c3313
0x00000200006d98d2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x4f], al ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200006e26c3 : push rdi ; or byte ptr [rcx + rcx*4 + 0x7f], al ; adc byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000080515 : push rdi ; pop rbx ; cmp byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000014aec5 : push rdi ; push -0x74b62f75 ; add cl, byte ptr [rcx - 0x7f] ; ret 0x160
0x000002000041fcc5 : push rdi ; push 0xc9 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001bde8d : push rdi ; ret
0x000002000041f24d : push rdi ; ret 0x3fc
0x00000200003bae8b : push rdi ; ret 0xd
0x00000200006c4bd5 : push rdi ; ret 0xebff
0x00000200005e7aa5 : push rdi ; ret 0xffef
0x0000020000701bf6 : push rdi ; ret 0xfffe
0x0000020000548c95 : push rdi ; ret 6
0x0000020000038780 : push rdi ; ror byte ptr [rax - 1], 1 ; ret 0x8348
0x00000200005fcae4 : push rdi ; sbb al, ch ; xchg eax, ebp ; ret
0x00000200003b32e5 : push rdi ; sbb dh, dl ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x00000200001fa052 : push rdi ; shl byte ptr [rbx], 1 ; ret
0x0000020000111c62 : push rdi ; stc ; call qword ptr [rax - 0xb2a3d17]
0x0000020000494985 : push rdi ; sub eax, 0x72e8ffe4 ; push rcx ; ret 0x65ff
0x00000200001590ed : push rdx ; adc al, 0x8b ; adc al, 0x2b ; ret 0x90c3
0x000002000035eb1f : push rdx ; adc bl, ch ; ret 0x8b48
0x00000200001d7a55 : push rdx ; adc cl, ch ; ret
0x0000020000261fd2 : push rdx ; add ah, dh ; ret
0x0000020000147ff7 : push rdx ; add al, 0x83 ; ret 0x2307
0x000002000006a3f0 : push rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200003a9de8 : push rdx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000025fdfa : push rdx ; add al, cl ; ret 0x24
0x0000020000264512 : push rdx ; add al, dh ; add edx, dword ptr [rdx] ; ret
0x000002000025dc1e : push rdx ; add byte ptr [rax + 0x18005203], dl ; ret
0x0000020000168862 : push rdx ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000025dc22 : push rdx ; add byte ptr [rax], bl ; ret
0x0000020000261fce : push rdx ; add byte ptr [rdx + rcx + 0x52], cl ; add ah, dh ; ret
0x0000020000402638 : push rdx ; add cl, byte ptr [rcx - 0x74be17bb] ; ret 0xbb41
0x000002000013b325 : push rdx ; add dh, dh ; ret 0x7501
0x000002000005158b : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000019b6d7 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200001c611e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000200004f4f73 : push rdx ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7374b63f], cl ; ret
0x0000020000367193 : push rdx ; and al, 0xe8 ; ret 0xfff0
0x0000020000441e88 : push rdx ; and byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000200005c3d9b : push rdx ; call 0x20000270043
0x000002000039362a : push rdx ; cmc ; push qword ptr [rbp + 7] ; ret
0x00000200004b3517 : push rdx ; fdivp st(7) ; test rax, rax ; je 0x200004b3529 ; call rax
0x000002000020d41c : push rdx ; fisttp word ptr [rbx] ; add ah, bh ; ret
0x00000200001f058a : push rdx ; in al, dx ; dec esp ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200004446aa : push rdx ; in eax, -1 ; call 0x2000006ad2f
0x000002000004f232 : push rdx ; jne 0x2000004f248 ; ret
0x000002000054fc49 : push rdx ; mov ch, 0xff ; add rsp, 0x58 ; ret
0x00000200004f1f81 : push rdx ; mov eax, 0x48c033ff ; add esp, 0x28 ; ret
0x000002000008129a : push rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200004e034a : push rdx ; neg byte ptr [rip + 0x189b800] ; add al, al ; ret
0x000002000002fda6 : push rdx ; or al, 0x8b ; ret 0x25
0x0000020000022f8a : push rdx ; or byte ptr [rax - 0x75], cl ; jmp 0x1ffffd0bae3
0x00000200003b41f3 : push rdx ; or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x00000200000ee21a : push rdx ; or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x00000200001f7240 : push rdx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001f72af : push rdx ; or byte ptr [rdi], cl ; xchg eax, esp ; ror byte ptr [rbp - 0x77], 4 ; ret 0x8b41
0x000002000014840f : push rdx ; or eax, dword ptr [rax] ; mov al, 1 ; jmp 0x200001483df
0x000002000014840e : push rdx ; or eax, dword ptr [rax] ; mov al, 1 ; jmp 0x200001483e0
0x000002000066a00a : push rdx ; pop rdi ; ret 0x48ff
0x000002000066a2ea : push rdx ; pop rsi ; ret 0x48ff
0x00000200006c1b52 : push rdx ; push rax ; ret 0x48ff
0x00000200001e1a88 : push rdx ; push rdi ; hlt ; inc dword ptr [rbp - 0x75] ; out 0xe9, al ; ret
0x0000020000427240 : push rdx ; push rdi ; ret 0x3fc
0x000002000005c28a : push rdx ; ret
0x0000020000026dfe : push rdx ; ret 0x17
0x000002000015b8e2 : push rdx ; ret 0x18
0x000002000064adff : push rdx ; ret 0x48ff
0x00000200006c1918 : push rdx ; ret 0x8bff
0x00000200006c18c7 : push rdx ; ret 0xffff
0x000002000064bee3 : push rdx ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x000002000042c3d1 : push rdx ; sub cl, ch ; ret 0x741
0x00000200001277f9 : push rdx ; xor byte ptr [rax + 0x3b], cl ; ret 0x8948
0x00000200004df67b : push rdx ; xor byte ptr [rcx - 0x77], al ; ret
0x00000200001140a2 : push rdx ; xor ebx, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200003cd5d6 : push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000002000006290b : push rsi ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x5f7
0x00000200004dedcc : push rsi ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200000e9c4f : push rsi ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000064358d : push rsi ; call 0x20000270044
0x00000200004b9033 : push rsi ; fcomp dword ptr [rdx] ; leave ; and dl, cl ; mov al, dl ; ret
0x0000020000064330 : push rsi ; fst dword ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000e6497 : push rsi ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x000002000064e5cb : push rsi ; mov rcx, rdi ; call 0x2000026f018
0x0000020000081bb0 : push rsi ; or byte ptr [rax + 0x9d], dl ; add bl, cl ; ret
0x00000200005e0a2f : push rsi ; or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; ret 0xffd9
0x0000020000546e0f : push rsi ; or byte ptr [rbp + 0x8083], cl ; add byte ptr [rbx], bh ; ret 0x2375
0x00000200005973fd : push rsi ; or byte ptr [rbp - 0x75], al ; outsb dx, byte ptr [rsi] ; add al, 0x8b ; ret 0xe083
0x000002000059d0d3 : push rsi ; or byte ptr [rcx - 0x75], al ; ret
0x00000200003f0983 : push rsi ; or byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000010fc3b : push rsi ; or eax, 0x568b4800 ; and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000013cd06 : push rsi ; pop rax ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000064edb0 : push rsi ; push sp ; call 0x20000270047
0x0000020000661dee : push rsi ; pushfq ; ret 0x80ff
0x000002000000e1ea : push rsi ; ret
0x000002000047e33e : push rsi ; ret 0x33ff
0x00000200000dd429 : push rsi ; ret 0x4508
0x00000200000f2461 : push rsi ; ret 0x7401
0x00000200001dd475 : push rsi ; ret 0x7402
0x00000200000126f1 : push rsi ; ret 0x7403
0x00000200001dd488 : push rsi ; ret 0x7404
0x00000200000dff3c : push rsi ; ret 0x7408
0x00000200001dd4ad : push rsi ; ret 0x7410
0x000002000013d7ca : push rsi ; ret 0x7420
0x00000200004626e9 : push rsi ; ret 0x7501
0x0000020000122b08 : push rsi ; ret 0xba01
0x00000200006bdb88 : push rsi ; ret 0xe904
0x00000200003ffd56 : push rsi ; ret 0xebff
0x000002000001322c : push rsi ; ret 0xf01
0x00000200001ea783 : push rsi ; ret 0xf02
0x0000020000011f17 : push rsi ; ret 0xf03
0x00000200000c424a : push rsi ; ret 0xf04
0x00000200001d9097 : push rsi ; ret 0xf07
0x000002000011f8ef : push rsi ; ret 0xf08
0x00000200001cbf5d : push rsi ; ret 0xf10
0x00000200000dd1f4 : push rsi ; ret 0xf1e
0x00000200001dd4c0 : push rsi ; ret 0xf20
0x0000020000461abf : push rsi ; ret 0xf44
0x00000200001b18d2 : push rsi ; ret 0xffff
0x000002000046ddd5 : push rsi ; sbb al, 0x3b ; ret 0x870f
0x0000020000055ed9 : push rsi ; sbb al, byte ptr [rax] ; ret
0x000002000013034c : push rsi ; sbb byte ptr [rcx + 0xf], cl ; ret
0x000002000070d550 : push rsi ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x000002000070d542 : push rsi ; sti ; push rsi ; ret 0xf08
0x0000020000527dcd : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000527d5b : push rsi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000064f54e : push rsi ; xor di, r15w ; call 0x20000270049
0x0000020000258e71 : push rsp ; adc byte ptr [rax], al ; sysenter
0x000002000024d219 : push rsp ; adc eax, dword ptr [rax] ; sysenter
0x00000200003c1888 : push rsp ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000180b63 : push rsp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000839f3 : push rsp ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006642af : push rsp ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000118ced : push rsp ; add byte ptr [rax], al ; ret
0x000002000066432c : push rsp ; add byte ptr [rax], al ; xor esi, esi ; call 0x20000150583
0x00000200005502d1 : push rsp ; add byte ptr [rbx + rax - 0x37], cl ; jmp r9
0x000002000058fc6a : push rsp ; add dword ptr [rax - 0x7bf02d7c], eax ; ret 2
0x0000020000482862 : push rsp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000200004d8a1c : push rsp ; add eax, 0x2b450000 ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d4c
0x00000200005e2298 : push rsp ; and al, 0x20 ; call 0x2000015e535
0x00000200006465af : push rsp ; and al, 0x20 ; call rax
0x0000020000646bb5 : push rsp ; and al, 0x20 ; call rbx
0x0000020000708131 : push rsp ; and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x0000020000522d10 : push rsp ; and al, 0x20 ; mov ecx, edi ; call rsi
0x0000020000396c85 : push rsp ; and al, 0x20 ; mov edx, r10d ; call r11
0x0000020000423be1 : push rsp ; and al, 0x20 ; mov r15d, eax ; call 0x200000522b5
0x0000020000423b54 : push rsp ; and al, 0x20 ; mov rcx, rax ; call 0x200000522b5
0x0000020000421ce6 : push rsp ; and al, 0x20 ; mov rcx, rbp ; call 0x2000004fa8d
0x0000020000641c63 : push rsp ; and al, 0x24 ; jmp 0x20000641c2f
0x0000020000168dda : push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x0000020000498c54 : push rsp ; and al, 0x28 ; mov rcx, rbx ; call 0x200000b8e89
0x00000200001c84b0 : push rsp ; and al, 0x28 ; mov rcx, rbx ; call 0x2000017473c
0x0000020000150bab : push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x00000200006a11cf : push rsp ; and al, 0x30 ; call r10
0x0000020000520b0a : push rsp ; and al, 0x30 ; mov ecx, edi ; call 0x2000014b868
0x000002000002fbd3 : push rsp ; and al, 0x30 ; mov rcx, r14 ; call 0x200000dbe28
0x0000020000526c30 : push rsp ; and al, 0x38 ; call 0x200001536f6
0x000002000016b776 : push rsp ; and al, 0x38 ; mov dword ptr [rsp + 0x40], eax ; call r9
0x0000020000383804 : push rsp ; and al, 0x38 ; mov rcx, rsi ; call 0x2000004fa8c
0x000002000007b5e1 : push rsp ; and al, 0x40 ; add rsp, 0x50 ; call r10
0x00000200004f4408 : push rsp ; and al, 0x40 ; call 0x200001183be
0x00000200004f442b : push rsp ; and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x200004f43d1
0x0000020000023e8f : push rsp ; and al, 0x48 ; call r10
0x00000200005adf94 : push rsp ; and al, 0x48 ; call rax
0x0000020000074db8 : push rsp ; and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200004a5242 : push rsp ; and al, 0x48 ; mov rcx, rdi ; call rax
0x00000200003f0bb1 : push rsp ; and al, 0x50 ; mov rcx, qword ptr [rsp + 0x40] ; call r10
0x00000200001af165 : push rsp ; and al, 0x50 ; mov rcx, rbx ; call 0x200001ab3a8
0x00000200001af1b9 : push rsp ; and al, 0x50 ; mov rcx, rbx ; call 0x200001ab438
0x0000020000462438 : push rsp ; and al, 0x50 ; mov rcx, rbx ; call r15
0x000002000016361f : push rsp ; and al, 0x50 ; movzx ecx, ax ; call r9
0x00000200003e7977 : push rsp ; and al, 0x58 ; mov rcx, rbx ; call r12
0x00000200001ee61c : push rsp ; and al, 0x60 ; call qword ptr [rsi]
0x0000020000489501 : push rsp ; and al, 0x60 ; mov rcx, r10 ; call 0x200000b8ae9
0x00000200003c1241 : push rsp ; and al, 0x60 ; mov rcx, rbx ; call rsi
0x000002000064820b : push rsp ; and al, 0x68 ; add rsp, 0x38 ; ret
0x00000200001b966d : push rsp ; and al, 0x70 ; add rsp, 0x38 ; ret
0x000002000041113a : push rsp ; and al, 0x70 ; call 0x200003dd3e5
0x00000200003c0818 : push rsp ; and al, 0x70 ; mov rcx, rbp ; call rsi
0x00000200001a5c4e : push rsp ; and al, 0x70 ; mov rcx, rdi ; call r9
0x00000200001a5c90 : push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x0000020000608b59 : push rsp ; bswap eax ; inc dword ptr [rbx - 0x37f02bf3] ; jmp qword ptr [rax]
0x000002000064edb3 : push rsp ; call 0x20000270044
0x000002000064edb2 : push rsp ; call 0x20000270045
0x00000200005c6e34 : push rsp ; call rax
0x00000200001df081 : push rsp ; enter 0x4208, -0x77 ; push rsp ; ret
0x000002000014f448 : push rsp ; enter 0x4308, -0x77 ; push rsp ; ret
0x000002000015e7ac : push rsp ; enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x00000200000910f9 : push rsp ; fild word ptr [rcx - 2] ; ret 0xb87
0x0000020000601208 : push rsp ; fxch st(0), st(1) ; push rsi ; ret
0x000002000010140a : push rsp ; imul ebx, dword ptr [rsi], 0xf32d7500 ; ret
0x0000020000371ca2 : push rsp ; in al, -2 ; push rsi ; ret
0x00000200006d1e39 : push rsp ; inc dword ptr [rcx - 0x75] ; ret 0x8d48
0x000002000009115a : push rsp ; jmp 0x1ffd992d392
0x0000020000432a41 : push rsp ; jmp 0x20000432790
0x000002000043e446 : push rsp ; jnp 0x2000043e44d ; ret 0x823c
0x00000200002088a8 : push rsp ; js 0x200002088d4 ; add byte ptr [rdx], al ; or al, byte ptr [rbx] ; add byte ptr [rdx], cl ; ret 0x7006
0x00000200001498a2 : push rsp ; mov eax, edx ; ret
0x000002000039e34c : push rsp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004909f2 : push rsp ; mov rcx, qword ptr [rbx + 0x20] ; call 0x200000b5018
0x000002000064e3f3 : push rsp ; mov rcx, rbx ; call 0x2000026f017
0x000002000045eac7 : push rsp ; or al, 0 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200002481ad : push rsp ; or al, 0 ; sysenter
0x000002000021ce71 : push rsp ; or al, byte ptr [rax] ; sysenter
0x000002000070f6d3 : push rsp ; or bh, bh ; push rsi ; ret
0x00000200002087d5 : push rsp ; or byte ptr [rax], al ; sysenter
0x00000200002179e1 : push rsp ; or dword ptr [rax], eax ; sysenter
0x000002000020c565 : push rsp ; or eax, dword ptr [rax] ; sysenter
0x00000200006c1b48 : push rsp ; push rax ; ret 0x41ff
0x000002000064ceb4 : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x2000026f016
0x000002000064ceb3 : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x2000026f017
0x000002000064cdfd : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000270046
0x000002000064cdfc : push rsp ; push rbx ; insd dword ptr [rdi], dx ; call 0x20000270047
0x00000200004e5d80 : push rsp ; rcl dword ptr [rax + rax], 1 ; call r12
0x0000020000028258 : push rsp ; rcl dword ptr [rax], 1 ; ret
0x00000200000261a0 : push rsp ; ret
0x000002000006a09b : push rsp ; ret 0x16
0x000002000047ebf8 : push rsp ; ret 0x41ff
0x0000020000478f1f : push rsp ; ret 0x45ff
0x000002000016e18b : push rsp ; ret 0x4870
0x00000200001d83b7 : push rsp ; ret 0x4878
0x0000020000478fa2 : push rsp ; ret 0x48ff
0x00000200001a85e2 : push rsp ; ret 0x7210
0x00000200001a89f5 : push rsp ; ret 0x7310
0x0000020000174d2e : push rsp ; ret 0x7508
0x00000200006526f1 : push rsp ; ret 0xff
0x0000020000012a45 : push rsp ; sal dword ptr [rcx + rax*2 - 1], 1 ; xchg eax, ecx ; push rax ; ret
0x000002000041da11 : push rsp ; sbb al, 0 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200003c14a8 : push rsp ; sti ; ret
0x00000200006355e8 : push rsp ; stosb byte ptr [rdi], al ; ret
0x0000020000047f56 : push rsp ; test byte ptr [rax - 1], al ; ret 0x5489
0x00000200001639cf : push rsp ; xchg eax, ecx ; adc al, 0x3b ; ret 0xe672
0x00000200001639b5 : push rsp ; xchg eax, ecx ; adc byte ptr [rbx], bh ; ret 0x473
0x00000200001639ff : push rsp ; xchg eax, ecx ; and byte ptr [rbx], bh ; ret 0xb677
0x00000200001639ef : push rsp ; xchg eax, ecx ; sbb al, 0x3b ; ret 0xc672
0x00000200001639df : push rsp ; xchg eax, ecx ; sbb byte ptr [rbx], bh ; ret 0xd672
0x000002000009f415 : push rsp ; xchg eax, esp ; movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x000002000064e5ca : push si ; mov rcx, rdi ; call 0x2000026f019
0x000002000064edb1 : push sp ; call 0x20000270046
0x0000020000106c70 : pushfq ; adc dword ptr [rsi], 0 ; add rsp, 0x28 ; ret
0x0000020000139a79 : pushfq ; adc eax, dword ptr [rax] ; setb al ; ret
0x0000020000466630 : pushfq ; add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x000002000047b589 : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007102d : pushfq ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000048c3e3 : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x840f
0x0000020000447087 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001757b8 : pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200005214c1 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004307a1 : pushfq ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000011236 : pushfq ; and al, 0x58 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000011b4a : pushfq ; and al, 0x58 ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfff6
0x00000200004621c4 : pushfq ; and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7b], cl ; ret
0x00000200004f53ef : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004f5e2e : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000012fb6f : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000002000041a605 : pushfq ; and al, 0x80 ; add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000461ff0 : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000376e84 : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200004112f7 : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000180f3f : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004fd3e3 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200003fdbbe : pushfq ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003b9f4a : pushfq ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x000002000046662e : pushfq ; and al, 0x9c ; add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x00000200006f0236 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000c356a : pushfq ; and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200001f52c1 : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200003c3a25 : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003c1c99 : pushfq ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret
0x000002000058ed2a : pushfq ; and al, 0xf0 ; add byte ptr [rax], al ; add bh, bh ; ret 0x49e8
0x00000200006108b8 : pushfq ; and al, 0xf0 ; add dword ptr [rax], eax ; add bh, dh ; ret
0x00000200003e3f7b : pushfq ; and dword ptr [rax], eax ; mov rcx, r15 ; call 0x20000012a69
0x0000020000571200 : pushfq ; cmp ch, dl ; dec dword ptr [rbx + 0x79c085e8] ; ret
0x000002000066a5a0 : pushfq ; cmp edx, eax ; inc dword ptr [rbx + rcx*4 + 0xd] ; jno 0x2000066a5eb ; ret 0x48ff
0x000002000013b15f : pushfq ; idiv bh ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004442a0 : pushfq ; jmp 0x20000444267
0x000002000007c9d1 : pushfq ; lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x0000020000608405 : pushfq ; mov al, 0xff ; nop ; jmp 0x20000424621
0x00000200006083ce : pushfq ; mov al, 0xff ; nop ; jmp 0x2000042465c
0x00000200006083cd : pushfq ; mov al, 0xff ; nop ; jmp 0x2000042465d
0x00000200004bd8a0 : pushfq ; mov r14d, 0x3bf88bff ; ret
0x000002000001e214 : pushfq ; or dl, al ; ret 8
0x000002000054553c : pushfq ; push r8 ; push -0xfb8c00 ; ret 0x15eb
0x000002000041f9b3 : pushfq ; ret
0x00000200006bc475 : pushfq ; ret 0x41ff
0x000002000048f495 : pushfq ; ret 0x48ff
0x0000020000645367 : pushfq ; ret 0x49ff
0x0000020000661def : pushfq ; ret 0x80ff
0x00000200000f9d25 : pushfq ; ret 0x8341
0x0000020000661dd5 : pushfq ; ret 0x84ff
0x0000020000661d8a : pushfq ; ret 0x8bff
0x000002000050dc38 : pushfq ; ret 0xc1e9
0x00000200006453cf : pushfq ; ret 0xccff
0x00000200001ee9b5 : pushfq ; ret 0xffeb
0x00000200005eef25 : pushfq ; ret 0xfff0
0x00000200001e8494 : pushfq ; ret 0xfff8
0x0000020000479c55 : pushfq ; ret 0xffff
0x00000200005690a4 : pushfq ; rol dword ptr [rax + 0x4800356c], -0x7f ; ret
0x0000020000012a2d : pushfq ; sbb al, 0 ; ret
0x00000200006648f0 : pushfq ; stosd dword ptr [rdi], eax ; ret 0x48ff
0x000002000017bb30 : pushfq ; xchg eax, esp ; str word ptr [rax - 0x75] ; call qword ptr [rax]
0x0000020000091661 : rcl bh, 1 ; mov dl, 0x76 ; ret 0xbb54
0x0000020000504503 : rcl bh, cl ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200001afd7d : rcl bl, cl ; call 0x1ffa8dd20cd
0x00000200005d3fa0 : rcl byte ptr [rax + 0x20c48348], 1 ; pop rbp ; ret
0x000002000039424c : rcl byte ptr [rax + 0x4c], 0x2b ; ret
0x00000200006157bf : rcl byte ptr [rax - 0x1762dc17], cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200004e2c57 : rcl byte ptr [rax], 0x48 ; cmp eax, ecx ; jl 0x200004e2c4f ; ret
0x000002000064c9b6 : rcl byte ptr [rax], 0x83 ; cli ; cmp al, 0x72 ; ret
0x00000200001be7c0 : rcl byte ptr [rax], 0xba ; or eax, 0xb9000000 ; ret 0
0x00000200004f48f4 : rcl byte ptr [rax], 0xc3 ; xor eax, eax ; ret
0x00000200005070f9 : rcl byte ptr [rax], 0xf ; ret 0xd08b
0x000002000010c779 : rcl byte ptr [rax], 0xff ; ret
0x000002000004270d : rcl byte ptr [rax], 0xff ; ret 0x3b49
0x000002000001e11d : rcl byte ptr [rbx + 0x44fffffe], 0x2b ; ret 0x2b44
0x000002000013d9fb : rcl byte ptr [rcx], 0xff ; ret
0x00000200001ca932 : rcl byte ptr [rcx], cl ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004d0aea : rcl byte ptr [rdi], cl ; ret 0x90ff
0x00000200002163f1 : rcl byte ptr [rdx], 0 ; ret 0x12
0x00000200005af093 : rcl byte ptr [rdx], 0x8b ; ror byte ptr [rcx - 0x7cb788bb], 1 ; ret 0xe802
0x000002000020d230 : rcl cl, 0xb ; add bh, bl ; ror dword ptr [rbx], 1 ; add byte ptr [rax], cl ; ret 0x20
0x00000200005fd0be : rcl dword ptr [rax + 0x4c000005], -0x75 ; ret
0x00000200004e5d81 : rcl dword ptr [rax + rax], 1 ; call r12
0x00000200000ca146 : rcl dword ptr [rax], -1 ; ret 0x3b4d
0x0000020000023879 : rcl dword ptr [rax], -1 ; ret 0x8b4c
0x0000020000569a8d : rcl dword ptr [rax], 0x41 ; cmp edx, dword ptr [rcx] ; jb 0x20000569a80 ; xor eax, eax ; ret
0x0000020000475cdd : rcl dword ptr [rax], 0x44 ; lea eax, dword ptr [rdx + 0x10] ; call 0x200000a3959
0x00000200004a4fa6 : rcl dword ptr [rax], 0x48 ; dec eax ; jne 0x200004a4fa5 ; ret
0x000002000025dccd : rcl dword ptr [rax], 0x64 ; ret 0x50
0x00000200000a4e5b : rcl dword ptr [rax], 0x66 ; test ecx, 0x375ffff ; ret 0
0x0000020000063689 : rcl dword ptr [rax], 0x74 ; add dh, bl ; ret
0x0000020000028259 : rcl dword ptr [rax], 1 ; ret
0x0000020000601c93 : rcl dword ptr [rbp + 0x30], 0x48 ; mov ecx, edi ; call 0x2000012deb4
0x00000200005a7d50 : rcl dword ptr [rbx], -0xa ; ret 0x7402
0x0000020000404d80 : rcl dword ptr [rbx], -0xa ; ret 0x7502
0x00000200003645e7 : rcl dword ptr [rbx], -0xa ; ret 0xf02
0x0000020000642cc3 : rcl dword ptr [rcx + 0xb4], -1 ; ret 0xb983
0x00000200001f5bdb : rcl dword ptr [rcx + rax*2], -0x75 ; ret
0x00000200004218b7 : rcl dword ptr [rcx], -0xa ; ret 0x7502
0x00000200001caa0a : rcl dword ptr [rcx], 1 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001ca7b1 : rcl dword ptr [rcx], cl ; add cl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff2
0x0000020000121a55 : rcl dword ptr [rdi], 1 ; add byte ptr [rcx + 0x2b], al ; ret 0xf03b
0x00000200004ebaef : rcl dword ptr [rip - 0x2058d5], -0xa ; ret 0xf02
0x000002000057042b : rcl dword ptr [rip - 0x2a4089], -0xa ; ret 0x7402
0x0000020000570546 : rcl dword ptr [rip - 0x2a41a4], -0xa ; ret 0x7402
0x000002000035d118 : rcl dword ptr [rip - 0x76ece], -0xa ; ret 0xf02
0x0000020000386b61 : rcl dword ptr [rip - 0xba787], -0xa ; ret 0xf02
0x000002000057bf5f : rcl ecx, cl ; dec dword ptr [rax + 0x23] ; ret 0x8948
0x000002000057bf72 : rcl ecx, cl ; inc dword ptr [rcx - 0x7c] ; fdiv qword ptr [rcx + rdx - 0xa] ; ret
0x0000020000153bb3 : rcl esi, 1 ; adc al, byte ptr [rax] ; ret
0x0000020000632c24 : rcr ah, 0xd6 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006ea592 : rcr al, cl ; mov edi, 0x158d48ff ; ret
0x00000200006e7677 : rcr byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000011fa16 : rcr byte ptr [rax - 0x7d], 0xf9 ; add eax, 0xc033f072 ; ret
0x0000020000147b82 : rcr byte ptr [rax - 0x7d], 0xfa ; add eax, 0xc033f072 ; ret
0x00000200003638a4 : rcr byte ptr [rax], 0x3b ; ret
0x00000200004d5089 : rcr byte ptr [rax], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001a7bde : rcr byte ptr [rax], 0x48 ; cmp eax, ecx ; jb 0x200001a7be1 ; xor eax, eax ; ret
0x00000200004dee89 : rcr byte ptr [rax], 0x48 ; dec ecx ; jne 0x200004dee8d ; ret
0x000002000069f0dc : rcr byte ptr [rax], 0x8d ; push rcx ; adc eax, 0x8318894c ; ret 0x48f8
0x000002000003a1cd : rcr byte ptr [rax], 0xc3 ; add eax, edx ; jmp 0x2000003a1b5
0x000002000003a1c8 : rcr byte ptr [rax], 0xeb ; add eax, 0x18 ; ret
0x000002000019fbae : rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200001f249a : rcr byte ptr [rcx + 0x4466f9f7], 0x2b ; ret 0x3840
0x000002000005d2c8 : rcr byte ptr [rdi - 0x6af0ffd1], 0xc0 ; ret
0x0000020000223a04 : rcr byte ptr [rdx + 0x21], 1 ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add ah, al ; ret 2
0x0000020000033e1e : rcr byte ptr [rsi + 0x5f], 0x5b ; pop rbp ; pop r12 ; ret
0x0000020000002ffc : rcr dh, 0x35 ; add rsp, 0x28 ; ret
0x00000200004cf9ad : rcr dword ptr [rax], -0xa ; ret
0x00000200001a689c : rcr dword ptr [rax], 0x48 ; cmp ecx, eax ; jb 0x200001a689b ; mov eax, edx ; ret
0x00000200003972c9 : rcr dword ptr [rbp + 0x20], -0xa ; ret
0x0000020000190094 : rcr dword ptr [rbp], -0x7c ; fdiv dword ptr [rbp + rcx - 0xa] ; ret
0x00000200005ad10e : rcr dword ptr [rbp], -0x7c ; fnstenv dword ptr [rbp + rcx - 0xa] ; ret
0x000002000010e8a8 : rcr dword ptr [rbp], -0xa ; ret
0x00000200006a114a : rcr dword ptr [rbx + 0x48], cl ; add esp, 8 ; jmp r8
0x00000200005eee0e : rcr dword ptr [rbx], -0x40 ; and eax, 0xfffffffe ; inc eax ; ret
0x00000200004e8c5a : rcr dword ptr [rbx], -0x40 ; and edx, eax ; mov eax, edx ; ret
0x0000020000073690 : rcr dword ptr [rbx], -0x40 ; sbb eax, -1 ; ret
0x000002000047b62a : rcr dword ptr [rcx + rax*2], -0x75 ; ret 0x3b49
0x0000020000008081 : rcr dword ptr [rcx], -0xa ; ret
0x000002000045ccd0 : rcr dword ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000bbe1f : rcr dword ptr [rdi + 0x10], -1 ; ret
0x00000200001846a5 : rcr dword ptr [rdi], -0x7c ; fnstenv dword ptr [rbp + rcx - 0xa] ; ret
0x000002000005a811 : rcr dword ptr [rdi], -0xa ; ret
0x00000200001cde73 : rcr dword ptr [rdx], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000193d81 : rcr dword ptr [rip + 0x1043f9], -0xa ; ret
0x0000020000192495 : rcr dword ptr [rip + 0x1067d5], -0xa ; ret
0x0000020000149b67 : rcr dword ptr [rip + 0x13eea3], -0xa ; ret
0x0000020000136153 : rcr dword ptr [rip + 0x1528b7], -0xa ; ret
0x00000200001430d4 : rcr dword ptr [rip + 0x1550a6], -0xa ; ret
0x0000020000143188 : rcr dword ptr [rip + 0x155ae2], -0xa ; ret
0x0000020000139ba7 : rcr dword ptr [rip + 0x15d55b], -0xa ; ret
0x000002000013b626 : rcr dword ptr [rip + 0x15d67c], -0xa ; ret
0x00000200001195a8 : rcr dword ptr [rip + 0x16f892], -0xa ; ret
0x0000020000143d0c : rcr dword ptr [rip + 0x188c46], -0xa ; ret
0x00000200001263a1 : rcr dword ptr [rip + 0x1a5e51], -0xa ; ret
0x000002000013d2f8 : rcr dword ptr [rip + 0x1a8f5a], -0xa ; ret
0x00000200000e04db : rcr dword ptr [rip + 0x1ebcf7], -0xa ; ret
0x0000020000421499 : rcr dword ptr [rip + 0x2620c1], -0xa ; ret
0x00000200000e9291 : rcr dword ptr [rip + 0x267469], -0xa ; ret
0x000002000001e375 : rcr dword ptr [rip + 0x26aac5], -0xa ; ret
0x0000020000064869 : rcr dword ptr [rip + 0x2ec211], -0xa ; ret
0x00000200001fad57 : rcr dword ptr [rip + 0xa094b], -0xa ; ret
0x00000200001b5a0c : rcr dword ptr [rip + 0xd5d16], -0xa ; ret
0x00000200001b47eb : rcr dword ptr [rip + 0xd66bf], -0xa ; ret
0x00000200001b457c : rcr dword ptr [rip + 0xd692e], -0xa ; ret
0x0000020000190d88 : rcr dword ptr [rip + 0xf8572], -0xa ; ret
0x000002000040720a : rcr dword ptr [rip - 0x13ae40], -0xa ; ret
0x00000200004000a8 : rcr dword ptr [rip - 0x16f506], -0xa ; ret
0x0000020000411b24 : rcr dword ptr [rip - 0x180fe2], -0xa ; ret
0x000002000041a39b : rcr dword ptr [rip - 0x189761], -0xa ; ret
0x0000020000423574 : rcr dword ptr [rip - 0x18c072], -0xa ; ret
0x0000020000423794 : rcr dword ptr [rip - 0x18c272], -0xa ; ret
0x000002000042043a : rcr dword ptr [rip - 0x18f898], -0xa ; ret
0x0000020000422544 : rcr dword ptr [rip - 0x192cfa], -0xa ; ret
0x000002000047f547 : rcr dword ptr [rip - 0x1b2bf5], -0xa ; ret
0x000002000047f5c3 : rcr dword ptr [rip - 0x1b2c71], -0xa ; ret
0x000002000047f676 : rcr dword ptr [rip - 0x1b2d24], -0xa ; ret
0x000002000049debe : rcr dword ptr [rip - 0x1fe354], -0xa ; ret
0x0000020000488e18 : rcr dword ptr [rip - 0x200a7e], -0xa ; ret
0x000002000049fd3f : rcr dword ptr [rip - 0x20d805], -0xa ; ret
0x00000200004bbaa7 : rcr dword ptr [rip - 0x229565], -0xa ; ret
0x00000200004fd0c3 : rcr dword ptr [rip - 0x230771], -0xa ; ret
0x00000200004d196f : rcr dword ptr [rip - 0x248b35], -0xa ; ret
0x00000200004e1104 : rcr dword ptr [rip - 0x25080a], -0xa ; ret
0x00000200004dbf54 : rcr dword ptr [rip - 0x253542], -0xa ; ret
0x00000200004dc01d : rcr dword ptr [rip - 0x25360b], -0xa ; ret
0x0000020000543134 : rcr dword ptr [rip - 0x25cf1a], -0xa ; ret
0x000002000054337d : rcr dword ptr [rip - 0x25d163], -0xa ; ret
0x0000020000543779 : rcr dword ptr [rip - 0x25d55f], -0xa ; ret
0x000002000054bb6e : rcr dword ptr [rip - 0x2726a4], -0xa ; ret
0x000002000054bc8e : rcr dword ptr [rip - 0x2727c4], -0xa ; ret
0x000002000050a06c : rcr dword ptr [rip - 0x279792], -0xa ; ret
0x000002000051ccdd : rcr dword ptr [rip - 0x27db83], -0xa ; ret
0x0000020000517a0f : rcr dword ptr [rip - 0x28c6fd], -0xa ; ret
0x000002000052769c : rcr dword ptr [rip - 0x296b52], -0xa ; ret
0x000002000056f9a7 : rcr dword ptr [rip - 0x2a35dd], -0xa ; ret
0x0000020000599e45 : rcr dword ptr [rip - 0x2a3dab], -0xa ; ret
0x0000020000599e9e : rcr dword ptr [rip - 0x2a3e04], -0xa ; ret
0x000002000057b481 : rcr dword ptr [rip - 0x2e2137], -0xa ; ret
0x000002000057b6b2 : rcr dword ptr [rip - 0x2e2368], -0xa ; ret
0x000002000057b773 : rcr dword ptr [rip - 0x2e2429], -0xa ; ret
0x000002000057b8c7 : rcr dword ptr [rip - 0x2e257d], -0xa ; ret
0x000002000057b9e9 : rcr dword ptr [rip - 0x2e269f], -0xa ; ret
0x000002000057bad7 : rcr dword ptr [rip - 0x2e278d], -0xa ; ret
0x000002000057bb81 : rcr dword ptr [rip - 0x2e2837], -0xa ; ret
0x000002000057c74c : rcr dword ptr [rip - 0x2e3402], -0xa ; ret
0x000002000057c839 : rcr dword ptr [rip - 0x2e34ef], -0xa ; ret
0x000002000057c8dc : rcr dword ptr [rip - 0x2e3592], -0xa ; ret
0x000002000057c939 : rcr dword ptr [rip - 0x2e35ef], -0xa ; ret
0x000002000056d391 : rcr dword ptr [rip - 0x2e4ff7], -0xa ; ret
0x000002000056d4e3 : rcr dword ptr [rip - 0x2e5149], -0xa ; ret
0x000002000056d5b6 : rcr dword ptr [rip - 0x2e521c], -0xa ; ret
0x00000200005841b5 : rcr dword ptr [rip - 0x2ec47b], -0xa ; ret
0x0000020000586b41 : rcr dword ptr [rip - 0x2ef157], -0xa ; ret
0x000002000057dcbb : rcr dword ptr [rip - 0x2f49c1], -0xa ; ret
0x000002000057d857 : rcr dword ptr [rip - 0x2f4a1d], -0xa ; ret
0x000002000057dd9f : rcr dword ptr [rip - 0x2f4aa5], -0xa ; ret
0x00000200005927e6 : rcr dword ptr [rip - 0x2fb43c], -0xa ; ret
0x0000020000592871 : rcr dword ptr [rip - 0x2fb4c7], -0xa ; ret
0x00000200005928fb : rcr dword ptr [rip - 0x2fb551], -0xa ; ret
0x0000020000592985 : rcr dword ptr [rip - 0x2fb5db], -0xa ; ret
0x00000200005e5895 : rcr dword ptr [rip - 0x2ff64b], -0xa ; ret
0x000002000059bb65 : rcr dword ptr [rip - 0x310853], -0xa ; ret
0x000002000059c3bd : rcr dword ptr [rip - 0x3110ab], -0xa ; ret
0x00000200005aa65c : rcr dword ptr [rip - 0x31811a], -0xa ; ret
0x00000200005b7d52 : rcr dword ptr [rip - 0x327b40], -0xa ; ret
0x0000020000600560 : rcr dword ptr [rip - 0x3609f6], -0xa ; ret
0x00000200006005c9 : rcr dword ptr [rip - 0x360a5f], -0xa ; ret
0x0000020000601206 : rcr dword ptr [rip - 0x3620ac], -0xa ; ret
0x00000200005f7df1 : rcr dword ptr [rip - 0x36fa57], -0xa ; ret
0x00000200005f846a : rcr dword ptr [rip - 0x3700d0], -0xa ; ret
0x00000200006059aa : rcr dword ptr [rip - 0x37cb70], -0xa ; ret
0x0000020000606ac4 : rcr dword ptr [rip - 0x37d7ca], -0xa ; ret
0x00000200006106be : rcr dword ptr [rip - 0x380e74], -0xa ; ret
0x000002000061f5e0 : rcr dword ptr [rip - 0x383f3e], -0xa ; ret
0x000002000061fda0 : rcr dword ptr [rip - 0x388ea6], -0xa ; ret
0x0000020000622fe9 : rcr dword ptr [rip - 0x389c9f], -0xa ; ret
0x000002000062324a : rcr dword ptr [rip - 0x389f00], -0xa ; ret
0x0000020000626881 : rcr dword ptr [rip - 0x39433f], -0xa ; ret
0x0000020000627655 : rcr dword ptr [rip - 0x396b0b], -0xa ; ret
0x000002000062a601 : rcr dword ptr [rip - 0x399d27], -0xa ; ret
0x000002000062a818 : rcr dword ptr [rip - 0x399f3e], -0xa ; ret
0x000002000066601a : rcr dword ptr [rip - 0x3d7ee8], -0xa ; ret
0x000002000066797a : rcr dword ptr [rip - 0x3d9848], -0xa ; ret
0x00000200006c7ef5 : rcr dword ptr [rip - 0x429367], -0x75 ; ret
0x00000200006ff789 : rcr dword ptr [rip - 0x46d24f], -0xa ; ret
0x00000200006fff74 : rcr dword ptr [rip - 0x46da32], -0xa ; ret
0x000002000035d0a1 : rcr dword ptr [rip - 0x76e87], -0xa ; ret
0x000002000036e674 : rcr dword ptr [rip - 0xe582a], -0xa ; ret
0x0000020000386415 : rcr dword ptr [rip - 0xf5b3b], -0xa ; ret
0x000002000040c8a2 : rcr dword ptr [rsi + 0x20], -0xa ; ret
0x0000020000110261 : rcr dword ptr [rsi + 0x30], -0xa ; ret
0x00000200000042df : rcr dword ptr [rsi], -0xa ; ret
0x00000200000ed005 : rcr dword ptr [rsp], -0xa ; ret
0x0000020000076cff : rcr eax, 1 ; sar rax, 0x14 ; ret
0x00000200004bb20f : rcr ebp, -1 ; call rax
0x0000020000600258 : rcr ecx, cl ; xlatb ; push rsi ; ret
0x0000020000076cfe : rcr rax, 1 ; sar rax, 0x14 ; ret
0x000002000007c79b : rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret 0
0x0000020000151e1b : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x000002000017a43d : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000002000016964c : rdpmc ; rol byte ptr [rbp - 0x76], cl ; ret
0x0000020000133cb0 : rdtsc ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000600111 : rep stosq qword ptr [rdi], rax ; jmp 0x2000046c3dc
0x0000020000644b1a : repne movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x49ff
0x000002000000232c : ret
0x0000020000026bb2 : ret 0
0x00000200000d09ac : ret 0x10
0x000002000007c646 : ret 0x100
0x0000020000004608 : ret 0x1000
0x0000020000194822 : ret 0x1037
0x00000200000e851a : ret 0x104a
0x00000200004e03b9 : ret 0x1073
0x00000200001e60da : ret 0x1074
0x00000200000c7a21 : ret 0x1075
0x0000020000180dc2 : ret 0x1077
0x00000200001d43aa : ret 0x108
0x00000200000e2be7 : ret 0x1097
0x00000200001b8cfc : ret 0x109e
0x0000020000371005 : ret 0x10a8
0x00000200000100c4 : ret 0x10b
0x0000020000386275 : ret 0x10ba
0x000002000037e03d : ret 0x10bb
0x00000200000da63b : ret 0x10e3
0x000002000016ba62 : ret 0x10e8
0x00000200004cb7f0 : ret 0x10fb
0x0000020000226889 : ret 0x11
0x0000020000024eaf : ret 0x110
0x0000020000162279 : ret 0x1139
0x0000020000061fae : ret 0x115a
0x000002000015f165 : ret 0x1172
0x00000200004fb943 : ret 0x1173
0x0000020000018038 : ret 0x1174
0x0000020000392875 : ret 0x1175
0x00000200000e84ad : ret 0x1176
0x000002000016d774 : ret 0x1177
0x000002000016910e : ret 0x1181
0x0000020000487688 : ret 0x1188
0x0000020000013970 : ret 0x11b2
0x000002000038b5ad : ret 0x11ba
0x00000200001ca402 : ret 0x11d7
0x00000200004f44b8 : ret 0x11ea
0x00000200001c8a7a : ret 0x11f0
0x000002000019123c : ret 0x11ff
0x00000200002163f5 : ret 0x12
0x00000200000ccae7 : ret 0x1209
0x0000020000116520 : ret 0x124
0x00000200000c3834 : ret 0x1267
0x000002000013453a : ret 0x1272
0x000002000056cb61 : ret 0x1274
0x00000200003b5ef9 : ret 0x1275
0x00000200000470c9 : ret 0x1276
0x000002000013b0c7 : ret 0x1277
0x00000200000ae6dd : ret 0x127a
0x00000200004442b3 : ret 0x128
0x00000200005ba5df : ret 0x128b
0x0000020000507ed6 : ret 0x12b9
0x0000020000507b55 : ret 0x12bf
0x0000020000133dbe : ret 0x13
0x00000200002102b6 : ret 0x1306
0x00000200006f8540 : ret 0x132
0x00000200004a3ba7 : ret 0x1361
0x000002000018cfe9 : ret 0x1372
0x000002000017fbe5 : ret 0x1374
0x00000200000ab6e9 : ret 0x1376
0x00000200001a0088 : ret 0x138a
0x00000200000220f0 : ret 0x138b
0x000002000003a04a : ret 0x1395
0x00000200004a7b4b : ret 0x139f
0x00000200004a8415 : ret 0x13b6
0x00000200004ac782 : ret 0x13c5
0x0000020000657292 : ret 0x13d
0x00000200004c7efa : ret 0x13d6
0x00000200004a7372 : ret 0x13d8
0x000002000054518b : ret 0x13de
0x00000200000f14e6 : ret 0x13e9
0x0000020000154f16 : ret 0x13eb
0x00000200002237ed : ret 0x14
0x0000020000243b16 : ret 0x1406
0x00000200004a1a20 : ret 0x140d
0x000002000058b865 : ret 0x141
0x00000200001c3602 : ret 0x1436
0x000002000000dd6d : ret 0x145
0x00000200004fa187 : ret 0x1473
0x000002000004ffb2 : ret 0x1474
0x00000200000476ec : ret 0x1475
0x0000020000160fbd : ret 0x1476
0x0000020000031161 : ret 0x147c
0x0000020000640ce7 : ret 0x147f
0x0000020000019842 : ret 0x148
0x0000020000614608 : ret 0x1489
0x00000200003d48a2 : ret 0x148d
0x00000200004e803e : ret 0x14b0
0x000002000005560b : ret 0x14b9
0x000002000017d38a : ret 0x14eb
0x0000020000499b8a : ret 0x15
0x000002000048381d : ret 0x1525
0x000002000006ccb6 : ret 0x1533
0x000002000052e912 : ret 0x154c
0x000002000004e5da : ret 0x154d
0x000002000004e18e : ret 0x154e
0x00000200004b35e2 : ret 0x155b
0x00000200003b5ca0 : ret 0x1566
0x000002000012bf9a : ret 0x1573
0x0000020000173932 : ret 0x1574
0x0000020000015f93 : ret 0x1576
0x000002000016d748 : ret 0x1577
0x0000020000009c7f : ret 0x1589
0x000002000000938a : ret 0x1594
0x00000200001fdaaa : ret 0x1595
0x00000200006f584a : ret 0x15c
0x0000020000545545 : ret 0x15eb
0x000002000037c48f : ret 0x15ff
0x000002000006a068 : ret 0x16
0x000002000014aece : ret 0x160
0x00000200001f647a : ret 0x160b
0x000002000010ac7a : ret 0x1653
0x000002000007199d : ret 0x1663
0x000002000019ecf4 : ret 0x1673
0x000002000056e0a1 : ret 0x1674
0x0000020000577f01 : ret 0x1675
0x00000200000aef57 : ret 0x1676
0x000002000048c93d : ret 0x1683
0x000002000016e29a : ret 0x169e
0x0000020000107daa : ret 0x16d6
0x000002000011c199 : ret 0x16d8
0x00000200004b2ae6 : ret 0x16d9
0x00000200000602fa : ret 0x16e
0x000002000012abf6 : ret 0x16e0
0x00000200003a0c16 : ret 0x16e3
0x000002000006024c : ret 0x16ee
0x0000020000062257 : ret 0x16f8
0x0000020000026dff : ret 0x17
0x00000200004b387b : ret 0x1700
0x0000020000231876 : ret 0x1706
0x000002000005e196 : ret 0x1711
0x00000200001e3586 : ret 0x173e
0x000002000039cf6c : ret 0x1745
0x00000200001630da : ret 0x176c
0x00000200004a7fed : ret 0x1773
0x0000020000187629 : ret 0x1775
0x00000200001dfa86 : ret 0x1779
0x00000200001f3e46 : ret 0x177c
0x00000200003a09ff : ret 0x1789
0x0000020000386284 : ret 0x178b
0x00000200004aaf61 : ret 0x17b2
0x00000200001dba86 : ret 0x17b9
0x00000200001dac86 : ret 0x17c7
0x0000020000049678 : ret 0x17f5
0x00000200001d79aa : ret 0x17f6
0x0000020000071cb5 : ret 0x18
0x0000020000501aea : ret 0x1815
0x000002000047daf1 : ret 0x1817
0x00000200001d37aa : ret 0x1838
0x0000020000652a41 : ret 0x186
0x000002000049cac1 : ret 0x1865
0x0000020000067849 : ret 0x1872
0x000002000005d083 : ret 0x1875
0x00000200001321a7 : ret 0x1876
0x0000020000016e3d : ret 0x1877
0x00000200006ff6a2 : ret 0x188
0x0000020000082b81 : ret 0x1883
0x0000020000047a82 : ret 0x1885
0x000002000005d6fc : ret 0x1889
0x00000200001137a1 : ret 0x188b
0x00000200001adf24 : ret 0x189
0x000002000015d202 : ret 0x18a9
0x0000020000381621 : ret 0x18ba
0x000002000011059a : ret 0x18e5
0x000002000015a84a : ret 0x18e7
0x000002000038df93 : ret 0x18e9
0x0000020000110f1e : ret 0x18ec
0x000002000004743f : ret 0x19
0x00000200001bfb9a : ret 0x190c
0x00000200000565fa : ret 0x1919
0x00000200001c543a : ret 0x191b
0x000002000002beb6 : ret 0x1941
0x00000200001c0686 : ret 0x196d
0x0000020000174ccf : ret 0x1973
0x000002000056e04e : ret 0x1974
0x000002000018b00e : ret 0x1975
0x00000200000edb35 : ret 0x1976
0x000002000019f400 : ret 0x1977
0x000002000004fac6 : ret 0x1984
0x00000200001b000d : ret 0x19eb
0x00000200004804c2 : ret 0x1a
0x000002000025668e : ret 0x1a00
0x000002000043830e : ret 0x1a73
0x000002000039b6ff : ret 0x1a74
0x00000200000b8162 : ret 0x1a76
0x000002000016d712 : ret 0x1a77
0x00000200000419f6 : ret 0x1a8
0x000002000040c112 : ret 0x1a8d
0x00000200001dcc5f : ret 0x1ab9
0x000002000011d57a : ret 0x1ad2
0x0000020000446213 : ret 0x1b
0x000002000002a71a : ret 0x1b2
0x000002000000fc3d : ret 0x1b48
0x000002000045f3d5 : ret 0x1b70
0x00000200001c056c : ret 0x1b72
0x00000200000ab912 : ret 0x1b73
0x000002000006d082 : ret 0x1b74
0x00000200005d2c9d : ret 0x1b75
0x0000020000555d27 : ret 0x1b76
0x0000020000024ef6 : ret 0x1b8
0x000002000042d3ce : ret 0x1b80
0x00000200000262cf : ret 0x1b8a
0x00000200000ee32d : ret 0x1b9
0x000002000000f385 : ret 0x1ba
0x000002000000d68d : ret 0x1bd
0x000002000064a6e2 : ret 0x1be
0x0000020000108450 : ret 0x1c
0x000002000020bc72 : ret 0x1c06
0x0000020000021aff : ret 0x1c58
0x000002000013fb48 : ret 0x1c6
0x000002000014913a : ret 0x1c74
0x000002000003a171 : ret 0x1c75
0x00000200001b7bc2 : ret 0x1c7c
0x00000200005653bb : ret 0x1c7e
0x000002000009a066 : ret 0x1c89
0x000002000011e7c2 : ret 0x1c93
0x0000020000108e69 : ret 0x1cb8
0x0000020000556782 : ret 0x1ceb
0x0000020000020a34 : ret 0x1d
0x00000200001e8283 : ret 0x1d72
0x00000200000b676e : ret 0x1d73
0x000002000064818d : ret 0x1d74
0x00000200001b3b5c : ret 0x1d77
0x000002000003a871 : ret 0x1d7c
0x000002000017db86 : ret 0x1d98
0x000002000052ab97 : ret 0x1db9
0x00000200001b5141 : ret 0x1de8
0x0000020000156072 : ret 0x1deb
0x00000200001be0f8 : ret 0x1e00
0x0000020000176cba : ret 0x1e03
0x00000200000176ef : ret 0x1e0e
0x000002000042a285 : ret 0x1e41
0x00000200004f2296 : ret 0x1e72
0x0000020000199dfe : ret 0x1e73
0x00000200000ca94a : ret 0x1e74
0x000002000018cfda : ret 0x1e76
0x000002000016f5ba : ret 0x1e7a
0x00000200000d4a3a : ret 0x1e8
0x000002000010c13a : ret 0x1e9
0x000002000016d542 : ret 0x1e9c
0x0000020000433f86 : ret 0x1ea2
0x00000200000e0a12 : ret 0x1eb7
0x000002000040cc8a : ret 0x1ee6
0x0000020000650fc8 : ret 0x1ee8
0x00000200000d0093 : ret 0x1f
0x000002000021339e : ret 0x1f26
0x0000020000162096 : ret 0x1f52
0x00000200000901f4 : ret 0x1f64
0x00000200001e8016 : ret 0x1f72
0x0000020000066c1d : ret 0x1f73
0x000002000001e149 : ret 0x1f74
0x0000020000180023 : ret 0x1f75
0x000002000004f89b : ret 0x1f76
0x00000200004fb0b0 : ret 0x1f8
0x00000200000ed4fa : ret 0x1fa6
0x00000200003d14f0 : ret 0x1ff
0x000002000020d239 : ret 0x20
0x000002000007c63c : ret 0x200
0x00000200006e75ff : ret 0x200f
0x00000200000d1ffa : ret 0x202
0x00000200000c9a82 : ret 0x2028
0x00000200000adf92 : ret 0x203
0x00000200003d582d : ret 0x205f
0x000002000038fed7 : ret 0x2073
0x0000020000036e34 : ret 0x2074
0x0000020000056fe4 : ret 0x2075
0x00000200000251c6 : ret 0x2076
0x000002000026f33c : ret 0x2080
0x0000020000100f52 : ret 0x20a9
0x00000200006eded6 : ret 0x20b
0x000002000014297d : ret 0x20b9
0x000002000009078d : ret 0x20cc
0x00000200000d9f5a : ret 0x20de
0x0000020000633a50 : ret 0x20e9
0x000002000013af97 : ret 0x21
0x0000020000577d98 : ret 0x2148
0x0000020000598636 : ret 0x2149
0x00000200001412ba : ret 0x215d
0x000002000041670f : ret 0x216a
0x0000020000646187 : ret 0x2173
0x00000200005d4b2d : ret 0x2174
0x0000020000186a98 : ret 0x2176
0x00000200001422ba : ret 0x217a
0x000002000013afba : ret 0x21c0
0x0000020000082d01 : ret 0x21d1
0x00000200000adfb2 : ret 0x21d8
0x00000200003b9b43 : ret 0x21ef
0x0000020000084f82 : ret 0x22
0x0000020000081ab8 : ret 0x2237
0x00000200003e878e : ret 0x2240
0x0000020000019953 : ret 0x2241
0x000002000014e2bb : ret 0x225
0x000002000015e3aa : ret 0x2262
0x0000020000390b65 : ret 0x2272
0x0000020000199ea2 : ret 0x2273
0x000002000012fb42 : ret 0x2274
0x0000020000006662 : ret 0x227d
0x000002000012c3ba : ret 0x22ac
0x00000200003ec39a : ret 0x22b
0x0000020000127f86 : ret 0x22f4
0x000002000005c2fc : ret 0x23
0x0000020000590f1a : ret 0x2302
0x00000200003fe653 : ret 0x2303
0x0000020000147ffa : ret 0x2307
0x0000020000127231 : ret 0x2308
0x00000200000c819e : ret 0x2341
0x000002000002130a : ret 0x2344
0x000002000005a67e : ret 0x2345
0x00000200000026b6 : ret 0x2348
0x000002000001384c : ret 0x2349
0x00000200000f0147 : ret 0x234c
0x000002000011ec60 : ret 0x234d
0x00000200001a1b01 : ret 0x2366
0x000002000018d00b : ret 0x2372
0x00000200000274de : ret 0x2374
0x0000020000028f40 : ret 0x2375
0x0000020000040eb7 : ret 0x2376
0x00000200004e9889 : ret 0x2377
0x0000020000116b7a : ret 0x2399
0x0000020000091fe0 : ret 0x23e8
0x00000200001e86d4 : ret 0x23e9
0x000002000025fdfd : ret 0x24
0x0000020000617ac5 : ret 0x2400
0x00000200003ab7bd : ret 0x2460
0x0000020000110f86 : ret 0x2464
0x000002000038f76d : ret 0x2474
0x00000200000b5409 : ret 0x2475
0x000002000011212f : ret 0x2476
0x00000200003b80a5 : ret 0x2482
0x000002000003343a : ret 0x24b2
0x00000200006e9cd7 : ret 0x24c
0x0000020000021b7a : ret 0x24e4
0x000002000014f76e : ret 0x24f
0x000002000002fda9 : ret 0x25
0x00000200002519a2 : ret 0x2546
0x0000020000076cf0 : ret 0x2548
0x000002000058a6c9 : ret 0x254f
0x00000200001e58cb : ret 0x2572
0x000002000046567b : ret 0x2573
0x0000020000511187 : ret 0x2574
0x0000020000642df0 : ret 0x2579
0x000002000038af94 : ret 0x257f
0x00000200003cbb7a : ret 0x25a5
0x0000020000271b98 : ret 0x25ba
0x000002000002a443 : ret 0x26
0x0000020000382ce6 : ret 0x2647
0x000002000008e958 : ret 0x267
0x000002000006cf1f : ret 0x2674
0x0000020000024ee4 : ret 0x2676
0x000002000013b8e7 : ret 0x2677
0x00000200000e87fa : ret 0x267b
0x000002000002323e : ret 0x2699
0x000002000037b64a : ret 0x26ae
0x0000020000382937 : ret 0x26bd
0x0000020000381e8b : ret 0x26c9
0x0000020000079df5 : ret 0x27
0x0000020000251a0e : ret 0x2726
0x0000020000386e32 : ret 0x274f
0x00000200000c45f2 : ret 0x275
0x00000200003afd16 : ret 0x276e
0x00000200003c9b43 : ret 0x2774
0x000002000001c0b2 : ret 0x277c
0x00000200003a7851 : ret 0x2796
0x000002000003481f : ret 0x27e8
0x0000020000027f4c : ret 0x27f
0x0000020000013a10 : ret 0x28
0x000002000004c082 : ret 0x2802
0x000002000019c54c : ret 0x2809
0x0000020000116557 : ret 0x2874
0x0000020000023f2e : ret 0x2875
0x00000200003daf0e : ret 0x2876
0x00000200005122c1 : ret 0x2877
0x00000200001a31d5 : ret 0x28eb
0x00000200003860e1 : ret 0x2914
0x0000020000071773 : ret 0x291c
0x00000200003edb0a : ret 0x2955
0x000002000001685f : ret 0x2972
0x0000020000642d9a : ret 0x2976
0x00000200003bece0 : ret 0x2977
0x00000200006cdd21 : ret 0x298
0x000002000055f9ab : ret 0x2980
0x00000200000aae3a : ret 0x2a
0x00000200006c5977 : ret 0x2a41
0x000002000038692f : ret 0x2a6b
0x00000200004143de : ret 0x2a77
0x000002000000963c : ret 0x2ae9
0x0000020000107bf0 : ret 0x2b
0x0000020000550327 : ret 0x2b38
0x000002000000d47b : ret 0x2b41
0x000002000001e124 : ret 0x2b44
0x000002000012a001 : ret 0x2b45
0x00000200000033b6 : ret 0x2b48
0x0000020000026422 : ret 0x2b49
0x000002000003dea7 : ret 0x2b4c
0x00000200000fad23 : ret 0x2b4d
0x00000200004cc8cd : ret 0x2b74
0x00000200000bdb57 : ret 0x2b75
0x000002000002e37f : ret 0x2b8
0x000002000009f851 : ret 0x2b84
0x000002000017307c : ret 0x2b9
0x000002000001fc42 : ret 0x2b98
0x000002000018d583 : ret 0x2ba
0x00000200003c7b52 : ret 0x2bb6
0x00000200000168c5 : ret 0x2bc3
0x0000020000035fda : ret 0x2bd
0x000002000019be4e : ret 0x2be
0x000002000010f0bf : ret 0x2be8
0x0000020000502a62 : ret 0x2be9
0x0000020000153f6f : ret 0x2c6
0x00000200004f2288 : ret 0x2c72
0x0000020000062a2d : ret 0x2c74
0x0000020000387019 : ret 0x2c75
0x000002000047f3fe : ret 0x2ce8
0x000002000018936b : ret 0x2ce9
0x00000200000f5f8a : ret 0x2d
0x0000020000054c7f : ret 0x2d73
0x00000200000113a9 : ret 0x2d74
0x0000020000091030 : ret 0x2db0
0x00000200001a182c : ret 0x2deb
0x000002000006486c : ret 0x2e
0x0000020000634085 : ret 0x2e00
0x000002000024038a : ret 0x2e06
0x00000200003a5787 : ret 0x2e4
0x000002000045b429 : ret 0x2e75
0x000002000069b266 : ret 0x2eb
0x00000200000641fa : ret 0x2ec1
0x000002000005ada2 : ret 0x2f
0x0000020000372186 : ret 0x2f1e
0x000002000035e795 : ret 0x2f74
0x0000020000122ac7 : ret 0x2f89
0x0000020000081920 : ret 0x2fe1
0x000002000064c507 : ret 0x2ff
0x0000020000376df4 : ret 0x30
0x000002000007c718 : ret 0x300
0x0000020000214545 : ret 0x3011
0x00000200001c3c07 : ret 0x302
0x00000200004cd4b2 : ret 0x3024
0x00000200005770f5 : ret 0x304
0x000002000055a014 : ret 0x306
0x000002000011ec8e : ret 0x308
0x000002000061767a : ret 0x30bf
0x00000200003ab525 : ret 0x30e9
0x00000200004911ad : ret 0x30f
0x0000020000047e3a : ret 0x30f1
0x0000020000182e92 : ret 0x310
0x000002000008dd60 : ret 0x3138
0x00000200006d79c4 : ret 0x3141
0x000002000000b3aa : ret 0x3148
0x00000200000c3881 : ret 0x3149
0x000002000003a37a : ret 0x315d
0x00000200000407ba : ret 0x3168
0x0000020000172395 : ret 0x3175
0x00000200005354b1 : ret 0x318
0x0000020000171d52 : ret 0x319e
0x000002000003cd7a : ret 0x31a2
0x0000020000516065 : ret 0x31e8
0x000002000036f78a : ret 0x31f8
0x000002000002adcd : ret 0x32
0x00000200004cdecc : ret 0x320
0x0000020000701768 : ret 0x3242
0x000002000065cd52 : ret 0x326
0x0000020000197ea0 : ret 0x3274
0x0000020000521fd9 : ret 0x328
0x00000200003bbfd8 : ret 0x32e8
0x00000200000b932f : ret 0x32e9
0x0000020000664810 : ret 0x32ff
0x000002000001ae53 : ret 0x33
0x000002000019779e : ret 0x3302
0x000002000017504b : ret 0x3308
0x000002000041dd26 : ret 0x3341
0x000002000042e8ab : ret 0x3344
0x0000020000013788 : ret 0x3345
0x0000020000024046 : ret 0x3348
0x000002000004c656 : ret 0x3349
0x0000020000063cdb : ret 0x334c
0x00000200000770be : ret 0x334d
0x0000020000197eaf : ret 0x3366
0x00000200006f0bc0 : ret 0x3374
0x0000020000545c97 : ret 0x3375
0x0000020000070061 : ret 0x337d
0x000002000001be9b : ret 0x33c3
0x000002000052ac72 : ret 0x33eb
0x00000200004275bf : ret 0x33ff
0x000002000000ade9 : ret 0x34
0x0000020000054f19 : ret 0x341
0x000002000000ab0a : ret 0x3428
0x000002000011ed10 : ret 0x344
0x0000020000081850 : ret 0x344d
0x0000020000615eab : ret 0x345
0x000002000036da39 : ret 0x3474
0x0000020000661a07 : ret 0x3475
0x0000020000003b87 : ret 0x348
0x000002000003a7eb : ret 0x349
0x000002000002a297 : ret 0x34b
0x0000020000386764 : ret 0x34bb
0x0000020000002d7b : ret 0x34c
0x000002000008e070 : ret 0x34c9
0x0000020000186bb3 : ret 0x34d
0x00000200004852b6 : ret 0x34e8
0x00000200000b15da : ret 0x35
0x000002000004b3cd : ret 0x3572
0x00000200000e1cb0 : ret 0x3574
0x00000200000d9708 : ret 0x3575
0x000002000045daeb : ret 0x35e9
0x00000200001188ae : ret 0x366
0x0000020000100a56 : ret 0x3677
0x0000020000360aa4 : ret 0x36e8
0x0000020000263041 : ret 0x37
0x00000200005b7c70 : ret 0x373
0x00000200001f0944 : ret 0x375
0x00000200003fa61c : ret 0x377
0x0000020000101d49 : ret 0x3774
0x000002000003fc9e : ret 0x3775
0x000002000026052d : ret 0x38
0x000002000014f695 : ret 0x3824
0x00000200001f24a1 : ret 0x3840
0x0000020000155b28 : ret 0x3841
0x0000020000142b91 : ret 0x3845
0x000002000015a4bf : ret 0x3848
0x000002000017238e : ret 0x3874
0x0000020000199cfa : ret 0x3875
0x0000020000068296 : ret 0x388
0x000002000000281d : ret 0x389
0x00000200004855be : ret 0x38c3
0x0000020000085d79 : ret 0x38d8
0x00000200001a5815 : ret 0x3918
0x00000200001a4a82 : ret 0x391c
0x00000200007056d4 : ret 0x3941
0x0000020000005129 : ret 0x3944
0x000002000003175c : ret 0x3948
0x0000020000078a9d : ret 0x3949
0x00000200000a97b7 : ret 0x394c
0x00000200004961b9 : ret 0x394d
0x00000200000917cd : ret 0x394e
0x000002000001fa0b : ret 0x3966
0x00000200005722f9 : ret 0x3973
0x0000020000158568 : ret 0x3975
0x00000200006d086e : ret 0x3980
0x00000200001b891e : ret 0x3983
0x000002000009eb9f : ret 0x3993
0x0000020000091d1d : ret 0x3997
0x00000200000817c8 : ret 0x399b
0x000002000040be71 : ret 0x39e8
0x000002000022ff29 : ret 0x3a
0x0000020000480ce9 : ret 0x3a0
0x00000200001cfd2e : ret 0x3a40
0x000002000046b1eb : ret 0x3a41
0x00000200001d8299 : ret 0x3a44
0x0000020000506327 : ret 0x3a45
0x000002000018555a : ret 0x3a7
0x000002000070ed71 : ret 0x3a72
0x0000020000465c91 : ret 0x3a73
0x0000020000124ca2 : ret 0x3a75
0x00000200006605d8 : ret 0x3a76
0x00000200001afd82 : ret 0x3a8
0x000002000057d294 : ret 0x3ae8
0x00000200003691d6 : ret 0x3ae9
0x000002000069bbbe : ret 0x3aeb
0x000002000008143a : ret 0x3b
0x00000200000f9d29 : ret 0x3b02
0x000002000001fc62 : ret 0x3b04
0x000002000001e494 : ret 0x3b08
0x0000020000055283 : ret 0x3b0c
0x0000020000398c86 : ret 0x3b10
0x00000200005683e9 : ret 0x3b18
0x000002000014cb79 : ret 0x3b1b
0x000002000016391e : ret 0x3b24
0x000002000047cb29 : ret 0x3b28
0x0000020000085e7c : ret 0x3b3
0x000002000001685c : ret 0x3b41
0x00000200000aba7a : ret 0x3b44
0x000002000005a681 : ret 0x3b45
0x000002000001c4c9 : ret 0x3b48
0x0000020000002d7e : ret 0x3b49
0x000002000003c445 : ret 0x3b4c
0x000002000005062e : ret 0x3b4d
0x00000200000063b4 : ret 0x3b66
0x00000200004da70d : ret 0x3b68
0x00000200004cc8bd : ret 0x3b74
0x000002000001b00c : ret 0x3b88
0x000002000005a9cf : ret 0x3b9
0x000002000014eb59 : ret 0x3ba
0x00000200001febf0 : ret 0x3be9
0x00000200003f9c81 : ret 0x3bf0
0x0000020000428cb9 : ret 0x3bff
0x0000020000232ab1 : ret 0x3c
0x0000020000146d86 : ret 0x3c00
0x000002000037bbe3 : ret 0x3c10
0x00000200001428b5 : ret 0x3c7
0x0000020000054b9a : ret 0x3c74
0x0000020000540fa0 : ret 0x3c75
0x000002000018cfbc : ret 0x3c76
0x0000020000155891 : ret 0x3c80
0x000002000040c32a : ret 0x3cc
0x00000200004757dc : ret 0x3cc3
0x00000200000b4da4 : ret 0x3d
0x00000200002334a4 : ret 0x3d37
0x00000200000ca518 : ret 0x3d48
0x00000200000cdeda : ret 0x3d72
0x00000200001b67c3 : ret 0x3d75
0x00000200004b4543 : ret 0x3d76
0x0000020000082e41 : ret 0x3d78
0x00000200001f3e93 : ret 0x3d7c
0x0000020000548a5b : ret 0x3d80
0x0000020000425371 : ret 0x3d83
0x0000020000476958 : ret 0x3dff
0x00000200001155b0 : ret 0x3e00
0x00000200000c70cf : ret 0x3e72
0x0000020000386374 : ret 0x3e75
0x000002000038aaf7 : ret 0x3e8
0x000002000003f986 : ret 0x3eb
0x000002000008e05f : ret 0x3ecb
0x000002000003ac6a : ret 0x3ee9
0x0000020000234ef4 : ret 0x3ef4
0x0000020000234fd4 : ret 0x3efb
0x0000020000230e19 : ret 0x3f
0x0000020000545bca : ret 0x3f24
0x0000020000195c89 : ret 0x3f74
0x00000200004b85e3 : ret 0x3f76
0x0000020000235974 : ret 0x3f78
0x00000200002359dc : ret 0x3f7b
0x0000020000087e8c : ret 0x3f81
0x00000200001c241e : ret 0x3f99
0x00000200004a7051 : ret 0x3fb8
0x000002000002fc96 : ret 0x3fc
0x0000020000236360 : ret 0x3fca
0x000002000056e78b : ret 0x3fe8
0x000002000064ffb8 : ret 0x3ff
0x000002000025e9d9 : ret 0x40
0x0000020000617348 : ret 0x4002
0x000002000006a615 : ret 0x4008
0x00000200006b9fe9 : ret 0x4009
0x0000020000139b78 : ret 0x400c
0x0000020000094651 : ret 0x400f
0x000002000037a7d3 : ret 0x402
0x0000020000077d51 : ret 0x4040
0x0000020000440f51 : ret 0x4043
0x00000200003d470e : ret 0x4075
0x00000200004a65fa : ret 0x4077
0x00000200001dc0e4 : ret 0x40ba
0x00000200000c7bba : ret 0x40bb
0x0000020000478190 : ret 0x40ff
0x00000200002613ed : ret 0x41
0x00000200001c60be : ret 0x4102
0x000002000001e809 : ret 0x4104
0x000002000006b869 : ret 0x4105
0x0000020000031c85 : ret 0x4108
0x00000200000812a0 : ret 0x410c
0x00000200000180dc : ret 0x4110
0x000002000013d8dd : ret 0x4111
0x000002000040288d : ret 0x4114
0x00000200001c610f : ret 0x4116
0x0000020000152c57 : ret 0x4118
0x00000200006eebc3 : ret 0x4119
0x0000020000157f70 : ret 0x4120
0x000002000004ef97 : ret 0x4123
0x0000020000147b37 : ret 0x4128
0x00000200004916f6 : ret 0x412b
0x000002000013e97c : ret 0x4130
0x0000020000524f1a : ret 0x413f
0x00000200005a4aa7 : ret 0x4140
0x000002000001dc3a : ret 0x414b
0x0000020000595557 : ret 0x4158
0x00000200001630ee : ret 0x4160
0x0000020000006366 : ret 0x4166
0x000002000054cf1e : ret 0x4172
0x0000020000463a2c : ret 0x4174
0x00000200002387b4 : ret 0x417a
0x000002000003cd86 : ret 0x417c
0x00000200005eadeb : ret 0x4187
0x000002000000edfd : ret 0x4188
0x00000200001b4719 : ret 0x4189
0x00000200005766e7 : ret 0x418b
0x000002000000a059 : ret 0x418d
0x00000200006c5e8f : ret 0x4199
0x0000020000649d1d : ret 0x41b8
0x0000020000025a61 : ret 0x41c3
0x0000020000154279 : ret 0x41c9
0x000002000049742b : ret 0x41e
0x000002000002253a : ret 0x41f0
0x0000020000589f97 : ret 0x41f1
0x00000200002005bc : ret 0x41fc
0x00000200003e0cf5 : ret 0x41ff
0x000002000025f601 : ret 0x42
0x000002000061254d : ret 0x4201
0x00000200005b0414 : ret 0x4202
0x000002000015fa3f : ret 0x4204
0x000002000012b403 : ret 0x420f
0x00000200003c8cae : ret 0x4210
0x0000020000444a0e : ret 0x4230
0x00000200003db84a : ret 0x423b
0x0000020000617f7e : ret 0x427f
0x000002000017d436 : ret 0x428
0x00000200000d92b5 : ret 0x428d
0x0000020000082cc1 : ret 0x42a
0x00000200001649a3 : ret 0x42c6
0x000002000042d0ad : ret 0x42e9
0x00000200004a0588 : ret 0x42f6
0x00000200004dbb4a : ret 0x430f
0x00000200000939d0 : ret 0x431a
0x00000200001a1af5 : ret 0x4321
0x0000020000503fc3 : ret 0x4366
0x000002000056539b : ret 0x4374
0x00000200000e4ad1 : ret 0x438
0x00000200000eb76e : ret 0x4388
0x000002000000f2eb : ret 0x4389
0x00000200005602ff : ret 0x438b
0x00000200003d56f3 : ret 0x43ba
0x00000200000ee1e3 : ret 0x43c
0x000002000058e637 : ret 0x43e8
0x000002000014d92c : ret 0x43eb
0x000002000009f445 : ret 0x43ef
0x00000200003680b1 : ret 0x43f7
0x00000200003eb4ca : ret 0x44
0x000002000015483b : ret 0x4402
0x00000200001572ea : ret 0x4404
0x00000200001789bf : ret 0x4406
0x000002000016df3b : ret 0x4407
0x00000200000b74b7 : ret 0x4408
0x0000020000039cc9 : ret 0x440c
0x00000200000ac3cc : ret 0x440f
0x000002000003f80f : ret 0x4410
0x000002000013a6e3 : ret 0x4411
0x0000020000107d56 : ret 0x4418
0x0000020000507779 : ret 0x441c
0x000002000014800f : ret 0x4420
0x00000200001637e4 : ret 0x4424
0x00000200004c518d : ret 0x4428
0x0000020000601083 : ret 0x443f
0x000002000040b4dc : ret 0x4440
0x0000020000658cb5 : ret 0x4450
0x000002000023c198 : ret 0x4452
0x000002000001e198 : ret 0x4466
0x000002000004fd6d : ret 0x4475
0x000002000008f333 : ret 0x447f
0x0000020000068fb7 : ret 0x4488
0x000002000001d136 : ret 0x4489
0x00000200004cdbba : ret 0x448b
0x00000200000629ae : ret 0x44ba
0x0000020000124f0a : ret 0x44c0
0x00000200000fe56f : ret 0x44c3
0x00000200000ebd8a : ret 0x44c6
0x00000200004f32ff : ret 0x44c7
0x0000020000037b63 : ret 0x44e9
0x000002000006bc6c : ret 0x44f0
0x00000200000d1f32 : ret 0x44f6
0x00000200004297b0 : ret 0x44ff
0x0000020000390ccc : ret 0x450
0x0000020000396083 : ret 0x4502
0x000002000003a928 : ret 0x4504
0x00000200000dd42b : ret 0x4508
0x0000020000107f26 : ret 0x4509
0x00000200001a3e7f : ret 0x450c
0x00000200001be04f : ret 0x450f
0x000002000012605d : ret 0x4510
0x0000020000129dd1 : ret 0x4518
0x00000200003da50d : ret 0x451f
0x00000200004cdd2d : ret 0x4520
0x00000200004f7c2b : ret 0x4524
0x000002000051ff7d : ret 0x4528
0x0000020000183d47 : ret 0x452b
0x0000020000157d05 : ret 0x4530
0x000002000017c03a : ret 0x4538
0x000002000016f985 : ret 0x4540
0x00000200004c5c5d : ret 0x4560
0x0000020000113de7 : ret 0x4566
0x0000020000525090 : ret 0x4577
0x00000200001aa881 : ret 0x457f
0x000002000001729d : ret 0x4588
0x00000200000cfb2c : ret 0x4589
0x00000200001b6e44 : ret 0x458b
0x00000200001522d0 : ret 0x45c0
0x00000200004e13fc : ret 0x45c7
0x0000020000101822 : ret 0x45f0
0x0000020000423c0c : ret 0x45ff
0x000002000023e465 : ret 0x46
0x000002000051718d : ret 0x4607
0x000002000008f1a8 : ret 0x4609
0x0000020000114f64 : ret 0x4677
0x00000200001798f1 : ret 0x4689
0x0000020000648e1a : ret 0x46c
0x00000200000a1922 : ret 0x46c6
0x000002000001f10a : ret 0x46e8
0x000002000046fb60 : ret 0x46ea
0x0000020000263941 : ret 0x47
0x00000200000adebb : ret 0x470f
0x00000200001573da : ret 0x472
0x00000200001639b9 : ret 0x473
0x00000200005a071f : ret 0x4731
0x000002000000885a : ret 0x474
0x0000020000018049 : ret 0x475
0x000002000018cff8 : ret 0x477
0x00000200005722eb : ret 0x4773
0x00000200005eaab6 : ret 0x4787
0x000002000014f699 : ret 0x4788
0x000002000003148e : ret 0x4789
0x000002000009f7b5 : ret 0x47d2
0x0000020000241855 : ret 0x48
0x0000020000012499 : ret 0x4802
0x00000200001a1d66 : ret 0x4803
0x0000020000023173 : ret 0x4804
0x000002000007111b : ret 0x4806
0x00000200001a1d5f : ret 0x4807
0x000002000000d810 : ret 0x4808
0x000002000003f816 : ret 0x480a
0x00000200001a6e57 : ret 0x480b
0x000002000005cba8 : ret 0x480c
0x00000200001a1d5b : ret 0x480f
0x0000020000005840 : ret 0x4810
0x000002000026fdc8 : ret 0x4814
0x000002000014ce57 : ret 0x4818
0x000002000019fe6b : ret 0x481f
0x0000020000016f40 : ret 0x4820
0x000002000003f2b2 : ret 0x4824
0x0000020000031818 : ret 0x4827
0x000002000006ef3f : ret 0x4828
0x0000020000365d66 : ret 0x482b
0x000002000000e359 : ret 0x4830
0x000002000003f2fc : ret 0x4838
0x000002000003f319 : ret 0x4840
0x00000200000627d9 : ret 0x4848
0x0000020000537f21 : ret 0x484c
0x0000020000119ab4 : ret 0x4850
0x000002000006b7df : ret 0x4860
0x00000200000b4730 : ret 0x4865
0x00000200001e0b9d : ret 0x4868
0x000002000003f339 : ret 0x4870
0x000002000014d927 : ret 0x4873
0x00000200000bdbfc : ret 0x4874
0x00000200003f24a1 : ret 0x4877
0x000002000003f359 : ret 0x4878
0x00000200004f452a : ret 0x4880
0x0000020000046e9d : ret 0x488a
0x0000020000162f14 : ret 0x488b
0x00000200001da6ca : ret 0x48a
0x000002000017508c : ret 0x48b
0x0000020000072ccf : ret 0x48c0
0x000002000001d983 : ret 0x48c3
0x0000020000462b1a : ret 0x48d
0x0000020000612d56 : ret 0x48d8
0x00000200000cb385 : ret 0x48e0
0x00000200000b66d6 : ret 0x48e9
0x000002000000eda1 : ret 0x48f0
0x000002000019e85f : ret 0x48f3
0x00000200001e3477 : ret 0x48f8
0x000002000051fbd5 : ret 0x48fe
0x00000200003d9f3f : ret 0x48ff
0x00000200003dd9c5 : ret 0x4901
0x000002000001705b : ret 0x4902
0x00000200000adf97 : ret 0x4904
0x00000200003a946a : ret 0x4907
0x0000020000019a76 : ret 0x4908
0x00000200003ed2e0 : ret 0x4909
0x0000020000039cfc : ret 0x490c
0x000002000001d053 : ret 0x4910
0x000002000019e065 : ret 0x4917
0x000002000002eb15 : ret 0x4918
0x0000020000146c97 : ret 0x491c
0x0000020000060bb9 : ret 0x4920
0x00000200001633c9 : ret 0x4924
0x000002000014a268 : ret 0x4928
0x000002000005a4e5 : ret 0x4930
0x0000020000632db4 : ret 0x4940
0x00000200004b1293 : ret 0x4948
0x00000200001965fc : ret 0x4950
0x000002000006c91c : ret 0x4974
0x0000020000186961 : ret 0x4977
0x000002000013ff03 : ret 0x49c3
0x00000200000909fa : ret 0x49c8
0x000002000002d3fa : ret 0x49d
0x000002000018b1d0 : ret 0x49e0
0x000002000058ed31 : ret 0x49e8
0x00000200000f9d96 : ret 0x49e9
0x00000200000b8020 : ret 0x49f0
0x000002000001af83 : ret 0x49f8
0x0000020000426c54 : ret 0x49ff
0x00000200000a7e40 : ret 0x4a08
0x000002000040e63d : ret 0x4a3
0x000002000064abcd : ret 0x4a75
0x000002000016223c : ret 0x4a8
0x000002000027085e : ret 0x4a88
0x000002000004a10c : ret 0x4a8d
0x000002000008df06 : ret 0x4adb
0x000002000042d0a5 : ret 0x4ae9
0x00000200003d7942 : ret 0x4afe
0x000002000010a5fe : ret 0x4b08
0x0000020000599877 : ret 0x4b2
0x0000020000090f3e : ret 0x4b20
0x000002000006c111 : ret 0x4b74
0x0000020000703143 : ret 0x4b8d
0x00000200000e1152 : ret 0x4ba
0x0000020000497834 : ret 0x4bf
0x0000020000176730 : ret 0x4c02
0x000002000051fb86 : ret 0x4c03
0x000002000019e069 : ret 0x4c04
0x000002000000910a : ret 0x4c08
0x00000200000a3fe0 : ret 0x4c0f
0x00000200000b947a : ret 0x4c10
0x00000200005cf820 : ret 0x4c12
0x0000020000551642 : ret 0x4c18
0x000002000063b575 : ret 0x4c1f
0x0000020000408177 : ret 0x4c20
0x0000020000157ee0 : ret 0x4c28
0x00000200003ba1a3 : ret 0x4c40
0x00000200003d9493 : ret 0x4c4c
0x00000200000de13f : ret 0x4c50
0x0000020000071f60 : ret 0x4c65
0x000002000003e58d : ret 0x4c74
0x00000200000a909a : ret 0x4c89
0x00000200001c367a : ret 0x4c8b
0x0000020000091c22 : ret 0x4c99
0x0000020000081008 : ret 0x4c9a
0x00000200006bfe1d : ret 0x4cc3
0x000002000047388e : ret 0x4ccc
0x0000020000026c0c : ret 0x4cd0
0x0000020000008001 : ret 0x4cf0
0x00000200006cfdf7 : ret 0x4cf8
0x00000200003de57e : ret 0x4cff
0x00000200000d8c0b : ret 0x4d
0x000002000045a939 : ret 0x4d02
0x00000200004cc131 : ret 0x4d04
0x00000200000cf8bf : ret 0x4d08
0x0000020000618c82 : ret 0x4d0c
0x0000020000118fe2 : ret 0x4d10
0x00000200003a8764 : ret 0x4d12
0x00000200007096ed : ret 0x4d18
0x000002000057ccc6 : ret 0x4d38
0x00000200004cecd2 : ret 0x4d48
0x00000200004f0db5 : ret 0x4d50
0x000002000017a20f : ret 0x4d75
0x000002000004530d : ret 0x4d77
0x000002000014ce85 : ret 0x4d89
0x0000020000247990 : ret 0x4db5
0x0000020000063606 : ret 0x4db9
0x00000200000995cd : ret 0x4dc6
0x00000200004df4a9 : ret 0x4de8
0x00000200001e0a4a : ret 0x4de9
0x00000200000070ad : ret 0x4df0
0x0000020000703414 : ret 0x4df8
0x00000200005e0b9a : ret 0x4dfc
0x000002000042b834 : ret 0x4dff
0x00000200002644d5 : ret 0x4e
0x00000200001c2f03 : ret 0x4e0f
0x0000020000023a15 : ret 0x4e72
0x000002000003c593 : ret 0x4e75
0x0000020000007f08 : ret 0x4e8
0x00000200001fb6eb : ret 0x4e80
0x0000020000192013 : ret 0x4e89
0x00000200001a7a2b : ret 0x4e9
0x000002000059676c : ret 0x4eb
0x0000020000260079 : ret 0x4f
0x00000200001f5f6d : ret 0x4f02
0x0000020000072340 : ret 0x4f0f
0x00000200004b6707 : ret 0x4f72
0x00000200000daaca : ret 0x4f88
0x00000200001373ac : ret 0x4f89
0x00000200005a504d : ret 0x4f8d
0x00000200004fc23e : ret 0x4fe9
0x0000020000665463 : ret 0x4ff
0x000002000025cc7d : ret 0x50
0x00000200006be22c : ret 0x506
0x00000200001188ca : ret 0x5072
0x000002000018cfa8 : ret 0x5073
0x0000020000623773 : ret 0x5074
0x00000200003c9dfd : ret 0x5075
0x000002000006c2cd : ret 0x508b
0x00000200000729b0 : ret 0x510
0x0000020000085989 : ret 0x512d
0x0000020000491721 : ret 0x513b
0x0000020000022c06 : ret 0x5176
0x00000200006d46fe : ret 0x518
0x0000020000037605 : ret 0x5189
0x0000020000106f32 : ret 0x518b
0x00000200000fb1ad : ret 0x518d
0x000002000024c9e8 : ret 0x519d
0x000002000014aa26 : ret 0x51ae
0x00000200000b255a : ret 0x52
0x00000200000c8151 : ret 0x520
0x00000200001620b8 : ret 0x521
0x00000200000173c2 : ret 0x528b
0x00000200001f0c8c : ret 0x52e8
0x000002000035e3e3 : ret 0x52e9
0x00000200005422cb : ret 0x5339
0x00000200000d7765 : ret 0x5364
0x0000020000046d04 : ret 0x5388
0x000002000036a01e : ret 0x5389
0x00000200000a2550 : ret 0x538b
0x00000200000a5f9d : ret 0x53b
0x0000020000084d09 : ret 0x53e8
0x000002000001068e : ret 0x5475
0x00000200003f71b7 : ret 0x548
0x000002000002cc6d : ret 0x5488
0x000002000002437d : ret 0x5489
0x00000200001339fd : ret 0x548b
0x000002000000a0c6 : ret 0x552
0x00000200001a3222 : ret 0x5574
0x00000200000f9554 : ret 0x5589
0x0000020000082319 : ret 0x55a5
0x0000020000072697 : ret 0x55e9
0x000002000004521c : ret 0x5674
0x0000020000073852 : ret 0x5675
0x00000200004991a4 : ret 0x56e8
0x00000200000062c7 : ret 0x56e9
0x00000200000aec09 : ret 0x573
0x0000020000108c82 : ret 0x574
0x000002000015ee55 : ret 0x575
0x00000200006f1a8e : ret 0x5760
0x000002000018cfa3 : ret 0x577
0x000002000003b4d0 : ret 0x5774
0x00000200000734d4 : ret 0x5775
0x00000200000da9f4 : ret 0x5788
0x00000200003d79ec : ret 0x578b
0x000002000056026f : ret 0x578d
0x0000020000253698 : ret 0x5794
0x00000200001aec16 : ret 0x57e
0x00000200004333c3 : ret 0x57e8
0x0000020000146821 : ret 0x57e9
0x0000020000255201 : ret 0x58
0x00000200002548ac : ret 0x5855
0x000002000064c9e0 : ret 0x587
0x00000200000bdbf2 : ret 0x5874
0x0000020000641c15 : ret 0x5875
0x0000020000364078 : ret 0x588
0x000002000062ac32 : ret 0x589
0x0000020000084f59 : ret 0x58aa
0x0000020000053956 : ret 0x58b
0x000002000037f863 : ret 0x58e9
0x000002000064eb34 : ret 0x58ff
0x0000020000129aaa : ret 0x590
0x00000200000644ea : ret 0x592
0x00000200005b820f : ret 0x5948
0x0000020000255bf4 : ret 0x595d
0x00000200000a907e : ret 0x5974
0x0000020000031348 : ret 0x5977
0x00000200005fc0c1 : ret 0x59e8
0x0000020000012812 : ret 0x5a26
0x000002000001c94a : ret 0x5a3
0x0000020000438693 : ret 0x5a73
0x00000200006ec7d3 : ret 0x5a75
0x00000200004cc89d : ret 0x5b74
0x000002000015110e : ret 0x5b9
0x0000020000119357 : ret 0x5ba
0x000002000009236c : ret 0x5bba
0x00000200005d4a74 : ret 0x5c6
0x0000020000143692 : ret 0x5c74
0x000002000001b332 : ret 0x5c75
0x000002000043e726 : ret 0x5ccb
0x00000200000e9bae : ret 0x5ce8
0x000002000038a54a : ret 0x5d00
0x000002000001066e : ret 0x5d75
0x000002000051593e : ret 0x5d77
0x00000200004d520d : ret 0x5dcb
0x0000020000018233 : ret 0x5e72
0x000002000008ef9c : ret 0x5e78
0x000002000004d303 : ret 0x5eb
0x000002000017fdb0 : ret 0x5ee8
0x0000020000007a54 : ret 0x5f41
0x000002000001b2dc : ret 0x5f7
0x000002000010308d : ret 0x5f77
0x00000200001963a8 : ret 0x5f8a
0x000002000003b4a8 : ret 0x5fb8
0x000002000062eadb : ret 0x5fe8
0x000002000023a9fd : ret 0x60
0x00000200006c3e27 : ret 0x600
0x0000020000485084 : ret 0x6000
0x0000020000636904 : ret 0x6073
0x000002000045fd49 : ret 0x6077
0x00000200000b1505 : ret 0x60e9
0x00000200004c6b6a : ret 0x615
0x000002000008f099 : ret 0x6169
0x00000200000ef788 : ret 0x61c
0x0000020000173769 : ret 0x61e8
0x000002000052406d : ret 0x61e9
0x000002000019bee5 : ret 0x624
0x00000200000910cd : ret 0x6280
0x000002000064e803 : ret 0x62ba
0x0000020000114f8f : ret 0x62e9
0x0000020000002efd : ret 0x6348
0x000002000058f109 : ret 0x6349
0x000002000002ec9e : ret 0x634c
0x00000200003fa63b : ret 0x6377
0x00000200006d16c5 : ret 0x6483
0x0000020000008e38 : ret 0x64a
0x00000200001fcf59 : ret 0x64c0
0x000002000039814e : ret 0x64e8
0x000002000003909f : ret 0x64e9
0x000002000066a2b5 : ret 0x64ff
0x000002000013945e : ret 0x65c3
0x00000200001a3899 : ret 0x65e8
0x00000200004155e8 : ret 0x65ff
0x0000020000363dda : ret 0x66
0x0000020000026e4b : ret 0x6602
0x00000200004739a4 : ret 0x6604
0x0000020000129da7 : ret 0x6608
0x00000200004a4304 : ret 0x660a
0x00000200005910a5 : ret 0x6610
0x000002000003f7ac : ret 0x661c
0x000002000014bd4f : ret 0x6620
0x0000020000133768 : ret 0x6630
0x00000200007091f2 : ret 0x6637
0x00000200000633c6 : ret 0x6675
0x0000020000054f01 : ret 0x66a8
0x00000200000b93a1 : ret 0x66c
0x000002000019c0c8 : ret 0x66c3
0x00000200005e6493 : ret 0x66fe
0x00000200004017a7 : ret 0x66ff
0x000002000008e0c7 : ret 0x6716
0x000002000008eb45 : ret 0x6719
0x000002000058e49e : ret 0x672
0x00000200000588c0 : ret 0x673
0x00000200004cd48a : ret 0x674
0x00000200001988d5 : ret 0x675
0x0000020000187ca5 : ret 0x676
0x0000020000599635 : ret 0x6875
0x00000200004605f0 : ret 0x6877
0x00000200001c9376 : ret 0x68e9
0x0000020000085d3d : ret 0x6906
0x00000200005aab2f : ret 0x692d
0x00000200001b8d08 : ret 0x6948
0x00000200003d87cf : ret 0x694d
0x000002000045d2b0 : ret 0x6975
0x0000020000169eef : ret 0x6980
0x00000200000b792b : ret 0x69b0
0x00000200000c7e23 : ret 0x69e9
0x000002000056784f : ret 0x69eb
0x0000020000635f15 : ret 0x6a75
0x000002000003ac28 : ret 0x6ae9
0x0000020000609e47 : ret 0x6aeb
0x000002000001dbf2 : ret 0x6b45
0x000002000002eb73 : ret 0x6b48
0x00000200001a16f3 : ret 0x6b74
0x0000020000570df0 : ret 0x6b77
0x00000200004c743f : ret 0x6b9
0x00000200001ec2b5 : ret 0x6ba
0x00000200000c531e : ret 0x6bb
0x0000020000113805 : ret 0x6be9
0x00000200004c53cb : ret 0x6bf
0x0000020000666b90 : ret 0x6bff
0x000002000026dce5 : ret 0x6c
0x000002000013635a : ret 0x6c74
0x000002000010a800 : ret 0x6c77
0x000002000038627d : ret 0x6c7e
0x0000020000054f28 : ret 0x6c80
0x000002000013e40e : ret 0x6ca3
0x0000020000132040 : ret 0x6d76
0x00000200001aced1 : ret 0x6e75
0x00000200001b9030 : ret 0x6e8
0x000002000064abc2 : ret 0x6eb
0x00000200004c69bc : ret 0x6ee8
0x0000020000090c56 : ret 0x6f9
0x000002000000f6d6 : ret 0x6fe9
0x00000200000dd0d5 : ret 0x7000
0x000002000024eb65 : ret 0x7005
0x00000200002088b1 : ret 0x7006
0x0000020000216635 : ret 0x700c
0x0000020000577715 : ret 0x7077
0x000002000065b354 : ret 0x70ba
0x0000020000601bc3 : ret 0x70e9
0x0000020000591103 : ret 0x7174
0x00000200001a85e3 : ret 0x7210
0x00000200000315c9 : ret 0x724
0x00000200005af0c8 : ret 0x72e8
0x00000200006695a6 : ret 0x72ff
0x00000200001a89f6 : ret 0x7310
0x0000020000470f70 : ret 0x7372
0x0000020000035563 : ret 0x7400
0x000002000002a54f : ret 0x7401
0x000002000013b3a6 : ret 0x7402
0x00000200000126f3 : ret 0x7403
0x0000020000050d38 : ret 0x7404
0x000002000006197b : ret 0x7406
0x0000020000073777 : ret 0x7407
0x0000020000020a40 : ret 0x7408
0x00000200000e4d03 : ret 0x740f
0x000002000042c3d4 : ret 0x741
0x00000200000195dd : ret 0x7410
0x000002000005816b : ret 0x7420
0x0000020000090639 : ret 0x7431
0x00000200001f4fb2 : ret 0x743f
0x00000200001c3ec8 : ret 0x7440
0x000002000047a6b7 : ret 0x7447
0x000002000017f862 : ret 0x7455
0x00000200003ca9d3 : ret 0x7489
0x0000020000069aa6 : ret 0x74e8
0x000002000066175e : ret 0x74ff
0x00000200006ebc4a : ret 0x7500
0x0000020000016e36 : ret 0x7501
0x00000200000128fb : ret 0x7502
0x0000020000003d21 : ret 0x7503
0x00000200000dfd3d : ret 0x7504
0x0000020000061994 : ret 0x7506
0x0000020000073a70 : ret 0x7507
0x000002000002f0e1 : ret 0x7508
0x00000200000071d2 : ret 0x750e
0x0000020000007197 : ret 0x750f
0x0000020000132a3c : ret 0x7510
0x00000200000d4b43 : ret 0x7520
0x0000020000199d36 : ret 0x753f
0x00000200000f9242 : ret 0x7540
0x00000200000f926c : ret 0x7542
0x000002000038671d : ret 0x75e8
0x000002000010ec10 : ret 0x75f8
0x0000020000416e24 : ret 0x75fe
0x0000020000667603 : ret 0x75ff
0x000002000008f3d3 : ret 0x763c
0x000002000058d801 : ret 0x7675
0x0000020000582adc : ret 0x772
0x00000200005b1129 : ret 0x773
0x00000200000026bc : ret 0x774
0x0000020000130430 : ret 0x775
0x00000200005ad011 : ret 0x776
0x0000020000152db4 : ret 0x777
0x000002000017c9b8 : ret 0x77b9
0x000002000007381d : ret 0x77e9
0x0000020000063346 : ret 0x7874
0x00000200000f8e84 : ret 0x789
0x000002000018a0e7 : ret 0x78ba
0x00000200003732ba : ret 0x78e8
0x00000200000a38d2 : ret 0x78e9
0x00000200001d8d11 : ret 0x7973
0x00000200000c1fff : ret 0x7974
0x00000200003cbbc9 : ret 0x7975
0x0000020000080937 : ret 0x7a21
0x000002000008fab2 : ret 0x7a55
0x00000200004b6781 : ret 0x7a72
0x000002000047b6e7 : ret 0x7a73
0x000002000057770b : ret 0x7a77
0x0000020000015fbc : ret 0x7ae8
0x00000200001ec2d4 : ret 0x7ba
0x00000200001f6831 : ret 0x7be9
0x0000020000084a79 : ret 0x7c05
0x0000020000464dbb : ret 0x7c80
0x0000020000139b71 : ret 0x7c89
0x000002000017f5cb : ret 0x7c8b
0x000002000002099f : ret 0x7ce9
0x00000200005a5690 : ret 0x7d74
0x00000200001704f8 : ret 0x7d89
0x00000200006481b5 : ret 0x7dff
0x0000020000636f2f : ret 0x7e8
0x000002000013a1b0 : ret 0x7e8b
0x000002000062f2f1 : ret 0x7e8d
0x00000200000eeb87 : ret 0x7e9
0x0000020000591903 : ret 0x7eb
0x00000200000914b3 : ret 0x7ec2
0x000002000045c19c : ret 0x7ee8
0x00000200006f307a : ret 0x7f73
0x000002000050b60e : ret 0x7f77
0x00000200006d2d97 : ret 0x7fe8
0x00000200001f62c7 : ret 0x80
0x000002000040dc01 : ret 0x8000
0x00000200006e9ee3 : ret 0x801
0x000002000015c058 : ret 0x8018
0x00000200004026f8 : ret 0x8024
0x000002000003ef87 : ret 0x8041
0x0000020000657c9d : ret 0x8060
0x000002000009234b : ret 0x807a
0x00000200000719e9 : ret 0x8088
0x000002000011f855 : ret 0x80ba
0x0000020000090b7b : ret 0x80e5
0x000002000003abc8 : ret 0x80e9
0x00000200000da814 : ret 0x80eb
0x00000200004f7061 : ret 0x80ff
0x00000200000264d1 : ret 0x8141
0x00000200000fe7ba : ret 0x8148
0x000002000015f713 : ret 0x8149
0x0000020000610754 : ret 0x8188
0x0000020000171626 : ret 0x8189
0x0000020000091f48 : ret 0x8199
0x00000200006f2cbd : ret 0x81c3
0x00000200003c67ea : ret 0x81e
0x00000200006fe155 : ret 0x81f0
0x0000020000443c06 : ret 0x81ff
0x000002000015c952 : ret 0x820
0x0000020000003b50 : ret 0x820f
0x000002000043e44b : ret 0x823c
0x0000020000084780 : ret 0x82bc
0x00000200005bb536 : ret 0x8302
0x00000200003c0717 : ret 0x8303
0x0000020000183e9b : ret 0x8304
0x00000200005be77c : ret 0x8307
0x0000020000027438 : ret 0x8308
0x00000200003c7cbb : ret 0x8309
0x0000020000008aab : ret 0x830f
0x000002000003f8eb : ret 0x8310
0x00000200005545f3 : ret 0x8318
0x0000020000157eb1 : ret 0x8320
0x000002000013e951 : ret 0x8328
0x00000200004f4e9f : ret 0x8330
0x0000020000040ebb : ret 0x8341
0x000002000003efbd : ret 0x8348
0x000002000000e258 : ret 0x8349
0x00000200006e2cba : ret 0x834a
0x000002000001ea64 : ret 0x8366
0x00000200000d2f3c : ret 0x8374
0x000002000005771b : ret 0x8388
0x00000200004d9abe : ret 0x8389
0x0000020000090721 : ret 0x839
0x00000200001169d4 : ret 0x83c3
0x000002000001fc93 : ret 0x83eb
0x000002000014ba97 : ret 0x83f0
0x00000200004258f5 : ret 0x83fa
0x00000200003e0f5d : ret 0x83fe
0x000002000041f6a7 : ret 0x83ff
0x0000020000633aed : ret 0x8402
0x0000020000004404 : ret 0x840f
0x00000200000922de : ret 0x842f
0x00000200000dcd3e : ret 0x8440
0x000002000042f545 : ret 0x8441
0x00000200000ac3c2 : ret 0x8445
0x000002000040b088 : ret 0x8488
0x0000020000415e3b : ret 0x8489
0x00000200003e8b25 : ret 0x84c7
0x00000200000671c5 : ret 0x84ff
0x000002000015404d : ret 0x8502
0x000002000002e5bc : ret 0x8508
0x0000020000006497 : ret 0x850f
0x000002000038d5ce : ret 0x8541
0x000002000063fb4f : ret 0x8544
0x00000200000acd6f : ret 0x8545
0x0000020000002fe6 : ret 0x8548
0x0000020000073522 : ret 0x8549
0x0000020000003016 : ret 0x854d
0x000002000045e7d0 : ret 0x8566
0x000002000003cd71 : ret 0x8578
0x00000200000fa8d6 : ret 0x8589
0x0000020000596650 : ret 0x85c7
0x000002000051dced : ret 0x85ff
0x00000200000167c4 : ret 0x860f
0x00000200001a7773 : ret 0x863b
0x00000200000bf16e : ret 0x8689
0x0000020000383033 : ret 0x86e9
0x000002000046f02d : ret 0x86eb
0x000002000000d589 : ret 0x870f
0x00000200005b05db : ret 0x873
0x0000020000190cd4 : ret 0x874
0x0000020000018013 : ret 0x875
0x00000200001c9371 : ret 0x876
0x00000200000f76fd : ret 0x8772
0x0000020000143436 : ret 0x8789
0x0000020000054c64 : ret 0x88
0x00000200003a3124 : ret 0x8800
0x00000200003b4f4c : ret 0x8802
0x0000020000002da7 : ret 0x8808
0x0000020000154095 : ret 0x8820
0x000002000003ff81 : ret 0x8841
0x000002000006ceb6 : ret 0x8844
0x00000200001138a1 : ret 0x88b
0x0000020000476b4b : ret 0x88ff
0x00000200004958e2 : ret 0x8902
0x0000020000382e40 : ret 0x8904
0x0000020000139b74 : ret 0x8908
0x00000200005c003c : ret 0x890b
0x00000200003f7521 : ret 0x890c
0x0000020000140ec4 : ret 0x8910
0x00000200003d396b : ret 0x8918
0x000002000037b7c1 : ret 0x8920
0x000002000048fcf8 : ret 0x8928
0x0000020000024300 : ret 0x8941
0x0000020000591cb1 : ret 0x8942
0x0000020000027de8 : ret 0x8944
0x0000020000049357 : ret 0x8945
0x00000200001f725d : ret 0x8948
0x00000200001f7114 : ret 0x8949
0x000002000005e8ea : ret 0x894a
0x000002000037bb4c : ret 0x894b
0x000002000006ee5a : ret 0x894c
0x00000200000a8556 : ret 0x894d
0x000002000000579c : ret 0x8966
0x00000200001dc27b : ret 0x89ba
0x000002000038c3cb : ret 0x89e
0x0000020000368a25 : ret 0x89f0
0x0000020000478185 : ret 0x89ff
0x00000200006e2d7e : ret 0x8a
0x00000200001a1817 : ret 0x8a04
0x0000020000061549 : ret 0x8a40
0x0000020000002de1 : ret 0x8a41
0x0000020000545527 : ret 0x8a42
0x000002000000343a : ret 0x8a44
0x0000020000419d2f : ret 0x8a45
0x0000020000544f85 : ret 0x8a46
0x00000200000858a2 : ret 0x8a9b
0x00000200003dfe47 : ret 0x8ac3
0x0000020000476b3d : ret 0x8aff
0x00000200001c613d : ret 0x8b04
0x00000200001d1678 : ret 0x8b08
0x00000200000dd2e1 : ret 0x8b0c
0x00000200001aa84c : ret 0x8b10
0x00000200004cdd4b : ret 0x8b20
0x00000200003b9318 : ret 0x8b40
0x000002000000d3c2 : ret 0x8b41
0x00000200000da04d : ret 0x8b42
0x00000200000fea8b : ret 0x8b43
0x000002000000953b : ret 0x8b44
0x0000020000025a19 : ret 0x8b45
0x000002000000264a : ret 0x8b48
0x00000200001aa8fc : ret 0x8b49
0x00000200000c3af3 : ret 0x8b4a
0x000002000012722d : ret 0x8b4b
0x000002000000a3d5 : ret 0x8b4c
0x00000200000264c9 : ret 0x8b4d
0x00000200000bd359 : ret 0x8b50
0x0000020000076c85 : ret 0x8b66
0x000002000036be50 : ret 0x8ba
0x00000200000041db : ret 0x8bc3
0x00000200001e3fa8 : ret 0x8be9
0x00000200003f1f59 : ret 0x8bf4
0x00000200003f2324 : ret 0x8bf8
0x0000020000405149 : ret 0x8bff
0x0000020000054c85 : ret 0x8c
0x00000200000106e2 : ret 0x8c74
0x00000200006d166f : ret 0x8d04
0x00000200000832e9 : ret 0x8d0a
0x000002000001da74 : ret 0x8d0f
0x00000200003d6ba6 : ret 0x8d10
0x00000200000049ff : ret 0x8d41
0x0000020000496ede : ret 0x8d42
0x000002000046ec29 : ret 0x8d43
0x00000200001dc916 : ret 0x8d44
0x0000020000174b6a : ret 0x8d45
0x000002000000842e : ret 0x8d48
0x00000200000498ba : ret 0x8d49
0x0000020000138702 : ret 0x8d4a
0x000002000002e2cf : ret 0x8d4b
0x000002000000fc6c : ret 0x8d4c
0x00000200000264cd : ret 0x8d4d
0x000002000013208d : ret 0x8d4f
0x00000200007069a1 : ret 0x8d72
0x00000200006e770f : ret 0x8d8b
0x0000020000035edd : ret 0x8de8
0x000002000048aa9c : ret 0x8dff
0x000002000000edac : ret 0x8e0f
0x000002000042efac : ret 0x8e76
0x000002000037332a : ret 0x8e8
0x00000200006a0f32 : ret 0x8e8b
0x00000200001b6afc : ret 0x8eb
0x0000020000145ece : ret 0x8f
0x0000020000102ebd : ret 0x8f0f
0x0000020000006452 : ret 0x8fe9
0x0000020000546f44 : ret 0x90
0x0000020000101144 : ret 0x9074
0x00000200000ca97c : ret 0x9090
0x0000020000139b91 : ret 0x90c
0x0000020000020eed : ret 0x90c3
0x0000020000012a0e : ret 0x90cc
0x00000200005fc28a : ret 0x90e8
0x0000020000478153 : ret 0x90ff
0x0000020000073e0a : ret 0x918b
0x00000200000bd519 : ret 0x91ba
0x0000020000703aea : ret 0x9204
0x000002000042e6ca : ret 0x928b
0x00000200006fef8d : ret 0x93
0x000002000009f68a : ret 0x938d
0x000002000050e167 : ret 0x93e9
0x00000200004f4433 : ret 0x93eb
0x0000020000084da2 : ret 0x94
0x000002000015dcd8 : ret 0x940f
0x00000200000a3ab8 : ret 0x9488
0x000002000003d605 : ret 0x9489
0x0000020000065e8c : ret 0x94c
0x000002000014665c : ret 0x94d
0x0000020000629328 : ret 0x94e9
0x00000200000da03d : ret 0x950f
0x00000200006c2bca : ret 0x95eb
0x000002000037bd3c : ret 0x960f
0x00000200003f80aa : ret 0x966
0x000002000069cfca : ret 0x96ff
0x000002000004033d : ret 0x972
0x0000020000110b0e : ret 0x973
0x0000020000709e1a : ret 0x9732
0x000002000003dadc : ret 0x974
0x00000200000c9343 : ret 0x975
0x00000200006f4f1e : ret 0x975d
0x000002000036d3df : ret 0x977
0x000002000070087a : ret 0x97ba
0x00000200001b5167 : ret 0x97e8
0x00000200001e648d : ret 0x97e9
0x0000020000460936 : ret 0x97eb
0x000002000027155f : ret 0x9848
0x000002000013f93c : ret 0x9948
0x00000200001893d5 : ret 0x99ba
0x0000020000708978 : ret 0x9a
0x00000200001895c5 : ret 0x9aba
0x00000200004ffe0a : ret 0x9abb
0x000002000001f3a4 : ret 0x9ae9
0x00000200000ca868 : ret 0x9aeb
0x0000020000085df1 : ret 0x9b64
0x0000020000560d25 : ret 0x9ba
0x00000200006e7817 : ret 0x9be9
0x00000200001506a6 : ret 0x9beb
0x00000200006bb01a : ret 0x9c20
0x00000200000de14e : ret 0x9c73
0x000002000047aed7 : ret 0x9c75
0x000002000009d4c7 : ret 0x9ca6
0x00000200004274b4 : ret 0x9cd
0x0000020000155f21 : ret 0x9ce9
0x00000200001f6259 : ret 0x9ceb
0x000002000062db16 : ret 0x9dab
0x0000020000448704 : ret 0x9de0
0x00000200006c74cf : ret 0x9de9
0x000002000008f4c1 : ret 0x9e53
0x000002000003f061 : ret 0x9e9
0x00000200001e4f41 : ret 0x9eb
0x00000200000a9907 : ret 0x9f0
0x00000200006c409a : ret 0x9f0f
0x0000020000081049 : ret 0x9f95
0x00000200006c2caa : ret 0x9fc5
0x0000020000011573 : ret 0xa
0x00000200006c3df1 : ret 0xa0
0x00000200001bd5f1 : ret 0xa00
0x0000020000174446 : ret 0xa07c
0x000002000061a9ea : ret 0xa095
0x0000020000139bfe : ret 0xa0c
0x000002000003a8a6 : ret 0xa14
0x00000200000536da : ret 0xa15
0x0000020000609aea : ret 0xa1a4
0x000002000064f5da : ret 0xa1bf
0x00000200006c212a : ret 0xa1ce
0x000002000060259e : ret 0xa1db
0x00000200006f2d60 : ret 0xa2
0x000002000039e649 : ret 0xa274
0x000002000064ad7a : ret 0xa280
0x000002000009025e : ret 0xa2be
0x00000200001b9088 : ret 0xa2e8
0x0000020000609a5f : ret 0xa2e9
0x00000200006045ee : ret 0xa34c
0x0000020000603bee : ret 0xa356
0x00000200000d4f89 : ret 0xa380
0x00000200006c3cd6 : ret 0xa3e7
0x000002000040e127 : ret 0xa3e8
0x000002000050dc57 : ret 0xa3e9
0x000002000004671a : ret 0xa3eb
0x00000200001f2c7a : ret 0xa47
0x0000020000169816 : ret 0xa4e8
0x00000200004a43d1 : ret 0xa4e9
0x00000200000808be : ret 0xa54d
0x000002000061d07a : ret 0xa55d
0x000002000070c2d5 : ret 0xa57c
0x000002000065684a : ret 0xa5e7
0x0000020000640a8a : ret 0xa643
0x000002000064ff9a : ret 0xa650
0x00000200005d489a : ret 0xa66a
0x0000020000413831 : ret 0xa674
0x00000200001de993 : ret 0xa677
0x00000200005fb33a : ret 0xa697
0x000002000060897a : ret 0xa6a4
0x000002000051d416 : ret 0xa6e9
0x000002000013099b : ret 0xa6eb
0x0000020000545b77 : ret 0xa72
0x0000020000175152 : ret 0xa73
0x000002000008ea82 : ret 0xa734
0x00000200000e19f2 : ret 0xa74
0x00000200005f6862 : ret 0xa744
0x00000200005f6662 : ret 0xa746
0x00000200001f844c : ret 0xa75
0x00000200000aaa03 : ret 0xa76
0x000002000037bd37 : ret 0xa77
0x000002000062c28a : ret 0xa776
0x00000200005f947a : ret 0xa799
0x00000200005feb5a : ret 0xa7e5
0x000002000019180a : ret 0xa8
0x000002000009f871 : ret 0xa852
0x0000020000412ea9 : ret 0xa876
0x000002000008f9ae : ret 0xa8b3
0x00000200005efc1a : ret 0xa8d4
0x00000200005de68e : ret 0xa8d5
0x0000020000664978 : ret 0xa8ff
0x00000200005e4afa : ret 0xa926
0x000002000000816a : ret 0xa948
0x00000200005bee0e : ret 0xa95c
0x0000020000620c7a : ret 0xa992
0x00000200001ef0f2 : ret 0xa9b
0x00000200001a705d : ret 0xa9e8
0x0000020000620081 : ret 0xa9e9
0x00000200005f24fa : ret 0xaab4
0x0000020000709490 : ret 0xaae8
0x00000200005b4a8e : ret 0xab71
0x00000200001436d6 : ret 0xab74
0x000002000010c977 : ret 0xab8
0x00000200005beafa : ret 0xab86
0x00000200005bd2fa : ret 0xab9e
0x000002000036bb40 : ret 0xaba
0x0000020000126792 : ret 0xabd
0x000002000046c95f : ret 0xabe8
0x00000200000864ce : ret 0xac44
0x0000020000091ef7 : ret 0xac4b
0x00000200003860a1 : ret 0xac72
0x000002000043e466 : ret 0xac83
0x00000200005adefa : ret 0xac92
0x00000200005a95fa : ret 0xacdb
0x0000020000527d96 : ret 0xace9
0x00000200000917bc : ret 0xad4d
0x00000200003a15ef : ret 0xad72
0x0000020000006afb : ret 0xad75
0x000002000054b0ea : ret 0xad8e
0x00000200005a0aba : ret 0xadcb
0x00000200006648c6 : ret 0xadf5
0x00000200005441ea : ret 0xadfd
0x0000020000533196 : ret 0xae4e
0x000002000020bf40 : ret 0xae5
0x000002000056940a : ret 0xae55
0x000002000058c80a : ret 0xae6d
0x000002000003cdd2 : ret 0xae72
0x000002000058787a : ret 0xaeb5
0x000002000058647a : ret 0xaec9
0x000002000013c12f : ret 0xaee9
0x00000200000728f6 : ret 0xaf0f
0x000002000005ac54 : ret 0xaf1
0x00000200005291ca : ret 0xaf2f
0x00000200005ad08a : ret 0xaf68
0x000002000014536e : ret 0xaf76
0x00000200005f9efa : ret 0xaf83
0x0000020000143fbf : ret 0xb
0x00000200001917bb : ret 0xb0
0x0000020000524146 : ret 0xb02c
0x00000200005816e2 : ret 0xb04c
0x00000200000cdf2a : ret 0xb073
0x000002000060a172 : ret 0xb07e
0x000002000009116d : ret 0xb08e
0x00000200000907f3 : ret 0xb0be
0x000002000036d643 : ret 0xb0c3
0x0000020000083fe0 : ret 0xb0cc
0x000002000014f0af : ret 0xb0d
0x00000200001b921a : ret 0xb0e9
0x000002000043becf : ret 0xb0ff
0x00000200000841ba : ret 0xb1
0x00000200000d8768 : ret 0xb141
0x0000020000549cea : ret 0xb144
0x00000200001321ca : ret 0xb176
0x000002000056281a : ret 0xb1a8
0x000002000065666e : ret 0xb1cf
0x000002000058237a : ret 0xb1fc
0x0000020000554ffa : ret 0xb221
0x0000020000588e6a : ret 0xb2b4
0x000002000064634a : ret 0xb2d2
0x00000200001c932c : ret 0xb2e9
0x00000200006622d7 : ret 0xb2ff
0x00000200006057f2 : ret 0xb313
0x000002000008fb80 : ret 0xb3af
0x00000200005b58fa : ret 0xb3c9
0x000002000009185a : ret 0xb3cc
0x000002000056578a : ret 0xb3e1
0x000002000049e909 : ret 0xb40
0x00000200000179b6 : ret 0xb41
0x0000020000574a9a : ret 0xb440
0x000002000003f999 : ret 0xb48
0x0000020000047554 : ret 0xb49
0x000002000056566a : ret 0xb4ec
0x00000200005eeb0a : ret 0xb4fa
0x000002000059e1fa : ret 0xb540
0x000002000038fbe1 : ret 0xb5a
0x000002000052307a : ret 0xb5a0
0x000002000059e78a : ret 0xb5a5
0x0000020000522cfa : ret 0xb5a8
0x000002000001f0e4 : ret 0xb60f
0x0000020000518e1a : ret 0xb641
0x0000020000501fcc : ret 0xb66
0x0000020000163a03 : ret 0xb677
0x0000020000502ca6 : ret 0xb69e
0x00000200005f7ea9 : ret 0xb6a0
0x00000200004b1a75 : ret 0xb6eb
0x0000020000490b3a : ret 0xb704
0x000002000003f002 : ret 0xb70f
0x00000200004789f2 : ret 0xb73
0x000002000008e45e : ret 0xb73c
0x000002000002866d : ret 0xb74
0x00000200001a32a2 : ret 0xb75
0x0000020000192ecb : ret 0xb77
0x000002000008f6a2 : ret 0xb77e
0x000002000054467a : ret 0xb798
0x000002000050f86a : ret 0xb7a0
0x0000020000391a41 : ret 0xb7d
0x00000200003fc9c3 : ret 0xb7e8
0x000002000014e9cf : ret 0xb8
0x000002000055c18d : ret 0xb802
0x0000020000151d26 : ret 0xb807
0x00000200006c8a0a : ret 0xb808
0x00000200003d6e61 : ret 0xb80b
0x00000200005fe836 : ret 0xb824
0x00000200005746a9 : ret 0xb83f
0x000002000003d9aa : ret 0xb841
0x000002000002942b : ret 0xb848
0x00000200000ca7ec : ret 0xb849
0x00000200006f7ed2 : ret 0xb868
0x00000200000910fd : ret 0xb87
0x00000200001801a1 : ret 0xb88b
0x0000020000150618 : ret 0xb8c3
0x000002000070240a : ret 0xb8e8
0x0000020000505eda : ret 0xb8e9
0x00000200003e0cb0 : ret 0xb8ff
0x00000200000f7abc : ret 0xb9
0x00000200003962fa : ret 0xb902
0x00000200001491d6 : ret 0xb904
0x000002000006aa0d : ret 0xb908
0x00000200006f6c05 : ret 0xb918
0x0000020000468279 : ret 0xb91c
0x0000020000652516 : ret 0xb920
0x00000200005002bc : ret 0xb928
0x00000200006f94d0 : ret 0xb930
0x0000020000057206 : ret 0xb941
0x000002000000448f : ret 0xb948
0x000002000011da2a : ret 0xb949
0x00000200004bec0e : ret 0xb95e
0x00000200006f52a2 : ret 0xb962
0x000002000050884a : ret 0xb96e
0x0000020000642cca : ret 0xb983
0x00000200000850f8 : ret 0xb9b4
0x0000020000144167 : ret 0xb9c3
0x00000200000857a6 : ret 0xb9d8
0x00000200004c5dda : ret 0xb9e3
0x00000200004fabd8 : ret 0xb9e9
0x00000200006f901a : ret 0xb9ef
0x00000200004c2d46 : ret 0xb9f4
0x00000200004446b1 : ret 0xb9ff
0x000002000002a5ea : ret 0xba
0x000002000035e54e : ret 0xba00
0x0000020000122b0a : ret 0xba01
0x000002000003a1aa : ret 0xba0f
0x000002000045bcb7 : ret 0xba41
0x000002000003ddb2 : ret 0xba48
0x000002000004a8ab : ret 0xba49
0x00000200006c4a4a : ret 0xbaa5
0x0000020000038d28 : ret 0xbac3
0x00000200006f1bf2 : ret 0xbad2
0x00000200004d6d52 : ret 0xbafd
0x000002000042862c : ret 0xbaff
0x00000200005966ba : ret 0xbb17
0x00000200006ec82a : ret 0xbb2a
0x00000200004c8d7a : ret 0xbb35
0x000002000019dac1 : ret 0xbb41
0x0000020000031dd4 : ret 0xbb49
0x0000020000091666 : ret 0xbb54
0x000002000003e366 : ret 0xbb90
0x00000200003df21b : ret 0xbbff
0x00000200006c7b32 : ret 0xbc2a
0x00000200003a939a : ret 0xbc41
0x000002000069f6fd : ret 0xbc49
0x000002000043a63a : ret 0xbc69
0x0000020000482536 : ret 0xbc6a
0x00000200001a165a : ret 0xbc72
0x0000020000054985 : ret 0xbc74
0x0000020000585c4e : ret 0xbc80
0x00000200006bf39a : ret 0xbcb2
0x00000200001a615c : ret 0xbd02
0x00000200006c5983 : ret 0xbd0f
0x00000200006e6e61 : ret 0xbd83
0x00000200000907ca : ret 0xbd97
0x0000020000473f4a : ret 0xbdb2
0x00000200004fff0a : ret 0xbdbb
0x0000020000144c79 : ret 0xbdeb
0x00000200004c448a : ret 0xbdf4
0x00000200006f9a5a : ret 0xbdfd
0x000002000010306d : ret 0xbe
0x000002000049147a : ret 0xbe19
0x0000020000366faf : ret 0xbe41
0x000002000009f6f6 : ret 0xbe48
0x00000200006dfbec : ret 0xbe49
0x000002000049761a : ret 0xbe5a
0x0000020000090033 : ret 0xbe64
0x0000020000399c77 : ret 0xbe76
0x00000200006fdf5a : ret 0xbe82
0x000002000008f835 : ret 0xbe8d
0x00000200006136b7 : ret 0xbe9
0x00000200004cd21a : ret 0xbebe
0x00000200006c7621 : ret 0xbeff
0x000002000048ae1a : ret 0xbf22
0x000002000000634a : ret 0xbf41
0x00000200000abb0f : ret 0xbf48
0x00000200006e51d9 : ret 0xbf49
0x0000020000487a1a : ret 0xbf56
0x0000020000073889 : ret 0xbf75
0x000002000002cb12 : ret 0xbf8
0x0000020000151c18 : ret 0xbfe9
0x00000200006655e6 : ret 0xbff
0x0000020000707632 : ret 0xbff6
0x000002000048f9f0 : ret 0xbfff
0x00000200000a56c8 : ret 0xc
0x00000200001bdc96 : ret 0xc0
0x000002000020c845 : ret 0xc004
0x000002000001ab35 : ret 0xc01b
0x00000200005910da : ret 0xc024
0x0000020000617c62 : ret 0xc025
0x0000020000545563 : ret 0xc032
0x0000020000026e6a : ret 0xc033
0x0000020000531fd6 : ret 0xc04d
0x00000200003bc3df : ret 0xc069
0x000002000014d90d : ret 0xc06b
0x000002000019bb08 : ret 0xc083
0x00000200000fe8ce : ret 0xc084
0x0000020000153f8f : ret 0xc085
0x00000200004d5260 : ret 0xc08b
0x000002000036408a : ret 0xc0a3
0x0000020000110054 : ret 0xc0a8
0x000002000008e42b : ret 0xc0bf
0x0000020000668af6 : ret 0xc0f6
0x00000200000446db : ret 0xc0ff
0x000002000002064c : ret 0xc103
0x0000020000369ca0 : ret 0xc104
0x00000200003c0711 : ret 0xc107
0x000002000050c4a9 : ret 0xc108
0x00000200006c227a : ret 0xc10a
0x0000020000591033 : ret 0xc10b
0x0000020000070fa0 : ret 0xc123
0x00000200000204f0 : ret 0xc12b
0x0000020000393ff3 : ret 0xc132
0x00000200006095ac : ret 0xc133
0x0000020000020963 : ret 0xc13b
0x000002000001dc06 : ret 0xc141
0x000002000019bf49 : ret 0xc148
0x0000020000020433 : ret 0xc149
0x0000020000578026 : ret 0xc14b
0x0000020000113ddd : ret 0xc166
0x00000200005a7446 : ret 0xc16a
0x00000200001b822b : ret 0xc183
0x000002000003fccb : ret 0xc184
0x0000020000656a4a : ret 0xc185
0x00000200005261d5 : ret 0xc18b
0x0000020000664fda : ret 0xc18f
0x0000020000186aa7 : ret 0xc1b9
0x00000200005423fa : ret 0xc1cb
0x00000200004b7ca9 : ret 0xc1e8
0x000002000050dc39 : ret 0xc1e9
0x0000020000162f5e : ret 0xc1f6
0x0000020000047f30 : ret 0xc1ff
0x0000020000008a67 : ret 0xc203
0x000002000063fafd : ret 0xc223
0x000002000004d3a9 : ret 0xc22b
0x000002000002f114 : ret 0xc232
0x00000200004fcf5c : ret 0xc23a
0x0000020000010e12 : ret 0xc23b
0x00000200001c0ab2 : ret 0xc283
0x00000200000c4305 : ret 0xc28b
0x000002000008fd29 : ret 0xc2c7
0x00000200004929aa : ret 0xc2c8
0x00000200006baf5e : ret 0xc2d1
0x000002000051bd1a : ret 0xc2e9
0x00000200000ee25a : ret 0xc2eb
0x0000020000073786 : ret 0xc2f6
0x000002000000956e : ret 0xc2ff
0x0000020000092d84 : ret 0xc302
0x00000200001e5917 : ret 0xc30c
0x00000200000938bc : ret 0xc313
0x000002000047248a : ret 0xc314
0x00000200001afd1d : ret 0xc32b
0x0000020000076ec7 : ret 0xc35b
0x0000020000151e23 : ret 0xc35f
0x000002000042f33a : ret 0xc384
0x00000200005ba238 : ret 0xc38b
0x000002000041f7d2 : ret 0xc398
0x00000200006427a1 : ret 0xc3ba
0x000002000050934a : ret 0xc3e7
0x0000020000657cda : ret 0xc3e9
0x0000020000508e4a : ret 0xc3ec
0x00000200006c0faa : ret 0xc3ff
0x000002000009378e : ret 0xc406
0x000002000009f79e : ret 0xc458
0x000002000041a780 : ret 0xc474
0x000002000065428c : ret 0xc4b9
0x0000020000089ef2 : ret 0xc4c3
0x0000020000634f2a : ret 0xc4c9
0x00000200001e6ff2 : ret 0xc4e9
0x0000020000052945 : ret 0xc503
0x00000200001a9e4a : ret 0xc51
0x000002000005baa2 : ret 0xc53b
0x00000200003960fa : ret 0xc54
0x000002000061a64a : ret 0xc549
0x0000020000015cef : ret 0xc57
0x0000020000073502 : ret 0xc575
0x000002000063af02 : ret 0xc5bc
0x0000020000460efa : ret 0xc5e3
0x000002000061cba5 : ret 0xc5e8
0x000002000005ff84 : ret 0xc5ff
0x000002000056a95f : ret 0xc603
0x000002000019fd69 : ret 0xc60f
0x000002000062cd92 : ret 0xc610
0x00000200004cc736 : ret 0xc61a
0x000002000062b5e2 : ret 0xc627
0x00000200004784fa : ret 0xc635
0x000002000006af24 : ret 0xc63b
0x000002000008fe3a : ret 0xc640
0x00000200003ec2d6 : ret 0xc65e
0x000002000062a81a : ret 0xc660
0x00000200001639f3 : ret 0xc672
0x00000200004656da : ret 0xc673
0x00000200003ed50e : ret 0xc675
0x00000200001d7613 : ret 0xc68b
0x00000200003ebe2e : ret 0xc68c
0x000002000060384a : ret 0xc6b7
0x00000200006ea746 : ret 0xc6c8
0x000002000061391f : ret 0xc6e9
0x0000020000591502 : ret 0xc6fe
0x0000020000476813 : ret 0xc6ff
0x00000200001b1f49 : ret 0xc704
0x000002000006a4e2 : ret 0xc708
0x00000200005fe64a : ret 0xc709
0x00000200006e868a : ret 0xc720
0x00000200006f1716 : ret 0xc728
0x0000020000155be3 : ret 0xc73b
0x00000200001bc5b9 : ret 0xc74
0x00000200000a3be7 : ret 0xc748
0x00000200001175c1 : ret 0xc749
0x000002000011d00f : ret 0xc75
0x00000200001aece1 : ret 0xc76
0x00000200001b3308 : ret 0xc77
0x00000200006090f9 : ret 0xc776
0x00000200003a8fb2 : ret 0xc787
0x00000200001165a2 : ret 0xc78b
0x000002000061f5e2 : ret 0xc7c0
0x00000200006be843 : ret 0xc7cb
0x00000200003f427a : ret 0xc7eb
0x000002000038f456 : ret 0xc7ee
0x0000020000012b10 : ret 0xc7f
0x00000200003f397a : ret 0xc7f4
0x000002000003dd6d : ret 0xc7ff
0x00000200001965f7 : ret 0xc803
0x000002000019b57a : ret 0xc80b
0x00000200004853ba : ret 0xc816
0x000002000008e871 : ret 0xc81d
0x00000200000e594d : ret 0xc82b
0x0000020000150e63 : ret 0xc833
0x0000020000365157 : ret 0xc83b
0x00000200003caa0a : ret 0xc83f
0x000002000037d6b6 : ret 0xc870
0x000002000041c78a : ret 0xc871
0x000002000045ead4 : ret 0xc883
0x000002000005d7d9 : ret 0xc88b
0x0000020000464fa9 : ret 0xc8a3
0x00000200003b6e1f : ret 0xc8ba
0x000002000014fd60 : ret 0xc8d0
0x000002000060a551 : ret 0xc8df
0x00000200000f6f22 : ret 0xc8e8
0x00000200000b13fb : ret 0xc8e9
0x0000020000115e4a : ret 0xc8ff
0x000002000014fd84 : ret 0xc903
0x000002000001b8ff : ret 0xc933
0x00000200006c220a : ret 0xc955
0x0000020000037d54 : ret 0xc984
0x00000200000e9b7c : ret 0xc985
0x000002000001b985 : ret 0xc98b
0x00000200004aa1f1 : ret 0xc9e8
0x00000200004f52d3 : ret 0xc9e9
0x0000020000061962 : ret 0xc9ff
0x000002000006e84a : ret 0xca03
0x0000020000039c3f : ret 0xca0b
0x00000200003d11aa : ret 0xca1b
0x000002000047d88d : ret 0xca23
0x00000200004adbd3 : ret 0xca2b
0x0000020000411f9a : ret 0xca30
0x00000200001419a2 : ret 0xca3a
0x000002000014674c : ret 0xca3b
0x0000020000588f55 : ret 0xca72
0x00000200006185da : ret 0xca83
0x00000200000fee63 : ret 0xca8a
0x000002000003e9b7 : ret 0xca8b
0x0000020000085eb5 : ret 0xcaba
0x00000200005c1f4a : ret 0xcad0
0x0000020000017e14 : ret 0xcae8
0x00000200005bfd4a : ret 0xcaf2
0x000002000061395f : ret 0xcaff
0x0000020000601b22 : ret 0xcb03
0x000002000040823a : ret 0xcb18
0x00000200001dde75 : ret 0xcb3b
0x00000200006d5296 : ret 0xcb75
0x000002000003e972 : ret 0xcb83
0x00000200000a7bdc : ret 0xcb8b
0x00000200005b817a : ret 0xcbbb
0x000002000000d594 : ret 0xcbe9
0x000002000013c1f1 : ret 0xcbeb
0x0000020000371aae : ret 0xcbf0
0x00000200006c2d6a : ret 0xcbf3
0x00000200003b7afa : ret 0xcbf6
0x00000200006edb7e : ret 0xcc25
0x00000200003f363a : ret 0xcc64
0x000002000017c03e : ret 0xcc72
0x00000200001e5730 : ret 0xcc75
0x000002000008f777 : ret 0xccb
0x000002000008e2e1 : ret 0xcce4
0x00000200001a814e : ret 0xcce8
0x0000020000475f62 : ret 0xccff
0x00000200005fb352 : ret 0xcd10
0x000002000017fc0d : ret 0xcd72
0x000002000040250a : ret 0xcd7a
0x00000200005a67d2 : ret 0xcd7f
0x0000020000597e7a : ret 0xcd81
0x00000200003dcc91 : ret 0xcd8b
0x000002000059534a : ret 0xcd9c
0x00000200003d824a : ret 0xcde1
0x00000200005670a5 : ret 0xcde8
0x0000020000092314 : ret 0xcdf4
0x00000200003d3973 : ret 0xce03
0x00000200001b2556 : ret 0xce1
0x00000200005ac16a : ret 0xce4a
0x000002000071051a : ret 0xce54
0x0000020000134865 : ret 0xce75
0x000002000018e748 : ret 0xce8b
0x000002000064c239 : ret 0xceb
0x00000200005a7652 : ret 0xceb4
0x00000200003b578a : ret 0xcee1
0x00000200003d7aba : ret 0xcef8
0x000002000039b172 : ret 0xcf09
0x000002000057de4a : ret 0xcf11
0x00000200005e7a7a : ret 0xcf18
0x00000200000cd4fa : ret 0xcf2b
0x0000020000085de3 : ret 0xcf31
0x0000020000592494 : ret 0xcf3b
0x00000200001404d0 : ret 0xcf73
0x00000200003b43c9 : ret 0xcf83
0x000002000002fdec : ret 0xcf85
0x000002000004576e : ret 0xcf8b
0x00000200000034c6 : ret 0xcfeb
0x000002000066991c : ret 0xcff
0x000002000008dad5 : ret 0xcff5
0x000002000069dfa1 : ret 0xcfff
0x00000200000dd669 : ret 0xd
0x000002000020e42d : ret 0xd009
0x0000020000206751 : ret 0xd010
0x0000020000062883 : ret 0xd02b
0x00000200003d6e83 : ret 0xd03b
0x000002000014fd76 : ret 0xd041
0x00000200006ed25a : ret 0xd044
0x00000200001f5be2 : ret 0xd072
0x0000020000567b4a : ret 0xd074
0x00000200005de79a : ret 0xd07e
0x000002000004af60 : ret 0xd08b
0x00000200005d8672 : ret 0xd0e4
0x00000200003a3fe5 : ret 0xd0f
0x00000200003bf92c : ret 0xd0f6
0x00000200000f8630 : ret 0xd0f7
0x000002000051fa88 : ret 0xd123
0x0000020000169194 : ret 0xd12b
0x0000020000188e42 : ret 0xd13b
0x000002000001dc00 : ret 0xd141
0x00000200000a9699 : ret 0xd148
0x000002000005894a : ret 0xd149
0x00000200003c4b7a : ret 0xd158
0x000002000019cec8 : ret 0xd166
0x0000020000636262 : ret 0xd172
0x00000200001e0670 : ret 0xd175
0x000002000057ccca : ret 0xd17c
0x000002000000e283 : ret 0xd18b
0x000002000057f1d9 : ret 0xd19b
0x0000020000566522 : ret 0xd1b2
0x00000200000671de : ret 0xd1e9
0x000002000000e424 : ret 0xd1f7
0x00000200001bee3a : ret 0xd20
0x00000200006c7553 : ret 0xd232
0x0000020000007130 : ret 0xd233
0x00000200001999a2 : ret 0xd241
0x000002000037f18a : ret 0xd25c
0x000002000006c2aa : ret 0xd269
0x00000200006d3281 : ret 0xd26b
0x0000020000703d4b : ret 0xd275
0x0000020000444b8f : ret 0xd284
0x000002000012b550 : ret 0xd285
0x0000020000573e8a : ret 0xd2b8
0x0000020000015b16 : ret 0xd2d
0x000002000009a221 : ret 0xd2e5
0x00000200000a86a2 : ret 0xd2e9
0x000002000013b357 : ret 0xd2eb
0x0000020000628182 : ret 0xd2f1
0x0000020000511124 : ret 0xd2f6
0x00000200004992c6 : ret 0xd2f7
0x000002000003c6d3 : ret 0xd300
0x00000200003caef4 : ret 0xd323
0x0000020000385e9a : ret 0xd32c
0x0000020000062895 : ret 0xd33b
0x000002000014d8fc : ret 0xd341
0x0000020000009d4c : ret 0xd348
0x00000200000a7d22 : ret 0xd349
0x00000200005d1d5a : ret 0xd366
0x00000200004fa4bd : ret 0xd374
0x00000200000c82ac : ret 0xd38b
0x00000200006c24fe : ret 0xd3b4
0x00000200006c113e : ret 0xd3c8
0x000002000011949f : ret 0xd3d
0x0000020000446611 : ret 0xd3e9
0x00000200006f6672 : ret 0xd40d
0x00000200006f63b6 : ret 0xd450
0x00000200003895bd : ret 0xd475
0x0000020000066ee6 : ret 0xd48
0x000002000054c70a : ret 0xd49f
0x000002000041287d : ret 0xd4e9
0x00000200003e0284 : ret 0xd4eb
0x000002000008f53d : ret 0xd4f
0x00000200006300fa : ret 0xd502
0x000002000002e3c9 : ret 0xd503
0x000002000017fae4 : ret 0xd523
0x00000200003a3fd6 : ret 0xd53b
0x0000020000091d2b : ret 0xd54e
0x000002000062516a : ret 0xd55a
0x00000200006cb7ac : ret 0xd572
0x000002000018be64 : ret 0xd575
0x0000020000134a4c : ret 0xd58b
0x00000200001bcc12 : ret 0xd59
0x000002000056ee6a : ret 0xd5d5
0x00000200000d9703 : ret 0xd672
0x00000200001ce306 : ret 0xd68b
0x00000200001b42f2 : ret 0xd6b
0x0000020000512cd2 : ret 0xd6ba
0x000002000047632e : ret 0xd703
0x0000020000625923 : ret 0xd710
0x0000020000390b45 : ret 0xd72
0x000002000050c2d2 : ret 0xd724
0x0000020000155ca4 : ret 0xd73b
0x000002000000ed17 : ret 0xd74
0x0000020000072b3d : ret 0xd75
0x00000200000aa590 : ret 0xd76
0x0000020000027261 : ret 0xd77
0x00000200005d2f92 : ret 0xd77c
0x000002000062beac : ret 0xd782
0x00000200000470f6 : ret 0xd78b
0x00000200006c390a : ret 0xd7b8
0x00000200006c39a2 : ret 0xd7be
0x000002000051af7a : ret 0xd7cc
0x00000200004a0243 : ret 0xd7e8
0x000002000011738a : ret 0xd7eb
0x00000200004f7186 : ret 0xd803
0x00000200004eb64a : ret 0xd839
0x0000020000584fc9 : ret 0xd83b
0x0000020000621052 : ret 0xd875
0x00000200000ae137 : ret 0xd88a
0x00000200000cbd81 : ret 0xd88b
0x000002000064004d : ret 0xd89
0x00000200004feaaa : ret 0xd898
0x0000020000569a52 : ret 0xd8c5
0x00000200004f06d2 : ret 0xd8e0
0x00000200001a4aeb : ret 0xd8f6
0x0000020000133716 : ret 0xd8f7
0x0000020000500fba : ret 0xd8fe
0x000002000020fd78 : ret 0xd90
0x00000200005477aa : ret 0xd921
0x00000200006f3148 : ret 0xd973
0x00000200001ba4d9 : ret 0xd98
0x000002000009115d : ret 0xd989
0x000002000006b405 : ret 0xd98b
0x00000200005eab4c : ret 0xd9a4
0x00000200005e7bc6 : ret 0xd9c4
0x000002000050207a : ret 0xd9d5
0x0000020000549814 : ret 0xd9f7
0x00000200004e0dfc : ret 0xd9f9
0x00000200004f705a : ret 0xda0d
0x00000200004f99b2 : ret 0xda56
0x00000200005edc0c : ret 0xda73
0x000002000036da6d : ret 0xda75
0x000002000008e864 : ret 0xda8
0x00000200005abaf3 : ret 0xda8a
0x000002000019a4c5 : ret 0xda8b
0x000002000018b0b2 : ret 0xdab9
0x0000020000604a93 : ret 0xdaba
0x00000200000b9457 : ret 0xdae9
0x00000200006c8b0b : ret 0xdaeb
0x00000200005e28f2 : ret 0xdb02
0x00000200000fa327 : ret 0xdb1
0x00000200004d78da : ret 0xdb16
0x0000020000535072 : ret 0xdb1a
0x00000200000eee81 : ret 0xdb33
0x00000200005f5d76 : ret 0xdb63
0x00000200000eda71 : ret 0xdb7
0x000002000054cf52 : ret 0xdb73
0x00000200004cc8dd : ret 0xdb8
0x000002000000459e : ret 0xdb85
0x00000200004e2c4a : ret 0xdb8c
0x0000020000021eae : ret 0xdb9
0x00000200005070f1 : ret 0xdba
0x00000200003b5882 : ret 0xdbb
0x0000020000516c7a : ret 0xdbd7
0x00000200005ff8ea : ret 0xdbdb
0x00000200001a5abf : ret 0xdbe9
0x0000020000003b9d : ret 0xdbeb
0x0000020000620bcf : ret 0xdbef
0x0000020000590f1f : ret 0xdc00
0x00000200001a2eba : ret 0xdc1
0x00000200001154ba : ret 0xdc6
0x00000200005adfd3 : ret 0xdc72
0x000002000018fe75 : ret 0xdc75
0x000002000061690e : ret 0xdce9
0x0000020000082852 : ret 0xdd
0x000002000049d54a : ret 0xdd1a
0x00000200005240ea : ret 0xdd1f
0x0000020000516b8f : ret 0xdd2
0x00000200004b3482 : ret 0xdd66
0x0000020000027501 : ret 0xdd75
0x00000200004f27ba : ret 0xdd92
0x00000200006195a4 : ret 0xdd93
0x0000020000619209 : ret 0xdda2
0x00000200005af155 : ret 0xdde8
0x000002000003a1d1 : ret 0xddeb
0x000002000057ee26 : ret 0xddf2
0x000002000037612a : ret 0xde6
0x00000200006c9a70 : ret 0xde72
0x0000020000197464 : ret 0xde75
0x00000200001bffbd : ret 0xde8
0x00000200000c6e28 : ret 0xdeeb
0x000002000001b36a : ret 0xdf
0x000002000000bca6 : ret 0xdf25
0x0000020000083960 : ret 0xdf27
0x00000200004f3716 : ret 0xdf4a
0x00000200005fadb1 : ret 0xdf73
0x000002000019bfe1 : ret 0xdf7f
0x0000020000157710 : ret 0xdf8b
0x000002000060746a : ret 0xdfa0
0x000002000049e7da : ret 0xdfa2
0x00000200006077f9 : ret 0xdfa8
0x00000200005e9fb2 : ret 0xdfc6
0x000002000040373b : ret 0xdfe8
0x000002000050dc1b : ret 0xdfe9
0x00000200004ecafd : ret 0xdfeb
0x00000200006680b9 : ret 0xdff
0x000002000014ab68 : ret 0xdfff
0x0000020000013ee3 : ret 0xe
0x0000020000211909 : ret 0xe006
0x00000200002056f9 : ret 0xe017
0x00000200000f0698 : ret 0xe025
0x0000020000572316 : ret 0xe058
0x000002000047af33 : ret 0xe072
0x00000200005fbfae : ret 0xe076
0x00000200001c3239 : ret 0xe07c
0x00000200001e4bdf : ret 0xe083
0x000002000060ddf4 : ret 0xe08d
0x00000200001c60ed : ret 0xe0c0
0x000002000001682a : ret 0xe0c1
0x00000200004720d2 : ret 0xe0c6
0x0000020000042554 : ret 0xe0d3
0x00000200000cea4a : ret 0xe0e9
0x00000200004012e7 : ret 0xe0ff
0x00000200006e4c6e : ret 0xe10
0x000002000045ed7a : ret 0xe112
0x0000020000474f7f : ret 0xe175
0x0000020000609b8e : ret 0xe17c
0x0000020000599928 : ret 0xe180
0x00000200000ca95b : ret 0xe181
0x0000020000024ee8 : ret 0xe183
0x0000020000609d92 : ret 0xe1b3
0x0000020000022a65 : ret 0xe1c1
0x00000200001f9dee : ret 0xe1e6
0x00000200001f6a6d : ret 0xe1f7
0x00000200001be1be : ret 0xe272
0x000002000002881e : ret 0xe280
0x000002000006c2b9 : ret 0xe281
0x00000200000fb1a0 : ret 0xe283
0x000002000062e12a : ret 0xe299
0x00000200003c066b : ret 0xe2c1
0x000002000038e81a : ret 0xe2c3
0x000002000009065e : ret 0xe2c5
0x00000200001afaab : ret 0xe2d3
0x00000200006c32fa : ret 0xe300
0x00000200001d87e1 : ret 0xe330
0x00000200001e8bda : ret 0xe352
0x000002000060bb1a : ret 0xe35c
0x00000200001dd4c6 : ret 0xe35d
0x0000020000154075 : ret 0xe372
0x00000200006f3153 : ret 0xe373
0x00000200001fc728 : ret 0xe37f
0x00000200001fd700 : ret 0xe383
0x00000200005e2e05 : ret 0xe3ab
0x000002000065c3b8 : ret 0xe3ba
0x00000200004dad2d : ret 0xe3c1
0x000002000051773a : ret 0xe3f8
0x000002000053a49a : ret 0xe428
0x00000200004a3972 : ret 0xe431
0x00000200001d8eda : ret 0xe44f
0x00000200006289d9 : ret 0xe45a
0x00000200001f6624 : ret 0xe46c
0x00000200001df20a : ret 0xe46f
0x00000200004c324f : ret 0xe472
0x000002000010230b : ret 0xe473
0x00000200004c702d : ret 0xe475
0x0000020000571bee : ret 0xe477
0x00000200000737cc : ret 0xe484
0x0000020000616729 : ret 0xe486
0x0000020000587dfa : ret 0xe487
0x000002000050ccda : ret 0xe4a6
0x000002000048b422 : ret 0xe4c3
0x000002000062a28c : ret 0xe4e5
0x0000020000631823 : ret 0xe4e8
0x000002000013fb43 : ret 0xe4eb
0x00000200001f95bc : ret 0xe4f1
0x00000200001d5eb5 : ret 0xe522
0x000002000061324a : ret 0xe523
0x00000200005dfe1d : ret 0xe54c
0x00000200005307da : ret 0xe570
0x000002000003e87b : ret 0xe572
0x0000020000066119 : ret 0xe574
0x00000200001ee496 : ret 0xe575
0x00000200005b3f4e : ret 0xe57f
0x00000200005eb52b : ret 0xe5c1
0x00000200005eb1a9 : ret 0xe5d3
0x00000200001e71a5 : ret 0xe5eb
0x00000200004f6cda : ret 0xe609
0x000002000061372c : ret 0xe611
0x00000200005db00a : ret 0xe612
0x00000200001f3222 : ret 0xe628
0x00000200005fa31e : ret 0xe62f
0x0000020000601675 : ret 0xe638
0x00000200001d8319 : ret 0xe66c
0x00000200001639d3 : ret 0xe672
0x00000200000c9366 : ret 0xe675
0x0000020000402e9c : ret 0xe681
0x00000200001ec012 : ret 0xe6a9
0x000002000001aeca : ret 0xe6c
0x00000200001fe6da : ret 0xe6ce
0x000002000040ce34 : ret 0xe6e8
0x00000200003f9da7 : ret 0xe6eb
0x000002000002d54b : ret 0xe72
0x00000200001b13ea : ret 0xe72b
0x00000200005fe01f : ret 0xe73c
0x000002000018e3cc : ret 0xe74
0x0000020000072d2f : ret 0xe75
0x00000200001158b6 : ret 0xe76
0x00000200004d1463 : ret 0xe775
0x00000200003f764a : ret 0xe779
0x0000020000654313 : ret 0xe77c
0x00000200000d8c58 : ret 0xe783
0x000002000002d8e3 : ret 0xe7e8
0x00000200001e8041 : ret 0xe7ed
0x0000020000037786 : ret 0xe802
0x00000200000349ef : ret 0xe804
0x0000020000567cb0 : ret 0xe806
0x00000200001599fc : ret 0xe808
0x00000200006efc36 : ret 0xe80c
0x000002000046adc3 : ret 0xe810
0x00000200005e3481 : ret 0xe814
0x000002000037df3c : ret 0xe818
0x00000200005dc6d4 : ret 0xe81a
0x000002000016a844 : ret 0xe820
0x0000020000567678 : ret 0xe826
0x0000020000492992 : ret 0xe828
0x00000200001d2b46 : ret 0xe82a
0x00000200000ae9d4 : ret 0xe82b
0x00000200003fdeb4 : ret 0xe82c
0x000002000037b766 : ret 0xe830
0x0000020000509b02 : ret 0xe834
0x00000200004927c0 : ret 0xe838
0x00000200001d0cc8 : ret 0xe840
0x00000200004fa2cf : ret 0xe848
0x000002000038f918 : ret 0xe84c
0x00000200005acdbf : ret 0xe850
0x00000200004b13b4 : ret 0xe860
0x00000200004de1ba : ret 0xe86b
0x0000020000125519 : ret 0xe872
0x00000200001041cd : ret 0xe875
0x00000200003db126 : ret 0xe883
0x0000020000615a3c : ret 0xe891
0x000002000061b838 : ret 0xe8a6
0x0000020000572d1c : ret 0xe8b8
0x000002000014f687 : ret 0xe8c0
0x0000020000168908 : ret 0xe8c1
0x00000200003766c4 : ret 0xe8cb
0x000002000040c322 : ret 0xe8ce
0x000002000001e0e7 : ret 0xe8d1
0x00000200000e94af : ret 0xe8d3
0x000002000017ffca : ret 0xe8e7
0x0000020000060d98 : ret 0xe8eb
0x000002000050da28 : ret 0xe8f8
0x00000200006647b7 : ret 0xe8ff
0x000002000005b955 : ret 0xe9
0x00000200001f62d6 : ret 0xe902
0x0000020000547365 : ret 0xe904
0x0000020000027510 : ret 0xe908
0x000002000038df59 : ret 0xe910
0x00000200000d0ad3 : ret 0xe918
0x00000200001ea27a : ret 0xe920
0x000002000050e811 : ret 0xe924
0x000002000050dd3f : ret 0xe92d
0x00000200001d1e91 : ret 0xe932
0x00000200001d150a : ret 0xe939
0x000002000061eac6 : ret 0xe948
0x00000200001d30fe : ret 0xe94c
0x000002000062c47c : ret 0xe959
0x000002000003e57a : ret 0xe972
0x00000200001ee467 : ret 0xe975
0x00000200004b3c9a : ret 0xe997
0x00000200005bdfea : ret 0xe99f
0x000002000016a9ea : ret 0xe9ad
0x0000020000052920 : ret 0xe9c0
0x0000020000021c99 : ret 0xe9c1
0x00000200003b43bc : ret 0xe9c9
0x0000020000441f41 : ret 0xe9fd
0x00000200004cfa9e : ret 0xe9ff
0x000002000061740a : ret 0xea0c
0x00000200004eda5d : ret 0xea5
0x00000200000ab92d : ret 0xea72
0x00000200000c4487 : ret 0xea75
0x00000200001665ec : ret 0xea8b
0x00000200000ca5f4 : ret 0xeac0
0x00000200000520f6 : ret 0xeac1
0x00000200005af0e0 : ret 0xeae8
0x00000200003f9cf1 : ret 0xeb
0x00000200001554dd : ret 0xeb02
0x00000200001a1847 : ret 0xeb03
0x000002000039206b : ret 0xeb06
0x0000020000005837 : ret 0xeb08
0x0000020000199001 : ret 0xeb0c
0x00000200001a0c4e : ret 0xeb10
0x00000200001a17ec : ret 0xeb14
0x00000200001a0bb2 : ret 0xeb18
0x00000200001a17d8 : ret 0xeb1c
0x000002000058ecee : ret 0xeb24
0x00000200001326a9 : ret 0xeb28
0x00000200005894ca : ret 0xeb34
0x00000200001c148a : ret 0xeb37
0x00000200005833ff : ret 0xeb38
0x0000020000633123 : ret 0xeb4f
0x0000020000133762 : ret 0xeb57
0x000002000019056a : ret 0xeb58
0x0000020000101d5e : ret 0xeb75
0x000002000065390f : ret 0xeb7c
0x00000200003a81f0 : ret 0xeba9
0x00000200003a81d1 : ret 0xebc9
0x000002000003ea23 : ret 0xebe0
0x00000200005bbef6 : ret 0xebe1
0x000002000019d8bb : ret 0xebe9
0x00000200001ab74b : ret 0xebf0
0x00000200001a4c64 : ret 0xebf8
0x000002000057a496 : ret 0xebfd
0x00000200003de50e : ret 0xebff
0x00000200005919ea : ret 0xec03
0x00000200003cfee1 : ret 0xec0c
0x0000020000516f4a : ret 0xec1e
0x00000200003ab14a : ret 0xec3e
0x00000200005dfef7 : ret 0xec46
0x00000200005dd47d : ret 0xec54
0x00000200001f9738 : ret 0xec5f
0x00000200005f3416 : ret 0xec61
0x00000200001b1f7e : ret 0xec72
0x00000200001b7818 : ret 0xec74
0x00000200005722da : ret 0xec75
0x000002000017dd0a : ret 0xec77
0x00000200003a97b6 : ret 0xeca3
0x00000200003cad42 : ret 0xecd0
0x00000200004e95f1 : ret 0xecd5
0x00000200001d390a : ret 0xece2
0x0000020000373346 : ret 0xece8
0x000002000013c13e : ret 0xece9
0x00000200000da7f6 : ret 0xeceb
0x00000200001d8014 : ret 0xecf1
0x00000200001a5914 : ret 0xed0
0x000002000057b87a : ret 0xed2e
0x00000200000427ef : ret 0xed33
0x00000200001d8213 : ret 0xed71
0x00000200000b9740 : ret 0xed72
0x00000200001f80a7 : ret 0xed75
0x000002000040a072 : ret 0xedca
0x000002000061a5b4 : ret 0xedd0
0x000002000008f5b6 : ret 0xede5
0x00000200005a7134 : ret 0xedeb
0x00000200003b740a : ret 0xedf2
0x00000200001e2792 : ret 0xedf5
0x000002000062a6b5 : ret 0xedf9
0x00000200001cb456 : ret 0xee20
0x00000200001bee7a : ret 0xee31
0x00000200001e0f8e : ret 0xee59
0x0000020000147ca2 : ret 0xee72
0x000002000016069b : ret 0xee75
0x000002000062f6fe : ret 0xee99
0x000002000052b6f2 : ret 0xeeb
0x00000200001e9a36 : ret 0xeec0
0x00000200001f4ba1 : ret 0xeec1
0x0000020000606cf5 : ret 0xeeff
0x00000200005ed3b2 : ret 0xef04
0x00000200001ffbfa : ret 0xef26
0x000002000010d13a : ret 0xef3e
0x0000020000609156 : ret 0xef65
0x000002000056ccc0 : ret 0xef72
0x000002000064e29c : ret 0xef75
0x00000200000d11aa : ret 0xef7f
0x00000200005ed5d0 : ret 0xefa1
0x00000200005d82ff : ret 0xefb9
0x00000200000f327a : ret 0xefc
0x00000200003977fa : ret 0xefc3
0x000002000053bc4a : ret 0xefc7
0x0000020000605ae5 : ret 0xefd1
0x00000200006546db : ret 0xefe8
0x00000200005a45a3 : ret 0xefeb
0x00000200005e0598 : ret 0xeff4
0x000002000011e3da : ret 0xeffa
0x0000020000090dc2 : ret 0xeffe
0x000002000007b7ec : ret 0xf
0x00000200001becd5 : ret 0xf00
0x00000200001025c7 : ret 0xf000
0x000002000020ff65 : ret 0xf006
0x000002000023b1ed : ret 0xf007
0x000002000023c16d : ret 0xf009
0x000002000012fa8d : ret 0xf00b
0x00000200002043d9 : ret 0xf00c
0x000002000020e561 : ret 0xf00d
0x000002000001315f : ret 0xf01
0x000002000024d991 : ret 0xf010
0x0000020000205055 : ret 0xf011
0x0000020000235c89 : ret 0xf014
0x0000020000213e51 : ret 0xf016
0x0000020000245ced : ret 0xf017
0x00000200001e03cd : ret 0xf018
0x0000020000233b4d : ret 0xf01a
0x0000020000205dd5 : ret 0xf01b
0x000002000024bf79 : ret 0xf01e
0x0000020000218921 : ret 0xf01f
0x0000020000006001 : ret 0xf02
0x0000020000083250 : ret 0xf023
0x000002000002be54 : ret 0xf024
0x0000020000371351 : ret 0xf025
0x0000020000003b30 : ret 0xf03
0x0000020000121a5a : ret 0xf03b
0x000002000000600d : ret 0xf04
0x000002000021856e : ret 0xf06
0x00000200000043fb : ret 0xf066
0x000002000003e175 : ret 0xf07
0x0000020000154690 : ret 0xf072
0x0000020000640cfb : ret 0xf07e
0x0000020000044149 : ret 0xf08
0x0000020000270527 : ret 0xf08b
0x00000200001f1fda : ret 0xf0a8
0x00000200001a31f1 : ret 0xf0c
0x0000020000054a21 : ret 0xf0c3
0x00000200003d9c9a : ret 0xf0c9
0x00000200000671e6 : ret 0xf0e9
0x0000020000006f64 : ret 0xf0f
0x000002000048950a : ret 0xf0ff
0x00000200000110db : ret 0xf10
0x00000200001cd92a : ret 0xf116
0x00000200001e8372 : ret 0xf119
0x00000200001933ba : ret 0xf11a
0x0000020000021312 : ret 0xf123
0x0000020000018ef4 : ret 0xf15
0x00000200001ecbce : ret 0xf159
0x00000200004fb226 : ret 0xf172
0x00000200000f8083 : ret 0xf174
0x0000020000439876 : ret 0xf175
0x000002000064ddd7 : ret 0xf176
0x00000200001b161d : ret 0xf18
0x00000200000dd1f6 : ret 0xf1e
0x000002000002bb8c : ret 0xf1f
0x00000200001d2d56 : ret 0xf1f7
0x0000020000025aad : ret 0xf20
0x00000200005eb143 : ret 0xf211
0x00000200001f8987 : ret 0xf223
0x00000200000f4259 : ret 0xf22a
0x0000020000577dec : ret 0xf23b
0x000002000006a18a : ret 0xf24
0x00000200001e0023 : ret 0xf255
0x0000020000430952 : ret 0xf266
0x00000200000d5f19 : ret 0xf27
0x00000200001b021c : ret 0xf272
0x00000200004d9467 : ret 0xf275
0x000002000056513a : ret 0xf278
0x00000200003622ce : ret 0xf27c
0x000002000015798a : ret 0xf28b
0x00000200000d5e7b : ret 0xf29
0x000002000017b08a : ret 0xf29d
0x000002000055b536 : ret 0xf2a3
0x00000200001799ba : ret 0xf2b4
0x00000200001eeb46 : ret 0xf2bf
0x0000020000017eb8 : ret 0xf2e8
0x00000200000820d2 : ret 0xf3
0x000002000010245a : ret 0xf30
0x00000200004cde65 : ret 0xf320
0x00000200004c2993 : ret 0xf322
0x000002000035d6fa : ret 0xf337
0x0000020000546565 : ret 0xf338
0x0000020000170f8a : ret 0xf33e
0x00000200005327aa : ret 0xf360
0x0000020000361cda : ret 0xf36d
0x00000200006d236f : ret 0xf375
0x000002000052078a : ret 0xf37a
0x00000200001c97d4 : ret 0xf37c
0x0000020000081f49 : ret 0xf38c
0x000002000017e05a : ret 0xf397
0x000002000035edc9 : ret 0xf398
0x00000200001f0a69 : ret 0xf3a5
0x000002000051906a : ret 0xf3b0
0x00000200002007dc : ret 0xf3e4
0x00000200004b8411 : ret 0xf3e5
0x000002000052ab87 : ret 0xf3e8
0x0000020000576d08 : ret 0xf3f
0x000002000047681f : ret 0xf3ff
0x0000020000013243 : ret 0xf40
0x00000200000bdbcf : ret 0xf41
0x0000020000199d26 : ret 0xf42
0x0000020000144c97 : ret 0xf43
0x00000200001844aa : ret 0xf434
0x00000200001d4972 : ret 0xf439
0x000002000014d8d7 : ret 0xf44
0x00000200004f8bda : ret 0xf443
0x000002000008f157 : ret 0xf44f
0x00000200000110f8 : ret 0xf45
0x000002000058f616 : ret 0xf46
0x00000200001eca8f : ret 0xf46b
0x00000200001446df : ret 0xf472
0x00000200000636b7 : ret 0xf48
0x000002000003906d : ret 0xf49
0x000002000015a78a : ret 0xf491
0x00000200001edca9 : ret 0xf492
0x0000020000567ab2 : ret 0xf4ba
0x00000200000a8698 : ret 0xf4c
0x000002000013f900 : ret 0xf4d
0x0000020000111c67 : ret 0xf4d5
0x000002000001e307 : ret 0xf4eb
0x00000200001d6784 : ret 0xf4f5
0x0000020000115d26 : ret 0xf4f8
0x00000200001e6dc3 : ret 0xf51a
0x00000200004d13d6 : ret 0xf51b
0x00000200001cb382 : ret 0xf51e
0x000002000010f080 : ret 0xf55
0x000002000009a062 : ret 0xf56
0x000002000008e5aa : ret 0xf564
0x00000200004dbb46 : ret 0xf572
0x00000200006d23bb : ret 0xf575
0x0000020000594fc1 : ret 0xf58
0x000002000014f7aa : ret 0xf595
0x000002000018147a : ret 0xf5b2
0x00000200005f2146 : ret 0xf5d9
0x00000200001053ba : ret 0xf5e2
0x00000200000bdbd6 : ret 0xf5eb
0x00000200003f7a3a : ret 0xf5f5
0x0000020000164aee : ret 0xf5f7
0x00000200001d48d0 : ret 0xf5fb
0x0000020000057acf : ret 0xf60
0x0000020000407052 : ret 0xf602
0x000002000049d74a : ret 0xf605
0x00000200000f8e71 : ret 0xf618
0x00000200004c5e14 : ret 0xf630
0x00000200000e0bd4 : ret 0xf633
0x0000020000162fd1 : ret 0xf640
0x00000200000b107c : ret 0xf641
0x00000200000b5ecb : ret 0xf647
0x00000200001ccca2 : ret 0xf654
0x0000020000043a2f : ret 0xf66
0x00000200001d9ee5 : ret 0xf673
0x00000200000d15ee : ret 0xf67c
0x000002000005bd42 : ret 0xf685
0x00000200004ffdaa : ret 0xf68a
0x000002000014b91a : ret 0xf6d1
0x00000200003fd9b4 : ret 0xf6e8
0x00000200003e3f84 : ret 0xf6ff
0x00000200004dce29 : ret 0xf7
0x0000020000154029 : ret 0xf702
0x00000200006c9b3d : ret 0xf70c
0x00000200001f0b8a : ret 0xf71c
0x000002000018cfcb : ret 0xf72
0x000002000018d01a : ret 0xf73
0x00000200001654e3 : ret 0xf74
0x00000200000eb68e : ret 0xf741
0x000002000001dbae : ret 0xf748
0x000002000005054f : ret 0xf749
0x00000200001525ef : ret 0xf75
0x00000200005f9a8a : ret 0xf754
0x0000020000185bc0 : ret 0xf76
0x0000020000564ffd : ret 0xf766
0x000002000035fed3 : ret 0xf774
0x000002000058e5f4 : ret 0xf799
0x0000020000032605 : ret 0xf7c
0x0000020000511e69 : ret 0xf7df
0x000002000061b45a : ret 0xf7f3
0x0000020000400164 : ret 0xf7f7
0x00000200004a134f : ret 0xf7ff
0x0000020000364ec6 : ret 0xf80b
0x0000020000011868 : ret 0xf824
0x00000200001df88a : ret 0xf82f
0x0000020000418a0f : ret 0xf838
0x00000200001ddc8a : ret 0xf84b
0x0000020000083d49 : ret 0xf854
0x0000020000018023 : ret 0xf874
0x0000020000055148 : ret 0xf880
0x0000020000113799 : ret 0xf883
0x00000200001ec28e : ret 0xf885
0x00000200001fced1 : ret 0xf88b
0x00000200001428ff : ret 0xf890
0x000002000057352a : ret 0xf8ba
0x00000200000e6d44 : ret 0xf8c1
0x000002000006696b : ret 0xf8d1
0x00000200005a2fc4 : ret 0xf903
0x00000200001e3b6e : ret 0xf90b
0x0000020000090f18 : ret 0xf958
0x00000200000274e5 : ret 0xf981
0x0000020000024cb4 : ret 0xf983
0x00000200001bce4a : ret 0xf98b
0x00000200004c230e : ret 0xf999
0x000002000006dca3 : ret 0xf9b2
0x00000200004c9c8a : ret 0xf9b9
0x000002000063270a : ret 0xf9c2
0x000002000008db49 : ret 0xf9d3
0x000002000054e0ca : ret 0xf9e0
0x00000200004a3a0a : ret 0xf9e3
0x00000200001c018a : ret 0xfa26
0x00000200001ef98a : ret 0xfa28
0x00000200000d3dda : ret 0xfa2f
0x00000200001d321a : ret 0xfa48
0x0000020000108956 : ret 0xfa4b
0x00000200000905bf : ret 0xfa65
0x000002000006cc3d : ret 0xfa74
0x0000020000065d4a : ret 0xfa75
0x00000200000138d9 : ret 0xfa8
0x00000200001bde0c : ret 0xfa80
0x0000020000399c26 : ret 0xfa81
0x0000020000427b2e : ret 0xfa83
0x0000020000182c25 : ret 0xfa8b
0x00000200003ae2ba : ret 0xfa99
0x00000200006426c5 : ret 0xfaba
0x00000200004745e0 : ret 0xfae8
0x0000020000133294 : ret 0xfafb
0x00000200007048a2 : ret 0xfb13
0x00000200001e7819 : ret 0xfb1e
0x000002000008e286 : ret 0xfb26
0x000002000070d8d5 : ret 0xfb27
0x00000200001c036e : ret 0xfb32
0x00000200001bef4a : ret 0xfb46
0x000002000069cec8 : ret 0xfb8
0x0000020000418383 : ret 0xfb81
0x00000200006d3b99 : ret 0xfb83
0x000002000051a36e : ret 0xfb8b
0x00000200007110e9 : ret 0xfba6
0x000002000011ef7a : ret 0xfbb4
0x000002000050d744 : ret 0xfbc9
0x00000200001280e8 : ret 0xfbcd
0x000002000013db60 : ret 0xfbe9
0x000002000048d7ea : ret 0xfbfd
0x0000020000049ba5 : ret 0xfc0
0x00000200001320fa : ret 0xfc01
0x00000200001fe436 : ret 0xfc18
0x000002000008e242 : ret 0xfc19
0x000002000001ad6d : ret 0xfc24
0x00000200001b36e9 : ret 0xfc25
0x00000200001fd0b6 : ret 0xfc2f
0x00000200000ead66 : ret 0xfc3
0x000002000017684e : ret 0xfc33
0x00000200000e30aa : ret 0xfc5c
0x0000020000573544 : ret 0xfcba
0x00000200004c9e1b : ret 0xfccc
0x00000200000f0f5a : ret 0xfcf5
0x00000200004909af : ret 0xfcff
0x000002000001f783 : ret 0xfd0
0x00000200004a05ad : ret 0xfd30
0x0000020000013b16 : ret 0xfd4
0x0000020000151c12 : ret 0xfda6
0x000002000010c4e6 : ret 0xfda7
0x00000200000dddfa : ret 0xfdcd
0x000002000050dbfd : ret 0xfde9
0x0000020000466c7c : ret 0xfdf6
0x0000020000664a2f : ret 0xfdff
0x00000200005197c3 : ret 0xfe00
0x00000200004682ea : ret 0xfe03
0x00000200005888b2 : ret 0xfe19
0x00000200006bea92 : ret 0xfe35
0x0000020000370d86 : ret 0xfe65
0x00000200000cad97 : ret 0xfe83
0x0000020000364aca : ret 0xfe89
0x000002000039cc6c : ret 0xfeaf
0x000002000053e179 : ret 0xfeb8
0x0000020000495f25 : ret 0xfef3
0x00000200006c649e : ret 0xfef7
0x000002000008c682 : ret 0xff
0x000002000004bad1 : ret 0xff0
0x00000200000eb71e : ret 0xff00
0x000002000040d6d6 : ret 0xff01
0x0000020000061988 : ret 0xff02
0x00000200001138af : ret 0xff04
0x00000200000f9350 : ret 0xff08
0x0000020000270655 : ret 0xff10
0x00000200000f6716 : ret 0xff21
0x000002000036d448 : ret 0xff24
0x0000020000024e26 : ret 0xff25
0x00000200003817d2 : ret 0xff3
0x00000200000a5de3 : ret 0xff33
0x000002000009090e : ret 0xff3f
0x00000200006f39d1 : ret 0xff40
0x00000200000a9097 : ret 0xff41
0x00000200001b3115 : ret 0xff42
0x00000200006f39e6 : ret 0xff46
0x000002000000e4e3 : ret 0xff48
0x000002000001c228 : ret 0xff49
0x0000020000371ec7 : ret 0xff5d
0x00000200007049ca : ret 0xff60
0x00000200006df1b8 : ret 0xff61
0x00000200000a7c58 : ret 0xff66
0x00000200005653ce : ret 0xff73
0x00000200006dbbf0 : ret 0xff7e
0x000002000003fc6d : ret 0xff80
0x0000020000061d13 : ret 0xff83
0x0000020000126a84 : ret 0xff85
0x000002000006dd8a : ret 0xff86
0x00000200003d643a : ret 0xff91
0x00000200006c7358 : ret 0xff99
0x000002000005840a : ret 0xff9c
0x000002000070ef53 : ret 0xff9e
0x0000020000706077 : ret 0xff9f
0x000002000064f31b : ret 0xffa1
0x0000020000667723 : ret 0xffa3
0x00000200004b2c42 : ret 0xffa4
0x000002000064ae9d : ret 0xffa5
0x00000200005b7da3 : ret 0xffa6
0x0000020000592ab7 : ret 0xffa8
0x00000200005b8807 : ret 0xffa9
0x000002000008047a : ret 0xffab
0x000002000008037a : ret 0xffac
0x000002000008027a : ret 0xffad
0x000002000008017a : ret 0xffae
0x000002000008007a : ret 0xffaf
0x000002000007ff7a : ret 0xffb0
0x000002000007fe7a : ret 0xffb1
0x000002000007fd7a : ret 0xffb2
0x000002000007fc7a : ret 0xffb3
0x000002000007fb7a : ret 0xffb4
0x000002000007fa7a : ret 0xffb5
0x000002000007f97a : ret 0xffb6
0x000002000007f87a : ret 0xffb7
0x000002000007f77a : ret 0xffb8
0x000002000004f485 : ret 0xffb9
0x000002000006d765 : ret 0xffba
0x000002000007f47a : ret 0xffbb
0x000002000007f37a : ret 0xffbc
0x000002000007f27a : ret 0xffbd
0x000002000007f17a : ret 0xffbe
0x000002000007f07a : ret 0xffbf
0x000002000007ef7a : ret 0xffc0
0x000002000007ee7a : ret 0xffc1
0x000002000007ed7a : ret 0xffc2
0x000002000007ec7a : ret 0xffc3
0x000002000007eb7a : ret 0xffc4
0x000002000007ea7a : ret 0xffc5
0x000002000007e97a : ret 0xffc6
0x000002000007e87a : ret 0xffc7
0x000002000007e77a : ret 0xffc8
0x000002000007e67a : ret 0xffc9
0x000002000007e57a : ret 0xffca
0x000002000007e47a : ret 0xffcb
0x000002000007e37a : ret 0xffcc
0x000002000007e27a : ret 0xffcd
0x000002000007e17a : ret 0xffce
0x000002000007e07a : ret 0xffcf
0x000002000007df7a : ret 0xffd0
0x000002000007de7a : ret 0xffd1
0x000002000007dd7a : ret 0xffd2
0x000002000007dc7a : ret 0xffd3
0x000002000007db7a : ret 0xffd4
0x000002000007da7a : ret 0xffd5
0x000002000007d97a : ret 0xffd6
0x000002000007d87a : ret 0xffd7
0x000002000007d77a : ret 0xffd8
0x000002000007d67a : ret 0xffd9
0x000002000007d57a : ret 0xffda
0x000002000007d47a : ret 0xffdb
0x000002000007d37a : ret 0xffdc
0x000002000007d27a : ret 0xffdd
0x000002000007d17a : ret 0xffde
0x000002000007d07a : ret 0xffdf
0x000002000007cf7a : ret 0xffe0
0x00000200006083d4 : ret 0xffe1
0x000002000038e913 : ret 0xffe2
0x00000200001f7dfd : ret 0xffe3
0x000002000048b5dd : ret 0xffe4
0x00000200001c51ad : ret 0xffe5
0x00000200001e2f4d : ret 0xffe6
0x00000200001faf7e : ret 0xffe7
0x00000200001db500 : ret 0xffe8
0x00000200000c066c : ret 0xffe9
0x00000200001d00aa : ret 0xffea
0x00000200001ecfa6 : ret 0xffeb
0x0000020000041dd5 : ret 0xffec
0x000002000015d097 : ret 0xffed
0x00000200001e8d05 : ret 0xffee
0x000002000014255c : ret 0xffef
0x0000020000020b27 : ret 0xfff
0x0000020000046bf6 : ret 0xfff0
0x0000020000123922 : ret 0xfff1
0x0000020000178b8d : ret 0xfff2
0x0000020000136bd7 : ret 0xfff3
0x000002000012370a : ret 0xfff4
0x00000200000c68b1 : ret 0xfff5
0x0000020000011b51 : ret 0xfff6
0x00000200000724a0 : ret 0xfff7
0x00000200000c64ab : ret 0xfff8
0x00000200000b3a44 : ret 0xfff9
0x00000200000f8b58 : ret 0xfffa
0x00000200000bf825 : ret 0xfffb
0x00000200000ce081 : ret 0xfffc
0x0000020000028cd2 : ret 0xfffd
0x000002000000b3d6 : ret 0xfffe
0x0000020000053dfa : ret 0xffff
0x000002000000418d : ret 1
0x000002000004ed35 : ret 2
0x000002000003259b : ret 3
0x000002000001f3ef : ret 4
0x0000020000228399 : ret 5
0x000002000004a525 : ret 6
0x00000200000312ad : ret 7
0x000002000001129e : ret 8
0x000002000004317a : ret 9
0x000002000006ccad : retf -0x2218 ; or qword ptr [rax], r8 ; jmp 0x2000006ccac
0x0000020000066923 : retf -0x2eb8 ; jmp 0x20002c8ec97
0x00000200000fee8a : retf -0x3eb8 ; call 0x1ffc21b3a9f
0x0000020000138447 : retf -0x3eb8 ; call 0x1ffc21ed05c
0x000002000006fa2d : retf -0x3eb8 ; call 0x1ffc22a423e
0x0000020000177399 : retf -0x3eb8 ; call 0x1ffc23abcaa
0x00000200001d2d1e : retf -0x3eb8 ; call 0x1ffc240752f
0x00000200001f1ef3 : retf -0x3eb8 ; call 0x1ffc2426804
0x00000200001f211f : retf -0x3eb8 ; call 0x1ffc2426a30
0x00000200004b0134 : retf -0x3eb8 ; call 0x1ffc26e4945
0x00000200004f0c5d : retf -0x3eb8 ; call 0x1ffc272546e
0x000002000070bed6 : retf -0x3eb8 ; call 0x1ffc29406e7
0x000002000019a2d3 : retf -0x3eb8 ; jmp 0x1ffc2a4efe7
0x000002000013c421 : retf -0x3eb8 ; jmp 0x1ffc3d54f68
0x000002000057801d : retf -0x3eb8 ; jmp 0x1ffca5ac86d
0x000002000003f993 : retf -0x3eb8 ; jmp 0x20048c684c1
0x00000200000dd8e6 : retf -0x76b8 ; and al, 0x20 ; call r11
0x000002000062c9e1 : retf -0x7af1 ; jmp qword ptr [rsi]
0x0000020000153597 : retf 0x2341 ; adc byte ptr [rax - 0x3f], cl ; call 0x1ffffd7b6b7
0x0000020000184ada : retf 0x2341 ; rol byte ptr [rcx - 0x3f], 1 ; call 0x1ffffdacbfa
0x00000200005fe017 : retf 0x33e8 ; mov bh, dh ; call qword ptr [rax - 0x18c33d17]
0x000002000007b5c5 : retf 0x41e8 ; call qword ptr [rbx]
0x00000200004de488 : retf 0xb75 ; mov ebx, edi ; call 0x2000014a78f
0x000002000014ec19 : retf ; add eax, 2 ; mov dword ptr [rdi], eax ; call 0x2000014ae6c
0x00000200006f39ce : retf ; add rdx, 0x40 ; call rax
0x0000020000526001 : retf ; add rsp, 0x20 ; pop rbx ; jmp 0x2000014c5ad
0x0000020000645fee : retf ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200005cb8dc : retf ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200000d4f80 : retf ; and byte ptr [rbx + 0x434], 0xf7 ; jmp 0x200000d4f55
0x000002000048f4d1 : retf ; and esp, 0xffffffff ; call 0x200000b9b07
0x0000020000131c2e : retf ; call 0x20000018f70
0x0000020000133433 : retf ; call 0x2000002700f
0x00000200004eb1c5 : retf ; call 0x2000002db78
0x000002000070da0a : retf ; call 0x20000030a78
0x0000020000601389 : retf ; call 0x2000004d653
0x0000020000421973 : retf ; call 0x2000004d654
0x00000200001e2f4a : retf ; call 0x2000004f213
0x0000020000143a2b : retf ; call 0x2000004fd23
0x00000200004275cd : retf ; call 0x20000053b24
0x00000200004789c2 : retf ; call 0x20000054c13
0x0000020000428628 : retf ; call 0x20000056fc0
0x00000200001db4fd : retf ; call 0x20000067803
0x0000020000446597 : retf ; call 0x20000072d74
0x00000200003e6ba9 : retf ; call 0x20000072e43
0x00000200005aaf5d : retf ; call 0x200000771c3
0x0000020000449a89 : retf ; call 0x200000771c4
0x0000020000526b50 : retf ; call 0x200000771c8
0x00000200001f7683 : retf ; call 0x200000a3953
0x00000200001de7f2 : retf ; call 0x200000b6727
0x00000200005ff5b4 : retf ; call 0x200000b6729
0x000002000004a522 : retf ; call 0x200000b67a3
0x0000020000498c59 : retf ; call 0x200000b8e84
0x00000200003e156a : retf ; call 0x200000bd7b3
0x0000020000567c13 : retf ; call 0x200000bf278
0x00000200006c085c : retf ; call 0x200000c85e8
0x000002000057fad4 : retf ; call 0x200000df878
0x00000200004e2cd4 : retf ; call 0x20000104d34
0x00000200004f1b03 : retf ; call 0x200001183bc
0x0000020000183ad1 : retf ; call 0x200001277d8
0x0000020000525e0a : retf ; call 0x2000014bd14
0x00000200005205d5 : retf ; call 0x200001500c4
0x0000020000186621 : retf ; call 0x20000162853
0x00000200001ef0ea : retf ; call 0x20000162858
0x00000200001c84b5 : retf ; call 0x20000174737
0x000002000005b8bf : retf ; call 0x20000177ae3
0x0000020000590346 : retf ; call 0x2000019c573
0x0000020000026dfc : retf ; call 0x200001a3057
0x00000200001ab035 : retf ; call 0x200001a7293
0x00000200001af16a : retf ; call 0x200001ab3a3
0x00000200001af1be : retf ; call 0x200001ab433
0x0000020000512dd8 : retf ; call 0x2000026f013
0x0000020000642274 : retf ; call 0x2000026f014
0x00000200005465f3 : retf ; call 0x2000026f017
0x00000200006ca840 : retf ; call 0x2000026f019
0x0000020000372880 : retf ; call 0x2000036eac7
0x00000200003cc4b5 : retf ; call 0x20000378753
0x000002000037feda : retf ; call 0x2000038195b
0x000002000038ccb0 : retf ; call 0x2000038caa0
0x00000200003a0fcb : retf ; call 0x200003a1008
0x00000200005d8f68 : retf ; call 0x200003d5173
0x00000200005dfe66 : retf ; call 0x200003f82a8
0x0000020000587578 : retf ; call 0x20000423837
0x000002000047fdc1 : retf ; call 0x2000043c043
0x000002000055b0a5 : retf ; call 0x20000468878
0x0000020000489348 : retf ; call 0x200004855d7
0x000002000051af9e : retf ; call 0x200004b71e7
0x00000200004018fa : retf ; call 0x200004b71eb
0x0000020000517c3f : retf ; call 0x20000517584
0x0000020000401eea : retf ; call 0x20000520070
0x0000020000584e64 : retf ; call 0x200005810f3
0x0000020000585009 : retf ; call 0x20000581293
0x00000200001c2557 : retf ; call 0x200005bbab8
0x000002000064d38c : retf ; call 0x2000064d8b8
0x00000200006e6e81 : retf ; call 0x200007030d3
0x000002000015f8bf : retf ; call r10
0x00000200003bbd97 : retf ; call r11
0x00000200003e797c : retf ; call r12
0x0000020000040022 : retf ; call r14
0x00000200003ab7a7 : retf ; call r15
0x000002000035da99 : retf ; call r8
0x0000020000026b6d : retf ; call rax
0x00000200001aefc9 : retf ; call rbx
0x0000020000178114 : retf ; call rdi
0x00000200003bcb5a : retf ; call rdx
0x00000200003bd662 : retf ; call rsi
0x000002000048ad35 : retf ; in al, -1 ; call 0x200000b9b06
0x000002000048ad1a : retf ; in al, -1 ; mov dl, r12b ; call 0x200000b90e9
0x000002000041d40a : retf ; jb 0x2000041d3ff ; mov eax, r9d ; sub eax, r10d ; jmp 0x2000041d420
0x000002000005a9cd : retf ; jmp 0x2000005a994
0x0000020000068e8d : retf ; jmp rcx
0x00000200001c51a6 : retf ; lea edx, dword ptr [r9 + 7] ; call 0x200000213c7
0x000002000051ea53 : retf ; lea r8d, dword ptr [r9 + 6] ; call 0x2000014b868
0x000002000044246c : retf ; loop 0x20000442477 ; jmp 0x200004423d5
0x0000020000039dfe : retf ; mov dword ptr [rbx + 0xd0], edi ; jmp 0x20000039dd2
0x00000200005d53a7 : retf ; mov dword ptr [rdx + 4], eax ; call 0x200004815d2
0x000002000056cf57 : retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000047204e : retf ; mov dword ptr [rsp + 0x20], r11d ; call 0x2000046e318
0x0000020000423c06 : retf ; mov edi, eax ; call 0x2000004fa8a
0x00000200003d077e : retf ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005c7f1c : retf ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200005c7e12 : retf ; mov qword ptr [rsp + 0x20], rax ; call rdi
0x0000020000013bdb : retf ; mov r8, qword ptr [rip + 0x3438d5] ; call r8
0x0000020000013da6 : retf ; mov rax, qword ptr [rip + 0x34370a] ; call rax
0x0000020000013d33 : retf ; mov rax, qword ptr [rip + 0x34377d] ; call rax
0x0000020000013c41 : retf ; mov rax, qword ptr [rip + 0x34386f] ; call rax
0x000002000038fff4 : retf ; mov rax, qword ptr [rip + 0xac994] ; call rax
0x00000200004bb20a : retf ; mov rax, qword ptr [rip - 0x223eea] ; call rax
0x000002000048eded : retf ; mov rax, qword ptr [rsp + 0xa0] ; call qword ptr [rax]
0x00000200004890a6 : retf ; mov rbx, qword ptr [rbx] ; mov rdx, rdi ; call rsi
0x000002000064c4aa : retf ; mov rcx, r14 ; call rax
0x0000020000656f54 : retf ; mov rdi, rax ; call qword ptr [rbx]
0x00000200004118b4 : retf ; mov rdx, rbx ; call 0x2000051db66
0x0000020000584ff5 : retf ; mov rdx, rsi ; call 0x20000581296
0x00000200005a7a1e : retf ; movzx eax, r8w ; cmp eax, 0x50 ; jmp 0x200005a79f3
0x0000020000065273 : retf ; xor r12d, r12d ; call r15
0x0000020000584e4d : retf ; xor r8d, r8d ; mov rdx, rsi ; call 0x200005810f9
0x00000200004481ae : rol al, 0xe0 ; add al, 0x32 ; ret
0x0000020000060e93 : rol al, 0xe0 ; add esi, dword ptr [rdx] ; add r8b, byte ptr [r9 + 0x22] ; ret
0x0000020000136341 : rol bh, 1 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000000749d : rol bh, 1 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200003a576c : rol bh, 5 ; loope 0x200003a57db ; jmp qword ptr [rdi]
0x00000200003a583e : rol bh, 5 ; pcmpgtb mm6, mm2 ; call qword ptr [rdx]
0x00000200003a55c9 : rol bh, 5 ; test byte ptr [rsi - 0xe], ah ; jmp qword ptr [rsi]
0x00000200000a9780 : rol bl, 0x33 ; rol byte ptr [rcx - 0x77], 2 ; ret
0x00000200000e9866 : rol bl, 0x41 ; and eax, 0xffffffe7 ; mov eax, r8d ; ret
0x00000200000a97c4 : rol bl, 0x41 ; mov eax, ecx ; ret
0x0000020000157d0d : rol bl, 0x45 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x0000020000656632 : rol bl, 0x48 ; add eax, -8 ; ret
0x000002000013c1ed : rol bl, 0x48 ; inc edx ; jmp 0x2000013c1c3
0x00000200000165f6 : rol bl, 0x48 ; jmp rcx
0x00000200003c06b5 : rol bl, 0x48 ; lea eax, dword ptr [rcx + 0x680] ; ret
0x000002000056ef3d : rol bl, 0x48 ; lea eax, dword ptr [rcx - 0x10] ; ret
0x0000020000112b86 : rol bl, 0x48 ; lea eax, dword ptr [rip - 0x14b5f] ; ret
0x000002000010a9a8 : rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000005642e : rol bl, 0x48 ; mov eax, dword ptr [rcx + 0x3d0] ; ret
0x00000200001474d3 : rol bl, 0x48 ; mov eax, ecx ; ret
0x00000200001630fa : rol bl, 0x48 ; mov eax, edx ; ret
0x000002000007352c : rol bl, 0x48 ; sbb eax, eax ; sbb rax, -1 ; ret
0x00000200005c1956 : rol bl, 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000026e6c : rol bl, 0x49 ; mov eax, eax ; ret
0x000002000000e263 : rol bl, 0x49 ; mov eax, ecx ; ret
0x000002000056ccc7 : rol bl, 0x4c ; mov dword ptr [rcx], ecx ; ret
0x0000020000066270 : rol bl, 0x4c ; mov dword ptr [rdx + 8], eax ; ret
0x000002000058deca : rol bl, 0x66 ; mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x00000200000a9d61 : rol bl, 0x83 ; enter -0x3c01, -0x70 ; mov al, 1 ; ret
0x0000020000018020 : rol bl, 0x85 ; ret 0xf874
0x000002000002dc71 : rol bl, 0x89 ; add bh, byte ptr [rax - 0x3fffff6b] ; ret
0x00000200000bdbd3 : rol bl, 0x8b ; ret 0xf5eb
0x000002000036b411 : rol bl, 0x90 ; mov eax, 0xc00000bb ; ret
0x0000020000545ab4 : rol bl, 0x90 ; nop ; mov eax, 0xc0000002 ; ret
0x0000020000545abc : rol bl, 0x90 ; nop ; mov eax, 0xc0000148 ; ret
0x00000200000bdd1f : rol bl, 0xa8 ; jne 0x200000bdd0a ; xor al, al ; ret
0x00000200000bdd18 : rol bl, 0xa8 ; jne 0x200000bdd11 ; xor al, al ; ret
0x000002000037bd3f : rol bl, 0xb0 ; add ebx, eax ; xor al, al ; ret
0x00000200004d6266 : rol bl, 0xb8 ; adc byte ptr [rdx], al ; add al, al ; ret
0x00000200006e7cc7 : rol bl, 0xb8 ; adc dword ptr [rax], eax ; add al, al ; ret
0x00000200003aa309 : rol bl, 0xb8 ; add al, 0 ; add byte ptr [rax], al ; ret
0x00000200005660a7 : rol bl, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000679bc : rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000027e7a : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000038ec60 : rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x0000020000634a92 : rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x0000020000383126 : rol bl, 0xb8 ; jns 0x20000383132 ; add al, al ; ret
0x0000020000391bb0 : rol bl, 0xb8 ; jns 0x20000391bbc ; add al, al ; ret
0x00000200003b012e : rol bl, 0xb8 ; jns 0x200003b013a ; add al, al ; ret
0x00000200003fda4f : rol bl, 0xb8 ; jns 0x200003fda5b ; add al, al ; ret
0x00000200000e9840 : rol bl, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000141d10 : rol bl, 0xb8 ; sbb byte ptr [rdi], al ; add al, al ; ret
0x00000200000272b5 : rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x00000200000272af : rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000014ae53 : rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x000002000054735c : rol bl, 0xe9 ; popfq ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0xe904
0x00000200006bfe9a : rol bl, 0xff ; ret 0x3b41
0x000002000055380b : rol byte ptr [r13 + 0x33], 1 ; shr al, 0x6b ; ret
0x0000020000476b34 : rol byte ptr [r13 + rcx*4 + 0x42], 0x20 ; call 0x200000a3959
0x0000020000583c82 : rol byte ptr [r13 + rcx*4 + 0x42], 1 ; sub al, ch ; ret
0x0000020000377dd7 : rol byte ptr [r13 + rcx*4 + 0x46], 1 ; ret 0x894c
0x00000200005a6a18 : rol byte ptr [r13 - 0x75], 1 ; ret 0x1ba
0x00000200004e7772 : rol byte ptr [r9 - 0x75], 1 ; ret
0x000002000010ae3d : rol byte ptr [rax + 0x42], cl ; str word ptr [rcx - 0x75] ; ret 0xf749
0x000002000065430f : rol byte ptr [rax + 0x48], 0x3b ; ret 0xe77c
0x000002000065390b : rol byte ptr [rax + 0x48], 0x3b ; ret 0xeb7c
0x0000020000461de3 : rol byte ptr [rax + 0x48], 3 ; ret 0x3b49
0x000002000038dd77 : rol byte ptr [rax + 0x49], 0x3b ; ret
0x00000200001446db : rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x00000200000c795c : rol byte ptr [rax + 0x75], 0xd0 ; sfence ; ret
0x0000020000583b6d : rol byte ptr [rax + 0x875ff39], 0x89 ; add bh, bh ; ret
0x00000200003981f3 : rol byte ptr [rax + rax], 0 ; ret
0x00000200000fa8c1 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200001b1f7a : rol byte ptr [rax + rcx*2], 0x3b ; ret 0xec72
0x000002000013a6df : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4411
0x0000020000184181 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4808
0x00000200001841c7 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x8308
0x0000020000112c8c : rol byte ptr [rax + rcx*2], 0x89 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4408
0x000002000019d33d : rol byte ptr [rax + rcx*2], 3 ; ret 0x3b49
0x0000020000118389 : rol byte ptr [rax + rcx*4 + 0x1b], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200005bc880 : rol byte ptr [rax + rcx*4 + 0x1f], 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x000002000015409b : rol byte ptr [rax - 0x188affc8], 0x48 ; mov eax, ecx ; ret
0x0000020000172be9 : rol byte ptr [rax - 0x6bf033c7], 0xc0 ; ret
0x00000200004965a9 : rol byte ptr [rax - 0x76], 0xcd ; mov qword ptr [rsp + 0x20], rdi ; call rsi
0x00000200000b8f71 : rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x00000200003c3a27 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f3430 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret
0x0000020000191804 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xa8
0x00000200006222ee : rol byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000471e81 : rol byte ptr [rax], 0 ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000598201 : rol byte ptr [rax], 0 ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000005328c : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; ret
0x00000200003ab295 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000399af8 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x7ebeefb8], cl ; ret 0x1000
0x00000200006e79bb : rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000010503c : rol byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000005793d : rol byte ptr [rax], 0 ; add cl, ch ; ret 0xfffe
0x0000020000125fb2 : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x00000200000272a2 : rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x00000200001b8d0b : rol byte ptr [rax], 0x46 ; ret
0x0000020000039e01 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp 0x20000039dcf
0x000002000052c7cd : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000020b6d : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000007c556 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200004a0dde : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000552ae0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000464f8a : rol byte ptr [rax], 8 ; add dword ptr [rax], eax ; idiv edi ; push rbx ; ret
0x000002000002c213 : rol byte ptr [rbp + 0x23], 1 ; ret
0x000002000007089f : rol byte ptr [rbp + 0x23], 1 ; ret 0x840f
0x00000200001e087f : rol byte ptr [rbp + 0x23], 1 ; ret 0xc123
0x00000200000195d8 : rol byte ptr [rbp + 0x2b], 1 ; ret
0x0000020000173766 : rol byte ptr [rbp + 0x2b], 1 ; ret 0x61e8
0x00000200001c0062 : rol byte ptr [rbp + 0x2b], 1 ; ret 0x65e8
0x00000200001bffba : rol byte ptr [rbp + 0x2b], 1 ; ret 0xde8
0x000002000055380c : rol byte ptr [rbp + 0x33], 1 ; shr al, 0x6b ; ret
0x000002000015a2e4 : rol byte ptr [rbp + 0x3b], 0xc1 ; jl 0x2000015a2dc ; xor eax, eax ; ret
0x0000020000163a0e : rol byte ptr [rbp + 0x3b], 0xd8 ; seta al ; ret
0x000002000013203d : rol byte ptr [rbp + 0x3b], cl ; ret 0x6d76
0x0000020000057717 : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8388
0x00000200004eb7f0 : rol byte ptr [rbp + 0xf], 0x44 ; ret 0x341
0x00000200000aaa3f : rol byte ptr [rbp + 0xf], 0x45 ; ret 0x8341
0x00000200004b0c11 : rol byte ptr [rbp + 0xf], 0x45 ; ret 0xbb41
0x0000020000174323 : rol byte ptr [rbp + 0xf], 0xb6 ; ret
0x000002000013455f : rol byte ptr [rbp + 0xf], 1 ; mov dh, 0x88 ; ret
0x0000020000362def : rol byte ptr [rbp + 0xf], cl ; rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x0000020000476b35 : rol byte ptr [rbp + rcx*4 + 0x42], 0x20 ; call 0x200000a3958
0x000002000052d783 : rol byte ptr [rbp + rcx*4 + 0x42], 1 ; sub al, ch ; ret
0x0000020000377dd8 : rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x894c
0x00000200005919e2 : rol byte ptr [rbp + rcx*4 + 0x4f], cl ; add dword ptr [rbp + rcx*4 + 5], ecx ; ret 0xec03
0x000002000047b8d7 : rol byte ptr [rbp - 0x74238a40], cl ; ret
0x00000200004057bd : rol byte ptr [rbp - 0x75], 0x44 ; ret 0x4908
0x00000200005a6a19 : rol byte ptr [rbp - 0x75], 1 ; ret 0x1ba
0x00000200000ffba0 : rol byte ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200006161eb : rol byte ptr [rbp - 0x75], cl ; ret
0x00000200000ee1d5 : rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x00000200004e13f9 : rol byte ptr [rbp - 0x75], cl ; ret 0x45c7
0x000002000041a543 : rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x0000020000372716 : rol byte ptr [rbp - 0x76], 0xcc ; lea ecx, dword ptr [r8 + 2] ; call r10
0x000002000016964e : rol byte ptr [rbp - 0x76], cl ; ret
0x00000200001dc6c0 : rol byte ptr [rbp - 0x77], 0x4c ; ret
0x00000200001dc55a : rol byte ptr [rbp - 0x77], 0x5c ; ret 0xe908
0x000002000015b225 : rol byte ptr [rbp - 0x77], 8 ; ret
0x0000020000516dd2 : rol byte ptr [rbp - 0x77fc8740], 1 ; pop rdi ; sub al, 0x8b ; ret 0x8b48
0x0000020000132afa : rol byte ptr [rbp - 0x7b], 1 ; sal byte ptr [rbp + 2], 0xf3 ; ret
0x00000200004c2d40 : rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x00000200005cc9f3 : rol byte ptr [rbp - 0xcf8b40], cl ; ret
0x00000200003f79d7 : rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x00000200000aeb6a : rol byte ptr [rbx + 0x5890fe0], 0xc4 ; ret
0x000002000057b972 : rol byte ptr [rbx + rax*4], 0xfa ; adc byte ptr [rdx - 0x10], dh ; xor al, al ; ret
0x000002000041daa9 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003b1baa : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200004c57a4 : rol byte ptr [rbx + rcx*4 - 0x20], 0x8b ; ret 0xc148
0x00000200001b49b0 : rol byte ptr [rbx + rcx*4 - 0x3b], 0xf ; xchg eax, esp ; ret
0x000002000054fe07 : rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x00000200003babc5 : rol byte ptr [rbx + rdi - 0x28], 0x73 ; cmp al, byte ptr [rcx + 0x2b] ; ret
0x00000200006f0b0c : rol byte ptr [rbx + rdi - 0x3e], 0x72 ; ret
0x000002000019e492 : rol byte ptr [rbx - 0x178ddf07], 0x49 ; mov eax, eax ; ret
0x00000200004680bd : rol byte ptr [rbx - 0x20], 1 ; jmp 0x2000046808b
0x000002000014ac04 : rol byte ptr [rbx - 0x3700fd20], 0xc3 ; xor eax, eax ; ret
0x0000020000187b33 : rol byte ptr [rbx - 0x3df4fe20], cl ; ret
0x00000200001f01ba : rol byte ptr [rbx - 0x3f7cf520], 0xa ; ret
0x00000200001c0aac : rol byte ptr [rbx - 0x61f0f808], cl ; ret 0xc283
0x000002000010d133 : rol byte ptr [rbx - 0x72b30031], 0xd ; ret 0xef3e
0x000002000004a3f6 : rol byte ptr [rbx - 0x74b6f020], 4 ; ret
0x0000020000127229 : rol byte ptr [rbx - 0x75], 0x14 ; ret 0x8b4b
0x000002000003cd6d : rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x0000020000054c60 : rol byte ptr [rbx - 0x75], 0x8c ; ret 0x88
0x000002000019e68c : rol byte ptr [rbx - 0x76b6f01f], 1 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000458d9 : rol byte ptr [rbx - 0x7bf0fe01], 1 ; ret 1
0x00000200005a95b8 : rol byte ptr [rbx - 0x7cf0ef01], cl ; ret
0x0000020000466d42 : rol byte ptr [rbx], 0x83 ; loopne 0x20000466d49 ; add eax, edx ; ret
0x0000020000466d42 : rol byte ptr [rbx], 0x83 ; loopne 0x20000466d4a ; add eax, edx ; ret
0x00000200006d5f49 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000042b80a : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; call rax
0x000002000069b260 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069b271
0x000002000069bf8c : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069bf9d
0x000002000069c55a : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c56b
0x000002000069c698 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c6a9
0x000002000069cccd : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069ccde
0x000002000069d0b1 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069d0c2
0x000002000069dfa9 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069dfba
0x000002000069e48f : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e4a0
0x000002000069e831 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e842
0x000002000069f01b : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069f02c
0x000002000069f965 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069f976
0x000002000069fe26 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069fe37
0x00000200006d1d1f : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1d30
0x00000200006d203c : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d204d
0x00000200006d24e7 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d24f8
0x00000200006d298c : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d299d
0x00000200006d6a66 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6a77
0x00000200006d6d6f : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d6d80
0x00000200006d768b : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d769c
0x00000200006d8bbe : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8bcf
0x00000200006d8ed8 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8ee9
0x00000200006da052 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006da063
0x00000200006db5e1 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db5f2
0x00000200006dcb64 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dcb75
0x00000200006dce53 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dce64
0x00000200006de149 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de15a
0x00000200006de473 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de484
0x00000200006dea54 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dea65
0x00000200006df4a3 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df4b4
0x00000200006df94e : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df95f
0x00000200006dfe7f : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dfe90
0x00000200006e2730 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e2741
0x00000200006e2c09 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e2c1c
0x00000200006e31ee : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e31ff
0x00000200006e37bb : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e37cc
0x00000200006e3c71 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e3c82
0x00000200006e429d : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e42ae
0x00000200006e476f : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e4780
0x00000200006e4c29 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e4c3a
0x0000020000056433 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; ret
0x000002000041f488 : rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; xor r8d, r8d ; call rax
0x00000200003d30ba : rol byte ptr [rbx], 1 ; ret 0xe8c1
0x0000020000395aba : rol byte ptr [rbx], 3 ; add cl, byte ptr [rax - 0x7d] ; ret 0xff04
0x000002000026f5df : rol byte ptr [rbx], cl ; ret 0x3b44
0x0000020000480d87 : rol byte ptr [rcx + 0x23], 0xc0 ; or eax, 5 ; ret
0x00000200001af4e3 : rol byte ptr [rcx + 0x23], 1 ; adc al, 0xb ; ret 0x8941
0x000002000019a47c : rol byte ptr [rcx + 0x23], 1 ; add al, 0xb ; ret 0x8941
0x0000020000199bc6 : rol byte ptr [rcx + 0x23], 1 ; add al, 0xb ; ret 0x8b41
0x00000200000c595f : rol byte ptr [rcx + 0x23], 1 ; ret
0x000002000019a443 : rol byte ptr [rcx + 0x23], cl ; adc dword ptr [rcx + 0x2b], eax ; ret 0x2341
0x00000200001a89f2 : rol byte ptr [rcx + 0x39], 0x54 ; ret 0x7310
0x00000200001ab404 : rol byte ptr [rcx + 0x3b], 0x54 ; ret
0x00000200001a85df : rol byte ptr [rcx + 0x3b], 0x54 ; ret 0x7210
0x0000020000020934 : rol byte ptr [rcx + 0x3b], 1 ; ret
0x000002000026f85e : rol byte ptr [rcx + 0x3b], 1 ; ret 0x840f
0x000002000015bcb1 : rol byte ptr [rcx + 0x3b], cl ; ret
0x00000200000b18ae : rol byte ptr [rcx + 0x3b], cl ; ret 0x470f
0x0000020000134b22 : rol byte ptr [rcx + 0x400e2], 1 ; add byte ptr [rbx], dh ; ret 0x8348
0x00000200003d278f : rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x00000200003db30a : rol byte ptr [rcx + 0x5f], 0x41 ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000003e999 : rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x0000020000016839 : rol byte ptr [rcx + 0xf], 0x44 ; ret
0x000002000042d0a1 : rol byte ptr [rcx + 0xf], 0x44 ; ret 0x4ae9
0x000002000002095f : rol byte ptr [rcx + 0xf], 0x44 ; ret 0xc13b
0x000002000001d132 : rol byte ptr [rcx + 0xf], 0x45 ; ret 0x4489
0x000002000042536d : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x3d83
0x000002000017432d : rol byte ptr [rcx + 0xf], 0xb6 ; ret
0x00000200001d205d : rol byte ptr [rcx + 0xf], 0xb6 ; ror byte ptr [rax - 0x75], 0xc ; ret 0x8548
0x000002000037de3b : rol byte ptr [rcx + 0xf], 0xb6 ; ror dword ptr [rdi], 0x45 ; ret 0xf983
0x0000020000174334 : rol byte ptr [rcx + 0xf], 0xb7 ; ret 0x3944
0x00000200001e5912 : rol byte ptr [rcx + 0xf], 0xb7 ; ret 0xc30c
0x0000020000190be6 : rol byte ptr [rcx + 0xf], 1 ; ret 0x8b44
0x0000020000601b1e : rol byte ptr [rcx + 0xf], 1 ; ret 0xcb03
0x0000020000108387 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x0000020000060bcf : rol byte ptr [rcx + rax*2], 0x83 ; ret 0x4920
0x00000200000da051 : rol byte ptr [rcx + rax*2], 0x8b ; ret 0xf983
0x000002000010000f : rol byte ptr [rcx + rcx*2], 0x2b ; ret
0x0000020000705af8 : rol byte ptr [rcx + rcx*2], 0x83 ; ret 0x6602
0x000002000000e4df : rol byte ptr [rcx + rcx*2], 0xff ; ret 0xff48
0x00000200006c915d : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000035fc2b : rol byte ptr [rcx + rdi + 0x40], 0x24 ; je 0x2000035fc3e ; mov al, 1 ; ret
0x0000020000545bc1 : rol byte ptr [rcx - 0x3f], 0xe8 ; add al, cl ; call 0x20025168dd7
0x0000020000184add : rol byte ptr [rcx - 0x3f], 1 ; call 0x1ffffdacbf7
0x00000200000c9a0d : rol byte ptr [rcx - 0x40], 0xe8 ; add eax, dword ptr [rbp + 0x22] ; ret
0x000002000040243e : rol byte ptr [rcx - 0x43], 0x22 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200005fcdaa : rol byte ptr [rcx - 0x44], 0x9a ; add byte ptr [rax], al ; shr cl, 0xdf ; ret
0x0000020000024fbf : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006a0e21 : rol byte ptr [rcx - 0x46], 2 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x473
0x0000020000363f67 : rol byte ptr [rcx - 0x47], cl ; cli ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret
0x00000200005e14c7 : rol byte ptr [rcx - 0x47], cl ; ret
0x00000200005e1419 : rol byte ptr [rcx - 0x47], cl ; ret 0xf
0x0000020000640281 : rol byte ptr [rcx - 0x48], cl ; or eax, dword ptr [rax] ; add al, ch ; ret
0x00000200000da083 : rol byte ptr [rcx - 0x4e], cl ; add dword ptr [rax - 0x77], ecx ; adc byte ptr [rcx - 0x76], al ; ret 0x41c3
0x0000020000373164 : rol byte ptr [rcx - 0x4f], 1 ; lea ecx, dword ptr [r8 + 0xa] ; call r11
0x00000200001d1885 : rol byte ptr [rcx - 0x4f], 1 ; lea ecx, dword ptr [r8 + 3] ; call r11
0x00000200001755f1 : rol byte ptr [rcx - 0x4f], 1 ; lea ecx, dword ptr [r8 + 3] ; call rax
0x00000200001d18d7 : rol byte ptr [rcx - 0x4f], 1 ; lea ecx, dword ptr [r8 + 4] ; call r11
0x0000020000372f46 : rol byte ptr [rcx - 0x4f], 1 ; lea ecx, dword ptr [r8 + 8] ; call rax
0x0000020000144a28 : rol byte ptr [rcx - 0x73], 0x49 ; xor dword ptr [rax - 0x39], ecx ; ret 1
0x0000020000374283 : rol byte ptr [rcx - 0x73], 0x50 ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000055df64 : rol byte ptr [rcx - 0x73], 0x51 ; add ch, al ; ret 0xff10
0x00000200000bd4aa : rol byte ptr [rcx - 0x73], 0x51 ; add eax, ebp ; insb byte ptr [rdi], dx ; ret
0x000002000014f422 : rol byte ptr [rcx - 0x75], 0x44 ; ret
0x00000200004055af : rol byte ptr [rcx - 0x75], 0x44 ; ret 0x8908
0x00000200003920a1 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x0000020000157f4b : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fa63 : rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000017a480 : rol byte ptr [rcx - 0x75], 0xc0 ; wrmsr ; ret
0x00000200003b71db : rol byte ptr [rcx - 0x75], 0xd7 ; call 0x200003b340a
0x000002000046f0c5 : rol byte ptr [rcx - 0x75], 0xd7 ; mov rcx, rdi ; call rax
0x0000020000020e75 : rol byte ptr [rcx - 0x75], 1 ; ret
0x000002000014aa2c : rol byte ptr [rcx - 0x75], 1 ; ret 0x8348
0x000002000004fdb3 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x0000020000196082 : rol byte ptr [rcx - 0x75], 1 ; ret 0xe0c1
0x00000200000cc000 : rol byte ptr [rcx - 0x75], 1 ; ror byte ptr [rax - 0x75], 0x84 ; ret
0x00000200000ae9ce : rol byte ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x45 ; ret 0xe82b
0x00000200006f9e58 : rol byte ptr [rcx - 0x75], cl ; iretd ; call 0x200006f6156
0x0000020000133752 : rol byte ptr [rcx - 0x75], cl ; ret
0x0000020000037b60 : rol byte ptr [rcx - 0x75], cl ; ret 0x44e9
0x00000200001ab216 : rol byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200001be1c7 : rol byte ptr [rcx - 0x75], cl ; ret 0x8d4d
0x000002000064ca17 : rol byte ptr [rcx - 0x75], cl ; ret 0x90c3
0x000002000014d90a : rol byte ptr [rcx - 0x75], cl ; ret 0xc06b
0x0000020000137adf : rol byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000021eab : rol byte ptr [rcx - 0x75], cl ; ret 0xdb9
0x00000200001d2d53 : rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x00000200000abb52 : rol byte ptr [rcx - 0x75], cl ; ret 0xf44
0x00000200003cda66 : rol byte ptr [rcx - 0x75], cl ; ret 0xf48
0x0000020000164aeb : rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x00000200000eb68b : rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x0000020000400161 : rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x0000020000138b84 : rol byte ptr [rcx - 0x75], cl ; sal bh, 0xf1 ; ret
0x0000020000536eee : rol byte ptr [rcx - 0x76], 0xc0 ; add rsp, 0x38 ; ret
0x00000200003b33f3 : rol byte ptr [rcx - 0x76], 1 ; ret 0x8348
0x0000020000044b15 : rol byte ptr [rcx - 0x76], 4 ; ret 0xf024
0x0000020000073e2c : rol byte ptr [rcx - 0x77], 1 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200000a9783 : rol byte ptr [rcx - 0x77], 2 ; ret
0x0000020000613991 : rol byte ptr [rcx - 0x77], 8 ; pop rbx ; ret
0x00000200000272cb : rol byte ptr [rcx - 0x77], 8 ; ret
0x000002000043b424 : rol byte ptr [rcx - 0x78], 0 ; movzx eax, r10b ; ret
0x000002000046b1f1 : rol byte ptr [rcx - 0x78], 0 ; xor eax, eax ; ret
0x00000200006d6816 : rol byte ptr [rcx - 0x78], 1 ; adc byte ptr [rbp + 3], cl ; ret
0x000002000035dadf : rol byte ptr [rcx - 0x78], 1 ; dec dword ptr [rax - 1] ; ret
0x0000020000036e50 : rol byte ptr [rcx - 0x78], 1 ; xor eax, eax ; ret
0x000002000058f985 : rol byte ptr [rcx - 0x78], 8 ; mov byte ptr [r9], al ; ret
0x00000200001f979b : rol byte ptr [rcx - 0x7b], 1 ; ret 0x774
0x000002000001e491 : rol byte ptr [rcx - 0x7d], 0xc2 ; or byte ptr [rbx], bh ; ret
0x00000200003707eb : rol byte ptr [rcx - 0x7f], cl ; ret
0x000002000013e4d2 : rol byte ptr [rcx - 0x80], 0xe8 ; mov byte ptr [rdx], r8b ; ret
0x00000200005070f6 : rol byte ptr [rcx - 0xa], 0xc0 ; adc byte ptr [rdi], cl ; ret 0xd08b
0x00000200003920ac : rol byte ptr [rcx - 0xa], cl ; ret 0x7401
0x000002000038df6e : rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000038df62 : rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000038df56 : rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x00000200001f5f67 : rol byte ptr [rcx - 1], 1 ; ret
0x000002000013f11d : rol byte ptr [rcx - 1], 1 ; ret 0x8341
0x0000020000640ad5 : rol byte ptr [rcx - 1], cl ; ret
0x000002000061539d : rol byte ptr [rcx - 1], cl ; ret 0x2b41
0x00000200003eeded : rol byte ptr [rcx], 0 ; add bh, bh ; ret
0x00000200001dc913 : rol byte ptr [rcx], 0x74 ; ret 0x8d44
0x00000200001b3b4c : rol byte ptr [rcx], 0x75 ; sub al, 0xf ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200003f3ddc : rol byte ptr [rcx], 1 ; ret
0x0000020000491413 : rol byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000470bcc : rol byte ptr [rcx], cl ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret 0x4166
0x000002000038c66e : rol byte ptr [rdi + rax*4 + 0x1d], 0x4a ; ret
0x00000200000dcdff : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; pause ; xor al, al ; ret
0x000002000048a931 : rol byte ptr [rdi + rcx + 0x48], 0xe8 ; call 0x200000b9b08
0x00000200001f5b17 : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret
0x0000020000198ffc : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret 0xeb0c
0x00000200003c7f11 : rol byte ptr [rdi + rcx - 0x49], 0x51 ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4907
0x0000020000464ea8 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0x6ae9
0x00000200006136b3 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0xbe9
0x00000200001c3ed5 : rol byte ptr [rdi + rcx - 0x49], cl ; ret 0x4166
0x000002000003df18 : rol byte ptr [rdi + rcx - 0x4a], cl ; ret 0xf41
0x000002000008eb12 : rol byte ptr [rdi - 0x3a], cl ; ret
0x00000200006438f6 : rol byte ptr [rdi], 0x75 ; jmp 0x1ff8bad4af2
0x000002000013c340 : rol byte ptr [rdi], 0x89 ; add eax, 0x154610 ; ret
0x0000020000132b1b : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; ret
0x000002000049156d : rol byte ptr [rdx - 0xa], 0x44 ; ret 0x108
0x00000200004c0c66 : rol byte ptr [rdx], 0 ; add bh, bh ; ret
0x00000200003e4d5a : rol byte ptr [rdx], 0 ; add dh, dh ; ret 0xf03
0x00000200005896e3 : rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x00000200000cf0e8 : rol byte ptr [rdx], 0x48 ; lea eax, dword ptr [rcx + rax*4] ; ret
0x0000020000025a58 : rol byte ptr [rdx], 0x66 ; mov dword ptr [r9 + 2], eax ; mov eax, r10d ; ret
0x00000200000bf29b : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x000002000005a931 : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x000002000019c549 : rol byte ptr [rdx], 0x81 ; ret 0x2809
0x000002000062c205 : rol byte ptr [rdx], 0x83 ; ret 0x8902
0x00000200003f79d9 : rol byte ptr [rdx], 0xc3 ; xor eax, eax ; ret
0x000002000005d994 : rol byte ptr [rdx], 0xf ; test dword ptr [rdi - 0x74000003], eax ; ret 0x3948
0x0000020000035713 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x0000020000574c46 : rol byte ptr [rip + 0x1b80000], 0 ; add byte ptr [rax], al ; ret
0x0000020000108308 : rol byte ptr [rip - 0x74b70002], 1 ; ret
0x00000200004f06cb : rol byte ptr [rip - 0x74b80000], 5 ; ret 0xd8e0
0x0000020000188e2a : rol byte ptr [rip - 0x7bbf0000], 1 ; ret
0x00000200006e70ee : rol byte ptr [rsi], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8d44
0x000002000003cbca : rol byte ptr [rsp + rbx], cl ; add byte ptr [rax - 9], cl ; ret
0x00000200001be1b7 : rol byte ptr [rsp + rcx*2], 3 ; ror dword ptr [rax + 0x3b], 1 ; ret 0xe272
0x000002000047887a : rol ch, cl ; ret 0x48ff
0x0000020000089ef0 : rol cl, 0xc2 ; ret
0x00000200003e81c7 : rol cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x00000200005a0717 : rol cl, 0xe0 ; or eax, 0x23104733 ; ret 0x4731
0x000002000037b761 : rol cl, 0xe2 ; add al, 0x83 ; ret 0xe830
0x00000200001c2a8a : rol cl, 0xe8 ; add al, 0x83 ; loopne 0x200001c2a99 ; ret
0x00000200001c6cce : rol cl, 0xe8 ; add al, byte ptr [rcx + 0x23] ; ret
0x00000200003d17c0 : rol cl, 1 ; call 0x20041ff3ad8
0x00000200002276ac : rol cl, 4 ; add byte ptr [rax], dh ; ret 4
0x00000200000dd3b0 : rol dh, 0xd ; add byte ptr [rcx + 3], cl ; leave ; jmp rcx
0x000002000054e0c3 : rol dh, cl ; and al, 0x20 ; add eax, ebp ; ret 0xf9e0
0x000002000048b5dc : rol dl, 0xe4 ; push qword ptr [rdx - 0x250617ff] ; ret 0x48ff
0x000002000001fce8 : rol dword ptr [r9 - 0x77], 0x40 ; pop rsp ; ret
0x00000200000c7899 : rol dword ptr [rax + 0x48000000], 0xf ; ret
0x00000200005690a5 : rol dword ptr [rax + 0x4800356c], -0x7f ; ret
0x00000200000a3a10 : rol dword ptr [rax + 0x48], 0xf ; ret
0x00000200004672c2 : rol dword ptr [rax + 0x75], 3 ; xor al, al ; ret
0x0000020000417c3a : rol dword ptr [rax + 0x75], 7 ; test cl, cl ; js 0x20000417c6e ; and eax, edx ; ret
0x00000200003c3ef3 : rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret
0x00000200002276ad : rol dword ptr [rax + rax], 0x30 ; ret 4
0x000002000041b56f : rol dword ptr [rax + rax], cl ; add rsp, 0x70 ; pop rbp ; ret
0x000002000043b37e : rol dword ptr [rax + rcx*2], -0x75 ; add al, 0xc8 ; add rax, r9 ; ret
0x0000020000112c0a : rol dword ptr [rax + rcx*2], -0x77 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x0000020000142b60 : rol dword ptr [rax + rdi + 0x1a], 0x75 ; add al, 0x48 ; mov eax, ecx ; ret
0x0000020000497901 : rol dword ptr [rax - 0x598dfd06], cl ; mov al, 2 ; ret
0x00000200000df2a6 : rol dword ptr [rax - 0x74b3c01f], 1 ; ret
0x0000020000074dd4 : rol dword ptr [rax - 0x76], -0x3a ; add rsp, 0x30 ; pop rsi ; ret
0x000002000015410d : rol dword ptr [rax - 0x98affc7], -0xd ; ret
0x000002000019bf66 : rol dword ptr [rax], -1 ; add byte ptr [rax], al ; setbe al ; ret
0x00000200006437d7 : rol dword ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000002000007e775 : rol dword ptr [rax], 0 ; add cl, ch ; ret 0xffc8
0x00000200000c310d : rol dword ptr [rax], 7 ; add byte ptr [rax], al ; jne 0x200000c3139 ; ret
0x00000200000477c1 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000641acb : rol dword ptr [rax], cl ; add byte ptr [rax], al ; call rcx
0x00000200003df2b9 : rol dword ptr [rbp + 0x1ae80007], cl ; xchg eax, esp ; ret 0xebff
0x0000020000168f1b : rol dword ptr [rbp + 0x1e], 1 ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200005be5e0 : rol dword ptr [rbp + 0x23], 1 ; sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x00000200000f9102 : rol dword ptr [rbp + 0x33037510], -0x40 ; ret
0x00000200003c0046 : rol dword ptr [rbp + 0x440f41c0], -0x40 ; ret
0x000002000050218f : rol dword ptr [rbp + 0xf], -0x51 ; ret
0x00000200003ce813 : rol dword ptr [rbp + 0xf], 0x22 ; ret 0x4865
0x00000200001695db : rol dword ptr [rbp + 0xf], 0x44 ; ret
0x00000200000390a7 : rol dword ptr [rbp + 3], 1 ; ret 0x8b44
0x000002000060dd83 : rol dword ptr [rbp + 3], cl ; ret
0x00000200001de59f : rol dword ptr [rbp - 0x19], 0x3b ; ret
0x00000200003fc669 : rol dword ptr [rbp - 0x3f6bf036], 1 ; ret
0x00000200005640dd : rol dword ptr [rbp - 0x73], 0x45 ; add ah, byte ptr [rbx] ; ret 0x8d45
0x000002000001dbef : rol dword ptr [rbp - 0x75], 1 ; ret 0x6b45
0x000002000014d8d4 : rol dword ptr [rbp - 0x75], 1 ; ret 0xf44
0x00000200000cfd5f : rol dword ptr [rbp - 0x75], cl ; ret
0x000002000014e9cc : rol dword ptr [rbp - 0x75], cl ; ret 0xb8
0x000002000015b30b : rol dword ptr [rbx + 0x18], 3 ; ret 0xc23b
0x0000020000127234 : rol dword ptr [rbx + 0x23], 1 ; ret 0x4908
0x00000200003f0fa4 : rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x000002000012ab57 : rol dword ptr [rbx + 0x48], 3 ; ret 0x3d
0x000002000055c6b6 : rol dword ptr [rbx + 0x5d3901e0], cl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x000002000058bc1a : rol dword ptr [rbx + 0xe7208f8], -1 ; ret
0x000002000003af2d : rol dword ptr [rbx + rbp - 0x3f], 1 ; mov eax, r8d ; ret
0x0000020000387134 : rol dword ptr [rbx + rdi - 0x31], 0x75 ; loope 0x200003870cd ; ret 0x8948
0x000002000010dabe : rol dword ptr [rbx - 0x35c40036], 0xf ; ret 0x6348
0x000002000059329b : rol dword ptr [rbx - 0x73], 0xc ; sbb dword ptr [rcx + 3], eax ; ret
0x00000200001a3141 : rol dword ptr [rbx - 0xb7c01e], 1 ; ret 0xc148
0x0000020000472d52 : rol dword ptr [rbx], -0x7d ; loope 0x20000472d5c ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000054369e : rol dword ptr [rcx + 0x10], 3 ; ret
0x0000020000543709 : rol dword ptr [rcx + 0x18], 3 ; ret
0x00000200000c5954 : rol dword ptr [rcx + 0x23], cl ; ret
0x000002000061fcec : rol dword ptr [rcx + 0x28], 3 ; ret
0x000002000041d40f : rol dword ptr [rcx + 0x2b], -0x3e ; jmp 0x2000041d41b
0x000002000041da7e : rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x000002000037c8ff : rol dword ptr [rcx + 0x33], -0x3f ; ret
0x0000020000050fb4 : rol dword ptr [rcx + 0x68], 3 ; ret
0x0000020000642de7 : rol dword ptr [rcx + 0xa0], 0x33 ; fld xword ptr [rbx] ; ret 0x2579
0x000002000058f6d9 : rol dword ptr [rcx + 0xf], -0x49 ; leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200000ff6ac : rol dword ptr [rcx + 0xf], 0x44 ; ret
0x0000020000055587 : rol dword ptr [rcx + 0xf], 0x45 ; ret
0x000002000058ffd6 : rol dword ptr [rcx + 3], -0x3f ; add rsp, 0x28 ; ret
0x000002000041dbf6 : rol dword ptr [rcx + 3], -0x3f ; ret
0x00000200001c66ef : rol dword ptr [rcx + 3], cl ; ret
0x00000200004d003f : rol dword ptr [rcx + 4], 3 ; ret
0x00000200000e113a : rol dword ptr [rcx + rax*2], -0x7d ; ret 0x48e0
0x0000020000624755 : rol dword ptr [rcx + rax*2], 0x3b ; ret
0x000002000012a09f : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4408
0x0000020000624751 : rol dword ptr [rcx + rcx*2], -0x7d ; rol dword ptr [rcx + rax*2], 0x3b ; ret
0x0000020000157d4a : rol dword ptr [rcx + rcx*2], -1 ; leave ; jne 0x20000157d2d ; ret
0x00000200000b8513 : rol dword ptr [rcx + rcx*4 + 0x4c], 0x24 ; and al, 0xff ; ret 0x8349
0x0000020000620241 : rol dword ptr [rcx - 0x10], 1 ; push rsi ; ret
0x000002000014e2b5 : rol dword ptr [rcx - 0x3f], -0x20 ; add cl, byte ptr [rbx] ; ret 0x225
0x000002000019ed69 : rol dword ptr [rcx - 0x47], 1 ; add byte ptr [rax + rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200004d3dc6 : rol dword ptr [rcx - 0x48], 1 ; movsxd r13, dword ptr [r9 - 0x18] ; outsb dx, byte ptr [rsi] ; ret 0xffd9
0x00000200006157b5 : rol dword ptr [rcx - 0x73], 0x51 ; or byte ptr [rax - 0x75], cl ; iretd ; call r10
0x00000200004d5206 : rol dword ptr [rcx - 0x73], 1 ; dec qword ptr [rax - 0x7f] ; ret 0x5dcb
0x00000200001419fc : rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200000034ad : rol dword ptr [rcx - 0x75], -0x40 ; add rsp, 0x18 ; ret
0x000002000003af30 : rol dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200000c59a2 : rol dword ptr [rcx - 0x75], 1 ; add dh, bh ; shl byte ptr [rbx], cl ; ret 0xca8b
0x00000200001a983f : rol dword ptr [rcx - 0x75], 1 ; ret
0x0000020000411cd3 : rol dword ptr [rcx - 0x75], 1 ; ret 0x48c3
0x00000200005748c6 : rol dword ptr [rcx - 0x75], 1 ; ret 0x90c3
0x00000200001ca1e6 : rol dword ptr [rcx - 0x75], 1 ; ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x0000020000161fef : rol dword ptr [rcx - 0x75], cl ; ret
0x000002000016d0ad : rol dword ptr [rcx - 0x75], cl ; ret 0x8b48
0x0000020000141a04 : rol dword ptr [rcx - 0x76], 1 ; shr ebx, -0x21 ; xor eax, eax ; ret
0x0000020000362df3 : rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x000002000001fce9 : rol dword ptr [rcx - 0x77], 0x40 ; pop rsp ; ret
0x0000020000644164 : rol dword ptr [rcx - 0x77], 0x46 ; or byte ptr [rcx - 0x76], al ; ret
0x000002000070160e : rol dword ptr [rcx - 0x77], 0x5b ; or byte ptr [rcx - 0x7d], cl ; ret
0x000002000035fcbf : rol dword ptr [rcx - 0x7d], -0x3d ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4110
0x0000020000060bb6 : rol dword ptr [rcx - 0x7d], 1 ; ret 0x4920
0x00000200005197c0 : rol dword ptr [rcx - 0x7f], 1 ; ret 0xfe00
0x00000200001b14c0 : rol dword ptr [rcx - 0xff37], 1 ; jmp qword ptr [rbx]
0x000002000019746e : rol dword ptr [rcx - 1], cl ; push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x00000200001a6f2a : rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x000002000014de61 : rol dword ptr [rcx], 0x75 ; adc al, 0x48 ; mov edi, dword ptr [rsp + 8] ; ret
0x000002000039bfea : rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x000002000013c20f : rol dword ptr [rcx], 0x75 ; salc ; xor eax, eax ; ret
0x0000020000101e2a : rol dword ptr [rcx], 0xf ; test dword ptr [rsi], edx ; jae 0x20000101e46 ; add dh, dh ; ret
0x0000020000609ca7 : rol dword ptr [rcx], 3 ; ret
0x000002000040c816 : rol dword ptr [rdi + 0x10], 3 ; ret
0x0000020000431fb9 : rol dword ptr [rdi + 0x14], 3 ; ret
0x00000200004cf99c : rol dword ptr [rdi + 0x18], 3 ; ret
0x000002000061fd51 : rol dword ptr [rdi + 0x28], 3 ; ret
0x0000020000008059 : rol dword ptr [rdi + 0x38], 3 ; ret
0x000002000040a85e : rol dword ptr [rdi + 0xac], 3 ; ret
0x000002000006cc77 : rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x0000020000050f91 : rol dword ptr [rdi + rcx + 0x22], -0x40 ; ret
0x00000200001c1ade : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0x8b49
0x000002000052a030 : rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x0000020000174cf9 : rol dword ptr [rdi + rcx - 0x49], cl ; enter 0xf44, -0x49 ; ret 0x4166
0x00000200003f0b3a : rol dword ptr [rdi + rcx - 0x49], cl ; ret 0x8b48
0x0000020000624b74 : rol dword ptr [rdi + rcx], -0x7b ; ret
0x00000200003fa1a1 : rol dword ptr [rdi - 0xc], 3 ; ret
0x0000020000122cac : rol dword ptr [rdx + 0x10], 0x48 ; add esp, 0x38 ; ret
0x000002000014fc2f : rol dword ptr [rdx], -0x15 ; adc ecx, dword ptr [rax - 1] ; ret
0x000002000047ea7e : rol dword ptr [rdx], -0x15 ; out 0xb0, al ; add ebx, eax ; xor al, al ; ret
0x000002000056da7b : rol dword ptr [rdx], -0x75 ; ret 0x3b48
0x000002000052c1e7 : rol dword ptr [rdx], -0x7d ; ret 0x4102
0x00000200001b4148 : rol dword ptr [rdx], -1 ; ret 0xf983
0x0000020000147c9e : rol dword ptr [rdx], 0x48 ; cmp eax, edx ; jb 0x20000147c9b ; ret
0x00000200003cb274 : rol dword ptr [rdx], 0x48 ; dec edx ; jne 0x200003cb274 ; ret
0x00000200004e72b9 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx + 0x28], ecx ; ret
0x000002000001eef1 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x00000200003ba83f : rol dword ptr [rdx], 0x49 ; dec ecx ; jne 0x200003ba83b ; ret
0x00000200001544e9 : rol dword ptr [rdx], 0x4d ; cmp ecx, eax ; jb 0x200001544dc ; mov rax, r10 ; ret
0x0000020000154422 : rol dword ptr [rdx], 0x4d ; test eax, eax ; jne 0x2000015441c ; ret
0x000002000012935a : rol dword ptr [rdx], 0x75 ; sbb al, 0x8d ; sbb byte ptr [r9 + 0x3b], al ; ret 0x830f
0x000002000040eff3 : rol dword ptr [rip + 0x274707], 3 ; ret
0x0000020000587515 : rol dword ptr [rip + 0xfbe45], 3 ; ret 0xc23b
0x00000200005874f7 : rol dword ptr [rip + 0xfbe5f], 3 ; ret 0xc23b
0x00000200005918fb : rol dword ptr [rip - 0x15417], -1 ; mov eax, edx ; jmp 0x20000591915
0x000002000056cb39 : rol dword ptr [rip - 0x2a04bb], 3 ; ret 0xe083
0x000002000056cba8 : rol dword ptr [rip - 0x2a052e], 3 ; ret 0xe083
0x00000200003d7b43 : rol dword ptr [rip - 0xf1849], 3 ; ret
0x00000200004cfba2 : rol dword ptr [rsi + 0x18], 3 ; ret
0x000002000047182d : rol dword ptr [rsi + 0x4d8], -0xa ; ret
0x000002000041e6ed : rol dword ptr [rsi + 0xa8], 3 ; ret
0x00000200003a39b0 : rol dword ptr [rsi + 0xac], 3 ; ret
0x000002000056f361 : rol dword ptr [rsi - 0xc], 3 ; ret
0x00000200005234c7 : rol dword ptr [rsi], -0x18 ; salc ; outsd dx, dword ptr [rsi] ; ret 0x83ff
0x000002000023e461 : rol dword ptr [rsi], 0x40 ; ret 0x46
0x0000020000236bde : rol dword ptr [rsi], 1 ; sysenter
0x000002000053f496 : rol dword ptr [rsi], cl ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x0000020000188459 : rol dword ptr [rsp], -0x7c ; ret
0x00000200004dbb82 : rol ebx, -0x3f ; call 0x200332aa69c
0x000002000015253c : rol ebx, -0x70 ; nop ; mov rax, cr8 ; ret
0x0000020000061a53 : rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x000002000006e6b5 : rol ecx, -0x18 ; or al, 3 ; ret 0xff48
0x000002000006d760 : rol ecx, -0x18 ; or al, 3 ; ret 0xffba
0x000002000019ca0e : rol ecx, 1 ; cli ; add al, 0x8b ; ret 0xe8c1
0x0000020000590732 : rol ecx, cl ; cli ; add al, 0x8b ; ret 0xe8c1
0x00000200005c56d6 : rol edi, 0x44 ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x0000020000446599 : rol edi, cl ; ret 0x4cff
0x000002000036451b : rol edx, 0 ; add bl, dh ; ret
0x00000200006e9f8b : rol esi, 1 ; dec dword ptr [rax + 3] ; ret 0x8948
0x00000200006e9ed2 : rol esi, 1 ; inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0xf44
0x0000020000465e30 : ror ah, 0x90 ; nop ; nop ; nop ; nop ; nop ; ret 0
0x00000200005a0ab4 : ror byte ptr [r11 + rcx*4 - 0x3f], 0xe8 ; ret 0xadcb
0x000002000006b128 : ror byte ptr [r13 - 0x75], 1 ; ret
0x0000020000556a9d : ror byte ptr [r15], 0xb7 ; and al, 0x66 ; mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556ac6
0x00000200000c78ab : ror byte ptr [r8 + 0xf], 1 ; ret
0x000002000005a48e : ror byte ptr [r8 + 3], 1 ; ret
0x00000200005c9274 : ror byte ptr [r8 - 0x73], 0x35 ; ret
0x00000200005772b4 : ror byte ptr [r8 - 0x73], 0xd ; ret
0x000002000056651d : ror byte ptr [r8 - 0x75], 0xd ; ret 0xd1b2
0x00000200004bb9a9 : ror byte ptr [r8 - 0x75], 1 ; sar r15b, 1 ; ret 0x8349
0x000002000039bc1c : ror byte ptr [r8 - 0x77], 0x44 ; and al, 0x20 ; call r10
0x00000200003b5ad9 : ror byte ptr [r8 - 0x77], 0x44 ; and al, 0x20 ; call rbx
0x0000020000636f24 : ror byte ptr [r8 - 0x7d], 1 ; ret 0x4540
0x00000200004e026f : ror byte ptr [r8 - 0x7d], 1 ; ret 0xe804
0x000002000048111e : ror byte ptr [r9 + 3], 1 ; ret
0x000002000000edda : ror byte ptr [r9 + 3], 1 ; ret 0x3b49
0x00000200000bd09d : ror byte ptr [r9 - 0x77], 1 ; or dh, dh ; ret
0x00000200004a69e4 : ror byte ptr [r9 - 0x7d], 1 ; ret
0x0000020000154676 : ror byte ptr [rax + 0x23], 0xc1 ; ret
0x00000200003706c6 : ror byte ptr [rax + 0x23], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d2597 : ror byte ptr [rax + 0x2b], 0x41 ; adc byte ptr [rax + 0x2b], cl ; ret
0x00000200001b5d35 : ror byte ptr [rax + 0x2b], 0x47 ; or byte ptr [rcx + 0x2b], cl ; ret 0x348
0x00000200000310a2 : ror byte ptr [rax + 0x2b], 0x4f ; adc byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200005ffa4d : ror byte ptr [rax + 0x2b], 1 ; ret 0x34c
0x000002000014a3ad : ror byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 0x2f], -8 ; ret
0x000002000019abdd : ror byte ptr [rax + 0x39], 1 ; sete al ; ret
0x000002000012189b : ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x00000200001fac25 : ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200001bed13 : ror byte ptr [rax + 0x4a880242], 1 ; ret
0x000002000012b3b5 : ror byte ptr [rax + 0x6b], 0xc0 ; and cl, byte ptr [rax + 3] ; ret 0x8b41
0x00000200003a1397 : ror byte ptr [rax + 0x6b], 0xc0 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200000322d8 : ror byte ptr [rax + 0x8e81], 0 ; ret
0x0000020000198c8f : ror byte ptr [rax + 0xb], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ad14f : ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200000fb1bc : ror byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d1927 : ror byte ptr [rax + 0xf], 0x42 ; ret 0x8949
0x00000200001f64a2 : ror byte ptr [rax + 0xf], 0x43 ; enter 0x18a, -1 ; ret 0x9489
0x00000200004a8f61 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000200001f7259 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000200003b7e0f : ror byte ptr [rax + 0xf], 0xac ; ret
0x00000200000c78ac : ror byte ptr [rax + 0xf], 1 ; ret
0x00000200001b891a : ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x00000200004d1ff1 : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x000002000015eeb6 : ror byte ptr [rax + 0xf], cl ; mov esp, 0x440f41c2 ; ret 0xc13b
0x00000200003830f9 : ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000003a186 : ror byte ptr [rax + 3], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005a48f : ror byte ptr [rax + 3], 1 ; ret
0x000002000013f75e : ror byte ptr [rax + 3], 1 ; ret 0xba
0x000002000013f798 : ror byte ptr [rax + 3], 1 ; ret 0xc148
0x000002000041da64 : ror byte ptr [rax + 3], cl ; ret 0x8341
0x000002000013f841 : ror byte ptr [rax + 3], cl ; ret 0xc148
0x00000200001f22c5 : ror byte ptr [rax + 3], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200004688b9 : ror byte ptr [rax + rax], 0 ; ret
0x00000200003f5670 : ror byte ptr [rax + rax], cl ; call 0x20000023fb6
0x0000020000144799 : ror byte ptr [rax - 0x2d], 1 ; ret 0x344
0x000002000069b7c7 : ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x000002000069df9e : ror byte ptr [rax - 0x2d], 1 ; ret 0xcfff
0x000002000069b254 : ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x000002000006c209 : ror byte ptr [rax - 0x3f], 0xe0 ; add al, 0x48 ; add eax, ecx ; ret
0x0000020000059407 : ror byte ptr [rax - 0x3f], 0xea ; and byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf49
0x0000020000008aa4 : ror byte ptr [rax - 0x3f], 0xf8 ; add ecx, dword ptr [rcx + 0x3b] ; ret 0x830f
0x0000020000700242 : ror byte ptr [rax - 0x3f], 1 ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000365d63 : ror byte ptr [rax - 0x3f], 1 ; ret 0x482b
0x00000200000a96a8 : ror byte ptr [rax - 0x3f], cl ; call 0x1ffc22ddfb9
0x00000200001b8bd3 : ror byte ptr [rax - 0x3f], cl ; call qword ptr [rdx]
0x00000200001113a4 : ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000040605d : ror byte ptr [rax - 0x44473cf6], 0 ; add al, al ; ret
0x00000200003a2861 : ror byte ptr [rax - 0x57], 5 ; jmp rax
0x00000200003be69b : ror byte ptr [rax - 0x73], 0x14 ; ret
0x00000200003604a3 : ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x00000200001630d6 : ror byte ptr [rax - 0x73], 0x15 ; ret 0x176c
0x00000200005c9275 : ror byte ptr [rax - 0x73], 0x35 ; ret
0x00000200006e9edc : ror byte ptr [rax - 0x73], 0x42 ; add dword ptr [rax - 0x7f], ecx ; ret 0x801
0x00000200005385e1 : ror byte ptr [rax - 0x73], 0x4d ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000115d20 : ror byte ptr [rax - 0x73], 0x4d ; loopne 0x20000115d14 ; ret 0xf4f8
0x000002000001b364 : ror byte ptr [rax - 0x73], 0x4e ; loopne 0x2000001b358 ; ret 0xdf
0x00000200001adf1b : ror byte ptr [rax - 0x73], 0x71 ; add al, 0x3b ; ret 0x470f
0x000002000004377f : ror byte ptr [rax - 0x73], 0xc ; ret 0x3b4c
0x00000200005772b5 : ror byte ptr [rax - 0x73], 0xd ; ret
0x000002000041280e : ror byte ptr [rax - 0x73], 1 ; adc byte ptr [r8 + 3], r9b ; ret 0x3b48
0x00000200003d8804 : ror byte ptr [rax - 0x73], 1 ; or al, 0x49 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x000002000036049f : ror byte ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x000002000042ace1 : ror byte ptr [rax - 0x73], cl ; adc r8b, r13b ; jne 0x2000042ad68 ; ret 0x84ff
0x000002000042c121 : ror byte ptr [rax - 0x73], cl ; adc r8b, r13b ; push rbp ; pop rcx ; ret
0x0000020000073a77 : ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x0000020000072a38 : ror byte ptr [rax - 0x75], 0x14 ; ret
0x000002000045a8fd : ror byte ptr [rax - 0x75], 0x1c ; and al, 0x48 ; add esp, 8 ; ret
0x0000020000124d5f : ror byte ptr [rax - 0x75], 0x1c ; ret 0x8148
0x0000020000065916 : ror byte ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x00000200004e1f14 : ror byte ptr [rax - 0x75], 0x4b ; adc bh, bh ; ret 0x349
0x0000020000061090 : ror byte ptr [rax - 0x75], 0x4c ; ret
0x000002000016c042 : ror byte ptr [rax - 0x75], 0x4c ; ret 0x4818
0x000002000056dcaf : ror byte ptr [rax - 0x75], 0x4f ; adc bh, bh ; ret 0x349
0x00000200003c91df : ror byte ptr [rax - 0x75], 0x53 ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001044ba : ror byte ptr [rax - 0x75], 0x55 ; cmp byte ptr [rax - 0x75], cl ; call rax
0x00000200000194cb : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, qword ptr [rbp + 0x38] ; call rax
0x00000200001bc9cd : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x10 ; ret
0x000002000004560e : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200004b67f7 : ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x00000200000cc003 : ror byte ptr [rax - 0x75], 0x84 ; ret
0x00000200001528bb : ror byte ptr [rax - 0x75], 0x94 ; ret
0x0000020000072d08 : ror byte ptr [rax - 0x75], 0xc ; ret
0x00000200001d2061 : ror byte ptr [rax - 0x75], 0xc ; ret 0x8548
0x0000020000143a28 : ror byte ptr [rax - 0x75], 0xcb ; call 0x2000004fd26
0x0000020000406b8c : ror byte ptr [rax - 0x75], 0xcb ; call 0x20000072e46
0x00000200005aaf5a : ror byte ptr [rax - 0x75], 0xcb ; call 0x200000771c6
0x000002000041f4d9 : ror byte ptr [rax - 0x75], 0xcb ; call rax
0x0000020000584ff2 : ror byte ptr [rax - 0x75], 0xcb ; mov rdx, rsi ; call 0x20000581299
0x00000200004fd824 : ror byte ptr [rax - 0x75], 0xcf ; call 0x2000012ac4f
0x00000200004eb488 : ror byte ptr [rax - 0x75], 0xcf ; call r15
0x000002000056651e : ror byte ptr [rax - 0x75], 0xd ; ret 0xd1b2
0x000002000004a51c : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, r11 ; call 0x200000b67a9
0x00000200001264e7 : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, r15 ; call r12
0x00000200003d0259 : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call r10
0x000002000013b67d : ror byte ptr [rax - 0x75], 0xd5 ; mov rcx, rdi ; call 0x2000049796d
0x0000020000584e50 : ror byte ptr [rax - 0x75], 0xd6 ; call 0x200005810f6
0x00000200002002a3 : ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200005cded4 : ror byte ptr [rax - 0x75], 0xd6 ; mov rcx, r12 ; call rax
0x0000020000585003 : ror byte ptr [rax - 0x75], 0xd6 ; mov rcx, rbx ; call 0x20000581299
0x000002000015f8b9 : ror byte ptr [rax - 0x75], 0xd7 ; mov rcx, rbx ; call r10
0x000002000000f301 : ror byte ptr [rax - 0x75], 1 ; add eax, 0x3481af ; call rax
0x0000020000428ef4 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x20000056fc3
0x000002000035ecd1 : ror byte ptr [rax - 0x75], 1 ; or bl, bpl ; ret 0x8b45
0x000002000019ecf9 : ror byte ptr [rax - 0x75], 1 ; ret
0x000002000013fd0a : ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200000a96a2 : ror byte ptr [rax - 0x75], 1 ; ret 0x2349
0x0000020000101b3c : ror byte ptr [rax - 0x75], 1 ; ret 0x8348
0x000002000069b53f : ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200001682d1 : ror byte ptr [rax - 0x75], 1 ; ret 0x90c3
0x000002000013f939 : ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x000002000001910b : ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200006f1a9e : ror byte ptr [rax - 0x75], 1 ; ret 0xd148
0x0000020000428625 : ror byte ptr [rax - 0x75], 1 ; retf ; call 0x20000056fc3
0x000002000035ecce : ror byte ptr [rax - 0x75], 1 ; ror byte ptr [rax - 0x75], 1 ; or bl, bpl ; ret 0x8b45
0x00000200004bb9aa : ror byte ptr [rax - 0x75], 1 ; sar r15b, 1 ; ret 0x8349
0x00000200001d959f : ror byte ptr [rax - 0x75], 4 ; ret 0x8b48
0x00000200000d9b3c : ror byte ptr [rax - 0x75], 4 ; ret 0x8d4c
0x00000200006a1159 : ror byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x0000020000640904 : ror byte ptr [rax - 0x75], cl ; and al, 0x30 ; call 0x2000026f019
0x0000020000015cb0 : ror byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x18 ; ret
0x000002000064e819 : ror byte ptr [rax - 0x75], cl ; enter -0x1118, 7 ; ret 0x48ff
0x000002000046b98e : ror byte ptr [rax - 0x75], cl ; enter -0x4618, 0x7f ; ret
0x00000200004764a0 : ror byte ptr [rax - 0x75], cl ; enter -0x5818, -0x2c ; ret 0x48ff
0x000002000047c2b5 : ror byte ptr [rax - 0x75], cl ; enter -0x6d18, 0x76 ; ret 0x44ff
0x00000200004830b7 : ror byte ptr [rax - 0x75], cl ; enter -0x6f18, 8 ; ret 0x48ff
0x000002000062f97b : ror byte ptr [rax - 0x75], cl ; enter -0x7318, -0xa ; ret
0x000002000046f651 : ror byte ptr [rax - 0x75], cl ; enter -0x918, 0x42 ; ret
0x0000020000472b0b : ror byte ptr [rax - 0x75], cl ; enter 0x3ce8, 0xe ; ret
0x000002000064e6c9 : ror byte ptr [rax - 0x75], cl ; enter 0x3ee8, 9 ; ret 0x48ff
0x000002000047affe : ror byte ptr [rax - 0x75], cl ; enter 0x49e8, -0x77 ; ret 0x44ff
0x00000200004731f0 : ror byte ptr [rax - 0x75], cl ; enter 0x57e8, 7 ; ret
0x000002000047c2de : ror byte ptr [rax - 0x75], cl ; enter 0x69e8, 0x76 ; ret 0x41ff
0x000002000062f898 : ror byte ptr [rax - 0x75], cl ; enter 0x6fe8, -9 ; ret
0x000002000064e1fd : ror byte ptr [rax - 0x75], cl ; enter 0xae8, 0xe ; ret 0x48ff
0x000002000006e88b : ror byte ptr [rax - 0x75], cl ; fadd dword ptr [rcx - 0x75] ; ret
0x0000020000392ca7 : ror byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200005c2e29 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000cf0ea
0x000002000053da6b : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000015e537
0x00000200001b2d31 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f016
0x0000020000644c8a : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f017
0x00000200005d5ae1 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000441dd6
0x0000020000500636 : ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x000002000055f105 : ror byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200003f4c84 : ror byte ptr [rax - 0x75], cl ; mov ecx, dword ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x000002000012a0ab : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov al, dl ; ret
0x000002000010b0c7 : ror byte ptr [rax - 0x75], cl ; ret
0x00000200004031fb : ror byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200001978fa : ror byte ptr [rax - 0x75], cl ; ret 0x48c3
0x0000020000020660 : ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000015a247 : ror byte ptr [rax - 0x75], cl ; ret 0x90c3
0x00000200004cd4e1 : ror byte ptr [rax - 0x75], cl ; ret 0xbb41
0x00000200004e2cd1 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000104d37
0x0000020000512dd5 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f016
0x0000020000642271 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000026f017
0x000002000047fe00 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000043c046
0x00000200000aed49 : ror byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200000ea9dd : ror byte ptr [rax - 0x75], cl ; sal dword ptr [rbp + 1], 1 ; ret
0x000002000070812f : ror byte ptr [rax - 0x75dfdbac], cl ; ret 0x8348
0x0000020000139b6d : ror byte ptr [rax - 0x77], 0x34 ; ret 0x7c89
0x0000020000117363 : ror byte ptr [rax - 0x77], 0x41 ; push rax ; ret
0x000002000058805e : ror byte ptr [rax - 0x77], 0x41 ; ret
0x00000200004d3801 : ror byte ptr [rax - 0x77], 0x42 ; push rax ; ret
0x00000200004d384c : ror byte ptr [rax - 0x77], 0x42 ; ret
0x00000200004d37f1 : ror byte ptr [rax - 0x77], 0x42 ; sub bl, dh ; ret
0x0000020000480b5d : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call 0x200000a66a9
0x000002000039bc1d : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r10
0x00000200003b5ada : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call rbx
0x00000200000e204e : ror byte ptr [rax - 0x77], 0x45 ; add byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200006fe151 : ror byte ptr [rax - 0x77], 0xc ; ret 0x81f0
0x0000020000161d9d : ror byte ptr [rax - 0x77], 1 ; mov eax, 0xc00000bb ; ret
0x00000200004e4501 : ror byte ptr [rax - 0x77], 1 ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000c20d4 : ror byte ptr [rax - 0x77], 2 ; ret
0x00000200001ef1eb : ror byte ptr [rax - 0x77], 4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x4410
0x0000020000545db9 : ror byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200000a2048
0x0000020000123de1 : ror byte ptr [rax - 0x77], cl ; or byte ptr [r9 - 0x75], r8b ; ret
0x000002000051db97 : ror byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x38 ; call rdi
0x00000200000a8da1 : ror byte ptr [rax - 0x79], 1 ; adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x00000200001406ed : ror byte ptr [rax - 0x79], 1 ; ret
0x000002000038872d : ror byte ptr [rax - 0x7b], 0xc9 ; jne 0x2000038873c ; ret
0x000002000001dbb6 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x2000001dbc9 ; mov qword ptr [r8], rcx ; ret
0x0000020000652dd5 : ror byte ptr [rax - 0x7b], 0xd2 ; setne al ; ret
0x0000020000384760 : ror byte ptr [rax - 0x7b], 1 ; ror byte ptr [rdi], 0x84 ; ret
0x00000200003dfe40 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200000041d4 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x0000020000009b96 : ror byte ptr [rax - 0x7d], 0x38 ; add byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x000002000003555f : ror byte ptr [rax - 0x7d], 0x3c ; ret 0x7400
0x000002000053c805 : ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x0000020000147c9b : ror byte ptr [rax - 0x7d], 0xc1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200001633ff : ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x000002000053c82f : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x000002000070857f : ror byte ptr [rax - 0x7d], 0xc2 ; add al, 0x3b ; ret
0x000002000057ccc3 : ror byte ptr [rax - 0x7d], 0xc2 ; cmp byte ptr [rbp + 0x3b], cl ; ret 0xd17c
0x0000020000511333 : ror byte ptr [rax - 0x7d], 0xc2 ; or byte ptr [rcx + 0x3b], al ; ret
0x0000020000550a51 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx - 0x3d], bl ; xor al, al ; ret
0x00000200001399f7 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000004fb2d : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x000002000045e0cf : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x00000200000de070 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5f], al ; ret
0x00000200006f447b : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000046cce6 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; ret
0x0000020000115326 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011538d ; ret
0x00000200004ae9e9 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004aea50 ; ret
0x00000200004f831a : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004f8387 ; pop rbx ; pop rbp ; ret
0x000002000057260b : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000572674 ; ret
0x00000200003cf828 : ror byte ptr [rax - 0x7d], 0xc4 ; js 0x200003cf896 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000438d96 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r12 ; pop rdi ; ret
0x00000200000c6f55 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000011c3c5 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r14 ; ret
0x00000200004a9cc1 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000020000160046 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; pop rbx ; ret
0x00000200001c7f4b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000013e1c8 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200004d050b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000c0250 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x0000020000125b0b : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x000002000055d498 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200000b9670 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000057b10d : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rdi ; ret
0x000002000006d0c5 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000013b350 : ror byte ptr [rax - 0x7d], 0xc4 ; sub bl, al ; inc edx ; jmp 0x2000013b333
0x000002000015f9a7 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbp + 0x5b], bl ; ret
0x00000200000c6c87 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000eb50f : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rdi + 0x5b], bl ; ret
0x00000200000b0147 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rdi + 0x5e], bl ; ret
0x00000200004680a1 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rsi + 0x5d], bl ; ret
0x000002000013920b : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x000002000015c337 : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x000002000018b7fa : ror byte ptr [rax - 0x7d], 0xc7 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000200000738ad : ror byte ptr [rax - 0x7d], 0xd8 ; inc ebx ; xor eax, eax ; ret
0x00000200006c389a : ror byte ptr [rax - 0x7d], 0xf8 ; jb 0x200006c387d ; ret
0x000002000010cdd3 : ror byte ptr [rax - 0x7d], 0xf9 ; dec byte ptr [rdi] ; ret 0x4589
0x000002000003904e : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000200003960e7 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4102
0x0000020000636f25 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4540
0x0000020000510a20 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x00000200004e0270 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe804
0x0000020000420c1a : ror byte ptr [rax - 0x7d], 1 ; ret 0xe808
0x0000020000052313 : ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000124b54 : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000200005234c4 : ror byte ptr [rax - 0x7d], cl ; rol dword ptr [rsi], -0x18 ; salc ; outsd dx, dword ptr [rsi] ; ret 0x83ff
0x00000200006c5c78 : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200006c5daa : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000570e62 : ror byte ptr [rax - 0x7f], 0xc4 ; test al, 0 ; add byte ptr [rax], al ; ret
0x0000020000643920 : ror byte ptr [rax - 1], 0xca ; jne 0x20000643920 ; xor eax, eax ; ret
0x000002000006350b : ror byte ptr [rax - 1], 1 ; ret
0x0000020000380320 : ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200003a7456 : ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000017fdad : ror byte ptr [rax - 1], 1 ; ret 0x5ee8
0x0000020000038781 : ror byte ptr [rax - 1], 1 ; ret 0x8348
0x0000020000566c73 : ror byte ptr [rax - 1], 1 ; ret 0xc149
0x000002000039916a : ror byte ptr [rax - 1], cl ; ret 0x4566
0x00000200000cf6d7 : ror byte ptr [rax - 9], 1 ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200001fb558 : ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x0000020000129192 : ror byte ptr [rax - 9], cl ; ret 0xf000
0x00000200003ee2a6 : ror byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x0000020000634a8a : ror byte ptr [rax], 0x41 ; cmp edx, ecx ; jb 0x20000634a82 ; xor eax, eax ; ret
0x0000020000370772 : ror byte ptr [rax], 0x48 ; shr edx, 1 ; jne 0x20000370750 ; ret
0x00000200000b2835 : ror byte ptr [rax], 0x49 ; cmp eax, eax ; jb 0x200000b282c ; ret
0x00000200001d8608 : ror byte ptr [rax], 0x49 ; cmp eax, eax ; jb 0x200001d8608 ; ret
0x00000200000aec9c : ror byte ptr [rax], 0x49 ; dec ecx ; jne 0x200000aec96 ; ret
0x000002000014eb93 : ror byte ptr [rax], 0x49 ; dec edx ; jne 0x2000014eb77 ; ret
0x00000200001e71a1 : ror byte ptr [rax], 0x49 ; inc edx ; jmp 0x200001e7191
0x000002000012c2f8 : ror byte ptr [rax], 0x75 ; idiv edi ; ret 0x8348
0x0000020000643370 : ror byte ptr [rax], 0x83 ; jmp qword ptr [rax]
0x0000020000703493 : ror byte ptr [rax], 0x83 ; ret
0x0000020000241865 : ror byte ptr [rax], 0x88 ; ret 0x48
0x00000200001ba73b : ror byte ptr [rax], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000171d2b : ror byte ptr [rax], 0x8b ; ret
0x000002000019fbd6 : ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001b8b82 : ror byte ptr [rax], 0xff ; ret
0x00000200004a497f : ror byte ptr [rax], 1 ; add rsp, 0x28 ; ret
0x00000200001418b0 : ror byte ptr [rax], 1 ; ret
0x00000200000d305f : ror byte ptr [rax], cl ; mov rax, r8 ; add rsp, 0x38 ; ret
0x0000020000169412 : ror byte ptr [rbp + 0x2750143], 0x8b ; ret
0x00000200005205d2 : ror byte ptr [rbp + 0x2b], 0xcb ; call 0x200001500c7
0x0000020000007840 : ror byte ptr [rbp + 0x33], 0x34 ; ret
0x00000200001dc54a : ror byte ptr [rbp + 0x39], 0xc ; ret 0xde75
0x000002000019e6a4 : ror byte ptr [rbp + 0x3b], 1 ; ret
0x000002000014fd7d : ror byte ptr [rbp + 0xf41880c], 0xb6 ; ret 0xc903
0x0000020000062909 : ror byte ptr [rbp + 0xf440256], 0x22 ; ret 0x5f7
0x00000200000a869c : ror byte ptr [rbp + 3], cl ; ret 0xff48
0x000002000070ade8 : ror byte ptr [rbp - 0x17f3b6], cl ; ret
0x000002000070ae01 : ror byte ptr [rbp - 0x1917f2b6], cl ; ret
0x0000020000181d68 : ror byte ptr [rbp - 0x74b3c0b6], cl ; ret
0x00000200001f4913 : ror byte ptr [rbp - 0x74b3f3b6], cl ; ret
0x00000200004e67f7 : ror byte ptr [rbp - 0x74bbc5a1], cl ; ret
0x000002000017fade : ror byte ptr [rbp - 0x74bec4f4], cl ; ret 0xd523
0x000002000041b499 : ror byte ptr [rbp - 0x75], 0x14 ; ret 0x8b48
0x00000200001f4ad1 : ror byte ptr [rbp - 0x75], 0x14 ; ret 0xe9c1
0x00000200001f4b9d : ror byte ptr [rbp - 0x75], 0x14 ; ret 0xeec1
0x00000200001f1d14 : ror byte ptr [rbp - 0x75], 0x8c ; ret
0x00000200000ad255 : ror byte ptr [rbp - 0x75], 0xbc ; ret
0x000002000006b129 : ror byte ptr [rbp - 0x75], 1 ; ret
0x00000200000fb19a : ror byte ptr [rbp - 0x75], 1 ; ret 0xff49
0x0000020000124db1 : ror byte ptr [rbp - 0x75], 4 ; ret 0x8348
0x000002000002769e : ror byte ptr [rbp - 0x75], cl ; call 0x20041c501ed
0x00000200005acd6f : ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200001f72b3 : ror byte ptr [rbp - 0x77], 4 ; ret 0x8b41
0x00000200000c1f19 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x200000c1f28 ; ret
0x00000200006be95a : ror byte ptr [rbx + 0x1d1d89d3], 0x7a ; ret 0x4cff
0x000002000065ae04 : ror byte ptr [rbx + 0x200f44d1], cl ; ret
0x000002000012fa73 : ror byte ptr [rbx + 0x22762a05], 1 ; add byte ptr [rcx + 0x23], al ; ret
0x00000200006d6f1f : ror byte ptr [rbx + 0x3a8be], cl ; add byte ptr [rbp - 0x75], al ; ret 0x348
0x00000200003db5e4 : ror byte ptr [rbx + 0x3b411840], 1 ; ret
0x0000020000151de9 : ror byte ptr [rbx + 0x5a300fd0], 0x58 ; pop rcx ; ret
0x000002000047fd9a : ror byte ptr [rbx + 0x60087], 1 ; add byte ptr [rcx + 0x2b], al ; ret
0x00000200000aef50 : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x1676
0x00000200000251bf : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x2076
0x0000020000024edd : ror byte ptr [rbx + 0x6eac1d1], 0x3b ; ret 0x2676
0x0000020000703d4d : ror byte ptr [rbx + rbp - 0x38], cl ; mov rax, r9 ; ret
0x000002000016c23b : ror byte ptr [rbx + rcx*4 + 0x1d], 1 ; pop rbp ; push rbp ; adc dword ptr [rax], eax ; call r11
0x000002000055163e : ror byte ptr [rbx + rcx*4 + 0x44], 1 ; ret 0x4c18
0x000002000058ac22 : ror byte ptr [rbx + rcx*4 - 0x28], 0x3b ; ret
0x00000200005a0ab5 : ror byte ptr [rbx + rcx*4 - 0x3f], 0xe8 ; ret 0xadcb
0x00000200001c3236 : ror byte ptr [rbx + rdi - 0x3e], 0x7c ; loopne 0x200001c3237 ; ret
0x00000200001f7374 : ror byte ptr [rbx - 0x1f7cefbf], cl ; add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x00000200004297a7 : ror byte ptr [rbx - 0x3174b72d], 0xe8 ; or bl, al ; ret 0x44ff
0x0000020000522c43 : ror byte ptr [rbx - 0x3174b72d], 0xe8 ; xchg eax, esi ; ret 0x48ff
0x00000200005be127 : ror byte ptr [rbx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x00000200000e02aa : ror byte ptr [rbx - 0x3b7cb73d], 0x28 ; pop rdi ; pop rbx ; ret
0x000002000041b4d7 : ror byte ptr [rbx - 0x3b7cb73e], 1 ; pop rbp ; ret
0x000002000004ef8f : ror byte ptr [rbx - 0x3e7cb7ff], cl ; xor byte ptr [rbx], cl ; ret 0x4123
0x00000200006449b2 : ror byte ptr [rbx - 0x49791718], 1 ; ret 0x48ff
0x000002000062f728 : ror byte ptr [rbx - 0x71f1728], cl ; ret
0x00000200000d6ce1 : ror byte ptr [rbx - 0x74bbdbac], 0x4f ; add al, 0xe8 ; ret 0xfe83
0x00000200006be8ce : ror byte ptr [rbx - 0x76e2762d], 0x7d ; ret 0xe8ff
0x0000020000545b5e : ror byte ptr [rbx - 0xc08be3f], 0xff ; ret 0x3b41
0x000002000017654c : ror byte ptr [rbx], 0x1e ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001688b9 : ror byte ptr [rcx + 0x17144c05], 0 ; ret
0x00000200001530ed : ror byte ptr [rcx + 0x21], 1 ; ror byte ptr [rax], 1 ; ret
0x00000200004cc8f0 : ror byte ptr [rcx + 0x23], cl ; enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x0000020000523e0e : ror byte ptr [rcx + 0x29e83845], 1 ; ret 0xffd4
0x000002000013f709 : ror byte ptr [rcx + 0x2b], 1 ; ret
0x0000020000024c4f : ror byte ptr [rcx + 0x2b], cl ; ret
0x000002000007351f : ror byte ptr [rcx + 0x33], cl ; ret 0x8549
0x0000020000174d2b : ror byte ptr [rcx + 0x39], 0x54 ; ret 0x7508
0x00000200001e58c7 : ror byte ptr [rcx + 0x3b], 0xc ; ret 0x2572
0x0000020000100a53 : ror byte ptr [rcx + 0x3b], cl ; ret 0x3677
0x00000200001b3cf3 : ror byte ptr [rcx + 0x44302444], 0x8b ; ret 0x8d48
0x000002000004e7d6 : ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x00000200004b492c : ror byte ptr [rcx + 0x4589df4d], cl ; ret
0x000002000010a5f8 : ror byte ptr [rcx + 0xb], 1 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4b08
0x00000200003bdb82 : ror byte ptr [rcx + 0xf402454], 0xb6 ; ret
0x000002000004d633 : ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x00000200000aaf06 : ror byte ptr [rcx + 0xf], 0xaf ; ret 0x148
0x000002000048111f : ror byte ptr [rcx + 3], 1 ; ret
0x000002000000eddb : ror byte ptr [rcx + 3], 1 ; ret 0x3b49
0x000002000013f936 : ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x000002000058be72 : ror byte ptr [rcx + rcx*2], 3 ; ret 0x3b4c
0x000002000038a38e : ror byte ptr [rcx + rcx*4 + 0x35], 0xd2 ; ret 0xfff5
0x00000200005eb536 : ror byte ptr [rcx - 0x169fdb84], 0x50 ; ret 0xffe5
0x000002000059a694 : ror byte ptr [rcx - 0x17dfdba4], 0x4e ; ret 0xffe2
0x000002000064daaf : ror byte ptr [rcx - 0x381c59f3], 0xff ; ret
0x0000020000463a97 : ror byte ptr [rcx - 0x3b7cb7f1], 0x20 ; pop rdi ; ret
0x000002000056f13d : ror byte ptr [rcx - 0x3f], 0xe8 ; add al, 0xf6 ; ret 0x7403
0x00000200004d9278 : ror byte ptr [rcx - 0x3f], 0xe8 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x00000200001a0b09 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x000002000004ea65 : ror byte ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000540859 : ror byte ptr [rcx - 0x73], 0x77 ; sbb byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000602ce : ror byte ptr [rcx - 0x74b7efad], 1 ; ret
0x000002000001801a : ror byte ptr [rcx - 0x74beafbf], 0xc0 ; ret
0x00000200000627d5 : ror byte ptr [rcx - 0x75], 0x4c ; ret 0x4848
0x00000200004f4db2 : ror byte ptr [rcx - 0x75], 0x8c ; ret
0x000002000000b9f6 : ror byte ptr [rcx - 0x75], 0xca ; call r10
0x00000200005cb8d9 : ror byte ptr [rcx - 0x75], 0xcb ; add rsp, 0x28 ; jmp qword ptr [r10]
0x0000020000544a8e : ror byte ptr [rcx - 0x75], 0xd6 ; call 0x2000016af87
0x00000200001cf278 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r12 ; call r15
0x000002000057b1ac : ror byte ptr [rcx - 0x75], 0xe3 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006cab43 : ror byte ptr [rcx - 0x75], 0xe3 ; pop rbp ; ret
0x000002000014aec8 : ror byte ptr [rcx - 0x75], 1 ; add cl, byte ptr [rcx - 0x7f] ; ret 0x160
0x00000200001f1db6 : ror byte ptr [rcx - 0x75], 1 ; ret
0x000002000004c09e : ror byte ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200004fc0d6 : ror byte ptr [rcx - 0x75], 1 ; ret 0xf749
0x000002000047b158 : ror byte ptr [rcx - 0x75], cl ; fadd dword ptr [rcx - 0x75] ; ret 0x8944
0x000002000010b1bd : ror byte ptr [rcx - 0x75], cl ; ret
0x00000200000bde8c : ror byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200001f0414 : ror byte ptr [rcx - 0x75], cl ; ret 0x8d44
0x000002000010ae28 : ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200006c0563 : ror byte ptr [rcx - 0x75], cl ; ret 0xff49
0x000002000019c90d : ror byte ptr [rcx - 0x7699c7bf], 0x41 ; ret
0x00000200004cee10 : ror byte ptr [rcx - 0x77], 0x13 ; ret
0x000002000070348d : ror byte ptr [rcx - 0x77], 1 ; adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x00000200001b8dfb : ror byte ptr [rcx - 0x77], 1 ; adc ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000bd09e : ror byte ptr [rcx - 0x77], 1 ; or dh, dh ; ret
0x000002000012c1c9 : ror byte ptr [rcx - 0x77], 8 ; ret
0x000002000017504e : ror byte ptr [rcx - 0x77], 9 ; ret
0x0000020000488068 : ror byte ptr [rcx - 0x7814a7bb], 0x8b ; ret
0x00000200005af096 : ror byte ptr [rcx - 0x7cb788bb], 1 ; ret 0xe802
0x000002000012726f : ror byte ptr [rcx - 0x7d], 0x7c ; ret 8
0x0000020000705e98 : ror byte ptr [rcx - 0x7d], 0xc1 ; or byte ptr [rax - 0x7f], cl ; ret 0x1000
0x000002000050a40a : ror byte ptr [rcx - 0x7d], 0xc1 ; or byte ptr [rbp + 0x3b], al ; ret 0xcc72
0x000002000064d956 : ror byte ptr [rcx - 0x7d], 0xc6 ; adc byte ptr [rbx], bh ; ret 0xf172
0x0000020000400169 : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x20049028c79
0x00000200004a69e5 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000002000002194d : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4808
0x00000200001a22c4 : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000200004c5b6c : ror byte ptr [rcx - 1], 1 ; enter -0x128b, -0x75 ; ret 0xffb9
0x00000200001419b0 : ror byte ptr [rcx - 1], 1 ; leave ; jne 0x200001419a4 ; mov al, dl ; ret
0x0000020000614605 : ror byte ptr [rcx - 1], 1 ; ret 0x1489
0x0000020000503fc0 : ror byte ptr [rcx - 1], 1 ; ret 0x4366
0x0000020000634330 : ror byte ptr [rdi - 0x75], 0xc ; ret
0x000002000017a483 : ror byte ptr [rdi], 0x30 ; ret
0x000002000007c661 : ror byte ptr [rdi], 0x30 ; ret 0
0x000002000017a43c : ror byte ptr [rdi], 0x32 ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000570941 : ror byte ptr [rdi], 0x44 ; ret 0x189
0x000002000055fdf0 : ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x000002000056026c : ror byte ptr [rdi], 0x44 ; ret 0x578d
0x00000200005600f9 : ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x000002000055f4cb : ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x0000020000560b8e : ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x0000020000171623 : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000002000036be4d : ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x000002000017160e : ror byte ptr [rdi], 0x44 ; ret 0x8d41
0x00000200004cdbc1 : ror byte ptr [rdi], 0x44 ; ret 0x90c3
0x0000020000560d22 : ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x000002000036bb3d : ror byte ptr [rdi], 0x44 ; ret 0xaba
0x0000020000020649 : ror byte ptr [rdi], 0x44 ; ret 0xc103
0x000002000061690b : ror byte ptr [rdi], 0x45 ; ret 0xdce9
0x00000200000ca000 : ror byte ptr [rdi], 0x83 ; cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xba49
0x0000020000660902 : ror byte ptr [rdi], 0x84 ; adc ecx, dword ptr [rdx - 0x74bb0003] ; ret
0x000002000040cb2a : ror byte ptr [rdi], 0x84 ; add ax, word ptr [rax] ; add dh, dh ; ret 0x7503
0x000002000057c209 : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x8b440000 ; ret
0x000002000049b766 : ror byte ptr [rdi], 0x84 ; and edi, dword ptr [rdx] ; clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200001fcd38 : ror byte ptr [rdi], 0x84 ; call 0x1ffc416cd2f
0x000002000038900d : ror byte ptr [rdi], 0x84 ; fimul dword ptr [rdx + 0x25] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004fe995 : ror byte ptr [rdi], 0x84 ; frstor dword ptr [rdx - 0x74b3fff1] ; ret
0x000002000001f7fa : ror byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x00000200001f8e96 : ror byte ptr [rdi], 0x84 ; jmp rsp
0x0000020000381cb0 : ror byte ptr [rdi], 0x84 ; lahf ; call qword ptr [rax]
0x0000020000629f68 : ror byte ptr [rdi], 0x84 ; lahf ; ret
0x00000200004cb5f4 : ror byte ptr [rdi], 0x84 ; leave ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200004cc3fd : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; call qword ptr [rax]
0x00000200005e0a33 : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; ret 0xffd9
0x00000200003aa3f2 : ror byte ptr [rdi], 0x84 ; mov ebx, 0xf7002862 ; ret
0x000002000014cce3 : ror byte ptr [rdi], 0x84 ; mov esi, 0xf6000b30 ; ret
0x000002000001aca4 : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000bd557 : ror byte ptr [rdi], 0x84 ; neg dword ptr [rdx + 0x11] ; add dh, dh ; ret
0x00000200004d8400 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000471d93 : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; ret
0x000002000058d7f9 : ror byte ptr [rdi], 0x84 ; pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200007096ca : ror byte ptr [rdi], 0x84 ; push rbp ; pop rdi ; cld ; dec dword ptr [rax - 0x7d] ; ret 0x4410
0x00000200003c3f98 : ror byte ptr [rdi], 0x84 ; push rcx ; ret
0x00000200005f6c3c : ror byte ptr [rdi], 0x84 ; pushfq ; ret
0x0000020000024b09 : ror byte ptr [rdi], 0x84 ; ret
0x00000200000b9260 : ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004f44b5 : ror byte ptr [rdi], 0x84 ; ret 0x11ea
0x00000200004a8412 : ror byte ptr [rdi], 0x84 ; ret 0x13b6
0x000002000048381a : ror byte ptr [rdi], 0x84 ; ret 0x1525
0x00000200004b35df : ror byte ptr [rdi], 0x84 ; ret 0x155b
0x000002000005e193 : ror byte ptr [rdi], 0x84 ; ret 0x1711
0x000002000006b549 : ror byte ptr [rdi], 0x84 ; ret 0x1919
0x000002000045f3d2 : ror byte ptr [rdi], 0x84 ; ret 0x1b70
0x000002000037b647 : ror byte ptr [rdi], 0x84 ; ret 0x26ae
0x00000200003afd13 : ror byte ptr [rdi], 0x84 ; ret 0x276e
0x000002000011949c : ror byte ptr [rdi], 0x84 ; ret 0xd3d
0x00000200001f9deb : ror byte ptr [rdi], 0x84 ; ret 0xe1e6
0x00000200001f321f : ror byte ptr [rdi], 0x84 ; ret 0xe628
0x0000020000516f47 : ror byte ptr [rdi], 0x84 ; ret 0xec1e
0x00000200001d3907 : ror byte ptr [rdi], 0x84 ; ret 0xece2
0x00000200000dfecc : ror byte ptr [rdi], 0x84 ; ret 0xf
0x0000020000065d47 : ror byte ptr [rdi], 0x84 ; ret 0xfa75
0x00000200003fecb2 : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000020000380890 : ror byte ptr [rdi], 0x84 ; ret 1
0x000002000045f418 : ror byte ptr [rdi], 0x84 ; ret 2
0x00000200003d8128 : ror byte ptr [rdi], 0x84 ; ret 4
0x00000200000c0dd6 : ror byte ptr [rdi], 0x84 ; ret 5
0x00000200000a9e41 : ror byte ptr [rdi], 0x84 ; sbb al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000200001507d8 : ror byte ptr [rdi], 0x84 ; sbb ch, byte ptr [rax + 9] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ee505 : ror byte ptr [rdi], 0x84 ; stc ; ret
0x000002000047fbc2 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004f6d47 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x00000200005e4135 : ror byte ptr [rdi], 0x84 ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x000002000066068c : ror byte ptr [rdi], 0x85 ; add dword ptr cs:[rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200006d0f4a : ror byte ptr [rdi], 0x85 ; add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004375ef : ror byte ptr [rdi], 0x85 ; add eax, dword ptr [r8] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000042030e : ror byte ptr [rdi], 0x85 ; and esi, dword ptr [rax + 0x20] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a657b : ror byte ptr [rdi], 0x85 ; call qword ptr [r10]
0x0000020000501b6a : ror byte ptr [rdi], 0x85 ; cdq ; cmp cl, byte ptr [rsi] ; add bh, bh ; ret
0x00000200001ea6fd : ror byte ptr [rdi], 0x85 ; clc ; ret
0x00000200003fbdd9 : ror byte ptr [rdi], 0x85 ; cld ; jmp qword ptr [rcx]
0x00000200001169cc : ror byte ptr [rdi], 0x85 ; cmp ebp, eax ; or eax, dword ptr [rax] ; mov eax, edx ; ret
0x000002000014306a : ror byte ptr [rdi], 0x85 ; fisttp qword ptr [r10] ; add bl, dh ; ret
0x00000200000b5ec3 : ror byte ptr [rdi], 0x85 ; mov ebx, 0xe9fffffe ; ret 0xf647
0x00000200006315d9 : ror byte ptr [rdi], 0x85 ; mov gs, r9d ; call rcx
0x0000020000462150 : ror byte ptr [rdi], 0x85 ; out dx, eax ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000364847 : ror byte ptr [rdi], 0x85 ; pop rbp ; ret 0
0x000002000005bcd3 : ror byte ptr [rdi], 0x85 ; ret
0x00000200001fce04 : ror byte ptr [rdi], 0x85 ; ret 0
0x00000200004ac77f : ror byte ptr [rdi], 0x85 ; ret 0x13c5
0x000002000039cf69 : ror byte ptr [rdi], 0x85 ; ret 0x1745
0x000002000042d3cb : ror byte ptr [rdi], 0x85 ; ret 0x1b80
0x00000200003cbb77 : ror byte ptr [rdi], 0x85 ; ret 0x25a5
0x000002000014f0ac : ror byte ptr [rdi], 0x85 ; ret 0xb0d
0x0000020000516b8c : ror byte ptr [rdi], 0x85 ; ret 0xdd2
0x00000200005e2e02 : ror byte ptr [rdi], 0x85 ; ret 0xe3ab
0x00000200005eb528 : ror byte ptr [rdi], 0x85 ; ret 0xe5c1
0x00000200005f3413 : ror byte ptr [rdi], 0x85 ; ret 0xec61
0x00000200006dbbed : ror byte ptr [rdi], 0x85 ; ret 0xff7e
0x000002000039c8d7 : ror byte ptr [rdi], 0x85 ; ret 0xfffc
0x00000200001899b4 : ror byte ptr [rdi], 0x85 ; ret 1
0x000002000004ed32 : ror byte ptr [rdi], 0x85 ; ret 2
0x0000020000032598 : ror byte ptr [rdi], 0x85 ; ret 3
0x000002000003cbc7 : ror byte ptr [rdi], 0x85 ; rol byte ptr [rsp + rbx], cl ; add byte ptr [rax - 9], cl ; ret
0x00000200000633b8 : ror byte ptr [rdi], 0x85 ; sahf ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000020000505bfa : ror byte ptr [rdi], 0x85 ; shl dword ptr [rax - 0x74b7ffef], cl ; ret
0x0000020000378dc1 : ror byte ptr [rdi], 0x85 ; shr byte ptr [rdx], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200003647b6 : ror byte ptr [rdi], 0x85 ; stosb byte ptr [rdi], al ; ret 0
0x000002000042b54e : ror byte ptr [rdi], 0x85 ; test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000486093 : ror byte ptr [rdi], 0x85 ; test eax, 0x458b001a ; ret
0x00000200001517a6 : ror byte ptr [rdi], 0x85 ; test eax, 0xf6fffd78 ; ret
0x000002000004cec4 : ror byte ptr [rdi], 0x85 ; xchg eax, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004804be : ror byte ptr [rdi], 0x85 ; xlatb ; ret 0x1a
0x00000200000bd3da : ror byte ptr [rdi], 0x87 ; add dword ptr [r8], r8d ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x0000020000509722 : ror byte ptr [rdi], 0x88 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a655e : ror byte ptr [rdi], 0x88 ; add dword ptr ss:[rax], eax ; add bh, bh ; ret
0x00000200000bb2d5 : ror byte ptr [rdi], 0x88 ; add eax, 0x83410000 ; call qword ptr [rax]
0x00000200004faa87 : ror byte ptr [rdi], 0x88 ; add qword ptr [rax], rax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000001163b : ror byte ptr [rdi], 0x88 ; call qword ptr [rcx]
0x0000020000627102 : ror byte ptr [rdi], 0x88 ; call qword ptr [rdx]
0x000002000012f8a4 : ror byte ptr [rdi], 0x88 ; insb byte ptr [rdi], dx ; mov dl, 0xc ; add bh, bh ; ret
0x00000200006c297e : ror byte ptr [rdi], 0x88 ; jmp rcx
0x0000020000104c09 : ror byte ptr [rdi], 0x88 ; pop rsp ; ret
0x000002000049f9db : ror byte ptr [rdi], 0x88 ; push 0xc2 ; add dword ptr [rax], eax ; jmp 0x200004bbc1f
0x000002000038ffbd : ror byte ptr [rdi], 0x88 ; ret
0x000002000037802f : ror byte ptr [rdi], 0x88 ; ret 0
0x00000200004e803b : ror byte ptr [rdi], 0x88 ; ret 0x14b0
0x00000200006f5847 : ror byte ptr [rdi], 0x88 ; ret 0x15c
0x000002000042a282 : ror byte ptr [rdi], 0x88 ; ret 0x1e41
0x000002000040cc87 : ror byte ptr [rdi], 0x88 ; ret 0x1ee6
0x00000200006e9cd4 : ror byte ptr [rdi], 0x88 ; ret 0x24c
0x000002000038692c : ror byte ptr [rdi], 0x88 ; ret 0x2a6b
0x00000200006be229 : ror byte ptr [rdi], 0x88 ; ret 0x506
0x00000200003bae7b : ror byte ptr [rdi], 0x88 ; ret 0xd
0x00000200001154b7 : ror byte ptr [rdi], 0x88 ; ret 0xdc6
0x00000200005eb140 : ror byte ptr [rdi], 0x88 ; ret 0xf211
0x00000200000d5f16 : ror byte ptr [rdi], 0x88 ; ret 0xf27
0x000002000060c227 : ror byte ptr [rdi], 0x88 ; ret 0xffe1
0x00000200003e1271 : ror byte ptr [rdi], 0x88 ; ret 0xfffc
0x000002000006892e : ror byte ptr [rdi], 0x88 ; ret 1
0x00000200004af97a : ror byte ptr [rdi], 0x88 ; ret 2
0x000002000050d3b3 : ror byte ptr [rdi], 0x88 ; sar cl, cl ; call rcx
0x000002000012e063 : ror byte ptr [rdi], 0x88 ; stosd dword ptr [rdi], eax ; add al, 0xee ; inc dword ptr [rcx - 0x75] ; ret
0x00000200004fd195 : ror byte ptr [rdi], 0x88 ; test byte ptr [rax], 0 ; add bh, bh ; ret
0x00000200001f4bb8 : ror byte ptr [rdi], 0x89 ; mov dword ptr [rax - 0x74b3001b], edx ; ret
0x000002000050fc47 : ror byte ptr [rdi], 0x89 ; ret
0x00000200006f853d : ror byte ptr [rdi], 0x89 ; ret 0x132
0x00000200005ed3af : ror byte ptr [rdi], 0x89 ; ret 0xef04
0x00000200004aaf5e : ror byte ptr [rdi], 0x8c ; ret 0x17b2
0x0000020000056bf6 : ror byte ptr [rdi], 0x8f ; ret
0x00000200000e77e3 : ror byte ptr [rdi], 0x94 ; ret
0x00000200006c74cc : ror byte ptr [rdi], 0x94 ; ret 0x9de9
0x00000200001c7f48 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200001b3e6e : ror byte ptr [rdi], 0x95 ; ret
0x000002000052aca2 : ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x0000020000373ebc : ror byte ptr [rdi], 0x99 ; ret
0x0000020000515d6b : ror byte ptr [rdi], 0x9e ; ret
0x00000200000ba2f3 : ror byte ptr [rdi], 0xb6 ; leave ; mov cr8, rcx ; ret
0x00000200003f0847 : ror byte ptr [rdi], 0xb7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x0000020000467ea0 : ror byte ptr [rdi], 0xb7 ; add r9b, byte ptr [r8 + 0x2b] ; ret
0x0000020000556a9e : ror byte ptr [rdi], 0xb7 ; and al, 0x66 ; mov dword ptr [rbp - 0x3e], eax ; jmp 0x20000556ac5
0x000002000019c129 : ror byte ptr [rdi], 0xb7 ; ret
0x00000200005f5882 : ror byte ptr [rdi], 0xb7 ; ret 0x5589
0x00000200005c93a3 : ror byte ptr [rdi], 0xbf ; les r8d, ptr [r15 + rcx - 0x41] ; ret 0x8944
0x00000200001e0228 : ror byte ptr [rdi], 1 ; and esp, 0x1e ; lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001f4c53 : ror byte ptr [rdi], 1 ; mov dh, 0x41 ; or dh, byte ptr [rbx] ; sal dh, 1 ; ret 0xf08
0x00000200001e631c : ror byte ptr [rdi], 1 ; or dword ptr [rcx + 0x48ffe574], 0xffffff8b ; ret 0xb948
0x0000020000601bc0 : ror byte ptr [rdi], 1 ; ret 0x70e9
0x000002000016d204 : ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200001c60ea : ror byte ptr [rdi], 1 ; ret 0xe0c0
0x00000200000c795f : ror byte ptr [rdi], 1 ; scasb al, byte ptr [rdi] ; clc ; ret
0x00000200000375fd : ror byte ptr [rdi], 1 ; test byte ptr [rbp - 0x1000000], bh ; ret 0x5189
0x000002000011b281 : ror byte ptr [rdi], 1 ; test byte ptr [rbp - 0x9ffffff], ah ; ret
0x00000200000b8b1e : ror byte ptr [rdi], 1 ; test ecx, edx ; std ; adc al, byte ptr [rax] ; ret
0x000002000006f4bb : ror byte ptr [rdi], 1 ; xchg byte ptr [rbp + rdi*8 - 1], al ; ljmp ptr [rbx] ; ret
0x0000020000064365 : ror byte ptr [rdi], 1 ; xchg dword ptr [rax], edi ; fst dword ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x8348
0x0000020000007aca : ror byte ptr [rdi], 1 ; xchg dword ptr [rdx], edi ; sub eax, 0x8b48001e ; ret 0xc148
0x000002000018691f : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000020000151deb : ror byte ptr [rdi], 1 ; xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x00000200005ba1bf : ror byte ptr [rdi], cl ; ret
0x000002000047338d : ror byte ptr [rdi], cl ; test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x00000200000274aa : ror byte ptr [rdi], cl ; test byte ptr [rcx - 0xa000000], al ; ret 0x7501
0x0000020000470f4b : ror byte ptr [rdi], cl ; test ch, dh ; add byte ptr [rax], al ; add dh, dh ; ret 0xf03
0x000002000014cca2 : ror byte ptr [rdi], cl ; test dh, dh ; xor byte ptr [rbx], cl ; add bh, dh ; ret
0x0000020000172ad1 : ror byte ptr [rdi], cl ; test dword ptr [rax + rax + 0x3b450000], eax ; ret
0x000002000002b989 : ror byte ptr [rdi], cl ; test dword ptr [rax], ebp ; lahf ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000155f18 : ror byte ptr [rdi], cl ; test dword ptr [rbx + rax - 0xbf0000], esp ; ret 0x9ce9
0x00000200000edca7 : ror byte ptr [rdi], cl ; test dword ptr [rdi - 0x9fff248], edi ; ret
0x0000020000364518 : ror byte ptr [rdi], cl ; test eax, ecx ; ret 0
0x0000020000140871 : ror byte ptr [rdi], cl ; test edi, eax ; stosb byte ptr [rdi], al ; or eax, dword ptr [rax] ; ret
0x000002000066415b : ror byte ptr [rdi], cl ; test esi, edi ; add byte ptr fs:[rax], al ; ret
0x00000200003975bb : ror byte ptr [rdi], cl ; test esi, edx ; lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; ret
0x000002000001ad6a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfc24
0x000002000000d3be : ror byte ptr [rip + 0x41c22b4c], cl ; mov eax, eax ; ret
0x0000020000085e75 : ror byte ptr [rip + 0x48354d7], cl ; ret 0x3b3
0x000002000047b78c : ror byte ptr [rsi + rdx], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200002644d1 : ror byte ptr [rsi], 0x20 ; ret 0x4e
0x00000200004476fa : ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x0000020000587543 : ror dword ptr [r15], 0 ; mov eax, 0x2d0 ; ret
0x000002000014686d : ror dword ptr [r9 + 0x12482], 0 ; ret
0x00000200000fe56b : ror dword ptr [r9 - 0x75], 1 ; ret 0x44c3
0x00000200004fbb1f : ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200000a695b : ror dword ptr [rax + 0x2b], 0x42 ; sbb byte ptr [rax + 3], cl ; ret
0x00000200004fbb22 : ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200006e7021 : ror dword ptr [rax + 0x33], 1 ; ror byte ptr [rax - 0x2d], 1 ; ret 0xff41
0x000002000018691b : ror dword ptr [rax + 0x39], 0x5d ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200000aa6e2 : ror dword ptr [rax + 0x39], 0x7c ; ret
0x000002000015468d : ror dword ptr [rax + 0x3b], -0x3e ; jb 0x2000015468a ; ret
0x00000200001be1bb : ror dword ptr [rax + 0x3b], 1 ; ret 0xe272
0x00000200004a1d39 : ror dword ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200006f2860 : ror dword ptr [rax + 0x48af0d44], -0x7d ; ret 0x4502
0x000002000011ae4c : ror dword ptr [rax + 0xb], -0x3f ; ret
0x0000020000131c0c : ror dword ptr [rax + 0xb], 1 ; ret 0x348
0x0000020000127637 : ror dword ptr [rax + 0xf], -0x51 ; ret
0x0000020000390b61 : ror dword ptr [rax + 0xf], -0x5d ; ret 0x2272
0x0000020000619921 : ror dword ptr [rax + 0xf], -0x5d ; ret 0x373
0x0000020000390b41 : ror dword ptr [rax + 0xf], -0x5d ; ret 0xd72
0x000002000012761c : ror dword ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0x8b4a
0x00000200004d97e1 : ror dword ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x00000200003bd7c7 : ror dword ptr [rax + 3], 0 ; add al, ch ; call qword ptr [rsi]
0x000002000014fd89 : ror dword ptr [rax + 3], 1 ; ret 0x8b49
0x0000020000154871 : ror dword ptr [rax - 0x2f], -8 ; dec rax ; ret
0x00000200004af1ac : ror dword ptr [rax - 0x2f], -8 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014a3b0 : ror dword ptr [rax - 0x2f], -8 ; ret
0x0000020000144488 : ror dword ptr [rax - 0x3f], -0x18 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x0000020000028a6f : ror dword ptr [rax - 0x3f], -0x18 ; and byte ptr [rbp + 0x2b], cl ; ret
0x000002000006d07b : ror dword ptr [rax - 0x3f], -0x18 ; and byte ptr [rcx + 0x3b], cl ; ret 0x1b74
0x00000200000e99b0 : ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x00000200000138d3 : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rbx], dh ; ret 0xfa8
0x00000200001d2c44 : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x000002000046dde5 : ror dword ptr [rax - 0x3f], -0x18 ; or al, 0x3b ; ret 0x870f
0x0000020000045dee : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200006f1cdc : ror dword ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000102bb9 : ror dword ptr [rax - 0x73], 0x14 ; ret 0xc148
0x0000020000475db3 : ror dword ptr [rax - 0x73], 0x15 ; jne 0x20000475d5c ; ret 0x49ff
0x000002000010f909 : ror dword ptr [rax - 0x73], 0x4d ; call 0x20010d37a61
0x00000200006385b5 : ror dword ptr [rax - 0x73], 0xd ; add eax, eax ; ret
0x00000200005f4c53 : ror dword ptr [rax - 0x73], 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200000c8508 : ror dword ptr [rax - 0x73], 1 ; adc r8b, r13b ; sahf ; ret 0xa
0x00000200004fd23c : ror dword ptr [rax - 0x73], cl ; adc byte ptr [rcx + 3], cl ; ret
0x00000200001f4ae1 : ror dword ptr [rax - 0x75], -0x31 ; call r10
0x0000020000055144 : ror dword ptr [rax - 0x75], -0x6c ; ret 0xf880
0x0000020000192cd1 : ror dword ptr [rax - 0x75], -0x74 ; ret
0x0000020000162121 : ror dword ptr [rax - 0x75], 0x14 ; ret 0x8548
0x0000020000566bf8 : ror dword ptr [rax - 0x75], 0x7c ; ret
0x00000200004f3b0f : ror dword ptr [rax - 0x75], 1 ; add bh, bh ; ret
0x00000200006cca19 : ror dword ptr [rax - 0x75], 1 ; cmp byte ptr [r13 + 0x2b], r8b ; ret 0x8b4a
0x000002000042155f : ror dword ptr [rax - 0x75], 1 ; enter -0x6f18, -0x16 ; ret 0x48ff
0x0000020000702db6 : ror dword ptr [rax - 0x75], 1 ; or byte ptr [r8 - 0x7d], cl ; ret 0x4810
0x000002000010707d : ror dword ptr [rax - 0x75], 1 ; or eax, ebp ; ret 0xfffe
0x00000200000191cf : ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000372226 : ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x0000020000025869 : ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000009cf5 : ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000192c7c : ror dword ptr [rax - 0x75], 1 ; ret 0xf41
0x000002000052a3f5 : ror dword ptr [rax - 0x75], cl ; enter 0x12e8, 7 ; ret
0x0000020000416ea5 : ror dword ptr [rax - 0x75], cl ; iretd ; call 0x2000042316e
0x000002000066009c : ror dword ptr [rax - 0x75], cl ; iretd ; call 0x2000065c39a
0x00000200003d025c : ror dword ptr [rax - 0x75], cl ; iretd ; call r10
0x0000020000121e1c : ror dword ptr [rax - 0x75], cl ; iretd ; call r15
0x000002000005c3c2 : ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000015c02c : ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x0000020000010df0 : ror dword ptr [rax - 0x75], cl ; iretd ; mov rax, rsi ; call rax
0x0000020000177b3e : ror dword ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000007119e : ror dword ptr [rax - 0x75], cl ; ret
0x000002000058da27 : ror dword ptr [rax - 0x75], cl ; retf ; call rax
0x000002000047d71d : ror dword ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r12
0x0000020000542f89 : ror dword ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000016d2b1
0x000002000026f0e2 : ror dword ptr [rax - 0x77], cl ; push rbp ; dec dword ptr [rax - 9] ; ret 0xfff
0x00000200001792e8 : ror dword ptr [rax - 0x7b], -0x3f ; setne al ; ret
0x000002000013638b : ror dword ptr [rax - 0x7b], -0x40 ; je 0x2000013639d ; mov qword ptr [r8], rax ; ret
0x000002000058be8e : ror dword ptr [rax - 0x7b], 1 ; leave ; jne 0x2000058be9f ; xor al, al ; ret
0x000002000064abac : ror dword ptr [rax - 0x7b], 1 ; sal byte ptr [rbx + rdx + 0x44], 0x8b ; ret 0x345
0x00000200004cd4bf : ror dword ptr [rax - 0x7d], -0x36 ; adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x00000200006d5f24 : ror dword ptr [rax - 0x7d], -0x39 ; or byte ptr [rax - 0x2d], cl ; ret 0x2b49
0x00000200000a5208 : ror dword ptr [rax - 0x7d], -0x3c ; pop rax ; pop rbp ; pop rbx ; ret
0x00000200000bf23e : ror dword ptr [rax - 0x7d], -0x3c ; pop rax ; ret
0x0000020000038cf6 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000002000017681e : ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x00000200003ab399 : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop r14 ; ret
0x000002000054dd25 : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rsi ; ret
0x0000020000054c32 : ror dword ptr [rax - 0x7d], -0x3c ; ret
0x000002000015e791 : ror dword ptr [rax - 0x7d], -0x3e ; adc byte ptr [rbp + 0x3b], cl ; ret
0x000002000017fc06 : ror dword ptr [rax - 0x7d], -0x3f ; or byte ptr [rax + 0x3b], cl ; ret 0xcd72
0x0000020000485a65 : ror dword ptr [rax - 0x7d], 0x3c ; or al, byte ptr [rax] ; setne al ; ret
0x0000020000007a3b : ror dword ptr [rax - 0x7d], 1 ; ret
0x0000020000114dca : ror dword ptr [rax - 0x7d], 1 ; ret 0x4804
0x00000200005abd8f : ror dword ptr [rax - 0x7d], 1 ; ret 0xb902
0x000002000047b627 : ror dword ptr [rax - 0x7d], cl ; rcr dword ptr [rcx + rax*2], -0x75 ; ret 0x3b49
0x00000200001a1a0b : ror dword ptr [rax - 0x7d], cl ; ret
0x00000200000cb085 : ror dword ptr [rax - 0x7d], cl ; ret 0x4104
0x00000200003b30de : ror dword ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006f3e46 : ror dword ptr [rax - 0x7d], cl ; ret 0xe828
0x00000200003bd7c4 : ror dword ptr [rax - 0x7f], cl ; ror dword ptr [rax + 3], 0 ; add al, ch ; call qword ptr [rsi]
0x00000200000c6e25 : ror dword ptr [rax - 1], -0x3e ; jmp 0x200000c6e0c
0x00000200003c43d1 : ror dword ptr [rax - 1], 1 ; ret
0x00000200004c9669 : ror dword ptr [rax - 1], 1 ; ret 0x4466
0x000002000062eac6 : ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200006d17e1 : ror dword ptr [rax - 9], 1 ; loop 0x200006d181e ; ret 0x8948
0x00000200006d19d6 : ror dword ptr [rax - 9], 1 ; loop 0x200006d1a13 ; ret 0x8948
0x00000200006d2623 : ror dword ptr [rax - 9], 1 ; loop 0x200006d2660 ; ret 0x8948
0x00000200006d2ccb : ror dword ptr [rax - 9], 1 ; loop 0x200006d2d08 ; ret 0x8948
0x00000200006d3a61 : ror dword ptr [rax - 9], 1 ; loop 0x200006d3a9e ; ret 0x8948
0x00000200006d6467 : ror dword ptr [rax - 9], 1 ; loop 0x200006d64a4 ; ret 0x8948
0x00000200006d66d7 : ror dword ptr [rax - 9], 1 ; loop 0x200006d6714 ; ret 0x8948
0x00000200006d733c : ror dword ptr [rax - 9], 1 ; loop 0x200006d7379 ; ret 0x8948
0x00000200006d7bdc : ror dword ptr [rax - 9], 1 ; loop 0x200006d7c19 ; ret 0x8948
0x00000200006d812f : ror dword ptr [rax - 9], 1 ; loop 0x200006d816c ; ret 0x8948
0x00000200006d886a : ror dword ptr [rax - 9], 1 ; loop 0x200006d88a7 ; ret 0x8948
0x00000200006d911a : ror dword ptr [rax - 9], 1 ; loop 0x200006d9157 ; ret 0x8948
0x00000200006d95ca : ror dword ptr [rax - 9], 1 ; loop 0x200006d9607 ; ret 0x8948
0x00000200006d9cfe : ror dword ptr [rax - 9], 1 ; loop 0x200006d9d3b ; ret 0x8948
0x00000200006da5c1 : ror dword ptr [rax - 9], 1 ; loop 0x200006da5fe ; ret 0x8948
0x00000200006daa55 : ror dword ptr [rax - 9], 1 ; loop 0x200006daa92 ; ret 0x8948
0x00000200006db271 : ror dword ptr [rax - 9], 1 ; loop 0x200006db2ae ; ret 0x8948
0x00000200006dbb48 : ror dword ptr [rax - 9], 1 ; loop 0x200006dbb85 ; ret 0x8948
0x00000200006dc051 : ror dword ptr [rax - 9], 1 ; loop 0x200006dc08e ; ret 0x8948
0x00000200006dc7f2 : ror dword ptr [rax - 9], 1 ; loop 0x200006dc82f ; ret 0x8948
0x00000200006dd0a2 : ror dword ptr [rax - 9], 1 ; loop 0x200006dd0df ; ret 0x8948
0x00000200006dd564 : ror dword ptr [rax - 9], 1 ; loop 0x200006dd5a1 ; ret 0x8948
0x00000200006dddc3 : ror dword ptr [rax - 9], 1 ; loop 0x200006dde00 ; ret 0x8948
0x00000200006de6aa : ror dword ptr [rax - 9], 1 ; loop 0x200006de6e7 ; ret 0x8948
0x00000200006deb90 : ror dword ptr [rax - 9], 1 ; loop 0x200006debcd ; ret 0x8948
0x00000200006df133 : ror dword ptr [rax - 9], 1 ; loop 0x200006df170 ; ret 0x8948
0x00000200006df5dc : ror dword ptr [rax - 9], 1 ; loop 0x200006df619 ; ret 0x8948
0x00000200006dfac1 : ror dword ptr [rax - 9], 1 ; loop 0x200006dfafe ; ret 0x8948
0x00000200006dffae : ror dword ptr [rax - 9], 1 ; loop 0x200006dffeb ; ret 0x8948
0x00000200006e0384 : ror dword ptr [rax - 9], 1 ; loop 0x200006e03c1 ; ret 0x8948
0x00000200006e0768 : ror dword ptr [rax - 9], 1 ; loop 0x200006e07a5 ; ret 0x8948
0x00000200006e0b5a : ror dword ptr [rax - 9], 1 ; loop 0x200006e0b97 ; ret 0x8948
0x00000200006e0f61 : ror dword ptr [rax - 9], 1 ; loop 0x200006e0f9e ; ret 0x8948
0x00000200006e1362 : ror dword ptr [rax - 9], 1 ; loop 0x200006e139f ; ret 0x8948
0x00000200006e177a : ror dword ptr [rax - 9], 1 ; loop 0x200006e17b7 ; ret 0x8948
0x00000200006e1b84 : ror dword ptr [rax - 9], 1 ; loop 0x200006e1bc1 ; ret 0x8948
0x00000200006e1fa3 : ror dword ptr [rax - 9], 1 ; loop 0x200006e1fe0 ; ret 0x8948
0x00000200006e23d2 : ror dword ptr [rax - 9], 1 ; loop 0x200006e240f ; ret 0x8948
0x00000200006e289f : ror dword ptr [rax - 9], 1 ; loop 0x200006e28dc ; ret 0x8948
0x00000200006e2e5e : ror dword ptr [rax - 9], 1 ; loop 0x200006e2e9b ; ret 0x8948
0x00000200006e3432 : ror dword ptr [rax - 9], 1 ; loop 0x200006e346f ; ret 0x8948
0x00000200006e38ef : ror dword ptr [rax - 9], 1 ; loop 0x200006e392c ; ret 0x8948
0x00000200006e3d67 : ror dword ptr [rax - 9], 1 ; loop 0x200006e3da4 ; ret 0x8948
0x00000200006e3f3f : ror dword ptr [rax - 9], 1 ; loop 0x200006e3f7c ; ret 0x8948
0x00000200006e442e : ror dword ptr [rax - 9], 1 ; loop 0x200006e446b ; ret 0x8948
0x00000200006e48d8 : ror dword ptr [rax - 9], 1 ; loop 0x200006e4915 ; ret 0x8948
0x00000200006e50b7 : ror dword ptr [rax - 9], 1 ; loop 0x200006e50f4 ; ret 0x8948
0x00000200006e54e6 : ror dword ptr [rax - 9], 1 ; loop 0x200006e5523 ; ret 0x8948
0x00000200006e5915 : ror dword ptr [rax - 9], 1 ; loop 0x200006e5952 ; ret 0x8948
0x00000200006e5d55 : ror dword ptr [rax - 9], 1 ; loop 0x200006e5d92 ; ret 0x8948
0x00000200006e6184 : ror dword ptr [rax - 9], 1 ; loop 0x200006e61c1 ; ret 0x8948
0x00000200006e6811 : ror dword ptr [rax - 9], 1 ; loop 0x200006e684e ; ret 0x8948
0x00000200006e6adc : ror dword ptr [rax - 9], 1 ; loop 0x200006e6b19 ; ret 0x8948
0x00000200006e6e5c : ror dword ptr [rax - 9], 1 ; loop 0x200006e6e99 ; ret 0xbd83
0x00000200006445f5 : ror dword ptr [rax - 9], 1 ; ret 0xf000
0x000002000006ff5e : ror dword ptr [rax - 9], 1 ; ret 0xffff
0x00000200000ffba3 : ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000123ad4 : ror dword ptr [rax], -0x18 ; push rcx ; ret 0xfffa
0x0000020000015cb6 : ror dword ptr [rax], -0x18 ; ret
0x0000020000174e67 : ror dword ptr [rax], -0x3d ; xor eax, eax ; ret
0x0000020000031b0c : ror dword ptr [rax], -0x75 ; ret 0x3b48
0x00000200003a8154 : ror dword ptr [rax], -0x7d ; ret 0x4904
0x00000200005fedc3 : ror dword ptr [rax], -1 ; ret 0x8349
0x000002000053c832 : ror dword ptr [rax], 0x3b ; ret 0xed72
0x0000020000389c6f : ror dword ptr [rax], 0x41 ; cmp eax, eax ; jb 0x20000389c6f ; xor al, al ; ret
0x0000020000132b0b : ror dword ptr [rax], 0x41 ; cmp edx, eax ; jb 0x20000132b0a ; ret
0x0000020000566cf8 : ror dword ptr [rax], 0x44 ; cmp eax, edx ; jb 0x20000566cf0 ; xor al, al ; ret
0x000002000052a2f3 : ror dword ptr [rax], 0x44 ; cmp ecx, edx ; jb 0x2000052a2f1 ; ret
0x0000020000368262 : ror dword ptr [rax], 0x48 ; cmp ecx, edx ; jbe 0x2000036825c ; ret
0x00000200001785c9 : ror dword ptr [rax], 0x48 ; dec edx ; jne 0x200001785c0 ; ret
0x0000020000363ea5 : ror dword ptr [rax], 0x48 ; dec edx ; jne 0x20000363e9d ; ret
0x000002000052644a : ror dword ptr [rax], 0x48 ; dec edx ; jne 0x2000052644d ; ret
0x000002000012a01f : ror dword ptr [rax], 0x49 ; dec edx ; jne 0x2000012a019 ; ret
0x00000200000d8552 : ror dword ptr [rax], 0x4d ; test eax, eax ; jne 0x200000d8563 ; ret
0x00000200000d8551 : ror dword ptr [rax], 0x4d ; test eax, eax ; jne 0x200000d8564 ; ret
0x0000020000010f14 : ror dword ptr [rax], 0x75 ; add eax, 0x38c48348 ; ret
0x00000200006445ef : ror dword ptr [rbp + 0x3348ff4f], 1 ; ror dword ptr [rax - 9], 1 ; ret 0xf000
0x00000200000077ef : ror dword ptr [rbp + 0x33], -0x6c ; ret
0x0000020000007848 : ror dword ptr [rbp + 0x33], 0x3c ; ret
0x000002000051116e : ror dword ptr [rbp + 0x33], 1 ; ret
0x000002000017562f : ror dword ptr [rbp + 0x39], -0x74 ; ret
0x00000200001540f9 : ror dword ptr [rbp + 0x3b], -0x38 ; jb 0x200001540f1 ; mov rax, r10 ; ret
0x00000200004cedc2 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe475
0x00000200004ced50 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe875
0x00000200004cecea : ror dword ptr [rbp + 0x3b], 1 ; ret 0xe975
0x000002000011ed0c : ror dword ptr [rbp + 0xf], 0x44 ; ret 0x344
0x0000020000399e69 : ror dword ptr [rbp + rcx*4 + 0xd], 1 ; ret
0x00000200005ba6db : ror dword ptr [rbp - 0x74b2d0b8], 1 ; ret 0x8b4c
0x000002000000767b : ror dword ptr [rbp - 0x75], -0x6c ; ret
0x00000200001fcf55 : ror dword ptr [rbp - 0x75], -0x6c ; ret 0x64c0
0x00000200004f0c26 : ror dword ptr [rbp - 0x75], -0x7c ; ret
0x00000200000abfbd : ror dword ptr [rbp - 0x75], cl ; ret
0x000002000012dc34 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000012dc4b ; ret
0x00000200001540c1 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200001540bc ; ret
0x00000200004cd43f : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200004cd435 ; ret
0x00000200004cd43e : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200004cd436 ; ret
0x00000200000da7ef : ror dword ptr [rbp - 0x7b], 1 ; leave ; cmove rax, rdx ; jmp 0x200000da7ec
0x00000200005d01af : ror dword ptr [rbp - 0x7b], 1 ; leave ; jne 0x200005d01c0 ; xor al, al ; ret
0x000002000024c4d1 : ror dword ptr [rbp], -0x28 ; ret 0x4d
0x0000020000247b61 : ror dword ptr [rbp], 0x64 ; ret 0x4d
0x000002000053853f : ror dword ptr [rbx + 0x4d8d48c2], cl ; out -1, eax ; ret 0x348
0x000002000037f8a2 : ror dword ptr [rbx + 0xfffbafa], 0 ; add byte ptr [rbx], ah ; ret 0xc148
0x00000200000a3770 : ror dword ptr [rbx + rbp - 0x3f], 0x49 ; mov eax, eax ; pop rsi ; pop rdi ; ret
0x000002000018f015 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x000002000003d7ba : ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200001c7b59 : ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x0000020000543df6 : ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x0000020000528663 : ror dword ptr [rbx - 0x467a1733], cl ; ret 0x48ff
0x000002000013eed6 : ror dword ptr [rbx - 0x50f0ba3a], cl ; ret 0xf741
0x00000200001becb4 : ror dword ptr [rbx - 0x75], 0xc ; ret 0xff48
0x00000200001becd1 : ror dword ptr [rbx - 0x7d], 0x24 ; ret 0xf00
0x000002000020d231 : ror dword ptr [rbx], 1 ; add bh, bl ; ror dword ptr [rbx], 1 ; add byte ptr [rax], cl ; ret 0x20
0x000002000020d235 : ror dword ptr [rbx], 1 ; add byte ptr [rax], cl ; ret 0x20
0x000002000014686e : ror dword ptr [rcx + 0x12482], 0 ; ret
0x000002000012918f : ror dword ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 9], cl ; ret 0xf000
0x000002000019c6f8 : ror dword ptr [rcx + 0x3b], 1 ; sub byte ptr [rbp - 0x13], sil ; ret
0x00000200000cb1be : ror dword ptr [rcx + 0x452c244c], 0x3b ; ret 0x830f
0x00000200000aae93 : ror dword ptr [rcx + 0x4960244c], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000200000dc7a7 : ror dword ptr [rcx + 0x63], 1 ; ret
0x00000200004d8c81 : ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200004d8a22 : ror dword ptr [rcx + 0x63], cl ; ret 0x8d4c
0x0000020000082cb8 : ror dword ptr [rcx + 0x7f], cl ; wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x00000200004a1d35 : ror dword ptr [rcx + 0xf], -0x51 ; ror dword ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000058ada3 : ror dword ptr [rcx + 3], cl ; ret
0x00000200006e0260 : ror dword ptr [rcx + rcx*4 + 0x18], -0x7d ; ret 0x48f8
0x0000020000170a89 : ror dword ptr [rcx + rcx*4 + 0x1b], 0x48 ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000069e72c : ror dword ptr [rcx + rcx*4 + 0x28], -0x7d ; ret 0x48f8
0x00000200001592ee : ror dword ptr [rcx + rcx*4 + 2], -0x3d ; and qword ptr [rdx], 0 ; ret
0x00000200001b3c24 : ror dword ptr [rcx + rcx*4 + 2], -0x3d ; mov qword ptr [rdx], r10 ; ret
0x0000020000507a1e : ror dword ptr [rcx - 0x17dfdb84], cl ; sub ch, dh ; ret
0x00000200006eb5f7 : ror dword ptr [rcx - 0x39], cl ; ret
0x00000200000076b5 : ror dword ptr [rcx - 0x3f], -0x17 ; or byte ptr [rbp + 0x33], cl ; xchg eax, esp ; ret
0x00000200000cf42a : ror dword ptr [rcx - 0x74bb88a3], cl ; ret
0x00000200000a3773 : ror dword ptr [rcx - 0x75], -0x40 ; pop rsi ; pop rdi ; ret
0x000002000000a2e6 : ror dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200004f0b42 : ror dword ptr [rcx - 0x75], -0x6c ; ret
0x00000200004b85af : ror dword ptr [rcx - 0x75], -0x74 ; ret
0x0000020000054efd : ror dword ptr [rcx - 0x75], -0x7c ; ret 0x66a8
0x00000200000689c3 : ror dword ptr [rcx - 0x75], 0x59 ; and dh, dh ; ret
0x00000200001d4e62 : ror dword ptr [rcx - 0x75], 0x5c ; ret
0x00000200004fa4b7 : ror dword ptr [rcx - 0x75], 1 ; add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x000002000044944b : ror dword ptr [rcx - 0x75], 1 ; enter 0x4ce8, -0x27 ; ret 0x65ff
0x00000200001a007a : ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x00000200000fe56c : ror dword ptr [rcx - 0x75], 1 ; ret 0x44c3
0x0000020000007a51 : ror dword ptr [rcx - 0x75], 1 ; ret 0x5f41
0x00000200000aed4c : ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x0000020000388f94 : ror dword ptr [rcx - 0x75], 9 ; mov qword ptr [rdx], rcx ; ret
0x00000200001a1654 : ror dword ptr [rcx - 0x75], cl ; call 0x20072dc51af
0x00000200004487cd : ror dword ptr [rcx - 0x75], cl ; enter -0x3518, -0x1b ; ret 0x48ff
0x000002000043a109 : ror dword ptr [rcx - 0x75], cl ; enter -0x7118, -0x34 ; ret
0x000002000044897a : ror dword ptr [rcx - 0x75], cl ; enter 0x1de8, -0x1c ; ret 0x48ff
0x0000020000449479 : ror dword ptr [rcx - 0x75], cl ; enter 0x1ee8, -0x27 ; ret 0x8bff
0x0000020000445843 : ror dword ptr [rcx - 0x75], cl ; enter 0x54e8, 0x15 ; ret
0x0000020000448da6 : ror dword ptr [rcx - 0x75], cl ; iretd ; call 0x20000076da7
0x000002000048aa95 : ror dword ptr [rcx - 0x75], cl ; iretd ; call 0x200000b90e7
0x000002000048aaf8 : ror dword ptr [rcx - 0x75], cl ; iretd ; call 0x200000b9887
0x00000200003718ca : ror dword ptr [rcx - 0x75], cl ; iretd ; call 0x2000014dbd6
0x00000200001264ea : ror dword ptr [rcx - 0x75], cl ; iretd ; call r12
0x00000200001ef166 : ror dword ptr [rcx - 0x75], cl ; push rax ; or byte ptr [rcx - 1], al ; ret
0x000002000069c76a : ror dword ptr [rcx - 0x75], cl ; ret
0x000002000004a51f : ror dword ptr [rcx - 0x75], cl ; retf ; call 0x200000b67a6
0x00000200000568c8 : ror dword ptr [rcx - 0x77], 1 ; push rax ; and byte ptr [rax - 0x7d], cl ; ret
0x0000020000151789 : ror dword ptr [rcx - 0x7b], cl ; ret
0x00000200005717e8 : ror dword ptr [rcx - 0x7d], -0x3c ; adc byte ptr [rcx - 0x7d], cl ; ret
0x000002000004270a : ror dword ptr [rcx - 0x7d], -0x40 ; adc bh, bh ; ret 0x3b49
0x0000020000705af5 : ror dword ptr [rcx - 0x7d], 1 ; rol byte ptr [rcx + rcx*2], 0x83 ; ret 0x6602
0x0000020000487402 : ror dword ptr [rcx - 1], -0x36 ; jne 0x200004873da ; ret
0x000002000019e074 : ror dword ptr [rcx - 1], -0x37 ; jne 0x2000019e05e ; mov rax, r8 ; ret
0x0000020000073609 : ror dword ptr [rcx - 1], -0x38 ; jne 0x20000073609 ; xor rax, rax ; ret
0x00000200000a38b7 : ror dword ptr [rcx - 1], -0x38 ; jne 0x200000a38b6 ; ret 0
0x00000200000a39b5 : ror dword ptr [rcx - 1], -0x38 ; jne 0x200000a39b7 ; ret 0
0x00000200006153a3 : ror dword ptr [rcx - 1], 1 ; ret
0x00000200005bb0eb : ror dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000066067b : ror dword ptr [rcx], 1 ; ret
0x00000200006ee0d7 : ror dword ptr [rcx], 2 ; add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, al ; ret
0x00000200000fe568 : ror dword ptr [rdi + rcx + 0x47], 1 ; ror dword ptr [rcx - 0x75], 1 ; ret 0x44c3
0x0000020000024284 : ror dword ptr [rdi], -0x43 ; fiadd word ptr [rcx - 0x75] ; ret
0x0000020000260075 : ror dword ptr [rdi], -0x44 ; ret 0x4f
0x0000020000006363 : ror dword ptr [rdi], -0x49 ; ret 0x4166
0x0000020000006347 : ror dword ptr [rdi], -0x49 ; ret 0xbf41
0x0000020000141d96 : ror dword ptr [rdi], -0x4a ; ret
0x00000200001963ed : ror dword ptr [rdi], -0x4a ; ret 0xd13b
0x00000200005ea287 : ror dword ptr [rdi], -0x4a ; ret 0xf44
0x00000200000f155d : ror dword ptr [rdi], -0x6b ; ret 0xc28b
0x0000020000471ea2 : ror dword ptr [rdi], -0x79 ; add dword ptr [r8], r8d ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000499b38 : ror dword ptr [rdi], -0x79 ; hlt ; ret
0x00000200004a74c2 : ror dword ptr [rdi], -0x79 ; les r10, ptr [r11] ; add dh, dh ; ret
0x00000200001cea6a : ror dword ptr [rdi], -0x7b ; jmp rax
0x00000200006c01d8 : ror dword ptr [rdi], -0x7b ; mov bpl, 4 ; add bh, bh ; ret
0x00000200004dac17 : ror dword ptr [rdi], -0x7b ; mov ecx, 0x8b0012b4 ; ret
0x000002000058c2f4 : ror dword ptr [rdi], -0x7b ; salc ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000068b2c : ror dword ptr [rdi], -0x7c ; mov gs, word ptr [rsi + 0x16] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000044aa7 : ror dword ptr [rdi], -0x7c ; ret
0x000002000038b658 : ror dword ptr [rdi], -0x7d ; out dx, al ; and al, 0 ; mov al, 1 ; ret
0x000002000003db2d : ror dword ptr [rdi], -0x7d ; ret 0xfffd
0x000002000046a378 : ror dword ptr [rdi], -0x7e ; ret
0x0000020000555a0b : ror dword ptr [rdi], -0x7e ; ret 5
0x0000020000587544 : ror dword ptr [rdi], 0 ; mov eax, 0x2d0 ; ret
0x00000200001ca1e9 : ror dword ptr [rdi], 0x42 ; ret 0xd08b
0x00000200000ae9d1 : ror dword ptr [rdi], 0x45 ; ret 0xe82b
0x000002000037de3f : ror dword ptr [rdi], 0x45 ; ret 0xf983
0x0000020000143e7b : ror dword ptr [rdi], 1 ; idiv bh ; add rsp, 0x68 ; ret
0x0000020000425e9c : ror dword ptr [rdi], 1 ; mov bh, 0xc2 ; ret
0x000002000059ebd4 : ror dword ptr [rdi], 1 ; ret 0xc82b
0x000002000051a3d2 : ror dword ptr [rdi], 1 ; test eax, edi ; test al, 0xf ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000c9a56 : ror dword ptr [rdi], 1 ; xor dword ptr [rdi + 0x45000006], 0x3a ; ret
0x000002000050dc54 : ror dword ptr [rdi], cl ; lahf ; ret 0xa3e9
0x00000200000e4bf5 : ror dword ptr [rdi], cl ; mov edx, 0x8b441fea ; ret 0x8141
0x000002000050dc18 : ror dword ptr [rdi], cl ; popfq ; ret 0xdfe9
0x000002000050dc36 : ror dword ptr [rdi], cl ; pushfq ; ret 0xc1e9
0x000002000050dbfa : ror dword ptr [rdi], cl ; sahf ; ret 0xfde9
0x000002000053ad21 : ror dword ptr [rdi], cl ; test byte ptr [rax], ch ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x000002000052ab94 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x1db9
0x000002000052ab84 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xf3e8
0x000002000050e136 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0xc1e9
0x000002000050e164 : ror dword ptr [rdi], cl ; xchg eax, edi ; ret 0x93e9
0x00000200003a0afc : ror dword ptr [rdi], cl ; xchg eax, edx ; ret 0xfbe9
0x000002000050e117 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xe0e9
0x00000200003a09fc : ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x1789
0x00000200000677bd : ror dword ptr [rdx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x0000020000506041 : ror dword ptr [rdx - 0x3fcd3c3f], 1 ; ret
0x00000200004b9039 : ror dword ptr [rdx - 0x6f6f3c3e], 1 ; nop ; mov al, 1 ; ret
0x000002000026233d : ror dword ptr [rdx], 0x30 ; ret
0x000002000038c700 : ror dword ptr [rip - 0x3b7cb800], 0x50 ; pop rbp ; ret
0x0000020000076e79 : ror eax, 0x15 ; pop rbx ; ret
0x00000200003b1c0a : ror eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x000002000000ba1a : ror eax, cl ; mov eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001043e9 : ror eax, cl ; mov eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003fe9d2 : ror eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003feae2 : ror eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200001d520b : ror ebx, -8 ; dec dword ptr [rax + 0xb] ; ret 0x894c
0x0000020000411e37 : ror ecx, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x0000020000411ecf : ror ecx, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x0000020000411ccf : ror ecx, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x000002000046697b : ror edi, 1 ; ret
0x0000020000090942 : ror esi, -0x1c ; leave ; movsxd rax, eax ; ret
0x0000020000260074 : ror qword ptr [rdi], -0x44 ; ret 0x4f
0x00000200003b1c09 : ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003fe9d1 : ror r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003feae1 : ror r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x0000020000411e36 : ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x0000020000411ece : ror r9d, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x0000020000411cce : ror r9d, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000076e78 : ror rax, 0x15 ; pop rbx ; ret
0x0000020000542f1b : sahf ; add byte ptr [rax], ah ; add byte ptr [rax], al ; call 0x2000016d86c
0x000002000058a20f : sahf ; add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200000633bb : sahf ; add byte ptr [rax], al ; add bl, dh ; ret
0x000002000018430e : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200004259e6 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x629017ff], dh ; ret 0xfff
0x00000200000b1b04 : sahf ; and dword ptr [rax], eax ; ret
0x0000020000608b95 : sahf ; bswap eax ; call qword ptr [rax]
0x00000200004cd505 : sahf ; call 0x1ffc3701f0f
0x000002000045ba28 : sahf ; clc ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000053fb6 : sahf ; cld ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200004ee7f2 : sahf ; fcos ; ret
0x0000020000085de9 : sahf ; fldcw word ptr [rbx - 0x4fa42152] ; ret 0x9b64
0x00000200001fe4de : sahf ; imul ebp, edx, 0x8b9090ff ; ret 0x8349
0x000002000016499e : sahf ; in al, -0xd ; ljmp ptr [rbx] ; ret 0x42c6
0x000002000014226e : sahf ; int 0x12
0x00000200003673d4 : sahf ; int1 ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x0000020000091ef5 : sahf ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x000002000043e463 : sahf ; loop 0x2000043e480 ; ret 0xac83
0x0000020000640c15 : sahf ; mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200003a33b2 : sahf ; mov dl, dh ; jmp qword ptr [rdx]
0x0000020000146656 : sahf ; mov esp, 0xb70f000a ; ret 0x94d
0x00000200001e71df : sahf ; or al, 0xf3 ; dec dword ptr [rax - 0x75] ; ret
0x000002000051b7f6 : sahf ; out dx, eax ; ret 0x8bff
0x000002000066992e : sahf ; pop rbx ; ret 0x33ff
0x000002000057bf5e : sahf ; rcl ecx, cl ; dec dword ptr [rax + 0x23] ; ret 0x8948
0x000002000008e28f : sahf ; ret
0x000002000012bd46 : sahf ; ret 0x16
0x0000020000479b45 : sahf ; ret 0x44ff
0x0000020000448f4a : sahf ; ret 0x48ff
0x0000020000661b54 : sahf ; ret 0x85ff
0x0000020000448fcb : sahf ; ret 0x8bff
0x00000200000c850e : sahf ; ret 0xa
0x00000200001c0ab1 : sahf ; ret 0xc283
0x000002000050dbfc : sahf ; ret 0xfde9
0x000002000052dd2e : sahf ; ret 0xffba
0x000002000041113e : sahf ; ret 0xfffc
0x00000200005cb53e : sahf ; salc ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200004907e0 : sahf ; sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x00000200003ac4de : sahf ; sar bh, 0xc0 ; add rsp, 0x38 ; ret
0x00000200004252e6 : sahf ; sar bh, 0xc0 ; ret
0x000002000060db41 : sahf ; sbb eax, 0x8b41ffe2 ; ret
0x000002000047a6ca : sahf ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000661ea6 : sahf ; wait ; ret 0x48ff
0x000002000063e5fa : sahf ; xchg eax, ebp ; ret
0x0000020000523e0b : sal ah, 0x8b ; ror byte ptr [rcx + 0x29e83845], 1 ; ret 0xffd4
0x000002000006cc32 : sal al, 0x48 ; cmpxchg dword ptr [rcx], edx ; jne 0x2000006cc43 ; ret
0x000002000039a4a6 : sal al, 0x48 ; cmpxchg dword ptr [rcx], edx ; jne 0x2000039a4b7 ; ret
0x0000020000063cde : sal al, 0x4c ; cmpxchg dword ptr [rcx], eax ; jne 0x20000063cc6 ; ret
0x0000020000616c7f : sal al, 0x83 ; ret
0x00000200000cc42b : sal al, 0xf ; mov cl, 0x11 ; jne 0x200000cc43a ; ret
0x00000200005b479d : sal al, 0xf ; mov cl, 0x35 ; pop rdx ; ret 0xffcd
0x0000020000388094 : sal al, 0xf ; mov cl, 0x3d ; ret
0x000002000049e7d5 : sal al, 0xf ; mov cl, 0x3d ; ret 0xdfa2
0x00000200004af294 : sal al, 0xf ; mov cl, 0xd ; ret
0x000002000015038a : sal al, 1 ; and dword ptr [r10], eax ; ret
0x000002000056fdcc : sal al, 1 ; and dword ptr [r9], eax ; ret
0x0000020000369d4b : sal al, cl ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000583c41 : sal bh, 0xd0 ; and eax, 0xc0000001 ; ret
0x00000200000521de : sal bh, 0xd0 ; and eax, 0xc000000d ; ret
0x00000200003dd7d5 : sal bh, 0xd0 ; and eax, 0xc0000034 ; ret
0x00000200004d6253 : sal bh, 0xd0 ; and eax, 0xc00002b9 ; ret
0x000002000001ab37 : sal bh, 0xd0 ; and eax, 2 ; ret
0x00000200001f11d7 : sal bh, 0xd8 ; inc eax ; ret
0x0000020000138b87 : sal bh, 0xf1 ; ret
0x000002000001bfb6 : sal bh, 5 ; ret
0x00000200000407b7 : sal bh, 5 ; ret 0x3168
0x000002000064ace6 : sal bh, 5 ; xchg eax, ebx ; ret
0x00000200000dce03 : sal bl, 0x90 ; xor al, al ; ret
0x0000020000168e15 : sal bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000385c25 : sal bl, 1 ; movq qword ptr [rbp - 0x30], mm0 ; call rsi
0x0000020000443a6c : sal bl, 1 ; ret 0x4dff
0x000002000056fc7d : sal byte ptr [rax + rax*4 + 0x48], 3 ; ret
0x00000200006f9427 : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret
0x000002000063e642 : sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x0000020000002fe9 : sal byte ptr [rax + rbx - 0x46], cl ; jo 0x20000002ff7 ; add byte ptr [rax], al ; call rax
0x00000200005639fe : sal byte ptr [rax + rbx - 0x75], 0x45 ; ret
0x00000200005ba41f : sal byte ptr [rax + rbx*8 + 0x4c], 0x8b ; ret
0x000002000016e03d : sal byte ptr [rax + rcx + 0x41], 0xff ; ret 0x3b44
0x000002000016be6f : sal byte ptr [rax + rcx + 0x41], 0xff ; ret 0x3b45
0x000002000005c3bd : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000019ad8f : sal byte ptr [rax + rcx + 0x48], 0x8b ; xlatb ; mov rcx, rbx ; call rax
0x00000200006bf5bd : sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0x00000200003a80eb : sal byte ptr [rax + rcx + 0x48], cl ; mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000038dd9 : sal byte ptr [rax + rcx + 0x66], cl ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x000002000064eb1b : sal byte ptr [rax + rcx - 0x77], 5 ; and al, 0x8f ; ret 0xebff
0x000002000064c6df : sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x000002000064c543 : sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x0000020000660981 : sal byte ptr [rax + rdx + 0x49], 0x3b ; ret 0xb74
0x00000200004841a4 : sal byte ptr [rax + rdx - 0x75], 0xc3 ; jmp 0x2000048417a
0x0000020000623778 : sal byte ptr [rax + rdx*2 + 0x48], 0x83 ; ret
0x0000020000489219 : sal byte ptr [rax + rsi + 0x44], 0x8b ; ret
0x0000020000157cd9 : sal byte ptr [rax + rsi + 0x44], 0x8b ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x440c
0x00000200004a05a6 : sal byte ptr [rax - 2], 0xff ; dec dword ptr [rax - 0x7f] ; ret 0xfd30
0x000002000064d880 : sal byte ptr [rax], 0x49 ; cmp dword ptr [rax], eax ; jne 0x2000064d880 ; ret
0x000002000048f2a5 : sal byte ptr [rbp + 0x11], 0x8a ; ret
0x00000200006379b3 : sal byte ptr [rbp + 0x12], 0x39 ; ret
0x0000020000132a92 : sal byte ptr [rbp + 0x12], 0xf3 ; ret
0x0000020000105088 : sal byte ptr [rbp + 0x14], cl ; add rsp, 0x28 ; ret
0x0000020000136bd2 : sal byte ptr [rbp + 0x14], cl ; call 0x20000072e45
0x00000200005c0ecf : sal byte ptr [rbp + 0x15], 0xf6 ; ret 0x7401
0x00000200004802af : sal byte ptr [rbp + 0x18], 0xbb ; and eax, 0x8bc00002 ; ret
0x00000200004793ba : sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000005d419 : sal byte ptr [rbp + 0x1f], 0xff ; ret
0x0000020000379e1a : sal byte ptr [rbp + 0x21], 0xff ; ret
0x000002000042b7c3 : sal byte ptr [rbp + 0x25], 0xff ; ret
0x00000200005baca9 : sal byte ptr [rbp + 0x2e], 0xff ; ret
0x00000200006394fa : sal byte ptr [rbp + 0x2f], 0xff ; ret
0x000002000047d30c : sal byte ptr [rbp + 0x30], 0x8b ; ret
0x000002000042b7f5 : sal byte ptr [rbp + 0x34], 0xe8 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0x00000200005ba579 : sal byte ptr [rbp + 0x3a], 0xff ; ret
0x00000200005f0c31 : sal byte ptr [rbp + 0x44], 0x8b ; ret
0x00000200005cda33 : sal byte ptr [rbp + 0x44], 0x8b ; ret 0x8d4c
0x0000020000408499 : sal byte ptr [rbp + 0x48], 0x8b ; push rcx ; call rax
0x0000020000379093 : sal byte ptr [rbp + 0x49], 0xff ; ret
0x000002000019ee06 : sal byte ptr [rbp + 0x4c], 0x8b ; ret
0x000002000059be9f : sal byte ptr [rbp + 0x5b], 0xf7 ; ret 0
0x0000020000198264 : sal byte ptr [rbp + 0x6c], 0xff ; ret
0x000002000015c027 : sal byte ptr [rbp + 0xa], 0x48 ; mov edx, ebx ; mov rcx, rdi ; call rsi
0x000002000064052b : sal byte ptr [rbp + 0xb], 0xff ; ret
0x000002000015da50 : sal byte ptr [rbp + 0xc], 0xff ; ret
0x00000200006bd3ec : sal byte ptr [rbp + 0xd], 0x83 ; ret
0x000002000016964a : sal byte ptr [rbp + 0xf], 0x33 ; rol byte ptr [rbp - 0x76], cl ; ret
0x00000200000a8da7 : sal byte ptr [rbp + 1], cl ; ret
0x0000020000548f5b : sal byte ptr [rbp + 2], 0x8b ; ret
0x00000200000c1f1c : sal byte ptr [rbp + 2], 0xf3 ; ret
0x0000020000655d8d : sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x000002000000577c : sal byte ptr [rbp + 2], cl ; ret
0x00000200003dfe43 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200000041d7 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8bc3
0x0000020000054f08 : sal byte ptr [rbp + 3], 1 ; mov al, 1 ; ret
0x00000200003ab545 : sal byte ptr [rbp + 3], cl ; mov al, 1 ; ret
0x0000020000124efe : sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200005437f8 : sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x0000020000174115 : sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x000002000001dbb9 : sal byte ptr [rbp + 4], cl ; mov qword ptr [r8], rcx ; ret
0x000002000010703e : sal byte ptr [rbp + 4], cl ; or byte ptr [rcx + 9], 4 ; ret
0x00000200001e4f3c : sal byte ptr [rbp + 5], 0x44 ; mov eax, edx ; jmp 0x200001e4f52
0x000002000037e93b : sal byte ptr [rbp + 5], 0x48 ; add esp, 0x28 ; ret
0x00000200000e6567 : sal byte ptr [rbp + 5], 0x48 ; mov eax, dword ptr [rcx + 8] ; ret
0x00000200001afa1e : sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x200001afa3f
0x00000200001b41db : sal byte ptr [rbp + 5], 0x4d ; mov eax, edx ; jmp 0x200001b41fc
0x0000020000573801 : sal byte ptr [rbp + 5], 0x83 ; ret
0x000002000053d989 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7406
0x000002000010a9a1 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000041c30e : sal byte ptr [rbp + 6], 1 ; mov eax, 1 ; ret
0x0000020000475828 : sal byte ptr [rbp + 6], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e351f : sal byte ptr [rbp + 7], 0x8b ; ret
0x000002000061689c : sal byte ptr [rbp + 7], 0xf ; mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200001a95d6 : sal byte ptr [rbp + 7], 0xff ; ret
0x00000200003e4a99 : sal byte ptr [rbp + 7], cl ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000c1e35 : sal byte ptr [rbp + 8], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200005c49a0 : sal byte ptr [rbp + 8], 0xff ; ret
0x000002000052aca7 : sal byte ptr [rbp + 8], 1 ; xor eax, eax ; ret
0x0000020000404d08 : sal byte ptr [rbp + 8], cl ; xor eax, eax ; ret
0x000002000053d900 : sal byte ptr [rbp + 9], 0xf6 ; ret 0xf06
0x000002000014b764 : sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x00000200006475b1 : sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x000002000064c5cb : sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x00000200003bcb55 : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, ebx ; call rdx
0x0000020000403317 : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, edi ; call rdx
0x000002000064c7df : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x0000020000177e1d : sal byte ptr [rbp + rax + 0x66], cl ; inc dword ptr [rcx + 0x66] ; ret
0x0000020000020ea9 : sal byte ptr [rbp + rax + 0x66], cl ; mov dword ptr [rcx], r11d ; ret
0x00000200000a9d5b : sal byte ptr [rbp + rax - 0xd], 0xc3 ; xor eax, eax ; ret
0x000002000019ee26 : sal byte ptr [rbp + rax*2 + 0x4c], 0x8b ; ret
0x00000200000d0ac8 : sal byte ptr [rbp + rbp*2 - 0x75], cl ; ret 0x348
0x00000200004e02c9 : sal byte ptr [rbp + rbx*2 + 0x44], 0x8b ; ret
0x000002000006ceff : sal byte ptr [rbp + rbx*2 + 0x48], 0x8b ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000146d3a : sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x000002000061d433 : sal byte ptr [rbp + rcx + 0x48], 0x83 ; ret 0x6608
0x00000200004f2646 : sal byte ptr [rbp + rcx + 0x48], 0xff ; ret 0x3b49
0x00000200006609c9 : sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x00000200005ba5eb : sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x0000020000045296 : sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x000002000019ee16 : sal byte ptr [rbp + rdx*2 + 0x4c], 0x8b ; ret
0x000002000019ee36 : sal byte ptr [rbp + rsi + 0x4c], 0x8b ; ret
0x0000020000489287 : sal byte ptr [rbp + rsi*4 + 0x44], 0x8b ; ret
0x00000200001547f0 : sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x00000200004b0612 : sal byte ptr [rbp - 0x11], 0x49 ; cmp eax, eax ; je 0x200004b05ec ; ret
0x00000200001540c4 : sal byte ptr [rbp - 0x12], 0xf3 ; ret
0x000002000041cb58 : sal byte ptr [rbp - 0x13], cl ; mov eax, 0xc000000d ; ret
0x000002000015db59 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000200003b80d3 : sal byte ptr [rbp - 0x14], 0xeb ; ret 0x90cc
0x00000200004e5fba : sal byte ptr [rbp - 0x15], 0x85 ; sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x0000020000154426 : sal byte ptr [rbp - 0x15], 0xf3 ; ret
0x00000200006f3baa : sal byte ptr [rbp - 0x15], 1 ; ret
0x0000020000028676 : sal byte ptr [rbp - 0x16], cl ; ret
0x00000200004cd442 : sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x000002000064bee7 : sal byte ptr [rbp - 0x17], cl ; ret
0x000002000064e82d : sal byte ptr [rbp - 0x18], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000661034 : sal byte ptr [rbp - 0x1a], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006ba2a2 : sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x0000020000108a08 : sal byte ptr [rbp - 0x1e], 0xf3 ; ret
0x000002000047b8d9 : sal byte ptr [rbp - 0x24], 0x8b ; ret
0x00000200001a38fd : sal byte ptr [rbp - 0x26], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000023eda : sal byte ptr [rbp - 0x28], 0x41 ; mov eax, ecx ; ret
0x0000020000172d69 : sal byte ptr [rbp - 0x28], 0xeb ; int 0x44
0x0000020000051059 : sal byte ptr [rbp - 0x29], 0x48 ; add esp, 0x28 ; ret
0x000002000064191b : sal byte ptr [rbp - 0x2a], 0xf3 ; ret
0x00000200001474cf : sal byte ptr [rbp - 0x2b], 0x33 ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000019e225 : sal byte ptr [rbp - 0x2c], cl ; mov al, 1 ; ret
0x000002000014a3ff : sal byte ptr [rbp - 0x2e], 0x48 ; sub eax, ecx ; sar rax, 1 ; ret
0x0000020000191e4f : sal byte ptr [rbp - 0x31], 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x0000020000142ba7 : sal byte ptr [rbp - 0x34], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x000002000013a1ac : sal byte ptr [rbp - 0x34], 0xeb ; ret 0x7e8b
0x000002000039e18b : sal byte ptr [rbp - 0x3a], 0x8b ; ret
0x00000200006d0297 : sal byte ptr [rbp - 0x3d], 1 ; xor eax, eax ; ret
0x0000020000026e68 : sal byte ptr [rbp - 0x3e], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200005ba236 : sal byte ptr [rbp - 0x3e], 0x8b ; ret
0x0000020000485a40 : sal byte ptr [rbp - 0x47], 0x48 ; mov ecx, esi ; call 0x200000b5019
0x0000020000140e00 : sal byte ptr [rbp - 0x48], 0x41 ; sub eax, ecx ; ret
0x00000200004feff0 : sal byte ptr [rbp - 0x58], 0x8b ; ret
0x0000020000169b1c : sal byte ptr [rbp - 0x7b], 0x8b ; ret
0x00000200006e2741 : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0x8b411ff2 ; ret
0x000002000002587d : sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200001172f8 : sal byte ptr [rbp - 0xd], 0x3a ; ret 0x475
0x0000020000020ede : sal byte ptr [rbp - 0xd], 1 ; xor eax, eax ; ret
0x00000200004de9bd : sal byte ptr [rbp - 0xe], 0xf3 ; ret
0x000002000037e9a3 : sal byte ptr [rbp - 0xe], 1 ; ret
0x000002000016982a : sal byte ptr [rbp - 0xf], 0x48 ; add esp, 0x28 ; ret
0x0000020000117463 : sal byte ptr [rbp - 9], 0x49 ; mov ecx, eax ; jmp rdx
0x00000200004c3230 : sal byte ptr [rbx + 0x4c], 0x8b ; ret
0x00000200003b32a9 : sal byte ptr [rbx + rax + 0x48], 0x8b ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200005fe232 : sal byte ptr [rbx + rax + 0x48], 0xff ; int 0x48
0x0000020000168559 : sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200000e61ca : sal byte ptr [rbx + rax + 0x49], 0x89 ; add ebx, esi ; ret
0x000002000000e015 : sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x0000020000076ce8 : sal byte ptr [rbx + rax - 2], 0xc8 ; ret
0x00000200005904c2 : sal byte ptr [rbx + rax*8 + 0x48], 0x8b ; and byte ptr [rbp + 0x63], r9b ; ret
0x0000020000405583 : sal byte ptr [rbx + rbx + 0x41], 0xf6 ; ret 0x7503
0x000002000058dab2 : sal byte ptr [rbx + rbx + 0xf], 0xb7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x302
0x00000200001b355b : sal byte ptr [rbx + rbx - 0xa], cl ; ret 0x7502
0x000002000056f937 : sal byte ptr [rbx + rbx*2 + 0x48], 0x8b ; ret
0x00000200000da7e2 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4810
0x00000200004b5c13 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000433b02 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x30 ; call rax
0x0000020000431ff5 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x48 ; call rax
0x0000020000176e03 : sal byte ptr [rbx + rcx*8 + 0x48], 0x8d ; push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000064abaf : sal byte ptr [rbx + rdx + 0x44], 0x8b ; ret 0x345
0x00000200004c8568 : sal byte ptr [rbx + rdx + 0x48], 0x8b ; ret
0x0000020000118ca5 : sal byte ptr [rbx + rdx + 0x48], 0x8b ; ret 0x2b48
0x000002000013e765 : sal byte ptr [rbx + rdx + 0x49], 0x81 ; ret 0x1000
0x00000200000f1c9d : sal byte ptr [rbx], 0xc0 ; jmp 0x200000f1c69
0x000002000012efdb : sal byte ptr [rbx], 0xc0 ; mov word ptr [r10 + 2], r8w ; ret
0x00000200001790d5 : sal byte ptr [rbx], 0xc0 ; ret
0x00000200005e5dbe : sal byte ptr [rbx], 0xd2 ; call 0x200000a2045
0x0000020000477f0f : sal byte ptr [rbx], 0xd2 ; call 0x200000a2046
0x0000020000188c1f : sal byte ptr [rbx], 0xd2 ; call 0x200000a4e85
0x0000020000477d00 : sal byte ptr [rbx], 0xd2 ; call 0x200000a4e86
0x0000020000101e45 : sal byte ptr [rbx], 0xd2 ; call 0x200000a4e89
0x0000020000588e11 : sal byte ptr [rbx], 0xd2 ; call 0x200000b5065
0x000002000036a291 : sal byte ptr [rbx], 0xd2 ; call 0x20000386575
0x0000020000476e57 : sal byte ptr [rbx], 0xd2 ; call qword ptr [rdi]
0x0000020000150423 : sal byte ptr [rbx], 0xd2 ; call r9
0x000002000051af9a : sal byte ptr [rbx], 0xd2 ; mov ecx, ebx ; call 0x200004b71eb
0x00000200000b14b7 : sal byte ptr [rbx], 0xd2 ; xor ecx, ecx ; call 0x200000dd797
0x000002000054ccbc : sal byte ptr [rbx], 1 ; ret
0x00000200004d4a23 : sal byte ptr [rbx], 1 ; ret 0x8d48
0x00000200004d68e2 : sal byte ptr [rbx], 1 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200000adc9b : sal byte ptr [rbx], 1 ; sar byte ptr [rbx], 0xca ; setg al ; ret
0x0000020000605866 : sal byte ptr [rbx], cl ; leave ; call 0x200000a3a49
0x00000200000b14b9 : sal byte ptr [rbx], cl ; leave ; call 0x200000dd795
0x0000020000144641 : sal byte ptr [rbx], cl ; leave ; call rax
0x00000200006171cd : sal byte ptr [rbx], cl ; leave ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x0000020000155ae1 : sal byte ptr [rcx + 0x49], 0xff ; ret 0xf45
0x00000200001b1859 : sal byte ptr [rcx + rbp + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x00000200001554cc : sal byte ptr [rcx + rbp + 0x49], 0xff ; ret
0x00000200001a6fd9 : sal byte ptr [rcx + rbx + 0x45], 0x84 ; ret
0x0000020000022536 : sal byte ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x00000200005adf8f : sal byte ptr [rcx + rbx*2 + 0x48], 0x8d ; push rsp ; and al, 0x48 ; call rax
0x0000020000175326 : sal byte ptr [rcx + rbx*2 + 0x49], 0xff ; ret
0x000002000017c954 : sal byte ptr [rcx + rcx + 0x41], 0x81 ; call qword ptr [rdi]
0x000002000064f024 : sal byte ptr [rcx + rcx + 0x48], 0x83 ; ret
0x000002000048b9cb : sal byte ptr [rcx + rcx + 0x48], 0x8b ; out dx, eax ; call rax
0x000002000064c75a : sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x000002000064c76f : sal byte ptr [rcx + rcx - 0x75], 0xd7 ; mov rcx, rbx ; call rax
0x00000200003c9194 : sal byte ptr [rcx + rcx*2 + 0x48], 0x8d ; sbb byte ptr [r9 + 0x3b], cl ; ret
0x00000200004e6344 : sal byte ptr [rcx + rdx + 0x41], 0xff ; ret
0x0000020000122ac2 : sal byte ptr [rcx + rdx + 0x45], 0x3b ; ret 0x2f89
0x0000020000154836 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret 0x4402
0x00000200004186c7 : sal byte ptr [rcx + rdx + 0x48], 0x8b ; ret 0xc148
0x000002000037237b : sal byte ptr [rcx + rdx + 0x49], 0x8b ; iretd ; call rax
0x000002000069d330 : sal byte ptr [rcx + rdx + 0xf], 0xb6 ; add cl, byte ptr [rax - 1] ; ret 0x3348
0x00000200006ccdf8 : sal byte ptr [rcx + rdx - 0x75], cl ; ret 0xd148
0x000002000036d7ad : sal byte ptr [rcx + rsi - 0x75], cl ; ret 0xe8c1
0x00000200000c02d5 : sal byte ptr [rcx + rsi*8 - 0x50], 1 ; ret
0x00000200000e705d : sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000a735d : sal byte ptr [rdi + 0x48], 1 ; ret
0x0000020000020bdf : sal byte ptr [rdi + 2], 1 ; ret
0x00000200005860e0 : sal byte ptr [rdi + rax + 0x41], 0x23 ; ret 0xc23b
0x00000200000add1c : sal byte ptr [rdi + rax + 0x41], 0x2a ; ret 0x388
0x0000020000016470 : sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x000002000055d8e3 : sal byte ptr [rdi + rax + 0x48], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001bd4fc : sal byte ptr [rdi + rax*8 + 0x44], 0x8b ; ret
0x0000020000465676 : sal byte ptr [rdi + rbx*2 + 0x49], 0x3b ; ret 0x2573
0x00000200000272a5 : sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x00000200003f0642 : sal byte ptr [rdi + rdx + 0x48], 0x8b ; ret
0x0000020000028668 : sal byte ptr [rdi + rdx + 0x49], 0x3b ; ret 0xb74
0x00000200004e5fbe : sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x000002000069cb75 : sal byte ptr [rdi + rdx*2 + 0x48], 0x3b ; ret 0x840f
0x0000020000474628 : sal byte ptr [rdi + rsi*2 + 0x48], 0xff ; ret 0x8348
0x00000200004c54e6 : sal byte ptr [rdx + 0x32], 0xc0 ; ret
0x00000200000c6e21 : sal byte ptr [rdx + 0x79], 0xff ; ror dword ptr [rax - 1], -0x3e ; jmp 0x200000c6e10
0x00000200006eabef : sal byte ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x0000020000160583 : sal byte ptr [rdx + rax - 0x4e], 1 ; mov al, dl ; ret
0x0000020000641cfd : sal byte ptr [rdx + rax - 0x50], 1 ; add rsp, 0x28 ; ret
0x00000200005997a4 : sal byte ptr [rdx + rax - 0x77], cl ; add al, byte ptr [rcx - 0x75] ; ret 0x90c3
0x00000200001684bd : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 0x28 ; ret
0x000002000000d03f : sal byte ptr [rdx + rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200004dda57 : sal byte ptr [rdx + rbp + 0x44], 0x8a ; ret
0x00000200000f971c : sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret 0x2b48
0x000002000041c2fe : sal byte ptr [rdx + rbx - 0x75], cl ; ret 0xc2ff
0x0000020000073781 : sal byte ptr [rdx + rcx + 0x48], 0xff ; ret 0xc2f6
0x00000200006d2878 : sal byte ptr [rdx + rcx - 0x3a], 3 ; add byte ptr [rax - 1], cl ; ret
0x00000200001768b9 : sal byte ptr [rdx + rcx*2 + 0x48], 0x81 ; ret
0x00000200004097fe : sal byte ptr [rdx + rdi + 0x44], 0x8b ; ret
0x000002000018971c : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x0000020000387e5a : sal byte ptr [rdx + rdx + 0x48], 0x8b ; je 0x20000387e8e ; jo 0x20000387df7 ; ret
0x00000200000220eb : sal byte ptr [rdx + rdx + 0x4c], 0x8b ; ret 0x138b
0x00000200005e60bb : sal byte ptr [rdx + rdx + 0xf], 0xb6 ; ret 0x4566
0x0000020000199688 : sal byte ptr [rdx + rdx*4 + 0x44], 0x8b ; ret
0x0000020000577d63 : sal byte ptr [rdx + rdx*8 + 0x48], 0x8b ; ret
0x0000020000596767 : sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x0000020000132b0f : sal byte ptr [rdx - 0x10], 1 ; ret
0x000002000019e41b : sal byte ptr [rdx - 0x11], 0xb0 ; add ebx, eax ; xor al, al ; ret
0x0000020000180a4c : sal byte ptr [rdx - 0x15], 0xff ; ret 0x8348
0x00000200003d88d5 : sal byte ptr [rdx - 0x17], 1 ; shr rax, 1 ; ret
0x00000200000b2839 : sal byte ptr [rdx - 0x18], 0xf3 ; ret
0x0000020000070fc6 : sal byte ptr [rdx - 0x1d], 0xf3 ; ret
0x000002000000e25f : sal byte ptr [rdx - 0x1d], cl ; xor eax, eax ; ret
0x00000200001a683c : sal byte ptr [rdx - 0x23], 0x41 ; mov eax, ecx ; ret
0x0000020000157d09 : sal byte ptr [rdx - 0x29], 1 ; xor al, al ; ret
0x00000200000aecda : sal byte ptr [rdx - 0xc], 1 ; mov rax, r8 ; ret
0x000002000019e3f3 : sal byte ptr [rdx - 0xd], 1 ; mov al, 1 ; ret
0x00000200001d860c : sal byte ptr [rdx - 0xf], 0xf3 ; ret
0x00000200004fb110 : sal byte ptr [rdx], 0xc0 ; ret
0x00000200006c2f80 : sal byte ptr [rip + 0x45c7c7bf], 1 ; ret
0x00000200001120db : sal byte ptr [rsi + 5], 1 ; add rsp, 0x28 ; ret
0x0000020000655d89 : sal byte ptr [rsi + rax + 0x3a], cl ; sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x00000200003b6816 : sal byte ptr [rsi + rax + 0x45], 0x33 ; leave ; jmp rax
0x00000200005f7ce3 : sal byte ptr [rsi + rax + 0x48], cl ; mov ecx, dword ptr [rdi + 0x30] ; call rdx
0x0000020000564d8a : sal byte ptr [rsi + rax + 0x49], 0x83 ; ret
0x00000200005aaea6 : sal byte ptr [rsi + rax - 0x75], cl ; and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200001472d6 : sal byte ptr [rsi + rcx + 0x44], 0x8b ; ret
0x0000020000392870 : sal byte ptr [rsi + rcx + 0x49], 0x3b ; ret 0x1175
0x000002000037efce : sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x00000200006139c0 : sal byte ptr [rsi + rcx - 0x75], cl ; ret
0x0000020000406e0e : sal byte ptr [rsi + rcx*4 + 0x48], 0x8b ; ret
0x00000200004d7875 : sal byte ptr [rsi + rdi*2 + 0xf], 0x1f ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000489aea : sal byte ptr [rsi + rsi*4 + 0x44], 0x8b ; ret
0x00000200001c0587 : sal byte ptr [rsi - 0x1b], 1 ; add dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000409994 : sal byte ptr [rsi - 0xa], cl ; ret
0x00000200001b25a1 : sal byte ptr [rsp + 0x44], 0x8b ; ret
0x00000200001917b6 : sal byte ptr [rsp + 0x48], 0x81 ; ret 0xb0
0x0000020000140665 : sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x00000200003fdfbf : sal byte ptr [rsp + rax + 0x48], 0x8b ; pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x000002000013fb83 : sal byte ptr [rsp + rax - 0x3a], cl ; add dword ptr [rax], eax ; ret
0x0000020000055eef : sal byte ptr [rsp + rax - 0x76], cl ; add al, 0x48 ; ret
0x00000200001ab38e : sal byte ptr [rsp + rax - 0x77], 0x50 ; add al, 0xc3 ; mov dword ptr [rcx], edx ; ret
0x00000200000738de : sal byte ptr [rsp + rax - 0x7c], cl ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x00000200004276bf : sal byte ptr [rsp + rbp + 0x48], 0x83 ; ret 0x4d08
0x00000200000e796f : sal byte ptr [rsp + rbp + 0x48], 0x8b ; ret 0x48f0
0x000002000004937e : sal byte ptr [rsp + rcx + 0x3c], 2 ; je 0x20000049391 ; mov eax, ecx ; ret
0x00000200003d3303 : sal byte ptr [rsp + rcx + 0x48], 0x3b ; ret
0x000002000013c52f : sal byte ptr [rsp + rcx + 0x48], 0x8d ; and al, 0x30 ; call rax
0x00000200003bbaab : sal byte ptr [rsp + rcx + 0x49], 0x3b ; ret 0x875
0x00000200004b677c : sal byte ptr [rsp + rdi + 0x44], 0x3b ; ret 0x7a72
0x0000020000039cc4 : sal byte ptr [rsp + rdi + 0x48], 0x83 ; ret 0x440c
0x00000200000c5617 : sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x0000020000073a64 : sal byte ptr [rsp + rdx + 0x48], 0xff ; ret 0xff49
0x00000200005734d8 : sal byte ptr [rsp + rdx + 0x49], 0x83 ; ret
0x0000020000555d1f : sal byte ptr [rsp + rsi + 0x41], 0x8d ; push rax ; add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200000afa62 : sal byte ptr [rsp + rsi - 0x73], cl ; inc dword ptr [rbx + r9*4 + 0x4c] ; ret
0x0000020000063687 : sal dh, 0xc1 ; adc byte ptr [rdx + rax - 0xd], dh ; ret
0x000002000064c9ca : sal dh, 1 ; ficomp dword ptr [rbx] ; leave ; and eax, ecx ; ret
0x00000200000cf178 : sal dh, 1 ; ret
0x00000200004d1ff5 : sal dh, 1 ; ret 0x7401
0x0000020000047228 : sal dh, 1 ; ret 0xf01
0x00000200001f4c59 : sal dh, 1 ; ret 0xf08
0x00000200001565c2 : sal dh, cl ; ret
0x00000200004dccdc : sal dh, cl ; ret 0xf07
0x00000200001ca61c : sal dl, 0xff ; jmp 0x200000f686b
0x00000200000d7ed6 : sal dword ptr [rax + 0x48003569], 0xb ; ret 0x8348
0x000002000019e381 : sal dword ptr [rax - 0x3fcd3cff], 1 ; ret
0x000002000019e331 : sal dword ptr [rax], 0x48 ; cmp ecx, eax ; jb 0x2000019e32d ; mov al, 1 ; ret
0x000002000019ec01 : sal dword ptr [rax], 0x48 ; cmp ecx, eax ; jb 0x2000019ec00 ; ret
0x000002000004ef94 : sal dword ptr [rax], 0xb ; ret 0x4123
0x0000020000376b0c : sal dword ptr [rax], 1 ; add bl, dh ; movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x0000020000045354 : sal dword ptr [rbp + 0x10], cl ; mov eax, 1 ; ret
0x0000020000371336 : sal dword ptr [rbp + 0x25], -0x3f ; jmp 0x1ffc1f99e4e
0x00000200000ea9e0 : sal dword ptr [rbp + 1], 1 ; ret
0x00000200003cb6e1 : sal dword ptr [rbp + 2], 0x32 ; leave ; mov al, cl ; ret
0x00000200004855ba : sal dword ptr [rbp + 3], -0x76 ; ret 0x38c3
0x000002000064afb2 : sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x000002000006609d : sal dword ptr [rbp + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000e47cc : sal dword ptr [rbp + 6], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005314f9 : sal dword ptr [rbp + rax*2 - 9], 1 ; ret 0xfffc
0x00000200000232bf : sal dword ptr [rbp - 0x13], 0x48 ; add esp, 0x28 ; ret
0x0000020000378738 : sal dword ptr [rbp - 0x14], 1 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200001b9612 : sal dword ptr [rbp - 0x19], -0xd ; ret
0x00000200004fbed3 : sal dword ptr [rbp - 0x1e], 1 ; test cl, cl ; je 0x200004fbeb4 ; xor eax, eax ; ret
0x000002000056fb81 : sal dword ptr [rbp - 0x32], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x000002000011e137 : sal dword ptr [rbp - 0xe], 1 ; sub rax, rdx ; ret
0x000002000053156c : sal dword ptr [rbx + 3], 1 ; mov al, 1 ; ret
0x00000200004cecca : sal dword ptr [rbx + 3], 1 ; mov eax, ecx ; ret
0x0000020000136c40 : sal dword ptr [rbx + 5], 0x48 ; add esp, 0x38 ; ret
0x00000200000d30f8 : sal dword ptr [rbx + 6], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000198c55 : sal dword ptr [rbx + rax + 0x32], -0x40 ; ret
0x0000020000149148 : sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200000f925c : sal dword ptr [rbx + rcx + 0x49], -0x75 ; ret 0xc148
0x0000020000181472 : sal dword ptr [rbx + rdx + 0x48], -0x73 ; loopne 0x2000018146a ; ret 0xf5b2
0x000002000012491c : sal dword ptr [rbx - 0x15], -0x2f ; xor al, al ; ret
0x0000020000590a88 : sal dword ptr [rbx - 0x3b], -0xd ; ret
0x000002000019c0c3 : sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x0000020000411cee : sal dword ptr [rbx], 0x44 ; and al, 0x38 ; ret
0x000002000015bcac : sal dword ptr [rbx], 1 ; fild dword ptr [rbp + 0x33] ; rol byte ptr [rcx + 0x3b], cl ; ret
0x00000200001ca885 : sal dword ptr [rbx], cl ; leave ; call 0x200000f6b15
0x0000020000012a46 : sal dword ptr [rcx + rax*2 - 1], 1 ; xchg eax, ecx ; push rax ; ret
0x00000200001e1096 : sal dword ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x000002000003e9a2 : sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x000002000003af2b : sal dword ptr [rcx + rdx*8 + 0x44], 0x2b ; rol dword ptr [rcx - 0x75], -0x40 ; ret
0x000002000050b7ad : sal dword ptr [rdi + 0x14], -1 ; ret 0x8349
0x00000200000e9ee0 : sal dword ptr [rdi + 0x42], -0xa ; ret
0x00000200000ca968 : sal dword ptr [rdi + 2], -0xd ; ret
0x000002000012cd0d : sal dword ptr [rdi + 2], 1 ; ret
0x00000200003fd189 : sal dword ptr [rdi + 3], 0x4c ; mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x0000020000643624 : sal dword ptr [rdi + 7], 0x45 ; sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x000002000045a87d : sal dword ptr [rdi + rax + 0x32], -0x40 ; add rsp, 8 ; ret
0x0000020000063c95 : sal dword ptr [rdi + rdi*8 + 0x4c], 1 ; xchg eax, ecx ; push rax ; ret
0x00000200003bd4fa : sal dword ptr [rdx + 0xb], 1 ; add rsp, 0x28 ; ret
0x000002000000e254 : sal dword ptr [rdx + 0xe], -1 ; ret 0x8349
0x0000020000054ad8 : sal dword ptr [rdx + 6], 0x41 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000054afa : sal dword ptr [rdx + 6], 0x49 ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000018b05b : sal dword ptr [rdx + rbx - 0x75], cl ; ret 0x8b4c
0x0000020000149135 : sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x00000200005be5e3 : sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x00000200004757d8 : sal dword ptr [rdx - 0x15], -0x75 ; ret 0x3cc3
0x00000200001064ca : sal dword ptr [rdx - 0x16], 1 ; xor eax, eax ; ret
0x0000020000126105 : sal dword ptr [rdx - 0x17], 1 ; mov eax, 0x10 ; ret
0x0000020000634a8e : sal dword ptr [rdx - 0x18], 1 ; xor eax, eax ; ret
0x00000200001bfcef : sal dword ptr [rdx - 0x25], -0xd ; ret
0x00000200001a3e83 : sal dword ptr [rdx - 0x3e], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000470ed8 : sal dword ptr [rdx - 0x62], -0xd ; ret
0x00000200004f3365 : sal dword ptr [rsi + 0xe], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001857da : sal dword ptr [rsi + 6], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001ab746 : sal dword ptr [rsi + rax + 0x48], -0x7d ; ret 0xebf0
0x0000020000188e81 : sal dword ptr [rsp + rax + 0x41], 1 ; mov eax, ebx ; ret
0x0000020000155472 : sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x00000200000dda57 : sal eax, 0x48 ; mov dword ptr [rsp + 0x20], eax ; call r11
0x00000200000bde92 : sal eax, 1 ; cmpxchg qword ptr [r8], rdx ; jne 0x200000bde81 ; ret
0x0000020000708efe : sal ecx, -0x43 ; jmp qword ptr [rax]
0x00000200004680bb : sal edi, -0x30 ; and r12d, eax ; jmp 0x2000046808d
0x000002000051110b : sal edi, 1 ; ret 0xfff9
0x0000020000136dea : sal edi, 1 ; ret 0xffff
0x00000200000c595d : sal edi, cl ; rol byte ptr [rcx + 0x23], 1 ; ret
0x000002000001c894 : sal edx, 0x1d ; add dh, dh ; ret
0x00000200003e1df2 : sal esi, 1 ; ret
0x0000020000147dd6 : sal esi, 1 ; ret 0x7507
0x00000200004abcf6 : sal esi, cl ; ret
0x00000200000071d0 : sal esi, cl ; ret 0x750e
0x00000200001b9ec1 : sal esp, 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d7a4d : sal esp, 1 ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200001d7a2d : sal esp, 1 ; dec dword ptr [rax - 0x75] ; shr ebx, 1 ; ret 0x8b48
0x0000020000385c24 : sal r11b, 1 ; movq qword ptr [rbp - 0x30], mm0 ; call rsi
0x0000020000153bb4 : salc ; adc al, byte ptr [rax] ; ret
0x000002000015ee27 : salc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xb848
0x0000020000025f10 : salc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000058c2f7 : salc ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000009a2a9 : salc ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x0000020000230e11 : salc ; and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; hlt ; ret 0x3f
0x000002000042f517 : salc ; call 0x20000063808
0x000002000045ba61 : salc ; call 0x200000bb077
0x00000200004895e4 : salc ; call 0x20000107957
0x00000200001efa4c : salc ; call 0x2000012bd0f
0x0000020000544a91 : salc ; call 0x2000016af84
0x0000020000503df6 : salc ; call 0x20000270043
0x0000020000584e53 : salc ; call 0x200005810f3
0x0000020000584ff8 : salc ; call 0x20000581293
0x000002000008b99e : salc ; call qword ptr [rcx]
0x000002000012bc9d : salc ; call r11
0x0000020000126585 : salc ; call r12
0x000002000003ff59 : salc ; call r14
0x00000200001efa63 : salc ; call rax
0x000002000036e676 : salc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; push rsi ; ret
0x0000020000632c26 : salc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005eb6ef : salc ; dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200006138bf : salc ; dec dword ptr [rax - 1] ; ret
0x00000200005eb5ad : salc ; dec dword ptr [rcx - 0x7d] ; ret
0x00000200006f9424 : salc ; inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x000002000051191b : salc ; inc dword ptr [rcx - 1] ; ret
0x000002000052660f : salc ; inc dword ptr [rcx] ; add al, ch ; push rax ; ret
0x0000020000151134 : salc ; int1 ; push rsi ; ret
0x00000200006684f6 : salc ; jnp 0x200006684c1 ; inc dword ptr [rcx - 0xa] ; ret
0x000002000037db36 : salc ; jrcxz 0x2000037db14 ; push rsi ; ret
0x00000200005cb53f : salc ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x000002000008e58c : salc ; loopne 0x2000008e583 ; ret
0x000002000008e58b : salc ; loopne 0x2000008e584 ; ret
0x000002000008e58a : salc ; loopne 0x2000008e585 ; ret
0x00000200001f1e51 : salc ; mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000012f81b : salc ; mov qword ptr [r11 + rdx*8], rax ; inc edx ; jmp 0x2000012f816
0x000002000011c387 : salc ; mov qword ptr [r11 - 0x28], rax ; call r10
0x00000200004a8f77 : salc ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000012edca : salc ; mov rax, qword ptr [rip + 0x2286e6] ; call rax
0x00000200004d4828 : salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200005cbb45 : salc ; mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001cf27b : salc ; mov rcx, r12 ; call r15
0x00000200005cded7 : salc ; mov rcx, r12 ; call rax
0x000002000063dee6 : salc ; mov rcx, r13 ; call r15
0x0000020000475359 : salc ; mov rcx, r13 ; call rax
0x0000020000421257 : salc ; mov rcx, r14 ; call 0x2000004d4f6
0x0000020000051831 : salc ; mov rcx, r14 ; call r11
0x00000200005201af : salc ; mov rcx, r14 ; call r9
0x0000020000140826 : salc ; mov rcx, r15 ; call r14
0x00000200003b6c8a : salc ; mov rcx, r15 ; call rax
0x000002000070fb12 : salc ; mov rcx, rax ; call 0x2000051bd66
0x0000020000652d77 : salc ; mov rcx, rax ; call r15
0x00000200003abe88 : salc ; mov rcx, rbp ; call rax
0x0000020000646b09 : salc ; mov rcx, rbp ; mov byte ptr [rsp + 0x20], r10b ; call rax
0x00000200006465a9 : salc ; mov rcx, rbp ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000449a86 : salc ; mov rcx, rbx ; call 0x200000771c7
0x0000020000584e61 : salc ; mov rcx, rbx ; call 0x200005810f6
0x0000020000585006 : salc ; mov rcx, rbx ; call 0x20000581296
0x00000200003d02d3 : salc ; mov rcx, rbx ; call r11
0x000002000004001f : salc ; mov rcx, rbx ; call r14
0x000002000064c566 : salc ; mov rcx, rbx ; call rax
0x00000200005222e2 : salc ; mov rcx, rdi ; call 0x20000150a23
0x000002000051d3e0 : salc ; mov rcx, rdi ; call 0x2000049961e
0x000002000050b81e : salc ; mov rcx, rdi ; call qword ptr [rax]
0x00000200006d9163 : salc ; mov rcx, rdi ; call r12
0x000002000004004f : salc ; mov rcx, rdi ; call r14
0x000002000064582a : salc ; mov rcx, rdi ; call r15
0x00000200001b2179 : salc ; mov rcx, rdi ; call rax
0x00000200001d13ca : salc ; mov rcx, rdi ; call rbx
0x00000200004275b8 : salc ; mov rcx, rsi ; call 0x20000052467
0x000002000044255f : salc ; mov rcx, rsi ; call 0x2000006ccff
0x00000200005c7b2a : salc ; mov rcx, rsi ; call rax
0x0000020000665af2 : salc ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xff
0x00000200005234ca : salc ; outsd dx, dword ptr [rsi] ; ret 0x83ff
0x00000200006c18c6 : salc ; push rdx ; ret 0xffff
0x000002000037db38 : salc ; push rsi ; ret
0x000002000070d54f : salc ; push rsi ; sti ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000177f46 : salc ; ret
0x00000200001b2d36 : salc ; ret 0xb
0x0000020000538046 : salc ; ret 0xffd9
0x0000020000661e6e : salc ; wait ; ret 0x48ff
0x0000020000082b7a : salc ; xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x00000200006eb305 : salc ; xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000013c212 : salc ; xor eax, eax ; ret
0x0000020000399dad : sar ah, 0x48 ; add esp, 0x28 ; ret
0x00000200006bfe18 : sar bh, 0x10 ; mov rax, r10 ; ret
0x000002000049df3e : sar bh, 0x48 ; add esp, 0x138 ; ret
0x00000200006c0640 : sar bh, 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x000002000049490e : sar bh, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000572ca9 : sar bh, 0x48 ; add esp, 0x48 ; ret
0x00000200004960ac : sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000497633 : sar bh, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000496e62 : sar bh, 0x48 ; add esp, 0x88 ; ret
0x0000020000441d90 : sar bh, 0x48 ; lea eax, dword ptr [rax + rdx*4] ; ret
0x0000020000578832 : sar bh, 0x81 ; ret
0x00000200004984c3 : sar bh, 0x83 ; ret
0x0000020000590789 : sar bh, 0x8b ; enter -0xf75, -0x18 ; pop rax ; ret 0xffc0
0x000002000046a9f2 : sar bh, 0x8b ; ret
0x000002000058c68c : sar bh, 0x90 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004907e1 : sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x00000200003ac4df : sar bh, 0xc0 ; add rsp, 0x38 ; ret
0x00000200004252e7 : sar bh, 0xc0 ; ret
0x0000020000460a5a : sar bh, 0xe9 ; ret 0xfff4
0x000002000049cc7e : sar bh, 0xe9 ; ret 0xfffd
0x000002000059057a : sar bh, 0xeb ; test dword ptr [rbx - 0x74bba7a9], ecx ; ret
0x0000020000399dd1 : sar bh, 0xff ; sete al ; ret
0x0000020000652bf2 : sar bh, 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005611c4 : sar bh, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039e023 : sar bh, 1 ; add rsp, 0x38 ; ret
0x000002000037f27a : sar bh, 1 ; add rsp, 0x48 ; ret
0x00000200003f8798 : sar bh, 1 ; jmp 0x200003f851b
0x0000020000592ae2 : sar bh, 1 ; mov ebx, eax ; call 0x2000001edce
0x0000020000182921 : sar bh, 1 ; push rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200000547b4 : sar bh, 1 ; ret
0x000002000014eab5 : sar bh, 1 ; ret 0x8349
0x000002000001d460 : sar bh, 1 ; ret 0xff49
0x000002000013ee02 : sar bh, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xf741
0x000002000054dc50 : sar bh, cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000037d741 : sar bh, cl ; add rsp, 0x50 ; pop rbx ; ret
0x000002000037f247 : sar bh, cl ; add rsp, 0x58 ; ret
0x000002000054bf13 : sar bh, cl ; jmp 0x2000054bf37
0x00000200003a0f35 : sar bh, cl ; leave ; jne 0x200003a0f49 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x0000020000576d4f : sar bh, cl ; ret
0x00000200004e7de3 : sar bh, cl ; ret 0x5489
0x000002000036a28d : sar bh, cl ; xor r8d, r8d ; xor edx, edx ; call 0x20000386579
0x000002000019bafd : sar byte ptr [r11], 1 ; ret 0x227d
0x0000020000641867 : sar byte ptr [rax + 0x17], 0xff ; ret
0x00000200004f7d20 : sar byte ptr [rax + 0x18], 0x8b ; ret
0x0000020000569514 : sar byte ptr [rax + 0x1a], 0xff ; ret
0x0000020000420b5b : sar byte ptr [rax + 0x28], 0x8a ; ret
0x0000020000596b1b : sar byte ptr [rax + 0x33], 0xff ; ret
0x00000200003fd0f3 : sar byte ptr [rax + 0x47], 0x83 ; clc ; add eax, dword ptr [rcx - 0x75] ; ret
0x0000020000577774 : sar byte ptr [rax + 0x47], 0xff ; ret
0x000002000017a806 : sar byte ptr [rax + 0x7d], 0x8b ; mov r15b, 0xff ; ret
0x00000200001a8ef0 : sar byte ptr [rax + 0xa], 0xbb ; mov ebx, 0xe9c00000 ; ret
0x00000200001cde1c : sar byte ptr [rax + 0xa], 0xff ; ret
0x000002000005793b : sar byte ptr [rax + 0xc0], 0xe9 ; ret 0xfffe
0x000002000001d738 : sar byte ptr [rax + 0xc], 0x48 ; add esp, 0x28 ; ret
0x00000200006348b2 : sar byte ptr [rax + 0xc], 0x8b ; ret
0x0000020000596d4c : sar byte ptr [rax + 0xc], 0xff ; ret
0x000002000001e258 : sar byte ptr [rax + 0xe], 0x4c ; sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x000002000004af59 : sar byte ptr [rax + 3], 0x2b ; ret 0xd08b
0x0000020000516dd4 : sar byte ptr [rax + 3], 0x88 ; pop rdi ; sub al, 0x8b ; ret 0x8b48
0x0000020000014bfe : sar byte ptr [rax + 5], 0x48 ; add esp, 0x28 ; ret
0x000002000000e6a4 : sar byte ptr [rax + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000021ebd : sar byte ptr [rax + 7], 0x4c ; sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x00000200001592e9 : sar byte ptr [rax + 7], 0x4d ; sub eax, ecx ; mov qword ptr [rdx], r8 ; ret
0x00000200006bac25 : sar byte ptr [rax + 7], 0xff ; ret
0x00000200001e719c : sar byte ptr [rax + 9], 0x49 ; add eax, 8 ; inc r10 ; jmp 0x200001e7196
0x00000200003993fe : sar byte ptr [rax + 9], 0xff ; ret
0x000002000025d39c : sar byte ptr [rax + rcx*2], 0xa0 ; jge 0x2000025d3f4 ; add ah, ch ; jmp qword ptr [rbx]
0x0000020000020ee8 : sar byte ptr [rax - 0x12], 0x48 ; mov eax, edx ; ret
0x00000200004f7e0b : sar byte ptr [rax - 0x60], 0xff ; ret
0x00000200006449af : sar byte ptr [rax - 0x75], 0xd0 ; mov ebp, eax ; call 0x20000270049
0x000002000001be96 : sar byte ptr [rax - 0xc], 0x48 ; mov eax, edx ; ret
0x0000020000174bf1 : sar byte ptr [rax], 1 ; setne al ; ret
0x00000200006d5c1b : sar byte ptr [rax], 5 ; jmp rsi
0x0000020000545188 : sar byte ptr [rax], 5 ; ret 0x13de
0x000002000058ffff : sar byte ptr [rbp + 0xd], 0x8b ; sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000055d99b : sar byte ptr [rbx - 0x3fffff66], 0x8b ; ret
0x00000200000ca966 : sar byte ptr [rbx], 0xc1 ; ja 0x200000ca973 ; ret
0x00000200000adc9d : sar byte ptr [rbx], 0xca ; setg al ; ret
0x000002000019bafe : sar byte ptr [rbx], 1 ; ret 0x227d
0x000002000066a3a6 : sar byte ptr [rbx], cl ; ret 0x8bff
0x00000200005b9fc6 : sar byte ptr [rcx + 0x10], 0xf6 ; ret
0x000002000047968e : sar byte ptr [rcx + 0x1a], 0x8b ; ret
0x00000200004e9008 : sar byte ptr [rcx + 0x20], 0xff ; ret 0x8348
0x00000200004f1556 : sar byte ptr [rcx + 0x2a], 0x8b ; ret
0x00000200005998d7 : sar byte ptr [rcx + 0x41], 0xe9 ; ret 0
0x000002000037effa : sar byte ptr [rcx + 0x5a], 0xf7 ; fdivr dword ptr [rbx] ; ret
0x000002000056c3fc : sar byte ptr [rcx + 0xa], 0xbb ; and eax, 0xe9c00002 ; ret 0
0x0000020000144c74 : sar byte ptr [rcx + 5], 0x45 ; mov eax, edx ; jmp 0x20000144c3e
0x000002000016a574 : sar byte ptr [rcx + 5], 0x48 ; and dword ptr [rcx + 0x70], 0 ; ret
0x000002000037f712 : sar byte ptr [rcx + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000172495 : sar byte ptr [rcx + 6], 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200000cce35 : sar byte ptr [rcx + 9], 0xf6 ; ret 0xf20
0x00000200006c649b : sar byte ptr [rcx], 0x35 ; ret 0xfef7
0x00000200004b4cda : sar byte ptr [rcx], cl ; fdivp st(7) ; test al, 3 ; sete al ; ret
0x0000020000617f41 : sar byte ptr [rdi + 0xd], 0x8b ; adc al, 0x2b ; ret 0x341
0x000002000064abbc : sar byte ptr [rdi - 0x74ba003c], 0xc2 ; jmp 0x2000064abd1
0x0000020000654804 : sar byte ptr [rdi], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000524f5c : sar byte ptr [rdi], 0x8b ; ret
0x00000200000499a8 : sar byte ptr [rdx + 0x40], 0xf ; ret 0x4589
0x00000200000ff1d2 : sar byte ptr [rdx + 0x40], 0xf ; ret 0xc103
0x00000200004f975f : sar byte ptr [rdx + 1], 0xf ; ret 0x8a44
0x00000200001a42c4 : sar byte ptr [rdx + 2], 0x3a ; ret 0x973
0x0000020000261584 : sar byte ptr [rdx], 0x46 ; add ah, cl ; ret 0x23
0x000002000022cc58 : sar byte ptr [rdx], 0x46 ; add byte ptr [rax], ch ; cmp eax, dword ptr [rsi] ; cld ; ret 0x23
0x00000200001510fd : sar byte ptr [rip - 0x3ffffddb], 0x74 ; or byte ptr [rbx], bh ; ret 0x850f
0x000002000057093c : sar byte ptr [rip - 0x3ffffffb], 0xf ; ret 0x189
0x0000020000486035 : sar byte ptr [rsi + 1], 0x89 ; ret
0x0000020000079def : sar byte ptr [rsi + rsi - 0x80], 0x3d ; pop rbp ; ret 0x27
0x000002000018cfe0 : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rax + 0x3b] ; ret 0x1372
0x000002000018cfef : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rax + 0x3b] ; ret 0x477
0x000002000047c976 : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000004473 : sar byte ptr [rsi - 0x90483], 1 ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000050d3b7 : sar cl, cl ; call rcx
0x0000020000416e21 : sar dh, 0x83 ; ret 0x75fe
0x00000200004cde89 : sar dh, 0xff ; inc dword ptr [rcx - 0x7d] ; ret 0x4520
0x0000020000196248 : sar dh, cl ; ret
0x00000200005820e9 : sar di, 1 ; test rax, rax ; je 0x200005820fb ; call rax
0x0000020000441d8f : sar dil, 0x48 ; lea eax, dword ptr [rax + rdx*4] ; ret
0x0000020000652bf1 : sar dil, 1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000592ae1 : sar dil, 1 ; mov ebx, eax ; call 0x2000001edcf
0x00000200004fd8b3 : sar dword ptr [rax + 0x48000000], -0x7d ; ret 0x4828
0x0000020000232aad : sar dword ptr [rax + rax], 0x3e ; ret 0x3c
0x000002000009165e : sar dword ptr [rax - 0x45], -0x30 ; xlatb ; mov dl, 0x76 ; ret 0xbb54
0x0000020000584c4f : sar dword ptr [rax - 0x75347501], cl ; ret
0x0000020000421f36 : sar dword ptr [rax], -0x18 ; ret
0x00000200004cd217 : sar dword ptr [rax], -0x18 ; ret 0xbebe
0x00000200006f43ce : sar dword ptr [rax], 0x49 ; dec eax ; jne 0x200006f43b8 ; ret
0x00000200004e9003 : sar dword ptr [rbp + 0x4d], -0x7b ; sar byte ptr [rcx + 0x20], 0xff ; ret 0x8348
0x00000200001e1092 : sar dword ptr [rbp + rbx + 0x3b], 1 ; sal dword ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x00000200000b8b2d : sar dword ptr [rbp + rbx - 0x7d], 1 ; cli ; push qword ptr [rax + rbx - 0x75] ; ret 0x41f0
0x0000020000122efa : sar dword ptr [rbp + rbx - 0x7d], 1 ; cli ; push qword ptr [rax + rbx - 0x75] ; ret 0xff0
0x00000200005af269 : sar dword ptr [rbx - 0x56], cl ; dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x000002000015eb60 : sar dword ptr [rbx], -0x3f ; jb 0x2000015eb4f ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000025e6ed : sar dword ptr [rbx], 0 ; ret
0x00000200007033a5 : sar dword ptr [rcx + 0x200], 0x41 ; call rdx
0x00000200004a85f4 : sar dword ptr [rcx + 0x40000009], 0x3b ; ret 0x870f
0x00000200004c5c57 : sar dword ptr [rdi], 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x0000020000271b56 : sar dword ptr [rdx + 0x10], -0x47 ; ret 0
0x00000200000fefa8 : sar dword ptr [rdx + 0x40], 0xf ; ret 0xc103
0x00000200000ac3ba : sar dword ptr [rdx + 2], 0xf ; ret 0x8445
0x0000020000180dbb : sar dword ptr [rdx + 5], 0x3b ; ret 0x1077
0x000002000015a2e7 : sar dword ptr [rdx + rbp*8 + 0x33], -0x40 ; ret
0x0000020000113623 : sar dword ptr [rip - 0x74bbffdc], 1 ; ret
0x000002000044408d : sar dword ptr [rip - 0x7cbe0009], cl ; ret
0x00000200000cdf35 : sar dword ptr [rsi + rbx - 0x7d], 1 ; cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x0000020000101819 : sar dword ptr [rsi + rbx - 0x7d], cl ; cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x45f0
0x0000020000171cdf : sar dword ptr [rsi], cl ; add al, ch ; mov ebp, 0x8b001fa4 ; ret
0x00000200006483c9 : sar dword ptr [rsp + rax], cl ; add rsp, 0x48 ; ret
0x000002000018096e : sar eax, 0x10 ; add rax, rcx ; ret
0x00000200004e1d67 : sar eax, 0x10 ; add rsp, 0x28 ; ret
0x00000200001364d7 : sar eax, 0x10 ; and eax, 0x7fff ; ret
0x00000200006d0235 : sar eax, 0x10 ; ret
0x0000020000076d02 : sar eax, 0x14 ; ret
0x000002000011033b : sar eax, 0x75 ; cdq ; mov al, 1 ; ret
0x0000020000102277 : sar eax, 0xb ; add byte ptr [rax], al ; jmp 0x20000102247
0x0000020000154873 : sar eax, 1 ; dec rax ; ret
0x000002000059098d : sar eax, 1 ; jmp 0x200005909c7
0x00000200004af1ae : sar eax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014a3b2 : sar eax, 1 ; ret
0x000002000014a709 : sar eax, 3 ; mov dword ptr [rcx + 4], eax ; mov dword ptr [rcx + 0xc], eax ; ret
0x0000020000590a08 : sar eax, 7 ; mov al, byte ptr [rax + r8] ; ret
0x00000200006f9a53 : sar ebp, -0x43 ; dec dword ptr [rcx + rcx*4 + 0x35] ; ret 0xbdfd
0x0000020000505f01 : sar ebp, cl ; ret
0x0000020000128485 : sar ebx, 1 ; inc dword ptr [rcx - 0xa] ; ret
0x00000200003f43db : sar ebx, 1 ; ret 0x48ff
0x00000200006d0281 : sar ecx, 0x10 ; mov rax, rcx ; ret
0x00000200006bb596 : sar edi, -0x18 ; ret
0x00000200006648c3 : sar edi, -0x18 ; ret 0xadf5
0x000002000045ad31 : sar edi, -0x75 ; ret
0x00000200006c9fd8 : sar edi, -0x75 ; ret 0xd285
0x00000200000a4e5f : sar edi, -1 ; jne 0x200000a4e6c ; ret 0
0x0000020000657232 : sar edi, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000054988b : sar edi, 0x48 ; add esp, 0x28 ; ret
0x000002000066452f : sar edi, 0xf ; scasd eax, dword ptr [rdi] ; ret 0x8b44
0x00000200005845bd : sar edi, 1 ; add dword ptr [rcx + 0x5892045], ecx ; ret
0x0000020000550aef : sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000039bf25 : sar edi, 1 ; add rsp, 0x28 ; ret
0x00000200003cadab : sar edi, 1 ; add rsp, 0x38 ; ret
0x00000200006365b6 : sar edi, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006f6881 : sar edi, 1 ; add rsp, 0x48 ; ret
0x00000200006361c8 : sar edi, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003870c7 : sar edi, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000386535 : sar edi, 1 ; jmp 0x200003864ff
0x00000200003d5f24 : sar edi, 1 ; jmp 0x200003d5e24
0x000002000042f72a : sar edi, 1 ; loop 0x2000042f6b5 ; jmp qword ptr [rax]
0x0000020000386a21 : sar edi, 1 ; nop ; add rsp, 0x28 ; ret
0x00000200005820ea : sar edi, 1 ; test rax, rax ; je 0x200005820fa ; call rax
0x0000020000580481 : sar edi, 1 ; xor ecx, ecx ; call 0x2000038c6a2
0x000002000036d9ab : sar edi, cl ; add rsp, 0x18 ; ret
0x000002000036f33e : sar edi, cl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000551701 : sar edi, cl ; call rax
0x0000020000381313 : sar edi, cl ; jmp 0x20000381347
0x0000020000371bc6 : sar edi, cl ; nop ; jmp 0x20000360022
0x000002000012f81f : sar edi, cl ; ret 0xeceb
0x000002000008f772 : sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x00000200004bb9ad : sar r15b, 1 ; ret 0x8349
0x000002000054bf12 : sar r15b, cl ; jmp 0x2000054bf38
0x0000020000590a07 : sar r8, 7 ; mov al, byte ptr [rax + r8] ; ret
0x000002000018096d : sar rax, 0x10 ; add rax, rcx ; ret
0x00000200004e1d66 : sar rax, 0x10 ; add rsp, 0x28 ; ret
0x00000200006d0234 : sar rax, 0x10 ; ret
0x0000020000076d01 : sar rax, 0x14 ; ret
0x0000020000154872 : sar rax, 1 ; dec rax ; ret
0x000002000059098c : sar rax, 1 ; jmp 0x200005909c8
0x00000200004af1ad : sar rax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000014a3b1 : sar rax, 1 ; ret
0x00000200006d0280 : sar rcx, 0x10 ; mov rax, rcx ; ret
0x000002000008f7d7 : sbb ah, al ; ret
0x00000200000ca511 : sbb ah, byte ptr [rax] ; add byte ptr [rbx], dh ; fisttp dword ptr [rax + 3] ; ret 0x3d48
0x00000200002581e8 : sbb ah, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x11061506 ; ret 0xf00d
0x0000020000239704 : sbb ah, byte ptr [rax] ; or eax, dword ptr [rax] ; or eax, 0x11068506 ; ret 0xf00d
0x00000200000933c4 : sbb ah, byte ptr [rax] ; sbb esp, dword ptr [rax] ; sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x000002000022e530 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; adc al, byte ptr [rsi] ; sysenter
0x0000020000256970 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; adc dword ptr [rsi], eax ; sysenter
0x000002000025a044 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; and al, 6 ; sysenter
0x0000020000264d58 : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; or al, byte ptr [rsi] ; sysenter
0x000002000025a01c : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; sub al, byte ptr [rsi] ; sysenter
0x000002000025a0dc : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; xor al, byte ptr [rsi] ; sysenter
0x0000020000259f4c : sbb ah, byte ptr [rcx] ; or dword ptr [rax], eax ; add al, 6 ; xor byte ptr [rsi], al ; sysenter
0x0000020000411749 : sbb ah, byte ptr [rdi] ; add al, ch ; ret
0x00000200002404bc : sbb ah, byte ptr [rdx] ; or eax, dword ptr [rax] ; or eax, 0x14063206 ; ret 0xf00d
0x00000200000ca510 : sbb ah, byte ptr fs:[rax] ; add byte ptr [rbx], dh ; fisttp dword ptr [rax + 3] ; ret 0x3d48
0x000002000070ddb9 : sbb ah, ch ; add eax, 0xff480000 ; ret 0xc0ff
0x000002000062a4a1 : sbb ah, ch ; push rsi ; ret
0x00000200006157fa : sbb ah, dl ; inc dword ptr [rcx - 0xa] ; ret
0x00000200006e7678 : sbb al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000013fb38 : sbb al, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006e7179 : sbb al, 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000052abaa : sbb al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000297db : sbb al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003046c : sbb al, 0 ; add rsp, 0x20 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000106008 : sbb al, 0 ; add rsp, 0x28 ; ret
0x00000200000c8865 : sbb al, 0 ; call 0x20000064b04
0x00000200000aed02 : sbb al, 0 ; je 0x200000aed0b ; ret
0x0000020000107590 : sbb al, 0 ; jmp 0x200001072a1
0x000002000041da12 : sbb al, 0 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200005596ab : sbb al, 0 ; mov qword ptr [rbp + 0x40], rax ; call 0x20000485904
0x0000020000026b66 : sbb al, 0 ; mov r8, r15 ; mov rcx, rbx ; call rax
0x000002000000b3c8 : sbb al, 0 ; ret
0x000002000002703b : sbb al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001fe432 : sbb al, 0x15 ; add al, ch ; ret 0xfc18
0x00000200000933c8 : sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x00000200001b3d6c : sbb al, 0x23 ; ret
0x0000020000061a69 : sbb al, 0x24 ; add rsp, 8 ; ret
0x00000200003ecfdf : sbb al, 0x24 ; call 0x200000a92d4
0x00000200003b4222 : sbb al, 0x3b ; ret
0x000002000046ddd6 : sbb al, 0x3b ; ret 0x870f
0x00000200001639f1 : sbb al, 0x3b ; ret 0xc672
0x00000200003e6194 : sbb al, 0x41 ; call rdx
0x00000200004e3f67 : sbb al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003fdff6 : sbb al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001450ac : sbb al, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x00000200001bd63c : sbb al, 0x48 ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000019fba1 : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x2000019fbeb
0x00000200001a037a : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x200001a03c4
0x000002000025e640 : sbb al, 0x4b ; and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; push rax ; ret
0x00000200001e1200 : sbb al, 0x51 ; out dx, al ; push rsi ; ret 0x7401
0x00000200000a6eb0 : sbb al, 0x65 ; sub al, byte ptr [rax] ; jmp 0x200000a6e7d
0x0000020000043c7f : sbb al, 0x72 ; cmp dword ptr [rcx - 0x7d], ecx ; jmp qword ptr [rax]
0x000002000015a243 : sbb al, 0x72 ; fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000043bb50 : sbb al, 0x72 ; ret
0x00000200004fdc0b : sbb al, 0x72 ; ret 0x8b49
0x000002000004d301 : sbb al, 0x76 ; ret 0x5eb
0x00000200001c4370 : sbb al, 0x7f ; adc bh, byte ptr [rax + 4] ; ret
0x00000200001ae4bf : sbb al, 0x81 ; loop 0x200001ae44b ; inc dword ptr [rdi] ; add byte ptr [rbx], al ; ret 0xc123
0x00000200005b1c9a : sbb al, 0x85 ; push qword ptr [rsp + rcx - 0x7f] ; jmp qword ptr [rbx]
0x00000200003cc0e4 : sbb al, 0x8b ; ret
0x00000200004288d5 : sbb al, 0x8b ; ret 0x8d48
0x000002000048fd4c : sbb al, 0x8b ; ret 0xe8c1
0x000002000012935d : sbb al, 0x8d ; sbb byte ptr [r9 + 0x3b], al ; ret 0x830f
0x00000200006647f0 : sbb al, 0x97 ; ret 0x44ff
0x0000020000661728 : sbb al, 0xa3 ; ret 0xfff
0x00000200006475a0 : sbb al, 0xb7 ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000006b7ec : sbb al, 0xb8 ; add bh, bh ; ret
0x000002000064bd90 : sbb al, 0xc3 ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x000002000019bf05 : sbb al, 0xc3 ; shr rdx, 0x20 ; xsave ptr [rcx] ; ret
0x000002000049d8b0 : sbb al, 0xc7 ; ret
0x0000020000151f40 : sbb al, 0xdf ; and dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000049dec1 : sbb al, 0xe0 ; push rsi ; ret
0x0000020000495c64 : sbb al, 0xe4 ; push qword ptr [rdx + 0x3c12e801] ; ret 0x48ff
0x0000020000609b8c : sbb al, 0xe9 ; ret 0xe17c
0x000002000019fba5 : sbb al, 0xeb ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x000002000048abe0 : sbb al, 0xef ; ret 0x65ff
0x00000200000c5648 : sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x0000020000263938 : sbb al, 0xf3 ; and eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret 0x47
0x00000200005386ec : sbb al, 0xf6 ; ret 0x7401
0x00000200003f3120 : sbb al, 0xf6 ; ret 0x7504
0x00000200001f6da2 : sbb al, 0xf6 ; ret 0xf03
0x0000020000596f4a : sbb al, 0xff ; ret
0x0000020000463d95 : sbb al, 0xff ; ret 0xfa81
0x000002000019c979 : sbb al, 5 ; add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x000002000054abbe : sbb al, 6 ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000018ed34 : sbb al, bh ; dec dword ptr [rax - 0x7d] ; ret
0x000002000054f515 : sbb al, bpl ; in al, -0x43 ; cli ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000490549 : sbb al, bpl ; nop ; ret 0x48ff
0x0000020000656ec5 : sbb al, bpl ; sbb byte ptr [rax - 0x4c], dl ; dec dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200000939cc : sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x00000200000bada2 : sbb al, byte ptr [r8 + rax*8 - 0x3fcdfc88] ; ret
0x00000200000eb4fb : sbb al, byte ptr [r8 - 0x80] ; call qword ptr [rcx]
0x00000200000939c9 : sbb al, byte ptr [rax + 0x1a] ; sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x00000200000bada3 : sbb al, byte ptr [rax + rax*8 - 0x3fcdfc88] ; ret
0x00000200000eb4fc : sbb al, byte ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000613295 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x000002000051a60d : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200000985c2 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000812b3 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000154d02 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000037fedd : sbb al, byte ptr [rax] ; add cl, ch ; ret
0x0000020000140d92 : sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e1016 : sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000139a4d : sbb al, byte ptr [rax] ; jne 0x20000139a56 ; ret
0x0000020000162226 : sbb al, byte ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000003d7f5 : sbb al, byte ptr [rax] ; mov eax, 1 ; ret
0x000002000003a2af : sbb al, byte ptr [rax] ; ret
0x000002000003d71b : sbb al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200005321e9 : sbb al, byte ptr [rbx + rcx*4 - 0x3d] ; mov qword ptr [rsp + 0x20], r14 ; call rax
0x000002000064c04c : sbb al, byte ptr [rbx - 0x3e74fe1f] ; ret
0x00000200001b779b : sbb al, byte ptr [rcx + 0x3b] ; ret
0x00000200000808ba : sbb al, byte ptr [rcx + 0x3e] ; ret 0xa54d
0x000002000069bbe0 : sbb al, byte ptr [rcx - 0x75] ; adc byte ptr [rcx - 0x75], r9b ; ret
0x00000200004c6c5b : sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x1975
0x00000200000a9e44 : sbb al, byte ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000200005e3479 : sbb al, byte ptr [rdi + rcx - 0x49] ; add cl, byte ptr [rax - 0x7d] ; ret 0xe814
0x00000200000939cd : sbb al, byte ptr [rdx + 0x1a] ; ret 0x431a
0x000002000005651e : sbb al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000054f516 : sbb al, ch ; in al, -0x43 ; cli ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000442552 : sbb al, ch ; insb byte ptr [rdi], dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x000002000043bbbf : sbb al, ch ; jnp 0x2000043bc39 ; ret
0x00000200004653d1 : sbb al, ch ; jns 0x200004653be ; ret
0x000002000049054a : sbb al, ch ; nop ; ret 0x48ff
0x00000200004cfa10 : sbb al, ch ; ret
0x0000020000656ec6 : sbb al, ch ; sbb byte ptr [rax - 0x4c], dl ; dec dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200005fcae5 : sbb al, ch ; xchg eax, ebp ; ret
0x00000200000c485a : sbb al, cl ; call 0x1ffc347896d
0x00000200000d7aee : sbb al, cl ; call 0x1ffc348bc01
0x000002000003c58e : sbb al, cl ; call 0x20075c600a0
0x00000200000202cc : sbb al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x200000202d2 ; ret
0x00000200001e0542 : sbb al, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200004cbebe : sbb al, dh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004cfa0f : sbb al, r13b ; ret
0x00000200000d7aed : sbb al, r9b ; call 0x1ffc348bc02
0x000002000003c58d : sbb al, r9b ; call 0x20075c600a1
0x000002000039274c : sbb bh, bh ; add rsp, 0x28 ; ret
0x00000200001ab3a2 : sbb bh, bh ; jne 0x200001ab3b5 ; and qword ptr [rdx + 8], 0 ; ret
0x000002000001bcde : sbb bh, bh ; ret
0x000002000058b534 : sbb bh, bh ; ret 0x8348
0x00000200005f2d4c : sbb bh, bh ; ret 0x8349
0x0000020000383031 : sbb bh, bh ; ret 0x86e9
0x000002000046f02b : sbb bh, bh ; ret 0x86eb
0x0000020000463b3f : sbb bh, bh ; ret 0xc148
0x00000200003f9da5 : sbb bh, bh ; ret 0xe6eb
0x00000200005c09ca : sbb bh, byte ptr [rcx] ; or byte ptr [r13 + r10 - 0x7d], r14b ; ret
0x0000020000240384 : sbb bh, byte ptr [rdi] ; adc eax, dword ptr [rax] ; or al, byte ptr [rsi] ; ret 0x2e06
0x00000200000939c7 : sbb bh, byte ptr [rdi] ; sbb al, byte ptr [rax + 0x1a] ; sbb al, byte ptr [r10 + 0x1a] ; ret 0x431a
0x00000200006bba1a : sbb bh, byte ptr [rsi + 0x6348ffc1] ; ret 0x8d49
0x0000020000123040 : sbb bh, dl ; push rsi ; ret 0x7401
0x000002000003a1ce : sbb bl, al ; add eax, edx ; jmp 0x2000003a1b4
0x000002000064bd74 : sbb bl, al ; bts dword ptr [r8 + 0x20], 0x19 ; ret
0x000002000008e860 : sbb bl, bh ; ret 0xda8
0x000002000008477a : sbb bl, byte ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x82bc
0x000002000023f8d0 : sbb bl, byte ptr [rip + 0x6040008] ; or eax, dword ptr [rsi] ; sysenter
0x0000020000204c8c : sbb bl, byte ptr [rsi] ; or byte ptr [rax], al ; add al, 6 ; or eax, dword ptr [rsi] ; sysenter
0x000002000003a1c9 : sbb bl, ch ; add eax, 0x18 ; ret
0x0000020000132aa4 : sbb bl, ch ; out 0xf0, al ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000006c1d9 : sbb bl, ch ; ret
0x00000200004812f2 : sbb bl, ch ; ret 0x8b48
0x000002000019fbaf : sbb bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000008567a : sbb bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; cdq ; ret
0x000002000009f9e9 : sbb bl, dh ; ret
0x000002000051c8fe : sbb bl, dh ; ret 0x48ff
0x0000020000573a86 : sbb byte ptr [esi - 0xa], dh ; ret 0x7520
0x00000200004df665 : sbb byte ptr [r10], dil ; ret 0x470f
0x000002000054370a : sbb byte ptr [r11], al ; ret
0x000002000015b30c : sbb byte ptr [r11], al ; ret 0xc23b
0x000002000037d41d : sbb byte ptr [r11], dil ; ret 0x420f
0x00000200004c8744 : sbb byte ptr [r11], dil ; ret 0xe975
0x00000200005986ed : sbb byte ptr [r11], dil ; ret 0xed75
0x00000200004cf99d : sbb byte ptr [r11], r8b ; ret
0x00000200004db31f : sbb byte ptr [r13 + 0x33], r8b ; fild dword ptr [rcx - 0x75] ; ret
0x000002000013b8bd : sbb byte ptr [r13 + 0x3b], cl ; ret 0x870f
0x000002000045e80e : sbb byte ptr [r13 + 0xb], r8b ; ret
0x00000200003c3338 : sbb byte ptr [r13 + r9*4 + 4], r9b ; ret 0xcbeb
0x00000200000e4359 : sbb byte ptr [r13 + rcx*4 + 0x5a], al ; add dword ptr [rbp - 0x75], eax ; ret
0x000002000019e14a : sbb byte ptr [r13 - 0x75], al ; rol dword ptr [rbp - 0x75], cl ; ret
0x0000020000037bfa : sbb byte ptr [r13 - 0x75], cl ; adc byte ptr [r13 - 0x75], cl ; ret
0x00000200000e793e : sbb byte ptr [r14 + 3], r12b ; ret 0xffb9
0x000002000006f96d : sbb byte ptr [r14 + 3], spl ; ret
0x000002000014b8d9 : sbb byte ptr [r14 + 3], spl ; ret 0x3b66
0x0000020000004400 : sbb byte ptr [r14 + 3], spl ; ret 0x840f
0x000002000004f481 : sbb byte ptr [r14 + 3], spl ; ret 0xffb9
0x0000020000590003 : sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000055bdf4 : sbb byte ptr [r15], r9b ; mov bh, 0x55 ; adc byte ptr [rcx - 1], al ; ret 0xb70f
0x0000020000130770 : sbb byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x0000020000651916 : sbb byte ptr [r8 + 0x3b], cl ; ret
0x000002000041079a : sbb byte ptr [r8 + 0x3b], r9b ; ret
0x00000200000362c3 : sbb byte ptr [r8 + 0x41891041], cl ; pop rax ; ret
0x00000200003f9836 : sbb byte ptr [r8 + 0x450f4901], bpl ; ret 0x3b49
0x00000200000c7881 : sbb byte ptr [r8 + 0xf], cl ; ret
0x00000200000acbed : sbb byte ptr [r8 + 1], cl ; ret
0x00000200000dc888 : sbb byte ptr [r8 + 2], dil ; ret 0
0x0000020000144bd0 : sbb byte ptr [r8 + 3], r9b ; ret
0x000002000043861c : sbb byte ptr [r8 - 0x75], cl ; enter -0x6518, -0x15 ; ret
0x00000200000ca654 : sbb byte ptr [r8 - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000177fdf : sbb byte ptr [r8 - 0x75], cl ; push rbx ; xor byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200001277f5 : sbb byte ptr [r8 - 0x75], cl ; push rdx ; xor byte ptr [rax + 0x3b], cl ; ret 0x8948
0x00000200003a96e2 : sbb byte ptr [r8 - 0x75], cl ; ret
0x00000200003c8589 : sbb byte ptr [r8 - 0x75], cl ; ret 0x3345
0x000002000019bf36 : sbb byte ptr [r8 - 0x75], cl ; ret 0xc148
0x000002000049e754 : sbb byte ptr [r8 - 0x75], cl ; ret 0xdb33
0x00000200006bfe05 : sbb byte ptr [r8 - 0x75], cl ; ret 0xffc3
0x000002000011660e : sbb byte ptr [r8 - 0x75], r9b ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200004039bf : sbb byte ptr [r8 - 0x75], r9b ; ret
0x00000200004b59e8 : sbb byte ptr [r8 - 0x75], r9b ; xlatb ; call 0x200000d5ba8
0x000002000056fc79 : sbb byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rax + rax*4 + 0x48], 3 ; ret
0x00000200003ae077 : sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200003f751d : sbb byte ptr [r8 - 0x7d], cl ; ret 0x890c
0x00000200005beb82 : sbb byte ptr [r8 - 1], cl ; ret 0x8b4d
0x00000200004ff6d4 : sbb byte ptr [r8], al ; ret
0x000002000012935f : sbb byte ptr [r9 + 0x3b], al ; ret 0x830f
0x00000200003c9199 : sbb byte ptr [r9 + 0x3b], cl ; ret
0x00000200005dfe16 : sbb byte ptr [r9 + r9*4 + 0x47], r8b ; adc cl, ch ; ret 0xe54c
0x000002000035e841 : sbb byte ptr [r9 - 0x77], cl ; and byte ptr [r9 - 0x7d], cl ; ret
0x000002000013a6d8 : sbb byte ptr [r9 - 1], al ; ret
0x00000200004ed7a5 : sbb byte ptr [r9], r8b ; pop rdi ; sbb al, 0x3b ; ret
0x0000020000130771 : sbb byte ptr [rax + 0x23], cl ; ret 0x3148
0x000002000043a676 : sbb byte ptr [rax + 0x3480043], 0xcb ; jmp rcx
0x00000200001a689d : sbb byte ptr [rax + 0x3b], cl ; enter -0x108e, -0x75 ; ret 0x90c3
0x000002000010ea30 : sbb byte ptr [rax + 0x3b], cl ; ret
0x00000200005e33f4 : sbb byte ptr [rax + 0x3b], cl ; ret 0x1374
0x00000200000360c9 : sbb byte ptr [rax + 0x41057420], ch ; or dword ptr [rax], 0xffffffff ; ret
0x00000200000362c4 : sbb byte ptr [rax + 0x41891041], cl ; pop rax ; ret
0x00000200003f9837 : sbb byte ptr [rax + 0x450f4901], ch ; ret 0x3b49
0x000002000061d88e : sbb byte ptr [rax + 0x48000000], 0x8b ; cmp dh, dh ; ret
0x00000200000d854b : sbb byte ptr [rax + 0x63], cl ; ret 0x8b49
0x00000200000c7882 : sbb byte ptr [rax + 0xf], cl ; ret
0x00000200000acbee : sbb byte ptr [rax + 1], cl ; ret
0x00000200004c5cc3 : sbb byte ptr [rax + 2], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000200000dc889 : sbb byte ptr [rax + 2], bh ; ret 0
0x00000200000a695f : sbb byte ptr [rax + 3], cl ; ret
0x000002000016c047 : sbb byte ptr [rax + 3], cl ; ret 0x4810
0x000002000019751e : sbb byte ptr [rax + rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000006ba4a : sbb byte ptr [rax + rax], al ; add byte ptr [rax], al ; je 0x2000006ba8a ; mov al, 1 ; ret
0x000002000006ba7a : sbb byte ptr [rax + rax], al ; add byte ptr [rax], al ; jne 0x2000006baa3 ; xor al, al ; ret
0x00000200003bd6c7 : sbb byte ptr [rax + rax], al ; add byte ptr [rax], al ; jne 0x200003bd6d8 ; ret
0x0000020000378502 : sbb byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x00000200005a7b7c : sbb byte ptr [rax + rbp*8 + 0x44], dh ; xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x0000020000656ec8 : sbb byte ptr [rax - 0x4c], dl ; dec dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200003807ec : sbb byte ptr [rax - 0x73], cl ; push rbp ; ret 0x4166
0x00000200006c9639 : sbb byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x000002000043861d : sbb byte ptr [rax - 0x75], cl ; enter -0x6518, -0x15 ; ret
0x00000200000ca655 : sbb byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000011660f : sbb byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000177fe0 : sbb byte ptr [rax - 0x75], cl ; push rbx ; xor byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200001277f6 : sbb byte ptr [rax - 0x75], cl ; push rdx ; xor byte ptr [rax + 0x3b], cl ; ret 0x8948
0x00000200000d2e79 : sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000116613 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200003c858a : sbb byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200001b68bf : sbb byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200001a3654 : sbb byte ptr [rax - 0x75], cl ; ret 0x90c3
0x000002000019bf37 : sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000049e755 : sbb byte ptr [rax - 0x75], cl ; ret 0xdb33
0x00000200006bfe06 : sbb byte ptr [rax - 0x75], cl ; ret 0xffc3
0x000002000003f990 : sbb byte ptr [rax - 0x75], cl ; retf -0x3eb8 ; jmp 0x20048c684c4
0x00000200000d51a7 : sbb byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x00000200004b59e9 : sbb byte ptr [rax - 0x75], cl ; xlatb ; call 0x200000d5ba7
0x00000200006bff5a : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [r8 - 0x75], cl ; ret
0x000002000060018c : sbb byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test bh, dh ; ret 0xffe6
0x00000200001684df : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001684ef ; jmp rcx
0x00000200001684de : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001684f0 ; jmp rcx
0x000002000056fc7a : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*4 + 0x48], 3 ; ret
0x00000200003bcb52 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, ebx ; call rdx
0x0000020000403314 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, edi ; call rdx
0x000002000064bee4 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x0000020000067eaf : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x000002000069cb72 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rdx*2 + 0x48], 0x3b ; ret 0x840f
0x000002000060018b : sbb byte ptr [rax - 0x7b], r9b ; dec dword ptr [rdi] ; test bh, dh ; ret 0xffe6
0x000002000069cb71 : sbb byte ptr [rax - 0x7b], r9b ; sal byte ptr [rdi + rdx*2 + 0x48], 0x3b ; ret 0x840f
0x00000200001c3d77 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000200001a4a7f : sbb byte ptr [rax - 0x7d], cl ; ret 0x391c
0x00000200005a9634 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200003f751e : sbb byte ptr [rax - 0x7d], cl ; ret 0x890c
0x00000200004cdd48 : sbb byte ptr [rax - 0x7d], cl ; ret 0x8b20
0x00000200005dc6d1 : sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x0000020000387d44 : sbb byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200004cdeab : sbb byte ptr [rax - 0x7d], cl ; ret 0xe920
0x00000200001a17df : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb18
0x00000200000d248f : sbb byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000020000182471 : sbb byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200004dee8a : sbb byte ptr [rax - 1], cl ; leave ; jne 0x200004dee8c ; ret
0x000002000019b6fd : sbb byte ptr [rax - 1], cl ; ret
0x00000200005beb83 : sbb byte ptr [rax - 1], cl ; ret 0x8b4d
0x0000020000576aa6 : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000df952 : sbb byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x00000200001549e6 : sbb byte ptr [rax], ah ; mov eax, 0xffff ; ret
0x000002000002599a : sbb byte ptr [rax], ah ; or eax, 0xffffffff ; ret
0x0000020000154f84 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000e9843 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000480d64 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; test eax, eax ; cmove eax, ecx ; ret
0x0000020000168fbc : sbb byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064e7af : sbb byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001cd333 : sbb byte ptr [rax], al ; call r8
0x00000200001d543b : sbb byte ptr [rax], al ; call rax
0x0000020000499607 : sbb byte ptr [rax], al ; mov al, r8b ; add rsp, 0x28 ; ret
0x000002000016225b : sbb byte ptr [rax], al ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001621f6 : sbb byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000164edc : sbb byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049c3d7 : sbb byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001486e1 : sbb byte ptr [rax], al ; mov qword ptr [rcx + 0x5348], rax ; ret
0x00000200004f9055 : sbb byte ptr [rax], al ; mov qword ptr [rip + 0x18a56a], rax ; ret
0x000002000006c392 : sbb byte ptr [rax], al ; ret
0x00000200000985c0 : sbb byte ptr [rax], al ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000164daf : sbb byte ptr [rax], al ; shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001549e5 : sbb byte ptr [rax], spl ; mov eax, 0xffff ; ret
0x0000020000025999 : sbb byte ptr [rax], spl ; or eax, 0xffffffff ; ret
0x00000200004db320 : sbb byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x00000200003656e7 : sbb byte ptr [rbp + 0x3b], al ; ret
0x000002000001d319 : sbb byte ptr [rbp + 0x3b], cl ; ret
0x00000200001a1ebc : sbb byte ptr [rbp + 0x3b], cl ; ret 0x830f
0x000002000013b8be : sbb byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x000002000045e80f : sbb byte ptr [rbp + 0xb], al ; ret
0x00000200004a8970 : sbb byte ptr [rbp + 3], al ; ret 0x34d
0x00000200001cf672 : sbb byte ptr [rbp + r9*4 + 0x4a], al ; adc al, ch ; ret
0x00000200001d00a2 : sbb byte ptr [rbp + r9*4 + 0x4a], al ; adc al, ch ; xchg eax, ebx ; ret 0xffea
0x000002000064d7fd : sbb byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x00000200001cf673 : sbb byte ptr [rbp + rcx*4 + 0x4a], al ; adc al, ch ; ret
0x00000200001d00a3 : sbb byte ptr [rbp + rcx*4 + 0x4a], al ; adc al, ch ; xchg eax, ebx ; ret 0xffea
0x00000200000e435a : sbb byte ptr [rbp + rcx*4 + 0x5a], al ; add dword ptr [rbp - 0x75], eax ; ret
0x00000200003c3339 : sbb byte ptr [rbp + rcx*4 + 4], cl ; ret 0xcbeb
0x00000200000e9838 : sbb byte ptr [rbp - 0x2b], dh ; or r8d, edx ; mov eax, r8d ; ret
0x0000020000554190 : sbb byte ptr [rbp - 0x48f076f4], cl ; ret 0xc183
0x00000200004c5422 : sbb byte ptr [rbp - 0x75], al ; ret
0x000002000019e14b : sbb byte ptr [rbp - 0x75], al ; rol dword ptr [rbp - 0x75], cl ; ret
0x0000020000037bfb : sbb byte ptr [rbp - 0x75], cl ; adc byte ptr [r13 - 0x75], cl ; ret
0x00000200006c64d2 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200006c6500 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ca8ef : sbb byte ptr [rbp - 0x75], cl ; jnp 0x200006ca91d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000108a05 : sbb byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x1e], 0xf3 ; ret
0x00000200000bba53 : sbb byte ptr [rbx + 0x22c0e205], cl ; add byte ptr [rbx], bh ; ret
0x000002000005ba79 : sbb byte ptr [rbx + 0x28c81], cl ; add byte ptr [rbx], ch ; ret 0xd233
0x000002000017f257 : sbb byte ptr [rbx + 0x5c8b48c3], cl ; and al, 8 ; ret
0x00000200006f5ff8 : sbb byte ptr [rbx + rcx*4 + 0x43], cl ; cmp byte ptr [rcx - 0x75], al ; iretd ; call rax
0x0000020000551643 : sbb byte ptr [rbx + rcx*4 + 0x5c], cl ; ret 0x4908
0x0000020000112cad : sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; mov al, r10b ; ret
0x000002000014c7e2 : sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200003d272b : sbb byte ptr [rbx + rcx*4 + 0x7c], cl ; and al, 0x30 ; pop r14 ; pop rsi ; ret
0x00000200001a6839 : sbb byte ptr [rbx + rdi - 0x40], cl ; jb 0x200001a6825 ; mov eax, r9d ; ret
0x00000200000e19eb : sbb byte ptr [rbx + rdx*2], 0 ; add byte ptr [rax + 3], cl ; ret 0xa74
0x00000200006407d4 : sbb byte ptr [rbx - 0x3174b72b], cl ; call 0x2000026f019
0x000002000036389f : sbb byte ptr [rbx - 0x3f7cfbbf], cl ; sbb byte ptr [rbx], bh ; ret
0x00000200006d8f38 : sbb byte ptr [rbx - 0x74befbb1], cl ; ret 0x1ba
0x0000020000608513 : sbb byte ptr [rbx - 0x7cb7f73e], al ; ret 0xe902
0x00000200004c7ef4 : sbb byte ptr [rbx - 0x7df0ef08], al ; ret 0x13d6
0x000002000019b578 : sbb byte ptr [rbx], ah ; ret 0xc80b
0x000002000000d592 : sbb byte ptr [rbx], ah ; ret 0xcbe9
0x00000200004cf99e : sbb byte ptr [rbx], al ; ret
0x000002000015b30d : sbb byte ptr [rbx], al ; ret 0xc23b
0x00000200005a98da : sbb byte ptr [rbx], bh ; outsb dx, byte ptr [rsi] ; add al, 0x72 ; ret 0x8d48
0x00000200003638a5 : sbb byte ptr [rbx], bh ; ret
0x000002000015866f : sbb byte ptr [rbx], bh ; ret 0x2d73
0x000002000037d41e : sbb byte ptr [rbx], bh ; ret 0x420f
0x00000200001639e1 : sbb byte ptr [rbx], bh ; ret 0xd672
0x00000200001041cb : sbb byte ptr [rbx], bh ; ret 0xe875
0x00000200004c8745 : sbb byte ptr [rbx], bh ; ret 0xe975
0x00000200001f80a5 : sbb byte ptr [rbx], bh ; ret 0xed75
0x00000200004654ea : sbb byte ptr [rbx], bpl ; ret
0x00000200004654eb : sbb byte ptr [rbx], ch ; ret
0x0000020000464ee8 : sbb byte ptr [rbx], ch ; ret 0x90c3
0x0000020000250fed : sbb byte ptr [rbx], cl ; add byte ptr [rip + 0x18061b06], cl ; ret 0xf011
0x000002000022eb55 : sbb byte ptr [rbx], cl ; add byte ptr [rip + 0x18063406], cl ; ret 0xf011
0x000002000022d301 : sbb byte ptr [rbx], cl ; add byte ptr [rip + 0x1806de06], cl ; ret 0xf011
0x00000200006f2cbb : sbb byte ptr [rbx], cl ; ret 0x81c3
0x00000200006f5e2f : sbb byte ptr [rbx], dh ; leave ; call rax
0x000002000064e6c7 : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter 0x3ee8, 9 ; ret 0x48ff
0x00000200004fb864 : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200000de06e : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5f], al ; ret
0x000002000013e1c6 : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200006cab41 : sbb byte ptr [rbx], dh ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rbp ; ret
0x00000200001041ca : sbb byte ptr [rbx], dil ; ret 0xe875
0x00000200001f80a4 : sbb byte ptr [rbx], r15b ; ret 0xed75
0x00000200004cfba3 : sbb byte ptr [rbx], r8b ; ret
0x00000200000e6a91 : sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x00000200005695be : sbb byte ptr [rcx + 0x35], ch ; add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x0000020000030ab5 : sbb byte ptr [rcx + 0x3b], al ; ret
0x0000020000129334 : sbb byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200003c919a : sbb byte ptr [rcx + 0x3b], cl ; ret
0x00000200000c7c61 : sbb byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000002095b : sbb byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c0 ; ret 0xc13b
0x000002000013034d : sbb byte ptr [rcx + 0xf], cl ; ret
0x00000200006e6fb2 : sbb byte ptr [rcx + 3], cl ; ret 0xc9ff
0x000002000003b455 : sbb byte ptr [rcx + rax], ah ; ret
0x00000200006b9fe0 : sbb byte ptr [rcx + rcx + 0x140], dl ; add byte ptr [rax], al ; ret 0x4009
0x00000200006ba008 : sbb byte ptr [rcx + rcx + 0x140], dl ; add byte ptr [rax], dh ; ret 0x4009
0x000002000063fc5b : sbb byte ptr [rcx + rcx*4 + 0x1a], cl ; mov rax, r9 ; ret
0x00000200005dfe17 : sbb byte ptr [rcx + rcx*4 + 0x47], al ; adc cl, ch ; ret 0xe54c
0x00000200004253f0 : sbb byte ptr [rcx - 0x1a], cl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200004c1858 : sbb byte ptr [rcx - 0x74b750bb], cl ; ret
0x00000200000a44a8 : sbb byte ptr [rcx - 0x75], al ; ret
0x000002000013a4b8 : sbb byte ptr [rcx - 0x75], al ; ret 0x90c3
0x000002000000ed0e : sbb byte ptr [rcx - 0x75], al ; xchg byte ptr [rax - 0x7c000000], dl ; ret 0xd74
0x00000200005b92e1 : sbb byte ptr [rcx - 0x75], cl ; imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000000d003 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000000d031 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002027b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000202a9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000059cf6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000059d24 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000faba6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000fabd4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012b957 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000012b985 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000143bb4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000143be2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001530b0 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001530e6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000016ee1f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000016ee4d ; mov rsp, r11 ; pop rdi ; ret
0x000002000018672e : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000018675c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000198c3f : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000198c6d ; mov rsp, r11 ; pop rdi ; ret
0x000002000019d0ec : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000019d11a ; mov rsp, r11 ; pop rdi ; ret
0x00000200003847af : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003847dd ; mov rsp, r11 ; pop rdi ; ret
0x000002000039e37a : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000039e3a8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003ca2bd : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003ca2f3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003de6f4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003de722 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000423ad9 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000423b07 ; mov rsp, r11 ; pop rdi ; ret
0x000002000043a20e : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000043a23c ; mov rsp, r11 ; pop rdi ; ret
0x000002000047a66d : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000047a69b ; mov rsp, r11 ; pop rdi ; ret
0x000002000048b74f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000048b77d ; mov rsp, r11 ; pop rdi ; ret
0x000002000048c566 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000048c59c ; mov rsp, r11 ; pop rdi ; ret
0x000002000049c122 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000049c150 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab445 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ab473 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b1d45 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004b1d73 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b353c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004b356a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004dc63b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004dc669 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e3707 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e3735 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ea263 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ea291 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f9e51 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004f9e7f ; mov rsp, r11 ; pop rdi ; ret
0x000002000050181d : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000050184b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501e48 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000501e76 ; mov rsp, r11 ; pop rdi ; ret
0x000002000052b4cc : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000052b4fa ; mov rsp, r11 ; pop rdi ; ret
0x000002000053294c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000053297a ; mov rsp, r11 ; pop rdi ; ret
0x000002000054176c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000054179a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000542fcb : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000542ff9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000056f590 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000056f5be ; mov rsp, r11 ; pop rdi ; ret
0x00000200005728d4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000572902 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005745f1 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000057461f ; mov rsp, r11 ; pop rdi ; ret
0x000002000057d75e : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000057d78c ; mov rsp, r11 ; pop rdi ; ret
0x000002000057f74e : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000057f77c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000581f0b : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000581f39 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005a53ea : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005a5418 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005c7c68 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005c7c96 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005c7d05 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005c7d33 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005d0479 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005d04a7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006645de : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000066460c ; mov rsp, r11 ; pop rdi ; ret
0x00000200006d03d7 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006d0405 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000034278 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000342a6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000037c96 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000037cc4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001098bd : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001098eb ; mov rsp, r11 ; pop rbp ; ret
0x000002000010a2ae : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010a2dc ; mov rsp, r11 ; pop rbp ; ret
0x000002000010aa26 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010aa54 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010abd6 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000010ac04 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011be30 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000011be5e ; mov rsp, r11 ; pop rbp ; ret
0x000002000011bf64 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000011bf92 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000143d64 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000143d92 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000171f71 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000171fa7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000186934 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000186962 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1567 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001c1595 ; mov rsp, r11 ; pop rbp ; ret
0x000002000038d076 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000038d0a4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000039863e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000039866c ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b006f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003b009d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000416701 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000041672f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004995cf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004995fd ; mov rsp, r11 ; pop rbp ; ret
0x000002000049a2c8 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000049a2f6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab1d4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004ab202 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ab26f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004ab29d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ada33 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004ada61 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b24c6 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004b24f4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f57ce : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004f5804 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000504b15 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000504b43 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a621 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051a64f ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b08e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051b0bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b212 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051b240 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051d57d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051d5ab ; mov rsp, r11 ; pop rbp ; ret
0x000002000052a615 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000052a643 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054962a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000549658 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054d76d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000054d79b ; mov rsp, r11 ; pop rbp ; ret
0x000002000054f974 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000054f9aa ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564922 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000564950 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000566f77 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000566fa5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000567a43 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000567a71 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000593ebe : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000593eec ; mov rsp, r11 ; pop rbp ; ret
0x0000020000598608 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000598636 ; mov rsp, r11 ; pop rbp ; ret
0x000002000059f950 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000059f97e ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ad503 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005ad531 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005aecdc : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005aed12 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005b9c61 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005b9c97 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005bf8c9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005bf8f7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bb8ab : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006bb8d9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bdb69 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006bdb97 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c4eb9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006c4ee7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f7fa5 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006f7fd3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000703cfb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000703d29 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000019273 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000192dc ; ret
0x000002000010a1af : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010a216 ; ret
0x0000020000115aec : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000115b55 ; ret
0x00000200001171ee : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000117257 ; ret
0x0000020000118d62 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000118dc9 ; ret
0x000002000014042a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000140491 ; ret
0x0000020000165f1a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000165f83 ; ret
0x000002000019290b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000192974 ; ret
0x00000200001955e4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000019564d ; ret
0x000002000036b673 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036b6dc ; ret
0x000002000037be72 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037bedb ; ret
0x00000200003b449e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b4507 ; ret
0x00000200003c5586 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c55ef ; ret
0x00000200003fcffe : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fd067 ; ret
0x000002000040d02b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040d094 ; ret
0x0000020000426136 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042619f ; ret
0x000002000047e66a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047e6d1 ; ret
0x00000200004861c0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000486229 ; ret
0x000002000048748b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004874f4 ; ret
0x0000020000489bfb : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000489c64 ; ret
0x0000020000496fc5 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049702e ; ret
0x00000200004ad847 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ad8ae ; ret
0x00000200004dbe80 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dbee7 ; ret
0x00000200004e3c08 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e3c6f ; ret
0x00000200004e4e2b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e4e92 ; ret
0x00000200004f2246 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f22af ; ret
0x00000200004f8c93 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f8cfa ; ret
0x00000200005086d8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000508741 ; ret
0x000002000050aabb : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050ab22 ; ret
0x0000020000519195 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005191fc ; ret
0x0000020000519c35 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000519c9e ; ret
0x000002000051dbc0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051dc29 ; ret
0x00000200005219c5 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000521a2c ; ret
0x0000020000542d74 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000542ddb ; ret
0x0000020000546155 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005461be ; ret
0x000002000055edce : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055ee35 ; ret
0x0000020000564cb3 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000564d1a ; ret
0x0000020000568ed4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000568f20 ; pop rsi ; ret
0x000002000056c12f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056c198 ; ret
0x0000020000577b46 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000577b92 ; pop rsi ; ret
0x0000020000585418 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000585481 ; ret
0x00000200005935ee : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000593655 ; ret
0x000002000059b333 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059b39a ; ret
0x000002000059f202 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059f26b ; ret
0x00000200005a7706 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a776d ; ret
0x00000200005c2aa6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c2b0d ; ret
0x0000020000640421 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064046d ; pop rdi ; ret
0x00000200006bab59 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006babc0 ; ret
0x00000200006c309f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c3106 ; ret
0x00000200006c5828 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c588f ; ret
0x00000200006ebc8b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ebcf2 ; ret
0x00000200006f3dec : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f3e53 ; ret
0x00000200006ff184 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ff1eb ; ret
0x000002000040de8f : sbb byte ptr [rcx - 0x75], cl ; ret
0x00000200005fb9b8 : sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200004c8c7f : sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200004d4825 : sbb byte ptr [rcx - 0x75], cl ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200004d4824 : sbb byte ptr [rcx - 0x75], r9b ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000192c1c : sbb byte ptr [rcx - 0x76], al ; ret 0x90c3
0x000002000035e842 : sbb byte ptr [rcx - 0x77], cl ; and byte ptr [r9 - 0x7d], cl ; ret
0x00000200001facde : sbb byte ptr [rcx - 0x77], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000113381 : sbb byte ptr [rcx - 0x78], al ; add ecx, dword ptr [rcx - 1] ; ret
0x000002000019fbab : sbb byte ptr [rcx - 0x7d], cl ; rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000177bb1 : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000200004a4336 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000002000045bb80 : sbb byte ptr [rcx - 0xa], al ; ret
0x000002000013a6d9 : sbb byte ptr [rcx - 1], al ; ret
0x00000200004e29db : sbb byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000fe7be : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200004ed7a6 : sbb byte ptr [rcx], al ; pop rdi ; sbb al, 0x3b ; ret
0x00000200005015ac : sbb byte ptr [rdi + 0x4d8b48ff], dh ; xor bh, bh ; ret
0x000002000054085d : sbb byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000470f9f : sbb byte ptr [rdi + rcx - 0x49], al ; ret 0x34c
0x000002000004bf14 : sbb byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000141d13 : sbb byte ptr [rdi], al ; add al, al ; ret
0x0000020000235c85 : sbb byte ptr [rdi], al ; add byte ptr [rax], bl ; ret 0xf014
0x000002000058b85f : sbb byte ptr [rdi], cl ; mov bh, 0x41 ; add bh, bh ; ret 0x141
0x000002000055bdf5 : sbb byte ptr [rdi], cl ; mov bh, 0x55 ; adc byte ptr [rcx - 1], al ; ret 0xb70f
0x00000200003be832 : sbb byte ptr [rdi], cl ; mov word ptr [rbp - 0xffddb2], dr0 ; ret 0x5489
0x000002000003a1a7 : sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000590004 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000125faf : sbb byte ptr [rdi], cl ; test eax, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000012fe7c : sbb byte ptr [rdi], cl ; test ebx, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000012ff6f : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2349
0x0000020000002feb : sbb byte ptr [rdx + 0x70], bh ; call rax
0x0000020000047833 : sbb byte ptr [rdx + 7], dh ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001639dc : sbb byte ptr [rdx - 0x75], al ; push rsp ; xchg eax, ecx ; sbb byte ptr [rbx], bh ; ret 0xd672
0x00000200004c5176 : sbb byte ptr [rdx - 0x75], al ; sbb r9b, byte ptr [rdi + rdi*8] ; ret
0x0000020000596f43 : sbb byte ptr [rdx - 0x77bee3b9], cl ; sbb al, 0xff ; ret
0x000002000009a2a7 : sbb byte ptr [rdx], 0xd6 ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x000002000005d081 : sbb byte ptr [rdx], bh ; ret 0x1875
0x000002000019144c : sbb byte ptr [rdx], bh ; ret 0x2274
0x00000200004df666 : sbb byte ptr [rdx], bh ; ret 0x470f
0x000002000008edd6 : sbb byte ptr [rdx], dh ; ret
0x000002000005d080 : sbb byte ptr [rdx], r15b ; ret 0x1875
0x000002000013e91c : sbb byte ptr [rip - 0x74bc0000], al ; ret
0x000002000006f96e : sbb byte ptr [rsi + 3], ah ; ret
0x000002000014b8da : sbb byte ptr [rsi + 3], ah ; ret 0x3b66
0x0000020000004401 : sbb byte ptr [rsi + 3], ah ; ret 0x840f
0x000002000004f482 : sbb byte ptr [rsi + 3], ah ; ret 0xffb9
0x0000020000091857 : sbb byte ptr [rsi - 0x24], cl ; ret 0xb3cc
0x000002000013b40c : sbb byte ptr [rsi - 0x77], ah ; or eax, 0x149be0 ; ret
0x0000020000573a87 : sbb byte ptr [rsi - 0xa], dh ; ret 0x7520
0x0000020000499924 : sbb byte ptr [rsi], al ; ret 0xf0ff
0x000002000022f066 : sbb byte ptr [rsi], al ; sysenter
0x000002000061e587 : sbb ch, al ; ret
0x0000020000154ed9 : sbb ch, bl ; adc ecx, dword ptr [rcx - 1] ; ret
0x00000200001507db : sbb ch, byte ptr [rax + 9] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004b3836 : sbb ch, byte ptr [rsi] ; jrcxz 0x200004b3841 ; add rsp, 0x38 ; ret
0x00000200003ce1e2 : sbb ch, byte ptr [rsi] ; ret
0x0000020000669485 : sbb cl, byte ptr [rax + 0x2b] ; ret 0x2b48
0x00000200000e30f9 : sbb cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000006c1bc : sbb cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov rax, rdx ; ret
0x00000200001a6f2d : sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200000f971e : sbb cl, byte ptr [rax - 0x75] ; ret 0x2b48
0x000002000069cd52 : sbb cl, byte ptr [rax - 0x75] ; ret 0x3b48
0x00000200003c4bdc : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000571bc1 : sbb cl, byte ptr [rax - 1] ; ret
0x00000200001f5792 : sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000413b07 : sbb cl, byte ptr [rbx + 0x245c8bf8] ; xor dh, dh ; ret
0x000002000018e89d : sbb cl, byte ptr [rbx - 0x3ecfdbac] ; call 0x20074db23b7
0x000002000038a7da : sbb cl, byte ptr [rbx] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000213e49 : sbb cl, byte ptr [rbx] ; add byte ptr [rip + 0x1a062d06], cl ; ret 0xf016
0x0000020000532022 : sbb cl, byte ptr [rcx + rcx*4 + 0x74] ; and al, 0x20 ; call r10
0x000002000011514b : sbb cl, byte ptr [rcx - 0x75] ; ret
0x0000020000106fad : sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000002000006aa0a : sbb cl, byte ptr [rcx - 0x7d] ; ret 0xb908
0x00000200004c517a : sbb cl, byte ptr [rdi + rdi*8] ; ret
0x0000020000369ad8 : sbb cl, ch ; ret 0xfffe
0x00000200004b9036 : sbb cl, cl ; and dl, cl ; mov al, dl ; ret
0x0000020000605bef : sbb cl, dh ; push rsi ; ret
0x0000020000026e18 : sbb dh, byte ptr [rbp + 4] ; mov rax, rcx ; ret
0x0000020000076d8c : sbb dh, byte ptr [rbp - 0x37] ; mov rax, r8 ; pop rbx ; ret
0x00000200004ebe2d : sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000063685 : sbb dh, byte ptr [rbx] ; sal dh, 0xc1 ; adc byte ptr [rdx + rax - 0xd], dh ; ret
0x0000020000110052 : sbb dh, byte ptr [rdx] ; ret 0xc0a8
0x00000200001de9a8 : sbb dh, ch ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000006b535 : sbb dh, dh ; ret
0x00000200003dd9c3 : sbb dh, dh ; ret 0x4901
0x00000200003f3125 : sbb dh, dh ; ret 0x7502
0x0000020000003d1f : sbb dh, dh ; ret 0x7503
0x00000200000e754e : sbb dh, dh ; ret 0x7504
0x0000020000132a3a : sbb dh, dh ; ret 0x7510
0x0000020000036ec6 : sbb dh, dh ; ret 0xf20
0x00000200003b32e6 : sbb dh, dl ; dec dword ptr [rax - 0x75] ; ret 0xffc3
0x0000020000383030 : sbb dil, dil ; ret 0x86e9
0x000002000058b533 : sbb dil, r15b ; ret 0x8348
0x00000200003f9da4 : sbb dil, r15b ; ret 0xe6eb
0x0000020000075f09 : sbb dl, bh ; mov rcx, qword ptr [rip + 0x2d74c6] ; call qword ptr [rcx]
0x00000200000757ed : sbb dl, bh ; mov rcx, qword ptr [rip + 0x2d7be2] ; call qword ptr [rcx]
0x00000200000636b2 : sbb dl, byte ptr [rax] ; ret
0x000002000009a2a8 : sbb dl, dh ; and dl, byte ptr [rbx - 6] ; sahf ; ret
0x000002000004cccb : sbb dword ptr [rax + 0x23], ecx ; ret
0x00000200006f1cd6 : sbb dword ptr [rax + 0x33], ecx ; ret 0x8b49
0x00000200003fa619 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x377
0x0000020000365510 : sbb dword ptr [rax + 0x57], 0 ; add byte ptr [rbx], bh ; ret 0x860f
0x00000200001f6251 : sbb dword ptr [rax + 0x8000000], 0x48 ; inc edx ; jmp 0x200001f6200
0x00000200000da5a4 : sbb dword ptr [rax + 0xb], ecx ; ret 0xc148
0x0000020000192b71 : sbb dword ptr [rax + 0xf000000], -0x49 ; ret 0x8b4c
0x000002000001e2d4 : sbb dword ptr [rax + 8], edi ; ret
0x00000200004d37de : sbb dword ptr [rax + rbp + 0x4d], 0xc9034900 ; jmp rcx
0x000002000001ad21 : sbb dword ptr [rax - 0x3f], ecx ; call qword ptr [rax]
0x0000020000041f0f : sbb dword ptr [rax - 0x3f], ecx ; clc ; adc byte ptr [rax + 0x3b], cl ; ret 0xba48
0x0000020000102304 : sbb dword ptr [rax - 0x3f], ecx ; clc ; adc byte ptr [rax + 0x3b], cl ; ret 0xe473
0x000002000018185c : sbb dword ptr [rax - 0x3f], ecx ; cli ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000014ab8c : sbb dword ptr [rax - 0x75], ecx ; ret
0x00000200001be7d4 : sbb dword ptr [rax - 0x75], ecx ; ret 0x8348
0x000002000001b017 : sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200000da7df : sbb dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4810
0x0000020000157cde : sbb dword ptr [rax - 0x7d], ecx ; ret 0x440c
0x00000200000ee255 : sbb dword ptr [rax], eax ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x000002000013e48e : sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000168e77 : sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000013e615 : sbb dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200004e4514 : sbb dword ptr [rax], eax ; je 0x200004e4590 ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x00000200004e4513 : sbb dword ptr [rax], eax ; je 0x200004e4591 ; insd dword ptr [rdi], dx ; xor eax, eax ; ret
0x0000020000051049 : sbb dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000055eb3 : sbb dword ptr [rax], eax ; mov al, byte ptr [rcx + 0x648] ; ret
0x00000200001bee14 : sbb dword ptr [rax], eax ; mov dword ptr [r8], eax ; ret
0x000002000005a696 : sbb dword ptr [rax], eax ; mov eax, r9d ; ret
0x00000200000312a4 : sbb dword ptr [rax], eax ; mov ecx, 5 ; call 0x200000ad525
0x00000200002163ee : sbb dword ptr [rax], eax ; mov es, eax ; adc al, byte ptr [rax] ; ret 0x12
0x00000200001bd997 : sbb dword ptr [rax], eax ; mov r10, qword ptr [r10 + rax*8] ; jmp 0x200001bd9a7
0x0000020000448cdc : sbb dword ptr [rax], eax ; mov rdx, qword ptr [rbx + 0x40] ; mov rcx, rbx ; call rax
0x0000020000038adb : sbb dword ptr [rax], eax ; ret
0x000002000003f030 : sbb dword ptr [rax], eax ; xor al, al ; ret
0x00000200004d5533 : sbb dword ptr [rax], edi ; ret 0xe9ff
0x000002000002769b : sbb dword ptr [rbp + 0x33], eax ; ror byte ptr [rbp - 0x75], cl ; call 0x20041c501f0
0x00000200000f9c3a : sbb dword ptr [rbp - 0x75], ecx ; ret
0x00000200001a6fdb : sbb dword ptr [rbp - 0x7c], eax ; ret
0x00000200000c3157 : sbb dword ptr [rbx + 0x147407f8], eax ; or eax, 0x18 ; ret
0x000002000011409f : sbb dword ptr [rbx + 0x18335205], ecx ; add byte ptr [rbx], bh ; ret
0x0000020000362e9c : sbb dword ptr [rbx + 0x43090], ecx ; add dh, dh ; ret 0x7401
0x00000200001f76b2 : sbb dword ptr [rbx + 0x45ffe69e], -0x75 ; ret 0x8a40
0x0000020000192009 : sbb dword ptr [rbx + 0x488d5046], ecx ; jmp qword ptr [rbx]
0x0000020000647660 : sbb dword ptr [rbx - 0x74b3efbf], ecx ; ret 0x10a8
0x00000200006138bd : sbb dword ptr [rbx - 0xb7002a], ecx ; ret
0x0000020000033f96 : sbb dword ptr [rcx + 0x1c], esi ; add byte ptr [rbp - 0x78], al ; and cl, ch ; ret 0xfffe
0x00000200000e1c04 : sbb dword ptr [rcx + 0x23], ecx ; ret 0xc148
0x000002000054fbc7 : sbb dword ptr [rcx + 0x3b], eax ; fmul qword ptr [rdi] ; ret 0x8b48
0x00000200004dd06f : sbb dword ptr [rcx + 0x3b], eax ; ret
0x000002000059329f : sbb dword ptr [rcx + 3], eax ; ret
0x000002000001fac3 : sbb dword ptr [rcx + rcx], ecx ; add rsp, 0x28 ; ret
0x0000020000182008 : sbb dword ptr [rcx - 0x3f], ecx ; call qword ptr [rax]
0x000002000002fda3 : sbb dword ptr [rcx - 0x75], eax ; push rdx ; or al, 0x8b ; ret 0x25
0x0000020000038ddf : sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x00000200001b3afd : sbb dword ptr [rcx - 0x75], eax ; ret 0x90c3
0x00000200000f9139 : sbb dword ptr [rcx - 0x75], ecx ; ret 0x8b4c
0x00000200006eb63c : sbb dword ptr [rcx - 0x77], ecx ; add bh, bh ; ret 0x8349
0x00000200005fb46c : sbb dword ptr [rcx - 0x7c], eax ; fbstp dword ptr [rdx + rcx - 0xa] ; ret
0x000002000018789f : sbb dword ptr [rcx - 0x7d], ecx ; enter 0x48ff, -0x3f ; call qword ptr [rax]
0x000002000013d9f8 : sbb dword ptr [rcx - 0x7d], ecx ; rcl byte ptr [rcx], 0xff ; ret
0x00000200001eb74d : sbb dword ptr [rcx - 0x7d], ecx ; ret 0x4910
0x00000200000265f6 : sbb dword ptr [rcx - 0xa], eax ; ret
0x0000020000379cc7 : sbb dword ptr [rcx - 1], -1 ; inc dword ptr [rcx - 0x7b] ; ret
0x00000200000455fc : sbb dword ptr [rcx - 1], eax ; ret
0x000002000010de0b : sbb dword ptr [rcx], ebx ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000019c01a : sbb dword ptr [rdi + 6], esi ; movzx eax, cx ; sub eax, edx ; ret
0x000002000056a9a5 : sbb dword ptr [rdi + rcx - 0x49], eax ; ret 0x8b48
0x000002000052656c : sbb dword ptr [rdi - 0x49], esi ; ret
0x0000020000660aa7 : sbb dword ptr [rdi - 0x74b70003], eax ; ret
0x000002000052081d : sbb dword ptr [rdi], ecx ; ret 0xd233
0x0000020000379cc5 : sbb dword ptr [rdi], ecx ; sbb dword ptr [rcx - 1], -1 ; inc dword ptr [rcx - 0x7b] ; ret
0x000002000005e775 : sbb dword ptr [rdi], edx ; add al, ch ; ret
0x00000200005e60cf : sbb dword ptr [rdx + rdx*8 - 0x49f0ea88], eax ; ret 0xf42
0x000002000036e7ea : sbb dword ptr [rdx + rsi*8 - 0x49f0ff01], esp ; ret
0x00000200001a1ad4 : sbb dword ptr [rdx], ebp ; cmp esi, dword ptr [rbx] ; enter -0x2efd, -0x75 ; ret 0xe8c1
0x000002000018430d : sbb dword ptr [rsi + 0x48000000], -9 ; ret
0x000002000019c031 : sbb dword ptr [rsi - 0x17], esi ; or eax, 0xffffffff ; ret
0x00000200001e0b47 : sbb dword ptr [rsi], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000249a52 : sbb dword ptr [rsi], eax ; sysenter
0x00000200005eb54f : sbb dword ptr [rsi], edx ; test al, 0xff ; nop ; jmp 0x20000447773
0x0000020000073532 : sbb eax, -1 ; ret
0x000002000016c23e : sbb eax, 0x11555d ; call r11
0x000002000007b09c : sbb eax, 0x13d ; jmp r11
0x00000200006538c0 : sbb eax, 0x1785f ; add rsp, 0x38 ; ret
0x00000200004e034c : sbb eax, 0x189b800 ; add al, al ; ret
0x0000020000659f25 : sbb eax, 0x230d8b4c ; ret 0xffc9
0x0000020000021e24 : sbb eax, 0x24058d48 ; ret 0xd
0x00000200001ad762 : sbb eax, 0x24748b44 ; xor al, 0xff ; ret
0x00000200004ac43f : sbb eax, 0x2896600 ; ret
0x00000200000be658 : sbb eax, 0x3750000 ; xor al, al ; ret
0x00000200004c525e : sbb eax, 0x3b48ffe9 ; ret 0x1177
0x00000200003d4c56 : sbb eax, 0x3b48fff1 ; ret
0x0000020000063644 : sbb eax, 0x41098949 ; mov eax, edx ; ret
0x00000200003bf9af : sbb eax, 0x41fff977 ; call rcx
0x00000200001ac23f : sbb eax, 0x44000df3 ; mov eax, edi ; call 0x200001b8481
0x000002000041f1c8 : sbb eax, 0x48c03300 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000ab4c4 : sbb eax, 0x48c28a00 ; add esp, 0x28 ; ret
0x00000200003b9d7f : sbb eax, 0x48ffcec9 ; add esp, 0x38 ; ret
0x00000200003de5ef : sbb eax, 0x48ffe90a ; add esp, 0x28 ; ret
0x00000200001a2d2f : sbb eax, 0x48fff021 ; add esp, 0x78 ; ret
0x00000200000f8d6f : sbb eax, 0x48ffff20 ; add esp, 0x28 ; ret
0x000002000038658f : sbb eax, 0x48fffff4 ; add esp, 0x38 ; ret
0x0000020000583c2f : sbb eax, 0x48ffffff ; add esp, 0x28 ; ret
0x0000020000641dab : sbb eax, 0x4c000293 ; mov dword ptr [rax], eax ; mov al, 1 ; ret
0x0000020000119740 : sbb eax, 0x54 ; xor eax, eax ; ret
0x0000020000659dd0 : sbb eax, 0x580d8b4c ; ret
0x000002000023f8d1 : sbb eax, 0x6040008 ; or eax, dword ptr [rsi] ; sysenter
0x00000200001b8d06 : sbb eax, 0x6948c28b ; rol byte ptr [rax], 0x46 ; ret
0x0000020000659ed1 : sbb eax, 0x6f0d8b4c ; ret 0xffc9
0x000002000007b2c2 : sbb eax, 0x79 ; sub r11, rax ; jmp r11
0x0000020000659e28 : sbb eax, 0x80d8b4c ; ret
0x00000200006c9b38 : sbb eax, 0x8348028b ; ret 0xf70c
0x00000200006c8711 : sbb eax, 0x84018b48 ; ret
0x0000020000528165 : sbb eax, 0x84cf8b48 ; ret
0x00000200003f3119 : sbb eax, 0x8b000000 ; push rax ; sbb al, 0xf6 ; ret 0x7504
0x000002000010630c : sbb eax, 0x8b000cb2 ; ret
0x00000200000133d7 : sbb eax, 0x8b001c86 ; ret
0x000002000060db42 : sbb eax, 0x8b41ffe2 ; ret
0x000002000014cdad : sbb eax, 0x8b440015 ; ret
0x00000200006e6e7c : sbb eax, 0x8b480000 ; retf ; call 0x200007030d8
0x00000200006be04b : sbb eax, 0x8bff998c ; ret
0x000002000053e0bf : sbb eax, 0x8bffb3f0 ; ret
0x000002000014b8cf : sbb eax, 0x8bffca83 ; ret 0xf066
0x0000020000532c3b : sbb eax, 0x8bfff096 ; ret
0x000002000014aa9f : sbb eax, 0x8bfffffe ; ret
0x0000020000422f8a : sbb eax, 0x9090cc00 ; nop ; xor eax, eax ; ret
0x0000020000659d78 : sbb eax, 0xa80d8b4c ; ret
0x00000200004f59db : sbb eax, 0xb0001112 ; add ebx, eax ; xor al, al ; ret
0x0000020000057ac7 : sbb eax, 0xb0019b9 ; push rbx ; je 0x20000057ace ; ret 0xf60
0x0000020000085dec : sbb eax, 0xb05bdeae ; ret 0x9b64
0x0000020000020a73 : sbb eax, 0xb60f4400 ; add sil, r14b ; ret 0xf04
0x0000020000547c44 : sbb eax, 0xb60fffd9 ; ret
0x00000200003d4c3f : sbb eax, 0xb60ffff1 ; ret
0x00000200005b7f97 : sbb eax, 0xb70f5e73 ; or byte ptr [r8 + 0x3b], r9b ; ret
0x000002000007e7b0 : sbb eax, 0xb8500000 ; ret
0x000002000007e790 : sbb eax, 0xb8500000 ; ret 0
0x0000020000659e7d : sbb eax, 0xbb0d8b4c ; ret 0xffc9
0x0000020000143be6 : sbb eax, 0xdb2b0538 ; adc eax, dword ptr [rax] ; je 0x20000143c0d ; call rcx
0x0000020000508f23 : sbb eax, 0xe8ffd80e ; shr bl, 1 ; ret
0x00000200003b8207 : sbb eax, 0xf6ffffff ; ret
0x000002000026ff7d : sbb eax, 0xf7480000 ; ret
0x0000020000659d20 : sbb eax, 0xf80d8b4c ; ret
0x00000200006c038e : sbb eax, 0xff416673 ; ret
0x00000200006c5e46 : sbb eax, 0xffbda359 ; add rsp, 0x28 ; ret
0x0000020000639213 : sbb eax, 0xffc5d790 ; add rsp, 0x38 ; ret
0x00000200005f6b68 : sbb eax, 0xffc8ac5b ; jmp 0x20000482e13
0x00000200004e43ae : sbb eax, 0xffe024cd ; add rsp, 0x28 ; ret
0x000002000035e0dc : sbb eax, 0xfff2bf1f ; add rsp, 0x28 ; ret
0x0000020000380604 : sbb eax, dword ptr [rax] ; add al, ch ; ret
0x00000200001bb1d0 : sbb eax, dword ptr [rax] ; add r8, rcx ; jmp r8
0x0000020000478a3b : sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001fa6c : sbb eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000003fe4a : sbb eax, dword ptr [rax] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x0000020000027e77 : sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000136ec2 : sbb eax, dword ptr [rbp + rcx*4 + 0x42] ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200001d61b3 : sbb eax, dword ptr [rbp - 0x74be0013] ; ret 0x41f0
0x00000200006d9814 : sbb eax, dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000114e50 : sbb eax, dword ptr [rcx - 0x75] ; ret
0x000002000018b1bf : sbb eax, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000018e6f6 : sbb eax, dword ptr [rcx - 0xa] ; ret
0x0000020000405585 : sbb eax, dword ptr [rcx - 0xa] ; ret 0x7503
0x000002000064ec38 : sbb eax, dword ptr [rcx - 1] ; ret 0xff49
0x000002000054ac8e : sbb eax, dword ptr [rsi] ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200003f79d6 : sbb eax, eax ; add eax, 2 ; ret
0x00000200001eee6a : sbb eax, eax ; add eax, 3 ; ret
0x00000200004a5936 : sbb eax, eax ; add rsp, 0x28 ; ret
0x0000020000176f01 : sbb eax, eax ; and eax, 0x128 ; ret
0x0000020000391cdc : sbb eax, eax ; and eax, 0x80000005 ; pop r14 ; ret
0x00000200003db1ed : sbb eax, eax ; and eax, 0x80000005 ; ret
0x00000200001f01b9 : sbb eax, eax ; and eax, 0xa ; add eax, 0xa ; ret
0x000002000005e6ec : sbb eax, eax ; and eax, 0xc0000001 ; ret
0x000002000038ec5a : sbb eax, eax ; and eax, 0xc0000004 ; ret
0x0000020000378d3b : sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000004d3ae : sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000162296 : sbb eax, eax ; and eax, 0xc0000023 ; ret
0x00000200003fc51a : sbb eax, eax ; and eax, 0xc00000bb ; ret
0x00000200001a6fa4 : sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000014ac03 : sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000006fa7c : sbb eax, eax ; and eax, dword ptr [rip + 0x2e75f0] ; ret
0x00000200004e8c5b : sbb eax, eax ; and edx, eax ; mov eax, edx ; ret
0x0000020000154675 : sbb eax, eax ; and rax, rcx ; ret
0x00000200001f11d6 : sbb eax, eax ; neg eax ; inc eax ; ret
0x0000020000583c40 : sbb eax, eax ; not eax ; and eax, 0xc0000001 ; ret
0x00000200000521dd : sbb eax, eax ; not eax ; and eax, 0xc000000d ; ret
0x00000200003dd7d4 : sbb eax, eax ; not eax ; and eax, 0xc0000034 ; ret
0x00000200004d6252 : sbb eax, eax ; not eax ; and eax, 0xc00002b9 ; ret
0x000002000001ab36 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x0000020000140132 : sbb eax, eax ; ret
0x0000020000073613 : sbb eax, eax ; sbb eax, -1 ; ret
0x000002000007352f : sbb eax, eax ; sbb rax, -1 ; ret
0x000002000064bd82 : sbb eax, ebx ; bts dword ptr [r8 + 0x20], 0x1d ; ret
0x0000020000632cf1 : sbb eax, ebx ; ret
0x000002000017535e : sbb eax, esi ; cmp byte ptr [r10], al ; call r8
0x0000020000609e41 : sbb ebp, dword ptr [rcx - 0x1c] ; inc dword ptr [rbx - 0x3e] ; jmp 0x20000609eba
0x00000200005aaa67 : sbb ebp, dword ptr [rdi + rdi*8 + 0x28c48348] ; ret
0x00000200006321c5 : sbb ebp, eax ; jne 0x200006321ab ; ret
0x00000200005a7444 : sbb ebp, eax ; ret 0xc16a
0x000002000000f383 : sbb ebp, ebx ; ret 0x1ba
0x0000020000660aa5 : sbb ebp, ecx ; sbb dword ptr [rdi - 0x74b70003], eax ; ret
0x00000200003aaed9 : sbb ebx, 0xa ; add byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200001c544f : sbb ebx, dword ptr [rcx] ; add dh, dh ; ret
0x0000020000046fd2 : sbb ebx, dword ptr [rdx] ; add ah, cl ; nop ; nop ; invlpg byte ptr [rcx] ; ret
0x000002000064bd7b : sbb ebx, eax ; bts dword ptr [r8 + 0x20], 0x1b ; ret
0x0000020000497631 : sbb ebx, eax ; sar bh, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x000002000004d66a : sbb ebx, esi ; ret
0x00000200000b1cea : sbb ecx, dword ptr [rax + 0x33] ; ret 0x2349
0x00000200006451f3 : sbb ecx, dword ptr [rax + 0x3b] ; ret
0x000002000035e9d0 : sbb ecx, dword ptr [rax + 0x3b] ; ret 0x1f75
0x0000020000003b84 : sbb ecx, dword ptr [rax + 0x63] ; ret 0x348
0x00000200005e689f : sbb ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000159c6b : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov dword ptr [r8], r10d ; ret
0x0000020000157e7b : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x0000020000170a8c : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000123cbf : sbb ecx, dword ptr [rax - 0x75] ; ret
0x00000200004890a9 : sbb ecx, dword ptr [rax - 0x75] ; xlatb ; call rsi
0x000002000003ed5a : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000002000060394c : sbb ecx, dword ptr [rax - 0x7d] ; stc ; push qword ptr [rbp + rdx - 1] ; ret
0x0000020000371c13 : sbb ecx, dword ptr [rax - 1] ; push rsi ; ret
0x00000200001a0748 : sbb ecx, dword ptr [rax - 1] ; ret
0x0000020000245ce5 : sbb ecx, dword ptr [rbx] ; add byte ptr [rip + 0x1b06b606], cl ; ret 0xf017
0x00000200000ff6a8 : sbb ecx, dword ptr [rcx + 0xf] ; mov esp, 0x440f41c1 ; ret
0x0000020000536b51 : sbb ecx, dword ptr [rcx - 0x75] ; add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x00000200001909fa : sbb ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000bde89 : sbb ecx, dword ptr [rcx - 0x75] ; ror byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200001252dd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000bf072 : sbb ecx, dword ptr [rdi] ; mov bh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000002000007384a : sbb ecx, dword ptr [rdx + 0x148a4201] ; or dword ptr [rdx], edi ; ret 0x5675
0x0000020000525ec9 : sbb ecx, ebp ; idiv edi ; add rsp, 0x48 ; ret
0x00000200001edfd6 : sbb ecx, ecx ; add eax, ecx ; ret
0x000002000064c9cd : sbb ecx, ecx ; and eax, ecx ; ret
0x00000200001070a3 : sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200005fb3ff : sbb ecx, esp ; push rsi ; ret
0x000002000009193a : sbb edi, dword ptr [rax + 0x6e] ; ret
0x000002000001e2b4 : sbb edi, dword ptr [rax + 4] ; ret
0x00000200001ef342 : sbb edi, dword ptr [rsi] ; cmc ; push rsi ; ret
0x0000020000091939 : sbb edi, dword ptr gs:[rax + 0x6e] ; ret
0x0000020000381c39 : sbb edi, ecx ; inc dword ptr [rbp + 0x75840fc0] ; call qword ptr [rax]
0x0000020000381cc6 : sbb edi, ecx ; inc dword ptr [rbp - 0x207bf040] ; call qword ptr [rax]
0x0000020000381cac : sbb edi, ecx ; inc dword ptr [rbp - 0x607bf040] ; call qword ptr [rax]
0x0000020000142569 : sbb edi, edi ; adc al, 0 ; jmp 0x2000003e85d
0x000002000008dc7f : sbb edi, edi ; add ah, byte ptr [rax + 0x6b] ; ret
0x00000200005f93dd : sbb edi, edi ; ret
0x000002000057b8c9 : sbb edx, -0x2f ; push rsi ; ret
0x000002000008f6a0 : sbb edx, eax ; ret 0xb77e
0x00000200004fd829 : sbb edx, esp ; ret 0xffff
0x00000200000c7b12 : sbb esi, dword ptr [rbp + 0x11] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006478fd : sbb esi, dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000026f019
0x000002000064c233 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c24e
0x000002000064c2de : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c2f9
0x000002000064c396 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c3b1
0x000002000064c467 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000064c482
0x000002000003a1c2 : sbb esi, dword ptr [rdx + 7] ; ret
0x000002000014b938 : sbb esi, esi ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000008082 : sbb esi, esi ; ret
0x00000200001b355d : sbb esi, esi ; ret 0x7502
0x00000200000cd71d : sbb esi, esi ; ret 0x7508
0x00000200000933c6 : sbb esp, dword ptr [rax] ; sbb al, 0x20 ; add dword ptr [rax], eax ; call qword ptr [rax]
0x0000020000598edb : sbb esp, ebp ; inc dword ptr [rax + rax*8 - 0x7cb7da8b] ; ret
0x0000020000386533 : sbb esp, edx ; sar edi, 1 ; jmp 0x20000386501
0x000002000013e48d : sbb qword ptr [rax], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005e774 : sbb qword ptr [rdi], r10 ; add al, ch ; ret
0x000002000006c1d8 : sbb r11b, bpl ; ret
0x00000200000c5166 : sbb r14b, r14b ; ret
0x000002000039274b : sbb r15b, dil ; add rsp, 0x28 ; ret
0x00000200003b421c : sbb r15b, r15b ; ret
0x00000200005f2d4b : sbb r15b, r15b ; ret 0x8349
0x000002000043bbbe : sbb r8b, bpl ; jnp 0x2000043bc3a ; ret
0x0000020000442551 : sbb r8b, r13b ; insb byte ptr [rdi], dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x00000200004fda96 : sbb r8b, r13b ; ret
0x000002000018ed33 : sbb r8b, r15b ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000c4859 : sbb r8b, r9b ; call 0x1ffc347896e
0x00000200004c5179 : sbb r9b, byte ptr [rdi + rdi*8] ; ret
0x00000200005e689e : sbb r9d, dword ptr [r8 + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000073531 : sbb rax, -1 ; ret
0x0000020000154674 : sbb rax, rax ; and rax, rcx ; ret
0x000002000007352e : sbb rax, rax ; sbb rax, -1 ; ret
0x0000020000110051 : sbb sil, byte ptr [r10] ; ret 0xc0a8
0x00000200006c5cff : scasb al, byte ptr [rdi] ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000083343 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000c81d1 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000606cf1 : scasb al, byte ptr [rdi] ; call qword ptr [rax - 0x11003d17]
0x00000200000c7961 : scasb al, byte ptr [rdi] ; clc ; ret
0x00000200000a389e : scasb al, byte ptr [rdi] ; clc ; ret 0
0x00000200005bbe83 : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000058777b : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000587e0d : scasb al, byte ptr [rdi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000601839 : scasb al, byte ptr [rdi] ; dec dword ptr [rcx + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x0000020000085ded : scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x000002000008e058 : scasb al, byte ptr [rdi] ; fisub dword ptr [rbx - 0x4795f4d7] ; ret 0x3ecb
0x000002000048e3da : scasb al, byte ptr [rdi] ; in al, -1 ; call 0x200000b9886
0x0000020000664057 : scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; jo 0x20000664025 ; ret 0x41ff
0x000002000066814d : scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; jp 0x200006681da ; ret 0x41ff
0x0000020000666130 : scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 0x1d] ; xchg eax, edi ; lahf ; ret 0x41ff
0x0000020000082989 : scasb al, byte ptr [rdi] ; jp 0x200000829ad ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000058039e : scasb al, byte ptr [rdi] ; mov dl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000011e4d2 : scasb al, byte ptr [rdi] ; mov esp, dword ptr [rbx] ; add byte ptr [rcx - 0xa], al ; ret
0x000002000050f29d : scasb al, byte ptr [rdi] ; mov rax, qword ptr [rbp + 0x48] ; movsx ecx, word ptr [rax] ; jmp 0x2000050f273
0x000002000000c52a : scasb al, byte ptr [rdi] ; ret
0x0000020000665254 : scasb al, byte ptr [rdi] ; ret 0x1ff
0x00000200004275be : scasb al, byte ptr [rdi] ; ret 0x33ff
0x0000020000665308 : scasb al, byte ptr [rdi] ; ret 0x48ff
0x0000020000447f92 : scasb al, byte ptr [rdi] ; ret 0x4dff
0x000002000066531b : scasb al, byte ptr [rdi] ; ret 0x8bff
0x0000020000439c19 : scasb al, byte ptr [rdi] ; ret 0xebff
0x0000020000665299 : scasb al, byte ptr [rdi] ; ret 0xfdff
0x00000200006652b2 : scasb al, byte ptr [rdi] ; ret 0xff
0x00000200001ea620 : scasb al, byte ptr [rdi] ; ret 0xffec
0x00000200006652c9 : scasb al, byte ptr [rdi] ; ret 0xfff
0x00000200006df4a2 : scasb al, byte ptr [rdi] ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006df4b5
0x0000020000530e92 : scasb al, byte ptr [rdi] ; sbb al, 0x8b ; ret
0x00000200001c544e : scasb al, byte ptr [rdi] ; sbb ebx, dword ptr [rcx] ; add dh, dh ; ret
0x000002000064ae96 : scasb al, byte ptr [rdi] ; test al, 0 ; add byte ptr [rax], al ; call 0x200000a7117
0x00000200003df2de : scasb al, byte ptr [rdi] ; test dword ptr [rdi], eax ; add al, ch ; cmc ; xchg eax, ebx ; ret 0xebff
0x0000020000661e96 : scasb al, byte ptr [rdi] ; wait ; ret 0x48ff
0x00000200004a576e : scasb al, byte ptr [rdi] ; xchg eax, ecx ; adc eax, dword ptr [rax] ; ret
0x000002000052769e : scasb al, byte ptr [rdi] ; xchg eax, esp ; salc ; push rsi ; ret
0x00000200001803e1 : scasd eax, dword ptr [rdi] ; add bl, bh ; dec dword ptr [rax - 0x7d] ; ret
0x000002000047a6cb : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005ac161 : scasd eax, dword ptr [rdi] ; call 0x200000bf279
0x000002000048b8da : scasd eax, dword ptr [rdi] ; call rax
0x000002000003ff52 : scasd eax, dword ptr [rdi] ; cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x000002000057f2ee : scasd eax, dword ptr [rdi] ; dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x2000057f35b ; ret
0x0000020000595d5d : scasd eax, dword ptr [rdi] ; dec dword ptr [rcx - 0x75] ; ret
0x000002000066588a : scasd eax, dword ptr [rdi] ; fimul dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; pop rcx ; add al, 0x83 ; ret
0x000002000070d854 : scasd eax, dword ptr [rdi] ; fisttp dword ptr [rbp + 0x63] ; ret
0x000002000058ffc2 : scasd eax, dword ptr [rdi] ; fld dword ptr [rcx - 0x75] ; ret
0x0000020000665bb9 : scasd eax, dword ptr [rdi] ; fld qword ptr [rcx - 0x75] ; ret
0x000002000048c8c1 : scasd eax, dword ptr [rdi] ; in al, -1 ; mov dl, 1 ; call 0x200000b90e8
0x000002000048c90f : scasd eax, dword ptr [rdi] ; in al, -1 ; mov edi, eax ; call 0x200000b9b08
0x00000200003f52fd : scasd eax, dword ptr [rdi] ; in al, dx ; ret 0x48ff
0x00000200006355ad : scasd eax, dword ptr [rdi] ; jle 0x2000063558a ; inc dword ptr [rax + rdi + 0x25] ; adc al, 0xed ; ret
0x0000020000117059 : scasd eax, dword ptr [rdi] ; jmp qword ptr [rbx]
0x00000200004aefa9 : scasd eax, dword ptr [rdi] ; lea rcx, qword ptr [r15 + 0x68] ; call 0x200000ddfe8
0x000002000008784c : scasd eax, dword ptr [rdi] ; lodsd eax, dword ptr [rsi] ; mov dl, 0x46 ; lea edi, dword ptr [rcx + rbx*4 + 0xb] ; ret
0x00000200001e9233 : scasd eax, dword ptr [rdi] ; loopne 0x200001e9228 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005a179d : scasd eax, dword ptr [rdi] ; mov al, 0xff ; add rsp, 0x58 ; ret
0x000002000003bc99 : scasd eax, dword ptr [rdi] ; mov bh, 0x31 ; add byte ptr [rdi], cl ; test bl, bh ; ret 0xfffe
0x000002000048b8d6 : scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r10 ; call rax
0x00000200000a73b0 : scasd eax, dword ptr [rdi] ; mov qword ptr [rcx + 0x168], rax ; ret
0x00000200001c2d89 : scasd eax, dword ptr [rdi] ; mov rbx, qword ptr [rsp + 8] ; xor eax, eax ; ret
0x000002000008f071 : scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; or ah, cl ; jge 0x2000008f0a7 ; ret
0x0000020000143e06 : scasd eax, dword ptr [rdi] ; or byte ptr [rax], al ; ret
0x000002000066588d : scasd eax, dword ptr [rdi] ; pop rcx ; add al, 0x83 ; ret
0x0000020000605cfe : scasd eax, dword ptr [rdi] ; push qword ptr [rbx] ; shr cl, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x00000200005eb74b : scasd eax, dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x000002000035ed84 : scasd eax, dword ptr [rdi] ; push rax ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000652ae5 : scasd eax, dword ptr [rdi] ; push rax ; ret 0x85ff
0x00000200000908c1 : scasd eax, dword ptr [rdi] ; ret
0x00000200000aa2ae : scasd eax, dword ptr [rdi] ; ret 0x148
0x000002000013afc5 : scasd eax, dword ptr [rdi] ; ret 0x21
0x0000020000668862 : scasd eax, dword ptr [rdi] ; ret 0x344
0x0000020000590006 : scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000002c1ac : scasd eax, dword ptr [rdi] ; ret 0x48b
0x000002000048eb15 : scasd eax, dword ptr [rdi] ; ret 0x48ff
0x000002000066524e : scasd eax, dword ptr [rdi] ; ret 0x83ff
0x000002000046ec46 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000020000196d51 : scasd eax, dword ptr [rdi] ; ret 0x8b41
0x000002000012760b : scasd eax, dword ptr [rdi] ; ret 0x8b42
0x0000020000664532 : scasd eax, dword ptr [rdi] ; ret 0x8b44
0x00000200000c3af2 : scasd eax, dword ptr [rdi] ; ret 0x8b4a
0x00000200003fea4c : scasd eax, dword ptr [rdi] ; ret 0x90c3
0x00000200006e9f29 : scasd eax, dword ptr [rdi] ; ret 0x9848
0x00000200001c3f2b : scasd eax, dword ptr [rdi] ; ret 0x9948
0x0000020000363479 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000020000665151 : scasd eax, dword ptr [rdi] ; ret 0xb9ff
0x00000200006d0714 : scasd eax, dword ptr [rdi] ; ret 0xba41
0x000002000019bb07 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x000002000003ded4 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x000002000004bf17 : scasd eax, dword ptr [rdi] ; ret 0xc149
0x0000020000665216 : scasd eax, dword ptr [rdi] ; ret 0xe8ff
0x00000200006e9ed7 : scasd eax, dword ptr [rdi] ; ret 0xf44
0x00000200004d7e37 : scasd eax, dword ptr [rdi] ; ret 0xf48
0x000002000005940e : scasd eax, dword ptr [rdi] ; ret 0xf49
0x000002000013eedb : scasd eax, dword ptr [rdi] ; ret 0xf741
0x00000200006f8b3d : scasd eax, dword ptr [rdi] ; ret 0xf749
0x00000200006f24e5 : scasd eax, dword ptr [rdi] ; ret 0xffb8
0x000002000013c420 : scasd eax, dword ptr [rdi] ; retf -0x3eb8 ; jmp 0x1ffc3d54f69
0x000002000041da7d : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x000002000037c8fe : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3f ; ret
0x000002000041dbf5 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x00000200006e9edb : scasd eax, dword ptr [rdi] ; ror byte ptr [rax - 0x73], 0x42 ; add dword ptr [rax - 0x7f], ecx ; ret 0x801
0x00000200000a869b : scasd eax, dword ptr [rdi] ; ror byte ptr [rbp + 3], cl ; ret 0xff48
0x000002000013f935 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x00000200004a1d38 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200000e99af : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x00000200004d1ff4 : scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x0000020000644401 : scasd eax, dword ptr [rdi] ; scasb al, byte ptr [rdi] ; ret
0x000002000059da0d : scasd eax, dword ptr [rdi] ; stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001e96dd : scasd eax, dword ptr [rdi] ; test dh, cl ; call qword ptr [rax - 0x113dc417]
0x000002000000c597 : scasd eax, dword ptr [rdi] ; xor al, 0 ; call rax
0x000002000001c393 : scasd eax, dword ptr [rdi] ; xor eax, dword ptr [rax] ; ret
0x0000020000163a0c : scasd eax, dword ptr [rdi] ; xor eax, eax ; cmp r11d, r8d ; seta al ; ret
0x00000200000eec9b : scasd eax, dword ptr [rdi] ; xor eax, eax ; ret
0x0000020000181a27 : seta al ; add rsp, 0x28 ; ret
0x00000200000588c6 : seta al ; ret
0x00000200005cf6cd : seta cl ; mov eax, ecx ; ret
0x00000200001ab20f : seta dl ; jmp 0x200001ab219
0x00000200001ab20e : seta r10b ; jmp 0x200001ab21a
0x000002000058be7a : setae al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004c6101 : setae al ; ret
0x00000200001c5697 : setb al ; mov eax, r8d ; ret
0x0000020000448e9a : setb al ; movzx eax, al ; ret
0x0000020000116b57 : setb al ; ret
0x00000200001516ac : setb cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200001419fa : setb cl ; mov eax, r9d ; ret
0x000002000005b206 : setb cl ; test cl, cl ; sete al ; ret
0x00000200001c5696 : setb r8b ; mov eax, r8d ; ret
0x00000200001419f9 : setb r9b ; mov eax, r9d ; ret
0x0000020000144cfe : setbe al ; ret
0x00000200000fe3c9 : setbe dl ; mov eax, edx ; ret
0x000002000058db8b : sete al ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000ba38 : sete al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006f673d : sete al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c6d4f : sete al ; add rsp, 0x28 ; ret
0x000002000015c335 : sete al ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000a2de1 : sete al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001c7f49 : sete al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005d3e5e : sete al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000043b422 : sete al ; mov byte ptr [r8], al ; movzx eax, r10b ; ret
0x000002000046b1ef : sete al ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000036e4e : sete al ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x000002000001d6e5 : sete al ; ret
0x0000020000045186 : sete cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000158e28 : sete cl ; mov eax, ecx ; ret
0x00000200005cc7d0 : sete dl ; mov byte ptr [rcx], dl ; add rsp, 0x58 ; ret
0x00000200006c6877 : sete r8b ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000adca0 : setg al ; ret
0x000002000019c172 : setge al ; ret
0x00000200004907df : setle al ; inc eax ; add rsp, 0x28 ; ret
0x00000200003ac4dd : setle al ; inc eax ; add rsp, 0x38 ; ret
0x00000200004252e5 : setle al ; inc eax ; ret
0x0000020000198c6b : setle al ; ret
0x00000200001076f8 : setne al ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005d3e04 : setne al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003878c4 : setne al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000038b629 : setne al ; add rsp, 0x28 ; ret
0x00000200001c7d75 : setne al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003dd402 : setne al ; mov byte ptr [rdx], al ; xor eax, eax ; ret
0x000002000052ae94 : setne al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000108389 : setne al ; mov eax, r8d ; ret
0x0000020000010e3f : setne al ; ret
0x000002000041f6a1 : setne bl ; call 0x2000004d1c6
0x000002000010cd13 : setne byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001eea1a : setne cl ; mov dword ptr [rdx + 4], ecx ; ret
0x000002000003d7b8 : setne cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000052aca3 : setne dl ; cmp edx, eax ; jne 0x2000052acbb ; xor eax, eax ; ret
0x00000200000ee746 : setne dl ; mov eax, edx ; add rsp, 0x68 ; ret
0x00000200000f155e : setne dl ; mov eax, edx ; ret
0x0000020000108388 : setne r8b ; mov eax, r8d ; ret
0x000002000003ac93 : setns al ; add rsp, 0x28 ; ret
0x00000200004e0dc1 : setns al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006e968c : setns al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000041d41e : setns cl ; lea eax, dword ptr [rcx - 1] ; ret
0x00000200006f6d4d : setns cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200000c7960 : sfence ; ret
0x00000200000a389d : sfence ; ret 0
0x0000020000478de6 : sgdt ptr [r8] ; add al, al ; call 0x200000b5068
0x0000020000478de7 : sgdt ptr [rax] ; add al, al ; call 0x200000b5067
0x00000200005903b2 : sgdt ptr [rax] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000019c5f9
0x000002000053747e : sgdt ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7402
0x00000200000bd3fc : sgdt ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200006a1040 : sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x000002000048a86f : shl ah, 1 ; dec dword ptr [rdx - 0x1798172d] ; ret 0x48ff
0x000002000048b62c : shl ah, 1 ; ret 0x65ff
0x000002000047f679 : shl ah, cl ; push rsi ; ret
0x000002000060b4a1 : shl al, cl ; push rsi ; ret
0x00000200004df53e : shl byte ptr [r14 - 0x77], 0x45 ; ret 0x23e8
0x00000200004df4a4 : shl byte ptr [r14 - 0x77], 0x45 ; ret 0x4de8
0x000002000069f9c2 : shl byte ptr [rax + 0x48], 0xc7 ; ret
0x0000020000134363 : shl byte ptr [rax + 0x75], 0x84 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c2454 : shl byte ptr [rax + rax], cl ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000643f8a : shl byte ptr [rax], 0x45 ; cmp ecx, edx ; jb 0x20000643f89 ; xor eax, eax ; ret
0x00000200000de08c : shl byte ptr [rax], 0x48 ; add esp, 0x20 ; pop r15 ; ret
0x00000200004386e8 : shl byte ptr [rax], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000051082 : shl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x000002000008ebbc : shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x00000200003f6cfc : shl byte ptr [rbp + rax*8 - 1], 0xf6 ; ret
0x000002000051118f : shl byte ptr [rbx + rax], 0x3a ; ret 0x1275
0x00000200003d537b : shl byte ptr [rbx - 0x74fffe76], cl ; ret 0x8b44
0x0000020000392ab0 : shl byte ptr [rbx - 0x74fffe76], cl ; ret 0xe8c1
0x00000200004e8c5c : shl byte ptr [rbx], 0xd0 ; mov eax, edx ; ret
0x00000200000bfc83 : shl byte ptr [rbx], 1 ; ret
0x000002000000e422 : shl byte ptr [rbx], 1 ; ret 0xd1f7
0x00000200004992c4 : shl byte ptr [rbx], 1 ; ret 0xd2f7
0x000002000012fa8b : shl byte ptr [rbx], 1 ; ret 0xf00b
0x00000200000c59a7 : shl byte ptr [rbx], cl ; ret 0xca8b
0x000002000001dc36 : shl byte ptr [rcx + rax*2 - 0x7d], cl ; ret 0x414b
0x000002000038ec19 : shl byte ptr [rcx + rax], 1 ; ret
0x00000200000abf88 : shl byte ptr [rcx + rcx*2 + 0xf], 0xaf ; ret
0x0000020000129da2 : shl byte ptr [rdx], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200000ca860 : shl byte ptr [rip + 0x1ff], 1 ; add rax, rdx ; jmp 0x200000ca80d
0x00000200004d6255 : shl byte ptr [rip - 0x3ffffd47], 1 ; ret
0x00000200003dd7d7 : shl byte ptr [rip - 0x3fffffcc], 1 ; ret
0x000002000004d3af : shl byte ptr [rip - 0x3fffffde], 0xc3 ; xor eax, eax ; ret
0x00000200000521e0 : shl byte ptr [rip - 0x3ffffff3], 1 ; ret
0x0000020000583c43 : shl byte ptr [rip - 0x3fffffff], 1 ; ret
0x0000020000391cdd : shl byte ptr [rip - 0x7ffffffb], 0x41 ; pop rsi ; ret
0x000002000003b4a0 : shl byte ptr [rsi + 0x41], 0x23 ; leave ; jmp qword ptr [r10 + rax*8]
0x00000200005d152f : shl byte ptr [rsi + 0x41], 0x23 ; ret
0x0000020000506a6b : shl byte ptr [rsi + 0x41], 0x23 ; ret 0x8366
0x000002000058cac1 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000391a74 : shl byte ptr [rsi + 0x41], 0x3b ; ret
0x00000200005978cb : shl byte ptr [rsi + 0x41], 0x83 ; ret
0x0000020000554219 : shl byte ptr [rsi + 0x44], 0x39 ; or al, 0x41 ; jne 0x20000554220 ; jmp 0x200005541ef
0x00000200005348f4 : shl byte ptr [rsi + 0x45], 0x3b ; ret
0x00000200005adfcf : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xdc72
0x00000200005adfe2 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x0000020000175042 : shl byte ptr [rsi + 0x45], 0x89 ; or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x000002000036cefa : shl byte ptr [rsi - 0x30], cl ; inc dword ptr [rbp - 0xdc8b40] ; ret
0x00000200006648bd : shl byte ptr [rsi - 0x77], 0x3d ; push rbx ; xchg eax, edi ; sar edi, -0x18 ; ret 0xadf5
0x00000200004df53f : shl byte ptr [rsi - 0x77], 0x45 ; ret 0x23e8
0x00000200004df4a5 : shl byte ptr [rsi - 0x77], 0x45 ; ret 0x4de8
0x00000200003a5669 : shl byte ptr [rsi - 0x77], 0x45 ; sub cl, byte ptr [rax - 0x75] ; ret 0x2548
0x0000020000058385 : shl byte ptr [rsi - 0x77], 0x4c ; ret
0x000002000013b400 : shl byte ptr [rsi - 0x77], 0xc ; ret 0x366
0x00000200000bf09a : shl byte ptr [rsi - 0x77], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000360aa0 : shl byte ptr [rsi - 0x77], cl ; ret 0x36e8
0x00000200006c5cea : shl byte ptr [rsp + rax*2 + 0x2b], cl ; ret 0x8341
0x000002000001e156 : shl byte ptr [rsp + rax*2 + 0x3b], cl ; ret 0x840f
0x000002000016350d : shl byte ptr [rsp + rax*2], 0x3b ; ret
0x0000020000129da1 : shl byte ptr gs:[rdx], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x000002000060c1bb : shl cl, 1 ; call qword ptr [rax + 0x10ff8390]
0x000002000037dc4c : shl dl, 0xd6 ; push rsi ; ret
0x00000200005a9845 : shl dword ptr [rax + 0x45], -0x75 ; ret 0xd08b
0x0000020000599921 : shl dword ptr [rax + rdx], 0x3c ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe180
0x0000020000505bfd : shl dword ptr [rax - 0x74b7ffef], cl ; ret
0x000002000049677b : shl dword ptr [rax], -0x7d ; ret
0x000002000042149b : shl dword ptr [rax], 0x26 ; add dh, dh ; ret
0x0000020000423fd2 : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x20000423fe1 ; ret
0x0000020000424016 : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x20000424025 ; ret
0x000002000015cc99 : shl dword ptr [rax], 0x75 ; ret
0x00000200001696b5 : shl dword ptr [rbx], cl ; ret
0x000002000006af20 : shl dword ptr [rbx], cl ; shr dword ptr [rbx], 1 ; ret 0xc63b
0x00000200007032d6 : shl dword ptr [rcx + 0x41], -0x3f ; jmp 0x1ffc3fb73ec
0x00000200006d325d : shl dword ptr [rcx + 0x41], -0x75 ; ret 0xe1c1
0x00000200000ca5a6 : shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x00000200006bf5b9 : shl dword ptr [rdi + 0x74c085ff], cl ; or byte ptr [rax - 1], cl ; ret
0x000002000063476b : shl dword ptr [rdx - 0x2f750060], -0x76 ; ret 0x8b48
0x000002000002fd9a : shl dword ptr [rip - 0x1000], 0x3b ; ret
0x000002000070a5b3 : shl dword ptr [rsi + 0x3b], 1 ; ret 0xa75
0x0000020000465cc0 : shl dword ptr [rsi + 0x41], -0x77 ; add ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000017443d : shl dword ptr [rsi + 0x41], 0x2b ; ret
0x000002000058cabd : shl dword ptr [rsi + 0x41], 0x2b ; shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000472d17 : shl dword ptr [rsi + 0x45], 0x23 ; ret 0x5c74
0x00000200001982b6 : shl dword ptr [rsi - 0x77], 0x42 ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000197eb2 : shl dword ptr [rsi - 0x77], 0x47 ; or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x0000020000060ee1 : shl dword ptr [rsi - 0x77], 0x4d ; call 0x1ffc3529a3a
0x00000200006c58f5 : shl eax, 0x14 ; mov dword ptr [rip - 0x444bae], eax ; ret
0x00000200006d0231 : shl eax, 0x19 ; sar rax, 0x10 ; ret
0x0000020000164db1 : shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x000002000036be2d : shl eax, 0xc ; shl rdx, 0xc ; call rax
0x000002000060b4bd : shl eax, 1 ; push rsi ; ret
0x000002000019bfec : shl eax, 2 ; cdq ; idiv ecx ; add eax, r9d ; ret
0x0000020000197931 : shl eax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000014ec60 : shl eax, 3 ; cqo ; idiv r8 ; ret
0x0000020000424f78 : shl eax, 4 ; add rax, rcx ; mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x000002000006c20b : shl eax, 4 ; add rax, rcx ; ret
0x00000200001faf79 : shl eax, 4 ; call 0x200000771c5
0x000002000060010e : shl eax, 4 ; rep stosq qword ptr [rdi], rax ; jmp 0x2000046c3df
0x00000200005daf08 : shl eax, 5 ; call 0x200000771c5
0x0000020000363e4a : shl eax, cl ; add rsp, 0x28 ; ret
0x0000020000153679 : shl eax, cl ; dec eax ; lock or dword ptr [r10], eax ; ret
0x0000020000017c79 : shl eax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000150387 : shl eax, cl ; not eax ; lock and dword ptr [r10], eax ; ret
0x0000020000152908 : shl eax, cl ; not rax ; and qword ptr [r8], rax ; ret
0x00000200001418ab : shl eax, cl ; or qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000174b54 : shl eax, cl ; or qword ptr [r8], rax ; ret
0x00000200006c58df : shl ecx, 0xc ; mov dword ptr [rip - 0x444b98], ecx ; ret
0x00000200001f7e20 : shl edx, -1 ; nop ; jmp 0x2000003409f
0x00000200006f2cb9 : shl edx, 0x18 ; or eax, edx ; ret
0x0000020000151e1e : shl edx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x0000020000133cb3 : shl edx, 0x20 ; or rax, rdx ; ret
0x00000200001682cc : shl edx, 0x20 ; or rdx, rax ; mov rax, rdx ; ret
0x0000020000644a06 : shl edx, 0xc ; call 0x20000270046
0x000002000036be31 : shl edx, 0xc ; call rax
0x0000020000522014 : shl edx, 3 ; call 0x2000014b9da
0x000002000064da02 : shl edx, 4 ; call 0x20000270046
0x0000020000422547 : shl esi, cl ; push rsi ; ret
0x000002000047f5c6 : shl esp, cl ; push rsi ; ret
0x000002000036be2c : shl r8, 0xc ; shl rdx, 0xc ; call rax
0x000002000014ec5f : shl r8, 3 ; cqo ; idiv r8 ; ret
0x00000200001faf78 : shl r8, 4 ; call 0x200000771c6
0x00000200005daf07 : shl r8, 5 ; call 0x200000771c6
0x00000200006d0230 : shl rax, 0x19 ; sar rax, 0x10 ; ret
0x0000020000197930 : shl rax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000006c20a : shl rax, 4 ; add rax, rcx ; ret
0x000002000060010d : shl rax, 4 ; rep stosq qword ptr [rdi], rax ; jmp 0x2000046c3e0
0x0000020000363e49 : shl rax, cl ; add rsp, 0x28 ; ret
0x0000020000017c78 : shl rax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000152907 : shl rax, cl ; not rax ; and qword ptr [r8], rax ; ret
0x00000200001418aa : shl rax, cl ; or qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000174b53 : shl rax, cl ; or qword ptr [r8], rax ; ret
0x0000020000151e1d : shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x0000020000133cb2 : shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000644a05 : shl rdx, 0xc ; call 0x20000270047
0x000002000036be30 : shl rdx, 0xc ; call rax
0x0000020000522013 : shl rdx, 3 ; call 0x2000014b9db
0x000002000064da01 : shl rdx, 4 ; call 0x20000270047
0x0000020000616c9e : shr ah, 0x83 ; ret
0x00000200005bb18c : shr al, 0x1e ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x00000200004166e0 : shr al, 0x3a ; xchg eax, esi ; ret
0x00000200005bb16f : shr al, 0x3b ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000592b30 : shr al, 0x4a ; ret 0xffa8
0x0000020000592a28 : shr al, 0x52 ; ret
0x00000200005bb152 : shr al, 0x58 ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x000002000052ff6c : shr al, 0x5e ; ret
0x000002000038f08b : shr al, 0x5f ; call rsp
0x000002000055380f : shr al, 0x6b ; ret
0x00000200004f4095 : shr al, 0x6d ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000478deb : shr al, 0x6f ; ret 0xffc3
0x000002000064f1fc : shr al, 0x7e ; or esp, ebx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000059723b : shr al, 0x8f ; ret
0x00000200005fed15 : shr al, 0x91 ; cmp al, 0xf7 ; push rsi ; ret
0x000002000038f058 : shr al, 0x92 ; call rsp
0x0000020000590435 : shr al, 0x9d ; ret
0x000002000038f037 : shr al, 0xb3 ; call rsp
0x00000200005bb4f6 : shr al, 0xb4 ; add eax, 0x83480000 ; ret
0x00000200000a8bc3 : shr al, 0xb7 ; ret 0xffff
0x000002000038f02c : shr al, 0xbe ; call rsp
0x0000020000592ab4 : shr al, 0xc6 ; ret 0xffa8
0x000002000038f021 : shr al, 0xc9 ; call rsp
0x000002000070757c : shr al, 0xce ; ret
0x00000200006ec490 : shr al, 0xda ; ret
0x0000020000632d28 : shr al, 0xe2 ; ret 0xffc3
0x00000200006ec422 : shr al, 0xf4 ; ret
0x0000020000510675 : shr al, 1 ; adc eax, 0x8bffe9d1 ; ret
0x0000020000486366 : shr al, 1 ; add al, 0x8f ; ret
0x000002000049114d : shr al, 1 ; add dword ptr [rbx - 0x49f00043], ebp ; ret
0x0000020000509009 : shr al, 1 ; add ebx, ebp ; ret
0x00000200005ae54f : shr al, 1 ; call rsi
0x00000200001aa902 : shr al, 1 ; cld ; ret
0x00000200003df954 : shr al, 1 ; cli ; ret 0xffc8
0x00000200000d2c4f : shr al, 1 ; dec dword ptr [rdi - 0x49f00007] ; ret
0x00000200005f0a76 : shr al, 1 ; fdiv dword ptr [rcx - 0x49f00059] ; ret
0x000002000015ffe2 : shr al, 1 ; insb byte ptr [rdi], dx ; mov esp, 0xb60ffff0 ; ret
0x000002000043c6d7 : shr al, 1 ; ja 0x2000043c6d4 ; ret 0xe9ff
0x000002000043676e : shr al, 1 ; loopne 0x200004367ca ; ret
0x00000200005f010a : shr al, 1 ; mov ebx, 0xb60fffa7 ; ret
0x00000200001a06a6 : shr al, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000540a45 : shr al, 1 ; or dword ptr [rdx - 0x49f0004e], esi ; ret
0x000002000043c1f0 : shr al, 1 ; pop rsi ; cli ; ret 0xe9ff
0x000002000043c6f7 : shr al, 1 ; push rdi ; cmc ; ret 0xebff
0x00000200001d008b : shr al, 1 ; ret
0x000002000015e3a8 : shr al, 1 ; ret 0x2262
0x00000200005de68c : shr al, 1 ; ret 0xa8d5
0x00000200004784f8 : shr al, 1 ; ret 0xc635
0x00000200001d4970 : shr al, 1 ; ret 0xf439
0x00000200001ec28c : shr al, 1 ; ret 0xf885
0x000002000057f8b0 : shr al, 1 ; sahf ; ret
0x00000200001601a3 : shr al, 1 ; stosd dword ptr [rdi], eax ; mov edx, 0xb60ffff0 ; ret
0x00000200006eb302 : shr al, 1 ; sub dh, dl ; xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d365b : shr al, 1 ; test dword ptr [rcx - 0x49f06f01], ebp ; ret
0x000002000016bf3b : shr al, 1 ; xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004cf6f2 : shr al, 2 ; and al, 1 ; ret
0x000002000038ec15 : shr al, 2 ; not al ; and al, 1 ; ret
0x0000020000393982 : shr al, 3 ; and al, 1 ; ret
0x0000020000030200 : shr al, 4 ; and al, 1 ; ret
0x00000200003a7a3a : shr al, cl ; add byte ptr [rip - 0x74b7002f], ah ; ret
0x00000200000eb685 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000051ddd5 : shr al, cl ; and eax, 0x8bffb5f5 ; ret
0x000002000038f2e5 : shr al, cl ; and eax, 0x8bffedfd ; ret
0x00000200005dfe22 : shr al, cl ; call 0x1ff915dc722
0x000002000048d80b : shr al, cl ; call qword ptr [rdi]
0x00000200005e9b9f : shr al, cl ; imul edx, dword ptr [rax + rcx*8 - 1], -0x75 ; ret
0x00000200001133cb : shr al, cl ; iretd ; jmp 0x1ffc39d33ce
0x0000020000632f8d : shr al, cl ; jge 0x20000632f55 ; ret
0x0000020000633099 : shr al, cl ; jno 0x20000633060 ; ret
0x00000200004967c0 : shr al, cl ; jp 0x200004967ff ; ret 0x45ff
0x0000020000477d02 : shr al, cl ; js 0x20000477cdb ; ret 0x48ff
0x000002000017810c : shr al, cl ; lahf ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x000002000038f953 : shr al, cl ; mov bh, 0xf6 ; in eax, dx ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x000002000042a2f8 : shr al, cl ; mov dl, 0xab ; ret
0x0000020000477dc8 : shr al, cl ; mov dl, 0xd0 ; ret 0x48ff
0x000002000060aa74 : shr al, cl ; mov esi, 0x8bffe2c9 ; ret
0x00000200004b7efd : shr al, cl ; or eax, 0x8bffdb71 ; ret
0x0000020000481c6f : shr al, cl ; or esi, dword ptr [rdx] ; ret 0x90ff
0x00000200005497e2 : shr al, cl ; pop rax ; mov byte ptr [rbp + 0x843e8ff], dh ; ret 0x33ff
0x0000020000148cdd : shr al, cl ; pop rbp ; adc dh, bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200003f6203 : shr al, cl ; pop rbx ; lahf ; ret 0xe9ff
0x0000020000188c21 : shr al, cl ; pop rcx ; ret 0xfff1
0x00000200003675ee : shr al, cl ; pop rsp ; ret
0x00000200006333a0 : shr al, cl ; push 0xbc ; ret
0x0000020000644b18 : shr al, cl ; repne movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x49ff
0x0000020000062c77 : shr al, cl ; ret
0x000002000060259c : shr al, cl ; ret 0xa1db
0x0000020000620c78 : shr al, cl ; ret 0xa992
0x00000200004929a8 : shr al, cl ; ret 0xc2c8
0x000002000051bd18 : shr al, cl ; ret 0xc2e9
0x0000020000603848 : shr al, cl ; ret 0xc6b7
0x00000200005fe648 : shr al, cl ; ret 0xc709
0x0000020000567b48 : shr al, cl ; ret 0xd074
0x00000200003c4b78 : shr al, cl ; ret 0xd158
0x00000200006f6670 : shr al, cl ; ret 0xd40d
0x00000200001bee78 : shr al, cl ; ret 0xee31
0x00000200001933b8 : shr al, cl ; ret 0xf11a
0x0000020000588e13 : shr al, cl ; ret 0xffb2
0x0000020000632cef : shr al, cl ; sbb eax, ebx ; ret
0x0000020000634769 : shr al, cl ; shl dword ptr [rdx - 0x2f750060], -0x76 ; ret 0x8b48
0x00000200005ec7dd : shr al, cl ; sub eax, 0x8bffc828 ; ret
0x0000020000555785 : shr al, cl ; test dword ptr [rax - 0x7cb7002f], ebx ; ret
0x00000200004200bd : shr al, cl ; xchg eax, ebp ; xchg eax, ebp ; ret
0x0000020000069633 : shr al, cl ; xlatb ; pop rcx ; and byte ptr [rax], al ; jmp 0x20000069605
0x000002000036a293 : shr al, cl ; xlatb ; ret 1
0x00000200006325d6 : shr al, cl ; xor al, 0xca ; ret
0x000002000049df5a : shr al, cl ; xor ch, cl ; ret 0x4cff
0x0000020000101e47 : shr al, cl ; xor esi, dword ptr [rax] ; cli ; push rsi ; ret
0x000002000052e8c4 : shr bl, 0 ; add rsp, 0x18 ; ret
0x00000200006601e0 : shr bl, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059b5d9 : shr bl, 0 ; add rsp, 0x38 ; ret
0x000002000056a2bd : shr bl, 0 ; ret
0x00000200003a15f6 : shr bl, 0xc ; inc r10d ; jmp 0x200003a15e7
0x00000200006c2635 : shr bl, 0xca ; mov ebx, 0xc000009a ; jmp 0x200006c260b
0x0000020000407d1e : shr bl, 0xde ; call 0x20000023fb5
0x000002000001e266 : shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x0000020000105a45 : shr bl, 0xf0 ; and qword ptr [r8], 0 ; ret
0x00000200004dbb7d : shr bl, 0xf2 ; mov al, r9b ; ret
0x00000200000194de : shr bl, 0xfa ; add rsp, 0x20 ; pop rbp ; ret
0x000002000019c544 : shr bl, 1 ; adc ecx, dword ptr [rcx - 0x7d] ; rol byte ptr [rdx], 0x81 ; ret 0x2809
0x0000020000508f28 : shr bl, 1 ; ret
0x0000020000101b78 : shr bl, 1 ; ret 0xffb8
0x000002000010ae24 : shr bl, 1 ; sub al, 0x33 ; ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200005bab9e : shr bl, 2 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000002000012f3ee : shr bl, 3 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000200005653de : shr bl, 5 ; mov eax, 0xc0000056 ; ret
0x0000020000188e3a : shr bl, cl ; add ecx, dword ptr [rbp + 0x6348014a] ; ret 0xd13b
0x0000020000157d97 : shr bl, cl ; int 0xc3
0x0000020000181870 : shr byte ptr [rax + 0x483b7401], 0x8b ; ret 0xb849
0x00000200005438a5 : shr byte ptr [rax + 0x48], 3 ; add eax, 0xffda291a ; ret
0x000002000063f5db : shr byte ptr [rax - 0x16fa8bfe], cl ; sub edi, edx ; ret 0xebff
0x00000200001b51ba : shr byte ptr [rax - 0x9148af9], 1 ; ret 0xf07
0x00000200000e67b9 : shr byte ptr [rax], 0x83 ; call qword ptr [rax]
0x000002000019e222 : shr byte ptr [rax], 0x85 ; sal byte ptr [rbp - 0x2c], cl ; mov al, 1 ; ret
0x0000020000054a75 : shr byte ptr [rbx], 0xc1 ; ret
0x00000200004e828c : shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x200004e82a2 ; ret
0x000002000058f7ae : shr byte ptr [rcx - 0x40], 0xfd ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x00000200005a8d5e : shr byte ptr [rdi - 0x3b7cb701], 0x68 ; ret
0x0000020000378dc5 : shr byte ptr [rdx], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200005746a2 : shr cl, 0x12 ; add dword ptr [rax], eax ; add dh, dh ; ret 0xb83f
0x00000200005fa947 : shr cl, 0x16 ; mov ah, bl ; push rsi ; ret
0x00000200005e7bf8 : shr cl, 0x1a ; ret
0x0000020000614e14 : shr cl, 0x1f ; ret 0xffdf
0x0000020000617afa : shr cl, 0x21 ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200004c124d : shr cl, 0x26 ; ret 0xfff2
0x000002000061ef0f : shr cl, 0x28 ; ret 0xffdf
0x000002000060cbed : shr cl, 0x35 ; ret 0xffe1
0x000002000018e6c0 : shr cl, 0x36 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ef83d : shr cl, 0x38 ; ret
0x00000200003efa68 : shr cl, 0x39 ; ret
0x00000200000c672f : shr cl, 0x3a ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200003efa5e : shr cl, 0x43 ; ret
0x0000020000576081 : shr cl, 0x4c ; add eax, 0x8b4c0000 ; ret
0x00000200001edf82 : shr cl, 0x4e ; ret
0x00000200006132a4 : shr cl, 0x5f ; jmp rax
0x00000200005fdd2a : shr cl, 0x64 ; ret
0x0000020000601901 : shr cl, 0x6f ; ret
0x0000020000039e49 : shr cl, 0x71 ; or eax, 0xc0330008 ; ret
0x000002000060ddbc : shr cl, 0x76 ; mov fs, eax ; inc dword ptr [rcx - 0x75] ; ret
0x000002000040eecf : shr cl, 0x77 ; add dword ptr [rax], esp ; add dh, dh ; ret
0x00000200001f5c04 : shr cl, 0x7d ; push rax ; dec dword ptr [rax - 0x75] ; ret
0x000002000049f9c3 : shr cl, 0x83 ; ret 1
0x000002000061b469 : shr cl, 0x85 ; ret 0xffe0
0x00000200005e7a71 : shr cl, 0x8b ; ret 0xffef
0x0000020000605dae : shr cl, 0x99 ; ret
0x00000200005eef23 : shr cl, 0x9c ; ret 0xfff0
0x0000020000629f74 : shr cl, 0xa1 ; ret
0x0000020000605da4 : shr cl, 0xa3 ; ret
0x00000200001ea61e : shr cl, 0xae ; ret 0xffec
0x00000200001e9231 : shr cl, 0xaf ; loopne 0x200001e922a ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005fcdde : shr cl, 0xb1 ; ret
0x00000200001ba720 : shr cl, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003efa48 : shr cl, 0xb9 ; ret 0xffff
0x00000200001f7f9b : shr cl, 0xbb ; ret 0xffe3
0x0000020000630867 : shr cl, 0xbf ; ret
0x00000200000dddf8 : shr cl, 0xc2 ; int 0xfd
0x0000020000197211 : shr cl, 0xc3 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003efa3e : shr cl, 0xc3 ; ret 0xffff
0x00000200001ea606 : shr cl, 0xc6 ; ret 0xffec
0x000002000060f551 : shr cl, 0xd5 ; ret
0x000002000015ee25 : shr cl, 0xd6 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xb848
0x000002000051fc90 : shr cl, 0xd8 ; mov eax, 0x3b41fff8 ; ret
0x00000200001ea5f2 : shr cl, 0xda ; ret 0xffec
0x00000200005fcc6b : shr cl, 0xdc ; ret 0xffe6
0x00000200005fcdb0 : shr cl, 0xdf ; ret
0x00000200005857de : shr cl, 0xe6 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000568dd8 : shr cl, 0xe7 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x000002000060f53d : shr cl, 0xe9 ; ret
0x00000200005b7bfc : shr cl, 0xea ; add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x00000200001de22e : shr cl, 0xf0 ; movsxd rsp, edx ; inc dword ptr [rcx - 0xa] ; ret
0x000002000060f533 : shr cl, 0xf3 ; ret
0x00000200001ed227 : shr cl, 0xf8 ; ret 0xfff2
0x000002000002e6a4 : shr cl, 0xfe ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200003f0513 : shr cl, 1 ; push rdx ; ret
0x00000200001f9736 : shr cl, 1 ; ret 0xec5f
0x0000020000504652 : shr cl, 2 ; sub al, 0xf1 ; push rsi ; ret
0x0000020000406059 : shr cl, 4 ; xor eax, eax ; mov byte ptr [rdx], cl ; ret
0x00000200005fffa3 : shr cl, 5 ; ret 0xffe6
0x0000020000568db7 : shr cl, 8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200001f348b : shr cl, 9 ; mov dl, 0xe5 ; dec dword ptr [rax - 0x75] ; ret 0x854d
0x0000020000605d01 : shr cl, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x00000200001c9dd7 : shr cl, cl ; mov bh, 0x96 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001df638 : shr cl, cl ; ret
0x00000200000eb2da : shr cl, cl ; ret 0xfffc
0x00000200001fe4dc : shr cl, cl ; sahf ; imul ebp, edx, 0x8b9090ff ; ret 0x8349
0x00000200001f7e07 : shr dl, 1 ; call qword ptr [rax - 0x1c3daf17]
0x000002000047814b : shr dword ptr [rax + 0x1f], 0 ; add cl, ch ; sub ecx, ebp ; ret 0x90ff
0x00000200004333bc : shr dword ptr [rax + 0x44000003], -0x75 ; ret 0x57e8
0x00000200005fc283 : shr dword ptr [rax + 0x44000003], -0x75 ; ret 0x90e8
0x000002000047c98b : shr dword ptr [rax + 0x48407401], -0x75 ; ret
0x0000020000046079 : shr dword ptr [rax + 0x48457401], -0x75 ; ret
0x000002000003d777 : shr dword ptr [rax + 0x48467401], -0x75 ; ret 0xb948
0x0000020000573f67 : shr dword ptr [rax + 0x484c7401], -0x75 ; ret
0x00000200001e46cd : shr dword ptr [rax + 0x48577401], -0x75 ; ret 0xb948
0x00000200001e444a : shr dword ptr [rax + 0x485b7401], -0x75 ; ret 0xb948
0x000002000005527c : shr dword ptr [rax + 0x49000000], -0x7d ; ret 0x3b0c
0x0000020000004488 : shr dword ptr [rax + 0x49407401], -0x75 ; ret 0xb948
0x000002000050154d : shr dword ptr [rax + 0x49], -0x7d ; ret
0x0000020000592bdd : shr dword ptr [rax + 0x5c8d4cff], 0x24 ; jo 0x20000592b7a ; ret
0x00000200005f4dc2 : shr dword ptr [rax], -0x18 ; ret
0x000002000003e574 : shr dword ptr [rax], -0x75 ; ret
0x000002000000e25b : shr dword ptr [rax], 0x41 ; cmp edx, edx ; jb 0x2000000e24e ; xor eax, eax ; ret
0x00000200001326a5 : shr dword ptr [rax], 0x48 ; add edx, 0x28 ; jmp 0x20000132677
0x0000020000386167 : shr dword ptr [rax], cl ; add byte ptr [rdi + rcx - 0x49], al ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000002000019c976 : shr dword ptr [rbx - 0x40], 0x1c ; add eax, 0xac00 ; ret
0x000002000012f246 : shr dword ptr [rbx], -0x3e ; ret
0x000002000006af22 : shr dword ptr [rbx], 1 ; ret 0xc63b
0x00000200006c639d : shr dword ptr [rcx], cl ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000011b57b : shr dword ptr [rdx - 8], -1 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000058dad2 : shr eax, 0x10 ; add eax, ecx ; ret
0x00000200001f4b29 : shr eax, 0x10 ; mov rcx, r14 ; call r10
0x000002000042ac1a : shr eax, 0x10 ; ret
0x00000200001ba67f : shr eax, 0x11 ; not eax ; and eax, 1 ; ret
0x0000020000526418 : shr eax, 0x12 ; add rsp, 0x28 ; ret
0x00000200001b7821 : shr eax, 0x12 ; not eax ; and eax, 1 ; ret
0x000002000003b453 : shr eax, 0x18 ; and al, 1 ; ret
0x00000200001491ac : shr eax, 0x19 ; and eax, 1 ; ret
0x000002000053d6aa : shr eax, 0x1f ; not al ; and al, 1 ; ret
0x00000200001d2c46 : shr eax, 0x38 ; mov word ptr [r8], ax ; ret
0x00000200000e99b2 : shr eax, 0x38 ; ret
0x0000020000046715 : shr eax, 0x3f ; add rax, rdx ; jmp 0x200000466c5
0x0000020000039e77 : shr eax, 0xc ; and al, 1 ; ret
0x00000200004d8897 : shr eax, 0xc ; and rax, rcx ; ret
0x000002000004d2fc : shr eax, 0xc ; cmp eax, dword ptr [rbx + 0x1c] ; jbe 0x2000004d2cd ; jmp 0x2000004d312
0x00000200000ead75 : shr eax, 0xe ; ret
0x000002000063f071 : shr eax, 0xf ; and al, 1 ; ret
0x00000200003d8931 : shr eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b5063 : shr eax, 1 ; and eax, 1 ; add rsp, 0x38 ; ret
0x000002000047e822 : shr eax, 1 ; and eax, 1 ; ret
0x00000200003ffdc7 : shr eax, 1 ; jrcxz 0x200003ffe10 ; ret 0xebff
0x00000200001c84a2 : shr eax, 1 ; lodsb al, byte ptr [rsi] ; ret
0x0000020000489b75 : shr eax, 1 ; mov ch, 0x7e ; ret
0x00000200003d7cd3 : shr eax, 1 ; ret
0x000002000012946b : shr eax, 3 ; and eax, 1 ; ret
0x0000020000124887 : shr eax, 3 ; and eax, 4 ; ret
0x000002000014433f : shr eax, 4 ; and eax, 1 ; ret
0x000002000004fa72 : shr eax, 6 ; and eax, 0xfffff ; ret
0x0000020000052087 : shr eax, 7 ; add rsp, 0x28 ; ret
0x00000200000a86be : shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x0000020000392ab7 : shr eax, 9 ; xor eax, edx ; and eax, 0x1f ; ret
0x000002000011ae11 : shr eax, cl ; and r8d, 7 ; mov eax, r8d ; ret
0x000002000001e9f7 : shr eax, cl ; cmp ecx, dword ptr [ebx] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000639293 : shr eax, cl ; cmpsd dword ptr [rsi], dword ptr [rdi] ; insd dword ptr [rdi], dx ; ret
0x000002000049ef91 : shr eax, cl ; fld dword ptr [rdx] ; ret 0x66ff
0x0000020000508ec3 : shr eax, cl ; in al, dx ; ret
0x00000200004902f4 : shr eax, cl ; jbe 0x200004902eb ; ret 0x48ff
0x00000200005137c1 : shr eax, cl ; jmp 0x2004d50fac8
0x000002000065ba3b : shr eax, cl ; jmp qword ptr [rcx]
0x000002000048cfef : shr eax, cl ; jnp 0x2000048d019 ; ret
0x000002000048d5f1 : shr eax, cl ; jns 0x2000048d615 ; ret
0x00000200003f10a0 : shr eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200005a319d : shr eax, cl ; pop rbp ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200004f3d65 : shr eax, cl ; push rbp ; xor al, 0xb8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000034b67 : shr eax, cl ; ret
0x000002000064ff98 : shr eax, cl ; ret 0xa650
0x00000200005423f8 : shr eax, cl ; ret 0xc1cb
0x00000200000e30a8 : shr eax, cl ; ret 0xfc5c
0x0000020000407a40 : shr eax, cl ; ret 0xfff4
0x000002000042174a : shr eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200006c0608 : shr eax, cl ; xchg eax, edx ; wait ; dec dword ptr [rax - 0x7d] ; ret
0x000002000041db26 : shr eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200001e81c0 : shr ebp, -1 ; xor ecx, ecx ; call 0x200001444b3
0x0000020000141a07 : shr ebx, -0x21 ; xor eax, eax ; ret
0x0000020000073ceb : shr ebx, -0xd ; mov rax, r11 ; ret
0x0000020000073527 : shr ebx, 0xc ; xor rax, rax ; ret
0x00000200001d7a32 : shr ebx, 1 ; ret 0x8b48
0x00000200001ab209 : shr ebx, cl ; cmp r11d, ebx ; seta r10b ; jmp 0x200001ab21f
0x000002000064c04a : shr ecx, 0x1a ; and ecx, 1 ; mov eax, ecx ; ret
0x000002000013c423 : shr ecx, 0x38 ; mov eax, ecx ; ret
0x00000200000fe8e8 : shr ecx, 0x3a ; and ecx, 0x3f ; mov eax, ecx ; ret
0x00000200001c9369 : shr ecx, 0x75 ; jnp 0x200001c9369 ; dec dword ptr [rax + 0x3b] ; ret 0x876
0x00000200004475ea : shr ecx, 1 ; call 0x2000006b505
0x00000200003707d9 : shr ecx, 1 ; jne 0x20000370786 ; ret
0x0000020000668e48 : shr ecx, 1 ; mov dword ptr [r8], ecx ; ret
0x00000200000d4b6a : shr ecx, 4 ; add rax, rcx ; ret
0x00000200003d7247 : shr edi, 1 ; add edi, r14d ; jmp 0x200003d7217
0x000002000052ac6d : shr edx, 0x17 ; cmp r8d, edx ; jmp 0x2000052acad
0x0000020000191df6 : shr edx, 0x18 ; mov al, dl ; ret
0x0000020000151e3e : shr edx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200001682ec : shr edx, 0x20 ; wrmsr ; ret
0x00000200003619a1 : shr edx, 0x20 ; wrmsr ; wbinvd ; ret
0x000002000019bf4b : shr edx, 0x20 ; xrstor ptr [rcx] ; ret
0x000002000019bf08 : shr edx, 0x20 ; xsave ptr [rcx] ; ret
0x00000200001f1239 : shr edx, 0xd ; mov byte ptr [r10 + 0x39], dl ; ret
0x000002000001dc46 : shr edx, 0xf ; add eax, ecx ; lea eax, dword ptr [rdx + rax*4] ; ret
0x0000020000370775 : shr edx, 1 ; jne 0x2000037074d ; ret
0x00000200004a5072 : shr edx, 3 ; call 0x200000c7386
0x000002000001d97a : shr edx, cl ; test r9, r9 ; js 0x2000001d996 ; mov rax, rdx ; ret
0x00000200001c50f8 : shr esi, 1 ; ret
0x00000200001c5102 : shr esp, 1 ; ret
0x00000200006ec48f : shr r8b, 0xda ; ret
0x0000020000510674 : shr r8b, 1 ; adc eax, 0x8bffe9d1 ; ret
0x0000020000486365 : shr r8b, 1 ; add al, 0x8f ; ret
0x0000020000532f1c : shr r8b, 1 ; ret
0x00000200001f4b28 : shr r8d, 0x10 ; mov rcx, r14 ; call r10
0x00000200003f109f : shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x0000020000421749 : shr r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x000002000041db25 : shr r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200003707d8 : shr r9, 1 ; jne 0x20000370787 ; ret
0x00000200004475e9 : shr r9d, 1 ; call 0x2000006b506
0x00000200004475e8 : shr r9d, 1 ; call 0x2000006b507
0x0000020000526417 : shr rax, 0x12 ; add rsp, 0x28 ; ret
0x00000200001d2c45 : shr rax, 0x38 ; mov word ptr [r8], ax ; ret
0x00000200000e99b1 : shr rax, 0x38 ; ret
0x0000020000046714 : shr rax, 0x3f ; add rax, rdx ; jmp 0x200000466c6
0x00000200004d8896 : shr rax, 0xc ; and rax, rcx ; ret
0x000002000004d2fb : shr rax, 0xc ; cmp eax, dword ptr [rbx + 0x1c] ; jbe 0x2000004d2ce ; jmp 0x2000004d313
0x00000200003d8930 : shr rax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d88d8 : shr rax, 1 ; ret
0x000002000013c422 : shr rcx, 0x38 ; mov eax, ecx ; ret
0x00000200000fe8e7 : shr rcx, 0x3a ; and ecx, 0x3f ; mov eax, ecx ; ret
0x00000200000d4b69 : shr rcx, 4 ; add rax, rcx ; ret
0x000002000052ac6c : shr rdx, 0x17 ; cmp r8d, edx ; jmp 0x2000052acae
0x0000020000151e3d : shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200001682eb : shr rdx, 0x20 ; wrmsr ; ret
0x00000200003619a0 : shr rdx, 0x20 ; wrmsr ; wbinvd ; ret
0x000002000019bf4a : shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x000002000019bf07 : shr rdx, 0x20 ; xsave ptr [rcx] ; ret
0x0000020000370774 : shr rdx, 1 ; jne 0x2000037074e ; ret
0x00000200006a1043 : sidt ptr [rdx] ; ret
0x00000200000507af : sldt word ptr [rax] ; add bh, bh ; ret 0xff49
0x00000200000bd16b : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200001814e6 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d4c
0x00000200001304ef : sldt word ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200001e6469 : sldt word ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000003c78e : sldt word ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000200000c4ead : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x000002000001e992 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000046637 : sldt word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001823d6 : sldt word ptr [rax] ; add byte ptr [rax - 9], cl ; ret
0x000002000003c3ff : sldt word ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x00000200000bc1ca : sldt word ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000070ce73 : sldt word ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000005dd64 : sldt word ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000576462 : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200001b7937 : sldt word ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200000ce07c : sldt word ptr [rax] ; add cl, ch ; ret 0xfffc
0x00000200000c1500 : sldt word ptr [rax] ; add dh, dh ; ret
0x00000200001869e5 : sldt word ptr [rax] ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x00000200005874fb : sldt word ptr [rbx] ; ret 0xc23b
0x00000200000d2e04 : sldt word ptr [rcx + 0x3b] ; ret 0x860f
0x000002000007c5a2 : sldt word ptr [rcx + 0x72] ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200000f8e7c : sldt word ptr [rcx - 0x73] ; inc dword ptr [r9 + 3] ; ret 0x789
0x000002000050210a : sldt word ptr [rcx - 0x75] ; ret 0x8d48
0x0000020000101437 : stc ; adc byte ptr [rdi + rdx*8 - 0xd], dh ; ret
0x000002000001de1f : stc ; adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x0000020000198d3d : stc ; add al, 0x75 ; jge 0x20000198cd5 ; je 0x20000198d58 ; ret 0x1a8
0x000002000062ef23 : stc ; add byte ptr [r8], al ; adc dword ptr [rdi], ecx ; ret 0x4389
0x00000200000adc7a : stc ; add byte ptr [rax + rax], al ; add byte ptr [rbp + 3], bh ; xor eax, eax ; ret
0x0000020000379a84 : stc ; add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000200006c34fe : stc ; add byte ptr [rax], 0 ; add byte ptr [rdx - 0x49], dh ; ret
0x0000020000144cf9 : stc ; add byte ptr [rax], al ; add al, byte ptr [rsi] ; setbe al ; ret
0x00000200005a2fbe : stc ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf903
0x000002000007ee75 : stc ; add byte ptr [rax], al ; add cl, ch ; ret 0xffc1
0x000002000019c16d : stc ; add byte ptr [rax], al ; add dword ptr [rax], eax ; setge al ; ret
0x00000200001649ad : stc ; add byte ptr [rax], al ; mov word ptr [rdx], ax ; ret
0x000002000069bbb9 : stc ; add dh, byte ptr [rsp + rax - 0x75] ; ret 0x3aeb
0x00000200000a18bb : stc ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200001620b4 : stc ; add dword ptr [rdi], ecx ; ret 0x521
0x00000200005f0f46 : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000002000011fa19 : stc ; add eax, 0xc033f072 ; ret
0x000002000019ca8d : stc ; add eax, 0xd800 ; ret
0x0000020000150611 : stc ; add eax, 0xf1f508d ; ret 0xb8c3
0x00000200006c8a04 : stc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xb808
0x00000200000ee84c : stc ; add eax, dword ptr [rcx + 0x2b] ; ret 0x3b48
0x0000020000489b71 : stc ; add eax, dword ptr [rcx - 0x75] ; shr eax, 1 ; mov ch, 0x7e ; ret
0x000002000019bff1 : stc ; add eax, r9d ; ret
0x000002000001e2c6 : stc ; add esi, dword ptr [rdi + 0x24] ; mov eax, 1 ; ret
0x00000200004e4463 : stc ; and ah, al ; push qword ptr [rdi + 2] ; ret
0x000002000000e011 : stc ; and byte ptr [rax + rax], al ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200003dd806 : stc ; and byte ptr [rcx + rdx - 0xd], dh ; ret
0x000002000019e494 : stc ; and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x00000200001d48cc : stc ; call qword ptr [rax - 0xa043d17]
0x00000200001e6dbf : stc ; call qword ptr [rax - 0xae53d17]
0x0000020000111c63 : stc ; call qword ptr [rax - 0xb2a3d17]
0x000002000050d3b8 : stc ; call rcx
0x000002000063530b : stc ; cli ; ret
0x00000200001c43bc : stc ; cmovne eax, edx ; ret
0x0000020000183ad3 : stc ; cmp al, 0xfa ; dec dword ptr [rax - 0x7d] ; ret
0x000002000012f240 : stc ; cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000198c67 : stc ; cmp ecx, 1 ; setle al ; ret
0x000002000010cdd6 : stc ; dec byte ptr [rdi] ; ret 0x4589
0x000002000056726e : stc ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000105bb2 : stc ; dec dword ptr [rax - 0x75] ; ret
0x00000200004b6e5a : stc ; dec dword ptr [rax - 0x77] ; adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200001277bf : stc ; hlt ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200001098e6 : stc ; hlt ; push rsi ; ret
0x000002000062a69b : stc ; in eax, dx ; push rsi ; ret
0x00000200001cde19 : stc ; inc dword ptr [rbp - 0xf58740] ; ret
0x00000200000da039 : stc ; inc dword ptr [rcx - 0x75] ; ret 0x950f
0x0000020000589406 : stc ; jae 0x20000589415 ; movzx eax, cx ; ret
0x00000200001f01a1 : stc ; jb 0x200001f01b4 ; mov eax, 1 ; ret
0x000002000019c06c : stc ; jg 0x2000019c0ee ; add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x00000200003b822b : stc ; jg 0x200003b8221 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000617b70 : stc ; jg 0x20000617bf2 ; js 0x20000617b05 ; or cl, byte ptr [rax - 1] ; ret 0x8445
0x0000020000617bdb : stc ; jg 0x20000617c5d ; or eax, 0xff480a88 ; ret 0x97e9
0x00000200000df843 : stc ; jl 0x200000df851 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b8b6d : stc ; jne 0x200000b8b7e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7821 : stc ; jo 0x200000e7831 ; add al, al ; je 0x200000e7834 ; mov al, 1 ; ret
0x000002000019ca71 : stc ; lea eax, dword ptr [rdx + 0xdc00] ; ret
0x00000200005854ae : stc ; mov cl, 0xff ; add rsp, 0x78 ; ret
0x000002000064adf7 : stc ; mov ebp, 1 ; call 0x20000270049
0x0000020000490f4f : stc ; mov qword ptr [rsp + 0x20], rax ; call 0x2000007d1c8
0x0000020000570853 : stc ; mov r11b, 0xff ; add rsp, 0x58 ; ret
0x00000200000a375b : stc ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x000002000017bcf7 : stc ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000046a853 : stc ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000002000001e2d1 : stc ; or dword ptr [rdi + 0x19], esi ; mov eax, 8 ; ret
0x000002000008e149 : stc ; or r12b, byte ptr [r15 - 0x7f] ; ret
0x00000200004fa48f : stc ; pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x0000020000038d20 : stc ; pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rbp + rbp - 0x75], 0xc2 ; ret
0x000002000008e7b7 : stc ; pop rdx ; ret
0x000002000060394f : stc ; push qword ptr [rbp + rdx - 1] ; ret
0x00000200001525fa : stc ; push qword ptr [rbx + rax - 0x50] ; add ebx, eax ; xor al, al ; ret
0x00000200000739a0 : stc ; ret
0x00000200003f45d3 : stc ; ret 0x48ff
0x0000020000529731 : stc ; ret 0x49ff
0x00000200006481b4 : stc ; ret 0x7dff
0x000002000060ca35 : stc ; ret 0xffe1
0x00000200000272a1 : stc ; rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x00000200001899b3 : stc ; ror byte ptr [rdi], 0x85 ; ret 1
0x00000200001c436f : stc ; sbb al, 0x7f ; adc bh, byte ptr [rax + 4] ; ret
0x00000200006430da : stc ; test rax, rax ; je 0x2000064315b ; mov r8d, esi ; call rax
0x000002000048bc63 : stc ; xchg eax, ebx ; ret 0x48ff
0x0000020000545183 : stc ; xor byte ptr [rdx + 0x3e], 0x33 ; sar byte ptr [rax], 5 ; ret 0x13de
0x00000200006eab68 : stc ; xor dh, byte ptr [rbx + 8] ; mov r14d, r12d ; mov rax, rdx ; jmp 0x200006eab83
0x0000020000181961 : stc ; xor dh, byte ptr [rdx - 0x34] ; xor eax, eax ; ret
0x00000200000b8b22 : std ; adc al, byte ptr [rax] ; ret
0x000002000014f2eb : std ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000035ee55 : std ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000bdbf6 : std ; add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x00000200003a9dfa : std ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000016390d : std ; add byte ptr [rcx + rcx - 0x75], dh ; add ah, byte ptr [rbx] ; ret
0x0000020000180131 : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000020000664a31 : std ; add rsp, 0x28 ; ret
0x00000200001273d8 : std ; and al, byte ptr [rax] ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001e96ab : std ; call qword ptr [rax - 0x113d9017]
0x000002000070d58a : std ; call rcx
0x000002000051f00f : std ; call rsp
0x000002000011e37c : std ; cli ; dec dword ptr [rax - 0x75] ; ret
0x000002000010e7e4 : std ; dec dword ptr [rax - 0x75] ; ret
0x0000020000101b38 : std ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 0x75], 1 ; ret 0x8348
0x000002000006e905 : std ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001491d2 : std ; dec dword ptr [rax - 0x7d] ; ret 0xb904
0x0000020000151c14 : std ; dec dword ptr [rbp - 0x75] ; ret 0xbfe9
0x0000020000128df6 : std ; dec dword ptr [rdi] ; test byte ptr [rbp - 0x9000003], dh ; ret
0x0000020000569511 : std ; inc dword ptr [rbp - 0xe58740] ; ret
0x00000200004c5928 : std ; inc dword ptr [rcx - 0x73] ; adc byte ptr [r11], r15b ; ret
0x00000200003d3951 : std ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000e39df : std ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000041e8b6 : std ; jmp 0x2000041e782
0x000002000012c192 : std ; lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200001035b5 : std ; mov dh, byte ptr [rax + rcx - 0x75] ; ret 0x8041
0x0000020000103701 : std ; mov dword ptr [rax + rcx - 0x75], esi ; ret 0x8041
0x00000200006f9a54 : std ; mov ebp, 0x35894cff ; ret 0xbdfd
0x00000200004d74a3 : std ; mov edi, 7 ; jmp 0x200004d74c9
0x000002000060ca54 : std ; mov edx, 0x7ae990ff ; ret
0x000002000047fe3e : std ; mov edx, 0xb60f0015 ; ret
0x00000200001413eb : std ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200001517ab : std ; push rsi ; ret
0x000002000011f8ee : std ; push rsi ; ret 0xf08
0x0000020000073988 : std ; ret
0x000002000016b32f : std ; ret 0x2a
0x0000020000475138 : std ; ret 0x4cff
0x000002000043e44a : std ; ret 0x823c
0x000002000039a98f : std ; ret 0xc
0x00000200001dfcb7 : std ; ret 0xe
0x00000200003718cf : std ; ret 0xffdd
0x00000200001db4ff : std ; ret 0xffe8
0x000002000054988a : std ; sar edi, 0x48 ; add esp, 0x28 ; ret
0x000002000058f7b1 : std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000187521 : sti ; adc al, 0xea ; dec dword ptr [rax - 0x7d] ; ret 0x4910
0x0000020000234fd5 : sti ; add al, dh ; xor byte ptr [rbp], bl ; ret 0x3efb
0x0000020000084288 : sti ; add byte ptr [rbx], dh ; fld qword ptr [rax] ; add byte ptr [rax], al ; add al, ah ; ret
0x00000200001ab70c : sti ; add cl, byte ptr [rax - 0x75] ; ret
0x00000200005e7c13 : sti ; add cl, byte ptr [rdi] ; test esp, edi ; ret
0x000002000049771b : sti ; add dword ptr [rdi], ecx ; xchg dword ptr [rsi - 0x74ffe8df], edx ; ret 0x1b9
0x000002000002e144 : sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000001ac96 : sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000187117 : sti ; add ecx, dword ptr [rcx + 0x3b] ; ret
0x000002000014c9d9 : sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000c5e2b : sti ; add ecx, dword ptr [rcx - 1] ; ret
0x00000200000c0284 : sti ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051bdcb : sti ; and dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000624471 : sti ; call 0x1ffc3ee4420
0x000002000013d223 : sti ; call qword ptr [rax - 0x3c09aa15]
0x0000020000175ff1 : sti ; call qword ptr [rdi]
0x000002000011e3c1 : sti ; cli ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000064c96e : sti ; cmp al, 0x72 ; out dx, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006e6d33 : sti ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000048f9e7 : sti ; dec dword ptr [rax - 0x73] ; call 0x1ffc34178e2
0x0000020000496b8a : sti ; dec dword ptr [rax - 0x73] ; cdqe ; call 0x200000bf279
0x00000200001803e3 : sti ; dec dword ptr [rax - 0x7d] ; ret
0x000002000070d551 : sti ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001280e0 : sti ; dec dword ptr [rcx + 0x39] ; imul esp, dword ptr [rax], 0xf ; test eax, edx ; int 0xfb
0x0000020000708fb9 : sti ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000711151 : sti ; dec dword ptr [rdi] ; mov edx, 0xb7ef752d ; call qword ptr [rcx]
0x000002000018cfe3 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1372
0x000002000018cfd4 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x1e76
0x000002000018cfb6 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x3c76
0x000002000018cff2 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x477
0x000002000018cf81 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xd77
0x000002000018cfc5 : sti ; idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0xf72
0x00000200000431a9 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000046352 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x0000020000004476 : sti ; idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000bccef : sti ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x000002000051e1ac : sti ; inc dword ptr [rcx - 0x41] ; ret
0x00000200000f9d5b : sti ; inc dword ptr [rcx - 0x75] ; ret 0x8b48
0x0000020000128486 : sti ; inc dword ptr [rcx - 0xa] ; ret
0x00000200004f31be : sti ; jmp 0x200004f3074
0x00000200006e7815 : sti ; mov al, dl ; jmp 0x200006d3abd
0x000002000008e288 : sti ; mov eax, dword ptr [rax + 0x7242b8f] ; sahf ; ret
0x0000020000153b56 : sti ; mov eax, ecx ; ret
0x00000200006f06b6 : sti ; mov r12d, ebx ; jmp 0x200006f068e
0x00000200004a9cbe : sti ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000020000381311 : sti ; push rax ; sar edi, cl ; jmp 0x20000381349
0x00000200005176d7 : sti ; push rsi ; ret
0x0000020000122b07 : sti ; push rsi ; ret 0xba01
0x000002000070b23a : sti ; push rsi ; ret 0xf02
0x000002000070d543 : sti ; push rsi ; ret 0xf08
0x0000020000073994 : sti ; ret
0x0000020000071cb4 : sti ; ret 0x18
0x00000200003f43dc : sti ; ret 0x48ff
0x0000020000495581 : sti ; ret 0x4cff
0x000002000052b794 : sti ; ret 0x90ff
0x00000200006056cf : sti ; ret 0xffec
0x0000020000613294 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x000002000051a60c : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200006001b6 : sti ; test rbx, rbx ; jne 0x2000060019e ; jmp 0x2000046c49c
0x0000020000624746 : sti ; xor edi, esp ; inc dword ptr [rbx] ; ret
0x000002000007c5a6 : stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200005cce59 : stosb byte ptr [edi], al ; inc dword ptr [rbp - 0xd58b40] ; ret
0x00000200006656bd : stosb byte ptr [edi], al ; ret 0x48ff
0x00000200000ae48c : stosb byte ptr [rdi], al ; adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000398c39 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4910
0x000002000013d1f9 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000abb77 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x44], cl ; ret 0x1b8
0x000002000004a8dd : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000001e378 : stosb byte ptr [rdi], al ; add dh, dh ; ret
0x00000200001f8e91 : stosb byte ptr [rdi], al ; cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; jmp rsp
0x00000200006eb432 : stosb byte ptr [rdi], al ; cmp bl, byte ptr [rcx - 0x3b7cb701] ; pop rax ; ret
0x00000200005fa01b : stosb byte ptr [rdi], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; inc dword ptr [rbp + 0x33] ; leave ; jmp 0x200005f9fed
0x00000200005af26b : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x00000200001bc508 : stosb byte ptr [rdi], al ; idiv edi ; add rsp, 0x48 ; ret
0x000002000060c1e9 : stosb byte ptr [rdi], al ; idiv edi ; nop ; jmp 0x2000042849b
0x000002000064faea : stosb byte ptr [rdi], al ; in al, dx ; ret 0x48ff
0x0000020000414581 : stosb byte ptr [rdi], al ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200005cd4aa : stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xc18b40] ; ret
0x00000200005cc8a4 : stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xce8b40] ; ret
0x00000200005cc554 : stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xcf8b40] ; ret
0x00000200005cce5a : stosb byte ptr [rdi], al ; inc dword ptr [rbp - 0xd58b40] ; ret
0x000002000061788e : stosb byte ptr [rdi], al ; inc dword ptr [rbx + rcx*4 + 0x5b] ; or byte ptr [rcx - 0xa], al ; ret
0x00000200006671e2 : stosb byte ptr [rdi], al ; insd dword ptr [rdi], dx ; ret 0x48ff
0x0000020000169321 : stosb byte ptr [rdi], al ; jg 0x2000016933e ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000082f92 : stosb byte ptr [rdi], al ; mov dword ptr [rax], 0xb5000000 ; ret
0x00000200004cfca2 : stosb byte ptr [rdi], al ; nop ; ret 0xe9ff
0x0000020000140875 : stosb byte ptr [rdi], al ; or eax, dword ptr [rax] ; ret
0x00000200005d7cbf : stosb byte ptr [rdi], al ; out 1, al ; add byte ptr [rax], al ; jne 0x200005d7cd4 ; call 0x20000023fb9
0x00000200005cc9f0 : stosb byte ptr [rdi], al ; push qword ptr [rbx] ; rol byte ptr [rbp - 0xcf8b40], cl ; ret
0x0000020000012a2c : stosb byte ptr [rdi], al ; pushfq ; sbb al, 0 ; ret
0x00000200001246a6 : stosb byte ptr [rdi], al ; ret
0x00000200003647b9 : stosb byte ptr [rdi], al ; ret 0
0x0000020000665668 : stosb byte ptr [rdi], al ; ret 0x33ff
0x0000020000665671 : stosb byte ptr [rdi], al ; ret 0x44ff
0x0000020000448343 : stosb byte ptr [rdi], al ; ret 0x48ff
0x0000020000661023 : stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200006655e5 : stosb byte ptr [rdi], al ; ret 0xbff
0x0000020000425226 : stosb byte ptr [rdi], al ; ret 0xebff
0x00000200005c24ea : stosb byte ptr [rdi], al ; ret 0xffcb
0x0000020000082b78 : stosb byte ptr [rdi], al ; salc ; xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x000002000049a361 : stosb byte ptr [rdi], al ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200006f6880 : stosb byte ptr [rdi], al ; sar edi, 1 ; add rsp, 0x48 ; ret
0x00000200001491d1 : stosb byte ptr [rdi], al ; std ; dec dword ptr [rax - 0x7d] ; ret 0xb904
0x0000020000669935 : stosd dword ptr [rdi], eax ; adc esp, dword ptr [rax + 0x3d8d48ff] ; push rax ; pop rbx ; ret 0x48ff
0x000002000012e066 : stosd dword ptr [rdi], eax ; add al, 0xee ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000182222 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000047fbc5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000917c8 : stosd dword ptr [rdi], eax ; and bpl, 0xe4 ; ret 0x394e
0x00000200004f6d4a : stosd dword ptr [rdi], eax ; call qword ptr [rax]
0x000002000064b9ac : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000059da0e : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000596b16 : stosd dword ptr [rdi], eax ; dec dword ptr [rbx + 0x78c085f0] ; xor edi, edi ; ret
0x000002000056ea1f : stosd dword ptr [rdi], eax ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200005f6c18 : stosd dword ptr [rdi], eax ; enter -0x1601, -0x49 ; ret
0x00000200006bba41 : stosd dword ptr [rdi], eax ; imul ecx, esp, -1 ; add rsp, 0x48 ; ret
0x00000200005e58a0 : stosd dword ptr [rdi], eax ; in al, dx ; push rsi ; ret
0x00000200001d446d : stosd dword ptr [rdi], eax ; in eax, dx ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000596d49 : stosd dword ptr [rdi], eax ; inc dword ptr [rbp - 0xf38740] ; ret
0x00000200005ff5b8 : stosd dword ptr [rdi], eax ; inc dword ptr [rbx + rcx*4 + 5] ; ret
0x00000200001e6003 : stosd dword ptr [rdi], eax ; jl 0x200001e5ff2 ; push rsi ; ret 0xf01
0x0000020000600113 : stosd dword ptr [rdi], eax ; jmp 0x2000046c3da
0x00000200005e2eae : stosd dword ptr [rdi], eax ; jrcxz 0x200005e2eb9 ; mov eax, dword ptr [rcx + 0x110] ; ret
0x0000020000431551 : stosd dword ptr [rdi], eax ; lahf ; ret
0x00000200001601a5 : stosd dword ptr [rdi], eax ; mov edx, 0xb60ffff0 ; ret
0x0000020000130924 : stosd dword ptr [rdi], eax ; mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000070dea2 : stosd dword ptr [rdi], eax ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200004838a1 : stosd dword ptr [rdi], eax ; pop rcx ; ret 0x48ff
0x0000020000447751 : stosd dword ptr [rdi], eax ; pop rdi ; leave ; push qword ptr [rdx] ; ret
0x00000200001e564c : stosd dword ptr [rdi], eax ; push rsi ; ret
0x0000020000067a0f : stosd dword ptr [rdi], eax ; ret
0x00000200006648dc : stosd dword ptr [rdi], eax ; ret 0x33ff
0x000002000066490d : stosd dword ptr [rdi], eax ; ret 0x45ff
0x00000200006648f1 : stosd dword ptr [rdi], eax ; ret 0x48ff
0x0000020000665605 : stosd dword ptr [rdi], eax ; ret 0x4dff
0x0000020000665596 : stosd dword ptr [rdi], eax ; ret 0x85ff
0x0000020000406b91 : stosd dword ptr [rdi], eax ; ret 0xffc6
0x00000200000efb71 : stosd dword ptr [rdi], eax ; ret 0xfffe
0x0000020000447f91 : stosd dword ptr [rdi], eax ; scasb al, byte ptr [rdi] ; ret 0x4dff
0x00000200000637c2 : stosd dword ptr [rdi], eax ; xor eax, eax ; jmp 0x200000637a5
0x000002000004537a : stosd dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000020000600112 : stosq qword ptr [rdi], rax ; jmp 0x2000046c3db
0x0000020000665604 : stosq qword ptr [rdi], rax ; ret 0x4dff
0x000002000050164f : str word ptr [r8 - 0x75] ; ret
0x00000200000e2037 : str word ptr [rax - 0x3f] ; call 0x1ffc2316954
0x000002000017bb32 : str word ptr [rax - 0x75] ; call qword ptr [rax]
0x000002000017bc11 : str word ptr [rax - 0x75] ; mov rbx, rcx ; call qword ptr [rax]
0x00000200000e2862 : str word ptr [rax - 0x75] ; ret
0x000002000051a3d7 : str word ptr [rax - 0x75] ; ret 0x8b48
0x0000020000184f34 : str word ptr [rax - 0x75] ; ret 0xc148
0x00000200004fa0d6 : str word ptr [rax - 0x7d] ; ret
0x00000200000209d6 : str word ptr [rbx - 0x743cc408] ; ret
0x000002000010b1d8 : str word ptr [rcx - 0x75] ; ret
0x000002000010ae40 : str word ptr [rcx - 0x75] ; ret 0xf749
0x000002000050166e : str word ptr es:[rax - 0x75] ; ret
0x0000020000226881 : sub ah, byte ptr [rcx] ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add al, dl ; ret 0x11
0x000002000036df92 : sub ah, byte ptr [rcx] ; fdivp st(7) ; add rsp, 0x38 ; ret
0x000002000007c639 : sub ah, byte ptr [rsi - 9] ; ret 0x200
0x00000200006c9fd6 : sub ah, cl ; sar edi, -0x75 ; ret 0xd285
0x000002000063537c : sub al, 0 ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000141600
0x0000020000189b41 : sub al, 0 ; add byte ptr [rax], al ; jmp 0x20000189b79
0x00000200003c0b9f : sub al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015f851 : sub al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000085deb : sub al, 0x1d ; scasb al, byte ptr [rdi] ; ficomp word ptr [rbx - 0x50] ; ret 0x9b64
0x0000020000188c50 : sub al, 0x1e ; add byte ptr [rax], al ; ret
0x000002000063537b : sub al, 0x2c ; add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000141601
0x000002000010b0c5 : sub al, 0x33 ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000010ae26 : sub al, 0x33 ; ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200004661c7 : sub al, 0x3b ; ret
0x000002000013e4d4 : sub al, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x0000020000580c20 : sub al, 0x42 ; mov dl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000491b64 : sub al, 0x48 ; lea ecx, dword ptr [rsp + 0x20] ; call 0x200000bf279
0x0000020000491b56 : sub al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call 0x200000bf279
0x0000020000107bea : sub al, 0x48 ; mov ecx, eax ; call 0x200003c3e96
0x0000020000361044 : sub al, 0x48 ; mov edx, dword ptr [rax + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call qword ptr [rax]
0x000002000066008e : sub al, 0x48 ; mov edx, ebx ; mov rcx, rsi ; call 0x2000065c39d
0x00000200003b8e31 : sub al, 0x4c ; mov dword ptr [rdi + 0x20], esi ; jmp 0x200003b8e15
0x00000200003b8e30 : sub al, 0x4c ; mov dword ptr [rdi + 0x20], esi ; jmp 0x200003b8e16
0x000002000009189a : sub al, 0x66 ; imul ebp, esi, 0x48fca0a ; pop rbp ; ret
0x00000200005e1414 : sub al, 0x66 ; in al, dx ; push qword ptr [rbx] ; rol byte ptr [rcx - 0x47], cl ; ret 0xf
0x000002000042f3c0 : sub al, 0x6a ; ret
0x000002000050a104 : sub al, 0x6e ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000040288b : sub al, 0x83 ; ret 0x4114
0x00000200004f4286 : sub al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001f6b23 : sub al, 0x8b ; ret
0x00000200003bffee : sub al, 0x8b ; ret 0x8b48
0x00000200004eb661 : sub al, 0x8b ; ret 0xff48
0x00000200006bc410 : sub al, 0x9c ; ret 0x8bff
0x0000020000124eb6 : sub al, 0xb ; add byte ptr [rcx - 0x4f], al ; add dword ptr [rdx + rcx*4 - 0x6e], eax ; ret
0x00000200004e1bc0 : sub al, 0xb8 ; ret 0x48ff
0x00000200004ca024 : sub al, 0xba ; ret
0x000002000024c4d0 : sub al, 0xc1 ; add r8b, r11b ; ret 0x4d
0x0000020000631fe0 : sub al, 0xd0 ; ret
0x0000020000494c4e : sub al, 0xe4 ; push qword ptr [rdx + 0x4c28e801] ; ret 0x48ff
0x000002000042517d : sub al, 0xe7 ; push qword ptr [rbp + 1] ; ret
0x00000200000907d3 : sub al, 0xe8 ; fldenv dword ptr [rdi + 0x49] ; ret
0x00000200001d3028 : sub al, 0xe9 ; cmp dword ptr [rbp - 0x49f00012], esp ; ret
0x000002000018438f : sub al, 0xea ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005b7fcb : sub al, 0xf ; mov bh, 0x47 ; adc byte ptr [rax + 0x3b], cl ; ret
0x00000200001b3b4f : sub al, 0xf ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200006333fb : sub al, 0xf ; test byte ptr [rbx + 0x4f], al ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000504655 : sub al, 0xf1 ; push rsi ; ret
0x0000020000443b10 : sub al, 0xf3 ; ret 0x48ff
0x00000200004143d9 : sub al, 0xf4 ; dec dword ptr [rax + 0x3b] ; ret 0x2a77
0x0000020000039b24 : sub al, 0xf6 ; and al, 0 ; add rsp, 0x28 ; ret
0x000002000057dafd : sub al, 0xf6 ; ret 0x7401
0x0000020000473c2a : sub al, 0xf6 ; ret 0x7501
0x000002000001bdb1 : sub al, 0xf6 ; ret 0x7503
0x00000200000209d4 : sub al, 0xf7 ; str word ptr [rbx - 0x743cc408] ; ret
0x000002000047f400 : sub al, 0xfc ; ret
0x00000200001856b9 : sub al, 0xff ; ret
0x000002000001fc5a : sub al, 0xff ; ret 0xff49
0x0000020000054cba : sub al, 4 ; add byte ptr [rax], al ; and al, 1 ; ret
0x0000020000144330 : sub al, 4 ; add byte ptr [rax], al ; out dx, eax ; ret
0x000002000039397e : sub al, 4 ; add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x00000200002644d0 : sub al, al ; add byte ptr [rax], r12b ; ret 0x4e
0x000002000052d786 : sub al, bpl ; ret
0x000002000049794d : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000055eb72 : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x8966
0x00000200003d877b : sub al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000023e0d : sub al, byte ptr [rax] ; cmp rcx, rax ; jae 0x20000023e20 ; xor eax, eax ; ret
0x00000200000a6eb2 : sub al, byte ptr [rax] ; jmp 0x200000a6e7b
0x00000200001c802a : sub al, byte ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000a92d4 : sub al, byte ptr [rax] ; ret
0x000002000052ac7d : sub al, byte ptr [rbx + rdi + 5] ; ret
0x00000200004684c8 : sub al, byte ptr [rcx + 0x3b] ; jmp 0x1ffc43508e6
0x0000020000154f0f : sub al, byte ptr [rcx - 0x3a] ; add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000154f33
0x000002000000d041 : sub al, byte ptr [rcx - 0x7f] ; call qword ptr [rdi]
0x000002000008ebba : sub al, byte ptr [rdx] ; shl byte ptr [rbp + 0x56f68c0f], 1 ; ret
0x000002000025a022 : sub al, byte ptr [rsi] ; sysenter
0x00000200000a6eb1 : sub al, byte ptr gs:[rax] ; jmp 0x200000a6e7c
0x000002000057882e : sub al, ch ; add al, 0x92 ; sar bh, 0x81 ; ret
0x0000020000523132 : sub al, ch ; cmp al, 0x9b ; ret 0x89ff
0x0000020000574752 : sub al, ch ; push rax ; ret
0x00000200001ba453 : sub al, ch ; ret
0x0000020000472488 : sub al, ch ; ret 0xc314
0x00000200005d0d31 : sub al, ch ; test eax, 0x8bffaac3 ; ret
0x0000020000053df7 : sub al, ch ; xchg eax, ebx ; ret 0xffff
0x0000020000606ac7 : sub al, cl ; push rsi ; ret
0x00000200002008a1 : sub al, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000053df6 : sub al, r13b ; xchg eax, ebx ; ret 0xffff
0x0000020000364734 : sub bh, bh ; ljmp ptr [rax - 0x327af0ff] ; ret 0
0x00000200001138b6 : sub bh, bh ; ret
0x00000200006a11cb : sub bh, byte ptr [rax + rcx*2 + 0x3024548b] ; call r10
0x0000020000023e8b : sub bh, byte ptr [rax + rcx*2 + 0x4824548b] ; call r10
0x00000200007072e2 : sub bh, byte ptr [rbp - 0x4a] ; push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200004c6dd1 : sub bh, byte ptr [rdi - 0x9e97401] ; ret 0x7401
0x000002000010e128 : sub bh, dh ; push rsi ; ret
0x00000200000587a2 : sub bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x0000020000051050 : sub bl, al ; add rsp, 0x28 ; ret
0x000002000013b354 : sub bl, al ; inc edx ; jmp 0x2000013b32f
0x0000020000468860 : sub bl, al ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000013fb3f : sub bl, al ; mov eax, r10d ; jmp 0x2000013fb2e
0x00000200001374f4 : sub bl, al ; mov rcx, rdx ; call r9
0x00000200000c6d55 : sub bl, al ; xor al, al ; add rsp, 0x28 ; ret
0x000002000070b239 : sub bl, bh ; push rsi ; ret 0xf02
0x000002000049a4a4 : sub bl, bh ; ret
0x0000020000493f81 : sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003fee2a : sub bl, byte ptr [rax] ; ret
0x000002000003fa5e : sub bl, ch ; add eax, dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x0000020000493f82 : sub bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200001326aa : sub bl, ch ; ret
0x0000020000038bce : sub bl, ch ; sub eax, 2 ; ret
0x00000200000852aa : sub bl, dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000538958 : sub bl, dh ; inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x00000200004d37f5 : sub bl, dh ; ret
0x000002000054377c : sub bl, dl ; push rsi ; ret
0x00000200005b4593 : sub bl, dl ; push rsi ; ret 0x7403
0x00000200004d37f4 : sub bl, sil ; ret
0x00000200006ba1f8 : sub byte ptr [r11 + 0x234803e1], al ; ret 0xc148
0x000002000061fced : sub byte ptr [r11], al ; ret
0x0000020000410afa : sub byte ptr [r11], r15b ; ret
0x000002000061fd52 : sub byte ptr [r11], r8b ; ret
0x00000200004c51a4 : sub byte ptr [r15 + 6], sil ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000481fbc : sub byte ptr [r15], r9b ; xchg eax, esp ; ret
0x00000200006cff61 : sub byte ptr [r8 + 0x23], cl ; ret 0x3148
0x0000020000045788 : sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x000002000017e9da : sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x00000200005739f5 : sub byte ptr [r8 + 0x23], r9b ; ret 0x3b49
0x00000200000630be : sub byte ptr [r8 + 0x23], r9b ; ret 0xba48
0x0000020000481fb8 : sub byte ptr [r8 + 0x39], cl ; sub byte ptr [r15], r9b ; xchg eax, esp ; ret
0x00000200001339ea : sub byte ptr [r8 + 0x3b], r9b ; ret 0x850f
0x00000200000c788b : sub byte ptr [r8 + 0xf], cl ; ret
0x0000020000642f85 : sub byte ptr [r8 + 3], cl ; ret 0x348
0x0000020000175348 : sub byte ptr [r8 + 3], cl ; ret 0x349
0x00000200001d4dc8 : sub byte ptr [r8 - 0x2d], cl ; call 0x20048df7120
0x00000200001d4e43 : sub byte ptr [r8 - 0x2d], cl ; call 0x20048df719b
0x00000200000c9a68 : sub byte ptr [r8 - 0x3f], cl ; call 0x1ffc390dbb2
0x00000200000c9dcc : sub byte ptr [r8 - 0x3f], cl ; call 0x1ffc390df16
0x00000200000ca1e8 : sub byte ptr [r8 - 0x3f], cl ; call 0x1ffc390e332
0x00000200001ec7bb : sub byte ptr [r8 - 0x73], cl ; fmul dword ptr [r8 - 0x7f] ; ret 0x108
0x00000200000c95fa : sub byte ptr [r8 - 0x75], cl ; ret
0x0000020000621562 : sub byte ptr [r8 - 0x75], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000438688 : sub byte ptr [r8 - 0x7d], cl ; ret 0x4820
0x0000020000113df5 : sub byte ptr [r8 - 0x7d], r9b ; enter 0x48ff, 0x2b ; ret 0x348
0x0000020000147794 : sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200001eb8b1 : sub byte ptr [r8 - 0x7f], cl ; ret 0x108
0x00000200001ee5b1 : sub byte ptr [r8], r8b ; add al, byte ptr [rax] ; add cl, ch ; ret
0x0000020000042817 : sub byte ptr [r9 + 0x23], cl ; ret 0x3b49
0x0000020000138771 : sub byte ptr [r9 + 0x23], r9b ; ret
0x00000200004fcc87 : sub byte ptr [r9 + 0x3b], cl ; ret
0x000002000005519e : sub byte ptr [r9 + r9*4 + 0x4b], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x0000020000550729 : sub byte ptr [r9 + rcx*4], al ; ret
0x00000200004a4041 : sub byte ptr [r9 - 0x74bbcfa9], r9b ; ret 0x8b48
0x000002000004c1b3 : sub byte ptr [r9 - 0x75], r8b ; ret
0x000002000055ec60 : sub byte ptr [r9 - 0x7d], cl ; ret 0x8910
0x000002000016cf03 : sub byte ptr [rax + 0x11], cl ; add byte ptr [rax], al ; setne al ; ret
0x00000200003f03cb : sub byte ptr [rax + 0x22850f40], ch ; ret 0x20
0x00000200003f03ca : sub byte ptr [rax + 0x22850f40], r13b ; ret 0x20
0x000002000018d24d : sub byte ptr [rax + 0x23], cl ; ret 0x2348
0x00000200006cff62 : sub byte ptr [rax + 0x23], cl ; ret 0x3148
0x00000200000c387e : sub byte ptr [rax + 0x23], cl ; ret 0x3149
0x000002000002e4f3 : sub byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000045789 : sub byte ptr [rax + 0x23], cl ; ret 0x3b49
0x0000020000186c7f : sub byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000010fcc1 : sub byte ptr [rax + 0x23], cl ; ret 0xb48
0x00000200000630bf : sub byte ptr [rax + 0x23], cl ; ret 0xba48
0x000002000017e9db : sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x0000020000186c7e : sub byte ptr [rax + 0x23], r9b ; ret 0x8d48
0x000002000010fcc0 : sub byte ptr [rax + 0x23], r9b ; ret 0xb48
0x000002000064d8c3 : sub byte ptr [rax + 0x39], cl ; add dh, byte ptr [rbp - 0xf] ; ret
0x0000020000481fb9 : sub byte ptr [rax + 0x39], cl ; sub byte ptr [r15], r9b ; xchg eax, esp ; ret
0x000002000015e5fa : sub byte ptr [rax + 0x3b], cl ; ret
0x000002000062aa08 : sub byte ptr [rax + 0x3b], cl ; ret 0x1676
0x00000200001c1183 : sub byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200001339eb : sub byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000aecd7 : sub byte ptr [rax + 0x3b], cl ; sal byte ptr [rdx - 0xc], 1 ; mov rax, r8 ; ret
0x0000020000129ff0 : sub byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200005cfad4 : sub byte ptr [rax + 0x74020279], al ; or esi, esi ; ret 0xf02
0x00000200000c788c : sub byte ptr [rax + 0xf], cl ; ret
0x0000020000642f86 : sub byte ptr [rax + 3], cl ; ret 0x348
0x0000020000175349 : sub byte ptr [rax + 3], cl ; ret 0x349
0x00000200006c65d7 : sub byte ptr [rax + 3], cl ; ret 0x8948
0x00000200006e7800 : sub byte ptr [rax + 3], cl ; ret 0xff41
0x00000200004118b1 : sub byte ptr [rax + 3], cl ; retf ; mov rdx, rbx ; call 0x2000051db69
0x00000200003b8e1b : sub byte ptr [rax + 5], cl ; add byte ptr [rip + 0x3b480131], ch ; ret
0x00000200005441e5 : sub byte ptr [rax + rax], al ; add al, ch ; ret 0xadfd
0x000002000053ad24 : sub byte ptr [rax + rax], al ; add byte ptr [rbx], bh ; ret
0x00000200001d4dc9 : sub byte ptr [rax - 0x2d], cl ; call 0x20048df711f
0x00000200001d4e44 : sub byte ptr [rax - 0x2d], cl ; call 0x20048df719a
0x00000200006526b4 : sub byte ptr [rax - 0x3c], al ; inc dword ptr [rcx - 0xa] ; ret
0x000002000006d019 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc22a1831
0x0000020000046175 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc327a990
0x0000020000046174 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc327a991
0x00000200000e2426 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc3316d3e
0x00000200000c9a69 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc390dbb1
0x00000200000c9dcd : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc390df15
0x00000200000ca1e9 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc390e331
0x00000200006683c9 : sub byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000112b50 : sub byte ptr [rax - 0x73], cl ; add eax, 0xfffeb098 ; ret
0x00000200001ec7bc : sub byte ptr [rax - 0x73], cl ; fmul dword ptr [r8 - 0x7f] ; ret 0x108
0x00000200001b8cee : sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x0000020000151380 : sub byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200004fa1bd : sub byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x8908
0x000002000056518b : sub byte ptr [rax - 0x75], cl ; and byte ptr [r15], cl ; xchg eax, ebp ; ret
0x0000020000164d6f : sub byte ptr [rax - 0x75], cl ; jl 0x20000164da0 ; xor byte ptr [rcx - 0x75], al ; ret
0x0000020000621563 : sub byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000015e7ae : sub byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000059b9a : sub byte ptr [rax - 0x75], cl ; ret
0x00000200004a4718 : sub byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000421553 : sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000002fe3 : sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000003013 : sub byte ptr [rax - 0x75], cl ; ret 0x854d
0x000002000038b60b : sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000002a547 : sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000046cd57 : sub byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200000daeea : sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003869ed : sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000498c56 : sub byte ptr [rax - 0x75], cl ; retf ; call 0x200000b8e87
0x00000200001c84b2 : sub byte ptr [rax - 0x75], cl ; retf ; call 0x2000017473a
0x00000200004a8f74 : sub byte ptr [rax - 0x75], cl ; salc ; mov qword ptr [rsp + 0x20], r12 ; call rax
0x000002000057fac6 : sub byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rax
0x0000020000045785 : sub byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x000002000057fac5 : sub byte ptr [rax - 0x75], r9b ; salc ; mov rcx, rdi ; call rax
0x0000020000045784 : sub byte ptr [rax - 0x75], r9b ; sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x00000200006cfb61 : sub byte ptr [rax - 0x77], cl ; add edi, edi ; ret
0x000002000046448a : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200003c9966 : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x0000020000385bcf : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call rsi
0x0000020000644d9f : sub byte ptr [rax - 0x77], cl ; and al, r13b ; ret
0x0000020000151bca : sub byte ptr [rax - 0x77], cl ; je 0x20000151bfb ; and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200006cfb60 : sub byte ptr [rax - 0x77], r9b ; add edi, edi ; ret
0x000002000064c540 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x0000020000641d7f : sub byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; jne 0x20000641d79 ; xor al, al ; ret
0x0000020000113df6 : sub byte ptr [rax - 0x7d], cl ; enter 0x48ff, 0x2b ; ret 0x348
0x0000020000105478 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000200005e7a01 : sub byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000157f6d : sub byte ptr [rax - 0x7d], cl ; ret 0x4120
0x0000020000527dce : sub byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000015810a : sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200003cbd64 : sub byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000020000107f7f : sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000000e356 : sub byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200004f08c6 : sub byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001326a6 : sub byte ptr [rax - 0x7d], cl ; ret 0xeb28
0x00000200001eb8b2 : sub byte ptr [rax - 0x7f], cl ; ret 0x108
0x00000200001829d9 : sub byte ptr [rax - 1], cl ; ret
0x00000200001ee5b2 : sub byte ptr [rax], al ; add al, byte ptr [rax] ; add cl, ch ; ret
0x0000020000549c01 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r9d ; ret
0x0000020000006eec : sub byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x000002000011bc9b : sub byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000037eabb : sub byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004f48ee : sub byte ptr [rax], al ; je 0x200004f48ff ; add rax, 0x10 ; ret
0x000002000054ebde : sub byte ptr [rax], al ; jne 0x2000054ebf1 ; mov eax, 0xc00000f0 ; ret
0x00000200003ab585 : sub byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000016b54 : sub byte ptr [rax], al ; ret
0x0000020000063eef : sub byte ptr [rbp + 0x23], al ; ret
0x000002000008e589 : sub byte ptr [rbp + 0x48], al ; salc ; loopne 0x2000008e586 ; ret
0x000002000015f9ab : sub byte ptr [rbp + 0x5b], bl ; ret
0x0000020000091fda : sub byte ptr [rbp + 0x75], dh ; cdq ; jl 0x20000092009 ; ret 0x23e8
0x000002000036ee03 : sub byte ptr [rbp + rcx*4 + 0x24], al ; or ah, byte ptr [rsi - 0x7d] ; ret 0x4806
0x000002000047680b : sub byte ptr [rbp + rcx*4 + 0x42], al ; and al, ch ; cmp edx, ecx ; ret 0xc6ff
0x00000200003a68b6 : sub byte ptr [rbp + rcx*4 + 0x4d], cl ; ret
0x000002000019c6fc : sub byte ptr [rbp - 0x13], dh ; ret
0x000002000019c6fb : sub byte ptr [rbp - 0x13], sil ; ret
0x000002000036dca1 : sub byte ptr [rbp - 0x73], al ; add dword ptr [r8 + 0xb], ecx ; ret
0x00000200005934f5 : sub byte ptr [rbp - 0x73], al ; inc dword ptr [r9 + 3] ; ret 0x4489
0x00000200005f23ae : sub byte ptr [rbp - 0x75], al ; ret
0x0000020000636b53 : sub byte ptr [rbp - 0x75], al ; ret 0x44c7
0x000002000012b5a3 : sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000011f117 : sub byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000011f116 : sub byte ptr [rbp - 0x75], r9b ; ret 0x8b48
0x00000200004d37e0 : sub byte ptr [rbp], cl ; add rcx, r9 ; jmp rcx
0x00000200006ba1f9 : sub byte ptr [rbx + 0x234803e1], al ; ret 0xc148
0x000002000013ef87 : sub byte ptr [rbx + 0x5f282444], cl ; pop rsi ; ret
0x00000200006f5d28 : sub byte ptr [rbx + 0x8894108], cl ; ret
0x00000200001aa975 : sub byte ptr [rbx + rax + 0x79], al ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000058a1b6 : sub byte ptr [rbx + rcx*4 + 0x49], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x491c
0x00000200001400e8 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rbp ; ret
0x0000020000543699 : sub byte ptr [rbx - 0x3ef00f3d], cl ; adc byte ptr [r11], al ; ret
0x00000200004c1908 : sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x00000200000b202c : sub byte ptr [rbx - 0x7af0fb02], al ; ret
0x0000020000115aaf : sub byte ptr [rbx - 0xdfdbac], cl ; ret 0x5489
0x00000200004c123c : sub byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, r15d ; jmp 0x200003ed4c4
0x000002000061fcee : sub byte ptr [rbx], al ; ret
0x000002000055c15d : sub byte ptr [rbx], al ; ret 0x518d
0x00000200005e0402 : sub byte ptr [rbx], al ; ret 0x8948
0x000002000022cc5c : sub byte ptr [rbx], bh ; add spl, r15b ; ret 0x23
0x0000020000410afb : sub byte ptr [rbx], bh ; ret
0x0000020000150bad : sub byte ptr [rbx], dh ; leave ; call rax
0x00000200003a5667 : sub byte ptr [rbx], dh ; shl byte ptr [rsi - 0x77], 0x45 ; sub cl, byte ptr [rax - 0x75] ; ret 0x2548
0x0000020000138772 : sub byte ptr [rcx + 0x23], cl ; ret
0x00000200000447cb : sub byte ptr [rcx + 0x23], cl ; ret 0x3148
0x0000020000042818 : sub byte ptr [rcx + 0x23], cl ; ret 0x3b49
0x0000020000134537 : sub byte ptr [rcx + 0x3b], al ; ret 0x1272
0x000002000000e25c : sub byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx - 0x1d], cl ; xor eax, eax ; ret
0x000002000011e421 : sub byte ptr [rcx + 0x3b], cl ; ret
0x00000200005acb98 : sub byte ptr [rcx + 0x4120247c], cl ; call rsi
0x0000020000647009 : sub byte ptr [rcx + 0x4820244c], cl ; mov ecx, ebp ; call rax
0x000002000046c812 : sub byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x0000020000463c5f : sub byte ptr [rcx + 0x5e], al ; pop rbx ; ret
0x0000020000473785 : sub byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000157cca : sub byte ptr [rcx + 0x5e], al ; ret
0x00000200004385a4 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200006f3906 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c6c76 : sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200003d7b3a : sub byte ptr [rcx + 0x5f], al ; pop rdi ; ret
0x0000020000535ef4 : sub byte ptr [rcx + 0xb45584a], cl ; ret 0x8944
0x0000020000047f2b : sub byte ptr [rcx + 0xf], al ; mov bh, 0xc ; ret 0xc1ff
0x000002000059352a : sub byte ptr [rcx + 3], al ; ret 0x4489
0x000002000005519f : sub byte ptr [rcx + rcx*4 + 0x4b], cl ; and byte ptr [rax - 0x7d], cl ; ret
0x00000200005d74e7 : sub byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call r10
0x0000020000497249 : sub byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call rax
0x000002000046d2e6 : sub byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x20 ; call r10
0x000002000010411e : sub byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x20 ; call 0x200003e0408
0x00000200005d75af : sub byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; call rax
0x000002000055072a : sub byte ptr [rcx + rcx*4], al ; ret
0x00000200003f8563 : sub byte ptr [rcx - 0x17dfdb8c], cl ; ret
0x000002000015db54 : sub byte ptr [rcx - 0x2d7af7af], cl ; jne 0x2000015db52 ; ret
0x000002000003717c : sub byte ptr [rcx - 0x3f], cl ; jmp 0x200000371c1
0x000002000017f656 : sub byte ptr [rcx - 0x3f], cl ; jmp 0x2000017f69b
0x00000200006c0094 : sub byte ptr [rcx - 0x65], dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a4042 : sub byte ptr [rcx - 0x74bbcfa9], cl ; ret 0x8b48
0x00000200004d8450 : sub byte ptr [rcx - 0x75], al ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004c1b4 : sub byte ptr [rcx - 0x75], al ; ret
0x00000200003f40a2 : sub byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000069f152 : sub byte ptr [rcx - 0x75], al ; ret 0x8341
0x0000020000644d55 : sub byte ptr [rcx - 0x75], al ; xlatb ; call rdi
0x00000200000041b0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000041fe ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000016885 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000168ec ; ret
0x000002000001ae0f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001ae78 ; ret
0x000002000001b6fb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001b747 ; pop rsi ; ret
0x00000200000362aa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000036311 ; ret
0x000002000005c85a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005c8a6 ; pop rsi ; ret
0x000002000005d3aa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005d413 ; ret
0x0000020000062c9d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000062d04 ; ret
0x0000020000064ad4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000064b20 ; pop rsi ; ret
0x00000200000dcd36 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000dcd9f ; ret
0x00000200001043ae : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001043fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000106b38 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106b84 ; pop rdi ; ret
0x0000020000107b1c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000107b68 ; pop rsi ; ret
0x000002000010c12c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010c195 ; ret
0x0000020000116f10 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000116f5c ; pop rsi ; ret
0x000002000011b889 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011b8f0 ; ret
0x0000020000126b60 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000126bac ; pop rsi ; ret
0x000002000012aca9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012acf5 ; pop rdi ; ret
0x000002000012bd7c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012bde3 ; ret
0x0000020000130afe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000130b4c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013e5c1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013e628 ; ret
0x0000020000147595 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001475e1 ; pop rsi ; ret
0x0000020000150d77 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000150dde ; ret
0x00000200001530b4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000015311d ; ret
0x000002000016b446 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000016b494 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001700cf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000170136 ; ret
0x0000020000171f75 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000171fdc ; ret
0x0000020000176345 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001763ac ; ret
0x000002000017bcb0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017bd19 ; ret
0x000002000017f6d2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017f73b ; ret
0x000002000017f8f2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017f95b ; ret
0x000002000018014b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001801b4 ; ret
0x00000200001890b0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000189117 ; ret
0x000002000018f36c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000018f3d5 ; ret
0x0000020000190b61 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000190bad ; pop rsi ; ret
0x0000020000194fb8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000019501f ; ret
0x00000200001956b2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000195719 ; ret
0x00000200001957fb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000195862 ; ret
0x00000200001971b8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000019721f ; ret
0x0000020000197ddf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000197e48 ; ret
0x00000200001a37ef : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a383b ; pop rsi ; ret
0x00000200001b401b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b4084 ; ret
0x00000200001b44e1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b454a ; ret
0x00000200001b5dae : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b5e17 ; ret
0x00000200001b9207 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b926e ; ret
0x00000200001bf244 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bf292 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001c31ff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c3268 ; ret
0x0000020000362d71 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000362dbd ; pop rsi ; ret
0x000002000036632e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000366395 ; ret
0x000002000036f537 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036f59e ; ret
0x000002000037810c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000378158 ; pop rsi ; ret
0x000002000037f6ec : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037f738 ; pop rsi ; ret
0x0000020000383e43 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000383e8f ; pop rsi ; ret
0x0000020000386750 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003867b7 ; ret
0x0000020000386958 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003869bf ; ret
0x00000200003945e3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039464c ; ret
0x000002000039a00f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039a05b ; pop rsi ; ret
0x000002000039aa86 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039aaef ; ret
0x000002000039bc3d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039bca4 ; ret
0x00000200003a8caf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a8d16 ; ret
0x00000200003ad4a6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ad50d ; ret
0x00000200003b5e35 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b5e81 ; pop rsi ; ret
0x00000200003bd822 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003bd88b ; ret
0x00000200003c2864 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c28cd ; ret
0x00000200003c8542 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c858e ; pop rdi ; ret
0x00000200003ca2c1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ca32a ; ret
0x00000200003d6c7a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d6cc6 ; pop rsi ; ret
0x00000200003d9fcc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003da033 ; ret
0x00000200003dc36f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dc3be ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e7016 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e7062 ; pop rdi ; ret
0x00000200003fdbd3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fdc22 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004001dd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040022c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004045c3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000404612 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004085bc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000408608 ; pop rsi ; ret
0x0000020000408d27 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000408d75 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000040d4a1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040d4ed ; pop rdi ; ret
0x0000020000413348 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000413394 ; pop rdi ; ret
0x00000200004163da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000416441 ; ret
0x000002000041874e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041879a ; pop rsi ; ret
0x000002000041ebb7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041ec06 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004427fa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000442846 ; pop rdi ; ret
0x000002000045b733 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045b77f ; pop rdi ; ret
0x000002000046d0d6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d122 ; pop rdi ; ret
0x00000200004729a2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004729ee ; pop rsi ; ret
0x000002000047700b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000477057 ; pop rsi ; ret
0x000002000047950b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000479572 ; ret
0x0000020000485559 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004855a5 ; pop rsi ; ret
0x0000020000488b74 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000488bdb ; ret
0x000002000048c56a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048c5d3 ; ret
0x0000020000498812 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000498879 ; ret
0x000002000049a727 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049a78e ; ret
0x000002000049c53c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049c5a3 ; ret
0x000002000049e3e3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049e44a ; ret
0x00000200004ab015 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab07e ; ret
0x00000200004ab339 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ab3a0 ; ret
0x00000200004adb11 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004adb7a ; ret
0x00000200004aebf3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aec3f ; pop rdi ; ret
0x00000200004b0a76 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b0ac4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b342f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b3496 ; ret
0x00000200004b3a07 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b3a53 ; pop rsi ; ret
0x00000200004b46b4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b471b ; ret
0x00000200004b55cc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b5633 ; ret
0x00000200004bbe3b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bbe87 ; pop rdi ; ret
0x00000200004c2ba7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c2c10 ; ret
0x00000200004d158d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d15dc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004dd1d9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dd225 ; pop rdi ; ret
0x00000200004e7cbb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e7d22 ; ret
0x00000200004e87e1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e8848 ; ret
0x00000200004ea1b9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ea205 ; pop rsi ; ret
0x00000200004ea451 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ea4b8 ; ret
0x00000200004eec62 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004eecc9 ; ret
0x00000200004f09ba : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f0a21 ; ret
0x00000200004f53ff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f5466 ; ret
0x00000200004f57d2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f5839 ; ret
0x00000200004f9044 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f90ab ; ret
0x00000200004fe8b2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fe8fe ; pop rsi ; ret
0x000002000050072d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000500794 ; ret
0x000002000050096f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005009d6 ; ret
0x0000020000501426 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050148f ; ret
0x00000200005019f9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000501a62 ; ret
0x0000020000506d22 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000506d8b ; ret
0x0000020000508103 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050816c ; ret
0x000002000050a0df : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050a12b ; pop rdi ; ret
0x000002000050d245 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050d293 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000517e44 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000517eab ; ret
0x0000020000518af1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000518b3f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005194e8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051954f ; ret
0x000002000051cfb8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051d01f ; ret
0x0000020000520ba6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000520c0f ; ret
0x0000020000521897 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005218e5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000525c18 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000525c66 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000534f53 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000534fba ; ret
0x000002000053c028 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053c091 ; ret
0x000002000054585d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005458c4 ; ret
0x000002000054adc1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054ae28 ; ret
0x000002000054d426 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054d48f ; ret
0x000002000054d69a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054d6e6 ; pop rdi ; ret
0x000002000054f978 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054f9df ; ret
0x0000020000552ef6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000552f5d ; ret
0x000002000055ca2e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055ca95 ; ret
0x0000020000563e0c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000563e73 ; ret
0x0000020000564a1d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000564a84 ; ret
0x0000020000569c16 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000569c7f ; ret
0x0000020000580117 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000058017e ; ret
0x000002000058031a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000580381 ; ret
0x0000020000581881 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005818e8 ; ret
0x00000200005846e7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000584750 ; ret
0x0000020000586463 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005864b2 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000586bb3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000586bff ; pop rsi ; ret
0x00000200005883d7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000058843e ; ret
0x00000200005909f3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000590a5a ; ret
0x0000020000592bf6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000592c42 ; pop rsi ; ret
0x0000020000599c98 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000599ce6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000059e61c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059e66a ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000059e94e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059e9b5 ; ret
0x00000200005a0b93 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a0be1 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200005a52e1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a534a ; ret
0x00000200005a6418 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a647f ; ret
0x00000200005a8c13 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a8c7a ; ret
0x00000200005aa6d6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aa73d ; ret
0x00000200005aa8c3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aa911 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005aeb83 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aebd1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005aece0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005aed47 ; ret
0x00000200005b2ab2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b2b1b ; ret
0x00000200005b3e92 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b3efb ; ret
0x00000200005b759b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b75ea ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005b9c65 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b9ccc ; ret
0x00000200005bb265 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bb2cc ; ret
0x00000200005bbdd7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bbe3e ; ret
0x00000200005bd84c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bd89a ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005bf33d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005bf38b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c1546 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c15ad ; ret
0x00000200005c22e2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c2330 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005c6bde : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c6c45 ; ret
0x00000200005c6cae : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c6d15 ; ret
0x00000200005c6d85 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c6dd1 ; pop rsi ; ret
0x00000200005c6e8e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c6eda ; pop rsi ; ret
0x00000200005c710a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c7156 ; pop rsi ; ret
0x00000200005d034c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d0398 ; pop rdi ; ret
0x0000020000618458 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006184bf ; ret
0x00000200006342f9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634360 ; ret
0x0000020000634c7f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634ccb ; pop rsi ; ret
0x000002000063ef8f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063eff8 ; ret
0x0000020000640d79 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000640de2 ; ret
0x000002000064b8a9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b912 ; ret
0x000002000064d4a5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d50e ; ret
0x000002000064d745 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d7ae ; ret
0x000002000064fcab : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064fd14 ; ret
0x00000200006561b6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065621f ; ret
0x000002000065659a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000656603 ; ret
0x00000200006592e8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000659336 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006bbd57 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bbdbe ; ret
0x00000200006be498 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006be4ff ; ret
0x00000200006c262a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c2676 ; pop rsi ; ret
0x00000200006c331f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c3386 ; ret
0x00000200006c3629 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c3690 ; ret
0x00000200006eb5cc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006eb633 ; ret
0x00000200006f5d1c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f5d83 ; ret
0x00000200006fe416 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006fe464 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000704f9c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000705003 ; ret
0x000002000015e569 : sub byte ptr [rcx - 0x77], al ; add al, 0x8a ; inc dword ptr [r10 + 0xc] ; ret
0x000002000015e5a0 : sub byte ptr [rcx - 0x77], al ; add al, 0x8a ; inc dword ptr [r10 + 8] ; ret
0x00000200001316a0 : sub byte ptr [rcx - 0x7b], cl ; ret
0x000002000003e0f2 : sub byte ptr [rcx - 0x7d], al ; ret
0x000002000057caa4 : sub byte ptr [rcx - 0x7d], cl ; ret 0x4440
0x0000020000613f65 : sub byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x000002000055ec61 : sub byte ptr [rcx - 0x7d], cl ; ret 0x8910
0x00000200004d2e3c : sub byte ptr [rcx - 0x7f], cl ; ret
0x00000200005ba50d : sub byte ptr [rcx - 0xa], al ; ret
0x0000020000399153 : sub byte ptr [rcx - 1], al ; ret
0x000002000007716e : sub byte ptr [rcx - 1], al ; ret 0x8944
0x00000200003d461c : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x00000200004853c1 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; or ebp, ecx ; ret 0xfffe
0x00000200000d9c67 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x0000020000176f04 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200006c6458 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200000ee254 : sub byte ptr [rcx], bl ; add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x200000ee225
0x000002000047a6af : sub byte ptr [rcx], cl ; xchg eax, ecx ; nop ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7447
0x00000200000e02b0 : sub byte ptr [rdi + 0x5b], bl ; ret
0x00000200000affc8 : sub byte ptr [rdi + 0x5e], bl ; ret
0x00000200004c51a5 : sub byte ptr [rdi + 6], dh ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002b98c : sub byte ptr [rdi - 0x3fccffe5], bl ; ret
0x0000020000481fbd : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000665438 : sub byte ptr [rdx + rax*8 + 0x7a0589ff], ch ; lodsb al, byte ptr [rsi] ; ret 0x8bff
0x0000020000420b5d : sub byte ptr [rdx - 0x3b7cb73d], cl ; pop rbx ; ret
0x000002000005b309 : sub byte ptr [rdx], al ; je 0x2000005b31b ; bts qword ptr [rcx], 0xd ; ret
0x00000200004c8b24 : sub byte ptr [rdx], al ; ret
0x00000200001c4511 : sub byte ptr [rdx], bh ; ret
0x000002000008e68e : sub byte ptr [rip - 0x659e84ce], ah ; push rbx ; ret
0x00000200006f7107 : sub byte ptr [rsi + 0x2b], ah ; ret
0x0000020000468071 : sub byte ptr [rsi + 0x5d], bl ; ret
0x00000200004f1e58 : sub byte ptr [rsi - 0x74b80000], al ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200004de1b3 : sub byte ptr [rsi - 0x77], ah ; jl 0x200004de1e3 ; and al, ch ; ret 0xe86b
0x00000200005dd87a : sub byte ptr [rsi], al ; add byte ptr [rax], al ; call 0x200000b9b06
0x00000200004a1348 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; call 0x200000c85e7
0x00000200006bd09c : sub byte ptr [rsp + 0x70], dh ; mov rsp, r11 ; pop rbp ; ret
0x000002000019c588 : sub byte ptr [rsp + rax + 0x48], dh ; mov dword ptr [rcx + 0x60], eax ; ret
0x00000200003c0b9e : sub ch, byte ptr [rax + rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000530bc2 : sub ch, byte ptr [rbp + 0x558bffea] ; ret
0x00000200005cc8a2 : sub ch, byte ptr [rbp - 0x56] ; inc dword ptr [rbp - 0xce8b40] ; ret
0x0000020000507a24 : sub ch, dh ; ret
0x00000200001f10fb : sub cl, 0x30 ; ret 0xfff1
0x00000200001e4fbc : sub cl, 0x9b ; xor eax, 0x8b41fff5 ; ret 0xc933
0x00000200005e7c27 : sub cl, 0xc8 ; ret
0x00000200000c10bf : sub cl, 0xda ; idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c4358 : sub cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x00000200000a920a : sub cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200003a566d : sub cl, byte ptr [rax - 0x75] ; ret 0x2548
0x000002000058a395 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4d02
0x00000200003a994e : sub cl, byte ptr [rax] ; mov eax, r9d ; ret
0x00000200006146b1 : sub cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x0000020000642dc2 : sub cl, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000ad0a5 : sub cl, ch ; jmp rax
0x000002000042c3d2 : sub cl, ch ; ret 0x741
0x0000020000596938 : sub dh, al ; add byte ptr [rax], al ; ret
0x000002000059691a : sub dh, al ; add byte ptr [rcx], al ; ret
0x00000200004c9c82 : sub dh, byte ptr [rbp - 0x43] ; inc dword ptr [rcx - 0x50] ; add eax, ebp ; ret 0xf9b9
0x00000200004a8392 : sub dh, byte ptr [rdi] ; ret
0x000002000012fa76 : sub dh, byte ptr [rsi + 0x22] ; add byte ptr [rcx + 0x23], al ; ret
0x000002000050468e : sub dh, cl ; push rdi ; ret
0x0000020000101e36 : sub dh, dh ; ret
0x00000200003a129a : sub dh, dh ; ret 0x7501
0x00000200001b1f62 : sub dh, dh ; ret 0x7502
0x000002000039c3e6 : sub dh, dh ; ret 0xf02
0x0000020000003b2e : sub dh, dh ; ret 0xf03
0x000002000039bfe8 : sub dh, dh ; rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x00000200006eb304 : sub dh, dl ; xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200005cb162 : sub dl, bh ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x0000020000006a26 : sub dl, byte ptr [rdx + 6] ; add bl, ch ; ret
0x00000200001d7dc5 : sub dword ptr [rax + 0x3b], ecx ; ret 0xf48
0x00000200004a0cbe : sub dword ptr [rax + 0x58c818b], edx ; add byte ptr [rax], al ; ret
0x00000200001d8292 : sub dword ptr [rax + 1], 0x3480000 ; ret 0x3a44
0x000002000009495a : sub dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add ah, cl ; ret
0x00000200006c639e : sub dword ptr [rax + rax], eax ; add rsp, 0x38 ; ret
0x0000020000021e39 : sub dword ptr [rax - 0x73], ecx ; add eax, 0xdc12f ; ret
0x0000020000017c4a : sub dword ptr [rax - 0x743e74b4], edx ; ret 0x8d48
0x00000200001da732 : sub dword ptr [rax - 0x75], ecx ; ret
0x000002000010ddff : sub dword ptr [rax - 0x77], ecx ; pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200005e0164 : sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200005502ce : sub dword ptr [rax - 0xd], 0x34c0054 ; leave ; jmp r9
0x00000200000737f9 : sub dword ptr [rax - 1], ecx ; ret 0xe484
0x000002000017121a : sub dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 - 0x3d], cl ; call rdi
0x0000020000171752 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000038dcc2 : sub dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000499921 : sub dword ptr [rax], eax ; call 0x200000b9f45
0x000002000006bc39 : sub dword ptr [rax], eax ; jb 0x2000006bc46 ; mov al, 1 ; ret
0x00000200000a8190 : sub dword ptr [rax], eax ; jb 0x200000a8199 ; ret
0x000002000011d48c : sub dword ptr [rax], eax ; jb 0x2000011d495 ; ret
0x000002000039bd10 : sub dword ptr [rax], eax ; jb 0x2000039bd19 ; ret
0x00000200004aeefc : sub dword ptr [rax], eax ; jb 0x200004aef05 ; ret
0x00000200004978e8 : sub dword ptr [rax], eax ; mov al, dl ; ret
0x00000200000b8b54 : sub dword ptr [rax], eax ; ret
0x0000020000082d18 : sub dword ptr [rbp - 0x6e], esi ; ret
0x000002000015f867 : sub dword ptr [rbp - 1], esp ; add al, 0x25 ; push rbp ; add byte ptr [rax], al ; ret
0x00000200003898e5 : sub dword ptr [rbx], ecx ; add byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret
0x000002000008e05b : sub dword ptr [rbx], ecx ; push 0xb8 ; ret 0x3ecb
0x00000200000d312d : sub dword ptr [rbx], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b185b : sub dword ptr [rcx - 0x75], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xf18
0x00000200001af708 : sub dword ptr [rcx - 0x75], eax ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000200001554ce : sub dword ptr [rcx - 1], ecx ; ret
0x00000200004da1b3 : sub dword ptr [rdi + 0x40], 4 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004d52de : sub dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8149
0x0000020000534899 : sub dword ptr [rdi + rdi*8 + 0x28c48348], esi ; ret
0x00000200005bb53a : sub dword ptr [rdx - 0x10], esi ; or eax, 0xffffffff ; ret
0x00000200000f9ef1 : sub dword ptr [rip + 0x1d20c9], eax ; ret
0x000002000005af9e : sub dword ptr [rip + 0x244104], edx ; ret
0x000002000011c193 : sub dword ptr [rip + 0x25834800], ecx ; ret 0x16d8
0x00000200001360fe : sub dword ptr [rip - 0x74b70200], edx ; ret
0x00000200001f263a : sub dword ptr [rsi + 0xfffeb96], -0x49 ; ret 0x8b4c
0x00000200000808b6 : sub dword ptr [rsi], eax ; fcomp dword ptr [r10] ; ret 0xa54d
0x00000200000e8c1f : sub dword ptr [rsi], ecx ; add byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x0000020000054cb9 : sub dword ptr [rsp + rax], 0x1240000 ; ret
0x00000200001360fd : sub dword ptr cs:[rip - 0x74b70200], edx ; ret
0x00000200001f0dcd : sub eax, 0x10 ; dec eax ; jne 0x200001f0dcb ; ret
0x000002000019c008 : sub eax, 0x16 ; ret
0x000002000049494e : sub eax, 0x1b2ffe4 ; call 0x200000b9888
0x0000020000425e63 : sub eax, 0x20 ; ret
0x0000020000261879 : sub eax, 0x220023 ; add byte ptr [rax], al ; ret 0x42
0x00000200006c9521 : sub eax, 0x2349ffc0 ; ret
0x000002000009230f : sub eax, 0x337635d ; ret 0xcdf4
0x00000200003b8e1f : sub eax, 0x3b480131 ; ret
0x0000020000629927 : sub eax, 0x41ffc621 ; call rdx
0x00000200003c9f9f : sub eax, 0x41fff8d1 ; call rcx
0x000002000042b534 : sub eax, 0x441d8d48 ; ret 0xffe6
0x000002000063e74f : sub eax, 0x48000099 ; add esp, 0x28 ; ret
0x000002000064900f : sub eax, 0x4800046a ; add esp, 0x58 ; ret
0x0000020000147e6f : sub eax, 0x48ffed45 ; add esp, 0x68 ; ret
0x0000020000513ceb : sub eax, 0x48fff698 ; add esp, 0x58 ; ret
0x00000200004f7c9f : sub eax, 0x48fffb94 ; add esp, 0x28 ; ret
0x000002000013b321 : sub eax, 0x52b60f41 ; add dh, dh ; ret 0x7501
0x00000200004d3e07 : sub eax, 0x55e8ffe1 ; ret
0x000002000013c1e8 : sub eax, 0x5b8 ; rol bl, 0x48 ; inc edx ; jmp 0x2000013c1c8
0x0000020000573a82 : sub eax, 0x67394466 ; sbb byte ptr [rsi - 0xa], dh ; ret 0x7520
0x0000020000494986 : sub eax, 0x72e8ffe4 ; push rcx ; ret 0x65ff
0x000002000013a507 : sub eax, 0x8348c6ff ; ret
0x00000200004a3d5a : sub eax, 0x850fffe4 ; ret
0x0000020000174a99 : sub eax, 0x85440000 ; ret 0x2274
0x0000020000072f8b : sub eax, 0x8b410000 ; ret 0xc22b
0x0000020000007ace : sub eax, 0x8b48001e ; ret 0xc148
0x00000200005fa1ac : sub eax, 0x8b48ffe6 ; ret
0x000002000065bc69 : sub eax, 0x8b48ffff ; ret
0x000002000013d90d : sub eax, 0x8b4c000c ; ret
0x0000020000153f72 : sub eax, 0x8b4dd8f7 ; ret 0xd233
0x000002000014acfd : sub eax, 0x8b4dfff4 ; ret
0x000002000055b3af : sub eax, 0x8bffb21d ; ret
0x00000200005563af : sub eax, 0x8bffb26d ; ret
0x00000200005ec7df : sub eax, 0x8bffc828 ; ret
0x000002000070923f : sub eax, 0x8bffd3d1 ; ret
0x000002000048906b : sub eax, 0x8bffef90 ; ret
0x00000200006bf969 : sub eax, 0x8bffffff ; ret
0x0000020000386a1f : sub eax, 0x90ffd1cf ; add rsp, 0x28 ; ret
0x000002000011fefa : sub eax, 0xb60f000d ; ret
0x00000200006ff78c : sub eax, 0xc3f6ffb9 ; add dh, byte ptr [rbp + rcx - 0xa] ; ret
0x00000200004c8b1f : sub eax, 0xe8ffdc6d ; sub byte ptr [rdx], al ; ret
0x000002000049976f : sub eax, 0xe8ffe322 ; mov byte ptr [rbx], al ; ret 0x49ff
0x0000020000373499 : sub eax, 0xe990ffdc ; ret
0x00000200000a3f9d : sub eax, 0xf000001 ; mov dh, 0x97 ; ret
0x000002000001e20e : sub eax, 0xf45fffe ; mov dh, 0x9c ; or dl, al ; ret 8
0x0000020000590e49 : sub eax, 0xf6000001 ; ret 0xf20
0x00000200004d4d93 : sub eax, 0xf6000002 ; ret 0xf04
0x00000200001f42c5 : sub eax, 0xf6410016 ; ret
0x0000020000604df0 : sub eax, 0xf6ffed71 ; ret
0x0000020000168953 : sub eax, 0xf8834900 ; jl 0x200001688e5 ; ret
0x0000020000074d66 : sub eax, 0xfb11ff00 ; ret
0x0000020000038bd0 : sub eax, 2 ; ret
0x000002000015682d : sub eax, 7 ; movzx eax, r8w ; ret
0x0000020000083ef3 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret
0x000002000014ec0d : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; mov ecx, eax ; call 0x2000014ae4c
0x00000200000a44a2 : sub eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; outsb dx, byte ptr [rsi] ; sbb byte ptr [rcx - 0x75], al ; ret
0x00000200000283ef : sub eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000a7359 : sub eax, dword ptr [rax] ; cmp rdx, rax ; ja 0x200000a73b0 ; ret
0x00000200000169eb : sub eax, dword ptr [rax] ; mov qword ptr [rip + 0x2b6024], rcx ; ret
0x00000200000169f2 : sub eax, dword ptr [rax] ; ret
0x00000200001a1b28 : sub eax, dword ptr [rbp + 0x15] ; add byte ptr [rcx], al ; ret
0x0000020000590989 : sub eax, dword ptr [rbp - 0x21] ; sar rax, 1 ; jmp 0x200005909cb
0x00000200001436a1 : sub eax, dword ptr [rbp - 0x73] ; dec dword ptr [r8 - 0x3f] ; call qword ptr [rax]
0x0000020000530a42 : sub eax, dword ptr [rbx + rcx*4 + 0x75] ; ret
0x00000200006e4eb3 : sub eax, dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000186a95 : sub eax, dword ptr [rcx + 0x3a] ; ret 0x2176
0x00000200004e828d : sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x00000200004e8227 : sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x0000020000550a6f : sub eax, dword ptr [rcx + 8] ; ret
0x00000200003becad : sub eax, dword ptr [rcx - 0x75] ; ret 0x8b49
0x0000020000062874 : sub eax, dword ptr [rcx - 2] ; ret 0x8b41
0x00000200000921ac : sub eax, dword ptr [rdi - 0x67] ; ret
0x00000200001a361d : sub eax, dword ptr [rdx + 0x28] ; mov eax, r8d ; ret
0x000002000041dd49 : sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000041dd4a : sub eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000020000085ddb : sub eax, dword ptr [rdx + rbp*2] ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x000002000001dc5c : sub eax, dword ptr [rip + 0x2733c6] ; mov qword ptr [rdx], rax ; ret
0x0000020000204f7a : sub eax, dword ptr [rsi] ; pcmpgtb mm1, qword ptr [rax + rax] ; sysenter
0x000002000058805d : sub eax, eax ; mov qword ptr [rcx + 0x48], rax ; ret
0x000002000041da80 : sub eax, eax ; ret
0x000002000015dcd4 : sub eax, ecx ; cmp r8, rdx ; sete al ; ret
0x000002000003af2f : sub eax, ecx ; mov eax, r8d ; ret
0x00000200001592ed : sub eax, ecx ; mov qword ptr [rdx], r8 ; ret
0x00000200000a3772 : sub eax, ecx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x0000020000388f93 : sub eax, ecx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x0000020000017068 : sub eax, ecx ; ret
0x0000020000154870 : sub eax, ecx ; sar rax, 1 ; dec rax ; ret
0x000002000014a3af : sub eax, ecx ; sar rax, 1 ; ret
0x000002000041d411 : sub eax, edx ; jmp 0x2000041d419
0x00000200005c6a97 : sub eax, edx ; jmp 0x200005c6aa1
0x000002000000d3c1 : sub eax, edx ; mov eax, r8d ; ret
0x000002000042180f : sub eax, edx ; movzx eax, r8w ; ret
0x000002000011e13b : sub eax, edx ; ret
0x000002000041dd25 : sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x000002000041d410 : sub eax, r10d ; jmp 0x2000041d41a
0x000002000041da7f : sub eax, r8d ; ret
0x0000020000140e03 : sub eax, r9d ; ret
0x0000020000160511 : sub ebp, -1 ; add rsp, 0x38 ; ret
0x00000200000f9d59 : sub ebp, -5 ; inc dword ptr [rcx - 0x75] ; ret 0x8b48
0x00000200000852a9 : sub ebp, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 0x5a ; ret
0x0000020000378d8d : sub ebx, 0xc18b48e7 ; ret
0x00000200001db4f7 : sub ebx, dword ptr [rdi] ; jae 0x200001db50e ; mov rcx, rbx ; call 0x20000067809
0x00000200001db5d3 : sub ebx, dword ptr [rdi] ; jae 0x200001db5ea ; mov rcx, rbx ; call 0x20000067809
0x000002000007b2c8 : sub ebx, eax ; jmp r11
0x0000020000199c88 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005210f : sub ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000143be9 : sub ebx, ebx ; adc eax, dword ptr [rax] ; je 0x20000143c0a ; call rcx
0x0000020000632d13 : sub ebx, edx ; ret
0x00000200005ba6fd : sub ecx, 0x10 ; jns 0x200005ba6e5 ; ret
0x00000200005ba73d : sub ecx, 0x10 ; jns 0x200005ba725 ; ret
0x000002000010a95b : sub ecx, 0x20 ; jne 0x2000010a96c ; lea eax, dword ptr [rcx + 6] ; ret
0x000002000050468c : sub ecx, 0x2a ; int1 ; push rdi ; ret
0x000002000010a937 : sub ecx, 0xf ; jne 0x2000010a948 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000019c094 : sub ecx, 2 ; dec r8d ; jns 0x2000019c095 ; mov eax, edx ; ret
0x000002000015b615 : sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200001e740a : sub ecx, dword ptr [rax - 0x75] ; ret
0x00000200003b5b1d : sub ecx, dword ptr [rax - 0x7d] ; and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x00000200000c7060 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001443cc : sub ecx, dword ptr [rcx + 0x3b] ; ret
0x000002000010176e : sub ecx, dword ptr [rcx - 0x75] ; ret 0xf748
0x000002000036b181 : sub ecx, eax ; call 0x2000014b889
0x00000200000b676a : sub ecx, eax ; cmp rax, rdx ; jae 0x200000b6795 ; ret
0x00000200004ab03d : sub ecx, eax ; cmp rcx, rdx ; seta al ; ret
0x00000200001521cd : sub ecx, eax ; jmp r9
0x000002000003e94c : sub ecx, eax ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006c021 : sub ecx, eax ; mov eax, r9d ; ret
0x00000200006404b8 : sub ecx, eax ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000703d4f : sub ecx, eax ; mov rax, r9 ; ret
0x000002000041b46d : sub ecx, eax ; mov rax, rcx ; ret
0x00000200000322a7 : sub ecx, ebp ; ret
0x0000020000478151 : sub ecx, ebp ; ret 0x90ff
0x00000200005205d4 : sub ecx, ebx ; call 0x200001500c5
0x000002000050b7d2 : sub ecx, ebx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000041db8d : sub ecx, ecx ; imul eax, r9d ; sub eax, r8d ; ret
0x000002000000a075 : sub ecx, ecx ; mov eax, r9d ; ret
0x000002000036819e : sub ecx, edx ; add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x00000200000ee859 : sub ecx, edx ; lea rax, qword ptr [r8 + rcx*8] ; ret
0x0000020000643654 : sub ecx, edx ; mov dword ptr [r8], ecx ; ret
0x0000020000643628 : sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x0000020000006703 : sub ecx, edx ; mov eax, ecx ; add rsp, 0x38 ; ret
0x00000200004adbd4 : sub ecx, edx ; mov eax, ecx ; ret
0x000002000001e25c : sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x000002000061398e : sub ecx, edx ; xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x00000200000272c8 : sub ecx, edx ; xor eax, eax ; mov dword ptr [r8], ecx ; ret
0x000002000012c1c6 : sub ecx, edx ; xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x0000020000643653 : sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x000002000061398d : sub ecx, r10d ; xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x000002000050b7d1 : sub ecx, r11d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200005a5041 : sub edi, dword ptr [rax - 0x7cb7000a] ; ret
0x00000200000a375a : sub edi, ecx ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x000002000008ef93 : sub edi, edi ; mov ecx, 0xcac82fee ; jne 0x2000008ef31 ; ret 0x5e78
0x000002000017d165 : sub edi, edi ; ret
0x000002000039be64 : sub edi, edi ; ret 0x8348
0x000002000063f5e1 : sub edi, edx ; ret 0xebff
0x00000200001e86ce : sub edi, esp ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret 0x23e9
0x00000200000a38e8 : sub edx, 0x40 ; ja 0x200000a38e5 ; ret 0
0x0000020000594352 : sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000594390
0x00000200000b77dd : sub edx, dword ptr [rbx] ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200003f2e81 : sub edx, dword ptr [rcx] ; ret
0x0000020000091085 : sub edx, dword ptr [rdi + 0x2a] ; mov r11d, r10d ; ret
0x000002000010fe41 : sub edx, dword ptr [rdi + 0xd] ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200006f3ba9 : sub edx, eax ; jne 0x200006f3b9d ; ret
0x00000200001bf60f : sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200000bde91 : sub edx, ecx ; lock cmpxchg qword ptr [r8], rdx ; jne 0x200000bde82 ; ret
0x0000020000411ed2 : sub edx, ecx ; mov eax, r10d ; ret
0x00000200000b6356 : sub edx, ecx ; mov qword ptr [rdx], rcx ; ret
0x00000200001ef8f0 : sub edx, edi ; call qword ptr [rax - 0xc3d7d17]
0x0000020000173dbe : sub edx, edi ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000042f516 : sub edx, esi ; call 0x20000063809
0x0000020000126584 : sub edx, esi ; call r12
0x0000020000662792 : sub esi, dword ptr [rsi + 0xd8b48ff] ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; ret 0x3ff
0x0000020000091851 : sub esi, eax ; pop rsi ; jmp 0x2000009186c
0x000002000008dde9 : sub esi, eax ; ret
0x0000020000189b46 : sub esi, esi ; ret
0x00000200006a1060 : sub esp, 0x28 ; call rax
0x000002000008e28c : sub esp, dword ptr [rdi + rax] ; sahf ; ret
0x00000200003923a8 : sub esp, dword ptr [rdx] ; add ah, cl ; mov eax, dword ptr [r10 + rcx*4] ; jmp 0x2000039237e
0x00000200005fa2a7 : sub esp, esi ; push rsi ; ret
0x00000200000d312c : sub qword ptr [rbx], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f9ef0 : sub qword ptr [rip + 0x1d20c9], rax ; ret
0x000002000005af9d : sub qword ptr [rip + 0x244104], rdx ; ret
0x0000020000594351 : sub r10d, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000594391
0x0000020000411ed1 : sub r10d, r9d ; mov eax, r10d ; ret
0x000002000007b2c7 : sub r11, rax ; jmp r11
0x00000200004fc73e : sub r15b, r15b ; ret
0x00000200001f0dcc : sub r8, 0x10 ; dec eax ; jne 0x200001f0dcc ; ret
0x000002000015dcd3 : sub r8, r9 ; cmp r8, rdx ; sete al ; ret
0x00000200001592ec : sub r8, r9 ; mov qword ptr [rdx], r8 ; ret
0x00000200000a3771 : sub r8, rcx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x000002000000d3c0 : sub r8, rdx ; mov eax, r8d ; ret
0x000002000013e4d3 : sub r8b, 0x40 ; mov byte ptr [rdx], r8b ; ret
0x0000020000523131 : sub r8b, r13b ; cmp al, 0x9b ; ret 0x89ff
0x00000200005d0d30 : sub r8b, r13b ; test eax, 0x8bffaac3 ; ret
0x000002000015682c : sub r8d, 7 ; movzx eax, r8w ; ret
0x00000200001a361c : sub r8d, dword ptr [rdx + 0x28] ; mov eax, r8d ; ret
0x000002000003af2e : sub r8d, ecx ; mov eax, r8d ; ret
0x000002000042180e : sub r8d, edx ; movzx eax, r8w ; ret
0x00000200005205d3 : sub r9, r11 ; call 0x200001500c6
0x00000200001521cc : sub r9, r8 ; jmp r9
0x00000200006404b7 : sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000703d4e : sub r9, rax ; mov rax, r9 ; ret
0x000002000001e25b : sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x00000200001f10fa : sub r9b, 0x30 ; ret 0xfff1
0x00000200003a566c : sub r9b, byte ptr [r8 - 0x75] ; ret 0x2548
0x000002000010a936 : sub r9d, 0xf ; jne 0x2000010a949 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000006c020 : sub r9d, eax ; mov eax, r9d ; ret
0x000002000000a074 : sub r9d, ecx ; mov eax, r9d ; ret
0x0000020000643627 : sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x00000200003fe9d4 : sub r9d, r8d ; mov eax, r9d ; ret
0x000002000065bc68 : sub rax, -0x74b70001 ; ret
0x000002000058805c : sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000388f92 : sub rax, rcx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x000002000001b293 : sub rax, rcx ; ret
0x000002000015486f : sub rax, rcx ; sar rax, 1 ; dec rax ; ret
0x000002000014a3ae : sub rax, rcx ; sar rax, 1 ; ret
0x000002000011e13a : sub rax, rdx ; ret
0x00000200000ee858 : sub rcx, r10 ; lea rax, qword ptr [r8 + rcx*8] ; ret
0x00000200000b6769 : sub rcx, r8 ; cmp rax, rdx ; jae 0x200000b6796 ; ret
0x00000200004ab03c : sub rcx, rax ; cmp rcx, rdx ; seta al ; ret
0x000002000041b46c : sub rcx, rax ; mov rax, rcx ; ret
0x000002000036819d : sub rcx, rdx ; add rax, rdx ; mov qword ptr [r11], rcx ; ret
0x000002000012c1c5 : sub rcx, rdx ; xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x00000200000a3759 : sub rdi, r9 ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x00000200000a38e7 : sub rdx, 0x40 ; ja 0x200000a38e6 ; ret 0
0x00000200000a38e6 : sub rdx, 0x40 ; ja 0x200000a38e7 ; ret 0
0x00000200006f3ba8 : sub rdx, r8 ; jne 0x200006f3b9e ; ret
0x00000200000b6355 : sub rdx, r9 ; mov qword ptr [rdx], rcx ; ret
0x0000020000126583 : sub rdx, rsi ; call r12
0x00000200006a105f : sub rsp, 0x28 ; call rax
0x00000200000160e0 : sysenter
0x000002000048f48e : test ah, ah ; push qword ptr [rdx - 0x63b717ff] ; ret 0x48ff
0x0000020000073ba8 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200001d6a36 : test ah, bl ; ret
0x00000200001e60e8 : test ah, cl ; js 0x200001e60da ; inc dword ptr [rbp - 0x7c] ; ret
0x00000200001ef431 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001b9796 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000064ae97 : test al, 0 ; add byte ptr [rax], al ; call 0x200000a7116
0x00000200003c3c1b : test al, 0 ; add byte ptr [rax], al ; call rax
0x000002000045ffbf : test al, 0 ; add byte ptr [rax], al ; mov dl, 1 ; mov rcx, r15 ; call rbx
0x000002000017ac07 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000200005a269c : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x0000020000112d7c : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000483738 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000011d1af : test al, 0 ; add byte ptr [rax], al ; ret
0x00000200005070f8 : test al, 0x10 ; cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x00000200003d9260 : test al, 0x10 ; je 0x200003d926d ; xor al, al ; ret
0x000002000037ac0e : test al, 0x10 ; jne 0x2000037ac1b ; xor eax, eax ; ret
0x000002000057b945 : test al, 0x10 ; jne 0x2000057b952 ; mov al, 1 ; ret
0x00000200000f8784 : test al, 0x17 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008ff6e : test al, 0x17 ; pop rdi ; jg 0x2000008ff94 ; ret
0x00000200000360ca : test al, 0x20 ; je 0x200000360db ; or dword ptr [r8], 0xffffffff ; ret
0x000002000013c893 : test al, 0x21 ; add byte ptr [rcx], al ; ret
0x00000200000acd1d : test al, 0x2a ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200004f440c : test al, 0x3f ; ret 0x4cff
0x000002000018661c : test al, 0x40 ; je 0x20000186631 ; mov ecx, ebx ; call 0x20000162858
0x00000200000bdd21 : test al, 0x40 ; jne 0x200000bdd08 ; xor al, al ; ret
0x00000200000bdd1a : test al, 0x40 ; jne 0x200000bdd0f ; xor al, al ; ret
0x00000200003dd3a8 : test al, 0x40 ; jne 0x200003dd3d3 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200006d1a06 : test al, 0x41 ; call rcx
0x00000200001c5a8a : test al, 0x41 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000016ee66 : test al, 0x48 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000046b59f : test al, 0x48 ; mov ecx, eax ; jmp 0x2000046b56d
0x00000200004fc619 : test al, 0x66 ; adc eax, dword ptr [rax] ; jmp 0x200004fc5e7
0x00000200006c4be5 : test al, 0x83 ; enter -0x76f0, 5 ; ret 0xebff
0x0000020000667d8c : test al, 0x83 ; ret 0x8bff
0x00000200003844ba : test al, 0x85 ; test byte ptr [rdi], 0x48 ; ret 0x4589
0x000002000045ee2e : test al, 0x8b ; ret
0x0000020000081362 : test al, 0x92 ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x000002000066229c : test al, 0x97 ; ret 0x44ff
0x0000020000661f9c : test al, 0x9a ; ret 0x4cff
0x0000020000090344 : test al, 0x9d ; ret
0x00000200006c8c35 : test al, 0xa7 ; dec dword ptr [rax - 0x75] ; ret
0x000002000006fb38 : test al, 0xb ; add byte ptr [rax], al ; jne 0x2000006fb49 ; mov al, 1 ; ret
0x000002000048e554 : test al, 0xb5 ; ret 0x33ff
0x0000020000445894 : test al, 0xd5 ; ret 0xe9ff
0x00000200005fbffb : test al, 0xe0 ; push rsi ; ret
0x00000200006361f0 : test al, 0xe3 ; ret
0x000002000047a626 : test al, 0xe8 ; and al, 0x93 ; ret 0x48ff
0x00000200003b236b : test al, 0xe8 ; ret
0x00000200005880db : test al, 0xe9 ; inc dword ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x0000020000443f94 : test al, 0xee ; ret 0xb8ff
0x000002000051a3d6 : test al, 0xf ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000ae500 : test al, 0xf ; je 0x200000ae511 ; add rsp, 0x28 ; ret
0x000002000008c622 : test al, 0xfe ; adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x0000020000626e36 : test al, 0xff ; nop ; jmp 0x2000041a3a1
0x00000200005eb551 : test al, 0xff ; nop ; jmp 0x20000447771
0x00000200005ebb7e : test al, 0xff ; nop ; jmp 0x20000447d8b
0x000002000066970e : test al, 0xff ; nop ; jmp 0x20000665ff3
0x00000200001ee9be : test al, 1 ; add byte ptr [rax], al ; nop ; jmp 0x200000aac9e
0x000002000007c2f9 : test al, 1 ; add byte ptr [rax], al ; ret
0x00000200000bde3a : test al, 1 ; je 0x200000bde28 ; xor al, al ; ret
0x00000200000d9fbb : test al, 1 ; je 0x200000d9fb0 ; xor al, al ; ret
0x0000020000137525 : test al, 1 ; je 0x2000013751d ; xor al, al ; ret
0x000002000015a257 : test al, 1 ; je 0x2000015a26a ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x0000020000366548 : test al, 1 ; je 0x20000366553 ; ret
0x0000020000466b55 : test al, 1 ; je 0x20000466b11 ; ret
0x00000200000f82d3 : test al, 1 ; jne 0x200000f82dc ; ret
0x00000200000f82d2 : test al, 1 ; jne 0x200000f82dd ; ret
0x00000200000f82d1 : test al, 1 ; jne 0x200000f82de ; ret
0x00000200001620e1 : test al, 1 ; jne 0x200001620f4 ; mov eax, 0xc00000bb ; ret
0x000002000012c2ee : test al, 2 ; je 0x2000012c2fc ; mov eax, edx ; ret
0x000002000012c2ee : test al, 2 ; je 0x2000012c2fd ; mov eax, edx ; ret
0x00000200001978f5 : test al, 2 ; je 0x20000197903 ; xor edx, edx ; mov rax, rdx ; ret
0x00000200001978f5 : test al, 2 ; je 0x20000197904 ; xor edx, edx ; mov rax, rdx ; ret
0x000002000063f5dc : test al, 2 ; je 0x2000063f5ec ; jmp 0x2000026f017
0x0000020000657306 : test al, 2 ; je 0x20000657313 ; xor eax, eax ; ret
0x00000200000bdd05 : test al, 2 ; jne 0x200000bdd20 ; mov al, 1 ; ret
0x00000200000bdd13 : test al, 2 ; jne 0x200000bdd27 ; xor al, al ; ret
0x0000020000393f5e : test al, 2 ; jne 0x20000393f6f ; add rsp, 0x28 ; ret
0x00000200004c717c : test al, 3 ; add byte ptr [rax], al ; ret
0x00000200004b4cde : test al, 3 ; sete al ; ret
0x00000200004c6aca : test al, 4 ; je 0x200004c6ada ; add dword ptr [rcx + 0x40], r11d ; ret
0x0000020000146a62 : test al, 4 ; jne 0x20000146a75 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000162172 : test al, 4 ; jne 0x20000162185 ; mov eax, 0xc0000022 ; ret
0x00000200001621d6 : test al, 4 ; jne 0x200001621e9 ; mov eax, 0xc0000022 ; ret
0x0000020000162206 : test al, 4 ; jne 0x20000162219 ; mov eax, 0xc0000022 ; ret
0x000002000016223d : test al, 4 ; jne 0x20000162250 ; mov eax, 0xc0000022 ; ret
0x00000200001622e2 : test al, 4 ; jne 0x200001622f5 ; mov eax, 0xc0000001 ; ret
0x00000200003bcae9 : test al, 4 ; jne 0x200003bcaf8 ; call 0x200000f8d56
0x000002000042ee82 : test al, 4 ; jne 0x2000042ee8b ; ret
0x000002000037f32e : test al, 5 ; add byte ptr [rax], al ; ja 0x2000037f341 ; mov al, r8b ; ret
0x000002000037f3ce : test al, 5 ; add byte ptr [rax], al ; ret
0x000002000005cb04 : test al, 6 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b3c2 : test al, 6 ; jne 0x200001d455f ; ret
0x000002000051dbf7 : test al, 8 ; je 0x2000051dc07 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x0000020000165c4e : test al, 8 ; jne 0x20000165c61 ; mov eax, 0xc0000022 ; ret
0x00000200000a46e9 : test al, ah ; mov byte ptr [rax - 0x74b6ffcb], al ; ret 0x850f
0x0000020000076ce7 : test al, al ; je 0x20000076cf4 ; dec al ; ret
0x00000200000c02d4 : test al, al ; je 0x200000c02cf ; mov al, 1 ; ret
0x000002000012cfb9 : test al, al ; je 0x2000012cfca ; add rsp, 0x28 ; ret
0x00000200003f948a : test al, al ; je 0x200003f9484 ; mov eax, 0xc000000d ; ret
0x0000020000142ba6 : test al, al ; jne 0x20000142b7c ; xor eax, eax ; ret
0x0000020000143e01 : test al, al ; jne 0x200001ced29 ; ret
0x00000200001169cb : test al, al ; jne 0x200001d2f15 ; mov eax, edx ; ret
0x0000020000383110 : test al, al ; jne 0x2000038311d ; xor eax, eax ; ret
0x00000200003c9b2b : test al, al ; jne 0x200003c9b38 ; xor eax, eax ; ret
0x00000200004198e7 : test al, al ; jne 0x200004198f4 ; xor al, al ; ret
0x00000200004b907e : test al, al ; jne 0x200004b9087 ; ret
0x00000200004b913e : test al, al ; jne 0x200004b9147 ; ret
0x00000200004ade2f : test al, al ; jne 0x20000608104 ; ret
0x0000020000661033 : test al, al ; jne 0x20000661026 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000016a573 : test al, al ; jns 0x2000016a585 ; and qword ptr [rcx + 0x70], 0 ; ret
0x0000020000172494 : test al, al ; jns 0x200001724a7 ; mov eax, 0xc0000022 ; ret
0x000002000000e6a3 : test al, al ; js 0x2000000e6b6 ; mov eax, 1 ; ret
0x00000200000bada4 : test al, al ; js 0x200000badb1 ; xor al, al ; ret
0x0000020000197584 : test al, al ; js 0x20000197597 ; mov eax, 0xc00000bb ; ret
0x000002000038b627 : test al, al ; setne al ; add rsp, 0x28 ; ret
0x00000200004721c6 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0xff
0x000002000035fc11 : test al, bl ; adc byte ptr [rcx], al ; add bl, dh ; ret
0x00000200004cc3e8 : test al, bl ; call qword ptr [rax]
0x00000200000c1ba3 : test al, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e9433 : test al, ch ; mov esp, 0x8b49ffee ; ret
0x0000020000066bb0 : test al, ch ; ret
0x0000020000071d23 : test al, ch ; ret 0x18
0x00000200003cb6e0 : test al, cl ; jne 0x200003cb6ee ; xor cl, cl ; mov al, cl ; ret
0x00000200006ee0d6 : test al, cl ; or dword ptr [rdx], eax ; add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, al ; ret
0x00000200004a107b : test al, cl ; ret
0x0000020000270dd9 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2ae9
0x0000020000061974 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x00000200000b9262 : test al, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200003bf940 : test al, dl ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x0000020000021d20 : test ax, ax ; je 0x20000021d33 ; add rsp, 0x28 ; ret
0x00000200000bb03d : test ax, ax ; je 0x200000bb050 ; add rsp, 0x28 ; ret
0x00000200003b82ae : test ax, ax ; je 0x200003b82c1 ; add rsp, 0x28 ; ret
0x0000020000410cde : test ax, ax ; je 0x20000410cf1 ; add rsp, 0x28 ; ret
0x00000200004459d6 : test ax, ax ; je 0x200004459e9 ; add rsp, 0x78 ; ret
0x0000020000026e66 : test ax, ax ; jne 0x20000026e34 ; xor eax, eax ; ret
0x00000200001474cd : test ax, ax ; jne 0x200001474ae ; xor eax, eax ; ret
0x00000200001547ee : test ax, ax ; jne 0x200001547ea ; mov rax, rcx ; ret
0x000002000015481b : test ax, ax ; jne 0x20000154817 ; mov rax, rcx ; ret
0x00000200003d9273 : test ax, cx ; jne 0x200003d926b ; mov al, 1 ; ret
0x00000200000d8c04 : test bh, 3 ; je 0x200000d8c16 ; call 0x200005b4edf
0x00000200003c6462 : test bh, bh ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000562d4f : test bh, bh ; je 0x20000562d62 ; xor edx, edx ; call 0x2000026f018
0x0000020000562d64 : test bh, bh ; je 0x20000562d77 ; xor edx, edx ; call 0x2000026f018
0x00000200001ee4fb : test bh, bl ; ret
0x0000020000624745 : test bh, bl ; xor edi, esp ; inc dword ptr [rbx] ; ret
0x00000200006c8a03 : test bh, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xb808
0x00000200001ee507 : test bh, cl ; ret
0x000002000047338f : test bh, dh ; add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x0000020000600191 : test bh, dh ; ret 0xffe6
0x00000200001dd95c : test bh, dl ; mov esp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200004087b7 : test bl, 0x10 ; jmp 0x2000040871a
0x00000200004087bf : test bl, 0x20 ; jmp 0x200004086b2
0x0000020000381ccc : test bl, bh ; call qword ptr [rax]
0x0000020000104bd3 : test bl, bh ; ret
0x000002000003bc9e : test bl, bh ; ret 0xfffe
0x000002000063871f : test bl, bh ; ret 0xffff
0x000002000000667d : test bl, bl ; jne 0x200000066ab ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003c63d : test bl, bl ; jne 0x2000003c6c5 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000ebdb8 : test bl, bl ; jne 0x200000ebddb ; add rsp, 0x28 ; ret
0x0000020000027e74 : test bl, bl ; outsb dx, byte ptr [rsi] ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000200004facdf : test bl, ch ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000132c70 : test bl, ch ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000173bb : test bl, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x528b
0x00000200001d7a4b : test bl, cl ; sal esp, 1 ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x0000020000040d3b : test bl, dh ; mov ah, 0xfe ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x8948
0x0000020000082cf9 : test byte ptr [r14], dil ; leave ; ret 0x21d1
0x0000020000043ce5 : test byte ptr [r15 + rcx + 0x20], r8b ; ret
0x000002000035faf9 : test byte ptr [rax + 0x11], dh ; add dword ptr [rax], eax ; ret
0x000002000063503b : test byte ptr [rax + 0x36], dl ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004b50be : test byte ptr [rax + 0x3b000002], ch ; ret 0x940f
0x00000200000b8730 : test byte ptr [rax + 0xb7848], al ; add rax, r8 ; jmp rax
0x00000200001364a9 : test byte ptr [rax + 6], 8 ; jne 0x200001364ba ; xor eax, eax ; ret
0x0000020000064a4a : test byte ptr [rax + rax + 0x63480000], cl ; ret
0x00000200006ba5ef : test byte ptr [rax + rax - 0x74bc0000], al ; ret
0x000002000007c711 : test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x0000020000073c07 : test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x000002000038b099 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff04
0x000002000045e6ab : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0xb], al ; ret 0x8b44
0x00000200000aa2a6 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000200001242ae : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x000002000060e4da : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret 0xffe1
0x0000020000471e7f : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000057a95c : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000aed01 : test byte ptr [rax + rax], bl ; je 0x200000aed0c ; ret
0x000002000000f0ac : test byte ptr [rax + rax], dh ; call rax
0x0000020000621a4b : test byte ptr [rax + rbx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200005893c4 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x0000020000138504 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000001404d : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200000a1bfe : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200003be91a : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x2b49
0x0000020000138844 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x0000020000472ecb : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000002000041a72b : test byte ptr [rax + rcx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x820f
0x0000020000130783 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x000002000025c220 : test byte ptr [rax + rdi + 0x388d1400], cl ; add al, ch ; ret 0x22
0x0000020000585b35 : test byte ptr [rax + rdi*2], ah ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000011339 : test byte ptr [rax + rdi*4], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014fe7d : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x894d
0x00000200004ce6bb : test byte ptr [rax + rdi*8], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000011b18 : test byte ptr [rax + rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200001a1ba4 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000009d52 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000050bf75 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000040b080 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8488
0x00000200000bd101 : test byte ptr [rax + rdx], ah ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003d821c : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200001b597c : test byte ptr [rax + rsi*4], ah ; add eax, 0x8b480000 ; ret 0x8341
0x00000200001cbcf1 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200001cbcb1 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200000cc0d4 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x44], cl ; ret
0x00000200000d775d : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x5364
0x0000020000624b49 : test byte ptr [rax - 0x14002ab7], al ; ret
0x00000200005e04e1 : test byte ptr [rax - 0x4d], bh ; lock inc dword ptr [rcx - 0x7c] ; ret 0x850f
0x00000200005beb7f : test byte ptr [rax - 0x73], 0x4b ; sbb byte ptr [rax - 1], cl ; ret 0x8b4d
0x00000200003885df : test byte ptr [rax - 0x74ffdacc], bl ; ret
0x00000200004183eb : test byte ptr [rax - 0x74ffdea0], ah ; ret
0x00000200003d7ee5 : test byte ptr [rax - 0x75000000], bh ; ret
0x00000200000ef6a8 : test byte ptr [rax - 0x75000000], bl ; ret 0x41f0
0x00000200005b9ace : test byte ptr [rax - 0x75], 0x41 ; cmp byte ptr [rax - 1], cl ; ret
0x0000020000005ccf : test byte ptr [rax - 0x75], 0xd3 ; mov rcx, r13 ; call r15
0x00000200003e597b : test byte ptr [rax - 0x75], cl ; or cl, bpl ; ret
0x0000020000461a84 : test byte ptr [rax - 0x9000006], ch ; ret
0x0000020000055953 : test byte ptr [rax - 0x9fffffe], al ; ret
0x00000200000bc555 : test byte ptr [rax - 0x9fffffe], bh ; ret
0x0000020000047f57 : test byte ptr [rax - 1], al ; ret 0x5489
0x00000200004fd198 : test byte ptr [rax], 0 ; add bh, bh ; ret
0x000002000042b551 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004a44f8 : test byte ptr [rax], 0 ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200000eac09 : test byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x00000200000d3ab4 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000010a5b1 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0xf], cl ; ret 0x3b66
0x00000200005893b4 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8949
0x00000200005d26ba : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200005e4060 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], al ; ret
0x0000020000141e1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cli ; ret
0x0000020000141dea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, cr3 ; ret
0x0000020000076f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004fdc29 : test byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000012ad4f
0x0000020000651b5c : test byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000064de02
0x0000020000049ec9 : test byte ptr [rax], al ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200005bc15a : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xc32b
0x000002000053ad23 : test byte ptr [rax], ch ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x00000200004f132d : test byte ptr [rax], ch ; ret 0xf
0x0000020000061954 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x0000020000417620 : test byte ptr [rax], dl ; jo 0x200004175e8 ; add r11b, al ; mov al, 6 ; ret
0x0000020000666df6 : test byte ptr [rbp + 0x1d8b44ff], ah ; js 0x20000666e77 ; ret 0x48ff
0x0000020000666e31 : test byte ptr [rbp + 0x1d8b44ff], ah ; mov ch, 0x92 ; ret 0x48ff
0x00000200002270cc : test byte ptr [rbp + 0x21], al ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 4
0x000002000003d312 : test byte ptr [rbp + 0x3c001b93], dh ; ret
0x000002000042d276 : test byte ptr [rbp + 0x48001ead], cl ; add esp, 0x28 ; ret
0x00000200007096cc : test byte ptr [rbp + 0x5f], dl ; cld ; dec dword ptr [rax - 0x7d] ; ret 0x4410
0x00000200004d2196 : test byte ptr [rbp + rbp*8 - 1], 0x48 ; add esp, 0x38 ; ret
0x0000020000141db8 : test byte ptr [rbp + rdx], ah ; ret
0x00000200000375ff : test byte ptr [rbp - 0x1000000], bh ; ret 0x5189
0x00000200005e7f75 : test byte ptr [rbp - 0x27], bl ; out dx, eax ; inc dword ptr [rcx + rcx*4 + 0x35] ; ret
0x00000200005af3f6 : test byte ptr [rbp - 0x3c74bce4], 0x83 ; ret
0x00000200003dce6e : test byte ptr [rbp - 0x4f], bl ; and eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000cbd78 : test byte ptr [rbp - 0x72ffffff], dl ; add dword ptr [r11], esp ; ret 0xd88b
0x00000200000d9dee : test byte ptr [rbp - 0x73], 0x6e ; add edi, esi ; ret
0x0000020000501ba8 : test byte ptr [rbp - 0x74fff1c6], bl ; ret
0x0000020000035929 : test byte ptr [rbp - 0x74fffffa], cl ; ret
0x00000200003d175c : test byte ptr [rbp - 0x74fffffe], bl ; adc eax, dword ptr [rbx] ; ret 0xc23b
0x00000200005ba4ca : test byte ptr [rbp - 0x75000000], bh ; pop rdi ; adc bh, bh ; ret
0x0000020000400da6 : test byte ptr [rbp - 0x7cffdf9b], ah ; call qword ptr [rcx]
0x0000020000426ae9 : test byte ptr [rbp - 0x7efffffd], al ; call qword ptr [rdi]
0x0000020000473de2 : test byte ptr [rbp - 0x8ffe756], dh ; ret
0x00000200005acb54 : test byte ptr [rbp - 0x9000000], cl ; ret
0x0000020000128df9 : test byte ptr [rbp - 0x9000003], dh ; ret
0x0000020000122b04 : test byte ptr [rbp - 0x900048b], dh ; ret 0xba01
0x00000200000cad1f : test byte ptr [rbp - 0x9fffffa], bl ; ret 0xf04
0x000002000011b283 : test byte ptr [rbp - 0x9ffffff], ah ; ret
0x0000020000498ae5 : test byte ptr [rbx + 0x3bc0ffff], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200006fed38 : test byte ptr [rbx + 0x480000fc], bh ; mov eax, ecx ; ret
0x00000200006333fd : test byte ptr [rbx + 0x4f], al ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000056ae8a : test byte ptr [rbx + 0x5c893059], 0x24 ; js 0x2000056ae27 ; ret
0x000002000006915f : test byte ptr [rbx + 0x684c0], dh ; add rax, r11 ; jmp rax
0x000002000000cc04 : test byte ptr [rbx - 0x38dcbef9], 0x3b ; ret
0x00000200006309a1 : test byte ptr [rbx - 0x74002861], bh ; ret
0x00000200005ebb96 : test byte ptr [rbx - 0x79166f01], ah ; ret 0xffe5
0x0000020000370d71 : test byte ptr [rbx - 0x7c0000bf], bh ; call qword ptr [rdi]
0x0000020000400db8 : test byte ptr [rbx - 0x7cffdf9b], dl ; jmp qword ptr [rdx]
0x00000200003aa3f4 : test byte ptr [rbx - 0x8ffd79e], bh ; ret
0x00000200005e589f : test byte ptr [rbx - 0x900130e], ch ; ret
0x00000200001e6002 : test byte ptr [rbx - 0x9001884], ch ; ret 0xf01
0x00000200000ae88e : test byte ptr [rbx], 0x1f ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003db01b : test byte ptr [rbx], ah ; add byte ptr [rdi + rcx - 0x49], al ; sbb cl, byte ptr [rcx - 0x7d] ; ret
0x000002000049b768 : test byte ptr [rbx], ah ; cmp bh, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000497504 : test byte ptr [rbx], al ; add dh, dh ; ret
0x00000200000473ff : test byte ptr [rbx], al ; ret
0x00000200000e715b : test byte ptr [rbx], bl ; add byte ptr [rax + 0xf], cl ; ret
0x00000200001d61b2 : test byte ptr [rbx], bl ; test ebp, ebp ; inc dword ptr [rcx - 0x75] ; ret 0x41f0
0x00000200004d8311 : test byte ptr [rbx], dh ; add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200001d6a6a : test byte ptr [rbx], dh ; ret
0x00000200003f2525 : test byte ptr [rcx + 0x3f4680], al ; add rax, rcx ; jmp rax
0x00000200004284ce : test byte ptr [rcx + 0x428ad0], al ; add rax, rcx ; jmp rax
0x000002000008e020 : test byte ptr [rcx + 0x62], dh ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0xb5b5889b ; ret
0x00000200004fac21 : test byte ptr [rcx + 0xf], al ; ret
0x000002000007b7e4 : test byte ptr [rcx + 2], 1 ; je 0x2000007b800 ; call 0x20000177a7c
0x00000200004ac724 : test byte ptr [rcx + 2], 1 ; jne 0x200004ac735 ; xor eax, eax ; ret
0x0000020000069d5b : test byte ptr [rcx + rax - 0x44800000], cl ; ret
0x00000200004d543b : test byte ptr [rcx + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x5dcb
0x00000200004cf51f : test byte ptr [rcx + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8d44
0x00000200001f10d0 : test byte ptr [rcx - 0x1600144b], al ; ret
0x000002000001e17e : test byte ptr [rcx - 0x58], bl ; ret 8
0x000002000001a001 : test byte ptr [rcx - 0x75ffe4e5], al ; ret
0x00000200003aac0d : test byte ptr [rcx - 0x7cffffff], al ; call qword ptr [rbx]
0x0000020000494e18 : test byte ptr [rcx - 0x7d000000], ch ; ret
0x000002000001e21d : test byte ptr [rcx - 0x80], bl ; ret 8
0x000002000005594a : test byte ptr [rcx - 0x9fffffe], cl ; ret
0x0000020000175a7e : test byte ptr [rcx - 0xa000000], al ; ret
0x00000200000274ac : test byte ptr [rcx - 0xa000000], al ; ret 0x7501
0x000002000010caff : test byte ptr [rcx - 0xa000000], al ; ret 0xf08
0x0000020000006005 : test byte ptr [rcx], 0 ; add byte ptr [rax + 0x32], al ; div dh ; ret 0xf04
0x000002000003a2c3 : test byte ptr [rcx], al ; add bh, bh ; ret
0x000002000058e3a1 : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000dd0ef : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf08
0x000002000020011d : test byte ptr [rcx], al ; hlt ; dec dword ptr [rbp - 0x75] ; ret
0x00000200000ab0d6 : test byte ptr [rcx], bh ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000046813f : test byte ptr [rcx], bh ; call qword ptr [rdi]
0x00000200001cbdb7 : test byte ptr [rcx], bl ; insd dword ptr [rdi], dx ; idiv edi ; jmp 0x20000142a91
0x000002000061b569 : test byte ptr [rcx], cl ; jmp rbx
0x000002000001188d : test byte ptr [rdi + 0x3c000006], ch ; ret
0x00000200001d7a2b : test byte ptr [rdi + 0x48fff4d1], cl ; mov edx, ecx ; jmp 0x200001d7a00
0x0000020000038ad8 : test byte ptr [rdi + 0x78], al ; sbb dword ptr [rax], eax ; ret
0x0000020000447b91 : test byte ptr [rdi + rbp*8 - 1], cl ; inc dword ptr [rcx - 0x4c] ; add ecx, ebp ; ret
0x0000020000043ce6 : test byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000102466 : test byte ptr [rdi + rdi*8 - 1], al ; inc dword ptr [rcx - 0x7c] ; ret
0x000002000041842f : test byte ptr [rdi - 0x74ffdea0], dh ; ret
0x00000200003d73b9 : test byte ptr [rdi - 0x74ffdf69], cl ; ret
0x0000020000507245 : test byte ptr [rdi - 0x74ffed3a], dh ; ret
0x000002000047328a : test byte ptr [rdi - 0x74fffffc], al ; ret
0x0000020000496708 : test byte ptr [rdi - 0x75000000], ah ; ret
0x000002000004b9e5 : test byte ptr [rdi - 0x75000000], cl ; ret
0x000002000060b49f : test byte ptr [rdi - 0x9001f2e], al ; ret
0x0000020000128ac7 : test byte ptr [rdi - 0x9fffffc], bl ; ret
0x00000200004d4e76 : test byte ptr [rdi - 0xa000000], bl ; ret
0x000002000015696e : test byte ptr [rdi - 0xa000000], cl ; ret
0x000002000045e628 : test byte ptr [rdi], 0 ; add byte ptr [rbx], dh ; fild dword ptr [rcx - 0x75] ; ret 0xe083
0x00000200003844bc : test byte ptr [rdi], 0x48 ; ret 0x4589
0x0000020000128ac5 : test byte ptr [rdi], 0x84 ; lahf ; add al, 0 ; add dh, dh ; ret
0x00000200000bc553 : test byte ptr [rdi], 0x84 ; mov eax, 0xf6000002 ; ret
0x000002000004502e : test byte ptr [rdi], 0x84 ; ret
0x00000200005f5d73 : test byte ptr [rdi], 0x84 ; ret 0xdb63
0x00000200006077f6 : test byte ptr [rdi], 0x84 ; ret 0xdfa8
0x000002000060ddf1 : test byte ptr [rdi], 0x84 ; ret 0xe08d
0x0000020000072b11 : test byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000200003fe6ba : test byte ptr [rdi], 0x84 ; ret 1
0x000002000010cd10 : test byte ptr [rdi], 0x84 ; setne byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e6000 : test byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; jl 0x200001e5ff5 ; push rsi ; ret 0xf01
0x00000200003d4856 : test byte ptr [rdi], 0x85 ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000418be3 : test byte ptr [rdi], 0x85 ; mov esp, 0x8b000006 ; ret
0x00000200005061b2 : test byte ptr [rdi], 0x85 ; ret
0x0000020000152eb7 : test byte ptr [rdi], 0x85 ; ret 0
0x0000020000433f83 : test byte ptr [rdi], 0x85 ; ret 0x1ea2
0x0000020000386e2f : test byte ptr [rdi], 0x85 ; ret 0x274f
0x00000200001df207 : test byte ptr [rdi], 0x85 ; ret 0xe46f
0x00000200003b6194 : test byte ptr [rdi], 0x85 ; ret 0xe72
0x0000020000106309 : test byte ptr [rdi], 0x85 ; sbb eax, 0x8b000cb2 ; ret
0x0000020000071cb1 : test byte ptr [rdi], 0x85 ; sti ; ret 0x18
0x000002000040a469 : test byte ptr [rdi], 0x88 ; ret
0x000002000002cc6a : test byte ptr [rdi], 0x94 ; ret 0x5488
0x000002000038f16d : test byte ptr [rdi], 0x94 ; ret 0x8b4c
0x00000200004f021d : test byte ptr [rdi], 0x95 ; ret 0x46e8
0x0000020000027a9a : test byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000020089f : test byte ptr [rdi], ch ; sub al, dh ; dec dword ptr [rax - 0x75] ; ret
0x000002000013aecc : test byte ptr [rdx + 0x359790], cl ; ret
0x00000200004012df : test byte ptr [rdx + 0x40115c], bh ; add rax, r10 ; jmp rax
0x00000200000e1be8 : test byte ptr [rdx + rax], bh ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000e1bdf : test byte ptr [rdx + rax], bl ; add dh, dh ; ret
0x00000200001fb030 : test byte ptr [rdx - 0x16000b30], bl ; ret
0x000002000056f007 : test byte ptr [rdx - 0x18000000], dh ; ret
0x0000020000631350 : test byte ptr [rdx - 0x7400287b], ah ; ret
0x00000200005c525a : test byte ptr [rdx - 0x74bb38bb], 0x4d ; ret
0x0000020000388683 : test byte ptr [rdx - 0x74ffdaaa], bl ; ret
0x000002000004c2be : test byte ptr [rdx - 0x74ffe6b7], ah ; ret
0x00000200000caa5c : test byte ptr [rdx - 0x75000000], dl ; ret
0x0000020000400dc1 : test byte ptr [rdx - 0x7cffdf9b], cl ; jmp qword ptr [rcx]
0x000002000056da18 : test byte ptr [rdx - 0x9ffffff], bl ; ret 0xf01
0x0000020000012a2b : test byte ptr [rdx - 0xcffe364], ch ; ret
0x00000200004425bc : test byte ptr [rdx - 0xffe3ec], bh ; ret 0x8348
0x000002000037e35f : test byte ptr [rdx], ah ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x00000200003baedf : test byte ptr [rdx], ah ; ret 0xd
0x0000020000025ecf : test byte ptr [rdx], bh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000471470 : test byte ptr [rdx], bl ; or byte ptr [rax], al ; add dh, dh ; ret
0x00000200001507da : test byte ptr [rdx], bl ; push -0x74b7fff7 ; ret
0x00000200000dfdbd : test byte ptr [rdx], bl ; ret 0xf
0x0000020000139ec3 : test byte ptr [rdx], ch ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200001f7e9f : test byte ptr [rdx], ch ; ret 0xffe3
0x000002000014672a : test byte ptr [rdx], cl ; clc ; push -0x7cb7ffd9 ; ret 0x4808
0x00000200000bc231 : test byte ptr [rdx], dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000057ac6 : test byte ptr [rip + 0xb0019b9], bl ; push rbx ; je 0x20000057acf ; ret 0xf60
0x0000020000020bda : test byte ptr [rip - 0x2fc50000], al ; ja 0x20000020bed ; ret
0x0000020000460268 : test byte ptr [rip - 0x7efffff9], dh ; jmp qword ptr [rax]
0x000002000062add9 : test byte ptr [rip - 0x9002205], ah ; ret
0x0000020000590e48 : test byte ptr [rip - 0x9ffffff], ch ; ret 0xf20
0x000002000066814c : test byte ptr [rsi + 0x1d8b44ff], ch ; jp 0x200006681db ; ret 0x41ff
0x00000200004f4969 : test byte ptr [rsi + 0x48000000], bh ; mov ecx, ebx ; call rax
0x00000200005eec0e : test byte ptr [rsi + rax*8], bh ; lock dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000002affd : test byte ptr [rsi + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000014aba9 : test byte ptr [rsi + rcx*8 - 7], bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c6703 : test byte ptr [rsi + rdi*8 - 1], ch ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200004e3762 : test byte ptr [rsi + rsi - 0x74bbffef], ah ; ret
0x000002000060ca2f : test byte ptr [rsi + rsi*8 - 0x6160001], dl ; ret 0xffe1
0x000002000058a20e : test byte ptr [rsi - 0x15000000], bl ; and byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000438c5a : test byte ptr [rsi - 0x16000002], bh ; ret
0x000002000042eef6 : test byte ptr [rsi - 0x18000000], bh ; jo 0x2000042ef41 ; ret
0x000002000014a116 : test byte ptr [rsi - 0x66], cl ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000584f98 : test byte ptr [rsi - 0x74bb0014], bh ; ret
0x0000020000523822 : test byte ptr [rsi - 0x74ffef44], dl ; ret
0x00000200000be8e0 : test byte ptr [rsi - 0x9000000], al ; ret
0x000002000014cce5 : test byte ptr [rsi - 0x9fff4d0], bh ; ret
0x00000200003a55cc : test byte ptr [rsi - 0xe], ah ; jmp qword ptr [rsi]
0x0000020000069162 : test byte ptr [rsi], al ; add byte ptr [rcx + 3], cl ; ret
0x0000020000068e88 : test byte ptr [rsi], al ; add byte ptr [rcx + 3], cl ; retf ; jmp rcx
0x0000020000082cfa : test byte ptr [rsi], bh ; leave ; ret 0x21d1
0x00000200001e9491 : test byte ptr [rsi], bh ; ret 0xffee
0x0000020000210ff5 : test byte ptr [rsi], cl ; add ah, bl ; test dword ptr [rsi], ecx ; add ah, dl ; jmp qword ptr [rax]
0x0000020000031b03 : test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000556b25 : test byte ptr [rsi], dh ; add eax, dword ptr [rax] ; add byte ptr [rbx], cl ; fcompi st(7) ; ret
0x00000200003f0299 : test byte ptr [rsi], dl ; ret
0x0000020000499c9b : test byte ptr [rsi], dl ; ret 0x15
0x00000200004c010d : test byte ptr [rsp + rax*8 - 0x416000e], ah ; ret
0x000002000056d071 : test byte ptr [rsp + rbp - 0x7b38bf00], dh ; int 0x80
0x000002000041da10 : test byte ptr [rsp + rbx], dl ; mov eax, dword ptr [rcx + 0x60] ; ret
0x00000200004b0197 : test byte ptr [rsp + rcx*8 - 0x74bbffed], dl ; ret
0x00000200003c1886 : test byte ptr [rsp + rdx*2], ah ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000200000113b1 : test byte ptr [rsp + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200004e6cac : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003f046a : test ch, ah ; ret
0x00000200004ac8b1 : test ch, al ; ret 0x13
0x00000200001dd9cf : test ch, bh ; xchg dh, ah ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000042b82d : test ch, ch ; je 0x2000042b817 ; call 0x20000055eab
0x00000200004d4dd7 : test ch, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret
0x00000200005c0037 : test ch, cl ; dec dword ptr [rax - 0x7d] ; ret 0x890b
0x0000020000403d84 : test ch, cl ; mov dh, 0x20 ; add al, ch ; and dword ptr [rdx], eax ; ret 0xebff
0x0000020000470f4d : test ch, dh ; add byte ptr [rax], al ; add dh, dh ; ret 0xf03
0x000002000014ce50 : test ch, dh ; or dword ptr [rcx], ecx ; add byte ptr [rcx - 0x7d], cl ; ret 0x4818
0x00000200004684cd : test ch, dh ; ret
0x0000020000063688 : test cl, 0x10 ; je 0x20000063695 ; ret
0x000002000014ae6d : test cl, 0x20 ; je 0x2000014ae7b ; inc eax ; ret
0x000002000014ae4d : test cl, 0x3f ; je 0x2000014ae5b ; inc eax ; ret
0x00000200004672c1 : test cl, 0x40 ; jne 0x200004672d0 ; xor al, al ; ret
0x00000200005463a5 : test cl, 0xe2 ; add al, 0x83 ; ret 0xe830
0x000002000013c20e : test cl, 1 ; jne 0x2000013c1f0 ; xor eax, eax ; ret
0x000002000039bfe9 : test cl, 1 ; jne 0x2000039c038 ; mov qword ptr [r9], r10 ; ret
0x0000020000158613 : test cl, 2 ; jne 0x20000158623 ; xor dl, dl ; mov al, dl ; ret
0x00000200000d8cb7 : test cl, 3 ; je 0x200000d8cc9 ; call 0x200005b4edf
0x00000200003fee23 : test cl, 8 ; je 0x200003fee35 ; bts dword ptr [rdx], 0x18 ; ret
0x0000020000010f13 : test cl, 8 ; jne 0x20000010f26 ; add rsp, 0x38 ; ret
0x00000200004e7e39 : test cl, 8 ; jne 0x200004e7e54 ; xor al, al ; ret
0x0000020000589fae : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000f839d : test cl, al ; jne 0x200000f83a9 ; xor eax, eax ; ret
0x00000200005fa0ad : test cl, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000019e722 : test cl, ch ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000575b6a : test cl, ch ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200005b7d55 : test cl, ch ; push rsi ; ret
0x0000020000131c1a : test cl, ch ; ret
0x00000200004cb5f6 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x8349
0x00000200000ecb26 : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004fbed6 : test cl, cl ; je 0x200004fbeb1 ; xor eax, eax ; ret
0x00000200003b0114 : test cl, cl ; jne 0x200003b013c ; xor eax, eax ; ret
0x00000200003fda44 : test cl, cl ; jne 0x200003fda5d ; xor eax, eax ; ret
0x0000020000596795 : test cl, cl ; jne 0x200005967a2 ; mov al, 1 ; ret
0x00000200005967de : test cl, cl ; jne 0x200005967f0 ; mov eax, 1 ; ret
0x0000020000417c3e : test cl, cl ; js 0x20000417c6a ; and eax, edx ; ret
0x0000020000417c3e : test cl, cl ; js 0x20000417c6b ; and eax, edx ; ret
0x000002000005b209 : test cl, cl ; sete al ; ret
0x00000200004a1072 : test cl, dl ; ret
0x00000200006c5cfd : test cl, dl ; scasb al, byte ptr [rdi] ; add al, 0 ; add rsp, 0x38 ; ret
0x00000200000a4e5d : test cx, 0xffff ; jne 0x200000a4e6e ; ret 0
0x00000200001becf1 : test cx, ax ; jne 0x200001bed02 ; mov byte ptr [rdx + 2], cl ; ret
0x00000200000b4fe9 : test cx, cx ; je 0x200000b4ff4 ; ret
0x00000200000dfa52 : test cx, cx ; je 0x200000dfa65 ; add rsp, 0x28 ; ret
0x00000200000d8c6e : test dh, 3 ; je 0x200000d8c80 ; call 0x200005b4edf
0x0000020000471c7b : test dh, al ; ret 0x18
0x00000200001f8e98 : test dh, bl ; jmp rsp
0x000002000040c088 : test dh, ch ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000200001e96de : test dh, cl ; call qword ptr [rax - 0x113dc417]
0x00000200003a9f22 : test dh, cl ; jae 0x200003a9f50 ; add bh, bh ; ret
0x00000200000eac08 : test dh, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x000002000007355d : test dh, dh ; jne 0x200000734f0 ; xor rax, rax ; ret
0x00000200000738e1 : test dh, dh ; jne 0x20000073876 ; xor eax, eax ; ret
0x0000020000073974 : test dh, dh ; jne 0x2000007393a ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000063c81 : test dh, dh ; mov dword ptr [rdi], edx ; add bl, dh ; ret
0x00000200004fa0d3 : test dh, dh ; push 0xf ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000003f02d : test dh, dh ; xchg eax, ecx ; sbb dword ptr [rax], eax ; xor al, al ; ret
0x000002000014cca4 : test dh, dh ; xor byte ptr [rbx], cl ; add bh, dh ; ret
0x00000200000d8c03 : test dil, 3 ; je 0x200000d8c17 ; call 0x200005b4ee0
0x0000020000562d4e : test dil, dil ; je 0x20000562d63 ; xor edx, edx ; call 0x2000026f019
0x0000020000562d63 : test dil, dil ; je 0x20000562d78 ; xor edx, edx ; call 0x2000026f019
0x0000020000362f72 : test dl, 4 ; jne 0x20000362f81 ; xor al, al ; ret
0x000002000058a1ca : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x000002000005dbdd : test dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000434688 : test dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000005a694 : test dl, bl ; sbb dword ptr [rax], eax ; mov eax, r9d ; ret
0x000002000054c61e : test dl, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200005e09e3 : test dl, ch ; ret 0xffd9
0x0000020000392c0f : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000025f0f : test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000055eee : test dl, dl ; je 0x20000055efd ; mov al, byte ptr [rax + rcx*2] ; ret
0x00000200000c02cc : test dl, dl ; je 0x200000c02c8 ; mov al, 1 ; ret
0x0000020000177e1c : test dl, dl ; je 0x20000177e2d ; inc word ptr [rcx + 0x66] ; ret
0x0000020000136bd1 : test dl, dl ; jne 0x20000136bef ; call 0x20000072e46
0x00000200004df64b : test dl, dl ; jne 0x200004df656 ; ret
0x000002000003af82 : test dword ptr [r10 + 0x98], edx ; jne 0x2000003af95 ; ret
0x00000200004b258a : test dword ptr [r8 + rax], 0x45c70000 ; call qword ptr [rax]
0x0000020000558c0a : test dword ptr [rax + 0x3000000], ebx ; ret 0x8b48
0x000002000038dd0b : test dword ptr [rax + 0x4800174f], esi ; add esp, 0x28 ; ret
0x000002000008a6ba : test dword ptr [rax + 0x50], ecx ; xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x0000020000055ed7 : test dword ptr [rax + 0x56], ebp ; sbb al, byte ptr [rax] ; ret
0x00000200006185d3 : test dword ptr [rax + 0xf000000], eax ; xchg eax, ebp ; ret 0xca83
0x0000020000172ad3 : test dword ptr [rax + rax + 0x3b450000], eax ; ret
0x0000020000161b8e : test dword ptr [rax + rax + 0x3b480000], edx ; ret
0x0000020000158510 : test dword ptr [rax + rax - 0x75bf0000], ecx ; ret 0x41c3
0x000002000007102c : test dword ptr [rax + rax - 0x8b80000], ebx ; ret
0x00000200004b258b : test dword ptr [rax + rax], 0x45c70000 ; call qword ptr [rax]
0x000002000000efa9 : test dword ptr [rax + rax], esi ; call rax
0x00000200003abfbe : test dword ptr [rax + rax], esp ; mov eax, r9d ; ret
0x0000020000447414 : test dword ptr [rax + rdi*8 - 1], ebx ; push rsi ; ret
0x00000200005c064d : test dword ptr [rax - 0x1000000], eax ; ret
0x000002000046e59b : test dword ptr [rax - 0x13], eax ; add byte ptr [rcx + 3], r9b ; int 0xff
0x000002000036195b : test dword ptr [rax - 0x13], ecx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200005eec89 : test dword ptr [rax - 0x397cb701], ebp ; adc al, 0xff ; ret
0x0000020000554660 : test dword ptr [rax - 0x73], 0x8348431c ; ret
0x0000020000475aec : test dword ptr [rax - 0x73], 0x83484b1c ; ret
0x000002000040de8b : test dword ptr [rax - 0x73], 0x8b49180c ; ret
0x0000020000150b54 : test dword ptr [rax - 0x74000106], edi ; ret
0x000002000041434e : test dword ptr [rax - 0x74ffdf8b], esp ; ret
0x000002000047d788 : test dword ptr [rax - 0x74ffe4b1], esp ; ret
0x000002000003d0ad : test dword ptr [rax - 0x74fffffd], ebx ; ret
0x000002000012adf7 : test dword ptr [rax - 0x75000000], edi ; ret
0x0000020000169a0f : test dword ptr [rax - 0x75000000], edx ; ret
0x0000020000555787 : test dword ptr [rax - 0x7cb7002f], ebx ; ret
0x000002000007ee35 : test dword ptr [rax], 0x2e90000 ; ret 0xffff
0x00000200005441e4 : test dword ptr [rax], ebp ; add al, 0 ; add al, ch ; ret 0xadfd
0x000002000005df53 : test dword ptr [rax], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000002b98b : test dword ptr [rax], ebp ; lahf ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000062a4a0 : test dword ptr [rax], ebx ; in al, dx ; push rsi ; ret
0x00000200004cda23 : test dword ptr [rax], edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000061b53a : test dword ptr [rax], edi ; jmp rbx
0x0000020000009e2b : test dword ptr [rax], edx ; insd dword ptr [rdi], dx ; adc dword ptr [rax], eax ; ret
0x00000200004b6ebf : test dword ptr [rax], edx ; jbe 0x200004b6edd ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000f9103 : test dword ptr [rax], edx ; jne 0x200000f9110 ; xor eax, eax ; ret
0x000002000046812d : test dword ptr [rax], esi ; call qword ptr [rdi]
0x000002000042c814 : test dword ptr [rax], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000407f5e : test dword ptr [rax], esp ; add dh, dh ; ret
0x0000020000063ecb : test dword ptr [rax], esp ; ret 0x17
0x00000200006e7177 : test dword ptr [rax], esp ; sbb al, 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000666d0a : test dword ptr [rbp + 0x1d8b44ff], esp ; or al, 0x72 ; ret 0x48ff
0x00000200003d394e : test dword ptr [rbp + 0x1e], esp ; std ; inc dword ptr [rcx - 0x75] ; ret
0x000002000041eb42 : test dword ptr [rbp + 0x33000000], eax ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000014b68e : test dword ptr [rbp + 0x46], edi ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000631667 : test dword ptr [rbp - 0x16001673], edx ; ret
0x00000200001d15e3 : test dword ptr [rbp - 0x17001cde], edx ; ret
0x000002000047fcbe : test dword ptr [rbp - 0x45], edi ; adc eax, 0x200f4400 ; ret
0x0000020000397ba4 : test dword ptr [rbp - 0x74ffd74f], edi ; ret
0x00000200003afd82 : test dword ptr [rbp - 0x74ffdab4], esp ; ret
0x0000020000407bac : test dword ptr [rbp - 0x74ffdf80], ecx ; ret
0x0000020000054e34 : test dword ptr [rbp - 0x74ffe850], ebp ; ret
0x00000200004ef5d7 : test dword ptr [rbp - 0x74ffec12], eax ; ret
0x000002000013ddde : test dword ptr [rbp - 0x74fff484], edi ; ret 0x4466
0x0000020000137102 : test dword ptr [rbp - 0x74fff6a0], esi ; ret
0x000002000035d122 : test dword ptr [rbp - 0x75fffecc], esi ; ret
0x0000020000701762 : test dword ptr [rbp - 0x76000000], eax ; ret 0x3242
0x0000020000041701 : test dword ptr [rbp - 0x900000a], ecx ; ret
0x0000020000407f65 : test dword ptr [rbp - 0x9ffdf7a], ebp ; ret
0x00000200000d7ce2 : test dword ptr [rbp - 0x9ffefeb], edx ; ret
0x00000200004288e2 : test dword ptr [rbp - 0xffe1bf], ebx ; ret 0x5489
0x0000020000155f1a : test dword ptr [rbx + rax - 0xbf0000], esp ; ret 0x9ce9
0x00000200000b5ec5 : test dword ptr [rbx - 0x16000002], edi ; ret 0xf647
0x00000200001fbee4 : test dword ptr [rbx - 0x17001f81], edx ; ret 0xe280
0x00000200001183a8 : test dword ptr [rbx - 0x44], edi ; or eax, dword ptr [rax] ; xor al, al ; ret
0x000002000059057d : test dword ptr [rbx - 0x74bba7a9], ecx ; ret
0x00000200004eccda : test dword ptr [rbx - 0x74ffebbc], eax ; ret
0x000002000004cec6 : test dword ptr [rbx - 0x9ffffff], edx ; ret
0x0000020000395367 : test dword ptr [rbx - 0xa000000], esi ; ret 0xf02
0x0000020000392801 : test dword ptr [rbx*2 - 0x49f0ffdc], esi ; ret
0x000002000037f806 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x0000020000434692 : test dword ptr [rbx], ecx ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000025c741 : test dword ptr [rbx], edi ; add byte ptr [rax - 0x7a], al ; cmp eax, dword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp qword ptr [rdx]
0x00000200000a2131 : test dword ptr [rbx], edi ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000471cf9 : test dword ptr [rbx], esi ; ret
0x00000200004c6e05 : test dword ptr [rbx], esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7402
0x000002000046811f : test dword ptr [rbx], esp ; call qword ptr [rdi]
0x0000020000420310 : test dword ptr [rbx], esp ; jo 0x2000042033b ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000e285f : test dword ptr [rcx + 0xf], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001dadd1 : test dword ptr [rcx + rax*2 + 0xd8bfff0], eax ; xchg eax, esp ; ret 0x17
0x00000200003d4858 : test dword ptr [rcx + rax], ebp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000482861 : test dword ptr [rcx + rax], edx ; add byte ptr [rcx - 0xa], al ; ret
0x000002000005e773 : test dword ptr [rcx + rbx + 0x17], ecx ; add al, ch ; ret
0x00000200003f5fbd : test dword ptr [rcx - 0x17000002], ecx ; jmp 0x1ffea3f22af
0x00000200005d365e : test dword ptr [rcx - 0x49f06f01], ebp ; ret
0x00000200003c3d32 : test dword ptr [rcx - 0x74ffdc22], eax ; ret 0xf883
0x000002000047e2c9 : test dword ptr [rcx - 0x74ffe7f1], eax ; ret
0x00000200004ecff4 : test dword ptr [rcx - 0x74ffebbe], ecx ; ret
0x00000200004dac19 : test dword ptr [rcx - 0x74ffed4c], edi ; ret
0x00000200004f6fdf : test dword ptr [rcx - 0x74ffef04], ebx ; ret
0x000002000003fc43 : test dword ptr [rcx - 0x74fff22d], eax ; ret
0x00000200004fc9cd : test dword ptr [rcx - 0x75fff0e1], esp ; ret
0x0000020000545c76 : test dword ptr [rcx - 0x76], 0xd3c78bcf ; call 0x20007c91ec6
0x00000200001517a8 : test dword ptr [rcx - 0x9000288], ebp ; ret
0x0000020000407f6e : test dword ptr [rcx - 0x9ffdf7a], edi ; ret
0x00000200000d52d5 : test dword ptr [rcx - 0x9fffff9], edi ; ret
0x0000020000501b6c : test dword ptr [rcx - 0xfff1c6], ebx ; ret
0x000002000001ad86 : test dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000020000067f91 : test dword ptr [rcx], eax ; js 0x20000067fb6 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004804dd : test dword ptr [rcx], eax ; ret
0x00000200000646db : test dword ptr [rcx], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006138bc : test dword ptr [rcx], ebx ; mov edx, esi ; dec dword ptr [rax - 1] ; ret
0x0000020000143b8e : test dword ptr [rcx], ebx ; ret 8
0x00000200001a31a2 : test dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000b2d57 : test dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000471d23 : test dword ptr [rcx], edi ; ret
0x00000200000cf7ed : test dword ptr [rcx], edx ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000702b6b : test dword ptr [rcx], esi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], al ; ret
0x0000020000398451 : test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4920
0x00000200001dd93a : test dword ptr [rcx], esp ; xchg esi, esp ; dec dword ptr [rax - 0x75] ; ret
0x00000200000367d2 : test dword ptr [rdi + 0x2b000001], ecx ; ret
0x000002000040015b : test dword ptr [rdi + 0x33000000], eax ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x00000200001fa04e : test dword ptr [rdi + 0x60], edi ; in al, dx ; push rdi ; shl byte ptr [rbx], 1 ; ret
0x000002000002c0fd : test dword ptr [rdi + rdx*2 + 1], eax ; add dh, dh ; ret
0x000002000048e273 : test dword ptr [rdi + rdx], ecx ; add al, ch ; ret
0x00000200003b1a72 : test dword ptr [rdi - 0x1000000], ecx ; ret
0x00000200005d7d5e : test dword ptr [rdi - 0x17001ff7], ecx ; ret 0xffa4
0x00000200006191e3 : test dword ptr [rdi - 0x1700225f], ebp ; ret
0x000002000014306c : test dword ptr [rdi - 0x23], eax ; or al, byte ptr [rax] ; ret
0x00000200001491cf : test dword ptr [rdi - 0x56], esi ; std ; dec dword ptr [rax - 0x7d] ; ret 0xb904
0x000002000005d997 : test dword ptr [rdi - 0x74000003], eax ; ret 0x3948
0x00000200003bc75f : test dword ptr [rdi - 0x74ffd90c], eax ; ret
0x00000200004d1b9e : test dword ptr [rdi - 0x74ffecbf], esp ; ret
0x000002000051d37f : test dword ptr [rdi - 0x74ffefa7], ecx ; ret
0x00000200006bb1d0 : test dword ptr [rdi - 0x74fffaf6], ebx ; ret
0x000002000001c7e7 : test dword ptr [rdi - 0x74ffffff], esi ; ret
0x00000200006f11ac : test dword ptr [rdi - 0x75fffffe], esi ; ret
0x00000200000c12b9 : test dword ptr [rdi - 0x9000007], ebp ; ret
0x0000020000417192 : test dword ptr [rdi - 0x9fff12c], esi ; ret
0x00000200000edca9 : test dword ptr [rdi - 0x9fff248], edi ; ret
0x00000200003e83e2 : test dword ptr [rdi - 0x9fffff8], ecx ; ret
0x000002000042b199 : test dword ptr [rdi - 0x9fffff8], esi ; ret
0x0000020000050726 : test dword ptr [rdi - 0xa000000], esp ; ret
0x000002000047e684 : test dword ptr [rdi - 0xcffe871], ebx ; ret
0x0000020000634a42 : test dword ptr [rdi - 0xffffc4], esi ; ret
0x00000200000d55e0 : test dword ptr [rdi*8 - 0x74b70001], edi ; ret
0x000002000026f8bc : test dword ptr [rdi], 0x19584 ; add byte ptr [rax - 0x39], cl ; ret
0x00000200000209d5 : test dword ptr [rdi], 0x3bf88b00 ; ret
0x000002000001a693 : test dword ptr [rdi], 0x9b7f685 ; add cl, ch ; ret
0x00000200003df2df : test dword ptr [rdi], eax ; add al, ch ; cmc ; xchg eax, ebx ; ret 0xebff
0x00000200001a00a9 : test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003abfbc : test dword ptr [rdi], ebx ; test dword ptr [rax + rax], esp ; mov eax, r9d ; ret
0x0000020000190d8b : test dword ptr [rdi], ecx ; add dh, dh ; ret
0x000002000004d38c : test dword ptr [rdi], edi ; lodsd eax, dword ptr [rsi] ; sbb al, byte ptr [rax] ; ret
0x00000200000935fc : test dword ptr [rdi], edx ; adc eax, dword ptr [rip + 0x3b92050b] ; ret
0x00000200005beeb7 : test dword ptr [rdi], edx ; idiv bh ; add rsp, 0x38 ; ret
0x0000020000143e04 : test dword ptr [rdi], edx ; scasd eax, dword ptr [rdi] ; or byte ptr [rax], al ; ret
0x00000200003bada8 : test dword ptr [rdi], esi ; ret 0xd
0x000002000003a2ac : test dword ptr [rdi], esp ; cwde ; sbb al, byte ptr [rax] ; ret
0x00000200001e1a87 : test dword ptr [rdx + 0x57], edx ; hlt ; inc dword ptr [rbp - 0x75] ; out 0xe9, al ; ret
0x000002000003af83 : test dword ptr [rdx + 0x98], edx ; jne 0x2000003af94 ; ret
0x00000200003c2753 : test dword ptr [rdx + 0xc], ecx ; jne 0x200003c2764 ; mov al, r9b ; ret
0x00000200000c88be : test dword ptr [rdx + rax], ebx ; add dh, dh ; ret
0x00000200000aba6f : test dword ptr [rdx + rbp*2 - 0x99ffec], ebp ; ret 0xf44
0x0000020000623cf9 : test dword ptr [rdx - 0x19], eax ; inc dword ptr [rbx - 0x7df0ef06] ; ret
0x000002000039bf81 : test dword ptr [rdx - 0x74ffdaa1], edi ; ret
0x00000200003e5711 : test dword ptr [rdx - 0x74ffdc88], ebx ; ret
0x000002000049c3d4 : test dword ptr [rdx - 0x74ffe796], esi ; ret
0x0000020000396a21 : test dword ptr [rdx - 0x75000000], ebx ; ret
0x000002000049f9c0 : test dword ptr [rdx - 0x7c164000], esp ; ret 1
0x000002000070b237 : test dword ptr [rdx - 0x90004d8], ebx ; ret 0xf02
0x000002000005dc4f : test dword ptr [rdx - 0x9ffe77d], ebp ; ret 0x7501
0x00000200000ea066 : test dword ptr [rdx - 0x9fffffc], edx ; ret
0x000002000001c89c : test dword ptr [rdx - 0x9ffffff], edi ; ret
0x000002000038eea1 : test dword ptr [rdx - 0xffffff], eax ; ret 0xd7eb
0x00000200001208ef : test dword ptr [rdx], 0x8b44fff9 ; ret 0x8b48
0x00000200004fbe38 : test dword ptr [rdx], eax ; jo 0x200004fbe56 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004419fc : test dword ptr [rdx], ebx ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000002000001fa69 : test dword ptr [rdx], ebx ; sbb eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000045e0bd : test dword ptr [rdx], ecx ; ret
0x00000200005bb823 : test dword ptr [rdx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000385210 : test dword ptr [rdx], edx ; add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x0000020000128b45 : test dword ptr [rdx], edx ; mov word ptr [rdx], es ; add dh, dh ; ret
0x000002000011c191 : test dword ptr [rdx], edx ; sub dword ptr [rip + 0x25834800], ecx ; ret 0x16d8
0x000002000017dfd8 : test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000003bc76 : test dword ptr [rdx], esp ; ret
0x00000200003f03cf : test dword ptr [rdx], esp ; ret 0x20
0x0000020000266a81 : test dword ptr [rip + 0x100], ecx ; add byte ptr [rax], cl ; ret
0x000002000022c045 : test dword ptr [rip + 0x100], ecx ; add byte ptr [rbx], ah ; ret
0x000002000023cb0d : test dword ptr [rip + 0x100], ecx ; add dl, ch ; ret
0x00000200002375f1 : test dword ptr [rip + 0x200], ecx ; add byte ptr [rcx], ah ; ret
0x000002000022ff15 : test dword ptr [rip + 0x200], ecx ; add byte ptr [rdi], ah ; ret 0x3a
0x000002000012ad63 : test dword ptr [rip + 0x41000c60], esp ; mov eax, eax ; ret
0x00000200005ff069 : test dword ptr [rip + 0xd8affe3], eax ; popfq ; jg 0x200005ff050 ; jmp qword ptr [rdx]
0x00000200000a3f9c : test dword ptr [rip + 0xf000001], ebp ; mov dh, 0x97 ; ret
0x00000200004d4e7f : test dword ptr [rip - 0x14ffed3a], edx ; or esi, esi ; ret
0x00000200005da889 : test dword ptr [rip - 0x1594], edi ; ret
0x0000020000477ba9 : test dword ptr [rip - 0x1700079a], eax ; std ; ret
0x000002000003fdeb : test dword ptr [rip - 0x49f00004], esp ; ret
0x0000020000066abd : test dword ptr [rip - 0x74000001], esp ; ret
0x00000200000133d6 : test dword ptr [rip - 0x74ffe37a], ebx ; ret
0x000002000010630b : test dword ptr [rip - 0x74fff34e], ebx ; ret
0x00000200004d4d92 : test dword ptr [rip - 0x9fffffe], ebp ; ret 0xf04
0x000002000048dcc6 : test dword ptr [rip - 0x9ffffff], ecx ; ret
0x000002000007b34b : test dword ptr [rsi + 2], edx ; add byte ptr [rax], al ; call r10
0x00000200000de558 : test dword ptr [rsi + rax], edx ; add bh, bh ; ret
0x00000200001f399f : test dword ptr [rsi - 0x16001a1d], edx ; ret
0x000002000014917d : test dword ptr [rsi - 0x67], ebx ; or al, byte ptr [rax] ; xor al, al ; ret
0x0000020000025f1e : test dword ptr [rsi - 0x74ffe46e], ebx ; ret
0x00000200004818cd : test dword ptr [rsi - 0x74ffe8a9], ebx ; ret
0x00000200006f02f7 : test dword ptr [rsi - 0x74fffe61], ebp ; ret
0x00000200000c0786 : test dword ptr [rsi - 0x74fffff4], eax ; ret 0x4489
0x0000020000484903 : test dword ptr [rsi - 0x74ffffff], ecx ; ret
0x000002000000ae60 : test dword ptr [rsi - 0x77], esi ; or eax, 0x5058b00 ; ret 0x34
0x0000020000484110 : test dword ptr [rsi - 0x7d000000], edx ; ret
0x00000200000416f8 : test dword ptr [rsi - 0x900000a], edx ; ret
0x00000200000633ba : test dword ptr [rsi - 0xd000000], ebx ; ret
0x00000200000720b7 : test dword ptr [rsi - 0xffe744], eax ; ret 0x854d
0x00000200003964f2 : test dword ptr [rsi - 6], ebx ; sub byte ptr [rax], al ; ret
0x000002000061385e : test dword ptr [rsi], 0xb70f4500 ; ret 0xf41
0x00000200000b0efd : test dword ptr [rsi], 0xe9c68b00 ; ret 0xfffe
0x00000200000de6a3 : test dword ptr [rsi], ebp ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000066068e : test dword ptr [rsi], ebp ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200003baf18 : test dword ptr [rsi], ebp ; ret 0xd
0x00000200004af775 : test dword ptr [rsi], ebx ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000edce1 : test dword ptr [rsi], ebx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000616383 : test dword ptr [rsi], ebx ; and ebx, edi ; push rsi ; ret
0x0000020000210ff9 : test dword ptr [rsi], ecx ; add ah, dl ; jmp qword ptr [rax]
0x00000200000cb37e : test dword ptr [rsi], ecx ; xor al, 0xf5 ; inc dword ptr [rcx - 0x7d] ; ret 0x48e0
0x00000200006d0f4c : test dword ptr [rsi], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014840d : test dword ptr [rsi], edi ; push rdx ; or eax, dword ptr [rax] ; mov al, 1 ; jmp 0x200001483e1
0x0000020000020a7e : test dword ptr [rsi], edi ; ret 0x1d
0x000002000016f980 : test dword ptr [rsi], edx ; add byte ptr [rax - 0x7d], cl ; ret 0x4540
0x0000020000101e2d : test dword ptr [rsi], edx ; jae 0x20000101e43 ; add dh, dh ; ret
0x00000200005e2d64 : test dword ptr [rsi], edx ; jno 0x200005e2d4e ; dec dword ptr [rax - 0x75] ; ret
0x0000020000486095 : test dword ptr [rsi], esi ; test eax, 0x458b001a ; ret
0x00000200000dcfe2 : test dword ptr [rsi], esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000443872 : test dword ptr [rsp + rcx], ebx ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000aa83d : test dword ptr [rsp + rdi + 0x14], ebx ; add byte ptr [rbx + rcx*4 + 0xd], al ; ret
0x000002000048c78e : test dword ptr [rsp + rsi - 0x49f0ffea], ebp ; ret
0x0000020000174113 : test dx, dx ; jne 0x20000174124 ; mov dword ptr [r8], eax ; ret
0x000002000066a3a1 : test eax, 0x1d8b44ff ; sar byte ptr [rbx], cl ; ret 0x8bff
0x000002000059b088 : test eax, 0x40001 ; je 0x2000059b09b ; mov al, 1 ; ret
0x0000020000486097 : test eax, 0x458b001a ; ret
0x0000020000581aa3 : test eax, 0x48ffb233 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000583d0b : test eax, 0x48ffd061 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006e91d3 : test eax, 0x48ffe171 ; add esp, 0x48 ; ret
0x0000020000526643 : test eax, 0x48fff8e6 ; add esp, 0x38 ; ret
0x00000200006f8acb : test eax, 0x50ffb912 ; ret
0x000002000066a467 : test eax, 0x58b48ff ; call 0x2004d6666b2
0x000002000066a616 : test eax, 0x58b48ff ; jmp 0x2004d666874
0x000002000066a3e5 : test eax, 0x58b48ff ; jp 0x2000066a42e ; ret 0x4cff
0x000002000066a5cd : test eax, 0x58b48ff ; mov dl, 0x39 ; ret 0x48ff
0x0000020000012393 : test eax, 0x7700344c ; and esi, esi ; ret
0x00000200004779c5 : test eax, 0x81000002 ; ret
0x0000020000494e19 : test eax, 0x83000000 ; ret
0x000002000047d307 : test eax, 0x8500005f ; sal byte ptr [rbp + 0x30], 0x8b ; ret
0x00000200000f86be : test eax, 0x8b480017 ; ret
0x00000200001bc9cb : test eax, 0x8b48c032 ; pop rsp ; and al, 0x10 ; ret
0x000002000048aaa6 : test eax, 0x8b49ffff ; iretd ; call 0x200000b9b09
0x00000200005d0d33 : test eax, 0x8bffaac3 ; ret
0x00000200003f5493 : test eax, 0x8bffc7d9 ; ret
0x000002000059f463 : test eax, 0x8bffccfb ; ret
0x00000200004c4763 : test eax, 0x8bffdaa8 ; ret
0x00000200005d90f0 : test eax, 0x8bffde5e ; ret
0x0000020000083fd9 : test eax, 0x9ba2 ; add byte ptr [rax], al ; ret 0xb0cc
0x00000200005d365f : test eax, 0xb60f90ff ; ret
0x000002000066a503 : test eax, 0xd8b44ff ; and byte ptr [rdx], bh ; ret 0x4cff
0x000002000066a3ce : test eax, 0xd8b44ff ; push rcx ; pop rbp ; ret 0x4cff
0x000002000066a2cc : test eax, 0xd8b48ff ; pop r14 ; ret 0x48ff
0x00000200004cfc87 : test eax, 0xe8cf8b48 ; xor byte ptr [rsi], ah ; ret 0xe9ff
0x000002000007e475 : test eax, 0xe9000000 ; ret 0xffcb
0x0000020000080475 : test eax, 0xe9000001 ; ret 0xffab
0x0000020000027f47 : test eax, 0xe9900013 ; ret 0x27f
0x00000200004307ef : test eax, 0xebd88b48 ; ret 0x8b48
0x000002000020d310 : test eax, 0xf0000bd7 ; ret 0x20
0x00000200005f7df3 : test eax, 0xf6ffc905 ; ret
0x0000020000586b43 : test eax, 0xf6ffd10e ; ret
0x00000200001517a9 : test eax, 0xf6fffd78 ; ret
0x00000200003baf13 : test eax, 0xfffed5c ; test dword ptr [rsi], ebp ; ret 0xd
0x0000020000125fb1 : test eax, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000480d68 : test eax, eax ; cmove eax, ecx ; ret
0x00000200004cdbc0 : test eax, eax ; cmove eax, edx ; ret
0x00000200003c0047 : test eax, eax ; cmove eax, r8d ; ret
0x0000020000154857 : test eax, eax ; cmovg eax, ecx ; ret
0x000002000048a930 : test eax, eax ; cmovs r13d, eax ; call 0x200000b9b09
0x000002000001e39e : test eax, eax ; je 0x2000001e3b1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000021d21 : test eax, eax ; je 0x20000021d32 ; add rsp, 0x28 ; ret
0x000002000002fe98 : test eax, eax ; je 0x2000002feab ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005a632 : test eax, eax ; je 0x2000005a645 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a9772 : test eax, eax ; je 0x200000a979e ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200000a9d5a : test eax, eax ; je 0x200000a9d68 ; ret
0x00000200000a9e40 : test eax, eax ; je 0x200000a9f6a ; call rax
0x00000200000bb03e : test eax, eax ; je 0x200000bb04f ; add rsp, 0x28 ; ret
0x00000200000e61f0 : test eax, eax ; je 0x200000e61d7 ; mov qword ptr [r9], rax ; ret
0x00000200000e61c9 : test eax, eax ; je 0x200000e61d8 ; mov qword ptr [r9], rax ; ret
0x00000200000e654e : test eax, eax ; je 0x200000e6559 ; ret
0x00000200000fa630 : test eax, eax ; je 0x200000fa640 ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000113a40 : test eax, eax ; je 0x20000113a4e ; mov dword ptr [r8], r9d ; ret
0x00000200001172dc : test eax, eax ; je 0x200001172ea ; mov dword ptr [r8], edx ; ret
0x000002000011d435 : test eax, eax ; je 0x2000011d448 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013638d : test eax, eax ; je 0x2000013639b ; mov qword ptr [r8], rax ; ret
0x000002000013c52e : test eax, eax ; je 0x2000013c547 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000014aa4d : test eax, eax ; je 0x2000014aa59 ; jmp r8
0x000002000014b763 : test eax, eax ; je 0x2000014b773 ; xor edx, edx ; call r8
0x0000020000160582 : test eax, eax ; je 0x20000160590 ; mov dl, 1 ; mov al, dl ; ret
0x0000020000163090 : test eax, eax ; je 0x200001630a3 ; mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx], eax ; ret
0x0000020000163bd0 : test eax, eax ; je 0x20000163bdc ; call rax
0x00000200001684bc : test eax, eax ; je 0x200001684c6 ; call rax
0x0000020000168501 : test eax, eax ; je 0x2000016850b ; call rax
0x000002000016857d : test eax, eax ; je 0x20000168587 ; call rax
0x00000200001685fd : test eax, eax ; je 0x20000168607 ; call rax
0x0000020000187b19 : test eax, eax ; je 0x20000187b0c ; ret
0x00000200001ab38d : test eax, eax ; je 0x200001ab39c ; mov dword ptr [rax + 4], edx ; ret
0x0000020000372605 : test eax, eax ; je 0x2000036737a ; call rax
0x000002000036f160 : test eax, eax ; je 0x2000036f16a ; call rax
0x000002000036f580 : test eax, eax ; je 0x2000036f592 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x000002000037237a : test eax, eax ; je 0x20000372396 ; mov rcx, r15 ; call rax
0x0000020000372f23 : test eax, eax ; je 0x20000372f35 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200003820ce : test eax, eax ; je 0x200003820e1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003b6815 : test eax, eax ; je 0x200003b6827 ; xor r9d, r9d ; jmp rax
0x00000200003b82af : test eax, eax ; je 0x200003b82c0 ; add rsp, 0x28 ; ret
0x0000020000401862 : test eax, eax ; je 0x200004014ee ; call rax
0x0000020000408498 : test eax, eax ; je 0x20000408509 ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x0000020000410cdf : test eax, eax ; je 0x20000410cf0 ; add rsp, 0x28 ; ret
0x0000020000424bc3 : test eax, eax ; je 0x20000424bd6 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042504f : test eax, eax ; je 0x20000425062 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004250d2 : test eax, eax ; je 0x200004250e5 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000431ff4 : test eax, eax ; je 0x2000043200c ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x0000020000433b01 : test eax, eax ; je 0x20000433b19 ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000043a0d2 : test eax, eax ; je 0x2000043a0e0 ; call rax
0x00000200004459d7 : test eax, eax ; je 0x200004459e8 ; add rsp, 0x78 ; ret
0x000002000046b798 : test eax, eax ; je 0x2000046b7b0 ; mov rcx, qword ptr [rsp + 0x30] ; call rax
0x0000020000521bb3 : test eax, eax ; je 0x200004899c2 ; call rax
0x000002000048b9ca : test eax, eax ; je 0x2000048b9df ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004b21bf : test eax, eax ; je 0x200004b21d2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b351b : test eax, eax ; je 0x200004b3525 ; call rax
0x00000200004b37e0 : test eax, eax ; je 0x200004b37ea ; call rax
0x00000200004b5a6a : test eax, eax ; je 0x200004b5a74 ; call rax
0x00000200004c4261 : test eax, eax ; je 0x200004c426d ; call rax
0x00000200004c54e5 : test eax, eax ; je 0x200004c54d1 ; xor al, al ; ret
0x0000020000522c72 : test eax, eax ; je 0x20000522c9d ; call rax
0x0000020000544bdc : test eax, eax ; je 0x20000544be8 ; jmp qword ptr [rax]
0x0000020000561009 : test eax, eax ; je 0x20000561013 ; call rax
0x00000200005820ed : test eax, eax ; je 0x200005820f7 ; call rax
0x0000020000596766 : test eax, eax ; je 0x200005967a2 ; add rax, rdx ; jmp 0x20000596779
0x00000200005adf8e : test eax, eax ; je 0x200005adff4 ; lea rdx, qword ptr [rsp + 0x48] ; call rax
0x00000200005b64a9 : test eax, eax ; je 0x200005b64bc ; mov eax, 0xc0000034 ; ret
0x00000200006430dc : test eax, eax ; je 0x20000643159 ; mov r8d, esi ; call rax
0x0000020000643f95 : test eax, eax ; je 0x20000643f9a ; mov dword ptr [r8], r9d ; ret
0x00000200006475b0 : test eax, eax ; je 0x200006475c0 ; mov cl, r9b ; call rax
0x000002000064c19a : test eax, eax ; je 0x2000064c1a7 ; call rax
0x000002000064c542 : test eax, eax ; je 0x2000064c55d ; mov rcx, rbx ; call rax
0x000002000064c5ca : test eax, eax ; je 0x2000064c5da ; mov rcx, rdi ; call rax
0x000002000064c6de : test eax, eax ; je 0x2000064c6f9 ; mov rcx, rdi ; call rax
0x000002000064c759 : test eax, eax ; je 0x2000064c76d ; mov rcx, rbx ; call rax
0x000002000064c76e : test eax, eax ; je 0x2000064c784 ; mov edx, edi ; mov rcx, rbx ; call rax
0x000002000064c7f9 : test eax, eax ; je 0x2000064c809 ; mov rcx, rsi ; call rax
0x00000200006340dd : test eax, eax ; jg 0x200006340e6 ; ret
0x0000020000126729 : test eax, eax ; jle 0x200001d79d4 ; ret
0x00000200000041d6 : test eax, eax ; jne 0x200000041e2 ; mov al, dl ; ret
0x00000200000041d6 : test eax, eax ; jne 0x200000041e3 ; mov al, dl ; ret
0x0000020000017041 : test eax, eax ; jne 0x20000017063 ; xor eax, eax ; ret
0x000002000002587c : test eax, eax ; jne 0x2000002587b ; mov rax, rcx ; ret
0x0000020000026e67 : test eax, eax ; jne 0x20000026e33 ; xor eax, eax ; ret
0x000002000002ac58 : test eax, eax ; jne 0x2000002ac57 ; mov rax, rcx ; ret
0x0000020000051058 : test eax, eax ; jne 0x2000005103b ; add rsp, 0x28 ; ret
0x00000200000633b7 : test eax, eax ; jne 0x20000063466 ; ret
0x0000020000067eb1 : test eax, eax ; jne 0x20000067eb0 ; mov rax, rcx ; ret
0x000002000006cdc4 : test eax, eax ; jne 0x2000006cdd1 ; mov al, 1 ; ret
0x000002000006fb41 : test eax, eax ; jne 0x2000006fb37 ; xor al, al ; ret
0x00000200000bdf68 : test eax, eax ; jne 0x200000bdf75 ; xor eax, eax ; ret
0x00000200000be5f8 : test eax, eax ; jne 0x200000be60b ; mov eax, 0xc0000225 ; ret
0x00000200000c1e34 : test eax, eax ; jne 0x200000c1e49 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1f1b : test eax, eax ; jne 0x200000c1f26 ; ret
0x00000200001d98d7 : test eax, eax ; jne 0x200000d04ef ; jmp 0x200001d98ac
0x00000200000d8555 : test eax, eax ; jne 0x200000d8560 ; ret
0x00000200000d8560 : test eax, eax ; jne 0x200000d856d ; xor eax, eax ; ret
0x00000200000e6566 : test eax, eax ; jne 0x200000e6577 ; mov rax, qword ptr [rcx + 8] ; ret
0x00000200000eec98 : test eax, eax ; jne 0x200000eec51 ; xor eax, eax ; ret
0x0000020000108a07 : test eax, eax ; jne 0x200001089f2 ; ret
0x000002000010a9a0 : test eax, eax ; jne 0x2000010a9b3 ; mov eax, 0xc0000001 ; ret
0x0000020000117462 : test eax, eax ; jne 0x20000117465 ; mov rcx, r8 ; jmp rdx
0x000002000012dc36 : test eax, eax ; jne 0x2000012dc49 ; ret
0x0000020000132a91 : test eax, eax ; jne 0x20000132aac ; ret
0x0000020000132afc : test eax, eax ; jne 0x20000132b07 ; ret
0x000002000013a1ab : test eax, eax ; jne 0x2000013a180 ; jmp 0x2000013a178
0x0000020000140dff : test eax, eax ; jne 0x20000140dc2 ; sub eax, r9d ; ret
0x00000200001474ce : test eax, eax ; jne 0x200001474ad ; xor eax, eax ; ret
0x00000200001540c3 : test eax, eax ; jne 0x200001540ba ; ret
0x0000020000154425 : test eax, eax ; jne 0x20000154419 ; ret
0x00000200001547ef : test eax, eax ; jne 0x200001547e9 ; mov rax, rcx ; ret
0x000002000015481c : test eax, eax ; jne 0x20000154816 ; mov rax, rcx ; ret
0x0000020000169829 : test eax, eax ; jne 0x20000169826 ; add rsp, 0x28 ; ret
0x00000200001a38fc : test eax, eax ; jne 0x200001a38e3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001afa1d : test eax, eax ; jne 0x200001afa2c ; mov r8, r10 ; jmp 0x200001afa40
0x00000200001b41da : test eax, eax ; jne 0x200001b41e9 ; mov r8, r10 ; jmp 0x200001b41fd
0x0000020000056572 : test eax, eax ; jne 0x200001d2bf5 ; ret
0x00000200001f5838 : test eax, eax ; jne 0x200001f5837 ; mov rax, rcx ; ret
0x00000200001071f8 : test eax, eax ; jne 0x200001fd1f8 ; ret
0x000002000037e93a : test eax, eax ; jne 0x2000037e94b ; add rsp, 0x28 ; ret
0x00000200003dfe42 : test eax, eax ; jne 0x200003dfe4e ; mov al, dl ; ret
0x00000200003dfe42 : test eax, eax ; jne 0x200003dfe4f ; mov al, dl ; ret
0x000002000041c317 : test eax, eax ; jne 0x2000041c307 ; xor eax, eax ; ret
0x000002000042b7f4 : test eax, eax ; jne 0x2000042b833 ; call 0x20000055eab
0x00000200004b93bd : test eax, eax ; jne 0x200004b93c8 ; ret
0x00000200004cd441 : test eax, eax ; jne 0x200004cd433 ; ret
0x00000200004de9bc : test eax, eax ; jne 0x200004de9b7 ; ret
0x00000200005cb8ca : test eax, eax ; jne 0x200005cb8db ; add rsp, 0x28 ; ret
0x0000020000640437 : test eax, eax ; jne 0x20000640442 ; ret
0x000002000064191a : test eax, eax ; jne 0x200006418f9 ; ret
0x000002000064552c : test eax, eax ; jne 0x20000645539 ; xor eax, eax ; ret
0x000002000064cf0f : test eax, eax ; jne 0x2000064cf22 ; mov eax, 0xc000042a ; ret
0x000002000064cf83 : test eax, eax ; jne 0x2000064cf96 ; mov eax, 0xc000042a ; ret
0x000002000064e82c : test eax, eax ; jne 0x2000064e821 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000144c73 : test eax, eax ; jns 0x20000144c82 ; mov r8d, r10d ; jmp 0x20000144c3f
0x000002000015484a : test eax, eax ; jns 0x20000154859 ; or eax, 0xffffffff ; ret
0x000002000037f711 : test eax, eax ; jns 0x2000037f724 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000432ecd : test eax, eax ; jns 0x20000432e34 ; jmp 0x20000432ea3
0x0000020000014bfd : test eax, eax ; js 0x20000014c0e ; add rsp, 0x28 ; ret
0x000002000001be95 : test eax, eax ; js 0x2000001be93 ; mov rax, rdx ; ret
0x000002000001be95 : test eax, eax ; js 0x2000001be94 ; mov rax, rdx ; ret
0x000002000001d737 : test eax, eax ; js 0x2000001d74f ; add rsp, 0x28 ; ret
0x0000020000020ee7 : test eax, eax ; js 0x20000020ee0 ; mov rax, rdx ; ret
0x000002000003c1ed : test eax, eax ; js 0x2000003c1fa ; xor al, al ; ret
0x00000200000c03a3 : test eax, eax ; js 0x200000c03b0 ; xor eax, eax ; ret
0x0000020000129eae : test eax, eax ; js 0x20000129ec6 ; add rsp, 0x28 ; ret
0x0000020000378caa : test eax, eax ; js 0x20000378cb7 ; xor eax, eax ; ret
0x0000020000378d5f : test eax, eax ; js 0x20000378d6c ; xor eax, eax ; ret
0x00000200003ee2a5 : test eax, eax ; or byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d45
0x00000200000c6d4d : test eax, eax ; sete al ; add rsp, 0x28 ; ret
0x00000200004d9ddd : test eax, eax ; setg al ; ret
0x0000020000406f12 : test eax, eax ; setne al ; add rsp, 0x28 ; ret
0x00000200001eea18 : test eax, eax ; setne cl ; mov dword ptr [rdx + 4], ecx ; ret
0x000002000003ac91 : test eax, eax ; setns al ; add rsp, 0x28 ; ret
0x0000020000499c50 : test eax, ebp ; ret 0x15
0x0000020000161a25 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000049eed : test eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006437d6 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000198c54 : test eax, ecx ; je 0x20000198c61 ; xor al, al ; ret
0x00000200003d9274 : test eax, ecx ; jne 0x200003d926a ; mov al, 1 ; ret
0x000002000036451a : test eax, ecx ; ret 0
0x00000200001792ea : test eax, ecx ; setne al ; ret
0x00000200000f155c : test eax, ecx ; setne dl ; mov eax, edx ; ret
0x000002000051a3d4 : test eax, edi ; test al, 0xf ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001280e7 : test eax, edx ; int 0xfb
0x00000200005b477f : test eax, edx ; int 0xff
0x00000200004274b3 : test eax, edx ; int 9
0x00000200004c54db : test eax, edx ; jne 0x200004c54f1 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x000002000045ea40 : test eax, esi ; or al, 0 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003b4cb7 : test eax, esp ; ret 0x27
0x000002000000e97b : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001e811d : test ebp, eax ; ret
0x00000200001d61b4 : test ebp, ebp ; inc dword ptr [rcx - 0x75] ; ret 0x41f0
0x0000020000039cf5 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x490c
0x0000020000064800 : test ebp, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000462152 : test ebp, edi ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000b083f : test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000071ceb : test ebp, edx ; ret 0x18
0x000002000000ade1 : test ebp, esi ; mov dword ptr [rip - 0x7bfa7500], ecx ; ret 0x34
0x00000200003f0454 : test ebp, esi ; ret
0x0000020000364489 : test ebp, esi ; ret 0
0x0000020000499b42 : test ebp, esp ; ret
0x000002000069b9c3 : test ebx, eax ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; leave ; call r9
0x000002000012fe7e : test ebx, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x0000020000501c09 : test ebx, eax ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004dd613 : test ebx, eax ; xor eax, 0x8b480011 ; ret 0x8b48
0x00000200001a31ce : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x28eb
0x00000200000d1b39 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000619334 : test ebx, ebp ; ret 0xffdd
0x00000200005f04ea : test ebx, ebp ; xchg eax, ebp ; call 0x1ffc7bc90fa
0x00000200003bbd91 : test ebx, ebx ; je 0x200003bbda3 ; mov rcx, rbx ; call r11
0x00000200004f937e : test ebx, ebx ; je 0x200004f938a ; call r11
0x00000200005875a8 : test ebx, ebx ; je 0x200005875d3 ; mov rcx, rbx ; call 0x2000042383d
0x0000020000587608 : test ebx, ebx ; je 0x20000587633 ; mov rcx, rbx ; call 0x2000042383d
0x00000200000070c5 : test ebx, ebx ; jne 0x200000070d8 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000012a81 : test ebx, ebx ; jne 0x20000012a75 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002835e : test ebx, ebx ; jne 0x2000002838a ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000c9332 : test ebx, ebx ; jne 0x200000c933f ; xor eax, eax ; ret
0x000002000016fc70 : test ebx, ebx ; jne 0x2000016fc46 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000016fcc9 : test ebx, ebx ; jne 0x2000016fc96 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000048675c : test ebx, ebx ; jne 0x2000048676d ; add rsp, 0x48 ; ret
0x000002000048f6de : test ebx, ebx ; jne 0x2000048f6c2 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000551de0 : test ebx, ebx ; jne 0x20000551ddd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005799b2 : test ebx, ebx ; jne 0x20000579989 ; add rsp, 0x38 ; ret
0x0000020000590620 : test ebx, ebx ; jne 0x2000059063d ; mov rcx, rdi ; call 0x2000019c8c9
0x00000200006001b8 : test ebx, ebx ; jne 0x2000060019c ; jmp 0x2000046c49a
0x0000020000484342 : test ebx, ebx ; jns 0x20000484353 ; add rsp, 0x28 ; ret
0x000002000047cb20 : test ebx, ecx ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000115108 : test ebx, edi ; add r8, qword ptr [rax] ; ret
0x00000200003df82e : test ebx, edi ; mov ecx, 0xf6410022 ; ret
0x00000200003a4462 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001413e9 : test ebx, esi ; std ; or al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000506f40 : test ebx, esp ; ret
0x00000200000a4e5e : test ecx, 0x375ffff ; ret 0
0x00000200000c310c : test ecx, 0x700 ; jne 0x200000c313a ; ret
0x000002000019bf65 : test ecx, 0xff00 ; setbe al ; ret
0x0000020000399dce : test ecx, 0xffffc000 ; sete al ; ret
0x00000200001becf2 : test ecx, eax ; jne 0x200001bed01 ; mov byte ptr [rdx + 2], cl ; ret
0x00000200006f4bcb : test ecx, eax ; ret
0x0000020000104c2c : test ecx, ebp ; ret
0x000002000036473a : test ecx, ebp ; ret 0
0x00000200003bcc46 : test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000da7f1 : test ecx, ecx ; cmove rax, rdx ; jmp 0x200000da7ea
0x000002000001fce5 : test ecx, ecx ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x000002000064de94 : test ecx, ecx ; cmovne eax, edx ; ret
0x00000200000b4fea : test ecx, ecx ; je 0x200000b4ff3 ; ret
0x00000200000dfa53 : test ecx, ecx ; je 0x200000dfa64 ; add rsp, 0x28 ; ret
0x000002000010a89a : test ecx, ecx ; je 0x2000010a8a0 ; and qword ptr [rcx], 0 ; ret
0x000002000015f72c : test ecx, ecx ; je 0x2000015f73c ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x000002000015f737 : test ecx, ecx ; je 0x2000015f747 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x0000020000168474 : test ecx, ecx ; je 0x20000168480 ; jmp rcx
0x000002000016849d : test ecx, ecx ; je 0x200001684a7 ; call rcx
0x00000200001684e1 : test ecx, ecx ; je 0x200001684ed ; jmp rcx
0x00000200001685a8 : test ecx, ecx ; je 0x200001685b2 ; call rcx
0x00000200001685d4 : test ecx, ecx ; je 0x200001685de ; call rcx
0x0000020000170b42 : test ecx, ecx ; je 0x20000170b54 ; mov eax, 0xc000000d ; ret
0x00000200001724b0 : test ecx, ecx ; je 0x200001724c4 ; mov dword ptr [rcx], r10d ; ret
0x00000200001740f5 : test ecx, ecx ; je 0x20000174108 ; mov eax, 0xc0000225 ; ret
0x0000020000443b90 : test ecx, ecx ; je 0x20000443ba4 ; call 0x20000072e47
0x00000200004c6653 : test ecx, ecx ; je 0x200004c6661 ; add dword ptr [rcx], r11d ; ret
0x00000200004d0413 : test ecx, ecx ; je 0x200004d0423 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x0000020000521354 : test ecx, ecx ; je 0x20000521365 ; call qword ptr [rip - 0x1d3d16]
0x0000020000522d4d : test ecx, ecx ; je 0x20000522d60 ; xor edx, edx ; call 0x2000026f018
0x0000020000644b38 : test ecx, ecx ; je 0x20000644b4c ; xor edx, edx ; call 0x2000026f019
0x000002000013f47f : test ecx, ecx ; jg 0x2000013f491 ; jns 0x2000013f492 ; or eax, 0xffffffff ; ret
0x0000020000012a61 : test ecx, ecx ; jne 0x20000012a6c ; ret
0x00000200000165f1 : test ecx, ecx ; jne 0x200000165fe ; xor al, al ; ret
0x0000020000030bd9 : test ecx, ecx ; jne 0x20000030be6 ; xor eax, eax ; ret
0x00000200000387df : test ecx, ecx ; jne 0x200000387d7 ; mov rax, rdx ; ret
0x000002000004d67e : test ecx, ecx ; jne 0x2000004d67b ; ret
0x0000020000058f08 : test ecx, ecx ; jne 0x20000058f11 ; ret
0x0000020000059a28 : test ecx, ecx ; jne 0x20000059a25 ; ret
0x0000020000062a8c : test ecx, ecx ; jne 0x20000062a89 ; ret
0x000002000006347f : test ecx, ecx ; jne 0x2000006347c ; ret
0x00000200000a917a : test ecx, ecx ; jne 0x200000a9189 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000e753f : test ecx, ecx ; jne 0x200000e754e ; mov rax, r9 ; ret
0x000002000012f8f1 : test ecx, ecx ; jne 0x2000012f8fe ; xor eax, eax ; ret
0x000002000013fefd : test ecx, ecx ; jne 0x2000013ff0b ; mov rax, rdx ; ret
0x000002000013fefd : test ecx, ecx ; jne 0x2000013ff0c ; mov rax, rdx ; ret
0x00000200001414c1 : test ecx, ecx ; jne 0x200001414ce ; xor al, al ; ret
0x0000020000153f11 : test ecx, ecx ; jne 0x20000153f1e ; xor eax, eax ; ret
0x00000200001605c6 : test ecx, ecx ; jne 0x200001605a8 ; xor eax, eax ; ret
0x0000020000162248 : test ecx, ecx ; jne 0x2000016225b ; mov eax, 0xc000000d ; ret
0x0000020000174e77 : test ecx, ecx ; jne 0x20000174e86 ; or eax, 0xffffffff ; ret
0x0000020000198539 : test ecx, ecx ; jne 0x2000019854c ; mov eax, 0xc00000f1 ; ret
0x0000020000198731 : test ecx, ecx ; jne 0x20000198744 ; mov eax, 0xc000000d ; ret
0x000002000019abd3 : test ecx, ecx ; jne 0x2000019abd0 ; ret
0x00000200000d72db : test ecx, ecx ; jne 0x200001cb6c0 ; ret
0x00000200000fa510 : test ecx, ecx ; jne 0x200001dbf5c ; ret
0x00000200001ed248 : test ecx, ecx ; jne 0x200001ed25d ; or esi, 8 ; jmp 0x2000011948a
0x000002000004d389 : test ecx, ecx ; jne 0x200001f80d9 ; ret
0x0000020000364486 : test ecx, ecx ; jne 0x20000370785 ; ret
0x000002000038872f : test ecx, ecx ; jne 0x2000038873a ; ret
0x00000200003b4388 : test ecx, ecx ; jne 0x200003b43cb ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200004193e5 : test ecx, ecx ; jne 0x200004193f8 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000045aa5a : test ecx, ecx ; jne 0x2000045aa8b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048f56d : test ecx, ecx ; jne 0x2000048f578 ; ret
0x00000200004908f1 : test ecx, ecx ; jne 0x20000490904 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000543165 : test ecx, ecx ; jne 0x20000543178 ; mov eax, 0xc000000d ; ret
0x000002000054390d : test ecx, ecx ; jne 0x20000543920 ; mov eax, 0xc000000d ; ret
0x000002000054ebf4 : test ecx, ecx ; jne 0x2000054ec07 ; mov eax, 0xc00000f1 ; ret
0x000002000058be90 : test ecx, ecx ; jne 0x2000058be9d ; xor al, al ; ret
0x00000200005a7b63 : test ecx, ecx ; jne 0x200005a7b51 ; mov rax, rcx ; ret
0x00000200005d01b1 : test ecx, ecx ; jne 0x200005d01be ; xor al, al ; ret
0x000002000047e681 : test ecx, ecx ; jne 0x200005f7631 ; ret
0x000002000001d97d : test ecx, ecx ; js 0x2000001d993 ; mov rax, rdx ; ret
0x000002000001d97d : test ecx, ecx ; js 0x2000001d994 ; mov rax, rdx ; ret
0x0000020000042845 : test ecx, ecx ; mov dl, 0x19 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000042140a : test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000637613 : test ecx, edi ; ret
0x0000020000619342 : test ecx, edi ; ret 0xffdd
0x00000200004fb0c4 : test ecx, edx ; je 0x200004fb0d1 ; mov al, 1 ; ret
0x00000200003641ac : test ecx, edx ; leave ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200003fc66a : test ecx, edx ; sete al ; ret
0x000002000038fbf0 : test ecx, edx ; setne al ; ret
0x00000200000b8b20 : test ecx, edx ; std ; adc al, byte ptr [rax] ; ret
0x000002000005dfa4 : test ecx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000055415a : test ecx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003dedd1 : test ecx, esi ; jmp 0x1ffc3c8ee02
0x0000020000444948 : test ecx, esp ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x0000020000145232 : test ecx, esp ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], al ; ret
0x00000200003c8c1f : test edi, eax ; mov al, 0x24 ; add byte ptr [rbx], bh ; ret 0x8b44
0x00000200001ea6ff : test edi, eax ; ret
0x0000020000140873 : test edi, eax ; stosb byte ptr [rdi], al ; or eax, dword ptr [rax] ; ret
0x00000200003a9df9 : test edi, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000047fe3d : test edi, ebp ; mov edx, 0xb60f0015 ; ret
0x0000020000071cb3 : test edi, ebx ; ret 0x18
0x00000200006056ce : test edi, ebx ; ret 0xffec
0x00000200000a18ba : test edi, ecx ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200000de594 : test edi, edi ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200004b9fc3 : test edi, edi ; je 0x200004b9fd7 ; mov rcx, r14 ; call r15
0x000002000045eaaa : test edi, edi ; jp 0x2000045ead0 ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000506f5a : test edi, edx ; ret
0x00000200000a6604 : test edi, esi ; call qword ptr [rdx]
0x00000200003fbddb : test edi, esp ; jmp qword ptr [rcx]
0x0000020000485446 : test edx, 0x307000 ; jne 0x20000485457 ; ret
0x0000020000485472 : test edx, 0x307000 ; jne 0x20000485483 ; ret
0x00000200003c7a55 : test edx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200006161c8 : test edx, 0x8b44ffde ; ret
0x000002000017610d : test edx, 0x8b4c0015 ; ret
0x0000020000394b68 : test edx, eax ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005259fe : test edx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006d0296 : test edx, eax ; jne 0x200006d0263 ; xor eax, eax ; ret
0x00000200006e7676 : test edx, eax ; sbb al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000041fd1d : test edx, ebp ; adc eax, 0xb60f001e ; ret
0x0000020000426976 : test edx, ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000045353 : test edx, ebx ; jne 0x20000045370 ; mov eax, 1 ; ret
0x00000200006c639c : test edx, ebx ; sub dword ptr [rax + rax], eax ; add rsp, 0x38 ; ret
0x0000020000044c45 : test edx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000039535e : test edx, edi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x00000200004804c0 : test edx, edi ; ret 0x1a
0x000002000003cbc9 : test edx, edx ; add al, 0x1c ; add byte ptr [rax - 9], cl ; ret
0x0000020000153b83 : test edx, edx ; and ecx, dword ptr [rdx] ; add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000002fe8 : test edx, edx ; je 0x2000000300d ; mov edx, 0x70 ; call rax
0x0000020000020ea8 : test edx, edx ; je 0x20000020eb9 ; mov word ptr [rcx], r11w ; ret
0x0000020000054625 : test edx, edx ; je 0x20000054634 ; mov dword ptr [rcx + 0x2c], edx ; ret
0x00000200001056a2 : test edx, edx ; je 0x200001056b3 ; mov word ptr [rcx], r11w ; ret
0x0000020000119e52 : test edx, edx ; je 0x20000119e63 ; mov word ptr [rcx], r11w ; ret
0x000002000012b057 : test edx, edx ; je 0x2000012b065 ; add eax, dword ptr [rdx + 0x60] ; ret
0x000002000013c54f : test edx, edx ; je 0x2000013c55b ; call rdx
0x000002000013fb82 : test edx, edx ; je 0x2000013fb91 ; mov byte ptr [rcx], 0 ; ret
0x0000020000140664 : test edx, edx ; je 0x20000140672 ; xor ecx, ecx ; call rdx
0x000002000014b737 : test edx, edx ; je 0x2000014b741 ; call rdx
0x0000020000162127 : test edx, edx ; je 0x20000162131 ; call rdx
0x0000020000168558 : test edx, edx ; je 0x20000168564 ; jmp rdx
0x0000020000168621 : test edx, edx ; je 0x2000016862d ; jmp rdx
0x00000200001b3b78 : test edx, edx ; je 0x200001b3b8a ; mov eax, 0xc000000d ; ret
0x00000200003bc005 : test edx, edx ; je 0x200003bc00e ; ret
0x00000200003bcb54 : test edx, edx ; je 0x200003bcb64 ; mov rcx, rbx ; call rdx
0x0000020000403316 : test edx, edx ; je 0x20000403326 ; mov rcx, rdi ; call rdx
0x000002000052e581 : test edx, edx ; je 0x2000052e58d ; mov dword ptr [rdx], eax ; ret
0x00000200005997a3 : test edx, edx ; je 0x200005997b2 ; mov dword ptr [rdx], eax ; mov eax, r10d ; ret
0x00000200005f7ce2 : test edx, edx ; je 0x200005f7cf4 ; mov rcx, qword ptr [rdi + 0x30] ; call rdx
0x000002000060285a : test edx, edx ; je 0x20000602864 ; call rax
0x000002000061b28f : test edx, edx ; je 0x2000061b299 ; call rax
0x000002000064c7de : test edx, edx ; je 0x2000064c7ee ; mov rcx, rsi ; call rdx
0x000002000000577b : test edx, edx ; jne 0x20000005786 ; ret
0x000002000001dbb8 : test edx, edx ; jne 0x2000001dbc7 ; mov qword ptr [r8], rcx ; ret
0x0000020000028675 : test edx, edx ; jne 0x20000028668 ; ret
0x00000200000a8da6 : test edx, edx ; jne 0x200000a8daf ; ret
0x00000200000ba332 : test edx, edx ; jne 0x200000ba33b ; ret
0x0000020000105087 : test edx, edx ; jne 0x200001050a7 ; add rsp, 0x28 ; ret
0x000002000010703d : test edx, edx ; jne 0x2000010704d ; or byte ptr [rcx + 9], 4 ; ret
0x0000020000124efd : test edx, edx ; jne 0x20000124f0a ; xor eax, eax ; ret
0x000002000015db58 : test edx, edx ; jne 0x2000015db4e ; ret
0x0000020000174114 : test edx, edx ; jne 0x20000174123 ; mov dword ptr [r8], eax ; ret
0x000002000019e224 : test edx, edx ; jne 0x2000019e202 ; mov al, 1 ; ret
0x0000020000140870 : test edx, edx ; jne 0x200001fb379 ; ret
0x00000200003663d6 : test edx, edx ; jne 0x200003663e1 ; ret
0x0000020000364517 : test edx, edx ; jne 0x200003707e9 ; ret
0x00000200003ab544 : test edx, edx ; jne 0x200003ab551 ; mov al, 1 ; ret
0x00000200003cd9d2 : test edx, edx ; jne 0x200003cd9df ; xor eax, eax ; ret
0x0000020000404d07 : test edx, edx ; jne 0x20000404d19 ; xor eax, eax ; ret
0x000002000041cb57 : test edx, edx ; jne 0x2000041cb51 ; mov eax, 0xc000000d ; ret
0x00000200004672b1 : test edx, edx ; jne 0x200004672bc ; ret
0x0000020000475827 : test edx, edx ; jne 0x2000047583a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005437f7 : test edx, edx ; jne 0x20000543806 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200003975ba : test edx, edx ; jne 0x200006223bd ; ret
0x000002000064bee6 : test edx, edx ; jne 0x2000064bed8 ; ret
0x000002000066415a : test edx, edx ; jne 0x2000066a661 ; ret
0x00000200006d0511 : test edx, edx ; jne 0x200006d051c ; ret
0x000002000006ed44 : test edx, edx ; or byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000200006f4bc1 : test edx, edx ; ret
0x000002000039a229 : test edx, edx ; sete al ; ret
0x0000020000652dd7 : test edx, edx ; setne al ; ret
0x0000020000108386 : test edx, edx ; setne r8b ; mov eax, r8d ; ret
0x000002000058c2f6 : test edx, esi ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200006d0295 : test edx, r8d ; jne 0x200006d0264 ; xor eax, eax ; ret
0x000002000061b479 : test esi, eax ; jmp rbx
0x0000020000446c23 : test esi, ebx ; or eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200003a3d03 : test esi, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000066415d : test esi, edi ; add byte ptr fs:[rax], al ; ret
0x00000200003975bd : test esi, edx ; lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; ret
0x000002000042b550 : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000006004 : test esi, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x32], al ; div dh ; ret 0xf04
0x00000200000e6494 : test esi, esi ; je 0x200000e64f7 ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x00000200005147c9 : test esi, esi ; je 0x20000514848 ; jmp 0x20000514797
0x000002000001a695 : test esi, esi ; mov bh, 9 ; add cl, ch ; ret
0x000002000050b21f : test esp, eax ; add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0xd233
0x000002000050add6 : test esp, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx + 3], cl ; ret
0x00000200003a72e4 : test esp, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200003b7fe3 : test esp, ebx ; inc dword ptr [rsi] ; add al, ch ; ret
0x00000200005e7c16 : test esp, edi ; ret
0x00000200005f9184 : test esp, edx ; ret
0x00000200001e1f38 : test esp, esi ; dec dword ptr [rcx - 0x75] ; ret 0xc933
0x0000020000066c69 : test esp, esi ; ret
0x000002000000e1ef : test esp, esp ; and al, 0x1e ; add dh, dh ; ret
0x00000200004b0791 : test esp, esp ; enter 0x13, -0x75 ; ret 0x8d48
0x000002000070d540 : test esp, esp ; push rsi ; sti ; push rsi ; ret 0xf08
0x000002000040de8a : test qword ptr [r8 - 0x73], -0x74b6e7f4 ; ret
0x0000020000105086 : test r10d, r10d ; jne 0x200001050a8 ; add rsp, 0x28 ; ret
0x00000200003cd9d1 : test r10d, r10d ; jne 0x200003cd9e0 ; xor eax, eax ; ret
0x00000200003bbd90 : test r11, r11 ; je 0x200003bbda4 ; mov rcx, rbx ; call r11
0x00000200004f937d : test r11, r11 ; je 0x200004f938b ; call r11
0x000002000048675b : test r11, r11 ; jne 0x2000048676e ; add rsp, 0x48 ; ret
0x00000200005799b1 : test r11, r11 ; jne 0x2000057998a ; add rsp, 0x38 ; ret
0x00000200000ebdb7 : test r11b, r11b ; jne 0x200000ebddc ; add rsp, 0x28 ; ret
0x00000200000c9331 : test r11d, r11d ; jne 0x200000c9340 ; xor eax, eax ; ret
0x0000020000484341 : test r11d, r11d ; jns 0x20000484354 ; add rsp, 0x28 ; ret
0x000002000042b82c : test r13b, r13b ; je 0x2000042b818 ; call 0x20000055eac
0x00000200004b9fc2 : test r15, r15 ; je 0x200004b9fd8 ; mov rcx, r14 ; call r15
0x0000020000113a3f : test r8, r8 ; je 0x20000113a4f ; mov dword ptr [r8], r9d ; ret
0x00000200001172db : test r8, r8 ; je 0x200001172eb ; mov dword ptr [r8], edx ; ret
0x000002000014aa4c : test r8, r8 ; je 0x2000014aa5a ; jmp r8
0x000002000014b762 : test r8, r8 ; je 0x2000014b774 ; xor edx, edx ; call r8
0x0000020000643f94 : test r8, r8 ; je 0x20000643f9b ; mov dword ptr [r8], r9d ; ret
0x0000020000017040 : test r8, r8 ; jne 0x20000017064 ; xor eax, eax ; ret
0x00000200000c1f1a : test r8, r8 ; jne 0x200000c1f27 ; ret
0x00000200000d8554 : test r8, r8 ; jne 0x200000d8561 ; ret
0x00000200000d855f : test r8, r8 ; jne 0x200000d856e ; xor eax, eax ; ret
0x00000200000eec97 : test r8, r8 ; jne 0x200000eec52 ; xor eax, eax ; ret
0x0000020000108a06 : test r8, r8 ; jne 0x200001089f3 ; ret
0x000002000012dc35 : test r8, r8 ; jne 0x2000012dc4a ; ret
0x0000020000140dfe : test r8, r8 ; jne 0x20000140dc3 ; sub eax, r9d ; ret
0x00000200001540c2 : test r8, r8 ; jne 0x200001540bb ; ret
0x0000020000154424 : test r8, r8 ; jne 0x2000015441a ; ret
0x00000200004cd440 : test r8, r8 ; jne 0x200004cd434 ; ret
0x000002000012c2ed : test r8b, 2 ; je 0x2000012c2fd ; mov eax, edx ; ret
0x000002000012c2ed : test r8b, 2 ; je 0x2000012c2fe ; mov eax, edx ; ret
0x00000200004198e6 : test r8b, al ; jne 0x200004198f5 ; xor al, al ; ret
0x00000200000c02d3 : test r8b, r8b ; je 0x200000c02d0 ; mov al, 1 ; ret
0x000002000038310f : test r8b, r8b ; jne 0x2000038311e ; xor eax, eax ; ret
0x00000200004c54e4 : test r8d, r8d ; je 0x200004c54d2 ; xor al, al ; ret
0x0000020000132afb : test r8d, r8d ; jne 0x20000132b08 ; ret
0x000002000064552b : test r8d, r8d ; jne 0x2000064553a ; xor eax, eax ; ret
0x0000020000378ca9 : test r8d, r8d ; js 0x20000378cb8 ; xor eax, eax ; ret
0x00000200000da7f0 : test r9, r9 ; cmove rax, rdx ; jmp 0x200000da7eb
0x000002000013fefc : test r9, r9 ; jne 0x2000013ff0c ; mov rax, rdx ; ret
0x000002000013fefc : test r9, r9 ; jne 0x2000013ff0d ; mov rax, rdx ; ret
0x00000200001605c5 : test r9, r9 ; jne 0x200001605a9 ; xor eax, eax ; ret
0x00000200005d01b0 : test r9, r9 ; jne 0x200005d01bf ; xor al, al ; ret
0x000002000001d97c : test r9, r9 ; js 0x2000001d994 ; mov rax, rdx ; ret
0x000002000001d97c : test r9, r9 ; js 0x2000001d995 ; mov rax, rdx ; ret
0x00000200003b0113 : test r9b, r9b ; jne 0x200003b013d ; xor eax, eax ; ret
0x00000200003fda43 : test r9b, r9b ; jne 0x200003fda5e ; xor eax, eax ; ret
0x00000200004fb0c3 : test r9d, r10d ; je 0x200004fb0d2 ; mov al, 1 ; ret
0x00000200003b4387 : test r9d, r9d ; jne 0x200003b43cc ; mov eax, edi ; pop rdi ; pop rbx ; ret
0x00000200004fb0c2 : test r9w, r10w ; je 0x200004fb0d3 ; mov al, 1 ; ret
0x0000020000187b18 : test rax, r8 ; je 0x20000187b0d ; ret
0x00000200004cdbbf : test rax, rax ; cmove eax, edx ; ret
0x00000200000a9e3f : test rax, rax ; je 0x200000a9f6b ; call rax
0x00000200000e61ef : test rax, rax ; je 0x200000e61d8 ; mov qword ptr [r9], rax ; ret
0x00000200000e61c8 : test rax, rax ; je 0x200000e61d9 ; mov qword ptr [r9], rax ; ret
0x00000200000e654d : test rax, rax ; je 0x200000e655a ; ret
0x000002000013638c : test rax, rax ; je 0x2000013639c ; mov qword ptr [r8], rax ; ret
0x0000020000163bcf : test rax, rax ; je 0x20000163bdd ; call rax
0x00000200001684bb : test rax, rax ; je 0x200001684c7 ; call rax
0x0000020000168500 : test rax, rax ; je 0x2000016850c ; call rax
0x000002000016857c : test rax, rax ; je 0x20000168588 ; call rax
0x000002000016857b : test rax, rax ; je 0x20000168589 ; call rax
0x000002000016857a : test rax, rax ; je 0x2000016858a ; call rax
0x00000200001685fc : test rax, rax ; je 0x20000168608 ; call rax
0x00000200001ab38c : test rax, rax ; je 0x200001ab39d ; mov dword ptr [rax + 4], edx ; ret
0x0000020000372604 : test rax, rax ; je 0x2000036737b ; call rax
0x000002000036f15f : test rax, rax ; je 0x2000036f16b ; call rax
0x000002000036f15e : test rax, rax ; je 0x2000036f16c ; call rax
0x000002000036f15d : test rax, rax ; je 0x2000036f16d ; call rax
0x000002000036f57f : test rax, rax ; je 0x2000036f593 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x0000020000372379 : test rax, rax ; je 0x20000372397 ; mov rcx, r15 ; call rax
0x0000020000372f22 : test rax, rax ; je 0x20000372f36 ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200003b6814 : test rax, rax ; je 0x200003b6828 ; xor r9d, r9d ; jmp rax
0x0000020000401861 : test rax, rax ; je 0x200004014ef ; call rax
0x0000020000408497 : test rax, rax ; je 0x2000040850a ; mov rdx, qword ptr [rcx + 0x40] ; call rax
0x000002000043a0d1 : test rax, rax ; je 0x2000043a0e1 ; call rax
0x0000020000521bb2 : test rax, rax ; je 0x200004899c3 ; call rax
0x000002000048b9c9 : test rax, rax ; je 0x2000048b9e0 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004b351a : test rax, rax ; je 0x200004b3526 ; call rax
0x00000200004b37df : test rax, rax ; je 0x200004b37eb ; call rax
0x00000200004b5a69 : test rax, rax ; je 0x200004b5a75 ; call rax
0x00000200004c4260 : test rax, rax ; je 0x200004c426e ; call rax
0x0000020000522c71 : test rax, rax ; je 0x20000522c9e ; call rax
0x0000020000544bdb : test rax, rax ; je 0x20000544be9 ; jmp qword ptr [rax]
0x0000020000561008 : test rax, rax ; je 0x20000561014 ; call rax
0x00000200005820ec : test rax, rax ; je 0x200005820f8 ; call rax
0x00000200006430db : test rax, rax ; je 0x2000064315a ; mov r8d, esi ; call rax
0x00000200006475af : test rax, rax ; je 0x200006475c1 ; mov cl, r9b ; call rax
0x000002000064c199 : test rax, rax ; je 0x2000064c1a8 ; call rax
0x000002000064c541 : test rax, rax ; je 0x2000064c55e ; mov rcx, rbx ; call rax
0x000002000064c5c9 : test rax, rax ; je 0x2000064c5db ; mov rcx, rdi ; call rax
0x000002000064c5c8 : test rax, rax ; je 0x2000064c5dc ; mov rcx, rdi ; call rax
0x000002000064c6dd : test rax, rax ; je 0x2000064c6fa ; mov rcx, rdi ; call rax
0x000002000064c758 : test rax, rax ; je 0x2000064c76e ; mov rcx, rbx ; call rax
0x000002000064c7f8 : test rax, rax ; je 0x2000064c80a ; mov rcx, rsi ; call rax
0x0000020000126728 : test rax, rax ; jle 0x200001d79d5 ; ret
0x00000200000041d5 : test rax, rax ; jne 0x200000041e3 ; mov al, dl ; ret
0x00000200000041d5 : test rax, rax ; jne 0x200000041e4 ; mov al, dl ; ret
0x000002000002587b : test rax, rax ; jne 0x2000002587c ; mov rax, rcx ; ret
0x000002000002ac57 : test rax, rax ; jne 0x2000002ac58 ; mov rax, rcx ; ret
0x0000020000051057 : test rax, rax ; jne 0x2000005103c ; add rsp, 0x28 ; ret
0x0000020000067eb0 : test rax, rax ; jne 0x20000067eb1 ; mov rax, rcx ; ret
0x000002000006cdc3 : test rax, rax ; jne 0x2000006cdd2 ; mov al, 1 ; ret
0x00000200000bdf67 : test rax, rax ; jne 0x200000bdf76 ; xor eax, eax ; ret
0x00000200000e6565 : test rax, rax ; jne 0x200000e6578 ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000169828 : test rax, rax ; jne 0x20000169827 ; add rsp, 0x28 ; ret
0x00000200001afa1c : test rax, rax ; jne 0x200001afa2d ; mov r8, r10 ; jmp 0x200001afa41
0x00000200001b41d9 : test rax, rax ; jne 0x200001b41ea ; mov r8, r10 ; jmp 0x200001b41fe
0x00000200001f5837 : test rax, rax ; jne 0x200001f5838 ; mov rax, rcx ; ret
0x00000200001071f7 : test rax, rax ; jne 0x200001fd1f9 ; ret
0x000002000037e939 : test rax, rax ; jne 0x2000037e94c ; add rsp, 0x28 ; ret
0x00000200003dfe41 : test rax, rax ; jne 0x200003dfe4f ; mov al, dl ; ret
0x00000200003dfe41 : test rax, rax ; jne 0x200003dfe50 ; mov al, dl ; ret
0x000002000042b7f3 : test rax, rax ; jne 0x2000042b834 ; call 0x20000055eac
0x00000200004b93bc : test rax, rax ; jne 0x200004b93c9 ; ret
0x00000200004de9bb : test rax, rax ; jne 0x200004de9b8 ; ret
0x0000020000640436 : test rax, rax ; jne 0x20000640443 ; ret
0x0000020000641919 : test rax, rax ; jne 0x200006418fa ; ret
0x00000200001792e9 : test rax, rcx ; setne al ; ret
0x00000200000f155b : test rax, rcx ; setne dl ; mov eax, edx ; ret
0x00000200006001b7 : test rbx, rbx ; jne 0x2000060019d ; jmp 0x2000046c49b
0x000002000010a899 : test rcx, rcx ; je 0x2000010a8a1 ; and qword ptr [rcx], 0 ; ret
0x0000020000168473 : test rcx, rcx ; je 0x20000168481 ; jmp rcx
0x000002000016849c : test rcx, rcx ; je 0x200001684a8 ; call rcx
0x00000200001684e0 : test rcx, rcx ; je 0x200001684ee ; jmp rcx
0x00000200001685a7 : test rcx, rcx ; je 0x200001685b3 ; call rcx
0x00000200001685d3 : test rcx, rcx ; je 0x200001685df ; call rcx
0x00000200001724af : test rcx, rcx ; je 0x200001724c5 ; mov dword ptr [rcx], r10d ; ret
0x0000020000443b8f : test rcx, rcx ; je 0x20000443ba5 ; call 0x20000072e48
0x00000200004c6652 : test rcx, rcx ; je 0x200004c6662 ; add dword ptr [rcx], r11d ; ret
0x00000200004d0412 : test rcx, rcx ; je 0x200004d0424 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x0000020000521353 : test rcx, rcx ; je 0x20000521366 ; call qword ptr [rip - 0x1d3d16]
0x0000020000522d4c : test rcx, rcx ; je 0x20000522d61 ; xor edx, edx ; call 0x2000026f019
0x0000020000012a60 : test rcx, rcx ; jne 0x20000012a6d ; ret
0x00000200000165f0 : test rcx, rcx ; jne 0x200000165ff ; xor al, al ; ret
0x00000200000165ef : test rcx, rcx ; jne 0x20000016600 ; xor al, al ; ret
0x00000200000165ee : test rcx, rcx ; jne 0x20000016601 ; xor al, al ; ret
0x0000020000030bd8 : test rcx, rcx ; jne 0x20000030be7 ; xor eax, eax ; ret
0x00000200000387de : test rcx, rcx ; jne 0x200000387d8 ; mov rax, rdx ; ret
0x000002000004d67d : test rcx, rcx ; jne 0x2000004d67c ; ret
0x0000020000058f07 : test rcx, rcx ; jne 0x20000058f12 ; ret
0x0000020000059a27 : test rcx, rcx ; jne 0x20000059a26 ; ret
0x0000020000062a8b : test rcx, rcx ; jne 0x20000062a8a ; ret
0x000002000006347e : test rcx, rcx ; jne 0x2000006347d ; ret
0x00000200000a9179 : test rcx, rcx ; jne 0x200000a918a ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000e753e : test rcx, rcx ; jne 0x200000e754f ; mov rax, r9 ; ret
0x000002000012f8f0 : test rcx, rcx ; jne 0x2000012f8ff ; xor eax, eax ; ret
0x00000200001414c0 : test rcx, rcx ; jne 0x200001414cf ; xor al, al ; ret
0x0000020000153f10 : test rcx, rcx ; jne 0x20000153f1f ; xor eax, eax ; ret
0x0000020000174e76 : test rcx, rcx ; jne 0x20000174e87 ; or eax, 0xffffffff ; ret
0x000002000019abd2 : test rcx, rcx ; jne 0x2000019abd1 ; ret
0x00000200000d72da : test rcx, rcx ; jne 0x200001cb6c1 ; ret
0x00000200000fa50f : test rcx, rcx ; jne 0x200001dbf5d ; ret
0x000002000038872e : test rcx, rcx ; jne 0x2000038873b ; ret
0x000002000048f56c : test rcx, rcx ; jne 0x2000048f579 ; ret
0x000002000058be8f : test rcx, rcx ; jne 0x2000058be9e ; xor al, al ; ret
0x00000200005a7b62 : test rcx, rcx ; jne 0x200005a7b52 ; mov rax, rcx ; ret
0x0000020000020ea7 : test rdx, rdx ; je 0x20000020eba ; mov word ptr [rcx], r11w ; ret
0x00000200001056a1 : test rdx, rdx ; je 0x200001056b4 ; mov word ptr [rcx], r11w ; ret
0x0000020000119e51 : test rdx, rdx ; je 0x20000119e64 ; mov word ptr [rcx], r11w ; ret
0x000002000012b056 : test rdx, rdx ; je 0x2000012b066 ; add eax, dword ptr [rdx + 0x60] ; ret
0x000002000013c54e : test rdx, rdx ; je 0x2000013c55c ; call rdx
0x000002000013fb81 : test rdx, rdx ; je 0x2000013fb92 ; mov byte ptr [rcx], 0 ; ret
0x0000020000140663 : test rdx, rdx ; je 0x20000140673 ; xor ecx, ecx ; call rdx
0x000002000014b736 : test rdx, rdx ; je 0x2000014b742 ; call rdx
0x0000020000162126 : test rdx, rdx ; je 0x20000162132 ; call rdx
0x0000020000168557 : test rdx, rdx ; je 0x20000168565 ; jmp rdx
0x0000020000168620 : test rdx, rdx ; je 0x2000016862e ; jmp rdx
0x00000200003bcb53 : test rdx, rdx ; je 0x200003bcb65 ; mov rcx, rbx ; call rdx
0x0000020000403315 : test rdx, rdx ; je 0x20000403327 ; mov rcx, rdi ; call rdx
0x000002000052e580 : test rdx, rdx ; je 0x2000052e58e ; mov dword ptr [rdx], eax ; ret
0x00000200005f7ce1 : test rdx, rdx ; je 0x200005f7cf5 ; mov rcx, qword ptr [rdi + 0x30] ; call rdx
0x0000020000602859 : test rdx, rdx ; je 0x20000602865 ; call rax
0x000002000061b28e : test rdx, rdx ; je 0x2000061b29a ; call rax
0x000002000064c7dd : test rdx, rdx ; je 0x2000064c7ef ; mov rcx, rsi ; call rdx
0x000002000000577a : test rdx, rdx ; jne 0x20000005787 ; ret
0x000002000001dbb7 : test rdx, rdx ; jne 0x2000001dbc8 ; mov qword ptr [r8], rcx ; ret
0x0000020000028674 : test rdx, rdx ; jne 0x20000028669 ; ret
0x00000200000a8da5 : test rdx, rdx ; jne 0x200000a8db0 ; ret
0x00000200000ba331 : test rdx, rdx ; jne 0x200000ba33c ; ret
0x0000020000124efc : test rdx, rdx ; jne 0x20000124f0b ; xor eax, eax ; ret
0x00000200003663d5 : test rdx, rdx ; jne 0x200003663e2 ; ret
0x00000200004672b0 : test rdx, rdx ; jne 0x200004672bd ; ret
0x00000200005437f6 : test rdx, rdx ; jne 0x20000543807 ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000064bee5 : test rdx, rdx ; jne 0x2000064bed9 ; ret
0x00000200006d0510 : test rdx, rdx ; jne 0x200006d051d ; ret
0x0000020000652dd6 : test rdx, rdx ; setne al ; ret
0x00000200005147c8 : test rsi, rsi ; je 0x20000514849 ; jmp 0x20000514798
0x00000200000d8c6d : test sil, 3 ; je 0x200000d8c81 ; call 0x200005b4ee0
0x000002000014f142 : unpcklps xmm0, xmmword ptr [rax] ; call 0x200000771c7
0x00000200004d68e0 : vaddsubps xmm6, xmm2, xmmword ptr [rbx] ; rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000127e27 : vpaddq ymm13, ymm1, ymm1 ; ret
0x0000020000191df5 : vpminsw xmm3, xmm7, xmmword ptr [rax] ; mov al, dl ; ret
0x000002000044588f : vpmuludq xmm7, xmm11, xmm7 ; call 0x20000072e47
0x00000200001df636 : vpsrld ymm13, ymm1, xmm1 ; ret
0x000002000001e30f : vunpcklps xmm0, xmm8, xmmword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000013b411 : wait ; adc al, 0 ; ret
0x000002000056b19c : wait ; add byte ptr [rax], 0 ; add byte ptr [rcx - 9], cl ; ret
0x0000020000189ff7 : wait ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000082cbb : wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42a
0x0000020000083fdb : wait ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0xb0cc
0x00000200001744b6 : wait ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x0000020000183938 : wait ; cld ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000665a31 : wait ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000200006c0096 : wait ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c060c : wait ; dec dword ptr [rax - 0x7d] ; ret
0x000002000007c992 : wait ; fnstcw word ptr [rcx] ; ret
0x000002000052f014 : wait ; lodsb al, byte ptr [rsi] ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000200007054de : wait ; mov dh, 0xff ; mov rbx, qword ptr [rsp + 0x30] ; jmp 0x200007054b4
0x0000020000708fb7 : wait ; mov ebx, 0x8b49fffb ; ret
0x000002000060a6cc : wait ; mov esp, 0xb70fffef ; ret 0x8d48
0x00000200000e6234 : wait ; mov qword ptr [r9], rax ; ret
0x00000200001e592f : wait ; or eax, dword ptr [rax] ; ret
0x00000200004bbaa9 : wait ; push 0xdd ; push rsi ; ret
0x000002000013d221 : wait ; push rax ; sti ; call qword ptr [rax - 0x3c09aa15]
0x0000020000126684 : wait ; ret
0x0000020000661eea : wait ; ret 0x41ff
0x0000020000654bca : wait ; ret 0x48ff
0x0000020000082318 : wait ; ret 0x55a5
0x0000020000523135 : wait ; ret 0x89ff
0x0000020000665acf : wait ; ret 0xbaff
0x0000020000665ae8 : wait ; ret 0xe8ff
0x0000020000661e7f : wait ; ret 0xe9ff
0x0000020000665a68 : wait ; ret 0xff
0x00000200006019d7 : wait ; ret 0xffe6
0x00000200006e7819 : wait ; ret 0xfffe
0x00000200006dea53 : wait ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dea66
0x00000200006e429c : wait ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006e42af
0x000002000013e614 : wait ; sbb dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200001e4fbe : wait ; xor eax, 0x8b41fff5 ; ret 0xc933
0x000002000012e140 : wbinvd ; ret
0x0000020000162040 : wrmsr ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000151e41 : wrmsr ; pop rdi ; ret
0x0000020000151dec : wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200001682ef : wrmsr ; ret
0x000002000007c662 : wrmsr ; ret 0
0x00000200003619a4 : wrmsr ; wbinvd ; ret
0x00000200001388c1 : xadd dword ptr [rax + 0x5938], edx ; ret
0x00000200001425bf : xadd dword ptr [rax + rcx*8 + 0x10], esi ; jmp 0x2000003e8aa
0x00000200001425d1 : xadd dword ptr [rax + rcx*8 + 0x20], esi ; jmp 0x2000003e8aa
0x0000020000601c92 : xadd dword ptr [rbp + 0x30], edx ; mov rcx, rdi ; call 0x2000012deb5
0x00000200003976a8 : xadd dword ptr [rcx + 8], eax ; dec eax ; je 0x200003976b9 ; ret
0x00000200003cda10 : xadd dword ptr [rcx - 0x10], eax ; ret
0x0000020000122cab : xadd dword ptr [rdx + 0x10], eax ; add rsp, 0x38 ; ret
0x0000020000132aa9 : xadd dword ptr [rdx + 0x20], eax ; ret
0x000002000005eab0 : xadd dword ptr [rdx + 0x4c8], eax ; ret
0x00000200000b8b4f : xadd dword ptr [rip + 0x29762a], eax ; ret
0x00000200005115b6 : xadd dword ptr [rip - 0x299a01], eax ; inc eax ; ret
0x00000200003d8982 : xadd esi, eax ; add eax, dword ptr [rcx + 3] ; xor ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000132aa8 : xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200001425be : xadd qword ptr [r8 + rcx*8 + 0x10], r14 ; jmp 0x2000003e8ab
0x00000200001425d0 : xadd qword ptr [r8 + rcx*8 + 0x20], r14 ; jmp 0x2000003e8ab
0x00000200001388c0 : xadd qword ptr [rax + 0x5938], rdx ; ret
0x00000200003cda0f : xadd qword ptr [rcx - 0x10], rax ; ret
0x0000020000122caa : xadd qword ptr [rdx + 0x10], rax ; add rsp, 0x38 ; ret
0x000002000005eaaf : xadd qword ptr [rdx + 0x4c8], rax ; ret
0x00000200000b8b4e : xadd qword ptr [rip + 0x29762a], r8 ; ret
0x000002000042ccfb : xchg ah, dh ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x0000020000590e3f : xchg al, ah ; add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x000002000047182e : xchg al, bl ; add al, 0 ; add dh, dh ; ret
0x000002000037a35a : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000002ff60 : xchg al, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003def7d : xchg al, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000069f30b : xchg al, dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006d5f48 : xchg al, dl ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5f5d
0x00000200006d5fb9 : xchg al, dl ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; mov rax, rdx ; jmp 0x200006d5fce
0x000002000057f61f : xchg bh, bh ; ret 0xff49
0x0000020000391c1b : xchg bh, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000003e997 : xchg bh, dh ; rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200001de9a6 : xchg byte ptr [rax + 0x1a], dl ; cmc ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000041e6ee : xchg byte ptr [rax + 0x3000000], ch ; ret
0x00000200001ac784 : xchg byte ptr [rax + 0x3a000000], cl ; ret
0x00000200003c030c : xchg byte ptr [rax - 0x4ad], bl ; ret
0x000002000000ed11 : xchg byte ptr [rax - 0x7c000000], dl ; ret 0xd74
0x0000020000407f67 : xchg byte ptr [rax], ah ; add dh, dh ; ret
0x00000200004f1e59 : xchg byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001509b7 : xchg byte ptr [rbp + rax], bh ; add byte ptr [rax + 3], cl ; ret
0x000002000006f4bd : xchg byte ptr [rbp + rdi*8 - 1], al ; ljmp ptr [rbx] ; ret
0x000002000036e286 : xchg byte ptr [rbp - 0x9be0002], cl ; ret
0x0000020000021cd6 : xchg byte ptr [rbx + 0x33], dl ; add byte ptr [rbp + 2], dh ; ret
0x00000200001f51a6 : xchg byte ptr [rbx + 0x3b4dfff5], dh ; ret
0x000002000060b1dd : xchg byte ptr [rbx - 0x20], bh ; push rsi ; ret
0x0000020000497556 : xchg byte ptr [rbx], al ; add dh, dh ; ret
0x000002000025c735 : xchg byte ptr [rbx], bh ; add ah, dl ; jmp qword ptr [rdx]
0x000002000025c731 : xchg byte ptr [rbx], bh ; add al, bl ; xchg byte ptr [rbx], bh ; add ah, dl ; jmp qword ptr [rdx]
0x000002000056b196 : xchg byte ptr [rbx], ch ; ret
0x000002000025c730 : xchg byte ptr [rbx], dil ; add al, bl ; xchg byte ptr [rbx], bh ; add ah, dl ; jmp qword ptr [rdx]
0x00000200003dfed1 : xchg byte ptr [rcx + rax - 0x74b80000], al ; ret
0x00000200003e0152 : xchg byte ptr [rcx + rax - 0x74b80000], ch ; ret
0x0000020000113752 : xchg byte ptr [rcx + rax], ah ; add cl, ch ; ret 0
0x000002000043ab9e : xchg byte ptr [rcx], al ; ret
0x000002000009230c : xchg byte ptr [rcx], bl ; mov gs, word ptr [rip + 0x337635d] ; ret 0xcdf4
0x0000020000362fe4 : xchg byte ptr [rdi + 0x48], al ; cmp eax, ecx ; jae 0x20000363002 ; mov al, 1 ; ret
0x00000200003df289 : xchg byte ptr [rdi], al ; add al, ch ; xchg rax, r12 ; ret 0xbbff
0x000002000001e331 : xchg byte ptr [rdx + 0x6d], ah ; sbb al, 0 ; ret
0x0000020000665426 : xchg byte ptr [rdx + rax*8 + 0x38058bff], ch ; lodsb al, byte ptr [rsi] ; ret 0x89ff
0x00000200005893f6 : xchg byte ptr [rdx + rbp*8 - 1], bl ; add rsp, 0x58 ; ret
0x000002000012a659 : xchg byte ptr [rdx - 0x74b70013], cl ; ret
0x0000020000074d65 : xchg byte ptr [rip - 0x4ee0100], ch ; ret
0x0000020000417256 : xchg ch, ah ; ret
0x000002000051e1aa : xchg ch, al ; sti ; inc dword ptr [rcx - 0x41] ; ret
0x00000200003db11f : xchg cl, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200001dd9d1 : xchg dh, ah ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200006679ef : xchg dl, al ; inc dword ptr [rcx - 0xa] ; ret
0x00000200003f4526 : xchg dl, bh ; ret 0x48ff
0x0000020000636b12 : xchg dl, bl ; ret
0x0000020000632033 : xchg dl, cl ; adc edi, 0x3be88bff ; ret
0x00000200000f7139 : xchg dword ptr [r11], r13d ; ret 0x8948
0x0000020000021261 : xchg dword ptr [r13 + rcx*4 + 0x1c], r9d ; ret 0x3b49
0x00000200000ce675 : xchg dword ptr [r8 - 0x3f], r9d ; call 0x1ffc2302e8f
0x000002000002109e : xchg dword ptr [r9], r8d ; add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret 0x8948
0x000002000006931a : xchg dword ptr [rax + 0x3b000000], edx ; ret
0x00000200003d26b6 : xchg dword ptr [rax + rax - 0x74bc0000], edi ; ret 0xf41
0x00000200001e60d3 : xchg dword ptr [rax + rax - 0x7bbb0000], ecx ; ret 0x1074
0x00000200004e53ef : xchg dword ptr [rax + rcx*8 + 0x50], edx ; mov eax, r8d ; ret
0x00000200000ce676 : xchg dword ptr [rax - 0x3f], ecx ; call 0x1ffc2302e8e
0x0000020000147410 : xchg dword ptr [rax - 0x75000000], edx ; ret
0x0000020000082b7b : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1883
0x000002000019ef79 : xchg dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x000002000036f078 : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000064367 : xchg dword ptr [rax], edi ; fst dword ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x8348
0x0000020000111819 : xchg dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000021262 : xchg dword ptr [rbp + rcx*4 + 0x1c], ecx ; ret 0x3b49
0x00000200001c8bb7 : xchg dword ptr [rbp - 0x1b], esi ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000118860 : xchg dword ptr [rbp - 0x75], ecx ; ret 0x4466
0x00000200001f6a07 : xchg dword ptr [rbp - 0x9001b99], esi ; ret 0xf03
0x000002000066432a : xchg dword ptr [rbx + 0x54], ebp ; add byte ptr [rax], al ; xor esi, esi ; call 0x20000150585
0x00000200004e23d8 : xchg dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e23d7 : xchg dword ptr [rbx + 8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f7fb5 : xchg dword ptr [rbx - 0x18], edx ; call qword ptr [rax - 0x1c3d8617]
0x00000200007087fc : xchg dword ptr [rbx], eax ; push rbp ; pop qword ptr [rcx - 1] ; ret 0x345
0x00000200000f713a : xchg dword ptr [rbx], ebp ; ret 0x8948
0x0000020000024f91 : xchg dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200000b503f : xchg dword ptr [rbx], edx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004051d5 : xchg dword ptr [rcx + 0x1c8], edx ; ret
0x000002000015a25d : xchg dword ptr [rcx + 0x1c], eax ; ret
0x00000200005a7b80 : xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x00000200005a7b7f : xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x000002000005d6a7 : xchg dword ptr [rcx + 0x506c], eax ; ret
0x00000200001498a0 : xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x0000020000018095 : xchg dword ptr [rcx + rsi*2], esi ; add dword ptr [rax], eax ; add rcx, rdi ; jmp rcx
0x00000200003b54fe : xchg dword ptr [rcx - 0x74ffd858], esi ; ret
0x00000200001532cb : xchg dword ptr [rcx - 0x7f], eax ; ret
0x000002000002109f : xchg dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret 0x8948
0x0000020000007466 : xchg dword ptr [rcx], eax ; ret
0x0000020000642d65 : xchg dword ptr [rcx], ecx ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000a8da3 : xchg dword ptr [rcx], edx ; test rdx, rdx ; jne 0x200000a8db2 ; ret
0x00000200000ba32f : xchg dword ptr [rcx], edx ; test rdx, rdx ; jne 0x200000ba33e ; ret
0x00000200003bac16 : xchg dword ptr [rdi - 0x76000000], edi ; ret
0x000002000036467c : xchg dword ptr [rdx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000056a9bc : xchg dword ptr [rdx + rax*8], ecx ; mov eax, r9d ; ret
0x00000200005770e0 : xchg dword ptr [rdx - 0xa000000], ecx ; ret 0x7501
0x0000020000502107 : xchg dword ptr [rdx], eax ; push rcx ; sldt word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000019365e : xchg dword ptr [rdx], eax ; ret
0x00000200000b1561 : xchg dword ptr [rdx], edi ; mov al, 0x12 ; add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x0000020000007acc : xchg dword ptr [rdx], edi ; sub eax, 0x8b48001e ; ret 0xc148
0x000002000064edb5 : xchg dword ptr [rdx], edx ; ret 0x48ff
0x0000020000144df9 : xchg dword ptr [rip + 0x15a6b9], ecx ; ret
0x00000200004e4521 : xchg dword ptr [rip + 0x19ef49], ecx ; ret
0x00000200003d4c55 : xchg dword ptr [rip + 0x3b48fff1], ebx ; ret
0x0000020000395437 : xchg dword ptr [rip + 0xdb800], esp ; add al, al ; jmp 0x2000039540d
0x00000200004e4529 : xchg dword ptr [rip - 0x263737], ecx ; ret
0x00000200000c0ba0 : xchg dword ptr [rip - 0x9ffed43], edi ; ret
0x0000020000046473 : xchg dword ptr [rsi + rdi*8 - 0x74b70001], ecx ; ret
0x00000200004b7190 : xchg dword ptr [rsi - 0x6af0be01], edi ; ret
0x000002000049771e : xchg dword ptr [rsi - 0x74ffe8df], edx ; ret 0x1b9
0x00000200000808db : xchg dword ptr [rsi - 0x7dbaf7ec], eax ; lodsb al, byte ptr [rsi] ; ret
0x000002000063393e : xchg dword ptr [rsi], ebp ; in eax, dx ; call rcx
0x0000020000070055 : xchg dword ptr [rsi], edx ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000063b572 : xchg dword ptr [rsp + rdi*8], esi ; ret 0x4c1f
0x00000200007087fb : xchg dword ptr gs:[rbx], eax ; push rbp ; pop qword ptr [rcx - 1] ; ret 0x345
0x000002000038675d : xchg eax, ebp ; adc dword ptr [rax], eax ; mov qword ptr [rdi], rsi ; jmp 0x2000038672e
0x00000200006d5359 : xchg eax, ebp ; adc rax, qword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000001bc34 : xchg eax, ebp ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000005b44c : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000a379d : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000064469d : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001c7085 : xchg eax, ebp ; add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000f3307
0x000002000026f8bf : xchg eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000200004c1279 : xchg eax, ebp ; add dword ptr fs:[rax], eax ; add byte ptr [rdi], cl ; mov bh, cl ; ret
0x00000200004337d0 : xchg eax, ebp ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200006d59e6 : xchg eax, ebp ; and byte ptr [rip + 0x33480000], dl ; ret 0xd233
0x00000200005f04ec : xchg eax, ebp ; call 0x1ffc7bc90f8
0x0000020000556ad0 : xchg eax, ebp ; call 0x20074556ade
0x0000020000006eea : xchg eax, ebp ; cld ; sub byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200003e4a17 : xchg eax, ebp ; cmc ; ret
0x00000200006dcab9 : xchg eax, ebp ; cmp byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; dec dword ptr [rcx - 0x75] ; ret 0xbb41
0x000002000025baa9 : xchg eax, ebp ; cmp byte ptr [rax], al ; ret
0x00000200006a0a0e : xchg eax, ebp ; cwde ; add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200001c821f : xchg eax, ebp ; fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rcx, r10 ; call r10
0x00000200004c0d60 : xchg eax, ebp ; fmul dword ptr [rip - 0x74bc0000] ; ret
0x00000200006cd425 : xchg eax, ebp ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006e659b : xchg eax, ebp ; lock adc dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000052e857 : xchg eax, ebp ; or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200006d577f : xchg eax, ebp ; or qword ptr [rax], rax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000443fa7 : xchg eax, ebp ; out dx, al ; ret 0x48ff
0x000002000043e443 : xchg eax, ebp ; pop rdx ; mov al, 0x54 ; jnp 0x2000043e450 ; ret 0x823c
0x000002000041f2f3 : xchg eax, ebp ; popfq ; ret
0x000002000008f770 : xchg eax, ebp ; popfq ; sar esi, 1 ; xchg eax, esi ; push 0x70 ; ret 0xccb
0x00000200006d3837 : xchg eax, ebp ; push rax ; adc al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000083d39 : xchg eax, ebp ; push rsp ; ret
0x00000200000503a7 : xchg eax, ebp ; ret
0x0000020000047457 : xchg eax, ebp ; ret 0x19
0x000002000052ab96 : xchg eax, ebp ; ret 0x1db9
0x000002000003481e : xchg eax, ebp ; ret 0x27e8
0x000002000010f0be : xchg eax, ebp ; ret 0x2be8
0x0000020000119781 : xchg eax, ebp ; ret 0x3345
0x00000200004852b5 : xchg eax, ebp ; ret 0x34e8
0x0000020000548a5a : xchg eax, ebp ; ret 0x3d80
0x0000020000425370 : xchg eax, ebp ; ret 0x3d83
0x000002000066251f : xchg eax, ebp ; ret 0x41ff
0x00000200004f021f : xchg eax, ebp ; ret 0x46e8
0x0000020000666b98 : xchg eax, ebp ; ret 0x48ff
0x0000020000662508 : xchg eax, ebp ; ret 0x49ff
0x00000200004991a3 : xchg eax, ebp ; ret 0x56e8
0x00000200000e9bad : xchg eax, ebp ; ret 0x5ce8
0x0000020000666b8f : xchg eax, ebp ; ret 0x6bff
0x0000020000015fbb : xchg eax, ebp ; ret 0x7ae8
0x000002000055c6be : xchg eax, ebp ; ret 0x854d
0x0000020000378507 : xchg eax, ebp ; ret 0x8b48
0x0000020000609a71 : xchg eax, ebp ; ret 0x8fe9
0x0000020000609a5e : xchg eax, ebp ; ret 0xa2e9
0x00000200001b9219 : xchg eax, ebp ; ret 0xb0e9
0x000002000018c825 : xchg eax, ebp ; ret 0xc149
0x00000200000ee747 : xchg eax, ebp ; ret 0xc28b
0x0000020000644904 : xchg eax, ebp ; ret 0xc5e8
0x00000200006185d9 : xchg eax, ebp ; ret 0xca83
0x000002000052aca4 : xchg eax, ebp ; ret 0xd03b
0x00000200003f62a2 : xchg eax, ebp ; ret 0xe9c1
0x0000020000665eb2 : xchg eax, ebp ; ret 0xe9ff
0x00000200006546da : xchg eax, ebp ; ret 0xefe8
0x000002000052ab86 : xchg eax, ebp ; ret 0xf3e8
0x00000200004683bf : xchg eax, ebp ; ret 0xf749
0x000002000015fe3e : xchg eax, ebp ; ret 0xff41
0x00000200006c1ee7 : xchg eax, ebp ; ret 0xffbc
0x00000200003cc4b7 : xchg eax, ebp ; ret 0xfffa
0x000002000010838a : xchg eax, ebp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200003e81c6 : xchg eax, ebp ; rol cl, 0xe0 ; or byte ptr [rbx], dh ; ret
0x00000200001076f9 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000124db0 : xchg eax, ebp ; ror byte ptr [rbp - 0x75], 4 ; ret 0x8348
0x000002000018f014 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x000002000003d7b9 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200001c7b58 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x00000200005d3a4c : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x00000200001ee9bd : xchg eax, ebp ; test al, 1 ; add byte ptr [rax], al ; nop ; jmp 0x200000aac9f
0x00000200004200bf : xchg eax, ebp ; xchg eax, ebp ; ret
0x00000200000910cb : xchg eax, ebp ; xchg eax, esi ; ret 0x6280
0x00000200003eb631 : xchg eax, ebp ; xor byte ptr [rip - 0x74bc0000], cl ; ret
0x0000020000641dac : xchg eax, ebx ; add al, byte ptr [rax] ; mov qword ptr [rax], r8 ; mov al, 1 ; ret
0x0000020000641d56 : xchg eax, ebx ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200004d3e93 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000037abb3 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; and byte ptr [rbx], r12b ; ret 0x3148
0x00000200006437ee : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000016bf3d : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000004cec7 : xchg eax, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000025bb29 : xchg eax, ebx ; cmp byte ptr [rax], al ; push rsp ; ret
0x00000200003f3e18 : xchg eax, ebx ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200006cfd1b : xchg eax, ebx ; inc dword ptr [rbp - 0xf68b40] ; ret
0x000002000060e767 : xchg eax, ebx ; loope 0x2000060e76f ; nop ; jmp 0x2000042aa6c
0x0000020000576cb2 : xchg eax, ebx ; mov bh, 0xff ; add rsp, 0x58 ; ret
0x00000200006d536f : xchg eax, ebx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000020000020f89 : xchg eax, ebx ; mov byte ptr [rax], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005a712e : xchg eax, ebx ; mov dword ptr [r14 + rdx*4], eax ; inc edx ; jmp 0x200005a712a
0x00000200006e0a47 : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0a5a
0x00000200006e1242 : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1255
0x00000200006e1e5f : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1e72
0x00000200006e5395 : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e53a8
0x00000200006e5bf3 : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e5c06
0x00000200006e6463 : xchg eax, ebx ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e6476
0x000002000008e77b : xchg eax, ebx ; mov r10d, dword ptr [r11 + r12*4] ; ret
0x0000020000582a2f : xchg eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000012b549 : xchg eax, ebx ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200004223ed : xchg eax, ebx ; push rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 2], dh ; ret
0x000002000000e770 : xchg eax, ebx ; ret
0x00000200000a3a75 : xchg eax, ebx ; ret 0
0x000002000047a629 : xchg eax, ebx ; ret 0x48ff
0x000002000050e138 : xchg eax, ebx ; ret 0xc1e9
0x00000200003df2e4 : xchg eax, ebx ; ret 0xebff
0x00000200001d00a9 : xchg eax, ebx ; ret 0xffea
0x00000200000e2b89 : xchg eax, ebx ; ret 0xfffc
0x0000020000053df9 : xchg eax, ebx ; ret 0xffff
0x00000200006d1d1e : xchg eax, ebx ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d1d31
0x00000200006d8bbd : xchg eax, ebx ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d8bd0
0x00000200006da051 : xchg eax, ebx ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006da064
0x00000200006db5e0 : xchg eax, ebx ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006db5f3
0x00000200006de148 : xchg eax, ebx ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006de15b
0x000002000058be7b : xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000017bc10 : xchg eax, ebx ; str word ptr [rax - 0x75] ; mov rbx, rcx ; call qword ptr [rax]
0x000002000013c892 : xchg eax, ebx ; test al, 0x21 ; add byte ptr [rcx], al ; ret
0x000002000020d30c : xchg eax, ebx ; xlatb ; or eax, dword ptr [rax] ; test eax, 0xf0000bd7 ; ret 0x20
0x000002000004eb34 : xchg eax, ebx ; xor byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200001639d0 : xchg eax, ecx ; adc al, 0x3b ; ret 0xe672
0x00000200001639b6 : xchg eax, ecx ; adc byte ptr [rbx], bh ; ret 0x473
0x00000200004a576f : xchg eax, ecx ; adc eax, dword ptr [rax] ; ret
0x00000200000d96ab : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200005c0eca : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x9ea8a40], al ; ret 0x7401
0x00000200004cf521 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8d44
0x000002000007e175 : xchg eax, ecx ; add byte ptr [rax], al ; add cl, ch ; ret 0xffce
0x000002000006af6c : xchg eax, ecx ; add byte ptr [rdi], dl ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000037b08e : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000080175 : xchg eax, ecx ; add dword ptr [rax], eax ; add cl, ch ; ret 0xffae
0x000002000039ae29 : xchg eax, ecx ; add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000006bc88 : xchg eax, ecx ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000641de4 : xchg eax, ecx ; add rax, r9 ; ret
0x00000200006671db : xchg eax, ecx ; and byte ptr [rbp + 0x58b48ff], 0xaa ; insd dword ptr [rdi], dx ; ret 0x48ff
0x0000020000163a00 : xchg eax, ecx ; and byte ptr [rbx], bh ; ret 0xb677
0x00000200006edaab : xchg eax, ecx ; and eax, 0x8b44ffb8 ; ret
0x000002000016ab92 : xchg eax, ecx ; call 0x1ffc316aba0
0x000002000035d0a4 : xchg eax, ecx ; clc ; push rsi ; ret
0x000002000035d11b : xchg eax, ecx ; clc ; push rsi ; ret 0xf02
0x00000200005fed17 : xchg eax, ecx ; cmp al, 0xf7 ; push rsi ; ret
0x000002000023108d : xchg eax, ecx ; cmp eax, dword ptr [rax] ; xchg eax, edx ; cmp eax, dword ptr [rax] ; ret
0x00000200004eb67b : xchg eax, ecx ; cmp eax, ebx ; dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x00000200006eaebb : xchg eax, ecx ; dec dword ptr [rax + 0xb] ; ret 0x894c
0x00000200004051d6 : xchg eax, ecx ; enter 1, 0 ; ret
0x000002000041b436 : xchg eax, ecx ; enter 3, 0 ; ret
0x0000020000574c6f : xchg eax, ecx ; enter 5, 0 ; jbe 0x20000574c65 ; xor eax, eax ; ret
0x00000200000d02eb : xchg eax, ecx ; jmp qword ptr [rdi]
0x00000200000619c8 : xchg eax, ecx ; jmp r9
0x00000200005a2b8c : xchg eax, ecx ; loope 0x200005a2b96 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005a2b8b : xchg eax, ecx ; loope 0x200005a2b97 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c7123 : xchg eax, ecx ; loopne 0x200004c7130 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200001b5fce : xchg eax, ecx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000065dc9 : xchg eax, ecx ; mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006c05b7 : xchg eax, ecx ; mov qword ptr [rip - 0x368d7f], rax ; ret
0x00000200000e4dde : xchg eax, ecx ; nop ; add al, 0 ; add dh, dh ; ret 0x740f
0x00000200000ed98e : xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000002000047a6b1 : xchg eax, ecx ; nop ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7447
0x0000020000117ced : xchg eax, ecx ; or eax, dword ptr [rax] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x0000020000660a3b : xchg eax, ecx ; pop rsp ; ret
0x0000020000668263 : xchg eax, ecx ; pop rsp ; ret 0x81ff
0x000002000046c5ab : xchg eax, ecx ; push -0x74b70040 ; ret
0x0000020000012a4b : xchg eax, ecx ; push rax ; ret
0x00000200001e5690 : xchg eax, ecx ; push rsi ; ret
0x00000200001aec89 : xchg eax, ecx ; ret
0x000002000064ea05 : xchg eax, ecx ; ret 0x2ff
0x0000020000666f41 : xchg eax, ecx ; ret 0x48ff
0x0000020000084a78 : xchg eax, ecx ; ret 0x7c05
0x0000020000478edb : xchg eax, ecx ; ret 0x8bff
0x0000020000449d0c : xchg eax, ecx ; ret 0xe9ff
0x00000200003e6bab : xchg eax, ecx ; ret 0xffc8
0x00000200005dcddb : xchg eax, ecx ; ret 0xffd0
0x0000020000599e0a : xchg eax, ecx ; ret 0xffd5
0x000002000059f3d7 : xchg eax, ecx ; ret 0xffde
0x00000200005ebb90 : xchg eax, ecx ; ret 0xffe5
0x00000200005098f3 : xchg eax, ecx ; ret 0xffef
0x00000200000e670a : xchg eax, ecx ; ret 1
0x00000200006e79ba : xchg eax, ecx ; rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000000b3c7 : xchg eax, ecx ; sbb al, 0 ; ret
0x00000200001639f0 : xchg eax, ecx ; sbb al, 0x3b ; ret 0xc672
0x00000200001639e0 : xchg eax, ecx ; sbb byte ptr [rbx], bh ; ret 0xd672
0x00000200005015ab : xchg eax, ecx ; sbb byte ptr [rdi + 0x4d8b48ff], dh ; xor bh, bh ; ret
0x000002000003f02f : xchg eax, ecx ; sbb dword ptr [rax], eax ; xor al, al ; ret
0x000002000064bc73 : xchg eax, ecx ; sti ; ret
0x000002000006fb37 : xchg eax, ecx ; test al, 0xb ; add byte ptr [rax], al ; jne 0x2000006fb4a ; mov al, 1 ; ret
0x000002000001ad85 : xchg eax, ecx ; test dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000200000a97c0 : xchg eax, edi ; adc al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200005a0526 : xchg eax, edi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014fb9e : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000020000531d93 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xc985
0x0000020000447647 : xchg eax, edi ; add dword ptr [rax], eax ; mov rcx, r15 ; call 0x20000072e49
0x00000200001572e1 : xchg eax, edi ; add eax, 0xff410000 ; ret
0x00000200005cf81c : xchg eax, edi ; call 0x200131f7c25
0x00000200004db2e5 : xchg eax, edi ; call qword ptr [rax]
0x0000020000172240 : xchg eax, edi ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000002000016fbad : xchg eax, edi ; cmc ; dec dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200006f9513 : xchg eax, edi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000104f12 : xchg eax, edi ; enter 0x17, 0 ; jne 0x20000104f21 ; ret
0x000002000048faeb : xchg eax, edi ; in al, -1 ; call 0x200000b9b06
0x0000020000405075 : xchg eax, edi ; lahf ; out 0xff, al ; add rsp, 0x28 ; ret
0x0000020000666135 : xchg eax, edi ; lahf ; ret 0x41ff
0x000002000069e75b : xchg eax, edi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x2000069e76e
0x00000200006dfda8 : xchg eax, edi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006dfdbb
0x00000200005708b5 : xchg eax, edi ; mov r11b, 0xff ; add rsp, 0x58 ; ret
0x00000200003ab7a1 : xchg eax, edi ; mov rdx, r12 ; mov rcx, rbx ; call r15
0x00000200001e648f : xchg eax, edi ; out dx, al ; cmc ; dec dword ptr [rax + 0x33] ; ret 0x8549
0x0000020000090815 : xchg eax, edi ; ret
0x00000200001ab210 : xchg eax, edi ; ret 0x3eb
0x000002000066229d : xchg eax, edi ; ret 0x44ff
0x0000020000664737 : xchg eax, edi ; ret 0x48ff
0x00000200000922dd : xchg eax, edi ; ret 0x842f
0x000002000066225d : xchg eax, edi ; ret 0x8bff
0x000002000050e166 : xchg eax, edi ; ret 0x93e9
0x00000200006622d6 : xchg eax, edi ; ret 0xb2ff
0x00000200006647b6 : xchg eax, edi ; ret 0xe8ff
0x00000200004496bd : xchg eax, edi ; ret 0xe9ff
0x0000020000584e55 : xchg eax, edi ; ret 0xffff
0x000002000069e830 : xchg eax, edi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069e843
0x000002000069fe25 : xchg eax, edi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069fe38
0x00000200006d298b : xchg eax, edi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006d299e
0x00000200006dfe7e : xchg eax, edi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200006dfe91
0x00000200006648c2 : xchg eax, edi ; sar edi, -0x18 ; ret 0xadf5
0x0000020000054f22 : xchg eax, edi ; xor eax, 0x848b4900 ; ret 0x6c80
0x00000200000c44f8 : xchg eax, edx ; adc al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000ea067 : xchg eax, edx ; add al, 0 ; add dh, dh ; ret
0x00000200006343ba : xchg eax, edx ; add byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000081363 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0x7f ; ret
0x00000200006e2c08 : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x48], al ; mov eax, edx ; jmp 0x200006e2c1d
0x0000020000369ad2 : xchg eax, edx ; and esi, esi ; dec dword ptr [rax - 0x75] ; sbb cl, ch ; ret 0xfffe
0x000002000008c5a2 : xchg eax, edx ; call qword ptr [rdx]
0x00000200005792b2 : xchg eax, edx ; call rcx
0x000002000038f05a : xchg eax, edx ; call rsp
0x0000020000231095 : xchg eax, edx ; cmp eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000231091 : xchg eax, edx ; cmp eax, dword ptr [rax] ; ret
0x000002000003af84 : xchg eax, edx ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x000002000070da0e : xchg eax, edx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000648e3a : xchg eax, edx ; insb byte ptr [rdi], dx ; add al, 0 ; add rsp, 0x38 ; ret
0x00000200004e04a6 : xchg eax, edx ; insb byte ptr [rdi], dx ; ret
0x00000200005c6a90 : xchg eax, edx ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200005c6aa8
0x0000020000117a39 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001922ac : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200006bd27f : xchg eax, edx ; mov ebp, 0x158d48ff ; call rsp
0x00000200004dd47a : xchg eax, edx ; mov ebp, 0xb60fffda ; ret
0x0000020000085dd8 : xchg eax, edx ; pop rdx ; mov ah, 0x2b ; add al, 0x6a ; mov bl, 0x5c ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call rdi
0x00000200005072aa : xchg eax, edx ; pop rsi ; mov bh, 0xff ; add rsp, 0x58 ; ret
0x0000020000082d1a : xchg eax, edx ; ret
0x00000200001a539c : xchg eax, edx ; ret 0x3345
0x0000020000662799 : xchg eax, edx ; ret 0x3ff
0x0000020000495fe7 : xchg eax, edx ; ret 0x48ff
0x000002000002b0e9 : xchg eax, edx ; ret 0x8844
0x00000200001a536e : xchg eax, edx ; ret 0x8b49
0x00000200000a3ab7 : xchg eax, edx ; ret 0x9488
0x00000200004cfab5 : xchg eax, edx ; ret 0xe9ff
0x000002000043b80b : xchg eax, edx ; ret 0xebff
0x00000200003a0afe : xchg eax, edx ; ret 0xfbe9
0x00000200005b4769 : xchg eax, edx ; ret 0xffcd
0x0000020000584ffa : xchg eax, edx ; ret 0xffff
0x00000200001c5698 : xchg eax, edx ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001419fb : xchg eax, edx ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200001516ad : xchg eax, edx ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000578831 : xchg eax, edx ; sar bh, 0x81 ; ret
0x00000200006c060a : xchg eax, edx ; wait ; dec dword ptr [rax - 0x7d] ; ret
0x000002000023108c : xchg eax, edx ; xchg eax, ecx ; cmp eax, dword ptr [rax] ; xchg eax, edx ; cmp eax, dword ptr [rax] ; ret
0x00000200006e6b53 : xchg eax, esi ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; xor ecx, ecx ; call rdi
0x00000200005e4138 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], al ; ret
0x00000200001790e6 : xchg eax, esi ; add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x000002000008ee89 : xchg eax, esi ; add eax, 0x274b5945 ; in eax, 0xa ; ret
0x00000200005213d2 : xchg eax, esi ; call qword ptr [rax]
0x00000200005639fa : xchg eax, esi ; cli ; inc dword ptr [rax + rax*8 + 0x458b1874] ; ret
0x00000200004753b6 : xchg eax, esi ; cli ; ret 0x4cff
0x0000020000105976 : xchg eax, esi ; cwde ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001b6df5 : xchg eax, esi ; cwde ; add al, ch ; ret
0x00000200003b8c52 : xchg eax, esi ; cwde ; add al, ch ; ret 0xffce
0x000002000038626c : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000002c83d : xchg eax, esi ; cwde ; add byte ptr [rcx + rcx*4 + 2], cl ; ret
0x00000200006eb306 : xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000070be3c : xchg eax, esi ; dec dword ptr [rdi] ; mov bh, 0x15 ; ret
0x000002000057ba82 : xchg eax, esi ; fcom st(1) ; jmp qword ptr [rbx]
0x00000200004f0857 : xchg eax, esi ; fcos ; call 0x2000011f952
0x00000200000416f9 : xchg eax, esi ; idiv bh ; push rsi ; ret
0x00000200000c473c : xchg eax, esi ; in eax, 5 ; add byte ptr [rcx - 0x77], cl ; and r14b, r14b ; ret 0xf02
0x00000200001c9dda : xchg eax, esi ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005a7132 : xchg eax, esi ; inc edx ; jmp 0x200005a7126
0x0000020000642276 : xchg eax, esi ; int 0xc2
0x000002000042b83b : xchg eax, esi ; loopne 0x2000042b848 ; add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x00000200006e028f : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e02a2
0x00000200006e0672 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0685
0x00000200006e0e3c : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e0e4f
0x00000200006e1643 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1656
0x00000200006e1a5e : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e1a71
0x00000200006e2284 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e2297
0x00000200006e4f66 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e4f79
0x00000200006e57c4 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e57d7
0x00000200006e6033 : xchg eax, esi ; mov eax, 0x48000003 ; mov eax, edx ; jmp 0x200006e6046
0x00000200001aa87b : xchg eax, esi ; mov eax, 0x83000000 ; ret 0x457f
0x0000020000489ef8 : xchg eax, esi ; mov esi, 0x75c085ff ; ret
0x00000200004eb038 : xchg eax, esi ; mov esp, 0x48c033ff ; add esp, 0x28 ; ret
0x0000020000415126 : xchg eax, esi ; mov rcx, rdx ; call 0x200000392bb
0x0000020000629f64 : xchg eax, esi ; movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rbp - 0x607bf040] ; ret
0x0000020000091fac : xchg eax, esi ; popfq ; ret
0x000002000008f774 : xchg eax, esi ; push 0x70 ; ret 0xccb
0x0000020000069e28 : xchg eax, esi ; ret
0x0000020000478d26 : xchg eax, esi ; ret 0x41ff
0x0000020000522c4b : xchg eax, esi ; ret 0x48ff
0x00000200000910cc : xchg eax, esi ; ret 0x6280
0x000002000066242e : xchg eax, esi ; ret 0x83ff
0x0000020000664850 : xchg eax, esi ; ret 0x84ff
0x000002000066237a : xchg eax, esi ; ret 0x8bff
0x00000200000fe3ca : xchg eax, esi ; ret 0xc28b
0x000002000050e119 : xchg eax, esi ; ret 0xe0e9
0x00000200006648e5 : xchg eax, esi ; ret 0xe8ff
0x00000200006623b1 : xchg eax, esi ; ret 0xebff
0x00000200001b18ea : xchg eax, esi ; ret 0xffff
0x000002000037bd3e : xchg eax, esi ; rol bl, 0xb0 ; add ebx, eax ; xor al, al ; ret
0x000002000069c559 : xchg eax, esi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c56c
0x000002000069c697 : xchg eax, esi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069c6aa
0x000002000069f01a : xchg eax, esi ; rol byte ptr [rbx], 1 ; add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000069f02d
0x00000200001e6dbe : xchg eax, esi ; stc ; call qword ptr [rax - 0xae53d17]
0x00000200005fbffa : xchg eax, esi ; test al, 0xe0 ; push rsi ; ret
0x000002000048fb26 : xchg eax, esi ; xchg eax, edi ; in al, -1 ; call 0x200000b9b07
0x00000200003def4c : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000589ff3 : xchg eax, esp ; add byte ptr [rax], al ; add bl, ch ; and byte ptr [rcx - 0x75], al ; ret
0x0000020000161b8f : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200005ba574 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbp - 0xc58a40], al ; ret
0x000002000045bc43 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x00000200003a96dd : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x74b7e7b5], cl ; ret
0x00000200001b1614 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add dword ptr [rax - 0x7d], ecx ; ret 0xf18
0x00000200000113b3 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x0000020000036ebf : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; sbb dh, dh ; ret 0xf20
0x000002000050a79c : xchg eax, esp ; add dword ptr [eax], eax ; add rsp, 0x28 ; ret
0x00000200000d4a33 : xchg eax, esp ; and al, 0 ; add dword ptr [rax], eax ; add al, ch ; ret 0x1e8
0x00000200001f9544 : xchg eax, esp ; and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8948
0x00000200003e8787 : xchg eax, esp ; and al, 0x1b ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret 0x2240
0x00000200006112ab : xchg eax, esp ; and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000611ef6 : xchg eax, esp ; and al, 0x28 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000418a08 : xchg eax, esp ; and al, 0x70 ; or eax, dword ptr [rax] ; add bh, dh ; ret 0xf838
0x00000200000be3ca : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000057d46a : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0xb60f
0x00000200001b3283 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x000002000015220a : xchg eax, esp ; and al, 0x86 ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200005b3a07 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000020000433fd5 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200000a5342 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004125aa : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003b0c60 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000012a4e2 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200001de98b : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xa677
0x0000020000415999 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000003fe8 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000002368d : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000002000041176a : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000003f2aa : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003f2d7 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003f2f4 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003f311 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003f331 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003f351 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200000d1df5 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200003e4d58 : xchg eax, esp ; and al, 0xc0 ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf03
0x00000200005982b1 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x348
0x00000200004c28e2 : xchg eax, esp ; and al, 0xcc ; add dword ptr [rax], eax ; add al, ch ; ret
0x000002000002b3f3 : xchg eax, esp ; and al, 0xd0 ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000045bcaf : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0xba41
0x00000200004c2307 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add cl, ch ; ret 0xf999
0x00000200003ccdb7 : xchg eax, esp ; and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000005e840 : xchg eax, esp ; call qword ptr [rsi]
0x00000200004b4d48 : xchg eax, esp ; cmp dword ptr [rdi + rdi*8 + 0x60c48348], 0x5b ; ret
0x00000200003cdd28 : xchg eax, esp ; fmul dword ptr [rax] ; add byte ptr [rbp + 0x33], al ; leave ; jmp 0x200003cdcfb
0x000002000009087e : xchg eax, esp ; in al, dx ; call qword ptr [rax]
0x00000200000c4749 : xchg eax, esp ; in eax, 5 ; add dh, dh ; ret 0x7508
0x000002000039b16c : xchg eax, esp ; in eax, dx ; dec dword ptr [rbp + rcx*4 + 5] ; ret 0xcf09
0x000002000013a1a8 : xchg eax, esp ; inc dword ptr [rbp - 0x14338a40] ; ret 0x7e8b
0x000002000038fff8 : xchg eax, esp ; leave ; or al, byte ptr [rax] ; call rax
0x000002000012d0d4 : xchg eax, esp ; mov ebp, dword ptr [rax - 0x37] ; adc al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x000002000009f416 : xchg eax, esp ; movsq qword ptr [rdi], qword ptr [rsi] ; mov edx, 0x28033b3e ; ret
0x00000200006b9fe1 : xchg eax, esp ; or dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4009
0x00000200006ba009 : xchg eax, esp ; or dword ptr [rax + 1], eax ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4009
0x00000200000d1067 : xchg eax, esp ; pop rax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008db79 : xchg eax, esp ; push rax ; loop 0x2000008dbaf ; adc dword ptr [rdx], ebp ; lahf ; ret
0x00000200006c1808 : xchg eax, esp ; push rbx ; ret 0x8bff
0x0000020000135c11 : xchg eax, esp ; push rcx ; adc eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x0000020000360c6c : xchg eax, esp ; push rsi ; ret
0x0000020000661db0 : xchg eax, esp ; pushfq ; ret 0x48ff
0x000002000000767e : xchg eax, esp ; ret
0x0000020000162500 : xchg eax, esp ; ret 0x11
0x0000020000487687 : xchg eax, esp ; ret 0x1188
0x000002000037c48e : xchg eax, esp ; ret 0x15ff
0x00000200001dadd8 : xchg eax, esp ; ret 0x17
0x00000200003a09fe : xchg eax, esp ; ret 0x1789
0x000002000012ff71 : xchg eax, esp ; ret 0x2349
0x000002000039314c : xchg eax, esp ; ret 0x3345
0x000002000038aaf6 : xchg eax, esp ; ret 0x3e8
0x000002000002cc6c : xchg eax, esp ; ret 0x5488
0x00000200006f1a8d : xchg eax, esp ; ret 0x5760
0x00000200001fcf58 : xchg eax, esp ; ret 0x64c0
0x00000200001a3898 : xchg eax, esp ; ret 0x65e8
0x000002000060c646 : xchg eax, esp ; ret 0x66a8
0x000002000026f1be : xchg eax, esp ; ret 0x80
0x0000020000610753 : xchg eax, esp ; ret 0x8188
0x000002000052a502 : xchg eax, esp ; ret 0x8844
0x000002000004c8d5 : xchg eax, esp ; ret 0x8948
0x00000200005893bc : xchg eax, esp ; ret 0x8949
0x000002000013f9f6 : xchg eax, esp ; ret 0x8b44
0x00000200000713af : xchg eax, esp ; ret 0x8b48
0x0000020000385400 : xchg eax, esp ; ret 0x8b4c
0x00000200001580e4 : xchg eax, esp ; ret 0x8d48
0x0000020000401489 : xchg eax, esp ; ret 0x8d4c
0x000002000027155e : xchg eax, esp ; ret 0x9848
0x0000020000579499 : xchg eax, esp ; ret 0x9de0
0x00000200006c74ce : xchg eax, esp ; ret 0x9de9
0x00000200005e73ba : xchg eax, esp ; ret 0xb60f
0x00000200001b9930 : xchg eax, esp ; ret 0xba0f
0x00000200003df21a : xchg eax, esp ; ret 0xbbff
0x000002000042535b : xchg eax, esp ; ret 0xc084
0x0000020000017e13 : xchg eax, esp ; ret 0xcae8
0x00000200006254c7 : xchg eax, esp ; ret 0xd149
0x0000020000599927 : xchg eax, esp ; ret 0xe180
0x00000200003df26e : xchg eax, esp ; ret 0xe9ff
0x00000200003df2bf : xchg eax, esp ; ret 0xebff
0x0000020000017eb7 : xchg eax, esp ; ret 0xf2e8
0x000002000006fce0 : xchg eax, esp ; ret 0xf44
0x0000020000055147 : xchg eax, esp ; ret 0xf880
0x000002000001ad6c : xchg eax, esp ; ret 0xfc24
0x0000020000590628 : xchg eax, esp ; ret 0xffc0
0x00000200000c8868 : xchg eax, esp ; ret 0xfff9
0x000002000043b423 : xchg eax, esp ; rol byte ptr [rcx - 0x78], 0 ; movzx eax, r10b ; ret
0x000002000046b1f0 : xchg eax, esp ; rol byte ptr [rcx - 0x78], 0 ; xor eax, eax ; ret
0x0000020000036e4f : xchg eax, esp ; rol byte ptr [rcx - 0x78], 1 ; xor eax, eax ; ret
0x00000200005a0716 : xchg eax, esp ; rol cl, 0xe0 ; or eax, 0x23104733 ; ret 0x4731
0x000002000058db8c : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x00000200001c7f4a : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000015c336 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x00000200001f72b2 : xchg eax, esp ; ror byte ptr [rbp - 0x77], 4 ; ret 0x8b41
0x0000020000045187 : xchg eax, esp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200005ea286 : xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret 0xf44
0x000002000052769f : xchg eax, esp ; salc ; push rsi ; ret
0x0000020000381c38 : xchg eax, esp ; sbb edi, ecx ; inc dword ptr [rbp + 0x75840fc0] ; call qword ptr [rax]
0x0000020000039e48 : xchg eax, esp ; shr cl, 0x71 ; or eax, 0xc0330008 ; ret
0x000002000017bb31 : xchg eax, esp ; str word ptr [rax - 0x75] ; call qword ptr [rax]
0x0000020000665a6f : xchg eax, esp ; wait ; ret 0xff
0x00000200003e140c : xchg eax, esp ; xchg eax, ebp ; ret
0x00000200006623b0 : xchg eax, esp ; xchg eax, esi ; ret 0xebff
0x000002000009019a : xchg eax, esp ; xor al, 0xb1 ; or eax, 0x33bc25e6 ; ret
0x00000200003ab7a0 : xchg eax, r15d ; mov rdx, r12 ; mov rcx, rbx ; call r15
0x00000200001b18e2 : xchg eax, r8d ; mov edx, edi ; mov rcx, r12 ; call 0x200001adb8d
0x0000020000412f4c : xchg ebp, eax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004d22ef : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8348
0x00000200003870c5 : xchg ebp, ebx ; sar edi, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000660aa8 : xchg ebp, edi ; dec dword ptr [rax - 0x75] ; ret
0x000002000062f285 : xchg ebp, edi ; ret
0x00000200003d9f19 : xchg ebp, esp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200000a63b8 : xchg ebx, eax ; call qword ptr [rdx]
0x000002000002526a : xchg ebx, ecx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000044408c : xchg ebx, edx ; cmp eax, 0x8341fff7 ; ret
0x00000200005a2fbd : xchg ecx, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf903
0x00000200003de8c2 : xchg edi, esi ; dec dword ptr [rax + 0x3b] ; ret 0x1577
0x00000200001dd93c : xchg esi, esp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000499b3a : xchg esp, esi ; ret
0x00000200004e53ee : xchg qword ptr [rax + rcx*8 + 0x50], rdx ; mov eax, r8d ; ret
0x00000200004051d4 : xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x0000020000007465 : xchg qword ptr [rcx], rax ; ret
0x00000200000a8da2 : xchg qword ptr [rcx], rdx ; test rdx, rdx ; jne 0x200000a8db3 ; ret
0x00000200000ba32e : xchg qword ptr [rcx], rdx ; test rdx, rdx ; jne 0x200000ba33f ; ret
0x000002000036467b : xchg qword ptr [rdx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000056a9bb : xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200004e4520 : xchg qword ptr [rip + 0x19ef49], rcx ; ret
0x00000200004e4528 : xchg qword ptr [rip - 0x263737], rcx ; ret
0x00000200003df28d : xchg rax, r12 ; ret 0xbbff
0x000002000041f7b3 : xchg rax, r13 ; ret
0x0000020000666ba7 : xchg rax, r13 ; ret 0x48ff
0x00000200004db2e4 : xchg rax, r15 ; call qword ptr [rax]
0x00000200006647b5 : xchg rax, r15 ; ret 0xe8ff
0x000002000049298e : xchg rax, r8 ; add rdx, 0x28 ; call 0x200000bf039
0x00000200001b175a : xchg rax, r8 ; mov qword ptr [rsp + 0x58], rax ; call 0x200001ada49
0x000002000043baaf : xchg rax, r8 ; ret 0x48ff
0x0000020000063c98 : xchg rax, rcx ; push rax ; ret
0x0000020000489a26 : xlatb ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000039535f : xlatb ; add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x0000020000123ad1 : xlatb ; add rcx, 8 ; call 0x200000cfd33
0x000002000048f6e1 : xlatb ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005105b : xlatb ; add rsp, 0x28 ; ret
0x0000020000090f15 : xlatb ; and eax, edi ; ret 0xf958
0x00000200006186cd : xlatb ; call 0x1ffc3ed86cf
0x000002000052b8d3 : xlatb ; call 0x20000038f9c
0x0000020000443b0e : xlatb ; call 0x20000072e44
0x0000020000443b0d : xlatb ; call 0x20000072e45
0x00000200001aaf04 : xlatb ; call 0x200000771c3
0x000002000048b1c4 : xlatb ; call 0x200000b90e4
0x00000200004918bd : xlatb ; call 0x200000b9884
0x000002000048fddc : xlatb ; call 0x200000bf274
0x00000200004b59ec : xlatb ; call 0x200000d5ba4
0x000002000051c8fc : xlatb ; call 0x2000014a720
0x0000020000548693 : xlatb ; call 0x2000016e160
0x000002000063f5af : xlatb ; call 0x2000026f014
0x00000200003b71de : xlatb ; call 0x200003b3407
0x0000020000426396 : xlatb ; call qword ptr [rax]
0x000002000012c0d9 : xlatb ; call rax
0x0000020000644d58 : xlatb ; call rdi
0x0000020000389b25 : xlatb ; call rdx
0x00000200004890ac : xlatb ; call rsi
0x0000020000635311 : xlatb ; cli ; ret
0x0000020000162259 : xlatb ; cmp eax, 0x1890018 ; xor eax, eax ; ret
0x00000200004f8945 : xlatb ; dec dword ptr [rax - 0x75] ; ret
0x0000020000504db0 : xlatb ; dec dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x7f], ecx ; ret 0x88
0x00000200003c3229 : xlatb ; dec dword ptr [rax - 0x7f] ; ret
0x000002000057b775 : xlatb ; fcmovnbe st(0), st(1) ; push rsi ; ret
0x00000200004f5d2d : xlatb ; fcos ; call 0x2000011f9a7
0x000002000050542f : xlatb ; inc dword ptr [rcx - 1] ; ret
0x0000020000504504 : xlatb ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200005060c9 : xlatb ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000117374 : xlatb ; jmp qword ptr [rbx]
0x00000200005e745d : xlatb ; jmp rsp
0x000002000014ed97 : xlatb ; lea rcx, qword ptr [rbp + 0x18] ; call rbx
0x000002000055b0a8 : xlatb ; lock dec dword ptr [rax - 0x7d] ; ret
0x00000200005cb163 : xlatb ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x000002000008f2b0 : xlatb ; mov cl, 0xbc ; ret
0x0000020000091662 : xlatb ; mov dl, 0x76 ; ret 0xbb54
0x00000200003fee3d : xlatb ; mov dword ptr [rdx], 0x1020000 ; jmp 0x200003fee11
0x0000020000647369 : xlatb ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x00000200004018f8 : xlatb ; mov ecx, ebx ; call 0x200004b71ed
0x000002000070ef60 : xlatb ; mov ecx, r14d ; call 0x200000fb20e
0x0000020000553db3 : xlatb ; mov r12d, edi ; call 0x20000270046
0x000002000056af61 : xlatb ; mov r8d, 0x200 ; call 0x200000771c9
0x00000200000155ec : xlatb ; mov rax, qword ptr [rip + 0x341ec4] ; call rax
0x000002000000c4ae : xlatb ; mov rax, qword ptr [rip + 0x34b002] ; call rax
0x000002000000c2d7 : xlatb ; mov rax, qword ptr [rip + 0x34b1d9] ; call rax
0x000002000000c228 : xlatb ; mov rax, qword ptr [rip + 0x34b288] ; call rax
0x00000200003c3c16 : xlatb ; mov rcx, qword ptr [rsp + 0xa8] ; call rax
0x00000200001b18e5 : xlatb ; mov rcx, r12 ; call 0x200001adb8a
0x000002000003ff91 : xlatb ; mov rcx, r12 ; call r14
0x0000020000645bba : xlatb ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000368cc0 : xlatb ; mov rcx, r14 ; call 0x200000d4f16
0x000002000063111d : xlatb ; mov rcx, r14 ; call rax
0x000002000063124d : xlatb ; mov rcx, r15 ; call rax
0x00000200003cfa6a : xlatb ; mov rcx, rbp ; call r15
0x000002000017a56f : xlatb ; mov rcx, rbp ; call rax
0x0000020000026df9 : xlatb ; mov rcx, rbx ; call 0x200001a305a
0x000002000015f8bc : xlatb ; mov rcx, rbx ; call r10
0x000002000019ad94 : xlatb ; mov rcx, rbx ; call rax
0x000002000046f0c8 : xlatb ; mov rcx, rdi ; call rax
0x000002000041f62a : xlatb ; mov rcx, rsi ; call 0x2000004d1c7
0x00000200004297c2 : xlatb ; mov rcx, rsi ; call 0x20000055f67
0x00000200001aaf50 : xlatb ; mov rcx, rsi ; call 0x200000771c6
0x0000020000549f15 : xlatb ; mov rcx, rsi ; call 0x2000016aa57
0x0000020000630bc0 : xlatb ; mov rcx, rsi ; call r10
0x000002000003ffcc : xlatb ; mov rcx, rsi ; call r14
0x0000020000646ea8 : xlatb ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000020d30d : xlatb ; or eax, dword ptr [rax] ; test eax, 0xf0000bd7 ; ret 0x20
0x0000020000069635 : xlatb ; pop rcx ; and byte ptr [rax], al ; jmp 0x20000069603
0x0000020000517a13 : xlatb ; push rsi ; ret
0x000002000062afb4 : xlatb ; push rsi ; ret 0xf04
0x0000020000063ce5 : xlatb ; ret
0x00000200004804c1 : xlatb ; ret 0x1a
0x0000020000104125 : xlatb ; ret 0x2d
0x0000020000491b5e : xlatb ; ret 0x48ff
0x0000020000449a8c : xlatb ; ret 0x49ff
0x0000020000255204 : xlatb ; ret 0x58
0x00000200004a0245 : xlatb ; ret 0x90ff
0x0000020000085de2 : xlatb ; ret 0xcf31
0x00000200000dd690 : xlatb ; ret 0xd
0x0000020000539685 : xlatb ; ret 0xffbc
0x000002000036a295 : xlatb ; ret 1
0x000002000049490d : xlatb ; sar bh, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004a5071 : xlatb ; shr edx, 3 ; call 0x200000c7387
0x00000200006655f4 : xlatb ; stosb byte ptr [rdi], al ; ret 0xbff
0x0000020000157d0b : xlatb ; xor al, al ; ret
0x00000200003ba7ba : xlatb ; xor r14d, r14d ; jmp 0x200003ba6bb
0x0000020000588e0e : xlatb ; xor r8d, r8d ; xor edx, edx ; call 0x200000b5068
0x0000020000588e0d : xlatb ; xor r8d, r8d ; xor edx, edx ; call 0x200000b5069
0x000002000015b335 : xor ah, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000491370 : xor ah, ah ; push qword ptr [rdx - 0x7af917ff] ; ret 0x48ff
0x0000020000091ef0 : xor ah, byte ptr [rip - 0x61f25bcc] ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x00000200001f10f7 : xor ah, byte ptr [rsi - 0x77] ; sub r9b, 0x30 ; ret 0xfff1
0x000002000049fa05 : xor al, 0 ; add al, al ; cmove eax, esi ; jmp 0x200004bbc55
0x00000200000272b8 : xor al, 0 ; add al, al ; ret
0x0000020000083d33 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; xchg eax, ebp ; push rsp ; ret
0x000002000003a26b : xor al, 0 ; add byte ptr [rax], al ; ret
0x000002000008b940 : xor al, 0 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; add bh, bh ; jmp qword ptr [rcx]
0x0000020000013be1 : xor al, 0 ; call r8
0x000002000000c22e : xor al, 0 ; call rax
0x0000020000443802 : xor al, 0x12 ; out dx, al ; out dx, al ; call 0x20000072e47
0x0000020000004867 : xor al, 0x14 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200006a03c9 : xor al, 0x33 ; leave ; call rdi
0x00000200003b1266 : xor al, 0x38 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000066a65b : xor al, 0x3b ; ret 0x850f
0x0000020000361201 : xor al, 0x3b ; xor byte ptr [r10 + r10 - 1], r14b ; ret
0x00000200001b39af : xor al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200005438f2 : xor al, 0x48 ; mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x0000020000562d1a : xor al, 0x48 ; mov ecx, edi ; call 0x2000026f016
0x0000020000562d2c : xor al, 0x49 ; mov ecx, esi ; call 0x2000026f016
0x000002000041a4d8 : xor al, 0x4d ; ret
0x0000020000601148 : xor al, 0x5e ; lodsb al, byte ptr [rsi] ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000066a05b : xor al, 0x5f ; ret 0xff
0x00000200001413d0 : xor al, 0x60 ; and dword ptr [rax], eax ; sete al ; ret
0x00000200005820e8 : xor al, 0x66 ; sar edi, 1 ; test rax, rax ; je 0x200005820fc ; call rax
0x0000020000636af0 : xor al, 0x6a ; sar edi, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000010580 : xor al, 0x6f ; xor al, 0 ; call rax
0x0000020000018096 : xor al, 0x71 ; add dword ptr [rax], eax ; add rcx, rdi ; jmp rcx
0x0000020000131c30 : xor al, 0x73 ; out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001963a4 : xor al, 0x76 ; add bh, dh ; ret 0x5f8a
0x0000020000009ed1 : xor al, 0x88 ; jmp 0x2000004ad5d
0x00000200003fb3a9 : xor al, 0x8b ; push rcx ; adc dh, dh ; ret 0x7504
0x00000200004a5443 : xor al, 0x8b ; ret
0x00000200006653e0 : xor al, 0x8b ; ret 0x89ff
0x00000200000fed25 : xor al, 0x8b ; ret 0xc148
0x00000200003c4054 : xor al, 0x8b ; shl dword ptr [rip - 0x1000], 0x3b ; ret
0x00000200000afa64 : xor al, 0x8d ; inc dword ptr [rbx + r9*4 + 0x4c] ; ret
0x0000020000139a78 : xor al, 0x9c ; adc eax, dword ptr [rax] ; setb al ; ret
0x0000020000608b8f : xor al, 0xb ; out dx, eax ; inc dword ptr [rbx - 0x37f061f3] ; call qword ptr [rax]
0x000002000009019b : xor al, 0xb1 ; or eax, 0x33bc25e6 ; ret
0x00000200004f3d68 : xor al, 0xb8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006059ad : xor al, 0xc8 ; push rsi ; ret
0x00000200006325d8 : xor al, 0xca ; ret
0x000002000065873f : xor al, 0xdf ; ret
0x00000200001f6390 : xor al, 0xe2 ; push rsi ; ret 0xf03
0x000002000042b7f7 : xor al, 0xe8 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x41ff
0x000002000048dcc4 : xor al, 0xf ; test dword ptr [rip - 0x9ffffff], ecx ; ret
0x00000200000cb380 : xor al, 0xf5 ; inc dword ptr [rcx - 0x7d] ; ret 0x48e0
0x00000200000d7bb3 : xor al, 0xf6 ; ret
0x000002000070a688 : xor al, 0xf6 ; ret 0x7401
0x0000020000468085 : xor al, 0xf6 ; ret 0x7508
0x0000020000601384 : xor al, 0xf7 ; dec dword ptr [rax - 0x75] ; retf ; call 0x2000004d658
0x000002000015c950 : xor al, 0xf7 ; ret 0x820
0x00000200001ecf13 : xor al, 0xfa ; cmc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000063b573 : xor al, 0xfc ; ret 0x4c1f
0x00000200001ad767 : xor al, 0xff ; ret
0x0000020000069deb : xor al, 2 ; add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x7d], al ; ret
0x00000200000d4f83 : xor al, 4 ; add byte ptr [rax], al ; imul ebx ; ret 0xa380
0x0000020000182fec : xor al, 4 ; add byte ptr [rax], al ; or byte ptr [rbp - 0x75], al ; ret
0x0000020000040c36 : xor al, 4 ; add byte ptr [rax], al ; or dh, dh ; ret
0x00000200004d6aaf : xor al, 9 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000bdcc4 : xor al, al ; add rsp, 0x18 ; ret
0x0000020000159cff : xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000aa000 : xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000466abf : xor al, al ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004680a0 : xor al, al ; add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x0000020000047852 : xor al, al ; add rsp, 0x28 ; ret
0x00000200003c032e : xor al, al ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001528d6 : xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000a8370 : xor al, al ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000164e11 : xor al, al ; add rsp, 0x38 ; ret
0x00000200004d050a : xor al, al ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000438e3e : xor al, al ; add rsp, 0x48 ; pop r12 ; pop rdi ; ret
0x00000200005213e0 : xor al, al ; add rsp, 0x60 ; pop rdi ; ret
0x00000200000cc8b3 : xor al, al ; add rsp, 8 ; ret
0x0000020000396ca2 : xor al, al ; jmp 0x20000396c6c
0x00000200003e1def : xor al, al ; jmp 0x200003e1dc9
0x000002000061b468 : xor al, al ; jmp 0x200004276f8
0x0000020000536eed : xor al, al ; mov al, r8b ; add rsp, 0x38 ; ret
0x0000020000545bce : xor al, al ; mov byte ptr [rcx + 6], al ; ret
0x0000020000073a76 : xor al, al ; mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x00000200001bc9cc : xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200000cfd87 : xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003d278e : xor al, al ; pop r14 ; pop rsi ; ret
0x000002000000e01b : xor al, al ; ret
0x0000020000168b30 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000003073a : xor al, byte ptr [rax] ; call rax
0x000002000002e377 : xor al, byte ptr [rax] ; jne 0x2000002e34a ; inc r12d ; jmp 0x2000002e34a
0x00000200000342db : xor al, byte ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000029cf5 : xor al, byte ptr [rax] ; ret
0x000002000007c79c : xor al, byte ptr [rbx + 0x300ffce0] ; ret 0
0x000002000007c65b : xor al, byte ptr [rbx + 0xb41fce0] ; ror byte ptr [rdi], 0x30 ; ret 0
0x000002000050c413 : xor al, byte ptr [rcx - 0xa] ; ret 0xf01
0x000002000065129f : xor al, byte ptr [rdi + rcx + 0x20] ; ret 0xfa80
0x00000200001a0ee4 : xor al, byte ptr [rdi + rcx - 0x49] ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000bdebc : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200005ac7fd : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; setne al ; ret
0x0000020000235c81 : xor al, byte ptr [rdx] ; xor byte ptr [rdx], al ; sbb byte ptr [rdi], al ; add byte ptr [rax], bl ; ret 0xf014
0x000002000025a0e2 : xor al, byte ptr [rsi] ; sysenter
0x0000020000640909 : xor al, ch ; add edi, esp ; ret 0x8bff
0x0000020000191cc1 : xor al, ch ; and eax, 0x8bffed39 ; ret
0x00000200004072d7 : xor al, ch ; and edx, esi ; ret
0x0000020000443c02 : xor al, ch ; cmp dl, dh ; ret 0x81ff
0x000002000066614d : xor al, ch ; insd dword ptr [rdi], dx ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000017d9d1 : xor al, ch ; int 0xc3
0x00000200004495be : xor al, ch ; jl 0x2000044955e ; ret 0xe9ff
0x00000200004722f0 : xor al, ch ; or dh, bh ; ret
0x00000200001dcff7 : xor al, ch ; ret
0x0000020000574a98 : xor al, ch ; ret 0xb440
0x0000020000497618 : xor al, ch ; ret 0xbe5a
0x00000200003d11a8 : xor al, ch ; ret 0xca1b
0x0000020000408238 : xor al, ch ; ret 0xcb18
0x00000200003f3638 : xor al, ch ; ret 0xcc64
0x000002000016a9e8 : xor al, ch ; ret 0xe9ad
0x00000200004d5531 : xor al, ch ; sbb dword ptr [rax], edi ; ret 0xe9ff
0x00000200001f7fb3 : xor al, ch ; xchg dword ptr [rbx - 0x18], edx ; call qword ptr [rax - 0x1c3d8617]
0x0000020000445b07 : xor al, ch ; xor edx, ebx ; ret 0x65ff
0x00000200004d5530 : xor al, r13b ; sbb dword ptr [rax], edi ; ret 0xe9ff
0x0000020000545bcd : xor al, r8b ; mov byte ptr [rcx + 6], al ; ret
0x00000200000a46c4 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; adc dh, dh ; ret
0x00000200000f3786 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003618ce : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000a8527 : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000447f02 : xor bh, 0xff ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000364084 : xor bh, 0xff ; inc dword ptr [rcx + 3] ; ret 0xc0a3
0x000002000038105a : xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200001737de : xor bh, 0xff ; push rsi ; ret
0x000002000008a6bd : xor bh, ah ; cdqe ; movsxd rdi, esi ; ret
0x00000200006ffe4c : xor bh, al ; dec dword ptr [rbx + rcx*4 + 0x50] ; and byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x0000020000620c74 : xor bh, al ; push qword ptr [rbx] ; shr al, cl ; ret 0xa992
0x00000200001b5fba : xor bh, bh ; js 0x200001b6010 ; add esp, 0x20 ; pop rdi ; ret
0x000002000001ea88 : xor bh, bh ; ret
0x0000020000434739 : xor bh, bh ; ret 0x8348
0x00000200005a8028 : xor bh, bh ; ret 0xd03b
0x000002000066209e : xor bh, bh ; ret 0xff48
0x000002000062f47d : xor bh, ch ; inc dword ptr [rbx - 0x7cf0fa02] ; ret
0x000002000056726d : xor bh, cl ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000013ef71 : xor bh, dh ; jmp 0x1fffad5c084
0x000002000049490c : xor bh, dl ; sar bh, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200000044fe : xor bl, byte ptr [rbp - 0x74beffe3] ; ret
0x000002000046e4f3 : xor bl, ch ; add byte ptr [rcx + 3], r9b ; int 0xff
0x00000200007054e5 : xor bl, ch ; ret
0x0000020000361203 : xor byte ptr [r10 + r10 - 1], r14b ; ret
0x00000200004779bb : xor byte ptr [r10], r12b ; ret 0xd8f6
0x00000200000fff6e : xor byte ptr [r11 + 0x19f28e15], cl ; add dh, dh ; ret 0xf02
0x00000200000d4b72 : xor byte ptr [r11 + 0x3482c51], cl ; ret 0xc148
0x00000200005ff36c : xor byte ptr [r11], r14b ; shr al, cl ; ret
0x00000200001043d8 : xor byte ptr [r11], r8b ; jmp 0x200001043f5
0x000002000042dc60 : xor byte ptr [r11], spl ; ret 0x854d
0x000002000017535b : xor byte ptr [r13 + 0x1b], sil ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200000badb6 : xor byte ptr [r13 - 0x12], sil ; mov al, 1 ; ret
0x00000200000f473b : xor byte ptr [r8 + 0x3b], r9b ; ret
0x00000200000c7890 : xor byte ptr [r8 + 0xf], cl ; ret
0x0000020000368042 : xor byte ptr [r8 + 3], cl ; add ebp, ebx ; ret
0x000002000006b124 : xor byte ptr [r8 - 0x73], r9b ; ror byte ptr [r13 - 0x75], 1 ; ret
0x000002000040e75c : xor byte ptr [r8 - 0x75], cl ; ret
0x00000200000033b2 : xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200005499ab : xor byte ptr [r8 - 0x75], r9b ; ret
0x00000200004b93ba : xor byte ptr [r8 - 0x7b], cl ; sal byte ptr [rbp + 2], 0xf3 ; ret
0x000002000036fae6 : xor byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000dc8ac : xor byte ptr [rax + 0x28c48348], dl ; ret
0x000002000039cc67 : xor byte ptr [rax + 0x29], al ; add bh, dh ; ret 0xfeaf
0x00000200001549b9 : xor byte ptr [rax + 0x2b], cl ; ret
0x00000200006364ce : xor byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x000002000018d319 : xor byte ptr [rax + 0x33], cl ; ret
0x000002000019ec02 : xor byte ptr [rax + 0x3b], cl ; enter -0xf8e, -0xd ; ret
0x000002000017530c : xor byte ptr [rax + 0x3b], cl ; fbstp dword ptr [rax + rsi*2 - 0xa] ; ret
0x000002000056784a : xor byte ptr [rax + 0x3b], cl ; fdiv dword ptr [rbp - 0x3e] ; jmp 0x200005678c0
0x00000200000389bd : xor byte ptr [rax + 0x3b], cl ; ret
0x00000200003bf3da : xor byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200001277fa : xor byte ptr [rax + 0x3b], cl ; ret 0x8948
0x00000200000389bc : xor byte ptr [rax + 0x3b], r9b ; ret
0x000002000003f454 : xor byte ptr [rax + 0x63], cl ; ret
0x000002000058e6d5 : xor byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000005f9e3 : xor byte ptr [rax + 0x63], cl ; ret 0x8d49
0x00000200003680ae : xor byte ptr [rax + 0xb], cl ; ret 0x43f7
0x000002000064cccd : xor byte ptr [rax + 0xb], cl ; ret 0xf48
0x00000200000c7891 : xor byte ptr [rax + 0xf], cl ; ret
0x0000020000368043 : xor byte ptr [rax + 3], cl ; add ebp, ebx ; ret
0x00000200006f12a7 : xor byte ptr [rax + 3], cl ; ret 0x8944
0x00000200004d2820 : xor byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7f], ecx ; ret
0x00000200001e4437 : xor byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000362e9f : xor byte ptr [rax + rax], al ; add dh, dh ; ret 0x7401
0x0000020000608404 : xor byte ptr [rax + rsi*4 + 0xde990ff], bl ; ret 0xffe1
0x000002000035f901 : xor byte ptr [rax - 0x39], cl ; ret
0x000002000006d028 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc22a1840
0x00000200000e2435 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc3316d4d
0x00000200006682e1 : xor byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200006381d8 : xor byte ptr [rax - 0x73], cl ; call 0x200004644cf
0x00000200004f4405 : xor byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x40 ; call 0x200001183c1
0x00000200003ac360 : xor byte ptr [rax - 0x73], cl ; ret
0x000002000006b125 : xor byte ptr [rax - 0x73], cl ; ror byte ptr [r13 - 0x75], 1 ; ret
0x00000200000367cf : xor byte ptr [rax - 0x73], cl ; test dword ptr [rdi + 0x2b000001], ecx ; ret
0x00000200006c7352 : xor byte ptr [rax - 0x75], cl ; iretd ; call 0x200000635b2
0x0000020000601c95 : xor byte ptr [rax - 0x75], cl ; iretd ; call 0x2000012deb2
0x000002000040631f : xor byte ptr [rax - 0x75], cl ; je 0x20000406350 ; cmp byte ptr [rcx - 0x75], al ; ret
0x000002000000ee81 : xor byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000162041 : xor byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000674ea : xor byte ptr [rax - 0x75], cl ; ret
0x00000200000033b3 : xor byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200001a2ba3 : xor byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000040d1db : xor byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000177fe4 : xor byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000056cf54 : xor byte ptr [rax - 0x75], cl ; retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200005bdd6f : xor byte ptr [rax - 0x77], cl ; add esi, esi ; ret 0x7403
0x000002000039def6 : xor byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x0000020000708521 : xor byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200006c21ab : xor byte ptr [rax - 0x77], cl ; or ecx, dword ptr [rax - 0x7d] ; ret
0x000002000013b8ba : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [r13 + 0x3b], cl ; ret 0x870f
0x00000200001724ae : xor byte ptr [rax - 0x7b], cl ; leave ; je 0x200001724c6 ; mov dword ptr [rcx], r10d ; ret
0x00000200000387dd : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000387d9 ; mov rax, rdx ; ret
0x000002000051b7c7 : xor byte ptr [rax - 0x7b], cl ; ret 0xb8
0x00000200001f01fc : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200004b93bb : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 2], 0xf3 ; ret
0x000002000064c757 : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x0000020000641d29 : xor byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; jne 0x20000641d23 ; xor al, al ; ret
0x000002000017e5c2 : xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000527d5c : xor byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200001a31ba : xor byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000061a53e : xor byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000056d86c : xor byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200001f97b4 : xor byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000002000002b217 : xor byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200004fa9dd : xor byte ptr [rax - 0x7d], cl ; ret 0x4918
0x000002000005a4e2 : xor byte ptr [rax - 0x7d], cl ; ret 0x4930
0x00000200003c9802 : xor byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000200006cfdf4 : xor byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x0000020000708b8a : xor byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200000d1208 : xor byte ptr [rax - 0x7f], cl ; ret
0x0000020000368129 : xor byte ptr [rax - 0x7f], cl ; ret 0xfff
0x000002000063f525 : xor byte ptr [rax - 1], cl ; ret
0x00000200000bbfcf : xor byte ptr [rax - 9], cl ; ret
0x0000020000479c4d : xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter -0x718, -0x64 ; ret 0xffff
0x00000200005e22be : xor byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e536
0x000002000053d9b9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000015e537
0x000002000002a422 : xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000160ad4 : xor byte ptr [rax], al ; add byte ptr [rbx + rdx*2 + 0x3b], dh ; ret
0x000002000058f7b2 : xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x00000200004cd49e : xor byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x000002000006c2c4 : xor byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; call 0x1ffc21206e7
0x0000020000136d6f : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005658d : xor byte ptr [rax], al ; dec eax ; ret
0x000002000014ac92 : xor byte ptr [rax], al ; je 0x2000014aca3 ; add rsp, 0x28 ; ret
0x000002000048544a : xor byte ptr [rax], al ; jne 0x20000485453 ; ret
0x0000020000485476 : xor byte ptr [rax], al ; jne 0x2000048547f ; ret
0x0000020000054631 : xor byte ptr [rax], al ; mov dword ptr [rcx + 0x2c], eax ; ret
0x000002000017a4fa : xor byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000054f6d : xor byte ptr [rax], al ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000376b0d : xor byte ptr [rax], al ; movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x000002000038a1d4 : xor byte ptr [rax], al ; ret
0x00000200001157d7 : xor byte ptr [rax], bl ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x00000200005a1994 : xor byte ptr [rax], cl ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000046fa27 : xor byte ptr [rax], dl ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7f], al ; call qword ptr [rax]
0x000002000017535c : xor byte ptr [rbp + 0x1b], dh ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200000abfba : xor byte ptr [rbp + 0x2b], cl ; ror dword ptr [rbp - 0x75], cl ; ret
0x00000200004720ef : xor byte ptr [rbp + 0x32], al ; in al, -0x18 ; or cl, bh ; ret
0x0000020000157d06 : xor byte ptr [rbp + 0x3b], al ; sal byte ptr [rdx - 0x29], 1 ; xor al, al ; ret
0x000002000019ecec : xor byte ptr [rbp + 0x3b], cl ; ret
0x00000200001de8d7 : xor byte ptr [rbp + 0x3b], cl ; ret 0xe672
0x0000020000020ee6 : xor byte ptr [rbp + 0x48ee78c0], al ; mov eax, edx ; ret
0x000002000001be94 : xor byte ptr [rbp + 0x48f478c0], al ; mov eax, edx ; ret
0x0000020000104c07 : xor byte ptr [rbp + 0x5c880fc0], al ; ret
0x0000020000038d24 : xor byte ptr [rbp + rbp - 0x75], 0xc2 ; ret
0x00000200000204d9 : xor byte ptr [rbp + rcx*4 + 0x14], al ; add al, byte ptr [rcx - 0x75] ; ret
0x00000200004876cd : xor byte ptr [rbp + rcx*4 + 0x42], al ; call 0x200000a3957
0x00000200000badb7 : xor byte ptr [rbp - 0x12], dh ; mov al, 1 ; ret
0x000002000008e7b2 : xor byte ptr [rbp - 0x61fe205], bl ; pop rdx ; ret
0x0000020000104bb6 : xor byte ptr [rbp - 0x737af040], al ; ret
0x00000200004f32fc : xor byte ptr [rbp - 0x75], al ; ret 0x44c7
0x00000200004a8956 : xor byte ptr [rbp - 0x75], al ; ret 0x8b4d
0x00000200004b9f06 : xor byte ptr [rbp - 0x75], cl ; loope 0x200004b9e9a ; ret 0x8b4c
0x00000200006349ab : xor byte ptr [rbp - 0x75], cl ; ret
0x000002000005c815 : xor byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000470f3 : xor byte ptr [rbp - 0x75], cl ; ret 0xd78b
0x00000200001c257c : xor byte ptr [rbp - 0x7cb6ffc1], dl ; ret
0x0000020000664159 : xor byte ptr [rbp - 0x87af02e], al ; add byte ptr fs:[rax], al ; ret
0x0000020000132a90 : xor byte ptr [rbp - 0xced8a40], al ; ret
0x0000020000234fd9 : xor byte ptr [rbp], bl ; ret 0x3efb
0x00000200000fff6f : xor byte ptr [rbx + 0x19f28e15], cl ; add dh, dh ; ret 0xf02
0x0000020000707d84 : xor byte ptr [rbx + 0x3480843], cl ; ret
0x0000020000707d83 : xor byte ptr [rbx + 0x3480843], r9b ; ret
0x00000200000d4b73 : xor byte ptr [rbx + 0x3482c51], cl ; ret 0xc148
0x0000020000075251 : xor byte ptr [rbx + 0x5f], bl ; pop r12 ; ret
0x00000200005e6f96 : xor byte ptr [rbx + rbx*8 - 0x7cb7fb8b], al ; ret 0xe810
0x00000200000641f6 : xor byte ptr [rbx + rcx*4 + 0x15], cl ; ret 0x2ec1
0x00000200004a0b05 : xor byte ptr [rbx + rcx*4 + 0x4a], cl ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000015af55 : xor byte ptr [rbx + rcx*4 - 0x3b], cl ; call 0x200000771c6
0x00000200001506a1 : xor byte ptr [rbx - 0x3d], bl ; inc r10 ; jmp 0x20000150649
0x0000020000520b0c : xor byte ptr [rbx - 0x52b31731], cl ; ret 0x85ff
0x00000200004f4ea0 : xor byte ptr [rbx - 0x7cb60038], al ; ret 0x4c04
0x000002000042dc61 : xor byte ptr [rbx], ah ; ret 0x854d
0x00000200001a159d : xor byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200001043d9 : xor byte ptr [rbx], al ; jmp 0x200001043f4
0x000002000041419b : xor byte ptr [rbx], bh ; ret
0x000002000058ab11 : xor byte ptr [rbx], bh ; ret 0x820f
0x00000200005a2d8d : xor byte ptr [rbx], bh ; ret 0x830f
0x000002000014cca6 : xor byte ptr [rbx], cl ; add bh, dh ; ret
0x000002000014cce7 : xor byte ptr [rbx], cl ; add dh, dh ; ret
0x00000200003afee6 : xor byte ptr [rbx], cl ; ret
0x000002000004ef95 : xor byte ptr [rbx], cl ; ret 0x4123
0x00000200003b3272 : xor byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret 0x8948
0x000002000013633f : xor byte ptr [rbx], dh ; rol bh, 1 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000000749b : xor byte ptr [rbx], dh ; rol bh, 1 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200004e13f7 : xor byte ptr [rbx], dh ; rol byte ptr [rbp - 0x75], cl ; ret 0x45c7
0x000002000015b280 : xor byte ptr [rbx], dh ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200000c1f17 : xor byte ptr [rbx], dh ; ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x200000c1f2a ; ret
0x00000200004d2145 : xor byte ptr [rbx], dh ; shr al, cl ; ret
0x000002000046ec9a : xor byte ptr [rbx], dl ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000002000015b27f : xor byte ptr [rbx], sil ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200005e6a17 : xor byte ptr [rcx + 0x105f89ff], 0x3b ; ret
0x000002000056a6f7 : xor byte ptr [rcx + 0x1b801], cl ; add byte ptr [rax], al ; ret
0x000002000015c0e1 : xor byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000200001cd177 : xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x00000200000a909e : xor byte ptr [rcx + 0x32], al ; ret
0x000002000064d881 : xor byte ptr [rcx + 0x39], cl ; add byte ptr [rbp - 0xf], dh ; ret
0x00000200004e03b6 : xor byte ptr [rcx + 0x3b], al ; ret 0x1073
0x00000200004cd229 : xor byte ptr [rcx + 0x3b], cl ; ret
0x00000200000b087b : xor byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; ret
0x00000200000f59cf : xor byte ptr [rcx + 0x5c], al ; ret
0x00000200000ab1ad : xor byte ptr [rcx + 0x5d], al ; pop rbp ; pop rbx ; ret
0x0000020000545921 : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000f5ba6 : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200000c8cc0 : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; ret
0x0000020000636dbb : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000637b1 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f2100 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200001604f3 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x00000200000ba44e : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x0000020000139163 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000361064 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x00000200001c78de : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000019c251 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002af2a : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200003d2730 : xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x00000200000054db : xor byte ptr [rcx + 0x5e], al ; ret
0x00000200000fb1f8 : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000028e1a : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003de5bf : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000059c3 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000344e0 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000003c5dc : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x00000200001a63af : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000145e39 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005b805d : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000702f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x0000020000006394 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000003a023 : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x000002000002cab7 : xor byte ptr [rcx + 0x5f], al ; ret
0x00000200001a31ec : xor byte ptr [rcx + 0xf], al ; mov bh, 0x44 ; ret 0xf0c
0x00000200001127df : xor byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000200005bc87a : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000002000017c51b : xor byte ptr [rcx + 3], cl ; ret
0x000002000041da61 : xor byte ptr [rcx + 3], cl ; ror byte ptr [rax + 3], cl ; ret 0x8341
0x00000200005367e0 : xor byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x00000200000dfaf9 : xor byte ptr [rcx + rcx*4 + 0x49], cl ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000200000ee22e : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x200000ee225 ; ret 0x8b44
0x00000200000ee22d : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x200000ee226 ; ret 0x8b44
0x000002000063144d : xor byte ptr [rcx + rcx*4 + 0x74], al ; and al, 0x38 ; call rax
0x000002000057d655 : xor byte ptr [rcx - 0x39], cl ; cmp byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x000002000045b8f0 : xor byte ptr [rcx - 0x3f], al ; call 0x1ffc280fd03
0x00000200005f1ab3 : xor byte ptr [rcx - 0x73], al ; imul eax, dword ptr [rcx], 0xc1058d48 ; ret
0x0000020000006c70 : xor byte ptr [rcx - 0x73], al ; push rcx ; add eax, 0xe8c03345 ; ret
0x000002000056ae8d : xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x00000200005c495f : xor byte ptr [rcx - 0x74d7dbac], cl ; ret
0x00000200000bcff0 : xor byte ptr [rcx - 0x75], al ; push rsi ; ret
0x000002000014857e : xor byte ptr [rcx - 0x75], al ; ret
0x0000020000161fec : xor byte ptr [rcx - 0x75], al ; rol dword ptr [rcx - 0x75], cl ; ret
0x00000200003a899e : xor byte ptr [rcx - 0x75], cl ; add ecx, dword ptr [rcx + 0x3b] ; ret
0x0000020000012c76 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000012cc5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000002344d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002349c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000002ba74 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002bac2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000059451 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005949f ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000067457 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000674a5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000067664 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000676b3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000104229 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000104278 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010aaa1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010aaef ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000114614 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000114662 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001180de : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011812c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011904a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000119098 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200001190f4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000119142 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011c323 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011c371 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013c866 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013c8b4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000146815 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000146864 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000015e3fe : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000015e44d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001740e8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000174137 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000017c49b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017c4ea ; pop rsi ; pop r13 ; pop rdi ; ret
0x000002000017fef3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017ff41 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001864ca : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000186519 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000018a5f0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000018a63f ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200001b9de3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b9e32 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001dfe89 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dfed8 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003603df : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036042e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003633ef : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036343e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000364817 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000364865 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000036ce04 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036ce53 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000036e57a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000036e5c9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000377bc1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000377c0f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000037d4b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037d500 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000037e74a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000037e798 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000381f64 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000381fb2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000039db54 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039dba3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039e28f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039e2de ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003a1a3e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a1a8d ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003a3280 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a32ce ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003ae254 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ae2a3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b1d29 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b1d78 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003b38c1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b3910 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003b4caa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b4cf9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b5704 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b5753 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200003b5af8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b5b47 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b7374 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b73c3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003bd63c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003bd68b ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003ca672 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ca6c0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003fbd96 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fbde5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000040f7d8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040f826 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000416556 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004165a5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041d22d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041d27c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041efd0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041f01e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000041f81e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041f86d ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000041fbe3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041fc31 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000422713 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000422761 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000042f2e4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042f332 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000478cf7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000478d45 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000047f47f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047f4cd ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000482c65 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000482cb4 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200004868ed : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048693b ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004869db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000486a29 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000487a30 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000487a7f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000048bd06 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048bd55 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000048f0b5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048f103 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000499de7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000499e36 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049b4bd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049b50c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049b719 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049b767 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000049e5c8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049e616 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004a6a44 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a6a92 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004aa4df : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aa52e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004aff7c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004affcb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b0842 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b0890 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004b64a3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b64f2 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004ba92d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ba97c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004bb4a9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bb4f8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c2fad : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c2ffc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c30fe : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c314d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c398b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c39d9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c75a3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c75f2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c9d4a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c9d99 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004e8be9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e8c37 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ee768 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ee7b6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004f4a22 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f4a71 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f7005 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f7053 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004fedf7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fee46 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000503bb9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000503c08 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005061ed : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050623c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050d0d9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050d128 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000524059 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005240a8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000526c73 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000526cc2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000542752 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005427a1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000054b497 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054b4e6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000552bd7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000552c26 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000055bf66 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055bfb4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000055fe42 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055fe91 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000056342b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056347a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000563c88 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000563cd7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000056587f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005658ce ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000567170 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005671be ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000056954a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000569598 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000056bf07 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056bf56 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000056d75f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056d7ae ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000057a3e2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057a431 ; pop rdi ; pop r14 ; pop rsi ; ret
0x000002000057e1b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000057e200 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005810d5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000581123 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000581275 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005812c3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000583a19 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000583a67 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000594781 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005947cf ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000595a94 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000595ae2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000595b45 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000595b93 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000059a39c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059a3eb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a1f7d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a1fcb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005a25c3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a2612 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005a7937 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005a7985 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005ae2ea : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ae339 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005b648f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b64de ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005b82fc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b834b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005b9497 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b94e5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005b9e87 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005b9ed6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005c180d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c185c ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200005c3791 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c37e0 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200005c7279 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005c72c8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005cf913 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005cf962 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005d3232 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d3280 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064703d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064708c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000647b11 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000647b5f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000648160 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006481ae ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000653f24 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000653f73 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006be2f6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006be345 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006bebc4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bec12 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006bf98e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bf9dc ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006c0b0f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c0b5d ; pop rsp ; pop rdi ; pop rsi ; ret
0x00000200006c66ad : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c66fb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ca533 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ca581 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006d0b69 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d0bb8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006e85be : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e860d ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200006e987b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e98c9 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006f0246 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f0294 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f1d91 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f1de0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f24a9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f24f8 ; pop rdi ; pop r12 ; pop rdi ; ret
0x00000200006f6c8b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f6cd9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f6f93 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f6fe2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007080a5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007080f3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011c384 : xor byte ptr [rcx - 0x76], al ; salc ; mov qword ptr [r11 - 0x28], rax ; call r10
0x00000200004df67c : xor byte ptr [rcx - 0x77], al ; ret
0x0000020000517f9b : xor byte ptr [rcx - 0x77], cl ; adc byte ptr [rax - 0x75], r9b ; ret
0x0000020000153f89 : xor byte ptr [rcx - 0x78], al ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200005648cf : xor byte ptr [rcx - 0x7cb713bf], cl ; ret
0x0000020000150d27 : xor byte ptr [rcx - 0x7cb71fbf], cl ; ret 0x4910
0x000002000042325b : xor byte ptr [rcx - 0x7d], cl ; movsxd rsi, eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000595711 : xor byte ptr [rcx - 0x7d], cl ; ret 0x3b04
0x000002000013e979 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4130
0x00000200001b91a8 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4910
0x00000200005c0a5a : xor byte ptr [rcx - 0xa], al ; ret
0x000002000035fdd0 : xor byte ptr [rcx - 1], al ; ret
0x00000200001c57c4 : xor byte ptr [rcx - 9], al ; ret 0xffff
0x00000200000a9535 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop r15 ; ret
0x00000200004e3e5b : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000041b154 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000025a3db : xor byte ptr [rcx], al ; clts ; add byte ptr [rdi], cl ; or byte ptr fs:[rax], al ; sysenter
0x00000200003c829b : xor byte ptr [rcx], al ; je 0x200003c82b9 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bd068 : xor byte ptr [rcx], bl ; add byte ptr [rax + 0xb], cl ; ret 0xd18b
0x0000020000127976 : xor byte ptr [rcx], bl ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200000061ba : xor byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200000e9c48 : xor byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200001191f7 : xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200000ad004 : xor byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000017bb9c : xor byte ptr [rdi + rcx - 0x1574b800], dl ; call qword ptr [rax]
0x0000020000605cfd : xor byte ptr [rdi - 0x162dcc01], ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffec
0x000002000041fac5 : xor byte ptr [rdi - 0x17], bl ; mov al, 0x93 ; ret
0x000002000043a979 : xor byte ptr [rdi - 0x3d], bl ; mov esi, 2 ; jmp 0x2000043a94f
0x0000020000145ec5 : xor byte ptr [rdi - 0x3d], bl ; movzx eax, di ; jmp 0x20000145ec6
0x00000200000df9aa : xor byte ptr [rdi], 4 ; add byte ptr [rax], al ; ret
0x0000020000527dca : xor byte ptr [rdi], cl ; mov bh, 0x56 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200004cf8d5 : xor byte ptr [rdi], cl ; mov dh, 0x41 ; call 0x1ffc261842e
0x000002000020089d : xor byte ptr [rdi], cl ; test byte ptr [rdi], ch ; sub al, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200003f0297 : xor byte ptr [rdi], cl ; test byte ptr [rsi], dl ; ret
0x0000020000378c67 : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001ffe4f : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000545184 : xor byte ptr [rdx + 0x3e], 0x33 ; sar byte ptr [rax], 5 ; ret 0x13de
0x0000020000151ded : xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x000002000049990c : xor byte ptr [rdx + 0xf41ffdf], dl ; mov bh, 0x84 ; cwde ; ret 0x291c
0x0000020000361204 : xor byte ptr [rdx + rdx - 1], dh ; ret
0x000002000057ce35 : xor byte ptr [rdx - 0x3b7cb701], 0x40 ; pop rbx ; ret
0x00000200004cd212 : xor byte ptr [rdx - 0x3e7cb7ff], dh ; cmp al, ch ; ret 0xbebe
0x0000020000081299 : xor byte ptr [rdx - 0x5b], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x410c
0x00000200000bdebb : xor byte ptr [rdx], 2 ; add byte ptr [rax], al ; ret
0x0000020000242459 : xor byte ptr [rdx], ah ; ret
0x00000200004779bc : xor byte ptr [rdx], ah ; ret 0xd8f6
0x00000200005a1ca2 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000036444c : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000004eb35 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200002179db : xor byte ptr [rdx], al ; clts ; add byte ptr [rdi], cl ; push rsp ; or dword ptr [rax], eax ; sysenter
0x000002000024f723 : xor byte ptr [rdx], al ; invd ; add byte ptr [rsi + rax], al ; or al, 6 ; sysenter
0x0000020000235c83 : xor byte ptr [rdx], al ; sbb byte ptr [rdi], al ; add byte ptr [rax], bl ; ret 0xf014
0x00000200003d278d : xor byte ptr [rdx], dh ; rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x000002000052f739 : xor byte ptr [rdx], r12b ; ret
0x000002000052f717 : xor byte ptr [rdx], r12b ; ret 0xd8f6
0x00000200003eb632 : xor byte ptr [rip - 0x74bc0000], cl ; ret
0x00000200001a9c07 : xor byte ptr [rsi + 0x23], ah ; ret
0x000002000070c381 : xor byte ptr [rsi + 0x3b], ah ; fsub dword ptr [rsi + 0xf] ; ret
0x00000200004cfc8c : xor byte ptr [rsi], ah ; ret 0xe9ff
0x0000020000259f52 : xor byte ptr [rsi], al ; sysenter
0x000002000000582e : xor byte ptr [rsi], cl ; add byte ptr [rax - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200001a63ae : xor byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000630848 : xor ch, byte ptr [rax] ; fdivr st(7) ; xor eax, eax ; ret
0x000002000049df5c : xor ch, cl ; ret 0x4cff
0x000002000018e8a1 : xor cl, al ; call 0x20074db23b3
0x00000200004444ca : xor cl, bl ; ret 0xe9ff
0x0000020000596769 : xor cl, byte ptr [rax + 3] ; ret 0x4eb
0x0000020000151e1c : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000151e48 ; or rax, rdx ; pop rdi ; ret
0x0000020000151e1c : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000151e4a ; or rax, rdx ; pop rdi ; ret
0x000002000017a43e : xor cl, byte ptr [rax - 0x3f] ; loop 0x2000017a46a ; or rax, rdx ; ret
0x000002000017a43e : xor cl, byte ptr [rax - 0x3f] ; loop 0x2000017a46b ; or rax, rdx ; ret
0x00000200001889bc : xor cl, byte ptr [rax - 0x75] ; ret
0x000002000002eb70 : xor cl, byte ptr [rax - 0x75] ; ret 0x6b48
0x00000200003f8ddc : xor cl, byte ptr [rax - 0x75] ; ret 0xc2f6
0x00000200001cbddc : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000020000073b1e : xor cl, byte ptr [rax - 1] ; ret 0xff49
0x0000020000046c93 : xor cl, byte ptr [rax - 9] ; jmp 0x20049c6f7ed
0x0000020000549f1a : xor cl, byte ptr [rbx] ; ret 0x3dff
0x000002000006a706 : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200001a0371 : xor cl, ch ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003fbe09 : xor cl, ch ; jmp qword ptr [rcx]
0x00000200001ff6ab : xor cl, ch ; ret
0x00000200003cbd02 : xor cl, ch ; ret 0
0x00000200005ebf19 : xor cl, ch ; ret 0xffe5
0x00000200006cf01f : xor cl, ch ; ret 0xfffe
0x000002000017f7c0 : xor cl, cl ; mov al, cl ; ret
0x000002000057e00f : xor cl, cl ; mov al, r9b ; ret
0x00000200006cfec5 : xor dh, 0xff ; dec dword ptr [rax + 0x23] ; ret 0x8b48
0x00000200006c9501 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001826fc : xor dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000140fec : xor dh, 0xff ; dec dword ptr [rcx + 0x23] ; ret 0x8d41
0x00000200001a06a9 : xor dh, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000656d7c : xor dh, bh ; ret
0x00000200006622fe : xor dh, bh ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200006eab69 : xor dh, byte ptr [rbx + 8] ; mov r14d, r12d ; mov rax, rdx ; jmp 0x200006eab82
0x0000020000181962 : xor dh, byte ptr [rdx - 0x34] ; xor eax, eax ; ret
0x000002000047801c : xor dh, cl ; ret 0x4cff
0x0000020000582823 : xor dh, dh ; call 0x2000035e0a9
0x0000020000027d54 : xor dh, dh ; ret
0x00000200005730a4 : xor dh, dh ; ret 0x7403
0x0000020000468080 : xor dh, dh ; ret 0x7501
0x00000200004d16c2 : xor dh, dh ; ret 0x7507
0x00000200004ce14d : xor dh, dh ; ret 0xf01
0x0000020000661444 : xor dh, dh ; ret 0xf02
0x000002000064f54f : xor di, r15w ; call 0x20000270048
0x00000200001ee9fe : xor dl, 0xff ; mov byte ptr [rbp + 2], 0 ; jmp 0x200000aacb5
0x0000020000101e4a : xor dl, bh ; push rsi ; ret
0x0000020000543137 : xor dl, bl ; push rsi ; ret
0x0000020000158618 : xor dl, dl ; mov al, dl ; ret
0x000002000012a0aa : xor dl, dl ; mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200000034c2 : xor dword ptr [r11 + rcx*4 - 0x3e], eax ; jmp 0x2000000349c
0x000002000036720e : xor dword ptr [rax + 0x33], ecx ; ret 0x3348
0x00000200000d8648 : xor dword ptr [rax + 8], 1 ; mov qword ptr [rbx], r14 ; jmp 0x200000d861c
0x0000020000144a2c : xor dword ptr [rax - 0x39], ecx ; ret 1
0x0000020000133cb1 : xor dword ptr [rax - 0x3f], ecx ; loop 0x20000133cde ; or rax, rdx ; ret
0x0000020000021e46 : xor dword ptr [rax - 0x73], ecx ; add eax, 0xdc142 ; ret
0x00000200006c4c7d : xor dword ptr [rax - 0x75], ecx ; add dword ptr [rcx - 1], eax ; ret
0x00000200006cc9de : xor dword ptr [rax - 0x75], ecx ; push rdi ; cmp byte ptr [rcx - 0x75], al ; ret
0x00000200004fdb35 : xor dword ptr [rax - 0x77], ecx ; add edi, edi ; ret 0x8348
0x000002000005ff7b : xor dword ptr [rax - 0x77], ecx ; or byte ptr [rax - 0x77], cl ; or r11b, bpl ; ret 0xc5ff
0x000002000042ce21 : xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x000002000039aa33 : xor dword ptr [rax - 0x7d], ecx ; ret
0x000002000058f183 : xor dword ptr [rax - 1], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000073c5e : xor dword ptr [rax - 1], ecx ; ret 0xff49
0x0000020000084d9b : xor dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7f], bh ; ret 0x94
0x000002000003f981 : xor dword ptr [rax], eax ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000003f991
0x000002000037ff72 : xor dword ptr [rax], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005fb336 : xor dword ptr [rbp + rax - 0x18], esi ; ret 0xa697
0x000002000039b16b : xor dword ptr [rbp + rbp*8 + 0x58d4cff], edx ; ret 0xcf09
0x00000200004276bc : xor dword ptr [rbp - 0x7b], eax ; sal byte ptr [rsp + rbp + 0x48], 0x83 ; ret 0x4d08
0x00000200000034c3 : xor dword ptr [rbx + rcx*4 - 0x3e], eax ; jmp 0x2000000349b
0x00000200005f8a05 : xor dword ptr [rbx - 0x18], ebp ; push rsi ; ret
0x000002000063718d : xor dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001486ab : xor dword ptr [rbx], ecx ; idiv bh ; add rsp, 0x48 ; ret
0x00000200005ac164 : xor dword ptr [rcx + 0xd8b48ff], esi ; ret 0xce4a
0x0000020000036e22 : xor dword ptr [rcx + 0xf], eax ; mov bh, 0x42 ; add al, byte ptr [rcx - 0x7c] ; ret
0x00000200000da9ee : xor dword ptr [rcx + 1], 0 ; add dh, bh ; ret 0x5788
0x000002000043b7a9 : xor dword ptr [rcx + rcx*4 + 0x70], ecx ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000142977 : xor dword ptr [rcx - 0x74bb0008], edx ; ret 0x20b9
0x00000200001bb127 : xor dword ptr [rcx - 0x7f], ecx ; jmp rax
0x00000200001809df : xor dword ptr [rcx - 1], eax ; ret 0x8349
0x000002000058e209 : xor dword ptr [rcx - 2], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x000002000013fc42 : xor dword ptr [rcx], ecx ; add byte ptr [rcx - 0x75], al ; ret
0x000002000008f097 : xor dword ptr [rcx], esp ; ret 0x6169
0x00000200000c9a58 : xor dword ptr [rdi + 0x45000006], 0x3a ; ret
0x0000020000661894 : xor dword ptr [rdi + rcx + 0x20], eax ; ret
0x0000020000534d84 : xor dword ptr [rdi + rdi*8 + 0x479db85], 0xffffff8b ; ret
0x00000200001f69cb : xor dword ptr [rdi - 0x1c], esp ; push rsi ; ret 0xf03
0x00000200004e2f6d : xor dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bd9f4 : xor dword ptr [rdi], ecx ; test dword ptr [rax - 0x1000000], eax ; ret
0x00000200003be54b : xor dword ptr [rdx + 0x2c], edx ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000067a08 : xor dword ptr [rdx + rax], 0 ; add byte ptr [rdi], cl ; mov dh, 0xab ; ret
0x00000200003f9d9e : xor dword ptr [rsi + 0x41], ecx ; mov dword ptr [rsi + rcx*2 + 0x18], eax ; inc edx ; jmp 0x200003f9d99
0x00000200004fdd16 : xor dword ptr [rsi + 0xfc084ff], 0xffffff85 ; ret
0x00000200004bebbb : xor dword ptr [rsi + rdi*4], 0x3bf88bff ; ret
0x000002000023d249 : xor dword ptr [rsi], eax ; out 0x32, al ; add byte ptr [rax], r12b ; ret 0x23
0x0000020000239056 : xor dword ptr [rsi], eax ; sysenter
0x00000200003817ce : xor dword ptr [rsp + rax*2 - 0x75], eax ; ret 0xff3
0x00000200003817cd : xor dword ptr [rsp + rax*2 - 0x75], r8d ; ret 0xff3
0x00000200004ed7a3 : xor eax, 0x118478b ; pop rdi ; sbb al, 0x3b ; ret
0x00000200000812b0 : xor eax, 0x1a7a7c ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; call qword ptr [rcx]
0x0000020000600d45 : xor eax, 0x1bbffac ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200003ca3dc : xor eax, 0x20 ; ret
0x000002000010d65d : xor eax, 0x200f4400 ; ret
0x0000020000002ffe : xor eax, 0x28c48348 ; ret
0x0000020000164ae5 : xor eax, 0x33000002 ; rol byte ptr [rcx - 0x75], cl ; ret 0xf5f7
0x00000200003a1761 : xor eax, 0x349fff3 ; ret
0x00000200000c8959 : xor eax, 0x3b410020 ; ret 0x870f
0x00000200006c2f81 : xor eax, 0x45c7c7bf ; ret
0x0000020000140e37 : xor eax, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x000002000008e587 : xor eax, 0x484528c5 ; salc ; loopne 0x2000008e588 ; ret
0x00000200005a1817 : xor eax, 0x48ffb036 ; add esp, 0x58 ; ret
0x0000020000583d97 : xor eax, 0x48ffee4b ; add esp, 0x50 ; pop rbp ; ret
0x000002000018051f : xor eax, 0x48fffb00 ; add esp, 0x38 ; ret
0x0000020000403db7 : xor eax, 0x48ffff3c ; add esp, 0x38 ; ret
0x0000020000652ae2 : xor eax, 0x50af058b ; ret 0x85ff
0x00000200001e8ff3 : xor eax, 0x55e8ffe7 ; ret
0x0000020000460269 : xor eax, 0x81000007 ; jmp qword ptr [rax]
0x0000020000054f23 : xor eax, 0x848b4900 ; ret 0x6c80
0x000002000055fdea : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x0000020000560266 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x578d
0x00000200005600f3 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x000002000055f4c5 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x0000020000560b88 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x0000020000171733 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000002000055f11e : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x0000020000171608 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8d41
0x0000020000560d1c : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x000002000036bb37 : xor eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0xaba
0x00000200006354cf : xor eax, 0x8affc4c4 ; ret
0x00000200001cd171 : xor eax, 0x8b41ffe4 ; xor byte ptr [rcx + 0x23], al ; ret 0xc23b
0x00000200001e4fbf : xor eax, 0x8b41fff5 ; ret 0xc933
0x0000020000496f4a : xor eax, 0x8b44ffdf ; ret
0x00000200004dd615 : xor eax, 0x8b480011 ; ret 0x8b48
0x0000020000134e44 : xor eax, 0x8bca8b00 ; ret 0xe183
0x00000200000ad25c : xor eax, 0xb48b4d00 ; ret
0x00000200004d5acd : xor eax, 0xb60fffdb ; ret
0x00000200000301fc : xor eax, 0xc0000004 ; call 0x1ffc3042613
0x00000200005695c0 : xor eax, 0xc301b000 ; xor al, al ; ret
0x0000020000054f04 : xor eax, 0xd03b4800 ; jne 0x20000054f17 ; mov al, 1 ; ret
0x000002000005196d : xor eax, 0xf6fee383 ; ret
0x000002000041dd27 : xor eax, dword ptr [r8 + rcx*4] ; ret
0x000002000041dd28 : xor eax, dword ptr [rax + rcx*4] ; ret
0x0000020000398ec8 : xor eax, dword ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x00000200000272b2 : xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000019a9c7 : xor eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000021cd8 : xor eax, dword ptr [rax] ; jne 0x20000021ce3 ; ret
0x000002000001c394 : xor eax, dword ptr [rax] ; ret
0x00000200000228d1 : xor eax, dword ptr [rax] ; sub rax, rcx ; ret
0x00000200000905ba : xor eax, dword ptr [rbp + 0x5a] ; and eax, dword ptr [rcx] ; ret 0xfa65
0x0000020000463f8c : xor eax, dword ptr [rbp - 0x75] ; ret
0x000002000010434e : xor eax, dword ptr [rbp - 0x76] ; ret 0x8b41
0x00000200006394f8 : xor eax, dword ptr [rbp - 0xd08a40] ; ret
0x00000200006e390f : xor eax, dword ptr [rbx + rcx*4 - 0x18] ; lea rcx, qword ptr [rax + 8] ; call r10
0x00000200006f2050 : xor eax, dword ptr [rcx + 0x3b] ; ret
0x00000200001a5d30 : xor eax, dword ptr [rcx - 0x75] ; ret
0x0000020000657c95 : xor eax, dword ptr [rcx] ; add byte ptr [rax], dl ; ret
0x0000020000411cef : xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000384b93 : xor eax, eax ; add rsp, 0x18 ; ret
0x000002000004fb2c : xor eax, eax ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000de06f : xor eax, eax ; add rsp, 0x20 ; pop r15 ; ret
0x000002000000b370 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005d29d : xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b0146 : xor eax, eax ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000002703d : xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000480baa : xor eax, eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001044cc : xor eax, eax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000003efdf : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000b02f6 : xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046cce5 : xor eax, eax ; add rsp, 0x38 ; pop rdi ; pop rsi ; ret
0x000002000003f09e : xor eax, eax ; add rsp, 0x38 ; ret
0x00000200003bdc47 : xor eax, eax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000013e1c7 : xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000125b0a : xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000c024f : xor eax, eax ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x000002000006d0c4 : xor eax, eax ; add rsp, 0x48 ; ret
0x000002000055d497 : xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000b966f : xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000057b10c : xor eax, eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200004a9cc0 : xor eax, eax ; add rsp, 0x58 ; ret
0x000002000010ccb7 : xor eax, eax ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000115325 : xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004f8319 : xor eax, eax ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a8bc2 : xor eax, eax ; call 0x200000a4e84
0x00000200000a544f : xor eax, eax ; call 0x200000a4e88
0x0000020000175f20 : xor eax, eax ; call rax
0x0000020000172be8 : xor eax, eax ; cmp byte ptr [rcx], 0xcc ; sete al ; ret
0x000002000001d6e0 : xor eax, eax ; cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x00000200000adc9c : xor eax, eax ; cmp ecx, edx ; setg al ; ret
0x000002000019abdc : xor eax, eax ; cmp qword ptr [rcx], rax ; sete al ; ret
0x0000020000163a0d : xor eax, eax ; cmp r11d, r8d ; seta al ; ret
0x00000200007060a1 : xor eax, eax ; cmp r8, rcx ; seta al ; ret
0x00000200001a6a22 : xor eax, eax ; cmp r8d, ecx ; setne al ; ret
0x00000200005ba704 : xor eax, eax ; cmp r8w, r9w ; seta al ; ret
0x00000200005ba744 : xor eax, eax ; cmp r8w, r9w ; setb al ; ret
0x000002000012189a : xor eax, eax ; cmp rdx, rcx ; seta al ; ret
0x00000200000637c3 : xor eax, eax ; jmp 0x200000637a4
0x00000200001ea5f1 : xor eax, eax ; jmp 0x200000b68d6
0x00000200000d55c4 : xor eax, eax ; jmp 0x200000d535c
0x00000200000f1c9e : xor eax, eax ; jmp 0x200000f1c68
0x00000200001ed226 : xor eax, eax ; jmp 0x20000119529
0x00000200005fa946 : xor eax, eax ; jmp 0x2000043336b
0x000002000045c4f0 : xor eax, eax ; jmp 0x2000045c37a
0x00000200004fa558 : xor eax, eax ; jmp 0x200004fa522
0x00000200000cc42a : xor eax, eax ; lock cmpxchg dword ptr [rcx], edx ; jne 0x200000cc43b ; ret
0x000002000006cc31 : xor eax, eax ; lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000006cc44 ; ret
0x000002000039a4a5 : xor eax, eax ; lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000039a4b8 ; ret
0x000002000040605c : xor eax, eax ; mov byte ptr [rdx], cl ; ret
0x00000200000a9782 : xor eax, eax ; mov dword ptr [r10], eax ; ret
0x00000200001c2a6a : xor eax, eax ; mov dword ptr [r8 + 0xc], ecx ; ret
0x0000020000613990 : xor eax, eax ; mov dword ptr [r8], ecx ; pop rbx ; ret
0x00000200000272ca : xor eax, eax ; mov dword ptr [r8], ecx ; ret
0x000002000015b224 : xor eax, eax ; mov dword ptr [r8], r9d ; ret
0x00000200000e1a88 : xor eax, eax ; mov dword ptr [rcx + 0x10], edx ; ret
0x000002000019c90c : xor eax, eax ; mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x0000020000018019 : xor eax, eax ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000136340 : xor eax, eax ; mov dword ptr [rcx], 2 ; ret
0x000002000000749c : xor eax, eax ; mov dword ptr [rcx], 3 ; ret
0x0000020000463a96 : xor eax, eax ; mov dword ptr [rdi], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000be61c : xor eax, eax ; mov dword ptr [rdx + 0xc], ecx ; ret
0x00000200001688b8 : xor eax, eax ; mov dword ptr [rip + 0x17144c], eax ; ret
0x000002000064daae : xor eax, eax ; mov dword ptr [rip - 0x381c5a], ecx ; ret
0x000002000059a693 : xor eax, eax ; mov dword ptr [rsp + 0x20], ebx ; call 0x200003c68f4
0x000002000012f3f2 : xor eax, eax ; mov eax, r8d ; ret
0x0000020000373f8e : xor eax, eax ; mov ecx, ebx ; call rax
0x0000020000151de8 : xor eax, eax ; mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200003b71da : xor eax, eax ; mov edx, r15d ; call 0x200003b340b
0x000002000046f0c4 : xor eax, eax ; mov edx, r15d ; mov rcx, rdi ; call rax
0x00000200004cee0f : xor eax, eax ; mov qword ptr [r11], rdx ; ret
0x000002000012c1c8 : xor eax, eax ; mov qword ptr [r8], rcx ; ret
0x000002000017504d : xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x00000200004e4500 : xor eax, eax ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200004d382d : xor eax, eax ; mov qword ptr [rdx + 0x10], rax ; ret
0x000002000003bb7a : xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x00000200004d383c : xor eax, eax ; mov qword ptr [rdx + 0x18], rax ; ret
0x00000200004d381e : xor eax, eax ; mov qword ptr [rdx + 0x20], rax ; ret
0x00000200004d37f0 : xor eax, eax ; mov qword ptr [rdx + 0x28], rax ; ret
0x00000200004d380f : xor eax, eax ; mov qword ptr [rdx + 0x30], rax ; ret
0x00000200004d384b : xor eax, eax ; mov qword ptr [rdx + 0x40], rax ; ret
0x00000200004d3800 : xor eax, eax ; mov qword ptr [rdx + 0x50], rax ; ret
0x00000200004d37bc : xor eax, eax ; mov qword ptr [rdx + 8], rax ; ret
0x00000200001755f0 : xor eax, eax ; mov r9b, 1 ; lea ecx, dword ptr [r8 + 3] ; call rax
0x0000020000372f45 : xor eax, eax ; mov r9b, 1 ; lea ecx, dword ptr [r8 + 8] ; call rax
0x000002000004560d : xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000000b9f5 : xor eax, eax ; mov rcx, r10 ; call r10
0x0000020000143a27 : xor eax, eax ; mov rcx, rbx ; call 0x2000004fd27
0x000002000041f4d8 : xor eax, eax ; mov rcx, rbx ; call rax
0x00000200004fd823 : xor eax, eax ; mov rcx, rdi ; call 0x2000012ac50
0x00000200004eb487 : xor eax, eax ; mov rcx, rdi ; call r15
0x00000200004b67f6 : xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000544a8d : xor eax, eax ; mov rdx, r14 ; call 0x2000016af88
0x00000200001cf277 : xor eax, eax ; mov rdx, r14 ; mov rcx, r12 ; call r15
0x00000200001264e6 : xor eax, eax ; mov rdx, rbx ; mov rcx, r15 ; call r12
0x0000020000584e4f : xor eax, eax ; mov rdx, rsi ; call 0x200005810f7
0x00000200002002a2 : xor eax, eax ; mov rdx, rsi ; call rax
0x00000200005cded3 : xor eax, eax ; mov rdx, rsi ; mov rcx, r12 ; call rax
0x000002000057b1ab : xor eax, eax ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006cab42 : xor eax, eax ; mov rsp, r11 ; pop rbp ; ret
0x000002000012efdc : xor eax, eax ; mov word ptr [r10 + 2], r8w ; ret
0x00000200004dedfa : xor eax, eax ; mov word ptr [r8 + 6], ax ; ret
0x00000200004b7b94 : xor eax, eax ; mov word ptr [rcx + 2], dx ; ret
0x00000200003cb309 : xor eax, eax ; pop rbx ; ret
0x0000020000060c43 : xor eax, eax ; pop rdi ; ret
0x0000020000033e1d : xor eax, eax ; pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000002000000586f : xor eax, eax ; ret
0x0000020000522011 : xor eax, eax ; shl rdx, 3 ; call 0x2000014b9dd
0x0000020000063686 : xor eax, eax ; test cl, 0x10 ; je 0x20000063697 ; ret
0x00000200000c1f18 : xor eax, eax ; test r8, r8 ; jne 0x200000c1f29 ; ret
0x000002000038872c : xor eax, eax ; test rcx, rcx ; jne 0x2000038873d ; ret
0x0000020000652dd4 : xor eax, eax ; test rdx, rdx ; setne al ; ret
0x000002000015a25b : xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000019365c : xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x00000200001406ec : xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x00000200005e5dbd : xor eax, eax ; xor edx, edx ; call 0x200000a2046
0x0000020000477f0e : xor eax, eax ; xor edx, edx ; call 0x200000a2047
0x0000020000188c1e : xor eax, eax ; xor edx, edx ; call 0x200000a4e86
0x0000020000477cff : xor eax, eax ; xor edx, edx ; call 0x200000a4e87
0x0000020000588e10 : xor eax, eax ; xor edx, edx ; call 0x200000b5066
0x000002000036a290 : xor eax, eax ; xor edx, edx ; call 0x20000386576
0x0000020000476e56 : xor eax, eax ; xor edx, edx ; call qword ptr [rdi]
0x0000020000150422 : xor eax, eax ; xor edx, edx ; call r9
0x000002000051af99 : xor eax, eax ; xor edx, edx ; mov ecx, ebx ; call 0x200004b71ec
0x00000200000b14b6 : xor eax, eax ; xor edx, edx ; xor ecx, ecx ; call 0x200000dd798
0x000002000018271b : xor eax, ebp ; pop rdi ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006407db : xor eax, ebp ; ret 0x85ff
0x00000200004cbd7f : xor eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 1], cl ; ret
0x000002000064e9a3 : xor eax, ecx ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000382d12 : xor eax, ecx ; inc dword ptr [rdi + rcx - 0x49] ; fadd dword ptr [rcx - 0xa] ; ret
0x000002000037c901 : xor eax, ecx ; ret
0x0000020000411ced : xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000392aba : xor eax, edx ; and eax, 0x1f ; ret
0x000002000037c900 : xor eax, r9d ; ret
0x00000200004a3d59 : xor ebp, dword ptr [rip - 0x7af0001c] ; ret
0x000002000059efae : xor ebp, ebp ; call 0x2000005b1f4
0x00000200000d864e : xor ebp, ebx ; ret
0x0000020000121c7b : xor ebx, 0x8341ffed ; ret
0x00000200001140a3 : xor ebx, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200004e68d9 : xor ebx, ebx ; call 0x20000142b5c
0x000002000000ebfe : xor ebx, ebx ; jmp 0x2000000ebc8
0x00000200001e8138 : xor ebx, ebx ; jmp 0x20000144424
0x00000200004f66c0 : xor ebx, ebx ; jmp 0x2000037706f
0x000002000040f709 : xor ebx, ebx ; jmp 0x2000040f6d3
0x00000200003deb67 : xor ebx, ebx ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000475ca1 : xor ebx, ebx ; mov qword ptr [rbp - 0x48], rbx ; call r14
0x00000200003fc31e : xor ebx, ebx ; mov rcx, r13 ; call 0x2000002a140
0x000002000049d00c : xor ebx, ebx ; mov rcx, rdi ; call 0x200000bf2c8
0x000002000003f9d1 : xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000013fd07 : xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200005fe019 : xor ecx, dword ptr [rax - 0x166f0009] ; ret 0xe73c
0x0000020000056126 : xor ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000bc373 : xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001d2c77 : xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x000002000013c3d3 : xor ecx, dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x000002000012f065 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000002000016424c : xor ecx, dword ptr [rax - 0x7f] ; ret
0x00000200001a0ed8 : xor ecx, dword ptr [rax - 1] ; ret
0x0000020000145fb9 : xor ecx, dword ptr [rcx + 0x23] ; ret 0xbb49
0x00000200003d8988 : xor ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000554158 : xor ecx, dword ptr [rdi] ; test ecx, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000398f01 : xor ecx, eax ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200003feae5 : xor ecx, eax ; mov eax, r9d ; ret
0x0000020000144df7 : xor ecx, eax ; xchg dword ptr [rip + 0x15a6b9], ecx ; ret
0x00000200003a6f9c : xor ecx, ebp ; ret
0x0000020000605867 : xor ecx, ecx ; call 0x200000a3a48
0x00000200000b14ba : xor ecx, ecx ; call 0x200000dd794
0x00000200000c1184 : xor ecx, ecx ; call 0x200000e13b8
0x00000200001ca886 : xor ecx, ecx ; call 0x200000f6b14
0x00000200001e81c3 : xor ecx, ecx ; call 0x200001444b0
0x0000020000175d5d : xor ecx, ecx ; call 0x20000165cc9
0x000002000056dace : xor ecx, ecx ; call 0x2000019a811
0x00000200001c3667 : xor ecx, ecx ; call 0x200001c2c2d
0x00000200006be4d0 : xor ecx, ecx ; call 0x2000037b059
0x0000020000580483 : xor ecx, ecx ; call 0x2000038c6a0
0x00000200001405d9 : xor ecx, ecx ; call qword ptr [rax]
0x00000200005cbf93 : xor ecx, ecx ; call r10
0x00000200001a5c93 : xor ecx, ecx ; call r9
0x0000020000144642 : xor ecx, ecx ; call rax
0x000002000069db65 : xor ecx, ecx ; call rdi
0x0000020000140668 : xor ecx, ecx ; call rdx
0x00000200003be4c8 : xor ecx, ecx ; jmp 0x200003be4c3
0x00000200003cdd2d : xor ecx, ecx ; jmp 0x200003cdcf6
0x00000200003d5f7e : xor ecx, ecx ; jmp 0x200003d5f10
0x00000200005fa01f : xor ecx, ecx ; jmp 0x200005f9fe9
0x00000200003b681a : xor ecx, ecx ; jmp rax
0x00000200001620cd : xor ecx, ecx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200000dcb6e : xor ecx, ecx ; mov al, cl ; ret
0x00000200001b332b : xor ecx, ecx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000016bead : xor ecx, ecx ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x0000020000191e53 : xor ecx, ecx ; mov eax, r9d ; ret
0x00000200001405d2 : xor ecx, ecx ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x00000200006171ce : xor ecx, ecx ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x000002000047768d : xor ecx, ecx ; mov r8d, ebx ; add ecx, 0x1c ; call r10
0x000002000047754d : xor ecx, ecx ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x00000200003e618d : xor ecx, ecx ; mov r8d, ebx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x000002000059cddf : xor ecx, ecx ; mov rax, rcx ; ret
0x000002000013fefa : xor ecx, ecx ; test r9, r9 ; jne 0x2000013ff0e ; mov rax, rdx ; ret
0x0000020000640434 : xor ecx, ecx ; test rax, rax ; jne 0x20000640445 ; ret
0x0000020000396c9d : xor ecx, ecx ; xor edx, edx ; xor r8b, r8b ; jmp 0x20000396c71
0x000002000000b9f2 : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x00000200005e5dba : xor ecx, ecx ; xor r8d, r8d ; xor edx, edx ; call 0x200000a2049
0x0000020000579f27 : xor ecx, edx ; and rcx, 0xfffffffffffffffc ; mov rax, rcx ; ret
0x0000020000019be0 : xor ecx, edx ; xor rdx, qword ptr [rax] ; jmp rdx
0x0000020000018c38 : xor ecx, esp ; call 0x200000a4e54
0x0000020000475134 : xor ecx, esp ; call 0x200000a4e55
0x00000200004c418b : xor ecx, esp ; ret 0x90ff
0x00000200001b332a : xor ecx, r9d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x000002000015c10b : xor edi, 0xc48348ff ; ret
0x0000020000177e57 : xor edi, eax ; dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062ae1b : xor edi, ebx ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000064f552 : xor edi, edi ; call 0x20000270045
0x0000020000364073 : xor edi, edi ; inc dword ptr [rcx + 3] ; ret 0x588
0x00000200000e475d : xor edi, edi ; jmp 0x200000e4727
0x0000020000413bdc : xor edi, edi ; jmp 0x20000413950
0x00000200000914ae : xor edi, edi ; out dx, al ; jp 0x2000009150d ; ret 0x7ec2
0x000002000058dfdb : xor edi, edi ; ret
0x000002000059efac : xor edi, edi ; xor ebp, ebp ; call 0x2000005b1f6
0x0000020000449a8b : xor edi, edx ; ret 0x49ff
0x00000200003e3eb5 : xor edi, esi ; inc dword ptr [rcx - 0xa] ; ret
0x0000020000624747 : xor edi, esp ; inc dword ptr [rbx] ; ret
0x00000200005222e7 : xor edi, esp ; ret 0x49ff
0x000002000064f551 : xor edi, r15d ; call 0x20000270046
0x000002000064f550 : xor edi, r15d ; call 0x20000270047
0x0000020000019be3 : xor edx, dword ptr [rax] ; jmp rdx
0x00000200004984c1 : xor edx, dword ptr [rdi] ; sar bh, 0x83 ; ret
0x00000200006e78d3 : xor edx, dword ptr [rdx] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x000002000019e37b : xor edx, eax ; cmp r9, r10 ; jb 0x2000019e35c ; mov al, 1 ; ret
0x000002000019e46a : xor edx, eax ; cmp r9, r10 ; jb 0x2000019e444 ; mov al, 1 ; ret
0x000002000019e3c2 : xor edx, eax ; cmp r9, r10 ; jne 0x2000019e3a3 ; mov al, 1 ; ret
0x000002000019ed43 : xor edx, eax ; cmp rcx, r10 ; jb 0x2000019ed31 ; ret
0x0000020000445b09 : xor edx, ebx ; ret 0x65ff
0x0000020000411cd2 : xor edx, ecx ; mov eax, r10d ; ret
0x00000200005234c3 : xor edx, edx ; add rcx, 6 ; call 0x2000014a4ad
0x00000200003f6202 : xor edx, edx ; call 0x20000020169
0x00000200005e5dbf : xor edx, edx ; call 0x200000a2044
0x0000020000477f10 : xor edx, edx ; call 0x200000a2045
0x0000020000477150 : xor edx, edx ; call 0x200000a3955
0x0000020000188c20 : xor edx, edx ; call 0x200000a4e84
0x0000020000477d01 : xor edx, edx ; call 0x200000a4e85
0x0000020000101e46 : xor edx, edx ; call 0x200000a4e88
0x0000020000588e12 : xor edx, edx ; call 0x200000b5064
0x00000200004967bf : xor edx, edx ; call 0x200000b9f45
0x000002000049df59 : xor edx, edx ; call 0x200000cac95
0x0000020000127148 : xor edx, edx ; call 0x200001533dc
0x0000020000462de5 : xor edx, edx ; call 0x2000026f014
0x000002000064081e : xor edx, edx ; call 0x2000026f015
0x0000020000143a91 : xor edx, edx ; call 0x2000026f019
0x000002000036a292 : xor edx, edx ; call 0x20000386574
0x0000020000476e58 : xor edx, edx ; call qword ptr [rdi]
0x00000200000aad6b : xor edx, edx ; call qword ptr [rsi]
0x0000020000407999 : xor edx, edx ; call r11
0x000002000062c135 : xor edx, edx ; call r14
0x000002000014b767 : xor edx, edx ; call r8
0x0000020000150424 : xor edx, edx ; call r9
0x00000200001fb557 : xor edx, edx ; div rcx ; mov rax, rdx ; ret
0x00000200003efa33 : xor edx, edx ; jmp 0x200003ebccd
0x0000020000605d00 : xor edx, edx ; jmp 0x200004d1fb2
0x00000200006c9479 : xor edx, edx ; jmp 0x200006c9623
0x000002000042ace0 : xor edx, edx ; lea rcx, qword ptr [rbp + 0x10] ; call 0x20000052469
0x00000200004baa2a : xor edx, edx ; mov cl, byte ptr [rax + 0x4c] ; call 0x200000dbad8
0x000002000064ca16 : xor edx, edx ; mov eax, r10d ; ret
0x0000020000138b83 : xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x000002000051af9b : xor edx, edx ; mov ecx, ebx ; call 0x200004b71ea
0x00000200006f9e57 : xor edx, edx ; mov ecx, r15d ; call 0x200006f6157
0x0000020000545db8 : xor edx, edx ; mov qword ptr [rsp + 0x20], rax ; call 0x200000a2049
0x000002000051db96 : xor edx, edx ; mov qword ptr [rsp + 0x38], rbx ; call rdi
0x00000200006a1158 : xor edx, edx ; mov rax, qword ptr [rax + 0x210] ; jmp rax
0x000002000015a246 : xor edx, edx ; mov rax, rdx ; ret
0x00000200003c2dce : xor edx, edx ; mov rcx, r13 ; call 0x2000026f017
0x0000020000402dc6 : xor edx, edx ; mov rcx, r14 ; call 0x2000026f017
0x000002000066771c : xor edx, edx ; mov rcx, rax ; call 0x200000a3957
0x000002000047649f : xor edx, edx ; mov rcx, rax ; call 0x200000a3958
0x0000020000402d11 : xor edx, edx ; mov rcx, rax ; call 0x2000026f017
0x000002000064e1fc : xor edx, edx ; mov rcx, rax ; call 0x2000026f018
0x00000200004e2cd0 : xor edx, edx ; mov rcx, rbx ; call 0x20000104d38
0x0000020000512dd4 : xor edx, edx ; mov rcx, rbx ; call 0x2000026f017
0x0000020000642270 : xor edx, edx ; mov rcx, rbx ; call 0x2000026f018
0x000002000047fdff : xor edx, edx ; mov rcx, rbx ; call 0x2000043c047
0x00000200005c2e28 : xor edx, edx ; mov rcx, rdi ; call 0x200000cf0eb
0x000002000053da6a : xor edx, edx ; mov rcx, rdi ; call 0x2000015e538
0x00000200001b2d30 : xor edx, edx ; mov rcx, rdi ; call 0x2000026f017
0x0000020000644c89 : xor edx, edx ; mov rcx, rdi ; call 0x2000026f018
0x00000200005d5ae0 : xor edx, edx ; mov rcx, rdi ; call 0x20000441dd7
0x0000020000500635 : xor edx, edx ; mov rcx, rdi ; call r14
0x000002000055f104 : xor edx, edx ; mov rcx, rdi ; call rax
0x0000020000702d81 : xor edx, edx ; mov rcx, rsi ; call 0x2000026f017
0x0000020000642078 : xor edx, edx ; mov rcx, rsi ; call 0x2000026f018
0x00000200004e828b : xor edx, edx ; sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x000002000063f5da : xor edx, edx ; test al, 2 ; je 0x2000063f5ee ; jmp 0x2000026f019
0x00000200000041d3 : xor edx, edx ; test rax, rax ; jne 0x200000041e5 ; mov al, dl ; ret
0x00000200000041d3 : xor edx, edx ; test rax, rax ; jne 0x200000041e6 ; mov al, dl ; ret
0x00000200003dfe3f : xor edx, edx ; test rax, rax ; jne 0x200003dfe51 ; mov al, dl ; ret
0x00000200003dfe3f : xor edx, edx ; test rax, rax ; jne 0x200003dfe52 ; mov al, dl ; ret
0x00000200000b14b8 : xor edx, edx ; xor ecx, ecx ; call 0x200000dd796
0x0000020000144640 : xor edx, edx ; xor ecx, ecx ; call rax
0x00000200006171cc : xor edx, edx ; xor ecx, ecx ; mov qword ptr [rsp + 0x20], r15 ; call qword ptr [rsi]
0x0000020000396c9f : xor edx, edx ; xor r8b, r8b ; jmp 0x20000396c6f
0x0000020000426e59 : xor edx, esp ; ret 0x48ff
0x0000020000139a4b : xor edx, esp ; sbb al, byte ptr [rax] ; jne 0x20000139a58 ; ret
0x000002000018cf9d : xor esi, 0xffffffff ; dec dword ptr [rax + 0x3b] ; ret 0x577
0x0000020000101e49 : xor esi, dword ptr [rax] ; cli ; push rsi ; ret
0x00000200006df1a8 : xor esi, dword ptr [rbx] ; leave ; call rdi
0x000002000003f9cf : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000013fd05 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001d2c75 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x000002000013c3d1 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret 0xb948
0x0000020000145fb7 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret 0xbb49
0x000002000003f9cd : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001d2c73 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x0000020000145fb5 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret 0xbb49
0x000002000003f9cb : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001d2c71 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret 0xd148
0x0000020000145fb3 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rcx + 0x23] ; ret 0xbb49
0x000002000049168f : xor esi, dword ptr [rdx - 0x16] ; mov rcx, r14 ; call 0x200000b5019
0x0000020000581aa4 : xor esi, dword ptr [rdx - 0x3b7cb701] ; push rax ; pop rbx ; ret
0x000002000039b9d9 : xor esi, dword ptr [rsi] ; in eax, dx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000413fff : xor esi, eax ; inc dword ptr [rdx + rcx*4 + 0x5b] ; sbb eax, dword ptr [rcx - 0xa] ; ret
0x000002000066432f : xor esi, esi ; call 0x20000150580
0x00000200003ba7bc : xor esi, esi ; jmp 0x200003ba6b9
0x0000020000005cce : xor esi, esi ; mov rdx, rbx ; mov rcx, r13 ; call r15
0x0000020000575780 : xor esi, esi ; ret
0x00000200001bb1cd : xor esp, 0x4c001ba2 ; add eax, ecx ; jmp r8
0x000002000017161d : xor esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000002000041a9bd : xor esp, edi ; inc dword ptr [rcx - 0x75] ; ret
0x000002000048a44b : xor esp, esi ; ret 0x4cff
0x0000020000065275 : xor esp, esp ; call r15
0x0000020000144a2b : xor qword ptr [r8 - 0x39], rcx ; ret 1
0x00000200000d8647 : xor qword ptr [rax + 8], 1 ; mov qword ptr [rbx], r14 ; jmp 0x200000d861d
0x000002000064ca15 : xor r10d, r10d ; mov eax, r10d ; ret
0x0000020000411cd1 : xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000065274 : xor r12d, r12d ; call r15
0x00000200003ba7bb : xor r14d, r14d ; jmp 0x200003ba6ba
0x0000020000364072 : xor r15, r15 ; inc dword ptr [rcx + 3] ; ret 0x588
0x00000200005015b1 : xor r15b, r15b ; ret
0x00000200000905b9 : xor r8, qword ptr [r13 + 0x5a] ; and eax, dword ptr [rcx] ; ret 0xfa65
0x00000200000228d0 : xor r8, qword ptr [rax] ; sub rax, rcx ; ret
0x00000200003f95a7 : xor r8, rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000054392b : xor r8, rax ; ret
0x00000200001dcff6 : xor r8b, bpl ; ret
0x0000020000408237 : xor r8b, bpl ; ret 0xcb18
0x00000200003f3637 : xor r8b, bpl ; ret 0xcc64
0x00000200004072d6 : xor r8b, r13b ; and edx, esi ; ret
0x0000020000443c01 : xor r8b, r13b ; cmp dl, dh ; ret 0x81ff
0x00000200004495bd : xor r8b, r13b ; jl 0x2000044955f ; ret 0xe9ff
0x00000200003f9aea : xor r8b, r13b ; ret
0x00000200003d11a7 : xor r8b, r13b ; ret 0xca1b
0x0000020000396ca1 : xor r8b, r8b ; jmp 0x20000396c6d
0x00000200000a8bc1 : xor r8d, r8d ; call 0x200000a4e85
0x00000200000a544e : xor r8d, r8d ; call 0x200000a4e89
0x0000020000175f1f : xor r8d, r8d ; call rax
0x00000200001ea5f0 : xor r8d, r8d ; jmp 0x200000b68d7
0x00000200005fa945 : xor r8d, r8d ; jmp 0x2000043336c
0x000002000045c4ef : xor r8d, r8d ; jmp 0x2000045c37b
0x00000200004fa557 : xor r8d, r8d ; jmp 0x200004fa523
0x0000020000018018 : xor r8d, r8d ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x000002000059a692 : xor r8d, r8d ; mov dword ptr [rsp + 0x20], ebx ; call 0x200003c68f5
0x000002000012f3f1 : xor r8d, r8d ; mov eax, r8d ; ret
0x0000020000373f8d : xor r8d, r8d ; mov ecx, ebx ; call rax
0x00000200003b71d9 : xor r8d, r8d ; mov edx, r15d ; call 0x200003b340c
0x000002000046f0c3 : xor r8d, r8d ; mov edx, r15d ; mov rcx, rdi ; call rax
0x000002000000b9f4 : xor r8d, r8d ; mov rcx, r10 ; call r10
0x0000020000143a26 : xor r8d, r8d ; mov rcx, rbx ; call 0x2000004fd28
0x000002000041f4d7 : xor r8d, r8d ; mov rcx, rbx ; call rax
0x00000200004fd822 : xor r8d, r8d ; mov rcx, rdi ; call 0x2000012ac51
0x00000200004eb486 : xor r8d, r8d ; mov rcx, rdi ; call r15
0x0000020000544a8c : xor r8d, r8d ; mov rdx, r14 ; call 0x2000016af89
0x0000020000584e4e : xor r8d, r8d ; mov rdx, rsi ; call 0x200005810f8
0x00000200002002a1 : xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200005cded2 : xor r8d, r8d ; mov rdx, rsi ; mov rcx, r12 ; call rax
0x00000200005e5dbc : xor r8d, r8d ; xor edx, edx ; call 0x200000a2047
0x0000020000477f0d : xor r8d, r8d ; xor edx, edx ; call 0x200000a2048
0x0000020000188c1d : xor r8d, r8d ; xor edx, edx ; call 0x200000a4e87
0x0000020000477cfe : xor r8d, r8d ; xor edx, edx ; call 0x200000a4e88
0x0000020000588e0f : xor r8d, r8d ; xor edx, edx ; call 0x200000b5067
0x000002000036a28f : xor r8d, r8d ; xor edx, edx ; call 0x20000386577
0x0000020000476e55 : xor r8d, r8d ; xor edx, edx ; call qword ptr [rdi]
0x0000020000150421 : xor r8d, r8d ; xor edx, edx ; call r9
0x000002000051af98 : xor r8d, r8d ; xor edx, edx ; mov ecx, ebx ; call 0x200004b71ed
0x00000200000b14b5 : xor r8d, r8d ; xor edx, edx ; xor ecx, ecx ; call 0x200000dd799
0x00000200005ebf18 : xor r9b, r13b ; ret 0xffe5
0x000002000057e00e : xor r9b, r9b ; mov al, r9b ; ret
0x00000200003feae4 : xor r9d, r8d ; mov eax, r9d ; ret
0x000002000056dacd : xor r9d, r9d ; call 0x2000019a812
0x00000200005cbf92 : xor r9d, r9d ; call r10
0x00000200003cdd2c : xor r9d, r9d ; jmp 0x200003cdcf7
0x00000200003d5f7d : xor r9d, r9d ; jmp 0x200003d5f11
0x00000200005fa01e : xor r9d, r9d ; jmp 0x200005f9fea
0x00000200003b6819 : xor r9d, r9d ; jmp rax
0x000002000016beac : xor r9d, r9d ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x0000020000191e52 : xor r9d, r9d ; mov eax, r9d ; ret
0x000002000047754c : xor r9d, r9d ; mov r8d, ebx ; add ecx, 0x1c ; call rax
0x0000020000640433 : xor r9d, r9d ; test rax, rax ; jne 0x20000640446 ; ret
0x0000020000396c9c : xor r9d, r9d ; xor edx, edx ; xor r8b, r8b ; jmp 0x20000396c72
0x00000200003a1760 : xor rax, 0x349fff3 ; ret
0x000002000004fb2b : xor rax, rax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000015925b : xor rax, rax ; add rsp, 0x20 ; pop r15 ; ret
0x000002000049f536 : xor rax, rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bf015 : xor rax, rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b97d1 : xor rax, rax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000007352a : xor rax, rax ; ret
0x0000020000019bdf : xor rcx, rdx ; xor rdx, qword ptr [rax] ; jmp rdx
0x0000020000018c37 : xor rcx, rsp ; call 0x200000a4e55
0x0000020000475133 : xor rcx, rsp ; call 0x200000a4e56
0x0000020000476843 : xor rcx, rsp ; call 0x200000a4e57
0x000002000048490c : xor rcx, rsp ; call 0x200000a4e58
0x00000200006e78d2 : xor rdx, qword ptr [r10] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000019be2 : xor rdx, qword ptr [rax] ; jmp rdx
0x000002000019ed42 : xor rdx, rax ; cmp rcx, r10 ; jb 0x2000019ed32 ; ret
0x0000020000492ded : xor rdx, rdx ; call 0x2000026f015
0x00000200004baa29 : xor rdx, rdx ; mov cl, byte ptr [rax + 0x4c] ; call 0x200000dbad9
0x0000020000091eef : xor spl, byte ptr [rip - 0x61f25bcc] ; lodsd eax, dword ptr [rsi] ; ret 0xac4b
0x000002000019bf3f : xrstor ptr [rcx] ; mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000019bf4e : xrstor ptr [rcx] ; ret
0x000002000019bf0b : xsave ptr [rcx] ; ret

Unique gadgets found: 49677
